<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for typescript - TypeScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for typescript.</description>
        <lastBuildDate>Wed, 01 Oct 2025 00:05:30 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[kamranahmedse/developer-roadmap]]></title>
            <link>https://github.com/kamranahmedse/developer-roadmap</link>
            <guid>https://github.com/kamranahmedse/developer-roadmap</guid>
            <pubDate>Wed, 01 Oct 2025 00:05:30 GMT</pubDate>
            <description><![CDATA[Interactive roadmaps, guides and other educational content to help developers grow in their careers.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/kamranahmedse/developer-roadmap">kamranahmedse/developer-roadmap</a></h1>
            <p>Interactive roadmaps, guides and other educational content to help developers grow in their careers.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 339,051</p>
            <p>Forks: 43,005</p>
            <p>Stars today: 483 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[anthropics/claude-code]]></title>
            <link>https://github.com/anthropics/claude-code</link>
            <guid>https://github.com/anthropics/claude-code</guid>
            <pubDate>Wed, 01 Oct 2025 00:05:29 GMT</pubDate>
            <description><![CDATA[Claude Code is an agentic coding tool that lives in your terminal, understands your codebase, and helps you code faster by executing routine tasks, explaining complex code, and handling git workflows - all through natural language commands.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/anthropics/claude-code">anthropics/claude-code</a></h1>
            <p>Claude Code is an agentic coding tool that lives in your terminal, understands your codebase, and helps you code faster by executing routine tasks, explaining complex code, and handling git workflows - all through natural language commands.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 34,933</p>
            <p>Forks: 2,159</p>
            <p>Stars today: 298 stars today</p>
            <h2>README</h2><pre># Claude Code

![](https://img.shields.io/badge/Node.js-18%2B-brightgreen?style=flat-square) [![npm]](https://www.npmjs.com/package/@anthropic-ai/claude-code)

[npm]: https://img.shields.io/npm/v/@anthropic-ai/claude-code.svg?style=flat-square

Claude Code is an agentic coding tool that lives in your terminal, understands your codebase, and helps you code faster by executing routine tasks, explaining complex code, and handling git workflows -- all through natural language commands. Use it in your terminal, IDE, or tag @claude on Github.

**Learn more in the [official documentation](https://docs.anthropic.com/en/docs/claude-code/overview)**.

&lt;img src=&quot;./demo.gif&quot; /&gt;

## Get started

1. Install Claude Code:

```sh
npm install -g @anthropic-ai/claude-code
```

2. Navigate to your project directory and run `claude`.

## Reporting Bugs

We welcome your feedback. Use the `/bug` command to report issues directly within Claude Code, or file a [GitHub issue](https://github.com/anthropics/claude-code/issues).

## Connect on Discord

Join the [Claude Developers Discord](https://anthropic.com/discord) to connect with other developers using Claude Code. Get help, share feedback, and discuss your projects with the community.

## Data collection, usage, and retention

When you use Claude Code, we collect feedback, which includes usage data (such as code acceptance or rejections), associated conversation data, and user feedback submitted via the `/bug` command.

### How we use your data

See our [data usage policies](https://docs.anthropic.com/en/docs/claude-code/data-usage).

### Privacy safeguards

We have implemented several safeguards to protect your data, including limited retention periods for sensitive information, restricted access to user session data, and clear policies against using feedback for model training.

For full details, please review our [Commercial Terms of Service](https://www.anthropic.com/legal/commercial-terms) and [Privacy Policy](https://www.anthropic.com/legal/privacy).
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[cjpais/Handy]]></title>
            <link>https://github.com/cjpais/Handy</link>
            <guid>https://github.com/cjpais/Handy</guid>
            <pubDate>Wed, 01 Oct 2025 00:05:28 GMT</pubDate>
            <description><![CDATA[A free, open source, and extensible speech-to-text application that works completely offline.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/cjpais/Handy">cjpais/Handy</a></h1>
            <p>A free, open source, and extensible speech-to-text application that works completely offline.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 1,093</p>
            <p>Forks: 70</p>
            <p>Stars today: 67 stars today</p>
            <h2>README</h2><pre># Handy

[![Discord](https://img.shields.io/badge/Discord-%235865F2.svg?style=for-the-badge&amp;logo=discord&amp;logoColor=white)](https://discord.com/invite/WVBeWsNXK4)

**A free, open source, and extensible speech-to-text application that works completely offline.**

Handy is a cross-platform desktop application built with Tauri (Rust + React/TypeScript) that provides simple, privacy-focused speech transcription. Press a shortcut, speak, and have your words appear in any text field—all without sending your voice to the cloud.

## Why Handy?

Handy was created to fill the gap for a truly open source, extensible speech-to-text tool. As stated on [handy.computer](https://handy.computer):

- **Free**: Accessibility tooling belongs in everyone&#039;s hands, not behind a paywall
- **Open Source**: Together we can build further. Extend Handy for yourself and contribute to something bigger
- **Private**: Your voice stays on your computer. Get transcriptions without sending audio to the cloud
- **Simple**: One tool, one job. Transcribe what you say and put it into a text box

Handy isn&#039;t trying to be the best speech-to-text app—it&#039;s trying to be the most forkable one.

## How It Works

1. **Press** a configurable keyboard shortcut to start/stop recording (or use push-to-talk mode)
2. **Speak** your words while the shortcut is active
3. **Release** and Handy processes your speech using Whisper
4. **Get** your transcribed text pasted directly into whatever app you&#039;re using

The process is entirely local:
- Silence is filtered using VAD (Voice Activity Detection) with Silero
- Transcription uses your choice of models:
  - **Whisper models** (Small/Medium/Turbo/Large) with GPU acceleration when available
  - **Parakeet V3** - CPU-optimized model with excellent performance and automatic language detection
- Works on Windows, macOS, and Linux

## Quick Start

### Installation

1. Download the latest release from the [releases page](https://github.com/cjpais/Handy/releases) or the [website](https://handy.computer)
2. Install the application following platform-specific instructions
3. Launch Handy and grant necessary system permissions (microphone, accessibility)
4. Configure your preferred keyboard shortcuts in Settings
5. Start transcribing!

### Development Setup

For detailed build instructions including platform-specific requirements, see [BUILD.md](BUILD.md).

## Architecture

Handy is built as a Tauri application combining:

- **Frontend**: React + TypeScript with Tailwind CSS for the settings UI
- **Backend**: Rust for system integration, audio processing, and ML inference
- **Core Libraries**:
  - `whisper-rs`: Local speech recognition with Whisper models
  - `transcription-rs`: CPU-optimized speech recognition with Parakeet models
  - `cpal`: Cross-platform audio I/O
  - `vad-rs`: Voice Activity Detection
  - `rdev`: Global keyboard shortcuts and system events
  - `rubato`: Audio resampling

## Known Issues &amp; Current Limitations

This project is actively being developed and has some [known issues](https://github.com/cjpais/Handy/issues). We believe in transparency about the current state:

### Platform Support
- **Apple Silicon Macs**
- **x64 Windows**
- **x64 Linux**

### System Requirements/Recommendations

The following are recommendations for running Handy on your own machine. If you don&#039;t meet the system requirements, the performance of the application may be degraded. We are working on improving the performance across all kinds of computers and hardware.

**For Whisper Models:**
- **macOS**: M series Mac
- **Windows**: Intel, AMD, or NVIDIA GPU
- **Linux**: Intel, AMD, or NVIDIA GPU
  * Ubuntu 22.04, 24.04

**For Parakeet V3 Model:**
- **CPU-only operation** - runs on a wide variety of hardware
- **Minimum**: Intel Skylake (6th gen) or equivalent AMD processors
- **Performance**: ~5x real-time speed on mid-range hardware (tested on i5)
- **Automatic language detection** - no manual language selection required

### How to Contribute

1. **Check existing issues** at [github.com/cjpais/Handy/issues](https://github.com/cjpais/Handy/issues)
2. **Fork the repository** and create a feature branch
3. **Test thoroughly** on your target platform
4. **Submit a pull request** with clear description of changes
5. **Join the discussion** - reach out at [contact@handy.computer](mailto:contact@handy.computer)

The goal is to create both a useful tool and a foundation for others to build upon—a well-patterned, simple codebase that serves the community.

## Sponsors

&lt;div align=&quot;center&quot;&gt;
  We&#039;re grateful for the support of our sponsors who help make Handy possible:
  &lt;br&gt;&lt;br&gt;
  &lt;a href=&quot;https://wordcab.com&quot;&gt;
    &lt;img src=&quot;sponsor-images/wordcab.png&quot; alt=&quot;Wordcab&quot; width=&quot;120&quot; height=&quot;120&quot;&gt;
  &lt;/a&gt;
  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
  &lt;a href=&quot;https://github.com/epicenter-so/epicenter&quot;&gt;
    &lt;img src=&quot;sponsor-images/epicenter.png&quot; alt=&quot;Epicenter&quot; width=&quot;120&quot; height=&quot;120&quot;&gt;
  &lt;/a&gt;
&lt;/div&gt;

## Related Projects

- **[Handy CLI](https://github.com/cjpais/handy-cli)** - The original Python command-line version
- **[handy.computer](https://handy.computer)** - Project website with demos and documentation

## License

MIT License - see [LICENSE](LICENSE) file for details.

## Acknowledgments

- **Whisper** by OpenAI for the speech recognition model
- **whisper.cpp and ggml** for amazing cross-platform whisper inference/acceleration
- **Silero** for great lightweight VAD
- **Tauri** team for the excellent Rust-based app framework
- **Community contributors** helping make Handy better

---

*&quot;Your search for the right speech-to-text tool can end here—not because Handy is perfect, but because you can make it perfect for you.&quot;*
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[logto-io/logto]]></title>
            <link>https://github.com/logto-io/logto</link>
            <guid>https://github.com/logto-io/logto</guid>
            <pubDate>Wed, 01 Oct 2025 00:05:27 GMT</pubDate>
            <description><![CDATA[🧑‍🚀 Authentication and authorization infrastructure for SaaS and AI apps, built on OIDC and OAuth 2.1 with multi-tenancy, SSO, and RBAC.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/logto-io/logto">logto-io/logto</a></h1>
            <p>🧑‍🚀 Authentication and authorization infrastructure for SaaS and AI apps, built on OIDC and OAuth 2.1 with multi-tenancy, SSO, and RBAC.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 10,841</p>
            <p>Forks: 624</p>
            <p>Stars today: 2 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://logto.io/?utm_source=github&amp;utm_medium=readme&quot; target=&quot;_blank&quot; align=&quot;center&quot; alt=&quot;Go to Logto website&quot;&gt;
    &lt;picture&gt;
      &lt;source width=&quot;200&quot; media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://github.com/logto-io/.github/raw/master/profile/logto-logo-dark.svg&quot;&gt;
      &lt;source width=&quot;200&quot; media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://github.com/logto-io/.github/raw/master/profile/logto-logo-light.svg&quot;&gt;
      &lt;img width=&quot;200&quot; src=&quot;https://github.com/logto-io/logto/raw/master/logo.png&quot; alt=&quot;Logto logo&quot;&gt;
    &lt;/picture&gt;
  &lt;/a&gt;
&lt;/p&gt;

[![discord](https://img.shields.io/discord/965845662535147551?color=5865f2&amp;label=discord)](https://discord.gg/vRvwuwgpVX)
[![checks](https://img.shields.io/github/checks-status/logto-io/logto/master)](https://github.com/logto-io/logto/actions?query=branch%3Amaster)
[![release](https://img.shields.io/github/v/release/logto-io/logto?color=3a3c3f)](https://github.com/logto-io/logto/releases)
[![core coverage](https://img.shields.io/codecov/c/github/logto-io/logto?label=core%20coverage)](https://app.codecov.io/gh/logto-io/logto)
[![cloud](https://img.shields.io/badge/cloud-available-7958ff)](https://cloud.logto.io/?sign_up=true&amp;utm_source=github&amp;utm_medium=repo_logto)
[![gitpod](https://img.shields.io/badge/gitpod-available-f09439)](https://gitpod.io/#https://github.com/logto-io/demo)
[![render](https://img.shields.io/badge/render-deploy-5364e9)](https://render.com/deploy?repo=https://github.com/logto-io/logto)

# Logto

**Logto is the modern, open-source auth infrastructure for SaaS and AI apps.**

It takes the pain out of OIDC and OAuth 2.1 and makes it easy to build secure, production-ready auth with multi-tenancy, enterprise SSO, and RBAC.

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://logto.io/&quot;&gt;website&lt;/a&gt; •
  &lt;a href=&quot;https://cloud.logto.io/&quot;&gt;cloud&lt;/a&gt; •
  &lt;a href=&quot;https://docs.logto.io&quot;&gt;docs&lt;/a&gt; •
  &lt;a href=&quot;https://openapi.logto.io/&quot;&gt;api&lt;/a&gt; •
  &lt;a href=&quot;https://blog.logto.io/&quot;&gt;blog&lt;/a&gt; •
  &lt;a href=&quot;https://auth-wiki.logto.io/&quot;&gt;auth wiki&lt;/a&gt; •
  &lt;a href=&quot;https://logto.io/subscribe&quot;&gt;newsletter&lt;/a&gt;
&lt;/p&gt;

![Logto features](./assets/logto-features.png)

## Why Logto?

Built for teams scaling SaaS, AI, and agent-based platforms without the usual auth headaches.

With Logto, you get:

- **Multi-tenancy, enterprise SSO, and RBAC**: ready to use, no workarounds.
- **Pre-built sign-in flows**, customizable UIs, and SDKs for 30+ frameworks.
- **Full support for OIDC, OAuth 2.1, and SAML** without the protocol pain.
- **Works out-of-the-box for Model Context Protocol and agent-based AI architectures**.

[🗺️ See all features →](https://docs.logto.io/?ref=readme)

## Get started

Pick your path:

- [**Logto Cloud**](https://cloud.logto.io/?sign_up=true&amp;ref=readme): The fastest way to try Logto. Fully managed, zero setup.
- [**Launch Logto in GitPod**](https://gitpod.io/#https://github.com/logto-io/demo): Start Logto OSS in seconds.

  Wait for the message `App is running at https://3002-...gitpod.io`, then click the URL starting with `https://3002-` to continue.

- **Local development:**  

  ```bash
  # Using Docker Compose(requires Docker Desktop)
  curl -fsSL https://raw.githubusercontent.com/logto-io/logto/HEAD/docker-compose.yml | \
  docker compose -p logto -f - up
  
  # Using Node.js (requires PostgreSQL)
  npm init @logto
  ```

[📚 Full OSS installation guide →](https://docs.logto.io/logto-oss/get-started-with-oss?ref=readme)

## Integrate anywhere

Logto supports all your apps, APIs, and services with industry-standard protocols.

- **SDKs for 30+ frameworks**: React, Next.js, Angular, Vue, Flutter, Go, Python, and more.
- **Connect to any IdP**: Google, Facebook, Azure AD, Okta, and more.
- **Flexible integration**: SPAs, web apps, mobile apps, APIs, M2M, CLI tools.
- **Ready for Model Context Protocol and agent-based architectures**.

[🚀 Explore quick starts →](https://docs.logto.io/quick-starts?ref=readme)

[🔌 See all connectors →](https://docs.logto.io/integrations?ref=readme)

## Showcase

**Developer-first SDKs**: Install in minutes with clear guides.

![Logto auth SDK showcase](./assets/showcase-logto-auth-sdks.gif)

**User-friendly auth flows**: Sign-up, sign-in, social login, Google One Tap, MFA, SSO.

![Logto sign-in experience showcase](./assets/showcase-logto-sign-in-exeperience.gif)

**Multi-tenancy &amp; organizations**: Organization RBAC, member invites, just-in-time provisioning, and more.

![Logto multi-tenancy showcase](./assets/showcase-logto-multi-tenancy.gif)

## Support Logto

If you find Logto helpful, here&#039;s how you can support us:

- ⭐ **Star this repo** to show your support!
- 💬 [Join our Discord](https://discord.gg/vRvwuwgpVX) for live discussions.
- 📢 Share Logto on [Twitter](https://twitter.com/intent/tweet?text=Hey%20devs%21%20Need%20a%20better%20auth%20solution%3F%20Check%20out%20%40logto_io%20%E2%80%94%20it%E2%80%99s%20like%20Auth0%2FCognito%2FFirebase%20but%20open-source%2C%20modern%2C%20and%20way%20easier%20to%20use%21%20Supports%20OIDC%2C%20OAuth%202.0%2C%20SAML%2C%20and%20also%20works%20perfectly%20for%20SaaS%20apps.%20%E2%9C%A8%20https%3A%2F%2Flogto.io%20%23Auth%20%23Identity%20%23OpenSource%20%23DevTools), [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Flogto.io), [Reddit](https://reddit.com/submit?url=https%3A%2F%2Flogto.io&amp;title=Tired%20of%20Auth0%2FCognito%2FFirebase%3F%20Logto%20is%20the%20open-source%20auth%20alternative%20you%E2%80%99ve%20been%20missing%21%20Supports%20OIDC%2C%20OAuth%202.0%2C%20SAML%2C%20and%20works%20like%20magic%20for%20modern%20apps%20and%20SaaS%20products.), [Telegram](https://t.me/share/url?url=https%3A%2F%2Flogto.io&amp;text=Check%20out%20Logto%20%E2%80%94%20the%20better%20auth%20and%20identity%20infrastructure%21%20Open-source%2FCloud%20alternative%20to%20Auth0%2C%20Cognito%2C%20and%20Firebase.%20Supports%20all%20the%20standards%20%28OIDC%2C%20OAuth%2C%20SAML%29%20and%20is%20perfect%20for%20modern%20apps%20or%20SaaS%20products.%20https%3A%2F%2Flogto.io), [WhatsApp](https://api.whatsapp.com/send?text=Hey%21%20%F0%9F%91%8B%20Found%20this%20awesome%20auth%20tool%20called%20%2ALogto%2A%20%E2%80%94%20it%E2%80%99s%20open-source%2C%20way%20simpler%20than%20Auth0%2FCognito%2FFirebase%2C%20and%20supports%20OIDC%2FOAuth%2FSAML.%20Perfect%20for%20building%20CIAM%20system%20without%20the%20hassle.%20You%20gotta%20try%20it%3A%20https%3A%2F%2Flogto.io).
- 🏆 Write a review or tutorial on [dev.to](https://dev.to/logto), [Medium](https://medium.com/@logto), [G2](https://www.g2.com/products/logto/reviewer_verification) or your blog.
- 💬 [Share your use case](mailto:contact@logto.io?subject=[Share%20Logto%20User%20Story]) with us and get featured on the [Logto website](https://logto.io/).
- 🙋 [Open an issue](https://github.com/logto-io/logto/issues/new) to report bugs or suggest features.
- 💻 [Contribute to Logto](https://github.com/logto-io/logto/blob/master/.github/CONTRIBUTING.md) - we&#039;d love your help! Check out [Logto awesome](https://github.com/logto-io/logto/blob/master/AWESOME.md) of community-contributed resources.

## Licensing

[MPL-2.0](LICENSE).

&lt;p align=&quot;right&quot;&gt;
⬆️ &lt;a href=&quot;#logto&quot;&gt;Back to top&lt;/a&gt;
&lt;/p&gt;
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[firecrawl/firecrawl]]></title>
            <link>https://github.com/firecrawl/firecrawl</link>
            <guid>https://github.com/firecrawl/firecrawl</guid>
            <pubDate>Wed, 01 Oct 2025 00:05:26 GMT</pubDate>
            <description><![CDATA[The Web Data API for AI - Turn entire websites into LLM-ready markdown or structured data 🔥]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/firecrawl/firecrawl">firecrawl/firecrawl</a></h1>
            <p>The Web Data API for AI - Turn entire websites into LLM-ready markdown or structured data 🔥</p>
            <p>Language: TypeScript</p>
            <p>Stars: 60,699</p>
            <p>Forks: 4,934</p>
            <p>Stars today: 239 stars today</p>
            <h2>README</h2><pre>&lt;h3 align=&quot;center&quot;&gt;
  &lt;a name=&quot;readme-top&quot;&gt;&lt;/a&gt;
  &lt;img
    src=&quot;https://raw.githubusercontent.com/firecrawl/firecrawl/main/img/firecrawl_logo.png&quot;
    height=&quot;200&quot;
  &gt;
&lt;/h3&gt;
&lt;div align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://github.com/firecrawl/firecrawl/blob/main/LICENSE&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/github/license/firecrawl/firecrawl&quot; alt=&quot;License&quot;&gt;
&lt;/a&gt;
    &lt;a href=&quot;https://pepy.tech/project/firecrawl-py&quot;&gt;
  &lt;img src=&quot;https://static.pepy.tech/badge/firecrawl-py&quot; alt=&quot;Downloads&quot;&gt;
&lt;/a&gt;
&lt;a href=&quot;https://GitHub.com/firecrawl/firecrawl/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/github/contributors/firecrawl/firecrawl.svg&quot; alt=&quot;GitHub Contributors&quot;&gt;
&lt;/a&gt;
&lt;a href=&quot;https://firecrawl.dev&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/badge/Visit-firecrawl.dev-orange&quot; alt=&quot;Visit firecrawl.dev&quot;&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;div&gt;
  &lt;p align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://twitter.com/firecrawl_dev&quot;&gt;
      &lt;img src=&quot;https://img.shields.io/badge/Follow%20on%20X-000000?style=for-the-badge&amp;logo=x&amp;logoColor=white&quot; alt=&quot;Follow on X&quot; /&gt;
    &lt;/a&gt;
    &lt;a href=&quot;https://www.linkedin.com/company/104100957&quot;&gt;
      &lt;img src=&quot;https://img.shields.io/badge/Follow%20on%20LinkedIn-0077B5?style=for-the-badge&amp;logo=linkedin&amp;logoColor=white&quot; alt=&quot;Follow on LinkedIn&quot; /&gt;
    &lt;/a&gt;
    &lt;a href=&quot;https://discord.com/invite/gSmWdAkdwd&quot;&gt;
      &lt;img src=&quot;https://img.shields.io/badge/Join%20our%20Discord-5865F2?style=for-the-badge&amp;logo=discord&amp;logoColor=white&quot; alt=&quot;Join our Discord&quot; /&gt;
    &lt;/a&gt;
  &lt;/p&gt;
&lt;/div&gt;

# 🔥 Firecrawl

Empower your AI apps with clean data from any website. Featuring advanced scraping, crawling, and data extraction capabilities.

_This repository is in development, and we’re still integrating custom modules into the mono repo. It&#039;s not fully ready for self-hosted deployment yet, but you can run it locally._

## What is Firecrawl?

[Firecrawl](https://firecrawl.dev?ref=github) is an API service that takes a URL, crawls it, and converts it into clean markdown or structured data. We crawl all accessible subpages and give you clean data for each. No sitemap required. Check out our [documentation](https://docs.firecrawl.dev).

_Pst. hey, you, join our stargazers :)_

&lt;a href=&quot;https://github.com/firecrawl/firecrawl&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/github/stars/firecrawl/firecrawl.svg?style=social&amp;label=Star&amp;maxAge=2592000&quot; alt=&quot;GitHub stars&quot;&gt;
&lt;/a&gt;

## How to use it?

We provide an easy to use API with our hosted version. You can find the playground and documentation [here](https://firecrawl.dev/playground). You can also self host the backend if you&#039;d like.

Check out the following resources to get started:
- [x] **API**: [Documentation](https://docs.firecrawl.dev/api-reference/introduction)
- [x] **SDKs**: [Python](https://docs.firecrawl.dev/sdks/python), [Node](https://docs.firecrawl.dev/sdks/node)
- [x] **LLM Frameworks**: [Langchain (python)](https://python.langchain.com/docs/integrations/document_loaders/firecrawl/), [Langchain (js)](https://js.langchain.com/docs/integrations/document_loaders/web_loaders/firecrawl), [Llama Index](https://docs.llamaindex.ai/en/latest/examples/data_connectors/WebPageDemo/#using-firecrawl-reader), [Crew.ai](https://docs.crewai.com/), [Composio](https://composio.dev/tools/firecrawl/all), [PraisonAI](https://docs.praison.ai/firecrawl/), [Superinterface](https://superinterface.ai/docs/assistants/functions/firecrawl), [Vectorize](https://docs.vectorize.io/integrations/source-connectors/firecrawl)
- [x] **Low-code Frameworks**: [Dify](https://dify.ai/blog/dify-ai-blog-integrated-with-firecrawl), [Langflow](https://docs.langflow.org/), [Flowise AI](https://docs.flowiseai.com/integrations/langchain/document-loaders/firecrawl), [Cargo](https://docs.getcargo.io/integration/firecrawl), [Pipedream](https://pipedream.com/apps/firecrawl/)
- [x] **Community SDKs**: [Go](https://docs.firecrawl.dev/sdks/go), [Rust](https://docs.firecrawl.dev/sdks/rust)
- [x] **Others**: [Zapier](https://zapier.com/apps/firecrawl/integrations), [Pabbly Connect](https://www.pabbly.com/connect/integrations/firecrawl/)
- [ ] Want an SDK or Integration? Let us know by opening an issue.

To run locally, refer to guide [here](https://github.com/firecrawl/firecrawl/blob/main/CONTRIBUTING.md).

### API Key

To use the API, you need to sign up on [Firecrawl](https://firecrawl.dev) and get an API key.

### Features

- [**Scrape**](#scraping): scrapes a URL and get its content in LLM-ready format (markdown, structured data via [LLM Extract](#llm-extraction-beta), screenshot, html)
- [**Crawl**](#crawling): scrapes all the URLs of a web page and return content in LLM-ready format
- [**Map**](#map): input a website and get all the website urls - extremely fast
- [**Search**](#search): search the web and get full content from results
- [**Extract**](#extract): get structured data from single page, multiple pages or entire websites with AI.

### Powerful Capabilities
- **LLM-ready formats**: markdown, structured data, screenshot, HTML, links, metadata
- **The hard stuff**: proxies, anti-bot mechanisms, dynamic content (js-rendered), output parsing, orchestration
- **Customizability**: exclude tags, crawl behind auth walls with custom headers, max crawl depth, etc...
- **Media parsing**: pdfs, docx, images
- **Reliability first**: designed to get the data you need - no matter how hard it is
- **Actions**: click, scroll, input, wait and more before extracting data
- **Batching**: scrape thousands of URLs at the same time with a new async endpoint
- **Change Tracking**: monitor and detect changes in website content over time

You can find all of Firecrawl&#039;s capabilities and how to use them in our [documentation](https://docs.firecrawl.dev)

### Crawling

Used to crawl a URL and all accessible subpages. This submits a crawl job and returns a job ID to check the status of the crawl.

```bash
curl -X POST https://api.firecrawl.dev/v2/crawl \
    -H &#039;Content-Type: application/json&#039; \
    -H &#039;Authorization: Bearer fc-YOUR_API_KEY&#039; \
    -d &#039;{
      &quot;url&quot;: &quot;https://docs.firecrawl.dev&quot;,
      &quot;limit&quot;: 10,
      &quot;scrapeOptions&quot;: {
        &quot;formats&quot;: [&quot;markdown&quot;, &quot;html&quot;]
      }
    }&#039;
```

Returns a crawl job id and the url to check the status of the crawl.

```json
{
  &quot;success&quot;: true,
  &quot;id&quot;: &quot;123-456-789&quot;,
  &quot;url&quot;: &quot;https://api.firecrawl.dev/v2/crawl/123-456-789&quot;
}
```

### Check Crawl Job

Used to check the status of a crawl job and get its result.

```bash
curl -X GET https://api.firecrawl.dev/v2/crawl/123-456-789 \
  -H &#039;Content-Type: application/json&#039; \
  -H &#039;Authorization: Bearer YOUR_API_KEY&#039;
```

```json
{
  &quot;status&quot;: &quot;completed&quot;,
  &quot;total&quot;: 36,
  &quot;creditsUsed&quot;: 36,
  &quot;expiresAt&quot;: &quot;2024-00-00T00:00:00.000Z&quot;,
  &quot;data&quot;: [
    {
      &quot;markdown&quot;: &quot;[Firecrawl Docs home page![light logo](https://mintlify.s3-us-west-1.amazonaws.com/firecrawl/logo/light.svg)!...&quot;,
      &quot;html&quot;: &quot;&lt;!DOCTYPE html&gt;&lt;html lang=\&quot;en\&quot; class=\&quot;js-focus-visible lg:[--scroll-mt:9.5rem]\&quot; data-js-focus-visible=\&quot;\&quot;&gt;...&quot;,
      &quot;metadata&quot;: {
        &quot;title&quot;: &quot;Build a &#039;Chat with website&#039; using Groq Llama 3 | Firecrawl&quot;,
        &quot;language&quot;: &quot;en&quot;,
        &quot;sourceURL&quot;: &quot;https://docs.firecrawl.dev/learn/rag-llama3&quot;,
        &quot;description&quot;: &quot;Learn how to use Firecrawl, Groq Llama 3, and Langchain to build a &#039;Chat with your website&#039; bot.&quot;,
        &quot;ogLocaleAlternate&quot;: [],
        &quot;statusCode&quot;: 200
      }
    }
  ]
}
```

### Scraping

Used to scrape a URL and get its content in the specified formats.

```bash
curl -X POST https://api.firecrawl.dev/v2/scrape \
    -H &#039;Content-Type: application/json&#039; \
    -H &#039;Authorization: Bearer YOUR_API_KEY&#039; \
    -d &#039;{
      &quot;url&quot;: &quot;https://docs.firecrawl.dev&quot;,
      &quot;formats&quot; : [&quot;markdown&quot;, &quot;html&quot;]
    }&#039;
```

Response:

```json
{
  &quot;success&quot;: true,
  &quot;data&quot;: {
    &quot;markdown&quot;: &quot;Launch Week I is here! [See our Day 2 Release 🚀](https://www.firecrawl.dev/blog/launch-week-i-day-2-doubled-rate-limits)[💥 Get 2 months free...&quot;,
    &quot;html&quot;: &quot;&lt;!DOCTYPE html&gt;&lt;html lang=\&quot;en\&quot; class=\&quot;light\&quot; style=\&quot;color-scheme: light;\&quot;&gt;&lt;body class=\&quot;__variable_36bd41 __variable_d7dc5d font-inter ...&quot;,
    &quot;metadata&quot;: {
      &quot;title&quot;: &quot;Home - Firecrawl&quot;,
      &quot;description&quot;: &quot;Firecrawl crawls and converts any website into clean markdown.&quot;,
      &quot;language&quot;: &quot;en&quot;,
      &quot;keywords&quot;: &quot;Firecrawl,Markdown,Data,Mendable,Langchain&quot;,
      &quot;robots&quot;: &quot;follow, index&quot;,
      &quot;ogTitle&quot;: &quot;Firecrawl&quot;,
      &quot;ogDescription&quot;: &quot;Turn any website into LLM-ready data.&quot;,
      &quot;ogUrl&quot;: &quot;https://www.firecrawl.dev/&quot;,
      &quot;ogImage&quot;: &quot;https://www.firecrawl.dev/og.png?123&quot;,
      &quot;ogLocaleAlternate&quot;: [],
      &quot;ogSiteName&quot;: &quot;Firecrawl&quot;,
      &quot;sourceURL&quot;: &quot;https://firecrawl.dev&quot;,
      &quot;statusCode&quot;: 200
    }
  }
}
```

### Map

Used to map a URL and get urls of the website. This returns most links present on the website.

```bash cURL
curl -X POST https://api.firecrawl.dev/v2/map \
    -H &#039;Content-Type: application/json&#039; \
    -H &#039;Authorization: Bearer YOUR_API_KEY&#039; \
    -d &#039;{
      &quot;url&quot;: &quot;https://firecrawl.dev&quot;
    }&#039;
```

Response:

```json
{
  &quot;success&quot;: true,
  &quot;links&quot;: [
    { &quot;url&quot;: &quot;https://firecrawl.dev&quot;, &quot;title&quot;: &quot;Firecrawl&quot;, &quot;description&quot;: &quot;Firecrawl is a tool that allows you to crawl a website and get the data you need.&quot; },
    { &quot;url&quot;: &quot;https://www.firecrawl.dev/pricing&quot;, &quot;title&quot;: &quot;Firecrawl Pricing&quot;, &quot;description&quot;: &quot;Firecrawl Pricing&quot; },
    { &quot;url&quot;: &quot;https://www.firecrawl.dev/blog&quot;, &quot;title&quot;: &quot;Firecrawl Blog&quot;, &quot;description&quot;: &quot;Firecrawl Blog&quot; },
    { &quot;url&quot;: &quot;https://www.firecrawl.dev/playground&quot;, &quot;title&quot;: &quot;Firecrawl Playground&quot;, &quot;description&quot;: &quot;Firecrawl Playground&quot; },
    { &quot;url&quot;: &quot;https://www.firecrawl.dev/smart-crawl&quot;, &quot;title&quot;: &quot;Firecrawl Smart Crawl&quot;, &quot;description&quot;: &quot;Firecrawl Smart Crawl&quot; }
  ]
}
```

#### Map with search

Map with `search` param allows you to search for specific urls inside a website.

```bash cURL
curl -X POST https://api.firecrawl.dev/v2/map \
    -H &#039;Content-Type: application/json&#039; \
    -H &#039;Authorization: Bearer YOUR_API_KEY&#039; \
    -d &#039;{
      &quot;url&quot;: &quot;https://firecrawl.dev&quot;,
      &quot;search&quot;: &quot;docs&quot;
    }&#039;
```

Response will be an ordered list from the most relevant to the least relevant.

```json
{
  &quot;success&quot;: true,
  &quot;links&quot;: [
    { &quot;url&quot;: &quot;https://docs.firecrawl.dev&quot;, &quot;title&quot;: &quot;Firecrawl Docs&quot;, &quot;description&quot;: &quot;Firecrawl Docs&quot; },
    { &quot;url&quot;: &quot;https://docs.firecrawl.dev/sdks/python&quot;, &quot;title&quot;: &quot;Firecrawl Python SDK&quot;, &quot;description&quot;: &quot;Firecrawl Python SDK&quot; },
    { &quot;url&quot;: &quot;https://docs.firecrawl.dev/learn/rag-llama3&quot;, &quot;title&quot;: &quot;Firecrawl RAG Llama 3&quot;, &quot;description&quot;: &quot;Firecrawl RAG Llama 3&quot; }
  ]
}
```

### Search

Search the web and get full content from results

Firecrawl’s search API allows you to perform web searches and optionally scrape the search results in one operation.

- Choose specific output formats (markdown, HTML, links, screenshots)
- Search the web with customizable parameters (language, country, etc.)
- Optionally retrieve content from search results in various formats
- Control the number of results and set timeouts

```bash
curl -X POST https://api.firecrawl.dev/v2/search \
  -H &quot;Content-Type: application/json&quot; \
  -H &quot;Authorization: Bearer fc-YOUR_API_KEY&quot; \
  -d &#039;{
    &quot;query&quot;: &quot;what is firecrawl?&quot;,
    &quot;limit&quot;: 5
  }&#039;
```

#### Response

```json
{
  &quot;success&quot;: true,
  &quot;data&quot;: [
    {
      &quot;url&quot;: &quot;https://firecrawl.dev&quot;,
      &quot;title&quot;: &quot;Firecrawl | Home Page&quot;,
      &quot;description&quot;: &quot;Turn websites into LLM-ready data with Firecrawl&quot;
    },
    {
      &quot;url&quot;: &quot;https://docs.firecrawl.dev&quot;,
      &quot;title&quot;: &quot;Documentation | Firecrawl&quot;,
      &quot;description&quot;: &quot;Learn how to use Firecrawl in your own applications&quot;
    }
  ]
}
```

#### With content scraping

```bash
curl -X POST https://api.firecrawl.dev/v2/search \
  -H &quot;Content-Type: application/json&quot; \
  -H &quot;Authorization: Bearer fc-YOUR_API_KEY&quot; \
  -d &#039;{
    &quot;query&quot;: &quot;what is firecrawl?&quot;,
    &quot;limit&quot;: 5,
    &quot;scrapeOptions&quot;: {
      &quot;formats&quot;: [&quot;markdown&quot;, &quot;links&quot;]
    }
  }&#039;
```

### Extract (Beta)

Get structured data from entire websites with a prompt and/or a schema.

You can extract structured data from one or multiple URLs, including wildcards:

Single Page:
Example: https://firecrawl.dev/some-page

Multiple Pages / Full Domain
Example: https://firecrawl.dev/*

When you use /*, Firecrawl will automatically crawl and parse all URLs it can discover in that domain, then extract the requested data.

```bash
curl -X POST https://api.firecrawl.dev/v2/extract \
    -H &#039;Content-Type: application/json&#039; \
    -H &#039;Authorization: Bearer YOUR_API_KEY&#039; \
    -d &#039;{
      &quot;urls&quot;: [
        &quot;https://firecrawl.dev/*&quot;, 
        &quot;https://docs.firecrawl.dev/&quot;, 
        &quot;https://www.ycombinator.com/companies&quot;
      ],
      &quot;prompt&quot;: &quot;Extract the company mission, whether it is open source, and whether it is in Y Combinator from the page.&quot;,
      &quot;schema&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;company_mission&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;is_open_source&quot;: {
            &quot;type&quot;: &quot;boolean&quot;
          },
          &quot;is_in_yc&quot;: {
            &quot;type&quot;: &quot;boolean&quot;
          }
        },
        &quot;required&quot;: [
          &quot;company_mission&quot;,
          &quot;is_open_source&quot;,
          &quot;is_in_yc&quot;
        ]
      }
    }&#039;
```

```json
{
  &quot;success&quot;: true,
  &quot;id&quot;: &quot;44aa536d-f1cb-4706-ab87-ed0386685740&quot;,
  &quot;urlTrace&quot;: []
}
```

If you are using the sdks, it will auto pull the response for you:

```json
{
  &quot;success&quot;: true,
  &quot;data&quot;: {
    &quot;company_mission&quot;: &quot;Firecrawl is the easiest way to extract data from the web. Developers use us to reliably convert URLs into LLM-ready markdown or structured data with a single API call.&quot;,
    &quot;supports_sso&quot;: false,
    &quot;is_open_source&quot;: true,
    &quot;is_in_yc&quot;: true
  }
}
```

### LLM Extraction (Beta)

Used to extract structured data from scraped pages.

```bash
curl -X POST https://api.firecrawl.dev/v2/scrape \
  -H &#039;Content-Type: application/json&#039; \
  -H &#039;Authorization: Bearer YOUR_API_KEY&#039; \
  -d &#039;{
    &quot;url&quot;: &quot;https://www.mendable.ai/&quot;,
    &quot;formats&quot;: [
      {
        &quot;type&quot;: &quot;json&quot;,
        &quot;schema&quot;: {
          &quot;type&quot;: &quot;object&quot;,
          &quot;properties&quot;: {
            &quot;company_mission&quot;: { &quot;type&quot;: &quot;string&quot; },
            &quot;supports_sso&quot;: { &quot;type&quot;: &quot;boolean&quot; },
            &quot;is_open_source&quot;: { &quot;type&quot;: &quot;boolean&quot; },
            &quot;is_in_yc&quot;: { &quot;type&quot;: &quot;boolean&quot; }
          }
        }
      }
    ]
  }&#039;
```

```json
{
  &quot;success&quot;: true,
  &quot;data&quot;: {
    &quot;content&quot;: &quot;Raw Content&quot;,
    &quot;metadata&quot;: {
      &quot;title&quot;: &quot;Mendable&quot;,
      &quot;description&quot;: &quot;Mendable allows you to easily build AI chat applications. Ingest, customize, then deploy with one line of code anywhere you want. Brought to you by SideGuide&quot;,
      &quot;robots&quot;: &quot;follow, index&quot;,
      &quot;ogTitle&quot;: &quot;Mendable&quot;,
      &quot;ogDescription&quot;: &quot;Mendable allows you to easily build AI chat applications. Ingest, customize, then deploy with one line of code anywhere you want. Brought to you by SideGuide&quot;,
      &quot;ogUrl&quot;: &quot;https://mendable.ai/&quot;,
      &quot;ogImage&quot;: &quot;https://mendable.ai/mendable_new_og1.png&quot;,
      &quot;ogLocaleAlternate&quot;: [],
      &quot;ogSiteName&quot;: &quot;Mendable&quot;,
      &quot;sourceURL&quot;: &quot;https://mendable.ai/&quot;
    },
    &quot;json&quot;: {
      &quot;company_mission&quot;: &quot;Train a secure AI on your technical resources that answers customer and employee questions so your team doesn&#039;t have to&quot;,
      &quot;supports_sso&quot;: true,
      &quot;is_open_source&quot;: false,
      &quot;is_in_yc&quot;: true
    }
  }
}
```

### Extracting without a schema (New)

You can now extract without a schema by just passing a `prompt` to the endpoint. The llm chooses the structure of the data.

```bash
curl -X POST https://api.firecrawl.dev/v2/scrape \
    -H &#039;Content-Type: application/json&#039; \
    -H &#039;Authorization: Bearer YOUR_API_KEY&#039; \
    -d &#039;{
      &quot;url&quot;: &quot;https://docs.firecrawl.dev/&quot;,
      &quot;formats&quot;: [
        {
          &quot;type&quot;: &quot;json&quot;,
          &quot;prompt&quot;: &quot;Extract the company mission from the page.&quot;
        }
      ]
    }&#039;
```

### Interacting with the page with Actions (Cloud-only)

Firecrawl allows you to perform various actions on a web page before scraping its content. This is particularly useful for interacting with dynamic content, navigating through pages, or accessing content that requires user interaction.

Here is an example of how to use actions to navigate to google.com, search for Firecrawl, click on the first result, and take a screenshot.

```bash
curl -X POST https://api.firecrawl.dev/v2/scrape \
    -H &#039;Content-Type: application/json&#039; \
    -H &#039;Authorization: Bearer YOUR_API_KEY&#039; \
    -d &#039;{
        &quot;url&quot;: &quot;google.com&quot;,
        &quot;formats&quot;: [&quot;markdown&quot;],
        &quot;actions&quot;: [
            {&quot;type&quot;: &quot;wait&quot;, &quot;milliseconds&quot;: 2000},
            {&quot;type&quot;: &quot;click&quot;, &quot;selector&quot;: &quot;textarea[title=\&quot;Search\&quot;]&quot;},
            {&quot;type&quot;: &quot;wait&quot;, &quot;milliseconds&quot;: 2000},
            {&quot;type&quot;: &quot;write&quot;, &quot;text&quot;: &quot;firecrawl&quot;},
            {&quot;type&quot;: &quot;wait&quot;, &quot;milliseconds&quot;: 2000},
            {&quot;type&quot;: &quot;press&quot;, &quot;key&quot;: &quot;ENTER&quot;},
            {&quot;type&quot;: &quot;wait&quot;, &quot;milliseconds&quot;: 3000},
            {&quot;type&quot;: &quot;click&quot;, &quot;selector&quot;: &quot;h3&quot;},
            {&quot;type&quot;: &quot;wait&quot;, &quot;milliseconds&quot;: 3000},
            {&quot;type&quot;: &quot;screenshot&quot;}
        ]
    }&#039;
```

### Batch Scraping Multiple URLs (New)

You can now batch scrape multiple URLs at the same time. It is very similar to how the /crawl endpoint works. It submits a batch scrape job and returns a job ID to check the status of the batch scrape.

```bash
curl -X POST https://api.firecrawl.dev/v2/batch/scrape \
    -H &#039;Content-Type: application/json&#039; \
    -H &#039;Authorization: Bearer YOUR_API_KEY&#039; \
    -d &#039;{
      &quot;urls&quot;: [&quot;https://docs.firecrawl.dev&quot;, &quot;https://docs.firecrawl.dev/sdks/overview&quot;],
      &quot;formats&quot; : [&quot;markdown&quot;, &quot;html&quot;]
    }&#039;
```



## Using Python SDK

### Installing Python SDK

```bash
pip install firecrawl-py
```

### Crawl a website

```python
from firecrawl import Firecrawl

firecrawl = Firecrawl(api_key=&quot;fc-YOUR_API_KEY&quot;)

# Scrape a website (returns a Document)
doc = firecrawl.scrape(
    &quot;https://firecrawl.dev&quot;,
    formats=[&quot;markdown&quot;, &quot;html&quot;],
)
print(doc.markdown)

# Crawl a website
response = firecrawl.crawl(
    &quot;https://firecrawl.dev&quot;,
    limit=100,
    scrape_options={&quot;formats&quot;: [&quot;markdown&quot;, &quot;html&quot;]},
    poll_interval=30,
)
print(response)
```

### Extracting structured data from a URL

With LLM extraction, you can easily extract structured data from any URL. We support pydantic schemas to make it easier for you too. Here is how you to use it:

```python
from pydantic import BaseModel, Field
from typing import List

class Article(BaseModel):
    title: str
    points: int
    by: str
    commentsURL: str

class TopArticles(BaseModel):
    top: List[Article] = Field(..., description=&quot;Top 5 stories&quot;)

# Use JSON format with a Pydantic schema
doc = firecrawl.scrape(
    &quot;https://news.ycombinator.com&quot;,
    formats=[{&quot;type&quot;: &quot;json&quot;, &quot;schema&quot;: TopArticles}],
)
print(doc.json)
```

## Using the Node SDK

### Installation

To install the Firecrawl Node SDK, you can use npm:

```bash
npm install @mendable/firecrawl-js
```

### Usage

1. Get an API key from [firecrawl.dev](https://firecrawl.dev)
2. Set the API key as an environment variable named `FIRECRAWL_API_KEY` or pass it as a parameter to the `Firecrawl` class.

```js
import Firecrawl from &#039;@mendable/firecrawl-js&#039;;

const firecrawl = new Firecrawl({ apiKey: &#039;fc-YOUR_API_KEY&#039; });

// Scrape a website
const doc = await firecrawl.scrape(&#039;https://firecrawl.dev&#039;, {
  formats: [&#039;markdown&#039;, &#039;html&#039;],
});
console.log(doc);

// Crawl a website
const response = await firecrawl.crawl(&#039;https://firecrawl.dev&#039;, {
  limit: 100,
  scrapeOptions: { formats: [&#039;markdown&#039;, &#039;html&#039;] },
});
console.log(response);
```


### Extracting structured data from a URL

With LLM extraction, you can easily extract structured data from any URL. We support zod schema to make it easier for you too. Here is how to use it:

```js
import Firecrawl from &#039;@mendable/firecrawl-js&#039;;
import { z } from &#039;zod&#039;;

const firecrawl = new Firecrawl({ apiKey: &#039;fc-YOUR_API_KEY&#039; });

// Define schema to extract contents into
const schema = z.object({
  top

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[DIYgod/RSSHub]]></title>
            <link>https://github.com/DIYgod/RSSHub</link>
            <guid>https://github.com/DIYgod/RSSHub</guid>
            <pubDate>Wed, 01 Oct 2025 00:05:25 GMT</pubDate>
            <description><![CDATA[🧡 Everything is RSSible]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/DIYgod/RSSHub">DIYgod/RSSHub</a></h1>
            <p>🧡 Everything is RSSible</p>
            <p>Language: TypeScript</p>
            <p>Stars: 38,941</p>
            <p>Forks: 8,556</p>
            <p>Stars today: 10 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
&lt;img src=&quot;https://docs.rsshub.app/img/logo.png&quot; alt=&quot;RSSHub&quot; width=&quot;100&quot;&gt;
&lt;/p&gt;
&lt;h1 align=&quot;center&quot;&gt;RSSHub&lt;/h1&gt;

&gt; 🧡 Everything is RSSible

[![](https://img.shields.io/badge/dynamic/json?url=https://rsshub-analytics.diygod.workers.dev/&amp;query=requests&amp;color=F38020&amp;label=requests&amp;logo=cloudflare&amp;style=flat-square&amp;suffix=/month)](https://rsshub.app)
[![docker publish](https://img.shields.io/docker/pulls/diygod/rsshub?label=docker%20pulls&amp;logo=docker&amp;style=flat-square)](https://hub.docker.com/r/diygod/rsshub)
[![npm publish](https://img.shields.io/npm/dt/rsshub?label=npm%20downloads&amp;logo=npm&amp;style=flat-square)](https://www.npmjs.com/package/rsshub)
[![test](https://img.shields.io/github/actions/workflow/status/DIYgod/RSSHub/test.yml?branch=master&amp;label=test&amp;logo=github&amp;style=flat-square)](https://github.com/DIYgod/RSSHub/actions/workflows/test.yml?query=event%3Apush+branch%3Amaster)
[![Test coverage](https://img.shields.io/codecov/c/github/DIYgod/RSSHub.svg?style=flat-square&amp;logo=codecov)](https://app.codecov.io/gh/DIYgod/RSSHub/branch/master)
[![Visitors](https://hitscounter.dev/api/hit?url=https%3A%2F%2Fgithub.com%2FDIYgod%2FRSSHub&amp;label=RSS+lovers&amp;icon=rss-fill&amp;color=%23ff752e)](https://github.com/DIYgod/RSSHub)

[![Telegram group](https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fapi.swo.moe%2Fstats%2Ftelegram%2Frsshub&amp;query=count&amp;color=2CA5E0&amp;label=Telegram%20Group&amp;logo=telegram&amp;cacheSeconds=3600&amp;style=flat-square)](https://t.me/rsshub) [![Telegram channel](https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fapi.swo.moe%2Fstats%2Ftelegram%2FawesomeRSSHub&amp;query=count&amp;color=2CA5E0&amp;label=Telegram%20Channel&amp;logo=telegram&amp;cacheSeconds=3600&amp;style=flat-square)](https://t.me/awesomeRSSHub) [![X (Twitter)](https://img.shields.io/badge/any_text-Follow-blue?color=2CA5E0&amp;label=Twitter&amp;logo=X&amp;cacheSeconds=3600&amp;style=flat-square)](https://x.com/intent/follow?screen_name=_RSSHub)

## Introduction

RSSHub is the world&#039;s largest RSS network, consisting of over 5,000 global instances.

RSSHub delivers millions of contents aggregated from all kinds of sources, our vibrant open source community is ensuring the deliver of RSSHub&#039;s new routes, new features and bug fixes.

[Documentation](https://docs.rsshub.app) | [Telegram Group](https://t.me/rsshub) | [Telegram Channel](https://t.me/awesomeRSSHub) | [X (Twitter)](https://x.com/intent/follow?screen_name=_RSSHub)

## Related Projects

-   [RSSHub Radar](https://github.com/DIYgod/RSSHub-Radar) | A browser extension that can help you quickly discover and subscribe to the RSS and RSSHub of current websites.
-   [RSSBud](https://github.com/Cay-Zhang/RSSBud) | RSSHub Radar for iOS platform, designed specifically for mobile ecosystem optimization.
-   [RSSAid](https://github.com/LeetaoGoooo/RSSAid) | RSSHub Radar for Android platform built with Flutter.
-   [DocSearch](https://github.com/Fatpandac/DocSearch) | Link RSSHub DocSearch into Raycast

## Contribute

We welcome all pull requests. Suggestions and feedback are also welcomed [here](https://github.com/DIYgod/RSSHub/issues).

Refer to [Quick Start](https://docs.rsshub.app/joinus/)

## Deployment

Refer to [Deployment](https://docs.rsshub.app/deploy/)

## Special Thanks

&lt;div align=&quot;center&quot;&gt;

[![](https://opencollective.com/RSSHub/contributors.svg?width=890)](https://github.com/DIYgod/RSSHub/graphs/contributors)

Logo designer [sheldonrrr](https://dribbble.com/sheldonrrr)

[![](https://raw.githubusercontent.com/DIYgod/sponsors/main/sponsors.simple.svg)](https://github.com/DIYgod/sponsors)

&lt;a href=&quot;https://www.cloudflare.com&quot; target=&quot;_blank&quot;&gt;&lt;img height=&quot;50px&quot; src=&quot;https://i.imgur.com/7Ph27Fq.png&quot;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://www.netlify.com&quot; target=&quot;_blank&quot;&gt;&lt;img height=&quot;40px&quot; src=&quot;https://i.imgur.com/cU01915.png&quot;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://1password.com&quot; target=&quot;_blank&quot;&gt;&lt;img height=&quot;40px&quot; src=&quot;https://i.imgur.com/a2XjflO.png&quot;&gt;&lt;/a&gt;
&lt;/div&gt;

## Author

**RSSHub** © [DIYgod](https://github.com/DIYgod), Released under the [MIT](./LICENSE) License.&lt;br&gt;
Authored and maintained by DIYgod with help from contributors ([list](https://github.com/DIYgod/RSSHub/contributors)).

&gt; Blog [@DIYgod](https://diygod.cc) · GitHub [@DIYgod](https://github.com/DIYgod) · X (Twitter) [@DIYgod](https://x.com/DIYgod) · Telegram Channel [@awesomeDIYgod](https://t.me/awesomeDIYgod)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[hangwin/mcp-chrome]]></title>
            <link>https://github.com/hangwin/mcp-chrome</link>
            <guid>https://github.com/hangwin/mcp-chrome</guid>
            <pubDate>Wed, 01 Oct 2025 00:05:24 GMT</pubDate>
            <description><![CDATA[Chrome MCP Server is a Chrome extension-based Model Context Protocol (MCP) server that exposes your Chrome browser functionality to AI assistants like Claude, enabling complex browser automation, content analysis, and semantic search.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/hangwin/mcp-chrome">hangwin/mcp-chrome</a></h1>
            <p>Chrome MCP Server is a Chrome extension-based Model Context Protocol (MCP) server that exposes your Chrome browser functionality to AI assistants like Claude, enabling complex browser automation, content analysis, and semantic search.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 8,378</p>
            <p>Forks: 711</p>
            <p>Stars today: 45 stars today</p>
            <h2>README</h2><pre># Chrome MCP Server 🚀

[![Stars](https://img.shields.io/github/stars/hangwin/mcp-chrome)](https://img.shields.io/github/stars/hangwin/mcp-chrome)
[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)
[![TypeScript](https://img.shields.io/badge/TypeScript-5.8+-blue.svg)](https://www.typescriptlang.org/)
[![Chrome Extension](https://img.shields.io/badge/Chrome-Extension-green.svg)](https://developer.chrome.com/docs/extensions/)
[![Release](https://img.shields.io/github/v/release/hangwin/mcp-chrome.svg)](https://img.shields.io/github/v/release/hangwin/mcp-chrome.svg)


&gt; 🌟 **Turn your Chrome browser into your intelligent assistant** - Let AI take control of your browser, transforming it into a powerful AI-controlled automation tool.

**📖 Documentation**: [English](README.md) | [中文](README_zh.md)

&gt; The project is still in its early stages and is under intensive development. More features, stability improvements, and other enhancements will follow.
---

## 🎯 What is Chrome MCP Server?

Chrome MCP Server is a Chrome extension-based **Model Context Protocol (MCP) server** that exposes your Chrome browser functionality to AI assistants like Claude, enabling complex browser automation, content analysis, and semantic search. Unlike traditional browser automation tools (like Playwright), **Chrome MCP Server** directly uses your daily Chrome browser, leveraging existing user habits, configurations, and login states, allowing various large models or chatbots to take control of your browser and truly become your everyday assistant.

## ✨ Core Features

- 😁 **Chatbot/Model Agnostic**: Let any LLM or chatbot client or agent you prefer automate your browser
- ⭐️ **Use Your Original Browser**: Seamlessly integrate with your existing browser environment (your configurations, login states, etc.)
- 💻 **Fully Local**: Pure local MCP server ensuring user privacy
- 🚄 **Streamable HTTP**: Streamable HTTP connection method
- 🏎 **Cross-Tab**: Cross-tab context
- 🧠 **Semantic Search**: Built-in vector database for intelligent browser tab content discovery
- 🔍 **Smart Content Analysis**: AI-powered text extraction and similarity matching
- 🌐 **20+ Tools**: Support for screenshots, network monitoring, interactive operations, bookmark management, browsing history, and 20+ other tools
- 🚀 **SIMD-Accelerated AI**: Custom WebAssembly SIMD optimization for 4-8x faster vector operations

## 🆚 Comparison with Similar Projects

| Comparison Dimension    | Playwright-based MCP Server                                                                                               | Chrome Extension-based MCP Server                                                                      |
| ----------------------- | ------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------ |
| **Resource Usage**      | ❌ Requires launching independent browser process, installing Playwright dependencies, downloading browser binaries, etc. | ✅ No need to launch independent browser process, directly utilizes user&#039;s already open Chrome browser |
| **User Session Reuse**  | ❌ Requires re-login                                                                                                      | ✅ Automatically uses existing login state                                                             |
| **Browser Environment** | ❌ Clean environment lacks user settings                                                                                  | ✅ Fully preserves user environment                                                                    |
| **API Access**          | ⚠️ Limited to Playwright API                                                                                              | ✅ Full access to Chrome native APIs                                                                   |
| **Startup Speed**       | ❌ Requires launching browser process                                                                                     | ✅ Only needs to activate extension                                                                    |
| **Response Speed**      | 50-200ms inter-process communication                                                                                      | ✅ Faster                                                                                              |

## 🚀 Quick Start

### Prerequisites

- Node.js &gt;= 18.19.0 and pnpm/npm
- Chrome/Chromium browser

### Installation Steps

1. **Download the latest Chrome extension from GitHub**

Download link: https://github.com/hangwin/mcp-chrome/releases

2. **Install mcp-chrome-bridge globally**

npm

```bash
npm install -g mcp-chrome-bridge
```

pnpm

```bash
# Method 1: Enable scripts globally (recommended)
pnpm config set enable-pre-post-scripts true
pnpm install -g mcp-chrome-bridge

# Method 2: Manual registration (if postinstall doesn&#039;t run)
pnpm install -g mcp-chrome-bridge
mcp-chrome-bridge register
```

&gt; Note: pnpm v7+ disables postinstall scripts by default for security. The `enable-pre-post-scripts` setting controls whether pre/post install scripts run. If automatic registration fails, use the manual registration command above.

3. **Load Chrome Extension**
   - Open Chrome and go to `chrome://extensions/`
   - Enable &quot;Developer mode&quot;
   - Click &quot;Load unpacked&quot; and select `your/dowloaded/extension/folder`
   - Click the extension icon to open the plugin, then click connect to see the MCP configuration
     &lt;img width=&quot;475&quot; alt=&quot;Screenshot 2025-06-09 15 52 06&quot; src=&quot;https://github.com/user-attachments/assets/241e57b8-c55f-41a4-9188-0367293dc5bc&quot; /&gt;

### Usage with MCP Protocol Clients

#### Using Streamable HTTP Connection (👍🏻 Recommended)

Add the following configuration to your MCP client configuration (using CherryStudio as an example):

&gt; Streamable HTTP connection method is recommended

```json
{
  &quot;mcpServers&quot;: {
    &quot;chrome-mcp-server&quot;: {
      &quot;type&quot;: &quot;streamableHttp&quot;,
      &quot;url&quot;: &quot;http://127.0.0.1:12306/mcp&quot;
    }
  }
}
```

#### Using STDIO Connection (Alternative)

If your client only supports stdio connection method, please use the following approach:

1. First, check the installation location of the npm package you just installed

```sh
# npm check method
npm list -g mcp-chrome-bridge
# pnpm check method
pnpm list -g mcp-chrome-bridge
```

Assuming the command above outputs the path: /Users/xxx/Library/pnpm/global/5
Then your final path would be: /Users/xxx/Library/pnpm/global/5/node_modules/mcp-chrome-bridge/dist/mcp/mcp-server-stdio.js

2. Replace the configuration below with the final path you just obtained

```json
{
  &quot;mcpServers&quot;: {
    &quot;chrome-mcp-stdio&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [
        &quot;node&quot;,
        &quot;/Users/xxx/Library/pnpm/global/5/node_modules/mcp-chrome-bridge/dist/mcp/mcp-server-stdio.js&quot;
      ]
    }
  }
}
```

eg：config in augment:

&lt;img width=&quot;494&quot; alt=&quot;截屏2025-06-22 22 11 25&quot; src=&quot;https://github.com/user-attachments/assets/48eefc0c-a257-4d3b-8bbe-d7ff716de2bf&quot; /&gt;

## 🛠️ Available Tools

Complete tool list: [Complete Tool List](docs/TOOLS.md)

&lt;details&gt;
&lt;summary&gt;&lt;strong&gt;📊 Browser Management (6 tools)&lt;/strong&gt;&lt;/summary&gt;

- `get_windows_and_tabs` - List all browser windows and tabs
- `chrome_navigate` - Navigate to URLs and control viewport
- `chrome_close_tabs` - Close specific tabs or windows
- `chrome_go_back_or_forward` - Browser navigation control
- `chrome_inject_script` - Inject content scripts into web pages
- `chrome_send_command_to_inject_script` - Send commands to injected content scripts
&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;strong&gt;📸 Screenshots &amp; Visual (1 tool)&lt;/strong&gt;&lt;/summary&gt;

- `chrome_screenshot` - Advanced screenshot capture with element targeting, full-page support, and custom dimensions
&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;strong&gt;🌐 Network Monitoring (4 tools)&lt;/strong&gt;&lt;/summary&gt;

- `chrome_network_capture_start/stop` - webRequest API network capture
- `chrome_network_debugger_start/stop` - Debugger API with response bodies
- `chrome_network_request` - Send custom HTTP requests
&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;strong&gt;🔍 Content Analysis (4 tools)&lt;/strong&gt;&lt;/summary&gt;

- `search_tabs_content` - AI-powered semantic search across browser tabs
- `chrome_get_web_content` - Extract HTML/text content from pages
- `chrome_get_interactive_elements` - Find clickable elements
- `chrome_console` - Capture and retrieve console output from browser tabs
&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;strong&gt;🎯 Interaction (3 tools)&lt;/strong&gt;&lt;/summary&gt;

- `chrome_click_element` - Click elements using CSS selectors
- `chrome_fill_or_select` - Fill forms and select options
- `chrome_keyboard` - Simulate keyboard input and shortcuts
&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;strong&gt;📚 Data Management (5 tools)&lt;/strong&gt;&lt;/summary&gt;

- `chrome_history` - Search browser history with time filters
- `chrome_bookmark_search` - Find bookmarks by keywords
- `chrome_bookmark_add` - Add new bookmarks with folder support
- `chrome_bookmark_delete` - Delete bookmarks
&lt;/details&gt;

## 🧪 Usage Examples

### AI helps you summarize webpage content and automatically control Excalidraw for drawing

prompt: [excalidraw-prompt](prompt/excalidraw-prompt.md)
Instruction: Help me summarize the current page content, then draw a diagram to aid my understanding.
https://www.youtube.com/watch?v=3fBPdUBWVz0

https://github.com/user-attachments/assets/fd17209b-303d-48db-9e5e-3717141df183

### After analyzing the content of the image, the LLM automatically controls Excalidraw to replicate the image

prompt: [excalidraw-prompt](prompt/excalidraw-prompt.md)|[content-analize](prompt/content-analize.md)
Instruction: First, analyze the content of the image, and then replicate the image by combining the analysis with the content of the image.
https://www.youtube.com/watch?v=tEPdHZBzbZk

https://github.com/user-attachments/assets/60d12b1a-9b74-40f4-994c-95e8fa1fc8d3

### AI automatically injects scripts and modifies webpage styles

prompt: [modify-web-prompt](prompt/modify-web.md)
Instruction: Help me modify the current page&#039;s style and remove advertisements.
https://youtu.be/twI6apRKHsk


https://github.com/user-attachments/assets/69cb561c-2e1e-4665-9411-4a3185f9643e

### AI automatically captures network requests for you

query: I want to know what the search API for Xiaohongshu is and what the response structure looks like

https://youtu.be/1hHKr7XKqnQ


https://github.com/user-attachments/assets/063f44ae-1754-46b6-b141-5988c86e4d96

### AI helps analyze your browsing history

query: Analyze my browsing history from the past month

https://youtu.be/jf2UZfrR2Vk


https://github.com/user-attachments/assets/e7a35118-e50e-4b1c-a790-0878aa2505ab

### Web page conversation

query: Translate and summarize the current web page
https://youtu.be/FlJKS9UQyC8

https://github.com/user-attachments/assets/08aa86aa-7706-4df2-b400-576e2c7fcc7f

### AI automatically takes screenshots for you (web page screenshots)

query: Take a screenshot of Hugging Face&#039;s homepage
https://youtu.be/7ycK6iksWi4


https://github.com/user-attachments/assets/b081e41b-6309-40d6-885b-0da01691b12e

### AI automatically takes screenshots for you (element screenshots)

query: Capture the icon from Hugging Face&#039;s homepage
https://youtu.be/ev8VivANIrk


https://github.com/user-attachments/assets/25657076-b84b-4459-a72f-90f896f06364

### AI helps manage bookmarks

query: Add the current page to bookmarks and put it in an appropriate folder

https://youtu.be/R_83arKmFTo


https://github.com/user-attachments/assets/73c1ea26-65fb-4b5e-b537-e32fa9bcfa52

### Automatically close web pages

query: Close all shadcn-related web pages

https://youtu.be/2wzUT6eNVg4


https://github.com/user-attachments/assets/ff160f48-58e0-4c76-a6b0-c4e1f91370c8

## 🤝 Contributing

We welcome contributions! Please see [CONTRIBUTING.md](docs/CONTRIBUTING.md) for detailed guidelines.

## 🚧 Future Roadmap

We have exciting plans for the future development of Chrome MCP Server:

- [ ] Authentication
- [ ] Recording and Playback
- [ ] Workflow Automation
- [ ] Enhanced Browser Support (Firefox Extension)

---

**Want to contribute to any of these features?** Check out our [Contributing Guide](docs/CONTRIBUTING.md) and join our development community!

## 📄 License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.

## 📚 More Documentation

- [Architecture Design](docs/ARCHITECTURE.md) - Detailed technical architecture documentation
- [TOOLS API](docs/TOOLS.md) - Complete tool API documentation
- [Troubleshooting](docs/TROUBLESHOOTING.md) - Common issue solutions
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[toeverything/AFFiNE]]></title>
            <link>https://github.com/toeverything/AFFiNE</link>
            <guid>https://github.com/toeverything/AFFiNE</guid>
            <pubDate>Wed, 01 Oct 2025 00:05:23 GMT</pubDate>
            <description><![CDATA[There can be more than Notion and Miro. AFFiNE(pronounced [ə‘fain]) is a next-gen knowledge base that brings planning, sorting and creating all together. Privacy first, open-source, customizable and ready to use.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/toeverything/AFFiNE">toeverything/AFFiNE</a></h1>
            <p>There can be more than Notion and Miro. AFFiNE(pronounced [ə‘fain]) is a next-gen knowledge base that brings planning, sorting and creating all together. Privacy first, open-source, customizable and ready to use.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 55,585</p>
            <p>Forks: 3,802</p>
            <p>Stars today: 55 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;

&lt;h1 style=&quot;border-bottom: none&quot;&gt;
    &lt;b&gt;&lt;a href=&quot;https://affine.pro&quot;&gt;AFFiNE.Pro&lt;/a&gt;&lt;/b&gt;&lt;br /&gt;
    Write, Draw and Plan All at Once
    &lt;br&gt;
&lt;/h1&gt;
&lt;a href=&quot;https://affine.pro/download&quot;&gt;
    &lt;img alt=&quot;affine logo&quot; src=&quot;https://cdn.affine.pro/Github_hero_image1.png&quot; style=&quot;width: 100%&quot;&gt;
&lt;/a&gt;
&lt;br/&gt;
&lt;p align=&quot;center&quot;&gt;
  A privacy-focused, local-first, open-source, and ready-to-use alternative for Notion &amp; Miro. &lt;br /&gt;
  One hyper-fused platform for wildly creative minds.
&lt;/p&gt;

&lt;br/&gt;

&lt;br/&gt;
&lt;a href=&quot;https://www.producthunt.com/posts/affine-3?utm_source=badge-featured&amp;utm_medium=badge&amp;utm_souce=badge-affine&amp;#0045;3&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=440671&amp;theme=light&quot; alt=&quot;AFFiNE - One&amp;#0032;app&amp;#0032;for&amp;#0032;all&amp;#0032;&amp;#0045;&amp;#0032;Where&amp;#0032;Notion&amp;#0032;meets&amp;#0032;Miro | Product Hunt&quot; style=&quot;width: 250px; height: 54px;&quot; width=&quot;250&quot; height=&quot;54&quot; /&gt;&lt;/a&gt;
&lt;br/&gt;
&lt;br/&gt;

&lt;div align=&quot;left&quot; valign=&quot;middle&quot;&gt;
&lt;a href=&quot;https://runblaze.dev&quot;&gt;
 &lt;picture&gt;
   &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://www.runblaze.dev/logo_dark.png&quot;&gt;
   &lt;img align=&quot;right&quot; src=&quot;https://www.runblaze.dev/logo_light.png&quot; height=&quot;102px&quot;/&gt;
 &lt;/picture&gt;
&lt;/a&gt;

&lt;br style=&quot;display: none;&quot;/&gt;

_Special thanks to [Blaze](https://runblaze.dev) for their support of this project. They provide high-performance Apple Silicon macOS and Linux (AMD64 &amp; ARM64) runners for GitHub Actions, greatly reducing our automated build times._

&lt;/div&gt;

&lt;br/&gt;
&lt;br/&gt;

&lt;div align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://affine.pro&quot;&gt;Home Page&lt;/a&gt; |
    &lt;a href=&quot;https://affine.pro/redirect/discord&quot;&gt;Discord&lt;/a&gt; |
    &lt;a href=&quot;https://app.affine.pro&quot;&gt;Live Demo&lt;/a&gt; |
    &lt;a href=&quot;https://affine.pro/blog/&quot;&gt;Blog&lt;/a&gt; |
    &lt;a href=&quot;https://docs.affine.pro/&quot;&gt;Documentation&lt;/a&gt;
&lt;/div&gt;
&lt;br/&gt;

[![Releases](https://img.shields.io/github/downloads/toeverything/AFFiNE/total)](https://github.com/toeverything/AFFiNE/releases/latest)
[![All Contributors][all-contributors-badge]](#contributors)
[![TypeScript-version-icon]](https://www.typescriptlang.org/)

&lt;/div&gt;

&lt;br /&gt;
&lt;div align=&quot;center&quot;&gt;
&lt;em&gt;Docs, canvas and tables are hyper-merged with AFFiNE - just like the word affine (əˈfʌɪn | a-fine).&lt;/em&gt;
&lt;/div&gt;
&lt;br /&gt;

&lt;div align=&quot;center&quot;&gt;
&lt;img src=&quot;https://github.com/toeverything/AFFiNE/assets/79301703/49a426bb-8d2b-4216-891a-fa5993642253&quot; style=&quot;width: 100%&quot;/&gt;
&lt;/div&gt;

## Getting started &amp; staying tuned with us.

Star us, and you will receive all release notifications from GitHub without any delay!

&lt;img src=&quot;https://user-images.githubusercontent.com/79301703/230891830-0110681e-8c7e-483b-b6d9-9e42b291b9ef.gif&quot; style=&quot;width: 100%&quot;/&gt;

## What is AFFiNE

[AFFiNE](https://affine.pro) is an open-source, all-in-one workspace and an operating system for all the building blocks that assemble your knowledge base and much more -- wiki, knowledge management, presentation and digital assets. It&#039;s a better alternative to Notion and Miro.

## Features

**A true canvas for blocks in any form. Docs and whiteboard are now fully merged.**

- Many editor apps claim to be a canvas for productivity, but AFFiNE is one of the very few which allows you to put any building block on an edgeless canvas -- rich text, sticky notes, any embedded web pages, multi-view databases, linked pages, shapes and even slides. We have it all.

**Multimodal AI partner ready to kick in any work**

- Write up professional work report? Turn an outline into expressive and presentable slides? Summary an article into a well-structured mindmap? Sorting your job plan and backlog for tasks? Or... draw and code prototype apps and web pages directly all with one prompt? With you, [AFFiNE AI](https://affine.pro/ai) pushes your creativity to the edge of your imagination, just like [Canvas AI](https://affine.pro/blog/best-canvas-ai) to generate mind map for brainstorming.

**Local-first &amp; Real-time collaborative**

- We love the idea of local-first that you always own your data on your disk, in spite of the cloud. Furthermore, AFFiNE supports real-time sync and collaborations on web and cross-platform clients.

**Self-host &amp; Shape your own AFFiNE**

- You have the freedom to manage, self-host, fork and build your own AFFiNE. Plugin community and third-party blocks are coming soon. More tractions on [Blocksuite](https://blocksuite.io). Check there to learn how to [self-host AFFiNE](https://docs.affine.pro/self-host-affine).

## Acknowledgement

“We shape our tools and thereafter our tools shape us”. A lot of pioneers have inspired us along the way, e.g.:

- Quip &amp; Notion with their great concept of “everything is a block”
- Trello with their Kanban
- Airtable &amp; Miro with their no-code programmable datasheets
- Miro &amp; Whimiscal with their edgeless visual whiteboard
- Remote &amp; Capacities with their object-based tag system

There is a large overlap of their atomic “building blocks” between these apps. They are not open source, nor do they have a plugin system like Vscode for contributors to customize. We want to have something that contains all the features we love and also goes one step even further.

Thanks for checking us out, we appreciate your interest and sincerely hope that AFFiNE resonates with you! 🎵 Checking https://affine.pro/ for more details ions.

## Contributing

| Bug Reports                                                                                                                                         | Feature Requests                                                                                                                                               | Questions/Discussions                                                         | AFFiNE Community                                          |
| --------------------------------------------------------------------------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------- | --------------------------------------------------------- |
| [Create a bug report](https://github.com/toeverything/AFFiNE/issues/new?assignees=&amp;labels=bug%2Cproduct-review&amp;template=BUG-REPORT.yml&amp;title=TITLE) | [Submit a feature request](https://github.com/toeverything/AFFiNE/issues/new?assignees=&amp;labels=feat%2Cproduct-review&amp;template=FEATURE-REQUEST.yml&amp;title=TITLE) | [Check GitHub Discussion](https://github.com/toeverything/AFFiNE/discussions) | [Vist the AFFiNE Community](https://community.affine.pro) |
| Something isn&#039;t working as expected                                                                                                                 | An idea for a new feature, or improvements                                                                                                                     | Discuss and ask questions                                                     | A place to ask, learn and engage with others              |

Calling all developers, testers, tech writers and more! Contributions of all types are more than welcome, you can read more in [docs/types-of-contributions.md](docs/types-of-contributions.md). If you are interested in contributing code, read our [docs/CONTRIBUTING.md](docs/CONTRIBUTING.md) and feel free to check out our GitHub issues to get stuck in to show us what you’re made of.

**Before you start contributing, please make sure you have read and accepted our [Contributor License Agreement]. To indicate your agreement, simply edit this file and submit a pull request.**

For **bug reports**, **feature requests** and other **suggestions** you can also [create a new issue](https://github.com/toeverything/AFFiNE/issues/new/choose) and choose the most appropriate template for your feedback.

For **translation** and **language support** you can visit our [i18n General Space](https://community.affine.pro/c/i18n-general).

Looking for **other ways to contribute** and wondering where to start? Check out the [AFFiNE Ambassador program](https://community.affine.pro/c/start-here/affine-ambassador), we work closely with passionate community members and provide them with a wide range of support and resources.

If you have questions, you are welcome to contact us. One of the best places to get more info and learn more is in the [AFFiNE Community](https://community.affine.pro) where you can engage with other like-minded individuals.

## Templates

AFFiNE now provides pre-built [templates](https://affine.pro/templates) from our team. Following are the Top 10 most popular templates among AFFiNE users,if you want to contribute, you can contribute your own template so other people can use it too.

- [vision board template](https://affine.pro/templates/category-vision-board-template)
- [one pager template](https://affine.pro/templates/category-one-pager-template-free)
- [sample lesson plan math template](https://affine.pro/templates/sample-lesson-plan-math-template)
- [grr lesson plan template free](https://affine.pro/templates/grr-lesson-plan-template-free)
- [free editable lesson plan template for pre k](https://affine.pro/templates/free-editable-lesson-plan-template-for-pre-k)
- [high note collection planners](https://affine.pro/templates/high-note-collection-planners)
- [digital planner](https://affine.pro/templates/category-digital-planner)
- [ADHD Planner](https://affine.pro/templates/adhd-planner)
- [Reading Log](https://affine.pro/templates/reading-log)
- [Cornell Notes Template](https://affine.pro/templates/category-cornell-notes-template)

## Blog

Welcome to the AFFiNE blog section! Here, you’ll find the latest insights, tips, and guides on how to maximize your experience with AFFiNE and AFFiNE AI, the leading Canvas AI tool for flexible note-taking and creative organization.

- [vision board template](https://affine.pro/blog/8-free-printable-vision-board-templates-examples-2023)
- [ai homework helper](https://affine.pro/blog/ai-homework-helper)
- [vision board maker](https://affine.pro/blog/vision-board-maker)
- [itinerary template](https://affine.pro/blog/free-customized-travel-itinerary-planner-templates)
- [one pager template](https://affine.pro/blog/top-12-one-pager-examples-how-to-create-your-own)
- [cornell notes template](https://affine.pro/blog/the-cornell-notes-template-and-system-learning-tips)
- [swot chart template](https://affine.pro/blog/top-10-free-editable-swot-analysis-template-examples)
- [apps like luna task](https://affine.pro/blog/apps-like-luna-task)
- [note taking ai from rough notes to mind map](https://affine.pro/blog/dynamic-AI-notes)
- [canvas ai](https://affine.pro/blog/best-canvas-ai)
- [one pager](https://affine.pro/blog/top-12-one-pager-examples-how-to-create-your-own)
- [SOP Template](https://affine.pro/blog/how-to-write-sop-step-by-step-guide-5-best-free-tools-templates)
- [Chore Chart](https://affine.pro/blog/10-best-free-chore-chart-templates-kids-adults)

## Ecosystem

| Name                                             |                            |                                                                                                                                         |
| ------------------------------------------------ | -------------------------- | --------------------------------------------------------------------------------------------------------------------------------------- |
| [@affine/component](packages/frontend/component) | AFFiNE Component Resources | ![](https://img.shields.io/codecov/c/github/toeverything/affine?style=flat-square)                                                      |
| [@toeverything/theme](packages/common/theme)     | AFFiNE theme               | [![](https://img.shields.io/npm/dm/@toeverything/theme?style=flat-square&amp;color=eee)](https://www.npmjs.com/package/@toeverything/theme) |

## Upstreams

We would also like to give thanks to open-source projects that make AFFiNE possible:

- [Blocksuite](https://github.com/toeverything/BlockSuite) - 💠 BlockSuite is the open-source collaborative editor project behind AFFiNE.
- [OctoBase](https://github.com/toeverything/OctoBase) - 🐙 OctoBase is the open-source database behind AFFiNE, local-first, yet collaborative. A light-weight, scalable, data engine written in Rust.
- [yjs](https://github.com/yjs/yjs) - Fundamental support of CRDTs for our implementation on state management and data sync.
- [electron](https://github.com/electron/electron) - Build cross-platform desktop apps with JavaScript, HTML, and CSS.
- [React](https://github.com/facebook/react) - The library for web and native user interfaces.
- [napi-rs](https://github.com/napi-rs/napi-rs) - A framework for building compiled Node.js add-ons in Rust via Node-API.
- [Jotai](https://github.com/pmndrs/jotai) - Primitive and flexible state management for React.
- [async-call-rpc](https://github.com/Jack-Works/async-call-rpc) - A lightweight JSON RPC client &amp; server.
- [Vite](https://github.com/vitejs/vite) - Next generation frontend tooling.
- Other upstream [dependencies](https://github.com/toeverything/AFFiNE/network/dependencies).

Thanks a lot to the community for providing such powerful and simple libraries, so that we can focus more on the implementation of the product logic, and we hope that in the future our projects will also provide a more easy-to-use knowledge base for everyone.

## Contributors

We would like to express our gratitude to all the individuals who have already contributed to AFFiNE! If you have any AFFiNE-related project, documentation, tool or template, please feel free to contribute it by submitting a pull request to our curated list on GitHub: [awesome-affine](https://github.com/toeverything/awesome-affine).

&lt;a href=&quot;https://github.com/toeverything/affine/graphs/contributors&quot;&gt;
  &lt;img alt=&quot;contributors&quot; src=&quot;https://opencollective.com/affine/contributors.svg?width=890&amp;button=false&quot; /&gt;
&lt;/a&gt;

## Self-Host

Begin with Docker to deploy your own feature-rich, unrestricted version of AFFiNE. Our team is diligently updating to the latest version. For more information on how to self-host AFFiNE, please refer to our [documentation](https://docs.affine.pro/self-host-affine).

[![Run on ClawCloud](https://raw.githubusercontent.com/ClawCloud/Run-Template/refs/heads/main/Run-on-ClawCloud.svg)](https://template.run.claw.cloud/?openapp=system-fastdeploy%3FtemplateName%3Daffine)

## Hiring

Some amazing companies, including AFFiNE, are looking for developers! Are you interested in joining AFFiNE or its partners? Check out our [Discord channel](https://affine.pro/redirect/discord) for some of the latest jobs available.

## Feature Request

For feature requests, please see [community.affine.pro](https://community.affine.pro/c/feature-requests/).

## Building

### Codespaces

From the GitHub repo main page, click the green &quot;Code&quot; button and select &quot;Create codespace on master&quot;. This will open a new Codespace with the (supposedly auto-forked
AFFiNE repo cloned, built, and ready to go.

### Local

See [BUILDING.md] for instructions on how to build AFFiNE from source code.

## Contributing

We welcome contributions from everyone.
See [docs/contributing/tutorial.md](./docs/contributing/tutorial.md) for details.

## Thanks

&lt;a href=&quot;https://www.chromatic.com/&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/321738/84662277-e3db4f80-af1b-11ea-88f5-91d67a5e59f6.png&quot; width=&quot;153&quot; height=&quot;30&quot; alt=&quot;Chromatic&quot; /&gt;&lt;/a&gt;

Thanks to [Chromatic](https://www.chromatic.com/) for providing the visual testing platform that helps us review UI changes and catch visual regressions.

## License

### Editions

- AFFiNE Community Edition (CE) is the current available version, it&#039;s free for self-host under the MIT license.

- AFFiNE Enterprise Edition (EE) is yet to be published, it will have more advanced features and enterprise-oriented offerings, including but not exclusive to rebranding and SSO, advanced admin and audit, etc., you may refer to https://affine.pro/pricing for more information

See [LICENSE] for details.

[all-contributors-badge]: https://img.shields.io/github/contributors/toeverything/AFFiNE
[license]: ./LICENSE
[building.md]: ./docs/BUILDING.md
[update page]: https://affine.pro/blog?tag=Release%20Note
[jobs available]: ./docs/jobs.md
[latest packages]: https://github.com/toeverything/AFFiNE/pkgs/container/affine-self-hosted
[contributor license agreement]: https://github.com/toeverything/affine/edit/canary/.github/CLA.md
[stars-icon]: https://img.shields.io/github/stars/toeverything/AFFiNE.svg?style=flat&amp;logo=github&amp;colorB=red&amp;label=stars
[codecov]: https://codecov.io/gh/toeverything/affine/branch/canary/graphs/badge.svg?branch=canary
[node-version-icon]: https://img.shields.io/badge/node-%3E=18.16.1-success
[typescript-version-icon]: https://img.shields.io/github/package-json/dependency-version/toeverything/affine/dev/typescript
[react-version-icon]: https://img.shields.io/github/package-json/dependency-version/toeverything/AFFiNE/react?filename=packages%2Ffrontend%2Fcore%2Fpackage.json&amp;color=rgb(97%2C228%2C251)
[blocksuite-icon]: https://img.shields.io/github/package-json/dependency-version/toeverything/AFFiNE/@blocksuite/store?color=6880ff&amp;filename=packages%2Ffrontend%2Fcore%2Fpackage.json&amp;label=blocksuite
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[TibixDev/winboat]]></title>
            <link>https://github.com/TibixDev/winboat</link>
            <guid>https://github.com/TibixDev/winboat</guid>
            <pubDate>Wed, 01 Oct 2025 00:05:22 GMT</pubDate>
            <description><![CDATA[Run Windows apps on 🐧 Linux with ✨ seamless integration]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/TibixDev/winboat">TibixDev/winboat</a></h1>
            <p>Run Windows apps on 🐧 Linux with ✨ seamless integration</p>
            <p>Language: TypeScript</p>
            <p>Stars: 5,333</p>
            <p>Forks: 149</p>
            <p>Stars today: 146 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;left&quot;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td&gt;
        &lt;img src=&quot;gh-assets/winboat_logo.svg&quot; alt=&quot;WinBoat Logo&quot; width=&quot;150&quot;&gt;
      &lt;/td&gt;
      &lt;td&gt;
        &lt;h1 style=&quot;color: #7C86FF; margin: 0; font-size: 32px;&quot;&gt;WinBoat&lt;/h1&gt;
        &lt;p style=&quot;color: oklch(90% 0 0); font-size: 14px; margin: 5px 0;&quot;&gt;Windows for Penguins.&lt;br&gt;
        Run Windows apps on 🐧 Linux with ✨ seamless integration&lt;/p&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

## Screenshots
&lt;div align=&quot;center&quot;&gt;
  &lt;img src=&quot;gh-assets/features/feat_dash.png&quot; alt=&quot;WinBoat Dashboard&quot; width=&quot;45%&quot;&gt;
  &lt;img src=&quot;gh-assets/features/feat_apps.png&quot; alt=&quot;WinBoat Apps&quot; width=&quot;45%&quot;&gt;
  &lt;img src=&quot;gh-assets/features/feat_native.png&quot; alt=&quot;Native Windows&quot; width=&quot;45%&quot;&gt;
&lt;/div&gt;

## ⚠️ Work in Progress ⚠️
WinBoat is currently in beta, so expect to occasionally run into hiccups and bugs. You should be comfortable with some level of troubleshooting if you decide to try it, however we encourage you to give it a shot anyway.

## Features
- **🎨 Elegant Interface**: Sleek and intuitive interface that seamlessly integrates Windows into your Linux desktop environment, making it feel like a native experience
- **📦 Automated Installs**: Simple installation process through our interface - pick your preferences &amp; specs and let us handle the rest
- **🚀 Run Any App**: If it runs on Windows, it can run on WinBoat. Enjoy the full range of Windows applications as native OS-level windows in your Linux environment
- **🖥️ Full Windows Desktop**: Access the complete Windows desktop experience when you need it, or run individual apps seamlessly integrated into your Linux workflow
- **📁 Filesystem Integration**: Your home directory is mounted in Windows, allowing easy file sharing between the two systems without any hassle
- **✨ And many more**: Smartcard passthrough, resource monitoring, and more features being added regularly

## How Does It Work?
WinBoat is an Electron app which allows you to run Windows apps on Linux using a containerized approach. Windows runs as a VM inside a Docker container, we communicate with it using the [WinBoat Guest Server](https://github.com/TibixDev/winboat/tree/main/guest_server) to retrieve data we need from Windows. For compositing applications as native OS-level windows, we use FreeRDP together with Windows&#039;s RemoteApp protocol.

## Prerequisites
Before running WinBoat, ensure your system meets the following requirements:

- **RAM**: At least 4 GB of RAM
- **CPU**: At least 2 CPU threads  
- **Storage**: At least 32 GB free space in `/var`
- **Virtualization**: KVM enabled in BIOS/UEFI
  - [How to enable virtualization](https://duckduckgo.com/?t=h_&amp;q=how+to+enable+virtualization+in+%3Cmotherboard+brand%3E+bios&amp;ia=web)
- **Docker**: Required for containerization
  - [Installation Guide](https://docs.docker.com/engine/install/)
  - **⚠️ NOTE:** Docker Desktop is **not** supported, you will run into issues if you use it
- **Docker Compose v2**: Required for compatibility with docker-compose.yml files
  - [Installation Guide](https://docs.docker.com/compose/install/#plugin-linux-only)
- **Docker User Group**: Add your user to the `docker` group
  - [Setup Instructions](https://docs.docker.com/engine/install/linux-postinstall/#manage-docker-as-a-non-root-user)
- **FreeRDP**: Required for remote desktop connection (Please make sure you have **Version 3.x.x** with sound support included)
  - [Installation Guide](https://github.com/FreeRDP/FreeRDP/wiki/PreBuilds)
- **Kernel Modules**: `iptables` and `iptable_nat` modules must be loaded
  - [Module loading instructions](https://rentry.org/rmfq2e5e)

## Downloading
You can download the latest Linux builds under the [Releases](https://github.com/TibixDev/winboat/releases) tab. We currently offer four variants:
- **AppImage:** A popular &amp; portable app format which should run fine on most distributions
- **Unpacked:** The raw unpacked files, simply run the executable (`linux-unpacked/winboat`)
- **.deb:** The intended format for Debian based distributions
- **.rpm:** The intended format for Fedora based distributions

## Known Issues About Container Runtimes
- Podman is **unsupported** for now
- Docker Desktop is **unsupported** for now
- Distros that emulate Docker through a Podman socket are **unsupported**
- Any rootless containerization solution is currently **unsupported**

## Building WinBoat
- For building you need to have NodeJS and Go installed on your system
- Clone the repo (`git clone https://github.com/TibixDev/WinBoat`)
- Install the dependencies (`npm i`)
- Build the app and the guest server using `npm run build:linux-gs`
- You can now find the built app under `dist` with an AppImage and an Unpacked variant

## Running WinBoat in development mode
- Make sure you meet the [prerequisites](#prerequisites)
- Additionally, for development you need to have NodeJS and Go installed on your system
- Clone the repo (`git clone https://github.com/TibixDev/WinBoat`)
- Install the dependencies (`npm i`)
- Build the guest server (`npm run build-guest-server`)
- Run the app (`npm run dev`)

## Contributing
Contributions are welcome! Whether it&#039;s bug fixes, feature improvements, or documentation updates, we appreciate your help making WinBoat better.

**Please note**: We maintain a focus on technical contributions only. Pull requests containing political/sexual content, or other sensitive/controversial topics will not be accepted. Let&#039;s keep things focused on making great software! 🚀

Feel free to:
- Report bugs and issues
- Submit feature requests  
- Contribute code improvements
- Help with documentation
- Share feedback and suggestions

Check out our issues page to get started, or feel free to open a new issue if you&#039;ve found something that needs attention.

## License
WinBoat is licensed under the [MIT](https://github.com/TibixDev/winboat/blob/main/LICENSE) license

## Inspiration / Alternatives
These past few years some cool projects have surfaced with similar concepts, some of which we&#039;ve also taken inspirations from.\
They&#039;re awesome and you should check them out:
- [WinApps](https://github.com/winapps-org/winapps)
- [Cassowary](https://github.com/casualsnek/cassowary)
- [dockur/windows](https://github.com/dockur/windows) (🌟 Also used in WinBoat)

## Socials &amp; Contact
- [![Website](https://img.shields.io/badge/Website-winboat.app-blue?style=flat&amp;logo=googlechrome&amp;logoColor=white)](https://www.winboat.app/)
- [![Twitter](https://img.shields.io/badge/Twitter-@winboat__app-1DA1F2?style=flat&amp;logo=x&amp;logoColor=white)](https://x.com/winboat_app)
- [![Mastodon](https://img.shields.io/badge/Mastodon-@winboat-6364FF?style=flat&amp;logo=mastodon&amp;logoColor=white)](https://fosstodon.org/@winboat)
- [![Bluesky](https://img.shields.io/badge/Bluesky-winboat.app-00A8E8?style=flat&amp;logo=bluesky&amp;logoColor=white)](http://bsky.app/profile/winboat.app)
- [![Discord](https://img.shields.io/badge/Discord-Join_Community-5865F2?style=flat&amp;logo=discord&amp;logoColor=white)](http://discord.gg/MEwmpWm4tN)
- [![Email](https://img.shields.io/badge/Email-staff@winboat.app-D14836?style=flat&amp;logo=gmail&amp;logoColor=white)](mailto:staff@winboat.app)

## Star History
&lt;a href=&quot;https://www.star-history.com/#tibixdev/winboat&amp;Date&quot;&gt;
 &lt;picture&gt;
   &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://api.star-history.com/svg?repos=tibixdev/winboat&amp;type=Date&amp;theme=dark&quot; /&gt;
   &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://api.star-history.com/svg?repos=tibixdev/winboat&amp;type=Date&quot; /&gt;
   &lt;img alt=&quot;Star History Chart&quot; src=&quot;https://api.star-history.com/svg?repos=tibixdev/winboat&amp;type=Date&quot; /&gt;
 &lt;/picture&gt;
&lt;/a&gt;
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[nuxt/nuxt]]></title>
            <link>https://github.com/nuxt/nuxt</link>
            <guid>https://github.com/nuxt/nuxt</guid>
            <pubDate>Wed, 01 Oct 2025 00:05:21 GMT</pubDate>
            <description><![CDATA[The Intuitive Vue Framework.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/nuxt/nuxt">nuxt/nuxt</a></h1>
            <p>The Intuitive Vue Framework.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 58,314</p>
            <p>Forks: 5,374</p>
            <p>Stars today: 16 stars today</p>
            <h2>README</h2><pre>[![Nuxt banner](./.github/assets/banner.svg)](https://nuxt.com)

# Nuxt

&lt;p&gt;
  &lt;a href=&quot;https://www.npmjs.com/package/nuxt&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/nuxt.svg?style=flat&amp;colorA=18181B&amp;colorB=28CF8D&quot; alt=&quot;Version&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://www.npmjs.com/package/nuxt&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/nuxt.svg?style=flat&amp;colorA=18181B&amp;colorB=28CF8D&quot; alt=&quot;Downloads&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://github.com/nuxt/nuxt/tree/main/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/nuxt/nuxt.svg?style=flat&amp;colorA=18181B&amp;colorB=28CF8D&quot; alt=&quot;License&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://nuxt.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Nuxt%20Docs-18181B?logo=nuxt&quot; alt=&quot;Website&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://chat.nuxt.dev&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Nuxt%20Discord-18181B?logo=discord&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://securityscorecards.dev/&quot;&gt;&lt;img src=&quot;https://api.securityscorecards.dev/projects/github.com/nuxt/nuxt/badge&quot; alt=&quot;Nuxt openssf scorecard score&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

Nuxt is a free and open-source framework with an intuitive and extendable way to create type-safe, performant and production-grade full-stack web applications and websites with Vue.js.

It provides a number of features that make it easy to build fast, SEO-friendly, and scalable web applications, including:
- Server-side rendering, Static Site Generation, Hybrid Rendering and Edge-Side Rendering
- Automatic routing with code-splitting and pre-fetching
- Data fetching and state management
- SEO Optimization and Meta tags definition
- Auto imports of components, composables and utils
- TypeScript with zero configuration
- Go fullstack with our server/ directory
- Extensible with [200+ modules](https://nuxt.com/modules)
- Deployment to a variety of [hosting platforms](https://nuxt.com/deploy)
- ...[and much more](https://nuxt.com) 🚀

### Table of Contents

- 🚀 [Getting Started](#getting-started)
- 💻 [ Vue Development](#vue-development)
- 📖 [Documentation](#documentation)
- 🧩 [Modules](#modules)
- ❤️  [Contribute](#contribute)
- 🏠 [Local Development](#local-development)
- 🛟 [Professional Support](#professional-support)
- 🔗 [Follow Us](#follow-us)
- ⚖️ [License](#license)

---

## &lt;a name=&quot;getting-started&quot;&gt;🚀 Getting Started&lt;/a&gt;

Use the following command to create a new starter project. This will create a starter project with all the necessary files and dependencies:

```bash
npm create nuxt@latest &lt;my-project&gt;
```

&gt; [!TIP]
&gt; Discover also [nuxt.new](https://nuxt.new): Open a Nuxt starter on CodeSandbox, StackBlitz or locally to get up and running in a few seconds.

## &lt;a name=&quot;vue-development&quot;&gt;💻 Vue Development&lt;/a&gt;

Simple, intuitive and powerful, Nuxt lets you write Vue components in a way that makes sense. Every repetitive task is automated, so you can focus on writing your full-stack Vue application with confidence.

Example of an `app.vue`:

```vue
&lt;script setup lang=&quot;ts&quot;&gt;
useSeoMeta({
  title: &#039;Meet Nuxt&#039;,
  description: &#039;The Intuitive Vue Framework.&#039;,
})
&lt;/script&gt;

&lt;template&gt;
  &lt;div id=&quot;app&quot;&gt;
    &lt;AppHeader /&gt;
    &lt;NuxtPage /&gt;
    &lt;AppFooter /&gt;
  &lt;/div&gt;
&lt;/template&gt;

&lt;style scoped&gt;
#app {
  background-color: #020420;
  color: #00DC82;
}
&lt;/style&gt;
```

## &lt;a name=&quot;documentation&quot;&gt;📖 Documentation&lt;/a&gt;

We highly recommend you take a look at the [Nuxt documentation](https://nuxt.com/docs) to level up. It’s a great resource for learning more about the framework. It covers everything from getting started to advanced topics.

## &lt;a name=&quot;modules&quot;&gt;🧩 Modules&lt;/a&gt;

Discover our [list of modules](https://nuxt.com/modules) to supercharge your Nuxt project, created by the Nuxt team and community.

## &lt;a name=&quot;contribute&quot;&gt;❤️ Contribute&lt;/a&gt;

We invite you to contribute and help improve Nuxt 💚

Here are a few ways you can get involved:
- **Reporting Bugs:** If you come across any bugs or issues, please check out the [reporting bugs guide](https://nuxt.com/docs/4.x/community/reporting-bugs) to learn how to submit a bug report.
- **Suggestions:** Have ideas to enhance Nuxt? We&#039;d love to hear them! Check out the [contribution guide](https://nuxt.com/docs/4.x/community/contribution) to share your suggestions.
- **Questions:** If you have questions or need assistance, the [getting help guide](https://nuxt.com/docs/4.x/community/getting-help) provides resources to help you out.

## &lt;a name=&quot;local-development&quot;&gt;🏠 Local Development&lt;/a&gt;

Follow the docs to [Set Up Your Local Development Environment](https://nuxt.com/docs/4.x/community/framework-contribution#setup) to contribute to the framework and documentation.

## &lt;a name=&quot;professional-support&quot;&gt;🛟 Professional Support&lt;/a&gt;

- Technical audit &amp; consulting: [Nuxt Experts](https://nuxt.com/enterprise/support)
- Custom development &amp; more: [Nuxt Agencies Partners](https://nuxt.com/enterprise/agencies)

## &lt;a name=&quot;follow-us&quot;&gt;🔗 Follow Us&lt;/a&gt;

&lt;p valign=&quot;center&quot;&gt;
  &lt;a href=&quot;https://go.nuxt.com/discord&quot;&gt;&lt;img width=&quot;20px&quot; src=&quot;./.github/assets/discord.svg&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://go.nuxt.com/x&quot;&gt;&lt;img width=&quot;20px&quot; src=&quot;./.github/assets/twitter.svg&quot; alt=&quot;Twitter&quot;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://go.nuxt.com/github&quot;&gt;&lt;img width=&quot;20px&quot; src=&quot;./.github/assets/github.svg&quot; alt=&quot;GitHub&quot;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://go.nuxt.com/bluesky&quot;&gt;&lt;img width=&quot;20px&quot; src=&quot;./.github/assets/bluesky.svg&quot; alt=&quot;Bluesky&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

## &lt;a name=&quot;license&quot;&gt;⚖️ License&lt;/a&gt;

[MIT](https://github.com/nuxt/nuxt/tree/main/LICENSE)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[better-auth/better-auth]]></title>
            <link>https://github.com/better-auth/better-auth</link>
            <guid>https://github.com/better-auth/better-auth</guid>
            <pubDate>Wed, 01 Oct 2025 00:05:20 GMT</pubDate>
            <description><![CDATA[The most comprehensive authentication framework for TypeScript]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/better-auth/better-auth">better-auth/better-auth</a></h1>
            <p>The most comprehensive authentication framework for TypeScript</p>
            <p>Language: TypeScript</p>
            <p>Stars: 21,245</p>
            <p>Forks: 1,641</p>
            <p>Stars today: 64 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;picture&gt;
    &lt;source srcset=&quot;./banner-dark.png&quot; media=&quot;(prefers-color-scheme: dark)&quot;&gt;
    &lt;source srcset=&quot;./banner.png&quot; media=&quot;(prefers-color-scheme: light)&quot;&gt;
    &lt;img src=&quot;./banner.png&quot; alt=&quot;Better Auth Logo&quot;&gt;
  &lt;/picture&gt;
  &lt;h2 align=&quot;center&quot;&gt;
    Better Auth
  &lt;/h2&gt;

  &lt;p align=&quot;center&quot;&gt;
    The most comprehensive authentication library for TypeScript
    &lt;br /&gt;
    &lt;a href=&quot;https://better-auth.com&quot;&gt;&lt;strong&gt;Learn more »&lt;/strong&gt;&lt;/a&gt;
    &lt;br /&gt;
    &lt;br /&gt;
    &lt;a href=&quot;https://discord.gg/better-auth&quot;&gt;Discord&lt;/a&gt;
    ·
    &lt;a href=&quot;https://better-auth.com&quot;&gt;Website&lt;/a&gt;
    ·
    &lt;a href=&quot;https://github.com/better-auth/better-auth/issues&quot;&gt;Issues&lt;/a&gt;
  &lt;/p&gt;

[![npm](https://img.shields.io/npm/dm/better-auth?style=flat&amp;colorA=000000&amp;colorB=000000)](https://npm.chart.dev/better-auth?primary=neutral&amp;gray=neutral&amp;theme=dark)
[![npm version](https://img.shields.io/npm/v/better-auth.svg?style=flat&amp;colorA=000000&amp;colorB=000000)](https://www.npmjs.com/package/better-auth)
[![GitHub stars](https://img.shields.io/github/stars/better-auth/better-auth?style=flat&amp;colorA=000000&amp;colorB=000000)](https://github.com/better-auth/better-auth/stargazers)
&lt;/p&gt;

## About the Project

Better Auth is framework-agnostic authentication (and authorization) library for TypeScript. It provides a comprehensive set of features out of the box and includes a plugin ecosystem that simplifies adding advanced functionalities with minimal code in short amount of time. Whether you need 2FA, multi-tenant support, or other complex features. It lets you focus on building your actual application instead of reinventing the wheel. 

### Why Better Auth

Authentication in the TypeScript ecosystem is a half-solved problem. Other open-source libraries often require a lot of additional code for anything beyond basic authentication. Rather than just pushing third-party services as the solution, I believe we can do better as a community—hence, Better Auth.

## Contribution

Better Auth is free and open source project licensed under the [MIT License](./LICENSE.md). You are free to do whatever you want with it.

You could help continuing its development by:

- [Contribute to the source code](./CONTRIBUTING.md)
- [Suggest new features and report issues](https://github.com/better-auth/better-auth/issues)

## Security
If you discover a security vulnerability within Better Auth, please send an e-mail to security@better-auth.com.

All reports will be promptly addressed, and you&#039;ll be credited accordingly.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[sst/opencode]]></title>
            <link>https://github.com/sst/opencode</link>
            <guid>https://github.com/sst/opencode</guid>
            <pubDate>Wed, 01 Oct 2025 00:05:19 GMT</pubDate>
            <description><![CDATA[AI coding agent, built for the terminal.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/sst/opencode">sst/opencode</a></h1>
            <p>AI coding agent, built for the terminal.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 25,964</p>
            <p>Forks: 1,865</p>
            <p>Stars today: 340 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://opencode.ai&quot;&gt;
    &lt;picture&gt;
      &lt;source srcset=&quot;packages/web/src/assets/logo-ornate-dark.svg&quot; media=&quot;(prefers-color-scheme: dark)&quot;&gt;
      &lt;source srcset=&quot;packages/web/src/assets/logo-ornate-light.svg&quot; media=&quot;(prefers-color-scheme: light)&quot;&gt;
      &lt;img src=&quot;packages/web/src/assets/logo-ornate-light.svg&quot; alt=&quot;opencode logo&quot;&gt;
    &lt;/picture&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;AI coding agent, built for the terminal.&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://opencode.ai/discord&quot;&gt;&lt;img alt=&quot;Discord&quot; src=&quot;https://img.shields.io/discord/1391832426048651334?style=flat-square&amp;label=discord&quot; /&gt;&lt;/a&gt;
  &lt;a href=&quot;https://www.npmjs.com/package/opencode-ai&quot;&gt;&lt;img alt=&quot;npm&quot; src=&quot;https://img.shields.io/npm/v/opencode-ai?style=flat-square&quot; /&gt;&lt;/a&gt;
  &lt;a href=&quot;https://github.com/sst/opencode/actions/workflows/publish.yml&quot;&gt;&lt;img alt=&quot;Build status&quot; src=&quot;https://img.shields.io/github/actions/workflow/status/sst/opencode/publish.yml?style=flat-square&amp;branch=dev&quot; /&gt;&lt;/a&gt;
&lt;/p&gt;

[![opencode Terminal UI](packages/web/src/assets/lander/screenshot.png)](https://opencode.ai)

---

### Installation

```bash
# YOLO
curl -fsSL https://opencode.ai/install | bash

# Package managers
npm i -g opencode-ai@latest        # or bun/pnpm/yarn
brew install sst/tap/opencode      # macOS and Linux
paru -S opencode-bin               # Arch Linux
```

&gt; [!TIP]
&gt; Remove versions older than 0.1.x before installing.

#### Installation Directory

The install script respects the following priority order for the installation path:

1. `$OPENCODE_INSTALL_DIR` - Custom installation directory
2. `$XDG_BIN_DIR` - XDG Base Directory Specification compliant path
3. `$HOME/bin` - Standard user binary directory (if exists or can be created)
4. `$HOME/.opencode/bin` - Default fallback

```bash
# Examples
OPENCODE_INSTALL_DIR=/usr/local/bin curl -fsSL https://opencode.ai/install | bash
XDG_BIN_DIR=$HOME/.local/bin curl -fsSL https://opencode.ai/install | bash
```

### Documentation

For more info on how to configure opencode [**head over to our docs**](https://opencode.ai/docs).

### Contributing

opencode is an opinionated tool so any fundamental feature needs to go through a
design process with the core team.

&gt; [!IMPORTANT]
&gt; We do not accept PRs for core features.

However we still merge a ton of PRs - you can contribute:

- Bug fixes
- Improvements to LLM performance
- Support for new providers
- Fixes for env specific quirks
- Missing standard behavior
- Documentation

Take a look at the git history to see what kind of PRs we end up merging.

&gt; [!NOTE]
&gt; If you do not follow the above guidelines we might close your PR.

To run opencode locally you need.

- Bun
- Golang 1.24.x

And run.

```bash
$ bun install
$ bun dev
```

#### Development Notes

**API Client**: After making changes to the TypeScript API endpoints in `packages/opencode/src/server/server.ts`, you will need the opencode team to generate a new stainless sdk for the clients.

### FAQ

#### How is this different than Claude Code?

It&#039;s very similar to Claude Code in terms of capability. Here are the key differences:

- 100% open source
- Not coupled to any provider. Although Anthropic is recommended, opencode can be used with OpenAI, Google or even local models. As models evolve the gaps between them will close and pricing will drop so being provider-agnostic is important.
- A focus on TUI. opencode is built by neovim users and the creators of [terminal.shop](https://terminal.shop); we are going to push the limits of what&#039;s possible in the terminal.
- A client/server architecture. This for example can allow opencode to run on your computer, while you can drive it remotely from a mobile app. Meaning that the TUI frontend is just one of the possible clients.

#### What&#039;s the other repo?

The other confusingly named repo has no relation to this one. You can [read the story behind it here](https://x.com/thdxr/status/1933561254481666466).

---

**Join our community** [Discord](https://discord.gg/opencode) | [X.com](https://x.com/opencode)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[growthbook/growthbook]]></title>
            <link>https://github.com/growthbook/growthbook</link>
            <guid>https://github.com/growthbook/growthbook</guid>
            <pubDate>Wed, 01 Oct 2025 00:05:18 GMT</pubDate>
            <description><![CDATA[Open Source Feature Flagging and A/B Testing Platform]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/growthbook/growthbook">growthbook/growthbook</a></h1>
            <p>Open Source Feature Flagging and A/B Testing Platform</p>
            <p>Language: TypeScript</p>
            <p>Stars: 6,974</p>
            <p>Forks: 605</p>
            <p>Stars today: 16 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.growthbook.io&quot;&gt;&lt;img src=&quot;https://cdn.growthbook.io/growthbook-logo@2x.png&quot; width=&quot;400px&quot; alt=&quot;GrowthBook - Open Source Feature Flagging and A/B Testing&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;b&gt;Open Source Feature Flagging and A/B Testing&lt;/b&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://github.com/growthbook/growthbook/github/actions/workflows/ci.yml&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/actions/workflow/status/growthbook/growthbook/ci.yml?branch=main&quot; alt=&quot;Build Status&quot; height=&quot;22&quot;/&gt;&lt;/a&gt;
    &lt;a href=&quot;https://github.com/growthbook/growthbook/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/growthbook/growthbook?color=blue&amp;sort=semver&quot; alt=&quot;Release&quot; height=&quot;22&quot;/&gt;&lt;/a&gt;
    &lt;a href=&quot;https://slack.growthbook.io?ref=readme-badge&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/slack-join-E01E5A?logo=slack&quot; alt=&quot;Join us on Slack&quot; height=&quot;22&quot;/&gt;&lt;/a&gt;
&lt;/p&gt;

Get up and running in 1 minute with:

```sh
git clone https://github.com/growthbook/growthbook.git
cd growthbook
docker compose up -d
```

Then visit http://localhost:3000

[![GrowthBook Screenshot](/features-screenshot.png)](https://www.growthbook.io)

## Our Philosophy

The top 1% of companies spend thousands of hours building their own feature flagging and A/B testing platforms in-house.
The other 99% are left paying for expensive 3rd party SaaS tools or hacking together unmaintained open source libraries.

We want to give all companies the flexibility and power of a fully-featured in-house platform without needing to build it themselves.

## Major Features

- 🏁 Feature flags with advanced targeting, gradual rollouts, and experiments
- 💻 SDKs for [React](https://docs.growthbook.io/lib/react), [Javascript](https://docs.growthbook.io/lib/js), [PHP](https://docs.growthbook.io/lib/php), [Ruby](https://docs.growthbook.io/lib/ruby), [Python](https://docs.growthbook.io/lib/python), [Go](https://docs.growthbook.io/lib/go), [Android](https://docs.growthbook.io/lib/kotlin), [iOS](https://docs.growthbook.io/lib/swift), and [more](https://docs.growthbook.io/lib)!
- 🆎 Powerful A/B test analysis with advanced statistics (CUPED, Sequential testing, Bayesian, SRM checks, and more)
- ❄️ Use your existing data stack - BigQuery, Mixpanel, Redshift, Google Analytics, [and more](https://docs.growthbook.io/app/datasources)
- ⬇️ Drill down into A/B test results by browser, country, or any other custom attribute
- 🪐 Export reports as a Jupyter Notebook!
- 📝 Document everything with screenshots and GitHub Flavored Markdown throughout
- 🔔 Webhooks and a REST API for building integrations

## Try GrowthBook

### Managed Cloud Hosting

Create a free [GrowthBook Cloud](https://app.growthbook.io) account to get started.

### Open Source

The included [docker-compose.yml](https://github.com/growthbook/growthbook/blob/main/docker-compose.yml) file contains the GrowthBook App and a MongoDB instance (for storing cached experiment results and metadata):

```sh
git clone https://github.com/growthbook/growthbook.git
cd growthbook
docker compose up -d
```

Then visit http://localhost:3000 to view the app.

Check out the full [Self-Hosting Instructions](https://docs.growthbook.io/self-host) for more details.

## Documentation and Support

View the [GrowthBook Docs](https://docs.growthbook.io) for info on how to configure and use the platform.

Join [our Slack community](https://slack.growthbook.io?ref=readme-support) if you get stuck, want to chat, or are thinking of a new feature.

Or email us at [hello@growthbook.io](mailto:hello@growthbook.io) if Slack isn&#039;t your thing.

We&#039;re here to help - and to make GrowthBook even better!

## Contributors

We ❤️ all contributions, big and small!

Read [CONTRIBUTING.md](/CONTRIBUTING.md) for how to setup your local development environment.

If you want to, you can reach out via [Slack](https://slack.growthbook.io?ref=readme-contributing) or [email](mailto:hello@growthbook.io) and we&#039;ll set up a pair programming session to get you started.

## License

GrowthBook is an Open Core product. The bulk of the code is under the permissive MIT license. There are several directories that are governed under a separate commercial license, the GrowthBook Enterprise License.

View the `LICENSE` file in this repository for the full text and details.

![GrowthBook Repository Stats](https://repobeats.axiom.co/api/embed/13ffc63ec5ce7fe45efa95dd326d9185517f0a15.svg &quot;GrowthBook Repository Stats&quot;)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[nocobase/nocobase]]></title>
            <link>https://github.com/nocobase/nocobase</link>
            <guid>https://github.com/nocobase/nocobase</guid>
            <pubDate>Wed, 01 Oct 2025 00:05:17 GMT</pubDate>
            <description><![CDATA[NocoBase is an extensibility-first, open-source no-code/low-code platform for building business applications and enterprise solutions.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/nocobase/nocobase">nocobase/nocobase</a></h1>
            <p>NocoBase is an extensibility-first, open-source no-code/low-code platform for building business applications and enterprise solutions.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 16,797</p>
            <p>Forks: 1,935</p>
            <p>Stars today: 11 stars today</p>
            <h2>README</h2><pre>English | [中文](./README.zh-CN.md) | [日本語](./README.ja-JP.md)

https://github.com/user-attachments/assets/a50c100a-4561-4e06-b2d2-d48098659ec0

&lt;p align=&quot;center&quot;&gt;
&lt;a href=&quot;https://trendshift.io/repositories/4112&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://trendshift.io/api/badge/repositories/4112&quot; alt=&quot;nocobase%2Fnocobase | Trendshift&quot; style=&quot;width: 250px; height: 55px;&quot; width=&quot;250&quot; height=&quot;55&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://www.producthunt.com/posts/nocobase?embed=true&amp;utm_source=badge-top-post-topic-badge&amp;utm_medium=badge&amp;utm_souce=badge-nocobase&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://api.producthunt.com/widgets/embed-image/v1/top-post-topic-badge.svg?post_id=456520&amp;theme=light&amp;period=weekly&amp;topic_id=267&quot; alt=&quot;NocoBase - Scalability&amp;#0045;first&amp;#0044;&amp;#0032;open&amp;#0045;source&amp;#0032;no&amp;#0045;code&amp;#0032;platform | Product Hunt&quot; style=&quot;width: 250px; height: 54px;&quot; width=&quot;250&quot; height=&quot;54&quot; /&gt;&lt;/a&gt;
&lt;/p&gt;

## What is NocoBase

NocoBase is an extensibility-first, open-source no-code development platform.   
Instead of investing years of time and millions of dollars in research and development, deploy NocoBase in a few minutes and you&#039;ll have a private, controllable, and extremely scalable no-code development platform!

Homepage:  
https://www.nocobase.com/  

Online Demo:  
https://demo.nocobase.com/new

Documents:  
https://docs.nocobase.com/

Forum:  
https://forum.nocobase.com/

Tutorials:  
https://www.nocobase.com/en/tutorials

Use Cases:  
https://www.nocobase.com/en/blog/tags/customer-stories

## Release Notes

Our [blog](https://www.nocobase.com/en/blog/timeline) is regularly updated with release notes and provides a weekly summary.

## Distinctive features

### 1. Data model-driven

Most form-, table-, or process-driven no-code products create data structures directly in the user interface, such as Airtable, where adding a new column to a table is adding a new field. This has the advantage of simplicity of use, but the disadvantage of limited functionality and flexibility to meet the needs of more complex scenarios.

NocoBase adopts the design idea of separating the data structure from the user interface, allowing you to create any number of blocks (data views) for the data collections, with different type, styles, content, and actions in each block. This balances the simplicity of no-code operation with the flexibility of native development.

![model](https://static-docs.nocobase.com/model.png)

### 2. What you see is what you get

NocoBase enables the development of complex and distinctive business systems, but this does not mean that complex and specialized operations are required. With a single click, configuration options are displayed on the usage interface, and administrators with system configuration privileges can directly configure the user interface in a WYSIWYG manner.

![wysiwyg](https://static-docs.nocobase.com/wysiwyg.gif)

### 3. Everything is implemented as plugins

NocoBase adopts plugin architecture, all new functions can be realized by developing and installing plugins, and expanding the functions is as easy as installing an APP on your phone.

![plugins](https://static-docs.nocobase.com/plugins.png)

## Installation

NocoBase supports three installation methods:

- &lt;a target=&quot;_blank&quot; href=&quot;https://docs.nocobase.com/welcome/getting-started/installation/docker-compose&quot;&gt;Installing With Docker (👍Recommended)&lt;/a&gt;

  Suitable for no-code scenarios, no code to write. When upgrading, just download the latest image and reboot.

- &lt;a target=&quot;_blank&quot; href=&quot;https://docs.nocobase.com/welcome/getting-started/installation/create-nocobase-app&quot;&gt;Installing from create-nocobase-app CLI&lt;/a&gt;

  The business code of the project is completely independent and supports low-code development.

- &lt;a target=&quot;_blank&quot; href=&quot;https://docs.nocobase.com/welcome/getting-started/installation/git-clone&quot;&gt;Installing from Git source code&lt;/a&gt;

  If you want to experience the latest unreleased version, or want to participate in the contribution, you need to make changes and debug on the source code, it is recommended to choose this installation method, which requires a high level of development skills, and if the code has been updated, you can git pull the latest code.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[puppeteer/puppeteer]]></title>
            <link>https://github.com/puppeteer/puppeteer</link>
            <guid>https://github.com/puppeteer/puppeteer</guid>
            <pubDate>Wed, 01 Oct 2025 00:05:16 GMT</pubDate>
            <description><![CDATA[JavaScript API for Chrome and Firefox]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/puppeteer/puppeteer">puppeteer/puppeteer</a></h1>
            <p>JavaScript API for Chrome and Firefox</p>
            <p>Language: TypeScript</p>
            <p>Stars: 92,503</p>
            <p>Forks: 9,296</p>
            <p>Stars today: 15 stars today</p>
            <h2>README</h2><pre># Puppeteer

[![build](https://github.com/puppeteer/puppeteer/actions/workflows/ci.yml/badge.svg?branch=main)](https://github.com/puppeteer/puppeteer/actions/workflows/ci.yml)
[![npm puppeteer package](https://img.shields.io/npm/v/puppeteer.svg)](https://npmjs.org/package/puppeteer)

&lt;img src=&quot;https://user-images.githubusercontent.com/10379601/29446482-04f7036a-841f-11e7-9872-91d1fc2ea683.png&quot; height=&quot;200&quot; align=&quot;right&quot;/&gt;

&gt; Puppeteer is a JavaScript library which provides a high-level API to control
&gt; Chrome or Firefox over the
&gt; [DevTools Protocol](https://chromedevtools.github.io/devtools-protocol/) or [WebDriver BiDi](https://pptr.dev/webdriver-bidi).
&gt; Puppeteer runs in the headless (no visible UI) by default

## [Get started](https://pptr.dev/docs) | [API](https://pptr.dev/api) | [FAQ](https://pptr.dev/faq) | [Contributing](https://pptr.dev/contributing) | [Troubleshooting](https://pptr.dev/troubleshooting)

## Installation

```bash npm2yarn
npm i puppeteer # Downloads compatible Chrome during installation.
npm i puppeteer-core # Alternatively, install as a library, without downloading Chrome.
```

## Example

```ts
import puppeteer from &#039;puppeteer&#039;;
// Or import puppeteer from &#039;puppeteer-core&#039;;

// Launch the browser and open a new blank page.
const browser = await puppeteer.launch();
const page = await browser.newPage();

// Navigate the page to a URL.
await page.goto(&#039;https://developer.chrome.com/&#039;);

// Set screen size.
await page.setViewport({width: 1080, height: 1024});

// Open the search menu using the keyboard.
await page.keyboard.press(&#039;/&#039;);

// Type into search box using accessible input name.
await page.locator(&#039;::-p-aria(Search)&#039;).fill(&#039;automate beyond recorder&#039;);

// Wait and click on first result.
await page.locator(&#039;.devsite-result-item-link&#039;).click();

// Locate the full title with a unique string.
const textSelector = await page
  .locator(&#039;::-p-text(Customize and automate)&#039;)
  .waitHandle();
const fullTitle = await textSelector?.evaluate(el =&gt; el.textContent);

// Print the full title.
console.log(&#039;The title of this blog post is &quot;%s&quot;.&#039;, fullTitle);

await browser.close();
```
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[microsoft/playwright-mcp]]></title>
            <link>https://github.com/microsoft/playwright-mcp</link>
            <guid>https://github.com/microsoft/playwright-mcp</guid>
            <pubDate>Wed, 01 Oct 2025 00:05:15 GMT</pubDate>
            <description><![CDATA[Playwright MCP server]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/microsoft/playwright-mcp">microsoft/playwright-mcp</a></h1>
            <p>Playwright MCP server</p>
            <p>Language: TypeScript</p>
            <p>Stars: 21,017</p>
            <p>Forks: 1,647</p>
            <p>Stars today: 124 stars today</p>
            <h2>README</h2><pre>## Playwright MCP

A Model Context Protocol (MCP) server that provides browser automation capabilities using [Playwright](https://playwright.dev). This server enables LLMs to interact with web pages through structured accessibility snapshots, bypassing the need for screenshots or visually-tuned models.

### Key Features

- **Fast and lightweight**. Uses Playwright&#039;s accessibility tree, not pixel-based input.
- **LLM-friendly**. No vision models needed, operates purely on structured data.
- **Deterministic tool application**. Avoids ambiguity common with screenshot-based approaches.

### Requirements
- Node.js 18 or newer
- VS Code, Cursor, Windsurf, Claude Desktop, Goose or any other MCP client

&lt;!--
// Generate using:
node utils/generate-links.js
--&gt;

### Getting started

First, install the Playwright MCP server with your client.

**Standard config** works in most of the tools:

```js
{
  &quot;mcpServers&quot;: {
    &quot;playwright&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [
        &quot;@playwright/mcp@latest&quot;
      ]
    }
  }
}
```

[&lt;img src=&quot;https://img.shields.io/badge/VS_Code-VS_Code?style=flat-square&amp;label=Install%20Server&amp;color=0098FF&quot; alt=&quot;Install in VS Code&quot;&gt;](https://insiders.vscode.dev/redirect?url=vscode%3Amcp%2Finstall%3F%257B%2522name%2522%253A%2522playwright%2522%252C%2522command%2522%253A%2522npx%2522%252C%2522args%2522%253A%255B%2522%2540playwright%252Fmcp%2540latest%2522%255D%257D) [&lt;img alt=&quot;Install in VS Code Insiders&quot; src=&quot;https://img.shields.io/badge/VS_Code_Insiders-VS_Code_Insiders?style=flat-square&amp;label=Install%20Server&amp;color=24bfa5&quot;&gt;](https://insiders.vscode.dev/redirect?url=vscode-insiders%3Amcp%2Finstall%3F%257B%2522name%2522%253A%2522playwright%2522%252C%2522command%2522%253A%2522npx%2522%252C%2522args%2522%253A%255B%2522%2540playwright%252Fmcp%2540latest%2522%255D%257D)


&lt;details&gt;
&lt;summary&gt;Claude Code&lt;/summary&gt;

Use the Claude Code CLI to add the Playwright MCP server:

```bash
claude mcp add playwright npx @playwright/mcp@latest
```
&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;Claude Desktop&lt;/summary&gt;

Follow the MCP install [guide](https://modelcontextprotocol.io/quickstart/user), use the standard config above.

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;Codex&lt;/summary&gt;

Create or edit the configuration file `~/.codex/config.toml` and add:

```toml
[mcp_servers.playwright]
command = &quot;npx&quot;
args = [&quot;@playwright/mcp@latest&quot;]
```

For more information, see the [Codex MCP documentation](https://github.com/openai/codex/blob/main/codex-rs/config.md#mcp_servers).

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;Cursor&lt;/summary&gt;

#### Click the button to install:

[&lt;img src=&quot;https://cursor.com/deeplink/mcp-install-dark.svg&quot; alt=&quot;Install in Cursor&quot;&gt;](https://cursor.com/en/install-mcp?name=Playwright&amp;config=eyJjb21tYW5kIjoibnB4IEBwbGF5d3JpZ2h0L21jcEBsYXRlc3QifQ%3D%3D)

#### Or install manually:

Go to `Cursor Settings` -&gt; `MCP` -&gt; `Add new MCP Server`. Name to your liking, use `command` type with the command `npx @playwright/mcp@latest`. You can also verify config or add command like arguments via clicking `Edit`.

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;Gemini CLI&lt;/summary&gt;

Follow the MCP install [guide](https://github.com/google-gemini/gemini-cli/blob/main/docs/tools/mcp-server.md#configure-the-mcp-server-in-settingsjson), use the standard config above.

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;Goose&lt;/summary&gt;

#### Click the button to install:

[![Install in Goose](https://block.github.io/goose/img/extension-install-dark.svg)](https://block.github.io/goose/extension?cmd=npx&amp;arg=%40playwright%2Fmcp%40latest&amp;id=playwright&amp;name=Playwright&amp;description=Interact%20with%20web%20pages%20through%20structured%20accessibility%20snapshots%20using%20Playwright)

#### Or install manually:

Go to `Advanced settings` -&gt; `Extensions` -&gt; `Add custom extension`. Name to your liking, use type `STDIO`, and set the `command` to `npx @playwright/mcp`. Click &quot;Add Extension&quot;.
&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;LM Studio&lt;/summary&gt;

#### Click the button to install:

[![Add MCP Server playwright to LM Studio](https://files.lmstudio.ai/deeplink/mcp-install-light.svg)](https://lmstudio.ai/install-mcp?name=playwright&amp;config=eyJjb21tYW5kIjoibnB4IiwiYXJncyI6WyJAcGxheXdyaWdodC9tY3BAbGF0ZXN0Il19)

#### Or install manually:

Go to `Program` in the right sidebar -&gt; `Install` -&gt; `Edit mcp.json`. Use the standard config above.
&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;opencode&lt;/summary&gt;

Follow the MCP Servers [documentation](https://opencode.ai/docs/mcp-servers/). For example in `~/.config/opencode/opencode.json`:

```json
{
  &quot;$schema&quot;: &quot;https://opencode.ai/config.json&quot;,
  &quot;mcp&quot;: {
    &quot;playwright&quot;: {
      &quot;type&quot;: &quot;local&quot;,
      &quot;command&quot;: [
        &quot;npx&quot;,
        &quot;@playwright/mcp@latest&quot;
      ],
      &quot;enabled&quot;: true
    }
  }
}

```
&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;Qodo Gen&lt;/summary&gt;

Open [Qodo Gen](https://docs.qodo.ai/qodo-documentation/qodo-gen) chat panel in VSCode or IntelliJ → Connect more tools → + Add new MCP → Paste the standard config above.

Click &lt;code&gt;Save&lt;/code&gt;.
&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;VS Code&lt;/summary&gt;

#### Click the button to install:

[&lt;img src=&quot;https://img.shields.io/badge/VS_Code-VS_Code?style=flat-square&amp;label=Install%20Server&amp;color=0098FF&quot; alt=&quot;Install in VS Code&quot;&gt;](https://insiders.vscode.dev/redirect?url=vscode%3Amcp%2Finstall%3F%257B%2522name%2522%253A%2522playwright%2522%252C%2522command%2522%253A%2522npx%2522%252C%2522args%2522%253A%255B%2522%2540playwright%252Fmcp%2540latest%2522%255D%257D) [&lt;img alt=&quot;Install in VS Code Insiders&quot; src=&quot;https://img.shields.io/badge/VS_Code_Insiders-VS_Code_Insiders?style=flat-square&amp;label=Install%20Server&amp;color=24bfa5&quot;&gt;](https://insiders.vscode.dev/redirect?url=vscode-insiders%3Amcp%2Finstall%3F%257B%2522name%2522%253A%2522playwright%2522%252C%2522command%2522%253A%2522npx%2522%252C%2522args%2522%253A%255B%2522%2540playwright%252Fmcp%2540latest%2522%255D%257D)

#### Or install manually:

Follow the MCP install [guide](https://code.visualstudio.com/docs/copilot/chat/mcp-servers#_add-an-mcp-server), use the standard config above. You can also install the Playwright MCP server using the VS Code CLI:

```bash
# For VS Code
code --add-mcp &#039;{&quot;name&quot;:&quot;playwright&quot;,&quot;command&quot;:&quot;npx&quot;,&quot;args&quot;:[&quot;@playwright/mcp@latest&quot;]}&#039;
```

After installation, the Playwright MCP server will be available for use with your GitHub Copilot agent in VS Code.
&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;Windsurf&lt;/summary&gt;

Follow Windsurf MCP [documentation](https://docs.windsurf.com/windsurf/cascade/mcp). Use the standard config above.

&lt;/details&gt;

### Configuration

Playwright MCP server supports following arguments. They can be provided in the JSON configuration above, as a part of the `&quot;args&quot;` list:

&lt;!--- Options generated by update-readme.js --&gt;

```
&gt; npx @playwright/mcp@latest --help
  --allowed-hosts &lt;hosts...&gt;            comma-separated list of hosts this
                                        server is allowed to serve from.
                                        Defaults to the host the server is bound
                                        to.
  --allowed-origins &lt;origins&gt;           semicolon-separated list of origins to
                                        allow the browser to request. Default is
                                        to allow all.
  --blocked-origins &lt;origins&gt;           semicolon-separated list of origins to
                                        block the browser from requesting.
                                        Blocklist is evaluated before allowlist.
                                        If used without the allowlist, requests
                                        not matching the blocklist are still
                                        allowed.
  --block-service-workers               block service workers
  --browser &lt;browser&gt;                   browser or chrome channel to use,
                                        possible values: chrome, firefox,
                                        webkit, msedge.
  --caps &lt;caps&gt;                         comma-separated list of additional
                                        capabilities to enable, possible values:
                                        vision, pdf.
  --cdp-endpoint &lt;endpoint&gt;             CDP endpoint to connect to.
  --cdp-header &lt;headers...&gt;             CDP headers to send with the connect
                                        request, multiple can be specified.
  --config &lt;path&gt;                       path to the configuration file.
  --device &lt;device&gt;                     device to emulate, for example: &quot;iPhone
                                        15&quot;
  --executable-path &lt;path&gt;              path to the browser executable.
  --extension                           Connect to a running browser instance
                                        (Edge/Chrome only). Requires the
                                        &quot;Playwright MCP Bridge&quot; browser
                                        extension to be installed.
  --grant-permissions &lt;permissions...&gt;  List of permissions to grant to the
                                        browser context, for example
                                        &quot;geolocation&quot;, &quot;clipboard-read&quot;,
                                        &quot;clipboard-write&quot;.
  --headless                            run browser in headless mode, headed by
                                        default
  --host &lt;host&gt;                         host to bind server to. Default is
                                        localhost. Use 0.0.0.0 to bind to all
                                        interfaces.
  --ignore-https-errors                 ignore https errors
  --init-script &lt;path...&gt;               path to JavaScript file to add as an
                                        initialization script. The script will
                                        be evaluated in every page before any of
                                        the page&#039;s scripts. Can be specified
                                        multiple times.
  --isolated                            keep the browser profile in memory, do
                                        not save it to disk.
  --image-responses &lt;mode&gt;              whether to send image responses to the
                                        client. Can be &quot;allow&quot; or &quot;omit&quot;,
                                        Defaults to &quot;allow&quot;.
  --no-sandbox                          disable the sandbox for all process
                                        types that are normally sandboxed.
  --output-dir &lt;path&gt;                   path to the directory for output files.
  --port &lt;port&gt;                         port to listen on for SSE transport.
  --proxy-bypass &lt;bypass&gt;               comma-separated domains to bypass proxy,
                                        for example
                                        &quot;.com,chromium.org,.domain.com&quot;
  --proxy-server &lt;proxy&gt;                specify proxy server, for example
                                        &quot;http://myproxy:3128&quot; or
                                        &quot;socks5://myproxy:8080&quot;
  --save-session                        Whether to save the Playwright MCP
                                        session into the output directory.
  --save-trace                          Whether to save the Playwright Trace of
                                        the session into the output directory.
  --save-video &lt;size&gt;                   Whether to save the video of the session
                                        into the output directory. For example
                                        &quot;--save-video=800x600&quot;
  --secrets &lt;path&gt;                      path to a file containing secrets in the
                                        dotenv format
  --shared-browser-context              reuse the same browser context between
                                        all connected HTTP clients.
  --storage-state &lt;path&gt;                path to the storage state file for
                                        isolated sessions.
  --timeout-action &lt;timeout&gt;            specify action timeout in milliseconds,
                                        defaults to 5000ms
  --timeout-navigation &lt;timeout&gt;        specify navigation timeout in
                                        milliseconds, defaults to 60000ms
  --user-agent &lt;ua string&gt;              specify user agent string
  --user-data-dir &lt;path&gt;                path to the user data directory. If not
                                        specified, a temporary directory will be
                                        created.
  --viewport-size &lt;size&gt;                specify browser viewport size in pixels,
                                        for example &quot;1280x720&quot;
```

&lt;!--- End of options generated section --&gt;

### User profile

You can run Playwright MCP with persistent profile like a regular browser (default), in isolated contexts for testing sessions, or connect to your existing browser using the browser extension.

**Persistent profile**

All the logged in information will be stored in the persistent profile, you can delete it between sessions if you&#039;d like to clear the offline state.
Persistent profile is located at the following locations and you can override it with the `--user-data-dir` argument.

```bash
# Windows
%USERPROFILE%\AppData\Local\ms-playwright\mcp-{channel}-profile

# macOS
- ~/Library/Caches/ms-playwright/mcp-{channel}-profile

# Linux
- ~/.cache/ms-playwright/mcp-{channel}-profile
```

**Isolated**

In the isolated mode, each session is started in the isolated profile. Every time you ask MCP to close the browser,
the session is closed and all the storage state for this session is lost. You can provide initial storage state
to the browser via the config&#039;s `contextOptions` or via the `--storage-state` argument. Learn more about the storage
state [here](https://playwright.dev/docs/auth).

```js
{
  &quot;mcpServers&quot;: {
    &quot;playwright&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [
        &quot;@playwright/mcp@latest&quot;,
        &quot;--isolated&quot;,
        &quot;--storage-state={path/to/storage.json}&quot;
      ]
    }
  }
}
```

**Browser Extension**

The Playwright MCP Chrome Extension allows you to connect to existing browser tabs and leverage your logged-in sessions and browser state. See [extension/README.md](extension/README.md) for installation and setup instructions.

### Configuration file

The Playwright MCP server can be configured using a JSON configuration file. You can specify the configuration file
using the `--config` command line option:

```bash
npx @playwright/mcp@latest --config path/to/config.json
```

&lt;details&gt;
&lt;summary&gt;Configuration file schema&lt;/summary&gt;

```typescript
{
  // Browser configuration
  browser?: {
    // Browser type to use (chromium, firefox, or webkit)
    browserName?: &#039;chromium&#039; | &#039;firefox&#039; | &#039;webkit&#039;;

    // Keep the browser profile in memory, do not save it to disk.
    isolated?: boolean;

    // Path to user data directory for browser profile persistence
    userDataDir?: string;

    // Browser launch options (see Playwright docs)
    // @see https://playwright.dev/docs/api/class-browsertype#browser-type-launch
    launchOptions?: {
      channel?: string;        // Browser channel (e.g. &#039;chrome&#039;)
      headless?: boolean;      // Run in headless mode
      executablePath?: string; // Path to browser executable
      // ... other Playwright launch options
    };

    // Browser context options
    // @see https://playwright.dev/docs/api/class-browser#browser-new-context
    contextOptions?: {
      viewport?: { width: number, height: number };
      // ... other Playwright context options
    };

    // CDP endpoint for connecting to existing browser
    cdpEndpoint?: string;

    // Remote Playwright server endpoint
    remoteEndpoint?: string;
  },

  // Server configuration
  server?: {
    port?: number;  // Port to listen on
    host?: string;  // Host to bind to (default: localhost)
  },

  // List of additional capabilities
  capabilities?: Array&lt;
    &#039;tabs&#039; |    // Tab management
    &#039;install&#039; | // Browser installation
    &#039;pdf&#039; |     // PDF generation
    &#039;vision&#039; |  // Coordinate-based interactions
  &gt;;

  // Directory for output files
  outputDir?: string;

  // Network configuration
  network?: {
    // List of origins to allow the browser to request. Default is to allow all. Origins matching both `allowedOrigins` and `blockedOrigins` will be blocked.
    allowedOrigins?: string[];

    // List of origins to block the browser to request. Origins matching both `allowedOrigins` and `blockedOrigins` will be blocked.
    blockedOrigins?: string[];
  };
 
  /**
   * Whether to send image responses to the client. Can be &quot;allow&quot; or &quot;omit&quot;. 
   * Defaults to &quot;allow&quot;.
   */
  imageResponses?: &#039;allow&#039; | &#039;omit&#039;;
}
```
&lt;/details&gt;

### Standalone MCP server

When running headed browser on system w/o display or from worker processes of the IDEs,
run the MCP server from environment with the DISPLAY and pass the `--port` flag to enable HTTP transport.

```bash
npx @playwright/mcp@latest --port 8931
```

And then in MCP client config, set the `url` to the HTTP endpoint:

```js
{
  &quot;mcpServers&quot;: {
    &quot;playwright&quot;: {
      &quot;url&quot;: &quot;http://localhost:8931/mcp&quot;
    }
  }
}
```

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Docker&lt;/b&gt;&lt;/summary&gt;

**NOTE:** The Docker implementation only supports headless chromium at the moment.

```js
{
  &quot;mcpServers&quot;: {
    &quot;playwright&quot;: {
      &quot;command&quot;: &quot;docker&quot;,
      &quot;args&quot;: [&quot;run&quot;, &quot;-i&quot;, &quot;--rm&quot;, &quot;--init&quot;, &quot;--pull=always&quot;, &quot;mcr.microsoft.com/playwright/mcp&quot;]
    }
  }
}
```

Or If you prefer to run the container as a long-lived service instead of letting the MCP client spawn it, use:

```
docker run -d -i --rm --init --pull=always \
  --entrypoint node \
  --name playwright \
  -p 8931:8931 \
  mcr.microsoft.com/playwright/mcp \
  cli.js --headless --browser chromium --no-sandbox --port 8931
```

The server will listen on host port **8931** and can be reached by any MCP client.  

You can build the Docker image yourself.

```
docker build -t mcr.microsoft.com/playwright/mcp .
```
&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Programmatic usage&lt;/b&gt;&lt;/summary&gt;

```js
import http from &#039;http&#039;;

import { createConnection } from &#039;@playwright/mcp&#039;;
import { SSEServerTransport } from &#039;@modelcontextprotocol/sdk/server/sse.js&#039;;

http.createServer(async (req, res) =&gt; {
  // ...

  // Creates a headless Playwright MCP server with SSE transport
  const connection = await createConnection({ browser: { launchOptions: { headless: true } } });
  const transport = new SSEServerTransport(&#039;/messages&#039;, res);
  await connection.connect(transport);

  // ...
});
```
&lt;/details&gt;

### Tools

&lt;!--- Tools generated by update-readme.js --&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Core automation&lt;/b&gt;&lt;/summary&gt;

&lt;!-- NOTE: This has been generated via update-readme.js --&gt;

- **browser_click**
  - Title: Click
  - Description: Perform click on a web page
  - Parameters:
    - `element` (string): Human-readable element description used to obtain permission to interact with the element
    - `ref` (string): Exact target element reference from the page snapshot
    - `doubleClick` (boolean, optional): Whether to perform a double click instead of a single click
    - `button` (string, optional): Button to click, defaults to left
    - `modifiers` (array, optional): Modifier keys to press
  - Read-only: **false**

&lt;!-- NOTE: This has been generated via update-readme.js --&gt;

- **browser_close**
  - Title: Close browser
  - Description: Close the page
  - Parameters: None
  - Read-only: **true**

&lt;!-- NOTE: This has been generated via update-readme.js --&gt;

- **browser_console_messages**
  - Title: Get console messages
  - Description: Returns all console messages
  - Parameters: None
  - Read-only: **true**

&lt;!-- NOTE: This has been generated via update-readme.js --&gt;

- **browser_drag**
  - Title: Drag mouse
  - Description: Perform drag and drop between two elements
  - Parameters:
    - `startElement` (string): Human-readable source element description used to o

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[coinbase/onchainkit]]></title>
            <link>https://github.com/coinbase/onchainkit</link>
            <guid>https://github.com/coinbase/onchainkit</guid>
            <pubDate>Wed, 01 Oct 2025 00:05:14 GMT</pubDate>
            <description><![CDATA[React components and TypeScript utilities to help you build top-tier onchain apps.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/coinbase/onchainkit">coinbase/onchainkit</a></h1>
            <p>React components and TypeScript utilities to help you build top-tier onchain apps.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 938</p>
            <p>Forks: 402</p>
            <p>Stars today: 13 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
  &lt;p&gt;
    &lt;a href=&quot;https://onchainkit.xyz&quot;&gt;
      &lt;img src=&quot;./assets/read-me-banner.png&quot; width=&quot;100%&quot; height=&quot;100%&quot; alt=&quot;OnchainKit logo vibes&quot;/&gt;
    &lt;/a&gt;
  &lt;/p&gt;

  &lt;h1 style=&quot;font-size: 3em; margin-bottom: 20px;&quot;&gt;
    OnchainKit
  &lt;/h1&gt;

  &lt;p style=&quot;font-size: 1.2em; max-width: 600px; margin: 0 auto 20px;&quot;&gt;
    React components and TypeScript utilities to help you build top-tier onchain apps.
  &lt;/p&gt;

&lt;p&gt;
  &lt;a href=&quot;https://www.npmjs.com/package/@coinbase/onchainkit&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/npm/v/@coinbase/onchainkit?style=flat-square&amp;color=0052FF&quot; alt=&quot;Version&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/coinbase/onchainkit/commits/main&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/last-commit/coinbase/onchainkit?color=0052FF&amp;style=flat-square&quot; alt=&quot;last update&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://www.npmjs.com/package/@coinbase/onchainkit&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/npm/dm/@coinbase/onchainkit?style=flat-square&amp;color=0052FF&quot; alt=&quot;Downloads per month&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://onchainkit.xyz/coverage&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/coverage-100%25-0052FF?style=flat-square&quot; alt=&quot;Code coverage&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/coinbase/onchainkit/blob/main/LICENSE.md&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/npm/l/@coinbase/onchainkit?style=flat-square&amp;color=0052FF&quot; alt=&quot;MIT License&quot; /&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
  &lt;a href=&quot;https://x.com/OnchainKit&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/twitter/follow/OnchainKit.svg?style=social&quot; alt=&quot;Follow @OnchainKit&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://discord.gg/invite/cdp&quot;&gt;
      &lt;img src=&quot;https://img.shields.io/badge/Chat%20on-Discord-5865F2?style=flat-square&amp;logo=discord&amp;logoColor=white&quot; alt=&quot;Chat on Discord&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/coinbase/onchainkit/stargazers&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/stars/coinbase/onchainkit&quot; alt=&quot;stars&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/coinbase/onchainkit/network/members&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/forks/coinbase/onchainkit&quot; alt=&quot;forks&quot; /&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;br /&gt;

## 🚀 Quickstart

Run `npm create onchain` to bootstrap an example onchain app with all the batteries included.

## ✨ Documentation

For documentation and guides, visit [onchainkit.xyz](https://onchainkit.xyz/).

## 🛠️ Contributing

### Overview

This project is set up as a monorepo with pnpm workspaces.

### Requirements

- Node.js v20
- pnpm v10

### Getting Started

1. Clone the repository

```bash
git clone https://github.com/coinbase/onchainkit.git
```

2. Install dependencies

```bash
pnpm install
```

### Running packages

To run a script in a single package, use the following command:

```bash
pnpm [-F | --filter] &lt;package-name&gt; &lt;script-name&gt;
```

To run a script in all packages, use the following command:

```bash
pnpm run &lt;script-name&gt;
```

### Shorthands

We provide shorthands to filter by project in the root `package.json`.

The following shorthands are available:

- `pnpm f:ock`: `pnpm --filter @coinbase/onchainkit`
- `pnpm f:play`: `pnpm --filter playground`
- `pnpm f:create`: `pnpm --filter create-onchain`
- `pnpm f:manifest`: `pnpm --filter miniapp-manifest-generator`

### Development

When working on components, you can build OnchainKit in watch mode and start the playground to view your components with the following command:

```bash
pnpm f:play dev:watch
```

Then, you can view the playground at [http://localhost:3000](http://localhost:3000).


## 🌁 Team and Community

- **OnchainKit** ([X](https://x.com/Onchainkit), [Warpcast](https://warpcast.com/onchainkit))
- [Tina He](https://github.com/fakepixels) ([X](https://x.com/fkpxls))
- [Mind Apivessa](https://github.com/mindapivessa) ([X](https://x.com/spicypaprika_))
- [Alissa Crane](https://github.com/abcrane123) ([X](https://x.com/abcrane123))
- [Alec Chen](https://github.com/0xAlec) ([X](https://x.com/0xAlec))
- [Paul Cramer](https://github.com/cpcramer) ([X](https://x.com/PaulCramer_))
- [Shelley Lai](https://github.com/0xchiaroscuro) ([X](https://x.com/hey_shells), [Warpcast](https://warpcast.com/chiaroscuro))
- [Léo Galley](https://github.com/kirkas) ([X](https://x.com/artefact_lad))
- [Adam Lessey](https://github.com/alessey) ([X](https://x.com/alessey))

## 💫 Contributors

&lt;a href=&quot;https://github.com/coinbase/onchainkit/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=coinbase/onchainkit&quot; /&gt;
&lt;/a&gt;

## 🌊 License

This project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[excalidraw/excalidraw]]></title>
            <link>https://github.com/excalidraw/excalidraw</link>
            <guid>https://github.com/excalidraw/excalidraw</guid>
            <pubDate>Wed, 01 Oct 2025 00:05:13 GMT</pubDate>
            <description><![CDATA[Virtual whiteboard for sketching hand-drawn like diagrams]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/excalidraw/excalidraw">excalidraw/excalidraw</a></h1>
            <p>Virtual whiteboard for sketching hand-drawn like diagrams</p>
            <p>Language: TypeScript</p>
            <p>Stars: 107,776</p>
            <p>Forks: 10,969</p>
            <p>Stars today: 58 stars today</p>
            <h2>README</h2><pre>&lt;a href=&quot;https://excalidraw.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;
  &lt;picture&gt;
    &lt;source media=&quot;(prefers-color-scheme: dark)&quot; alt=&quot;Excalidraw&quot; srcset=&quot;https://excalidraw.nyc3.cdn.digitaloceanspaces.com/github/excalidraw_github_cover_2_dark.png&quot; /&gt;
    &lt;img alt=&quot;Excalidraw&quot; src=&quot;https://excalidraw.nyc3.cdn.digitaloceanspaces.com/github/excalidraw_github_cover_2.png&quot; /&gt;
  &lt;/picture&gt;
&lt;/a&gt;

&lt;h4 align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://excalidraw.com&quot;&gt;Excalidraw Editor&lt;/a&gt; |
  &lt;a href=&quot;https://plus.excalidraw.com/blog&quot;&gt;Blog&lt;/a&gt; |
  &lt;a href=&quot;https://docs.excalidraw.com&quot;&gt;Documentation&lt;/a&gt; |
  &lt;a href=&quot;https://plus.excalidraw.com&quot;&gt;Excalidraw+&lt;/a&gt;
&lt;/h4&gt;

&lt;div align=&quot;center&quot;&gt;
  &lt;h2&gt;
    An open source virtual hand-drawn style whiteboard. &lt;/br&gt;
    Collaborative and end-to-end encrypted. &lt;/br&gt;
  &lt;br /&gt;
  &lt;/h2&gt;
&lt;/div&gt;

&lt;br /&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/excalidraw/excalidraw/blob/master/LICENSE&quot;&gt;
    &lt;img alt=&quot;Excalidraw is released under the MIT license.&quot; src=&quot;https://img.shields.io/badge/license-MIT-blue.svg&quot;  /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://www.npmjs.com/package/@excalidraw/excalidraw&quot;&gt;
    &lt;img alt=&quot;npm downloads/month&quot; src=&quot;https://img.shields.io/npm/dm/@excalidraw/excalidraw&quot;  /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://docs.excalidraw.com/docs/introduction/contributing&quot;&gt;
    &lt;img alt=&quot;PRs welcome!&quot; src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat&quot;  /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://discord.gg/UexuTaE&quot;&gt;
    &lt;img alt=&quot;Chat on Discord&quot; src=&quot;https://img.shields.io/discord/723672430744174682?color=738ad6&amp;label=Chat%20on%20Discord&amp;logo=discord&amp;logoColor=ffffff&amp;widge=false&quot;/&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://deepwiki.com/excalidraw/excalidraw&quot;&gt;
    &lt;img alt=&quot;Ask DeepWiki&quot; src=&quot;https://deepwiki.com/badge.svg&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://twitter.com/excalidraw&quot;&gt;
    &lt;img alt=&quot;Follow Excalidraw on Twitter&quot; src=&quot;https://img.shields.io/twitter/follow/excalidraw.svg?label=follow+@excalidraw&amp;style=social&amp;logo=twitter&quot;/&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
  &lt;figure&gt;
    &lt;a href=&quot;https://excalidraw.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;
      &lt;img src=&quot;https://excalidraw.nyc3.cdn.digitaloceanspaces.com/github%2Fproduct_showcase.png&quot; alt=&quot;Product showcase&quot; /&gt;
    &lt;/a&gt;
    &lt;figcaption&gt;
      &lt;p align=&quot;center&quot;&gt;
        Create beautiful hand-drawn like diagrams, wireframes, or whatever you like.
      &lt;/p&gt;
    &lt;/figcaption&gt;
  &lt;/figure&gt;
&lt;/div&gt;

## Features

The Excalidraw editor (npm package) supports:

- 💯&amp;nbsp;Free &amp; open-source.
- 🎨&amp;nbsp;Infinite, canvas-based whiteboard.
- ✍️&amp;nbsp;Hand-drawn like style.
- 🌓&amp;nbsp;Dark mode.
- 🏗️&amp;nbsp;Customizable.
- 📷&amp;nbsp;Image support.
- 😀&amp;nbsp;Shape libraries support.
- 🌐&amp;nbsp;Localization (i18n) support.
- 🖼️&amp;nbsp;Export to PNG, SVG &amp; clipboard.
- 💾&amp;nbsp;Open format - export drawings as an `.excalidraw` json file.
- ⚒️&amp;nbsp;Wide range of tools - rectangle, circle, diamond, arrow, line, free-draw, eraser...
- ➡️&amp;nbsp;Arrow-binding &amp; labeled arrows.
- 🔙&amp;nbsp;Undo / Redo.
- 🔍&amp;nbsp;Zoom and panning support.

## Excalidraw.com

The app hosted at [excalidraw.com](https://excalidraw.com) is a minimal showcase of what you can build with Excalidraw. Its [source code](https://github.com/excalidraw/excalidraw/tree/master/excalidraw-app) is part of this repository as well, and the app features:

- 📡&amp;nbsp;PWA support (works offline).
- 🤼&amp;nbsp;Real-time collaboration.
- 🔒&amp;nbsp;End-to-end encryption.
- 💾&amp;nbsp;Local-first support (autosaves to the browser).
- 🔗&amp;nbsp;Shareable links (export to a readonly link you can share with others).

We&#039;ll be adding these features as drop-in plugins for the npm package in the future.

## Quick start

**Note:** following instructions are for installing the Excalidraw [npm package](https://www.npmjs.com/package/@excalidraw/excalidraw) when integrating Excalidraw into your own app. To run the repository locally for development, please refer to our [Development Guide](https://docs.excalidraw.com/docs/introduction/development).

Use `npm` or `yarn` to install the package.

```bash
npm install react react-dom @excalidraw/excalidraw
# or
yarn add react react-dom @excalidraw/excalidraw
```

Check out our [documentation](https://docs.excalidraw.com/docs/@excalidraw/excalidraw/installation) for more details!

## Contributing

- Missing something or found a bug? [Report here](https://github.com/excalidraw/excalidraw/issues).
- Want to contribute? Check out our [contribution guide](https://docs.excalidraw.com/docs/introduction/contributing) or let us know on [Discord](https://discord.gg/UexuTaE).
- Want to help with translations? See the [translation guide](https://docs.excalidraw.com/docs/introduction/contributing#translating).

## Integrations

- [VScode extension](https://marketplace.visualstudio.com/items?itemName=pomdtr.excalidraw-editor)
- [npm package](https://www.npmjs.com/package/@excalidraw/excalidraw)

## Who&#039;s integrating Excalidraw

[Google Cloud](https://googlecloudcheatsheet.withgoogle.com/architecture) • [Meta](https://meta.com/) • [CodeSandbox](https://codesandbox.io/) • [Obsidian Excalidraw](https://github.com/zsviczian/obsidian-excalidraw-plugin) • [Replit](https://replit.com/) • [Slite](https://slite.com/) • [Notion](https://notion.so/) • [HackerRank](https://www.hackerrank.com/) • and many others

## Sponsors &amp; support

If you like the project, you can become a sponsor at [Open Collective](https://opencollective.com/excalidraw) or use [Excalidraw+](https://plus.excalidraw.com/).

## Thank you for supporting Excalidraw

[&lt;img src=&quot;https://opencollective.com/excalidraw/tiers/sponsors/0/avatar.svg?avatarHeight=120&quot;/&gt;](https://opencollective.com/excalidraw/tiers/sponsors/0/website) [&lt;img src=&quot;https://opencollective.com/excalidraw/tiers/sponsors/1/avatar.svg?avatarHeight=120&quot;/&gt;](https://opencollective.com/excalidraw/tiers/sponsors/1/website) [&lt;img src=&quot;https://opencollective.com/excalidraw/tiers/sponsors/2/avatar.svg?avatarHeight=120&quot;/&gt;](https://opencollective.com/excalidraw/tiers/sponsors/2/website) [&lt;img src=&quot;https://opencollective.com/excalidraw/tiers/sponsors/3/avatar.svg?avatarHeight=120&quot;/&gt;](https://opencollective.com/excalidraw/tiers/sponsors/3/website) [&lt;img src=&quot;https://opencollective.com/excalidraw/tiers/sponsors/4/avatar.svg?avatarHeight=120&quot;/&gt;](https://opencollective.com/excalidraw/tiers/sponsors/4/website) [&lt;img src=&quot;https://opencollective.com/excalidraw/tiers/sponsors/5/avatar.svg?avatarHeight=120&quot;/&gt;](https://opencollective.com/excalidraw/tiers/sponsors/5/website) [&lt;img src=&quot;https://opencollective.com/excalidraw/tiers/sponsors/6/avatar.svg?avatarHeight=120&quot;/&gt;](https://opencollective.com/excalidraw/tiers/sponsors/6/website) [&lt;img src=&quot;https://opencollective.com/excalidraw/tiers/sponsors/7/avatar.svg?avatarHeight=120&quot;/&gt;](https://opencollective.com/excalidraw/tiers/sponsors/7/website) [&lt;img src=&quot;https://opencollective.com/excalidraw/tiers/sponsors/8/avatar.svg?avatarHeight=120&quot;/&gt;](https://opencollective.com/excalidraw/tiers/sponsors/8/website) [&lt;img src=&quot;https://opencollective.com/excalidraw/tiers/sponsors/9/avatar.svg?avatarHeight=120&quot;/&gt;](https://opencollective.com/excalidraw/tiers/sponsors/9/website) [&lt;img src=&quot;https://opencollective.com/excalidraw/tiers/sponsors/10/avatar.svg?avatarHeight=120&quot;/&gt;](https://opencollective.com/excalidraw/tiers/sponsors/10/website)

&lt;a href=&quot;https://opencollective.com/excalidraw#category-CONTRIBUTE&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/excalidraw/tiers/backers.svg?avatarHeight=32&quot;/&gt;&lt;/a&gt;

Last but not least, we&#039;re thankful to these companies for offering their services for free:

[![Vercel](./.github/assets/vercel.svg)](https://vercel.com) [![Sentry](./.github/assets/sentry.svg)](https://sentry.io) [![Crowdin](./.github/assets/crowdin.svg)](https://crowdin.com)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[shadcn-ui/ui]]></title>
            <link>https://github.com/shadcn-ui/ui</link>
            <guid>https://github.com/shadcn-ui/ui</guid>
            <pubDate>Wed, 01 Oct 2025 00:05:12 GMT</pubDate>
            <description><![CDATA[A set of beautifully-designed, accessible components and a code distribution platform. Works with your favorite frameworks. Open Source. Open Code.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/shadcn-ui/ui">shadcn-ui/ui</a></h1>
            <p>A set of beautifully-designed, accessible components and a code distribution platform. Works with your favorite frameworks. Open Source. Open Code.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 95,701</p>
            <p>Forks: 6,805</p>
            <p>Stars today: 64 stars today</p>
            <h2>README</h2><pre># shadcn/ui

Accessible and customizable components that you can copy and paste into your apps. Free. Open Source. **Use this to build your own component library**.

![hero](apps/www/public/og.jpg)

## Documentation

Visit http://ui.shadcn.com/docs to view the documentation.

## Contributing

Please read the [contributing guide](/CONTRIBUTING.md).

## License

Licensed under the [MIT license](https://github.com/shadcn/ui/blob/main/LICENSE.md).
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
    </channel>
</rss>