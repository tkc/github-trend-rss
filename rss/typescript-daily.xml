<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for typescript - TypeScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for typescript.</description>
        <lastBuildDate>Fri, 18 Jul 2025 00:04:59 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[maotoumao/MusicFree]]></title>
            <link>https://github.com/maotoumao/MusicFree</link>
            <guid>https://github.com/maotoumao/MusicFree</guid>
            <pubDate>Fri, 18 Jul 2025 00:04:59 GMT</pubDate>
            <description><![CDATA[Êèí‰ª∂Âåñ„ÄÅÂÆöÂà∂Âåñ„ÄÅÊó†ÂπøÂëäÁöÑÂÖçË¥πÈü≥‰πêÊí≠ÊîæÂô®]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/maotoumao/MusicFree">maotoumao/MusicFree</a></h1>
            <p>Êèí‰ª∂Âåñ„ÄÅÂÆöÂà∂Âåñ„ÄÅÊó†ÂπøÂëäÁöÑÂÖçË¥πÈü≥‰πêÊí≠ÊîæÂô®</p>
            <p>Language: TypeScript</p>
            <p>Stars: 18,482</p>
            <p>Forks: 1,169</p>
            <p>Stars today: 331 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[AykutSarac/jsoncrack.com]]></title>
            <link>https://github.com/AykutSarac/jsoncrack.com</link>
            <guid>https://github.com/AykutSarac/jsoncrack.com</guid>
            <pubDate>Fri, 18 Jul 2025 00:04:58 GMT</pubDate>
            <description><![CDATA[‚ú® Innovative and open-source visualization application that transforms various data formats, such as JSON, YAML, XML, CSV and more, into interactive graphs.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/AykutSarac/jsoncrack.com">AykutSarac/jsoncrack.com</a></h1>
            <p>‚ú® Innovative and open-source visualization application that transforms various data formats, such as JSON, YAML, XML, CSV and more, into interactive graphs.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 40,146</p>
            <p>Forks: 2,693</p>
            <p>Stars today: 53 stars today</p>
            <h2>README</h2><pre>&lt;!-- PROJECT LOGO --&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/AykutSarac/jsoncrack.com&quot;&gt;
   &lt;img src=&quot;./public/assets/192.png&quot; height=&quot;50&quot; alt=&quot;Logo&quot;&gt;
  &lt;/a&gt;

  &lt;h1 align=&quot;center&quot;&gt;JSON Crack&lt;/h1&gt;

  &lt;p align=&quot;center&quot;&gt;
    The open-source JSON Editor.
    &lt;br /&gt;
    &lt;a href=&quot;https://jsoncrack.com&quot;&gt;&lt;strong&gt;Learn more ¬ª&lt;/strong&gt;&lt;/a&gt;
    &lt;br /&gt;
    &lt;br /&gt;
    &lt;a href=&quot;https://todiagram.com&quot;&gt;ToDiagram&lt;/a&gt;
    ¬∑
    &lt;a href=&quot;https://discord.gg/yVyTtCRueq&quot;&gt;Discord&lt;/a&gt;
    ¬∑
    &lt;a href=&quot;https://jsoncrack.com&quot;&gt;Website&lt;/a&gt;
    ¬∑
    &lt;a href=&quot;https://github.com/AykutSarac/jsoncrack.com/issues&quot;&gt;Issues&lt;/a&gt;
    ¬∑
    &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=AykutSarac.jsoncrack-vscode&quot;&gt;VS Code&lt;/a&gt;
  &lt;/p&gt;
&lt;/p&gt;

&lt;!-- ABOUT THE PROJECT --&gt;

## About the Project

&lt;img width=&quot;100%&quot; alt=&quot;booking-screen&quot; src=&quot;./public/assets/editor.webp&quot;&gt;

## Visualize JSON into interactive graphs

JSON Crack is a tool for visualizing JSON data in a structured, interactive graphs, making it easier to explore, format, and validate JSON. It offers features like converting JSON to other formats (CSV, YAML), generating JSON Schema, executing queries, and exporting visualizations as images. Designed for both readability and usability.

* **Visualizer**: Instantly convert JSON, YAML, CSV, XML, and TOML into interactive graphs or trees in dark or light mode.
* **Convert**: Seamlessly transform data formats, like JSON to CSV or XML to JSON, for easy sharing.
* **Format &amp; Validate**: Beautify and validate JSON, YAML, and CSV for clear and accurate data.
* **Code Generation**: Generate TypeScript interfaces, Golang structs, and JSON Schema.
* **JSON Schema**: Create JSON Schema, mock data, and validate various data formats.
* **Advanced Tools**: Decode JWT, randomize data, and run jq or JSON path queries.
* **Export Image**: Download your visualization as PNG, JPEG, or SVG.
* **Privacy**: All data processing is local; nothing is stored on our servers.

## Recognition

&lt;a href=&quot;https://news.ycombinator.com/item?id=32626873&quot;&gt;
  &lt;img
    style=&quot;width: 250px; height: 54px;&quot; width=&quot;250&quot; height=&quot;54&quot;
    alt=&quot;Featured on Hacker News&quot;
    src=&quot;https://hackernews-badge.vercel.app/api?id=32626873&quot;
  /&gt;
&lt;/a&gt;

&lt;a href=&quot;https://producthunt.com/posts/JSON-Crack?utm_source=badge-featured&amp;utm_medium=badge&amp;utm_souce=badge-jsoncrack&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=332281&amp;theme=light&quot; alt=&quot;JSON Crack | Product Hunt&quot; style=&quot;width: 250px; height: 54px;&quot; width=&quot;250&quot; height=&quot;54&quot; /&gt;&lt;/a&gt;

### Built With

- [Next.js](https://nextjs.org/?ref=jsoncrack.com)
- [React.js](https://reactjs.org/?ref=jsoncrack.com)
- [Reaflow](https://reaflow.dev/?ref=jsoncrack.com)
- [Monaco Editor](https://github.com/suren-atoyan/monaco-react)

## Stay Up-to-Date

JSON Crack officially launched as v1.0 on the 17th of February 2022 and we&#039;ve come a long way so far. Watch **releases** of this repository to be notified of future updates:

&lt;a href=&quot;https://github.com/AykutSarac/jsoncrack.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/AykutSarac/jsoncrack.com&quot; alt=&quot;Star at GitHub&quot; /&gt;&lt;/a&gt;

&lt;!-- GETTING STARTED --&gt;

## Getting Started

To get a local copy up and running, please follow these simple steps.

### Prerequisites

Here is what you need to be able to run JSON Crack.

- Node.js (Version: &gt;=18.x)
- Pnpm _(recommended)_


## Development

### Setup

1. Clone the repo into a public GitHub repository (or fork https://github.com/AykutSarac/jsoncrack.com/fork). If you plan to distribute the code, read the [`LICENSE`](/LICENSE.md) for additional details.

   ```sh
   git clone https://github.com/AykutSarac/jsoncrack.com.git
   ```

2. Go to the project folder

   ```sh
   cd jsoncrack.com
   ```

3. Install packages

   ```sh
   pnpm install
   ```

4. Run the project

   ```sh
   pnpm dev

   # Running on http://localhost:3000/
   ```

### Docker

üê≥ A [`Dockerfile`](Dockerfile) is provided in the root of the repository.
If you want to run JSON Crack locally:

```console
# Build a Docker image with:
docker compose build

# Run locally with `docker-compose`
docker compose up

# Go to http://localhost:8888
```

## Configuration

The supported node limit can be changed by editing the `NEXT_PUBLIC_NODE_LIMIT` value in the `.env` file at the project root.

&lt;!-- LICENSE --&gt;

## License

See [`LICENSE`](/LICENSE.md) for more information.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[musistudio/claude-code-router]]></title>
            <link>https://github.com/musistudio/claude-code-router</link>
            <guid>https://github.com/musistudio/claude-code-router</guid>
            <pubDate>Fri, 18 Jul 2025 00:04:57 GMT</pubDate>
            <description><![CDATA[Use Claude Code as the foundation for coding infrastructure, allowing you to decide how to interact with the model while enjoying updates from Anthropic.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/musistudio/claude-code-router">musistudio/claude-code-router</a></h1>
            <p>Use Claude Code as the foundation for coding infrastructure, allowing you to decide how to interact with the model while enjoying updates from Anthropic.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 5,392</p>
            <p>Forks: 409</p>
            <p>Stars today: 327 stars today</p>
            <h2>README</h2><pre># Claude Code Router

[‰∏≠ÊñáÁâà](README_zh.md)

&gt; A powerful tool to route Claude Code requests to different models and customize any request.

![](blog/images/claude-code.png)

## ‚ú® Features

-   **Model Routing**: Route requests to different models based on your needs (e.g., background tasks, thinking, long context).
-   **Multi-Provider Support**: Supports various model providers like OpenRouter, DeepSeek, Ollama, Gemini, Volcengine, and SiliconFlow.
-   **Request/Response Transformation**: Customize requests and responses for different providers using transformers.
-   **Dynamic Model Switching**: Switch models on-the-fly within Claude Code using the `/model` command.
-   **GitHub Actions Integration**: Trigger Claude Code tasks in your GitHub workflows.
-   **Plugin System**: Extend functionality with custom transformers.

## üöÄ Getting Started

### 1. Installation

First, ensure you have [Claude Code](https://docs.anthropic.com/en/docs/claude-code/quickstart) installed:

```shell
npm install -g @anthropic-ai/claude-code
```

Then, install Claude Code Router:

```shell
npm install -g @musistudio/claude-code-router
```

### 2. Configuration

Create and configure your `~/.claude-code-router/config.json` file. For more details, you can refer to `config.example.json`.

The `config.json` file has several key sections:
- **`PROXY_URL`** (optional): You can set a proxy for API requests, for example: `&quot;PROXY_URL&quot;: &quot;http://127.0.0.1:7890&quot;`.
- **`LOG`** (optional): You can enable logging by setting it to `true`. The log file will be located at `$HOME/.claude-code-router.log`.
- **`APIKEY`** (optional): You can set a secret key to authenticate requests. When set, clients must provide this key in the `Authorization` header (e.g., `Bearer your-secret-key`) or the `x-api-key` header. Example: `&quot;APIKEY&quot;: &quot;your-secret-key&quot;`.
- **`HOST`** (optional): You can set the host address for the server. If `APIKEY` is not set, the host will be forced to `127.0.0.1` for security reasons to prevent unauthorized access. Example: `&quot;HOST&quot;: &quot;0.0.0.0&quot;`.

- **`Providers`**: Used to configure different model providers.
- **`Router`**: Used to set up routing rules. `default` specifies the default model, which will be used for all requests if no other route is configured.

Here is a comprehensive example:

```json
{
  &quot;APIKEY&quot;: &quot;your-secret-key&quot;,
  &quot;PROXY_URL&quot;: &quot;http://127.0.0.1:7890&quot;,
  &quot;LOG&quot;: true,
  &quot;Providers&quot;: [
    {
      &quot;name&quot;: &quot;openrouter&quot;,
      &quot;api_base_url&quot;: &quot;https://openrouter.ai/api/v1/chat/completions&quot;,
      &quot;api_key&quot;: &quot;sk-xxx&quot;,
      &quot;models&quot;: [
        &quot;google/gemini-2.5-pro-preview&quot;,
        &quot;anthropic/claude-sonnet-4&quot;,
        &quot;anthropic/claude-3.5-sonnet&quot;
      ],
      &quot;transformer&quot;: { &quot;use&quot;: [&quot;openrouter&quot;] }
    },
    {
      &quot;name&quot;: &quot;deepseek&quot;,
      &quot;api_base_url&quot;: &quot;https://api.deepseek.com/chat/completions&quot;,
      &quot;api_key&quot;: &quot;sk-xxx&quot;,
      &quot;models&quot;: [&quot;deepseek-chat&quot;, &quot;deepseek-reasoner&quot;],
      &quot;transformer&quot;: {
        &quot;use&quot;: [&quot;deepseek&quot;],
        &quot;deepseek-chat&quot;: { &quot;use&quot;: [&quot;tooluse&quot;] }
      }
    },
    {
      &quot;name&quot;: &quot;ollama&quot;,
      &quot;api_base_url&quot;: &quot;http://localhost:11434/v1/chat/completions&quot;,
      &quot;api_key&quot;: &quot;ollama&quot;,
      &quot;models&quot;: [&quot;qwen2.5-coder:latest&quot;]
    }
  ],
  &quot;Router&quot;: {
    &quot;default&quot;: &quot;deepseek,deepseek-chat&quot;,
    &quot;background&quot;: &quot;ollama,qwen2.5-coder:latest&quot;,
    &quot;think&quot;: &quot;deepseek,deepseek-reasoner&quot;,
    &quot;longContext&quot;: &quot;openrouter,google/gemini-2.5-pro-preview&quot;
  }
}
```


### 3. Running Claude Code with the Router

Start Claude Code using the router:

```shell
ccr code
```

#### Providers

The `Providers` array is where you define the different model providers you want to use. Each provider object requires:

-   `name`: A unique name for the provider.
-   `api_base_url`: The full API endpoint for chat completions.
-   `api_key`: Your API key for the provider.
-   `models`: A list of model names available from this provider.
-   `transformer` (optional): Specifies transformers to process requests and responses.

#### Transformers

Transformers allow you to modify the request and response payloads to ensure compatibility with different provider APIs.

-   **Global Transformer**: Apply a transformer to all models from a provider. In this example, the `openrouter` transformer is applied to all models under the `openrouter` provider.
    ```json
     {
       &quot;name&quot;: &quot;openrouter&quot;,
       &quot;api_base_url&quot;: &quot;https://openrouter.ai/api/v1/chat/completions&quot;,
       &quot;api_key&quot;: &quot;sk-xxx&quot;,
       &quot;models&quot;: [
         &quot;google/gemini-2.5-pro-preview&quot;,
         &quot;anthropic/claude-sonnet-4&quot;,
         &quot;anthropic/claude-3.5-sonnet&quot;
       ],
       &quot;transformer&quot;: { &quot;use&quot;: [&quot;openrouter&quot;] }
     }
    ```
-   **Model-Specific Transformer**: Apply a transformer to a specific model. In this example, the `deepseek` transformer is applied to all models, and an additional `tooluse` transformer is applied only to the `deepseek-chat` model.
    ```json
     {
       &quot;name&quot;: &quot;deepseek&quot;,
       &quot;api_base_url&quot;: &quot;https://api.deepseek.com/chat/completions&quot;,
       &quot;api_key&quot;: &quot;sk-xxx&quot;,
       &quot;models&quot;: [&quot;deepseek-chat&quot;, &quot;deepseek-reasoner&quot;],
       &quot;transformer&quot;: {
         &quot;use&quot;: [&quot;deepseek&quot;],
         &quot;deepseek-chat&quot;: { &quot;use&quot;: [&quot;tooluse&quot;] }
       }
     }
    ```

-   **Passing Options to a Transformer**: Some transformers, like `maxtoken`, accept options. To pass options, use a nested array where the first element is the transformer name and the second is an options object.
    ```json
    {
      &quot;name&quot;: &quot;siliconflow&quot;,
      &quot;api_base_url&quot;: &quot;https://api.siliconflow.cn/v1/chat/completions&quot;,
      &quot;api_key&quot;: &quot;sk-xxx&quot;,
      &quot;models&quot;: [&quot;moonshotai/Kimi-K2-Instruct&quot;],
      &quot;transformer&quot;: {
        &quot;use&quot;: [
          [
            &quot;maxtoken&quot;,
            {
              &quot;max_tokens&quot;: 16384
            }
          ]
        ]
      }
    }
    ```

**Available Built-in Transformers:**

-   `deepseek`: Adapts requests/responses for DeepSeek API.
-   `gemini`: Adapts requests/responses for Gemini API.
-   `openrouter`: Adapts requests/responses for OpenRouter API.
-   `groq`: Adapts requests/responses for groq API.
-   `maxtoken`: Sets a specific `max_tokens` value.
-   `tooluse`: Optimizes tool usage for certain models via `tool_choice`.
-   `gemini-cli` (experimental): Unofficial support for Gemini via Gemini CLI [gemini-cli.js](https://gist.github.com/musistudio/1c13a65f35916a7ab690649d3df8d1cd).

**Custom Transformers:**

You can also create your own transformers and load them via the `transformers` field in `config.json`.

```json
{
  &quot;transformers&quot;: [
      {
        &quot;path&quot;: &quot;$HOME/.claude-code-router/plugins/gemini-cli.js&quot;,
        &quot;options&quot;: {
          &quot;project&quot;: &quot;xxx&quot;
        }
      }
  ]
}
```

#### Router

The `Router` object defines which model to use for different scenarios:

-   `default`: The default model for general tasks.
-   `background`: A model for background tasks. This can be a smaller, local model to save costs.
-   `think`: A model for reasoning-heavy tasks, like Plan Mode.
-   `longContext`: A model for handling long contexts (e.g., &gt; 60K tokens).

You can also switch models dynamically in Claude Code with the `/model` command:
`/model provider_name,model_name`
Example: `/model openrouter,anthropic/claude-3.5-sonnet`


## ü§ñ GitHub Actions

Integrate Claude Code Router into your CI/CD pipeline. After setting up [Claude Code Actions](https://docs.anthropic.com/en/docs/claude-code/github-actions), modify your `.github/workflows/claude.yaml` to use the router:

```yaml
name: Claude Code

on:
  issue_comment:
    types: [created]
  # ... other triggers

jobs:
  claude:
    if: |
      (github.event_name == &#039;issue_comment&#039; &amp;&amp; contains(github.event.comment.body, &#039;@claude&#039;)) ||
      # ... other conditions
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Prepare Environment
        run: |
          curl -fsSL https://bun.sh/install | bash
          mkdir -p $HOME/.claude-code-router
          cat &lt;&lt; &#039;EOF&#039; &gt; $HOME/.claude-code-router/config.json
          {
            &quot;log&quot;: true,
            &quot;OPENAI_API_KEY&quot;: &quot;${{ secrets.OPENAI_API_KEY }}&quot;,
            &quot;OPENAI_BASE_URL&quot;: &quot;https://api.deepseek.com&quot;,
            &quot;OPENAI_MODEL&quot;: &quot;deepseek-chat&quot;
          }
          EOF
        shell: bash

      - name: Start Claude Code Router
        run: |
          nohup ~/.bun/bin/bunx @musistudio/claude-code-router@1.0.8 start &amp;
        shell: bash

      - name: Run Claude Code
        id: claude
        uses: anthropics/claude-code-action@beta
        env:
          ANTHROPIC_BASE_URL: http://localhost:3456
        with:
          anthropic_api_key: &quot;any-string-is-ok&quot;
```

This setup allows for interesting automations, like running tasks during off-peak hours to reduce API costs.

## üìù Further Reading

-   [Project Motivation and How It Works](blog/en/project-motivation-and-how-it-works.md)
-   [Maybe We Can Do More with the Router](blog/en/maybe-we-can-do-more-with-the-route.md)

## ‚ù§Ô∏è Support &amp; Sponsoring

If you find this project helpful, please consider sponsoring its development. Your support is greatly appreciated!

[![ko-fi](https://ko-fi.com/img/githubbutton_sm.svg)](https://ko-fi.com/F1F31GN2GM)

&lt;table&gt;
  &lt;tr&gt;
    &lt;td&gt;&lt;img src=&quot;/blog/images/alipay.jpg&quot; width=&quot;200&quot; alt=&quot;Alipay&quot; /&gt;&lt;/td&gt;
    &lt;td&gt;&lt;img src=&quot;/blog/images/wechat.jpg&quot; width=&quot;200&quot; alt=&quot;WeChat Pay&quot; /&gt;&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

### Our Sponsors

A huge thank you to all our sponsors for their generous support!

- @Simon Leischnig
- [@duanshuaimin](https://github.com/duanshuaimin)
- [@vrgitadmin](https://github.com/vrgitadmin)
- @*o
- [@ceilwoo](https://github.com/ceilwoo)
- @*ËØ¥
- @*Êõ¥
- @K*g
- @R*R
- [@bobleer](https://github.com/bobleer)
- @*Ëãó
- @*Âàí
- [@Clarence-pan](https://github.com/Clarence-pan)
- [@carter003](https://github.com/carter003)
- @S*r
- @*Êôñ
- @*Êïè
- @Z*z
- @*ÁÑ∂
- [@cluic](https://github.com/cluic)
- @*Ëãó
- [@PromptExpert](https://github.com/PromptExpert)
- @*Â∫î
- [@yusnake](https://github.com/yusnake)
- @*È£û
- @Ëë£*

(If your name is masked, please contact me via my homepage email to update it with your GitHub username.)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[strapi/strapi]]></title>
            <link>https://github.com/strapi/strapi</link>
            <guid>https://github.com/strapi/strapi</guid>
            <pubDate>Fri, 18 Jul 2025 00:04:56 GMT</pubDate>
            <description><![CDATA[üöÄ Strapi is the leading open-source headless CMS. It‚Äôs 100% JavaScript/TypeScript, fully customizable, and developer-first.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/strapi/strapi">strapi/strapi</a></h1>
            <p>üöÄ Strapi is the leading open-source headless CMS. It‚Äôs 100% JavaScript/TypeScript, fully customizable, and developer-first.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 67,968</p>
            <p>Forks: 8,748</p>
            <p>Stars today: 59 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://strapi.io/#gh-light-mode-only&quot;&gt;
    &lt;img src=&quot;https://strapi.io/assets/strapi-logo-dark.svg&quot; width=&quot;318px&quot; alt=&quot;Strapi logo&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://strapi.io/#gh-dark-mode-only&quot;&gt;
    &lt;img src=&quot;https://strapi.io/assets/strapi-logo-light.svg&quot; width=&quot;318px&quot; alt=&quot;Strapi logo&quot; /&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;h3 align=&quot;center&quot;&gt;Open-source headless CMS, self-hosted or Cloud you‚Äôre in control.&lt;/h3&gt;
&lt;p align=&quot;center&quot;&gt;The leading open-source headless CMS, 100% JavaScript/TypeScript, flexible and fully customizable.&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://cloud.strapi.io/signups?source=github1&quot;&gt;Cloud&lt;/a&gt; ¬∑ &lt;a href=&quot;https://strapi.io/demo?utm_campaign=Growth-Experiments&amp;utm_source=strapi%2Fstrapi%20README.md&quot;&gt;Try live demo&lt;/a&gt;&lt;/p&gt;
&lt;br /&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.npmjs.org/package/@strapi/strapi&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/npm/v/@strapi/strapi/latest.svg&quot; alt=&quot;NPM Version&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/strapi/strapi/actions/workflows/tests.yml&quot;&gt;
    &lt;img src=&quot;https://github.com/strapi/strapi/actions/workflows/tests.yml/badge.svg?branch=main&quot; alt=&quot;Tests&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://discord.strapi.io&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/discord/811989166782021633?label=Discord&quot; alt=&quot;Strapi on Discord&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/strapi/strapi/actions/workflows/nightly.yml&quot;&gt;
    &lt;img src=&quot;https://github.com/strapi/strapi/actions/workflows/nightly.yml/badge.svg&quot; alt=&quot;Strapi Nightly Release Build Status&quot; /&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;br&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://strapi.io&quot;&gt;
    &lt;img src=&quot;https://raw.githubusercontent.com/strapi/strapi/main/public/assets/admin-demo.gif&quot; alt=&quot;Administration panel&quot; /&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;br&gt;

Strapi Community Edition is a free and open-source headless CMS enabling you to manage any content, anywhere.

- **Self-hosted or Cloud**: You can host and scale Strapi projects the way you want. You can save time by deploying to [Strapi Cloud](https://cloud.strapi.io/signups?source=github1) or deploy to the hosting platform you want\*\*: AWS, Azure, Google Cloud, DigitalOcean.
- **Modern Admin Panel**: Elegant, entirely customizable and a fully extensible admin panel.
- **Multi-database support**: You can choose the database you prefer: PostgreSQL, MySQL, MariaDB, and SQLite.
- **Customizable**: You can quickly build your logic by fully customizing APIs, routes, or plugins to fit your needs perfectly.
- **Blazing Fast and Robust**: Built on top of Node.js and TypeScript, Strapi delivers reliable and solid performance.
- **Front-end Agnostic**: Use any front-end framework (React, Next.js, Vue, Angular, etc.), mobile apps or even IoT.
- **Secure by default**: Reusable policies, CORS, CSP, P3P, Xframe, XSS, and more.
- **Powerful CLI**: Scaffold projects and APIs on the fly.

## Getting Started

&lt;a href=&quot;https://docs.strapi.io/developer-docs/latest/getting-started/quick-start.html&quot; target=&quot;_blank&quot;&gt;Read the Getting Started tutorial&lt;/a&gt; or follow the steps below:

### ‚è≥ Installation

Install Strapi with this **Quickstart** command to create a Strapi project instantly:

- (Use **yarn** to install the Strapi project (recommended). [Install yarn with these docs](https://yarnpkg.com/lang/en/docs/install/).)

```bash
yarn create strapi
```

**or**

- (Using npx to install the Strapi project.)

```bash
npx create-strapi@latest
```

This command generates a brand new project with the default features (authentication, permissions, content management, content type builder &amp; file upload).

Enjoy üéâ

### üñê Requirements

Complete installation requirements can be found in the documentation under &lt;a href=&quot;https://docs.strapi.io/developer-docs/latest/setup-deployment-guides/deployment.html&quot;&gt;Installation Requirements&lt;/a&gt;.

**Supported operating systems**:

| OS              | Recommended | Minimum    |
| --------------- | ----------- | ---------- |
| Ubuntu          | 24.04       | LTS        |
| Debian          | 11          | LTS        |
| RHEL            | 9           | LTS        |
| macOS           | 14          | 12         |
| Windows Desktop | 11          | 10         |
| Windows Server  | No Support  | No Support |
| Docker          | N/A         | N/A        |

(Please note that Strapi may work on other operating systems, but these are not tested nor officially supported at this time.)

**Node:**

Strapi only supports maintenance and LTS versions of Node.js. Please refer to the &lt;a href=&quot;https://nodejs.org/en/about/releases/&quot;&gt;Node.js release schedule&lt;/a&gt; for more information. NPM versions installed by default with Node.js are supported. Generally it&#039;s recommended to use yarn over npm where possible.

| Strapi Version  | Recommended | Minimum |
| --------------- | ----------- | ------- |
| 5.0.0 and up    | 20.x        | 18.x    |
| 4.14.5 and up   | 20.x        | 18.x    |
| 4.11.0 and up   | 18.x        | 16.x    |
| 4.3.9 to 4.10.x | 18.x        | 14.x    |
| 4.0.x to 4.3.8  | 16.x        | 14.x    |

**Database:**

| Database   | Recommended | Minimum |
| ---------- | ----------- | ------- |
| MySQL      | 8.0         | 8.0     |
| MariaDB    | 11.2        | 10.3    |
| PostgreSQL | 16.0        | 14.0    |
| SQLite     | 3           | 3       |

**We recommend always using the latest version of Strapi stable to start your new projects**.

## Features

- **Content Types Builder**: Build the most flexible publishing experience for your content managers, by giving them the freedom to create any page on the go with [fields](https://docs.strapi.io/user-docs/content-manager/writing-content#filling-up-fields), components and [Dynamic Zones](https://docs.strapi.io/user-docs/content-manager/writing-content#dynamic-zones).
- **Media Library**: Upload your images, videos, audio or documents to the media library. Easily find the right asset, edit and reuse it.
- **Internationalization**: The Internationalization (i18n) plugin allows Strapi users to create, manage and distribute localized content in different languages, called &quot;locales&quot;
- **Role Based Access Control**: Create an unlimited number of custom roles and permissions for admin and end users.
- **GraphQL or REST**: Consume the API using REST or GraphQL

You can unlock additional features such as SSO, Audit Logs, Review Workflows in [Strapi Cloud](https://cloud.strapi.io/login?source=github1) or [Strapi Enterprise](https://strapi.io/enterprise?source=github1).

**[See more on our website](https://strapi.io/overview)**.

## Contributing

Please read our [Contributing Guide](./CONTRIBUTING.md) before submitting a Pull Request to the project.

## Community support

For general help using Strapi, please refer to [the official Strapi documentation](https://docs.strapi.io). For additional help, you can use one of these channels to ask a question:

- [Discord](https://discord.strapi.io) (For live discussion with the Community and Strapi team)
- [GitHub](https://github.com/strapi/strapi) (Bug reports, Contributions)
- [Community Forum](https://forum.strapi.io) (Questions and Discussions)
- [Feedback section](https://feedback.strapi.io) (Roadmap, Feature requests)
- [Twitter](https://twitter.com/strapijs) (Get the news fast)
- [Facebook](https://www.facebook.com/Strapi-616063331867161)
- [YouTube Channel](https://www.youtube.com/strapi) (Learn from Video Tutorials)

## Migration

Follow our [migration guides](https://docs.strapi.io/developer-docs/latest/update-migration-guides/migration-guides.html) on the documentation to keep your projects up-to-date.

## Roadmap

Check out our [roadmap](https://feedback.strapi.io) to get informed of the latest features released and the upcoming ones. You may also give us insights and vote for a specific feature.

## Documentation

See our dedicated [repository](https://github.com/strapi/documentation) for the Strapi documentation, or view our documentation live:

- [Developer docs](https://docs.strapi.io/developer-docs/latest/getting-started/introduction.html)
- [User guide](https://docs.strapi.io/user-docs/latest/getting-started/introduction.html)
- [Cloud guide](https://docs.strapi.io/cloud/intro)

## Try live demo

See for yourself what&#039;s under the hood by getting access to a [hosted Strapi project](https://strapi.io/demo) with sample data.

## License

See the [LICENSE](./LICENSE) file for licensing information.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[arc53/DocsGPT]]></title>
            <link>https://github.com/arc53/DocsGPT</link>
            <guid>https://github.com/arc53/DocsGPT</guid>
            <pubDate>Fri, 18 Jul 2025 00:04:55 GMT</pubDate>
            <description><![CDATA[DocsGPT is an open-source genAI tool that helps users get reliable answers from knowledge source, while avoiding hallucinations. It enables private and reliable information retrieval, with tooling and agentic system capability built in.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/arc53/DocsGPT">arc53/DocsGPT</a></h1>
            <p>DocsGPT is an open-source genAI tool that helps users get reliable answers from knowledge source, while avoiding hallucinations. It enables private and reliable information retrieval, with tooling and agentic system capability built in.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 16,281</p>
            <p>Forks: 1,711</p>
            <p>Stars today: 276 stars today</p>
            <h2>README</h2><pre>&lt;h1 align=&quot;center&quot;&gt;
  DocsGPT  ü¶ñ
&lt;/h1&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;strong&gt;Open-Source RAG Assistant&lt;/strong&gt;
&lt;/p&gt;

&lt;p align=&quot;left&quot;&gt;
  &lt;strong&gt;&lt;a href=&quot;https://www.docsgpt.cloud/&quot;&gt;DocsGPT&lt;/a&gt;&lt;/strong&gt; is an open-source genAI tool that helps users get reliable answers from any knowledge source, while avoiding hallucinations. It enables quick and reliable information retrieval, with tooling and agentic system capability built in.
&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
  
  &lt;a href=&quot;https://github.com/arc53/DocsGPT&quot;&gt;![link to main GitHub showing Stars number](https://img.shields.io/github/stars/arc53/docsgpt?style=social)&lt;/a&gt;
  &lt;a href=&quot;https://github.com/arc53/DocsGPT&quot;&gt;![link to main GitHub showing Forks number](https://img.shields.io/github/forks/arc53/docsgpt?style=social)&lt;/a&gt;
  &lt;a href=&quot;https://github.com/arc53/DocsGPT/blob/main/LICENSE&quot;&gt;![link to license file](https://img.shields.io/github/license/arc53/docsgpt)&lt;/a&gt;
  &lt;a href=&quot;https://www.bestpractices.dev/projects/9907&quot;&gt;&lt;img src=&quot;https://www.bestpractices.dev/projects/9907/badge&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://discord.gg/n5BX8dh8rU&quot;&gt;![link to discord](https://img.shields.io/discord/1070046503302877216)&lt;/a&gt;
  &lt;a href=&quot;https://twitter.com/docsgptai&quot;&gt;![X (formerly Twitter) URL](https://img.shields.io/twitter/follow/docsgptai)&lt;/a&gt;

  &lt;a href=&quot;https://docs.docsgpt.cloud/quickstart&quot;&gt;‚ö°Ô∏è Quickstart&lt;/a&gt; ‚Ä¢ &lt;a href=&quot;https://app.docsgpt.cloud/&quot;&gt;‚òÅÔ∏è Cloud Version&lt;/a&gt; ‚Ä¢ &lt;a href=&quot;https://discord.gg/n5BX8dh8rU&quot;&gt;üí¨ Discord&lt;/a&gt;
  &lt;br&gt;
  &lt;a href=&quot;https://docs.docsgpt.cloud/&quot;&gt;üìñ Documentation&lt;/a&gt; ‚Ä¢ &lt;a href=&quot;https://github.com/arc53/DocsGPT/blob/main/CONTRIBUTING.md&quot;&gt;üë´ Contribute&lt;/a&gt; ‚Ä¢ &lt;a href=&quot;https://blog.docsgpt.cloud/&quot;&gt;üóû Blog&lt;/a&gt;
  &lt;br&gt;

&lt;/div&gt;
&lt;div align=&quot;center&quot;&gt;
&lt;img src=&quot;https://d3dg1063dc54p9.cloudfront.net/videos/demov7.gif&quot; alt=&quot;video-example-of-docs-gpt&quot; width=&quot;800&quot; height=&quot;450&quot;&gt;
&lt;/div&gt;
&lt;h3 align=&quot;left&quot;&gt;
  &lt;strong&gt;Key Features:&lt;/strong&gt;
&lt;/h3&gt;
&lt;ul align=&quot;left&quot;&gt;
    &lt;li&gt;&lt;strong&gt;üóÇÔ∏è Wide Format Support:&lt;/strong&gt; Reads PDF, DOCX, CSV, XLSX, EPUB, MD, RST, HTML, MDX, JSON, PPTX, and images.&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;üåê Web &amp; Data Integration:&lt;/strong&gt; Ingests from URLs, sitemaps, Reddit, GitHub and web crawlers.&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;‚úÖ Reliable Answers:&lt;/strong&gt; Get accurate, hallucination-free responses with source citations viewable in a clean UI.&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;üîë Streamlined API Keys:&lt;/strong&gt;  Generate keys linked to your settings, documents, and models, simplifying chatbot and integration setup.&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;üîó Actionable Tooling:&lt;/strong&gt; Connect to APIs, tools, and other services to enable LLM actions.&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;üß© Pre-built Integrations:&lt;/strong&gt; Use readily available HTML/React chat widgets, search tools, Discord/Telegram bots, and more.&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;üîå Flexible Deployment:&lt;/strong&gt; Works with major LLMs (OpenAI, Google, Anthropic) and local models (Ollama, llama_cpp).&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;üè¢ Secure &amp; Scalable:&lt;/strong&gt; Run privately and securely with Kubernetes support, designed for enterprise-grade reliability.&lt;/li&gt;
&lt;/ul&gt;

## Roadmap

- [x] Full GoogleAI compatibility (Jan 2025)
- [x] Add tools (Jan 2025)
- [x] Manually updating chunks in the app UI (Feb 2025)
- [x] Devcontainer for easy development (Feb 2025)
- [x] ReACT agent (March 2025)
- [x] Chatbots menu re-design to handle tools, agent types, and more (April 2025)
- [x] New input box in the conversation menu (April 2025)
- [x] Add triggerable actions / tools (webhook) (April 2025)
- [x] Agent optimisations (May 2025)
- [ ] Filesystem sources update (July 2025)
- [ ] Anthropic Tool compatibility (July 2025)
- [ ] MCP support (July 2025)
- [ ] Add OAuth 2.0 authentication for tools and sources (August 2025)
- [ ] Agent scheduling

You can find our full roadmap [here](https://github.com/orgs/arc53/projects/2). Please don&#039;t hesitate to contribute or create issues, it helps us improve DocsGPT!

### Production Support / Help for Companies:

We&#039;re eager to provide personalized assistance when deploying your DocsGPT to a live environment.

[Get a Demo :wave:](https://www.docsgpt.cloud/contact)‚Å†

[Send Email :email:](mailto:support@docsgpt.cloud?subject=DocsGPT%20support%2Fsolutions)

## Join the Lighthouse Program üåü

Calling all developers and GenAI innovators! The **DocsGPT Lighthouse Program** connects technical leaders actively deploying or extending DocsGPT in real-world scenarios. Collaborate directly with our team to shape the roadmap, access priority support, and build enterprise-ready solutions with exclusive community insights.  

[Learn More &amp; Apply ‚Üí](https://docs.google.com/forms/d/1KAADiJinUJ8EMQyfTXUIGyFbqINNClNR3jBNWq7DgTE)


## QuickStart

&gt; [!Note]
&gt; Make sure you have [Docker](https://docs.docker.com/engine/install/) installed

A more detailed [Quickstart](https://docs.docsgpt.cloud/quickstart) is available in our documentation

1. **Clone the repository:**

   ```bash
   git clone https://github.com/arc53/DocsGPT.git
   cd DocsGPT
   ```

**For macOS and Linux:**

2. **Run the setup script:**

   ```bash
   ./setup.sh
   ```

**For Windows:**

2. **Run the PowerShell setup script:**

   ```powershell
   PowerShell -ExecutionPolicy Bypass -File .\setup.ps1
   ```

Either script will guide you through setting up DocsGPT. Four options available: using the public API, running locally, connecting to a local inference engine, or using a cloud API provider.  Scripts will automatically configure your `.env` file and handle necessary downloads and installations based on your chosen option.

**Navigate to http://localhost:5173/**

To stop DocsGPT, open a terminal in the `DocsGPT` directory and run:

```bash
docker compose -f deployment/docker-compose.yaml down
```
(or use the specific `docker compose down` command shown after running the setup script).

&gt; [!Note]
&gt; For development environment setup instructions, please refer to the [Development Environment Guide](https://docs.docsgpt.cloud/Deploying/Development-Environment).

## Contributing

Please refer to the [CONTRIBUTING.md](CONTRIBUTING.md) file for information about how to get involved. We welcome issues, questions, and pull requests.

## Architecture

![Architecture chart](https://github.com/user-attachments/assets/fc6a7841-ddfc-45e6-b5a0-d05fe648cbe2)

## Project Structure

- Application - Flask app (main application).

- Extensions - Extensions, like react widget or discord bot.

- Frontend - Frontend uses &lt;a href=&quot;https://vitejs.dev/&quot;&gt;Vite&lt;/a&gt; and &lt;a href=&quot;https://react.dev/&quot;&gt;React&lt;/a&gt;.

- Scripts - Miscellaneous scripts.

## Code Of Conduct

We as members, contributors, and leaders, pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation. Please refer to the [CODE_OF_CONDUCT.md](CODE_OF_CONDUCT.md) file for more information about contributing.


## Many Thanks To Our Contributors‚ö°

&lt;a href=&quot;https://github.com/arc53/DocsGPT/graphs/contributors&quot; alt=&quot;View Contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=arc53/DocsGPT&quot; alt=&quot;Contributors&quot; /&gt;
&lt;/a&gt;

## License

The source code license is [MIT](https://opensource.org/license/mit/), as described in the [LICENSE](LICENSE) file.

&lt;p&gt;This project is supported by:&lt;/p&gt;
&lt;p&gt;
  &lt;a href=&quot;https://www.digitalocean.com/?utm_medium=opensource&amp;utm_source=DocsGPT&quot;&gt;
    &lt;img src=&quot;https://opensource.nyc3.cdn.digitaloceanspaces.com/attribution/assets/SVG/DO_Logo_horizontal_blue.svg&quot; width=&quot;201px&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[heroui-inc/heroui]]></title>
            <link>https://github.com/heroui-inc/heroui</link>
            <guid>https://github.com/heroui-inc/heroui</guid>
            <pubDate>Fri, 18 Jul 2025 00:04:54 GMT</pubDate>
            <description><![CDATA[üöÄ Beautiful, fast and modern React UI library. (Previously NextUI)]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/heroui-inc/heroui">heroui-inc/heroui</a></h1>
            <p>üöÄ Beautiful, fast and modern React UI library. (Previously NextUI)</p>
            <p>Language: TypeScript</p>
            <p>Stars: 24,877</p>
            <p>Forks: 1,842</p>
            <p>Stars today: 20 stars today</p>
            <h2>README</h2><pre>packages/core/react/README.md</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[Nutlope/llamacoder]]></title>
            <link>https://github.com/Nutlope/llamacoder</link>
            <guid>https://github.com/Nutlope/llamacoder</guid>
            <pubDate>Fri, 18 Jul 2025 00:04:53 GMT</pubDate>
            <description><![CDATA[Open source Claude Artifacts ‚Äì built with Llama 3.1 405B]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/Nutlope/llamacoder">Nutlope/llamacoder</a></h1>
            <p>Open source Claude Artifacts ‚Äì built with Llama 3.1 405B</p>
            <p>Language: TypeScript</p>
            <p>Stars: 6,221</p>
            <p>Forks: 1,475</p>
            <p>Stars today: 54 stars today</p>
            <h2>README</h2><pre>&lt;a href=&quot;https://www.llamacoder.io&quot;&gt;
  &lt;img alt=&quot;Llama Coder&quot; src=&quot;./public/og-image.png&quot;&gt;
  &lt;h1 align=&quot;center&quot;&gt;Llama Coder&lt;/h1&gt;
&lt;/a&gt;

&lt;p align=&quot;center&quot;&gt;
  An open source Claude Artifacts ‚Äì generate small apps with one prompt. Powered by Llama 3 on Together.ai.
&lt;/p&gt;

## Tech stack

- [Llama 3.1 405B](https://ai.meta.com/blog/meta-llama-3-1/) from Meta for the LLM
- [Together AI](https://togetherai.link/?utm_source=llamacoder&amp;utm_medium=referral&amp;utm_campaign=example-app) for LLM inference
- [Sandpack](https://sandpack.codesandbox.io/) for the code sandbox
- Next.js app router with Tailwind
- Helicone for observability
- Plausible for website analytics

## Cloning &amp; running

1. Clone the repo: `git clone https://github.com/Nutlope/llamacoder`
2. Create a `.env` file and add your [Together AI API key](https://togetherai.link/?utm_source=llamacoder&amp;utm_medium=referral&amp;utm_campaign=example-app): `TOGETHER_API_KEY=`
3. Run `npm install` and `npm run dev` to install dependencies and run locally

## Contributing

For contributing to the repo, please see the [contributing guide](./CONTRIBUTING.md)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[microsoft/playwright-mcp]]></title>
            <link>https://github.com/microsoft/playwright-mcp</link>
            <guid>https://github.com/microsoft/playwright-mcp</guid>
            <pubDate>Fri, 18 Jul 2025 00:04:52 GMT</pubDate>
            <description><![CDATA[Playwright MCP server]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/microsoft/playwright-mcp">microsoft/playwright-mcp</a></h1>
            <p>Playwright MCP server</p>
            <p>Language: TypeScript</p>
            <p>Stars: 14,888</p>
            <p>Forks: 1,065</p>
            <p>Stars today: 78 stars today</p>
            <h2>README</h2><pre>## Playwright MCP

A Model Context Protocol (MCP) server that provides browser automation capabilities using [Playwright](https://playwright.dev). This server enables LLMs to interact with web pages through structured accessibility snapshots, bypassing the need for screenshots or visually-tuned models.

### Key Features

- **Fast and lightweight**. Uses Playwright&#039;s accessibility tree, not pixel-based input.
- **LLM-friendly**. No vision models needed, operates purely on structured data.
- **Deterministic tool application**. Avoids ambiguity common with screenshot-based approaches.

### Requirements
- Node.js 18 or newer
- VS Code, Cursor, Windsurf, Claude Desktop, Goose or any other MCP client

&lt;!--
// Generate using:
node utils/generate-links.js
--&gt;

### Getting started

First, install the Playwright MCP server with your client.

**Standard config** works in most of the tools:

```js
{
  &quot;mcpServers&quot;: {
    &quot;playwright&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [
        &quot;@playwright/mcp@latest&quot;
      ]
    }
  }
}
```

[&lt;img src=&quot;https://img.shields.io/badge/VS_Code-VS_Code?style=flat-square&amp;label=Install%20Server&amp;color=0098FF&quot; alt=&quot;Install in VS Code&quot;&gt;](https://insiders.vscode.dev/redirect?url=vscode%3Amcp%2Finstall%3F%257B%2522name%2522%253A%2522playwright%2522%252C%2522command%2522%253A%2522npx%2522%252C%2522args%2522%253A%255B%2522%2540playwright%252Fmcp%2540latest%2522%255D%257D) [&lt;img alt=&quot;Install in VS Code Insiders&quot; src=&quot;https://img.shields.io/badge/VS_Code_Insiders-VS_Code_Insiders?style=flat-square&amp;label=Install%20Server&amp;color=24bfa5&quot;&gt;](https://insiders.vscode.dev/redirect?url=vscode-insiders%3Amcp%2Finstall%3F%257B%2522name%2522%253A%2522playwright%2522%252C%2522command%2522%253A%2522npx%2522%252C%2522args%2522%253A%255B%2522%2540playwright%252Fmcp%2540latest%2522%255D%257D)


&lt;details&gt;
&lt;summary&gt;Claude Code&lt;/summary&gt;

Use the Claude Code CLI to add the Playwright MCP server:

```bash
claude mcp add playwright npx @playwright/mcp@latest
```
&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;Claude Desktop&lt;/summary&gt;

Follow the MCP install [guide](https://modelcontextprotocol.io/quickstart/user), use the standard config above.

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;Cursor&lt;/summary&gt;

#### Click the button to install:

[![Install MCP Server](https://cursor.com/deeplink/mcp-install-dark.svg)](https://cursor.com/install-mcp?name=playwright&amp;config=eyJjb21tYW5kIjoibnB4IEBwbGF5d3JpZ2h0L21jcEBsYXRlc3QifQ%3D%3D)

#### Or install manually:

Go to `Cursor Settings` -&gt; `MCP` -&gt; `Add new MCP Server`. Name to your liking, use `command` type with the command `npx @playwright/mcp`. You can also verify config or add command like arguments via clicking `Edit`.

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;Gemini CLI&lt;/summary&gt;

Follow the MCP install [guide](https://github.com/google-gemini/gemini-cli/blob/main/docs/tools/mcp-server.md#configure-the-mcp-server-in-settingsjson), use the standard config above.

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;Goose&lt;/summary&gt;

#### Click the button to install:

[![Install in Goose](https://block.github.io/goose/img/extension-install-dark.svg)](https://block.github.io/goose/extension?cmd=npx&amp;arg=%40playwright%2Fmcp%40latest&amp;id=playwright&amp;name=Playwright&amp;description=Interact%20with%20web%20pages%20through%20structured%20accessibility%20snapshots%20using%20Playwright)

#### Or install manually:

Go to `Advanced settings` -&gt; `Extensions` -&gt; `Add custom extension`. Name to your liking, use type `STDIO`, and set the `command` to `npx @playwright/mcp`. Click &quot;Add Extension&quot;.
&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;Qodo Gen&lt;/summary&gt;

Open [Qodo Gen](https://docs.qodo.ai/qodo-documentation/qodo-gen) chat panel in VSCode or IntelliJ ‚Üí Connect more tools ‚Üí + Add new MCP ‚Üí Paste the standard config above.

Click &lt;code&gt;Save&lt;/code&gt;.
&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;VS Code&lt;/summary&gt;

You can also install the Playwright MCP server using the VS Code CLI:

```bash
# For VS Code
code --add-mcp &#039;{&quot;name&quot;:&quot;playwright&quot;,&quot;command&quot;:&quot;npx&quot;,&quot;args&quot;:[&quot;@playwright/mcp@latest&quot;]}&#039;
```

After installation, the Playwright MCP server will be available for use with your GitHub Copilot agent in VS Code.
&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;Windsurf&lt;/summary&gt;

Follow Windsurf MCP [documentation](https://docs.windsurf.com/windsurf/cascade/mcp). Use the standard config above.

&lt;/details&gt;

### Configuration

Playwright MCP server supports following arguments. They can be provided in the JSON configuration above, as a part of the `&quot;args&quot;` list:

&lt;!--- Options generated by update-readme.js --&gt;

```
&gt; npx @playwright/mcp@latest --help
  --allowed-origins &lt;origins&gt;  semicolon-separated list of origins to allow the
                               browser to request. Default is to allow all.
  --blocked-origins &lt;origins&gt;  semicolon-separated list of origins to block the
                               browser from requesting. Blocklist is evaluated
                               before allowlist. If used without the allowlist,
                               requests not matching the blocklist are still
                               allowed.
  --block-service-workers      block service workers
  --browser &lt;browser&gt;          browser or chrome channel to use, possible
                               values: chrome, firefox, webkit, msedge.
  --caps &lt;caps&gt;                comma-separated list of additional capabilities
                               to enable, possible values: vision, pdf.
  --cdp-endpoint &lt;endpoint&gt;    CDP endpoint to connect to.
  --config &lt;path&gt;              path to the configuration file.
  --device &lt;device&gt;            device to emulate, for example: &quot;iPhone 15&quot;
  --executable-path &lt;path&gt;     path to the browser executable.
  --headless                   run browser in headless mode, headed by default
  --host &lt;host&gt;                host to bind server to. Default is localhost. Use
                               0.0.0.0 to bind to all interfaces.
  --ignore-https-errors        ignore https errors
  --isolated                   keep the browser profile in memory, do not save
                               it to disk.
  --image-responses &lt;mode&gt;     whether to send image responses to the client.
                               Can be &quot;allow&quot; or &quot;omit&quot;, Defaults to &quot;allow&quot;.
  --no-sandbox                 disable the sandbox for all process types that
                               are normally sandboxed.
  --output-dir &lt;path&gt;          path to the directory for output files.
  --port &lt;port&gt;                port to listen on for SSE transport.
  --proxy-bypass &lt;bypass&gt;      comma-separated domains to bypass proxy, for
                               example &quot;.com,chromium.org,.domain.com&quot;
  --proxy-server &lt;proxy&gt;       specify proxy server, for example
                               &quot;http://myproxy:3128&quot; or &quot;socks5://myproxy:8080&quot;
  --save-trace                 Whether to save the Playwright Trace of the
                               session into the output directory.
  --storage-state &lt;path&gt;       path to the storage state file for isolated
                               sessions.
  --user-agent &lt;ua string&gt;     specify user agent string
  --user-data-dir &lt;path&gt;       path to the user data directory. If not
                               specified, a temporary directory will be created.
  --viewport-size &lt;size&gt;       specify browser viewport size in pixels, for
                               example &quot;1280, 720&quot;
```

&lt;!--- End of options generated section --&gt;

### User profile

You can run Playwright MCP with persistent profile like a regular browser (default), or in the isolated contexts for the testing sessions.

**Persistent profile**

All the logged in information will be stored in the persistent profile, you can delete it between sessions if you&#039;d like to clear the offline state.
Persistent profile is located at the following locations and you can override it with the `--user-data-dir` argument.

```bash
# Windows
%USERPROFILE%\AppData\Local\ms-playwright\mcp-{channel}-profile

# macOS
- ~/Library/Caches/ms-playwright/mcp-{channel}-profile

# Linux
- ~/.cache/ms-playwright/mcp-{channel}-profile
```

**Isolated**

In the isolated mode, each session is started in the isolated profile. Every time you ask MCP to close the browser,
the session is closed and all the storage state for this session is lost. You can provide initial storage state
to the browser via the config&#039;s `contextOptions` or via the `--storage-state` argument. Learn more about the storage
state [here](https://playwright.dev/docs/auth).

```js
{
  &quot;mcpServers&quot;: {
    &quot;playwright&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [
        &quot;@playwright/mcp@latest&quot;,
        &quot;--isolated&quot;,
        &quot;--storage-state={path/to/storage.json}&quot;
      ]
    }
  }
}
```

### Configuration file

The Playwright MCP server can be configured using a JSON configuration file. You can specify the configuration file
using the `--config` command line option:

```bash
npx @playwright/mcp@latest --config path/to/config.json
```

&lt;details&gt;
&lt;summary&gt;Configuration file schema&lt;/summary&gt;

```typescript
{
  // Browser configuration
  browser?: {
    // Browser type to use (chromium, firefox, or webkit)
    browserName?: &#039;chromium&#039; | &#039;firefox&#039; | &#039;webkit&#039;;

    // Keep the browser profile in memory, do not save it to disk.
    isolated?: boolean;

    // Path to user data directory for browser profile persistence
    userDataDir?: string;

    // Browser launch options (see Playwright docs)
    // @see https://playwright.dev/docs/api/class-browsertype#browser-type-launch
    launchOptions?: {
      channel?: string;        // Browser channel (e.g. &#039;chrome&#039;)
      headless?: boolean;      // Run in headless mode
      executablePath?: string; // Path to browser executable
      // ... other Playwright launch options
    };

    // Browser context options
    // @see https://playwright.dev/docs/api/class-browser#browser-new-context
    contextOptions?: {
      viewport?: { width: number, height: number };
      // ... other Playwright context options
    };

    // CDP endpoint for connecting to existing browser
    cdpEndpoint?: string;

    // Remote Playwright server endpoint
    remoteEndpoint?: string;
  },

  // Server configuration
  server?: {
    port?: number;  // Port to listen on
    host?: string;  // Host to bind to (default: localhost)
  },

  // List of additional capabilities
  capabilities?: Array&lt;
    &#039;tabs&#039; |    // Tab management
    &#039;install&#039; | // Browser installation
    &#039;pdf&#039; |     // PDF generation
    &#039;vision&#039; |  // Coordinate-based interactions
  &gt;;

  // Directory for output files
  outputDir?: string;

  // Network configuration
  network?: {
    // List of origins to allow the browser to request. Default is to allow all. Origins matching both `allowedOrigins` and `blockedOrigins` will be blocked.
    allowedOrigins?: string[];

    // List of origins to block the browser to request. Origins matching both `allowedOrigins` and `blockedOrigins` will be blocked.
    blockedOrigins?: string[];
  };
 
  /**
   * Whether to send image responses to the client. Can be &quot;allow&quot; or &quot;omit&quot;. 
   * Defaults to &quot;allow&quot;.
   */
  imageResponses?: &#039;allow&#039; | &#039;omit&#039;;
}
```
&lt;/details&gt;

### Standalone MCP server

When running headed browser on system w/o display or from worker processes of the IDEs,
run the MCP server from environment with the DISPLAY and pass the `--port` flag to enable SSE transport.

```bash
npx @playwright/mcp@latest --port 8931
```

And then in MCP client config, set the `url` to the SSE endpoint:

```js
{
  &quot;mcpServers&quot;: {
    &quot;playwright&quot;: {
      &quot;url&quot;: &quot;http://localhost:8931/sse&quot;
    }
  }
}
```

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Docker&lt;/b&gt;&lt;/summary&gt;

**NOTE:** The Docker implementation only supports headless chromium at the moment.

```js
{
  &quot;mcpServers&quot;: {
    &quot;playwright&quot;: {
      &quot;command&quot;: &quot;docker&quot;,
      &quot;args&quot;: [&quot;run&quot;, &quot;-i&quot;, &quot;--rm&quot;, &quot;--init&quot;, &quot;--pull=always&quot;, &quot;mcr.microsoft.com/playwright/mcp&quot;]
    }
  }
}
```

You can build the Docker image yourself.

```
docker build -t mcr.microsoft.com/playwright/mcp .
```
&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Programmatic usage&lt;/b&gt;&lt;/summary&gt;

```js
import http from &#039;http&#039;;

import { createConnection } from &#039;@playwright/mcp&#039;;
import { SSEServerTransport } from &#039;@modelcontextprotocol/sdk/server/sse.js&#039;;

http.createServer(async (req, res) =&gt; {
  // ...

  // Creates a headless Playwright MCP server with SSE transport
  const connection = await createConnection({ browser: { launchOptions: { headless: true } } });
  const transport = new SSEServerTransport(&#039;/messages&#039;, res);
  await connection.sever.connect(transport);

  // ...
});
```
&lt;/details&gt;

### Tools

&lt;!--- Tools generated by update-readme.js --&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Core automation&lt;/b&gt;&lt;/summary&gt;

&lt;!-- NOTE: This has been generated via update-readme.js --&gt;

- **browser_click**
  - Title: Click
  - Description: Perform click on a web page
  - Parameters:
    - `element` (string): Human-readable element description used to obtain permission to interact with the element
    - `ref` (string): Exact target element reference from the page snapshot
    - `doubleClick` (boolean, optional): Whether to perform a double click instead of a single click
    - `button` (string, optional): Button to click, defaults to left
  - Read-only: **false**

&lt;!-- NOTE: This has been generated via update-readme.js --&gt;

- **browser_close**
  - Title: Close browser
  - Description: Close the page
  - Parameters: None
  - Read-only: **true**

&lt;!-- NOTE: This has been generated via update-readme.js --&gt;

- **browser_console_messages**
  - Title: Get console messages
  - Description: Returns all console messages
  - Parameters: None
  - Read-only: **true**

&lt;!-- NOTE: This has been generated via update-readme.js --&gt;

- **browser_drag**
  - Title: Drag mouse
  - Description: Perform drag and drop between two elements
  - Parameters:
    - `startElement` (string): Human-readable source element description used to obtain the permission to interact with the element
    - `startRef` (string): Exact source element reference from the page snapshot
    - `endElement` (string): Human-readable target element description used to obtain the permission to interact with the element
    - `endRef` (string): Exact target element reference from the page snapshot
  - Read-only: **false**

&lt;!-- NOTE: This has been generated via update-readme.js --&gt;

- **browser_evaluate**
  - Title: Evaluate JavaScript
  - Description: Evaluate JavaScript expression on page or element
  - Parameters:
    - `function` (string): () =&gt; { /* code */ } or (element) =&gt; { /* code */ } when element is provided
    - `element` (string, optional): Human-readable element description used to obtain permission to interact with the element
    - `ref` (string, optional): Exact target element reference from the page snapshot
  - Read-only: **false**

&lt;!-- NOTE: This has been generated via update-readme.js --&gt;

- **browser_file_upload**
  - Title: Upload files
  - Description: Upload one or multiple files
  - Parameters:
    - `paths` (array): The absolute paths to the files to upload. Can be a single file or multiple files.
  - Read-only: **false**

&lt;!-- NOTE: This has been generated via update-readme.js --&gt;

- **browser_handle_dialog**
  - Title: Handle a dialog
  - Description: Handle a dialog
  - Parameters:
    - `accept` (boolean): Whether to accept the dialog.
    - `promptText` (string, optional): The text of the prompt in case of a prompt dialog.
  - Read-only: **false**

&lt;!-- NOTE: This has been generated via update-readme.js --&gt;

- **browser_hover**
  - Title: Hover mouse
  - Description: Hover over element on page
  - Parameters:
    - `element` (string): Human-readable element description used to obtain permission to interact with the element
    - `ref` (string): Exact target element reference from the page snapshot
  - Read-only: **true**

&lt;!-- NOTE: This has been generated via update-readme.js --&gt;

- **browser_navigate**
  - Title: Navigate to a URL
  - Description: Navigate to a URL
  - Parameters:
    - `url` (string): The URL to navigate to
  - Read-only: **false**

&lt;!-- NOTE: This has been generated via update-readme.js --&gt;

- **browser_navigate_back**
  - Title: Go back
  - Description: Go back to the previous page
  - Parameters: None
  - Read-only: **true**

&lt;!-- NOTE: This has been generated via update-readme.js --&gt;

- **browser_navigate_forward**
  - Title: Go forward
  - Description: Go forward to the next page
  - Parameters: None
  - Read-only: **true**

&lt;!-- NOTE: This has been generated via update-readme.js --&gt;

- **browser_network_requests**
  - Title: List network requests
  - Description: Returns all network requests since loading the page
  - Parameters: None
  - Read-only: **true**

&lt;!-- NOTE: This has been generated via update-readme.js --&gt;

- **browser_press_key**
  - Title: Press a key
  - Description: Press a key on the keyboard
  - Parameters:
    - `key` (string): Name of the key to press or a character to generate, such as `ArrowLeft` or `a`
  - Read-only: **false**

&lt;!-- NOTE: This has been generated via update-readme.js --&gt;

- **browser_resize**
  - Title: Resize browser window
  - Description: Resize the browser window
  - Parameters:
    - `width` (number): Width of the browser window
    - `height` (number): Height of the browser window
  - Read-only: **true**

&lt;!-- NOTE: This has been generated via update-readme.js --&gt;

- **browser_select_option**
  - Title: Select option
  - Description: Select an option in a dropdown
  - Parameters:
    - `element` (string): Human-readable element description used to obtain permission to interact with the element
    - `ref` (string): Exact target element reference from the page snapshot
    - `values` (array): Array of values to select in the dropdown. This can be a single value or multiple values.
  - Read-only: **false**

&lt;!-- NOTE: This has been generated via update-readme.js --&gt;

- **browser_snapshot**
  - Title: Page snapshot
  - Description: Capture accessibility snapshot of the current page, this is better than screenshot
  - Parameters: None
  - Read-only: **true**

&lt;!-- NOTE: This has been generated via update-readme.js --&gt;

- **browser_take_screenshot**
  - Title: Take a screenshot
  - Description: Take a screenshot of the current page. You can&#039;t perform actions based on the screenshot, use browser_snapshot for actions.
  - Parameters:
    - `raw` (boolean, optional): Whether to return without compression (in PNG format). Default is false, which returns a JPEG image.
    - `filename` (string, optional): File name to save the screenshot to. Defaults to `page-{timestamp}.{png|jpeg}` if not specified.
    - `element` (string, optional): Human-readable element description used to obtain permission to screenshot the element. If not provided, the screenshot will be taken of viewport. If element is provided, ref must be provided too.
    - `ref` (string, optional): Exact target element reference from the page snapshot. If not provided, the screenshot will be taken of viewport. If ref is provided, element must be provided too.
  - Read-only: **true**

&lt;!-- NOTE: This has been generated via update-readme.js --&gt;

- **browser_type**
  - Title: Type text
  - Description: Type text into editable element
  - Parameters:
    - `element` (string): Human-readable element description used to obtain permission to interact with the element
    - `ref` (string): Exact target element reference from the page snapshot
    - `text` (string): Text to type into the element
    - `submit` (boolean, optional): Whether to submit entered text (press Enter after)
    - `slowly` (boolean, optional): Whether to type one character at a time. Useful for triggering key handlers in the page. By default entire text is filled in at once.
  - Read-only: **false**

&lt;!-- NOTE: This has been generated via update-readme.js --&gt;

- **browser_wait_for**
  - Title: Wait for
  - Description: Wait for text to appear or disappear or a specified time to pass
  - Parameters:
    - `time` (n

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[maotoumao/MusicFreeDesktop]]></title>
            <link>https://github.com/maotoumao/MusicFreeDesktop</link>
            <guid>https://github.com/maotoumao/MusicFreeDesktop</guid>
            <pubDate>Fri, 18 Jul 2025 00:04:51 GMT</pubDate>
            <description><![CDATA[Êèí‰ª∂Âåñ„ÄÅÂÆöÂà∂Âåñ„ÄÅÊó†ÂπøÂëäÁöÑÂÖçË¥πÈü≥‰πêÊí≠ÊîæÂô®]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/maotoumao/MusicFreeDesktop">maotoumao/MusicFreeDesktop</a></h1>
            <p>Êèí‰ª∂Âåñ„ÄÅÂÆöÂà∂Âåñ„ÄÅÊó†ÂπøÂëäÁöÑÂÖçË¥πÈü≥‰πêÊí≠ÊîæÂô®</p>
            <p>Language: TypeScript</p>
            <p>Stars: 6,057</p>
            <p>Forks: 494</p>
            <p>Stars today: 99 stars today</p>
            <h2>README</h2><pre># MusicFree Ê°åÈù¢Áâà

## È°πÁõÆ‰ΩøÁî®Á∫¶ÂÆöÔºö
Êú¨È°πÁõÆÂü∫‰∫é AGPL 3.0 ÂçèËÆÆÂºÄÊ∫êÔºå‰ΩøÁî®Ê≠§È°πÁõÆÊó∂ËØ∑ÈÅµÂÆàÂºÄÊ∫êÂçèËÆÆ„ÄÇ  
Èô§Ê≠§Â§ñÔºåÂ∏åÊúõ‰Ω†Âú®‰ΩøÁî®‰ª£Á†ÅÊó∂Â∑≤Áªè‰∫ÜËß£‰ª•‰∏ãÈ¢ùÂ§ñËØ¥ÊòéÔºö

1. ÊâìÂåÖ„ÄÅ‰∫åÊ¨°ÂàÜÂèë **ËØ∑‰øùÁïô‰ª£Á†ÅÂá∫Â§Ñ**Ôºöhttps://github.com/maotoumao/MusicFree
2. ËØ∑‰∏çË¶ÅÁî®‰∫éÂïÜ‰∏öÁî®ÈÄîÔºåÂêàÊ≥ïÂêàËßÑ‰ΩøÁî®‰ª£Á†ÅÔºõ
3. Â¶ÇÊûúÂºÄÊ∫êÂçèËÆÆÂèòÊõ¥ÔºåÂ∞ÜÂú®Ê≠§ Github ‰ªìÂ∫ìÊõ¥Êñ∞Ôºå‰∏çÂè¶Ë°åÈÄöÁü•„ÄÇ
---

## ÁÆÄ‰ªã

‰∏Ä‰∏™Êèí‰ª∂Âåñ„ÄÅÂÆöÂà∂Âåñ„ÄÅÊó†ÂπøÂëäÁöÑÂÖçË¥πÈü≥‰πêÊí≠ÊîæÂô®„ÄÇ
&gt; ÂΩìÂâçÁâàÊú¨ÊîØÊåÅ Windows Âíå macOS Âíå Linux

&lt;img src=&quot;./src/assets/imgs/wechat_channel1.png&quot; height=&quot;144px&quot; title=&quot;ÂæÆ‰ø°ÂÖ¨‰ºóÂè∑&quot; style=&quot;display:inherit;&quot;/&gt;


### ‰∏ãËΩΩÂú∞ÂùÄ

[È£û‰π¶‰∫ëÊñáÊ°£](https://r0rvr854dd1.feishu.cn/drive/folder/IrVEfD67KlWZGkdqwjecLHFNnBb?from=from_copylink)

## ÁâπÊÄß

- Êèí‰ª∂ÂåñÔºöÊú¨ËΩØ‰ª∂‰ªÖ‰ªÖÊòØ‰∏Ä‰∏™Êí≠ÊîæÂô®ÔºåÊú¨Ë∫´**Âπ∂‰∏çÈõÜÊàê**‰ªª‰ΩïÂπ≥Âè∞ÁöÑ‰ªª‰ΩïÈü≥Ê∫êÔºåÊâÄÊúâÁöÑÊêúÁ¥¢„ÄÅÊí≠Êîæ„ÄÅÊ≠åÂçïÂØºÂÖ•Á≠âÂäüËÉΩÂÖ®ÈÉ®Âü∫‰∫é**Êèí‰ª∂**„ÄÇËøô‰πüÂ∞±ÊÑèÂë≥ÁùÄÔºå**Âè™Ë¶ÅÂèØ‰ª•Âú®‰∫íËÅîÁΩë‰∏äÊêúÁ¥¢Âà∞ÁöÑÈü≥Ê∫êÔºåÂè™Ë¶ÅÊúâÂØπÂ∫îÁöÑÊèí‰ª∂Ôºå‰Ω†ÈÉΩÂèØ‰ª•‰ΩøÁî®Êú¨ËΩØ‰ª∂ËøõË°åÊêúÁ¥¢„ÄÅÊí≠ÊîæÁ≠âÂäüËÉΩ„ÄÇ** ÂÖ≥‰∫éÊèí‰ª∂ÁöÑËØ¶ÁªÜËØ¥ÊòéËØ∑ÂèÇËÄÉ [ÂÆâÂçìÁâà Readme ÁöÑÊèí‰ª∂ÈÉ®ÂàÜ](https://github.com/maotoumao/MusicFree#%E6%8F%92%E4%BB%B6)„ÄÇ

- Êèí‰ª∂ÊîØÊåÅÁöÑÂäüËÉΩÔºöÊêúÁ¥¢ÔºàÈü≥‰πê„ÄÅ‰∏ìËæë„ÄÅ‰ΩúËÄÖ„ÄÅÊ≠åÂçïÔºâ„ÄÅÊí≠Êîæ„ÄÅÊü•Áúã‰∏ìËæë„ÄÅÊü•Áúã‰ΩúËÄÖËØ¶ÁªÜ‰ø°ÊÅØ„ÄÅÂØºÂÖ•ÂçïÊõ≤„ÄÅÂØºÂÖ•Ê≠åÂçï„ÄÅËé∑ÂèñÊ≠åËØçÁ≠â„ÄÇ

- ÂÆöÂà∂ÂåñÔºöÊú¨ËΩØ‰ª∂ÂèØ‰ª•ÈÄöËøá‰∏ªÈ¢òÂåÖÂÆö‰πâËΩØ‰ª∂Â§ñËßÇÂèäËÉåÊôØÔºåËØ¶ËßÅ‰∏ãÊñπ‰∏ªÈ¢òÂåÖ‰∏ÄËäÇ„ÄÇ

- Êó†ÂπøÂëäÔºöÂü∫‰∫é AGPL3.0 ÂçèËÆÆÂºÄÊ∫êÔºåÂ∞Ü‰ºö‰øùÊåÅÂÖçË¥π„ÄÇ

- ÈöêÁßÅÔºöËΩØ‰ª∂ÊâÄÊúâÊï∞ÊçÆÂ≠òÂÇ®Âú®Êú¨Âú∞ÔºåÊú¨ËΩØ‰ª∂‰∏ç‰ºö‰∏ä‰º†‰Ω†ÁöÑ‰∏™‰∫∫‰ø°ÊÅØ„ÄÇ

## Êèí‰ª∂

Êèí‰ª∂ÂçèËÆÆÂíåÂÆâÂçìÁâàÂÆåÂÖ®Áõ∏Âêå„ÄÇ

[Á§∫‰æãÊèí‰ª∂‰ªìÂ∫ì](https://github.com/maotoumao/MusicFreePlugins)Ôºå‰Ω†ÂèØ‰ª•Ê†πÊçÆ[Êèí‰ª∂ÂºÄÂèëÊñáÊ°£](https://musicfree.catcat.work/plugin/introduction.html) ÂºÄÂèëÈÄÇÈÖç‰∫é‰ªªÊÑèÈü≥Ê∫êÁöÑÊèí‰ª∂„ÄÇ

## ‰∏ªÈ¢òÂåÖ

‰∏ªÈ¢òÂåÖÊòØ‰∏Ä‰∏™Êñá‰ª∂Â§πÔºåÊñá‰ª∂Â§πÂÜÖÂøÖÈ°ªÂåÖÂê´‰∏§‰∏™Êñá‰ª∂Ôºö

```bash
index.css
config.json
```

### index.css

index.css ‰∏≠ÂèØ‰ª•Ë¶ÜÁõñÁïåÈù¢‰∏≠ÁöÑ‰ªª‰ΩïÊ†∑Âºè„ÄÇ‰Ω†ÂèØ‰ª•ÈÄöËøáÂÆö‰πâ css ÂèòÈáèÊù•ÂÆåÊàêÂ§ßÈÉ®ÂàÜÈ¢úËâ≤ÁöÑÊõøÊç¢Ôºå‰πüÂèØ‰ª•Êü•ÁúãÊ∫ê‰ª£Á†ÅÔºåÊ†πÊçÆÁ±ªÂêçÁ≠âË¶ÜÁõñÊ†∑Âºè„ÄÇ

ÊîØÊåÅÁöÑ css ÂèòÈáèÂ¶Ç‰∏ãÔºö

``` css
:root {
  --primaryColor: #f17d34; // ‰∏ªËâ≤Ë∞É
  --backgroundColor: #fdfdfd; // ËÉåÊôØËâ≤
  --dividerColor: rgba(0, 0, 0, 0.1); // ÂàÜÂâ≤Á∫øÈ¢úËâ≤
  --listHoverColor: rgba(0, 0, 0, 0.05); // ÂàóË°®ÊÇ¨ÊµÆÈ¢úËâ≤
  --listActiveColor: rgba(0, 0, 0, 0.1); // ÂàóË°®ÈÄâ‰∏≠È¢úËâ≤
  --textColor: #333333; // ‰∏ªÊñáÊú¨È¢úËâ≤
  --maskColor: rgba(51, 51, 51, 0.2); // ÈÅÆÁΩ©Â±ÇÈ¢úËâ≤
  --shadowColor: rgba(0, 0, 0, 0.2); // ÂØπËØùÊ°ÜÁ≠âÈò¥ÂΩ±È¢úËâ≤
  /** --shadow:  // shadowÂ±ûÊÄß */
  --placeholderColor: #f4f4f4; // ËæìÂÖ•Âå∫ËÉåÊôØÈ¢úËâ≤
  --successColor: #08A34C; // ÊàêÂäüÈ¢úËâ≤
  --dangerColor: #FC5F5F; // Âç±Èô©È¢úËâ≤
  --infoColor: #0A95C8; // ÈÄöÁü•È¢úËâ≤
  --headerTextColor: white; // È°∂ÈÉ®ÊñáÊú¨È¢úËâ≤
}
```

ÂÖ∑‰ΩìÁöÑ‰æãÂ≠êÂèØ‰ª•ÂèÇËÄÉ [ÊöóÈªëÊ®°Âºè](https://github.com/maotoumao/MusicFreeThemePacks/blob/master/darkmode/index.css)

Èô§‰∫ÜÈÄöËøá css ÂÆö‰πâÂ∏∏ËßÑÊ†∑ÂºèÂ§ñÔºå‰πüÂèØ‰ª•ÈÄöËøáÂú® config.json ‰∏≠ÂÆö‰πâ iframes Â≠óÊÆµÔºåÁî®Êù•Êää‰ªªÊÑèÁöÑ html Êñá‰ª∂‰Ωú‰∏∫ËΩØ‰ª∂ËÉåÊôØÔºåËøôÊ†∑ÂèØ‰ª•ÂÆûÁé∞‰∏Ä‰∫õÂçïÁ∫ØÁî® css Êó†Ê≥ïÂÆûÁé∞ÁöÑÊïàÊûú„ÄÇ

### config.json

config.json ÊòØ‰∏Ä‰∏™ÈÖçÁΩÆÊñá‰ª∂„ÄÇ

```json
{
    &quot;name&quot;: &quot;‰∏ªÈ¢òÂåÖÁöÑÂêçÁß∞&quot;,
    &quot;preview&quot;: &quot;#000000&quot;, // È¢ÑËßàÂõæÔºåÊîØÊåÅÈ¢úËâ≤ÊàñÂõæÁâáÔºõ
    &quot;description&quot;: &quot;ÊèèËø∞ÊñáÊú¨&quot;,
    &quot;iframes&quot;: {
        &quot;app&quot;: &quot;http://musicfree.catcat.work&quot;, // Êï¥‰∏™ËΩØ‰ª∂ÁöÑËÉåÊôØ
        &quot;header&quot;: &quot;&quot;, // Â§¥ÈÉ®Âå∫ÂüüÁöÑËÉåÊôØ
        &quot;body&quot;: &quot;&quot;, // ‰æßËæπÊ†è+‰∏ªÈ°µÈù¢Âå∫ÂüüÁöÑËÉåÊôØ
        &quot;side-bar&quot;: &quot;&quot;, // ‰æßËæπÊ†èÂå∫ÂüüÁöÑËÉåÊôØ
        &quot;page&quot;: &quot;&quot;, // ‰∏ªÈ°µÈù¢Âå∫ÂüüÁöÑËÉåÊôØ
        &quot;music-bar&quot;: &quot;&quot;, // Â∫ïÈÉ®Èü≥‰πêÊ†èÁöÑËÉåÊôØ

    }
}
```

Â¶ÇÊûúÈúÄË¶ÅÊåáÂêëÊú¨Âú∞ÁöÑÂõæÁâáÔºåÂèØ‰ª•ÈÄöËøá ```@/``` Ë°®Á§∫‰∏ªÈ¢òÂåÖÁöÑË∑ØÂæÑÔºõpreview„ÄÅiframes„ÄÅ‰ª•Âèä iframes ÊåáÂêëÁöÑ html Êñá‰ª∂ÈÉΩ‰ºöÊää ```@/``` ÊõøÊç¢‰∏∫ ```‰∏ªÈ¢òÂåÖË∑ØÂæÑ```„ÄÇËØ¶ÊÉÖÂèØÂèÇËÄÉ [Ê®±Ëä±‰∏ªÈ¢ò](https://github.com/maotoumao/MusicFreeThemePacks/tree/master/sakura)

### ‰∏ªÈ¢òÂåÖÁ§∫‰æã

Á§∫‰æã‰ªìÂ∫ìÔºöhttps://github.com/maotoumao/MusicFreeThemePacks

Âá†‰∏™‰∏ªÈ¢òÂåÖÊïàÊûúÊà™ÂõæÔºö

#### ÊöóÈªëÊ®°Âºè
[Ê∫ê‰ª£Á†Å](https://github.com/maotoumao/MusicFreeThemePacks/tree/master/darkmode)

![ÊöóÈªëÊ®°Âºè](./.imgs/darkmode.png)

#### ËÉåÊôØÂõæÁâá
[Ê∫ê‰ª£Á†Å](https://github.com/maotoumao/MusicFreeThemePacks/tree/master/night-star)

![ËÉåÊôØÂõæÁâá](./.imgs/night-star.png)

#### fliqlo
[Ê∫ê‰ª£Á†Å](https://github.com/maotoumao/MusicFreeThemePacks/tree/master/fliqlo)

![fliqlo](./.imgs/fliqlo.gif)

#### Ê®±Ëä±
[Ê∫ê‰ª£Á†Å](https://github.com/maotoumao/MusicFreeThemePacks/tree/master/sakura)

![Ê®±Ëä±](./.imgs/sakura.gif)

#### Èõ®Â≠£
[Ê∫ê‰ª£Á†Å](https://github.com/maotoumao/MusicFreeThemePacks/tree/master/rainy-season)

![Èõ®Â≠£](./.imgs/rainy-season.gif)

## ÂêØÂä®È°πÁõÆ

‰∏ãËΩΩ‰ªìÂ∫ì‰ª£Á†Å‰πãÂêéÔºåÂú®Ê†πÁõÆÂΩï‰∏ãÊâßË°åÔºö

```bash
npm install
npm start
```

## ÊîØÊåÅËøô‰∏™È°πÁõÆ

Â¶ÇÊûú‰Ω†ÂñúÊ¨¢Ëøô‰∏™È°πÁõÆÔºåÊàñËÄÖÂ∏åÊúõÊàëÂèØ‰ª•ÊåÅÁª≠Áª¥Êä§‰∏ãÂéªÔºå‰Ω†ÂèØ‰ª•ÈÄöËøá‰ª•‰∏ã‰ªª‰Ωï‰∏ÄÁßçÊñπÂºèÊîØÊåÅÊàë;)

1. Star Ëøô‰∏™È°πÁõÆÔºåÂàÜ‰∫´Áªô‰Ω†Ë∫´ËæπÁöÑ‰∫∫Ôºõ
2. ÂÖ≥Ê≥®ÂÖ¨‰ºóÂè∑„Äê‰∏ÄÂè™Áå´Â§¥Áå´„ÄëËé∑ÂèñÊúÄÊñ∞‰ø°ÊÅØÔºõ

&lt;img src=&quot;./src/assets/imgs/wechat_channel.jpg&quot; height=&quot;160px&quot; title=&quot;ÂæÆ‰ø°ÂÖ¨‰ºóÂè∑&quot; style=&quot;display:inherit;&quot;/&gt;

## Êà™Âõæ

![screenshot](./.imgs/screenshot.png)

![screenshot](./.imgs/screenshot1.png)

![screenshot](./.imgs/screenshot2.png)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[maurodesouza/profile-readme-generator]]></title>
            <link>https://github.com/maurodesouza/profile-readme-generator</link>
            <guid>https://github.com/maurodesouza/profile-readme-generator</guid>
            <pubDate>Fri, 18 Jul 2025 00:04:50 GMT</pubDate>
            <description><![CDATA[üé® Enhance your GitHub profile with this amazing tool, which allows you to create a personalized README quickly and easily. This profile README generator is the best you'll find üöÄ]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/maurodesouza/profile-readme-generator">maurodesouza/profile-readme-generator</a></h1>
            <p>üé® Enhance your GitHub profile with this amazing tool, which allows you to create a personalized README quickly and easily. This profile README generator is the best you'll find üöÄ</p>
            <p>Language: TypeScript</p>
            <p>Stars: 2,353</p>
            <p>Forks: 594</p>
            <p>Stars today: 34 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot; id=&quot;top&quot;&gt;
  &lt;img src=&quot;https://profile-readme-generator.com/assets/app.png&quot; width=&quot;900&quot; alt=&quot;Profile Readme Generator&quot; /&gt;

  &lt;a href=&quot;https://profile-readme-generator.com&quot;&gt;Demo&lt;/a&gt;
&lt;/div&gt;

&lt;div align=&quot;center&quot;&gt;
  &lt;h1&gt;Profile Readme Generator&lt;/h1&gt;
  &lt;h3&gt;The best profile readme generator you will find!&lt;/h3&gt;
&lt;/div&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/maurodesouza/profile-readme-generator/fork&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/forks/maurodesouza/profile-readme-generator?&quot; alt=&quot;Badge showing the total of project forks&quot;/&gt;
  &lt;/a&gt;

  &lt;a href=&quot;https://github.com/maurodesouza/profile-readme-generator/stargazers&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/stars/maurodesouza/profile-readme-generator?&quot; alt=&quot;Badge showing the total of project stars&quot;/&gt;
  &lt;/a&gt;

  &lt;a href=&quot;https://github.com/maurodesouza/profile-readme-generator/commits/main&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/commit-activity/m/maurodesouza/profile-readme-generator?&quot; alt=&quot;Badge showing average commit frequency per month&quot;/&gt;
  &lt;/a&gt;

  &lt;a href=&quot;https://github.com/maurodesouza/profile-readme-generator/commits/main&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/last-commit/maurodesouza/profile-readme-generator?&quot; alt=&quot;Badge showing when the last commit was made&quot;/&gt;
  &lt;/a&gt;

  &lt;a href=&quot;https://github.com/maurodesouza/profile-readme-generator/issues&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/issues/maurodesouza/profile-readme-generator?&quot; alt=&quot;Badge showing the total of project issues&quot;/&gt;
  &lt;/a&gt;

  &lt;a href=&quot;https://github.com/maurodesouza/profile-readme-generator/pulls&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/issues-pr/maurodesouza/profile-readme-generator?&quot; alt=&quot;Badge showing the total of project pull-requests&quot;/&gt;
  &lt;/a&gt;

  &lt;a href=&quot;https://github.com/maurodesouza/profile-readme-generator/blob/master/LICENSE.md&quot; target=&quot;_blank&quot;&gt;
    &lt;img alt=&quot;Badge showing project license type&quot; src=&quot;https://img.shields.io/github/license/maurodesouza/profile-readme-generator?color=f85149&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;


&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;#dart-about&quot;&gt;About&lt;/a&gt; &amp;#xa0; | &amp;#xa0;
  &lt;a href=&quot;#rocket-main-technologies&quot;&gt;Technologies&lt;/a&gt; &amp;#xa0; | &amp;#xa0;
  &lt;a href=&quot;#white_check_mark-requirements&quot;&gt;Requirements&lt;/a&gt; &amp;#xa0; | &amp;#xa0;
  &lt;a href=&quot;#checkered_flag-starting&quot;&gt;Starting&lt;/a&gt; &amp;#xa0; | &amp;#xa0;
  &lt;a href=&quot;https://github.com/maurodesouza/profile-readme-generator/blob/main/.github/CONTRIBUTING.md&quot;&gt;Contributing&lt;/a&gt;
&lt;/p&gt;

## :dart: About ##

Are you tired of manually editing your GitHub profile or missing out on the amazing features you can add to it? üò© Configuring GitHub actions can also be a hassle, right? Say no more! üí™

**Introducing a tool that lets you beautify your GitHub profile with a customized README, easily and in no time!** ‚ú® You can include whatever content you want, wherever you want it (*within the limitations of markdown, of course*). üìù

**With this amazing tool, creating your own README has never been so simple and fast.** ‚ö° You can save time and focus on what really matters - showcasing your skills and projects. üöÄ

**Don&#039;t miss out on the opportunity to enhance your GitHub profile.** Give it a try and see for yourself how easy and convenient it is! üòâ


&lt;p align=&quot;center&quot;&gt;
&lt;i&gt;Loved the tool? Please consider &lt;a href=&quot;https://www.paypal.com/donate/?hosted_button_id=FR3A2DGVYKGJS&quot;&gt;donating üí∏&lt;/a&gt; to support its continuous&lt;br/&gt; improvement and development!&lt;/i&gt;
&lt;/p&gt;

https://user-images.githubusercontent.com/54520907/173442002-dafc63ea-321f-4ce2-b349-be490b3a00ff.mp4

## :rocket: Main Technologies ##

&lt;a href=&quot;https://nextjs.org&quot;&gt;
  &lt;img width=&quot;50&quot; title=&quot;NextJs&quot; alt=&quot;Next Logo&quot; src=&quot;https://raw.githubusercontent.com/maurodesouza/maurodesouza/master/assets/next-logo.svg&quot;&gt;
&lt;/a&gt; &amp;#xa0; &amp;#xa0;

&lt;a href=&quot;https://www.typescriptlang.org&quot;&gt;
  &lt;img width=&quot;50&quot; title=&quot;Typescript&quot; alt=&quot;Typescript Logo&quot; src=&quot;https://raw.githubusercontent.com/maurodesouza/maurodesouza/master/assets/typescript-logo.svg&quot;&gt;
&lt;/a&gt; &amp;#xa0; &amp;#xa0;

&lt;a href=&quot;https://tailwindcss.com&quot;&gt;
  &lt;img width=&quot;50&quot; title=&quot;Styled Components&quot; alt=&quot;Styled Components Logo&quot; src=&quot;https://raw.githubusercontent.com/github/explore/80688e429a7d4ef2fca1e82350fe8e3517d3494d/topics/tailwind/tailwind.png&quot;&gt;
&lt;/a&gt; &amp;#xa0; &amp;#xa0;

&lt;a href=&quot;https://jestjs.io&quot;&gt;
  &lt;img width=&quot;50&quot; title=&quot;Jest&quot; alt=&quot;Jest Logo&quot; src=&quot;https://raw.githubusercontent.com/maurodesouza/maurodesouza/master/assets/jest-logo.svg&quot;&gt;
&lt;/a&gt; &amp;#xa0; &amp;#xa0;

&lt;a href=&quot;https://eslint.org&quot;&gt;
  &lt;img  width=&quot;50&quot; title=&quot;Eslint&quot; alt=&quot;Eslint Logo&quot; src=&quot;https://raw.githubusercontent.com/github/explore/80688e429a7d4ef2fca1e82350fe8e3517d3494d/topics/eslint/eslint.png&quot;&gt;
&lt;/a&gt; &amp;#xa0; &amp;#xa0;

&lt;a href=&quot;https://prettier.io&quot;&gt;
  &lt;img width=&quot;50&quot; title=&quot;Prettier&quot; alt=&quot;Prettier Logo&quot; src=&quot;https://prettier.io/icon.png&quot;&gt;
&lt;/a&gt;

###

&lt;details&gt;
  &lt;summary&gt;See more&lt;/summary&gt;

  ###

  * [Shadcn](https://ui.shadcn.com)
  * [Radix](https://www.radix-ui.com)
  * [Lucid Icons](https://lucide.dev)
  * [clsx](https://github.com/lukeed/clsx#readme)
  * [Tailwind Merge](https://github.com/dcastil/tailwind-merge#readme)
  * [Tailwind Variants](https://www.tailwind-variants.org)
  * [Framer Motion](https://framer.com/motion/)
  * [Prismjs](https://prismjs.com)
  * [HTML Prettify](https://github.com/Dmc0125/html-prettify#readme)
  * [React Share](https://github.com/nygardk/react-share)
  * [React Markdown](https://github.com/remarkjs/react-markdown#readme)
  * [UUID](https://github.com/uuidjs/uuid#readme)

&lt;/details&gt;

## :white_check_mark: Requirements ##

Before starting :checkered_flag:, make sure you have [Git](https://git-scm.com) and [Node](https://nodejs.org/en/) installed on your system. ([nvm](https://github.com/nvm-sh/nvm#node-version-manager---) recommended).

## :checkered_flag: Starting ##

```bash
# Clone this project
$ git clone https://github.com/maurodesouza/profile-readme-generator

# Access
$ cd profile-readme-generator

# Install dependencies
$ yarn

# Run the project
$ yarn dev

# The server will initialize in the &lt;http://localhost:3000&gt;
```

## :video_game: Scripts

- `dev`: starts the application at `localhost:3000`;
- `build`: creates an optimized production build of the application;
- `start`: starts the application in production mode at localhost:3000 (make sure to run the build first);
- `test`: runs the tests;
- `lint`: runs eslint in the /src directory.

## :memo: License ##

This project is licensed under the MIT License. For more details, please refer to the [LICENSE](LICENSE.md) file.


Made with :heart: by &lt;a href=&quot;https://github.com/maurodesouza&quot; target=&quot;_blank&quot;&gt;Mauro de Souza&lt;/a&gt;

&amp;#xa0;

&lt;a href=&quot;#top&quot;&gt;Back to top&lt;/a&gt;

*Readme created with [Simple Readme](https://marketplace.visualstudio.com/items?itemName=maurodesouza.vscode-simple-readme)*
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[makenotion/notion-mcp-server]]></title>
            <link>https://github.com/makenotion/notion-mcp-server</link>
            <guid>https://github.com/makenotion/notion-mcp-server</guid>
            <pubDate>Fri, 18 Jul 2025 00:04:49 GMT</pubDate>
            <description><![CDATA[Official Notion MCP Server]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/makenotion/notion-mcp-server">makenotion/notion-mcp-server</a></h1>
            <p>Official Notion MCP Server</p>
            <p>Language: TypeScript</p>
            <p>Stars: 2,677</p>
            <p>Forks: 217</p>
            <p>Stars today: 18 stars today</p>
            <h2>README</h2><pre># Notion MCP Server

&gt; [!NOTE] 
&gt; 
&gt; We‚Äôve introduced **Notion MCP** (Beta), a remote MCP server with the following improvements:
&gt; - Easy installation via standard OAuth. No need to fiddle with JSON or API token anymore.
&gt; - Powerful tools tailored to AI agents. These tools are designed with optimized token consumption in mind.
&gt; 
&gt; Learn more and try it out [here](https://notion.notion.site/Beta-Overview-Notion-MCP-206efdeead058060a59bf2c14202bd0a)


![notion-mcp-sm](https://github.com/user-attachments/assets/6c07003c-8455-4636-b298-d60ffdf46cd8)

This project implements an [MCP server](https://spec.modelcontextprotocol.io/) for the [Notion API](https://developers.notion.com/reference/intro). 

![mcp-demo](https://github.com/user-attachments/assets/e3ff90a7-7801-48a9-b807-f7dd47f0d3d6)

### Installation

#### 1. Setting up Integration in Notion:
Go to [https://www.notion.so/profile/integrations](https://www.notion.so/profile/integrations) and create a new **internal** integration or select an existing one.

![Creating a Notion Integration token](docs/images/integrations-creation.png)

While we limit the scope of Notion API&#039;s exposed (for example, you will not be able to delete databases via MCP), there is a non-zero risk to workspace data by exposing it to LLMs. Security-conscious users may want to further configure the Integration&#039;s _Capabilities_. 

For example, you can create a read-only integration token by giving only &quot;Read content&quot; access from the &quot;Configuration&quot; tab:

![Notion Integration Token Capabilities showing Read content checked](docs/images/integrations-capabilities.png)

#### 2. Connecting content to integration:
Ensure relevant pages and databases are connected to your integration.

To do this, visit the **Access** tab in your internal integration settings. Edit access and select the pages you&#039;d like to use.
![Integration Access tab](docs/images/integration-access.png)

![Edit integration access](docs/images/page-access-edit.png)

Alternatively, you can grant page access individually. You&#039;ll need to visit the target page, and click on the 3 dots, and select &quot;Connect to integration&quot;. 

![Adding Integration Token to Notion Connections](docs/images/connections.png)

#### 3. Adding MCP config to your client:

##### Using npm:

**Cursor &amp; Claude:**

Add the following to your `.cursor/mcp.json` or `claude_desktop_config.json` (MacOS: `~/Library/Application\ Support/Claude/claude_desktop_config.json`)

```javascript
{
  &quot;mcpServers&quot;: {
    &quot;notionApi&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@notionhq/notion-mcp-server&quot;],
      &quot;env&quot;: {
        &quot;OPENAPI_MCP_HEADERS&quot;: &quot;{\&quot;Authorization\&quot;: \&quot;Bearer ntn_****\&quot;, \&quot;Notion-Version\&quot;: \&quot;2022-06-28\&quot; }&quot;
      }
    }
  }
}
```

**Zed**

Add the following to your `settings.json`

```json
{
  &quot;context_servers&quot;: {
    &quot;some-context-server&quot;: {
      &quot;command&quot;: {
        &quot;path&quot;: &quot;npx&quot;,
        &quot;args&quot;: [&quot;-y&quot;, &quot;@notionhq/notion-mcp-server&quot;],
        &quot;env&quot;: {
          &quot;OPENAPI_MCP_HEADERS&quot;: &quot;{\&quot;Authorization\&quot;: \&quot;Bearer ntn_****\&quot;, \&quot;Notion-Version\&quot;: \&quot;2022-06-28\&quot; }&quot;
        }
      },
      &quot;settings&quot;: {}
    }
  }
}
```

##### Using Docker:

There are two options for running the MCP server with Docker:

###### Option 1: Using the official Docker Hub image:

Add the following to your `.cursor/mcp.json` or `claude_desktop_config.json`:

```javascript
{
  &quot;mcpServers&quot;: {
    &quot;notionApi&quot;: {
      &quot;command&quot;: &quot;docker&quot;,
      &quot;args&quot;: [
        &quot;run&quot;,
        &quot;--rm&quot;,
        &quot;-i&quot;,
        &quot;-e&quot;, &quot;OPENAPI_MCP_HEADERS&quot;,
        &quot;mcp/notion&quot;
      ],
      &quot;env&quot;: {
        &quot;OPENAPI_MCP_HEADERS&quot;: &quot;{\&quot;Authorization\&quot;:\&quot;Bearer ntn_****\&quot;,\&quot;Notion-Version\&quot;:\&quot;2022-06-28\&quot;}&quot;
      }
    }
  }
}
```

This approach:
- Uses the official Docker Hub image
- Properly handles JSON escaping via environment variables
- Provides a more reliable configuration method

###### Option 2: Building the Docker image locally:

You can also build and run the Docker image locally. First, build the Docker image:

```bash
docker-compose build
```

Then, add the following to your `.cursor/mcp.json` or `claude_desktop_config.json`:

```javascript
{
  &quot;mcpServers&quot;: {
    &quot;notionApi&quot;: {
      &quot;command&quot;: &quot;docker&quot;,
      &quot;args&quot;: [
        &quot;run&quot;,
        &quot;--rm&quot;,
        &quot;-i&quot;,
        &quot;-e&quot;,
        &quot;OPENAPI_MCP_HEADERS={\&quot;Authorization\&quot;: \&quot;Bearer ntn_****\&quot;, \&quot;Notion-Version\&quot;: \&quot;2022-06-28\&quot;}&quot;,
        &quot;notion-mcp-server&quot;
      ]
    }
  }
}
```

Don&#039;t forget to replace `ntn_****` with your integration secret. Find it from your integration configuration tab:

![Copying your Integration token from the Configuration tab in the developer portal](https://github.com/user-attachments/assets/67b44536-5333-49fa-809c-59581bf5370a)


#### Installing via Smithery

[![smithery badge](https://smithery.ai/badge/@makenotion/notion-mcp-server)](https://smithery.ai/server/@makenotion/notion-mcp-server)

To install Notion API Server for Claude Desktop automatically via [Smithery](https://smithery.ai/server/@makenotion/notion-mcp-server):

```bash
npx -y @smithery/cli install @makenotion/notion-mcp-server --client claude
```

### Examples

1. Using the following instruction
```
Comment &quot;Hello MCP&quot; on page &quot;Getting started&quot;
```

AI will correctly plan two API calls, `v1/search` and `v1/comments`, to achieve the task

2. Similarly, the following instruction will result in a new page named &quot;Notion MCP&quot; added to parent page &quot;Development&quot;
```
Add a page titled &quot;Notion MCP&quot; to page &quot;Development&quot;
```

3. You may also reference content ID directly
```
Get the content of page 1a6b35e6e67f802fa7e1d27686f017f2
```

### Development

Build

```
npm run build
```

Execute

```
npx -y --prefix /path/to/local/notion-mcp-server @notionhq/notion-mcp-server
```

Publish

```
npm publish --access public
```
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[nuxt/nuxt]]></title>
            <link>https://github.com/nuxt/nuxt</link>
            <guid>https://github.com/nuxt/nuxt</guid>
            <pubDate>Fri, 18 Jul 2025 00:04:48 GMT</pubDate>
            <description><![CDATA[The Intuitive Vue Framework.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/nuxt/nuxt">nuxt/nuxt</a></h1>
            <p>The Intuitive Vue Framework.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 57,659</p>
            <p>Forks: 5,306</p>
            <p>Stars today: 17 stars today</p>
            <h2>README</h2><pre>[![Nuxt banner](./.github/assets/banner.svg)](https://nuxt.com)

# Nuxt

&lt;p&gt;
  &lt;a href=&quot;https://www.npmjs.com/package/nuxt&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/nuxt.svg?style=flat&amp;colorA=18181B&amp;colorB=28CF8D&quot; alt=&quot;Version&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://www.npmjs.com/package/nuxt&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/nuxt.svg?style=flat&amp;colorA=18181B&amp;colorB=28CF8D&quot; alt=&quot;Downloads&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://github.com/nuxt/nuxt/tree/main/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/nuxt/nuxt.svg?style=flat&amp;colorA=18181B&amp;colorB=28CF8D&quot; alt=&quot;License&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://nuxt.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Nuxt%20Docs-18181B?logo=nuxt&quot; alt=&quot;Website&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://chat.nuxt.dev&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Nuxt%20Discord-18181B?logo=discord&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://securityscorecards.dev/&quot;&gt;&lt;img src=&quot;https://api.securityscorecards.dev/projects/github.com/nuxt/nuxt/badge&quot; alt=&quot;Nuxt openssf scorecard score&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

Nuxt is a free and open-source framework with an intuitive and extendable way to create type-safe, performant and production-grade full-stack web applications and websites with Vue.js.

It provides a number of features that make it easy to build fast, SEO-friendly, and scalable web applications, including:
- Server-side rendering, Static Site Generation, Hybrid Rendering and Edge-Side Rendering
- Automatic routing with code-splitting and pre-fetching
- Data fetching and state management
- SEO Optimization and Meta tags definition
- Auto imports of components, composables and utils
- TypeScript with zero configuration
- Go fullstack with our server/ directory
- Extensible with [200+ modules](https://nuxt.com/modules)
- Deployment to a variety of [hosting platforms](https://nuxt.com/deploy)
- ...[and much more](https://nuxt.com) üöÄ

### Table of Contents

- üöÄ [Getting Started](#getting-started)
- üíª [ Vue Development](#vue-development)
- üìñ [Documentation](#documentation)
- üß© [Modules](#modules)
- ‚ù§Ô∏è  [Contribute](#contribute)
- üè† [Local Development](#local-development)
- üõü [Professional Support](#professional-support)
- üîó [Follow Us](#follow-us)
- ‚öñÔ∏è [License](#license)

---

## &lt;a name=&quot;getting-started&quot;&gt;üöÄ Getting Started&lt;/a&gt;

Use the following command to create a new starter project. This will create a starter project with all the necessary files and dependencies:

```bash
npm create nuxt &lt;my-project&gt;
```

&gt; [!TIP]
&gt; Discover also [nuxt.new](https://nuxt.new): Open a Nuxt starter on CodeSandbox, StackBlitz or locally to get up and running in a few seconds.

## &lt;a name=&quot;vue-development&quot;&gt;üíª Vue Development&lt;/a&gt;

Simple, intuitive and powerful, Nuxt lets you write Vue components in a way that makes sense. Every repetitive task is automated, so you can focus on writing your full-stack Vue application with confidence.

Example of an `app.vue`:

```vue
&lt;script setup lang=&quot;ts&quot;&gt;
useSeoMeta({
  title: &#039;Meet Nuxt&#039;,
  description: &#039;The Intuitive Vue Framework.&#039;
})
&lt;/script&gt;

&lt;template&gt;
  &lt;div id=&quot;app&quot;&gt;
    &lt;AppHeader /&gt;
    &lt;NuxtPage /&gt;
    &lt;AppFooter /&gt;
  &lt;/div&gt;
&lt;/template&gt;

&lt;style scoped&gt;
#app {
  background-color: #020420;
  color: #00DC82;
}
&lt;/style&gt;
```

## &lt;a name=&quot;documentation&quot;&gt;üìñ Documentation&lt;/a&gt;

We highly recommend you take a look at the [Nuxt documentation](https://nuxt.com/docs) to level up. It‚Äôs a great resource for learning more about the framework. It covers everything from getting started to advanced topics.

## &lt;a name=&quot;modules&quot;&gt;üß© Modules&lt;/a&gt;

Discover our [list of modules](https://nuxt.com/modules) to supercharge your Nuxt project, created by the Nuxt team and community.

## &lt;a name=&quot;contribute&quot;&gt;‚ù§Ô∏è Contribute&lt;/a&gt;

We invite you to contribute and help improve Nuxt üíö

Here are a few ways you can get involved:
- **Reporting Bugs:** If you come across any bugs or issues, please check out the [reporting bugs guide](https://nuxt.com/docs/community/reporting-bugs) to learn how to submit a bug report.
- **Suggestions:** Have ideas to enhance Nuxt? We&#039;d love to hear them! Check out the [contribution guide](https://nuxt.com/docs/community/contribution) to share your suggestions.
- **Questions:** If you have questions or need assistance, the [getting help guide](https://nuxt.com/docs/community/getting-help) provides resources to help you out.

## &lt;a name=&quot;local-development&quot;&gt;üè† Local Development&lt;/a&gt;

Follow the docs to [Set Up Your Local Development Environment](https://nuxt.com/docs/community/framework-contribution#setup) to contribute to the framework and documentation.

## &lt;a name=&quot;professional-support&quot;&gt;üõü Professional Support&lt;/a&gt;

- Technical audit &amp; consulting: [Nuxt Experts](https://nuxt.com/enterprise/support)
- Custom development &amp; more: [Nuxt Agencies Partners](https://nuxt.com/enterprise/agencies)

## &lt;a name=&quot;follow-us&quot;&gt;üîó Follow Us&lt;/a&gt;

&lt;p valign=&quot;center&quot;&gt;
  &lt;a href=&quot;https://go.nuxt.com/discord&quot;&gt;&lt;img width=&quot;20px&quot; src=&quot;./.github/assets/discord.svg&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://go.nuxt.com/x&quot;&gt;&lt;img width=&quot;20px&quot; src=&quot;./.github/assets/twitter.svg&quot; alt=&quot;Twitter&quot;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://go.nuxt.com/github&quot;&gt;&lt;img width=&quot;20px&quot; src=&quot;./.github/assets/github.svg&quot; alt=&quot;GitHub&quot;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://go.nuxt.com/bluesky&quot;&gt;&lt;img width=&quot;20px&quot; src=&quot;./.github/assets/bluesky.svg&quot; alt=&quot;Bluesky&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

## &lt;a name=&quot;license&quot;&gt;‚öñÔ∏è License&lt;/a&gt;

[MIT](https://github.com/nuxt/nuxt/tree/main/LICENSE)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[spacedriveapp/spacedrive]]></title>
            <link>https://github.com/spacedriveapp/spacedrive</link>
            <guid>https://github.com/spacedriveapp/spacedrive</guid>
            <pubDate>Fri, 18 Jul 2025 00:04:47 GMT</pubDate>
            <description><![CDATA[Spacedrive is an open source cross-platform file explorer, powered by a virtual distributed filesystem written in Rust.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/spacedriveapp/spacedrive">spacedriveapp/spacedrive</a></h1>
            <p>Spacedrive is an open source cross-platform file explorer, powered by a virtual distributed filesystem written in Rust.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 35,050</p>
            <p>Forks: 1,085</p>
            <p>Stars today: 28 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;p align=&quot;center&quot;&gt;
   &lt;img width=&quot;150&quot; height=&quot;150&quot; src=&quot;packages/assets/images/AppLogo.png&quot; alt=&quot;Logo&quot;&gt;
  &lt;/p&gt;
	&lt;h1 align=&quot;center&quot;&gt;&lt;b&gt;Spacedrive&lt;/b&gt;&lt;/h1&gt;
	&lt;p align=&quot;center&quot;&gt;
		A file explorer from the future.
    &lt;br /&gt;
    &lt;a href=&quot;https://spacedrive.com&quot;&gt;&lt;strong&gt;spacedrive.com ¬ª&lt;/strong&gt;&lt;/a&gt;
    &lt;br /&gt;
    &lt;br /&gt;
    &lt;b&gt;Download for &lt;/b&gt;
    macOS (&lt;a href=&quot;https://www.spacedrive.com/api/releases/desktop/stable/darwin/aarch64&quot;&gt;Apple Silicon&lt;/a&gt; |
    &lt;a href=&quot;https://www.spacedrive.com/api/releases/desktop/stable/darwin/x86_64&quot;&gt;Intel&lt;/a&gt;) ¬∑
		&lt;a href=&quot;https://www.spacedrive.com/api/releases/desktop/stable/windows/x86_64&quot;&gt;Windows&lt;/a&gt; ¬∑
		&lt;a href=&quot;https://www.spacedrive.com/api/releases/desktop/stable/linux/x86_64&quot;&gt;Linux&lt;/a&gt; ¬∑
		iOS ¬∑
		Android
    &lt;br /&gt;
    &lt;i&gt;~ Links for iOS &amp; Android will be added once a release is available. ~&lt;/i&gt;
  &lt;/p&gt;
&lt;/p&gt;

Spacedrive is an open source cross-platform file manager, powered by a virtual distributed filesystem (&lt;a href=&quot;#what-is-a-vdfs&quot;&gt;VDFS&lt;/a&gt;) written in Rust.
&lt;br/&gt;
&lt;br/&gt;

&gt; [!IMPORTANT] 
&gt; We regret to inform our valued Spacedrive community that we must temporarily pause our development roadmap beyond our [latest update](https://github.com/spacedriveapp/spacedrive/releases/tag/0.4.3). Due to current funding constraints and related challenges, we cannot deliver new features or updates for the foreseeable future.
&gt;
&gt; While this was a tough decision, our team remains committed to Spacedrive&#039;s vision and will explore options to resume development when circumstances allow. We deeply appreciate your understanding and continued support during this challenging period.
&gt; 
&gt; The Spacedrive Team


Organize files across many devices in one place. From cloud services to offline hard drives, Spacedrive combines the storage capacity and processing power of your devices into one personal distributed cloud, that is both secure and intuitive to use.

For independent creatives, hoarders and those that want to own their digital footprint, Spacedrive provides a free file management experience like no other.

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;apps/landing/public/github.webp&quot; alt=&quot;App screenshot&quot;&gt;
  &lt;br /&gt;
  &lt;br /&gt;
  &lt;a href=&quot;https://discord.gg/gTaF2Z44f5&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/discord/949090953497567312?label=Discord&amp;color=5865F2&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://x.com/spacedriveapp&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/Twitter-black?logo=x&amp;logoColor=white&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://instagram.com/spacedriveapp&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/Instagram-E4405F?logo=instagram&amp;logoColor=white&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://www.gnu.org/licenses/agpl-3.0&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/static/v1?label=Licence&amp;message=AGPL%20v3&amp;color=000&quot; /&gt;
  &lt;/a&gt;
  &lt;img src=&quot;https://img.shields.io/static/v1?label=Bundled+size+(avg.)&amp;message=76.26MB&amp;color= 0974B4&quot; /&gt;
  &lt;img src=&quot;https://img.shields.io/static/v1?label=Stage&amp;message=Alpha&amp;color=2BB4AB&quot; /&gt;
  &lt;br /&gt;
&lt;/p&gt;

# What is a VDFS?

A VDFS (virtual distributed filesystem) is a filesystem designed to work across a variety of storage layers. With a uniform API to manipulate and access content across many devices, VDFS is not restricted to a single machine. It achieves this by maintaining a virtual index of all storage locations, synchronizing the database between clients in realtime. This implementation also uses [CAS](https://en.wikipedia.org/wiki/Content-addressable_storage) (Content-addressable storage) to uniquely identify files, while keeping record of logical file paths relative to the storage locations.

The first implementation of a VDFS can be found in this UC Berkeley [paper](https://www2.eecs.berkeley.edu/Pubs/TechRpts/2018/EECS-2018-29.pdf) by Haoyuan Li. This paper describes its use for cloud computing, however the underlying concepts can be translated to open consumer software.

# Motivation

Many of us have multiple cloud accounts, drives that aren‚Äôt backed up and data at risk of loss. We depend on cloud services like Google Photos and iCloud, but are locked in with limited capacity and almost zero interoperability between services and operating systems. Photo albums shouldn‚Äôt be stuck in a device ecosystem, or harvested for advertising data. They should be OS agnostic, permanent and personally owned. Data we create is our legacy, that will long outlive us‚Äîopen source technology is the only way to ensure we retain absolute control over the data that defines our lives, at unlimited scale.

# Roadmap

View a list of our planned features here: [spacedrive.com/roadmap](https://spacedrive.com/roadmap)

# Developer Guide

Please refer to the [contributing guide](CONTRIBUTING.md) for how to install Spacedrive from sources.

# Security Policy

Please refer to the [security policy](SECURITY.md) for details and information on how to responsibly report a security vulnerability or issue.

# Architecture

This project is using what I&#039;m calling the **&quot;PRRTT&quot;** stack (Prisma, Rust, React, TypeScript, Tauri).

- Prisma on the front-end? ü§Ø Made possible thanks to [prisma-client-rust](https://github.com/brendonovich/prisma-client-rust), developed by [Brendonovich](https://github.com/brendonovich). Gives us access to the powerful migration CLI in development, along with the Prisma syntax for our schema. The application bundles with the Prisma query engine and codegen for a beautiful Rust API. Our lightweight migration runner is custom built for a desktop app context.
- Tauri allows us to create a pure Rust native OS webview, without the overhead of your average Electron app. This brings the bundle size and average memory usage down dramatically. It also contributes to a more native feel, especially on macOS due to Safari&#039;s close integration with the OS.
- We also use [rspc](https://rspc.dev), created by Oscar Beaumont, which allows us to define functions in Rust and call them on the TypeScript frontend in a completely typesafe manner.
- The core (`sdcore`) is written in pure Rust.

## Monorepo structure:

### Apps:

- `desktop`: A [Tauri](https://tauri.app) app.
- `mobile`: A [React Native](https://reactnative.dev/) app.
- `web`: A [React](https://reactjs.org) webapp.
- `landing`: A [React](https://reactjs.org) app using [Next.js](https://nextjs.org).
- `server`: A [Rust](https://www.rust-lang.org) server for the webapp.
- `cli`: A [Rust](https://www.rust-lang.org) command line interface. (planned)
- `storybook`: A [React](https://reactjs.org) storybook for the UI components.

### Core:

- `core`: The [Rust](https://www.rust-lang.org) core, referred to internally as `sdcore`. Contains filesystem, database and networking logic. Can be deployed in a variety of host applications.
- `crates`: Shared Rust libraries used by the core and other Rust applications.

### Interface:

- `interface`: The complete user interface in React (used by apps `desktop`, `web`)

### Packages:

- `assets`: Shared assets (images, fonts, etc).
- `client`: A [TypeScript](https://www.typescriptlang.org/) client library to handle dataflow via RPC between UI and the Rust core.
- `config`: `eslint` configurations (includes `eslint-config-next`, `eslint-config-prettier` and all `tsconfig.json` configs used throughout the monorepo).
- `ui`: A [React](https://reactjs.org) Shared component library.

- `macos`: A [Swift](https://developer.apple.com/swift/) Native binary for MacOS system extensions (planned).
- `ios`: A [Swift](https://developer.apple.com/swift/) Native binary (planned).
- `windows`: A [C#](https://docs.microsoft.com/en-us/dotnet/csharp/) Native binary (planned).
- `android`: A [Kotlin](https://kotlinlang.org/) Native binary (planned).
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[btc-vision/OP_20]]></title>
            <link>https://github.com/btc-vision/OP_20</link>
            <guid>https://github.com/btc-vision/OP_20</guid>
            <pubDate>Fri, 18 Jul 2025 00:04:46 GMT</pubDate>
            <description><![CDATA[OP_20 example token]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/btc-vision/OP_20">btc-vision/OP_20</a></h1>
            <p>OP_20 example token</p>
            <p>Language: TypeScript</p>
            <p>Stars: 73</p>
            <p>Forks: 192</p>
            <p>Stars today: 9 stars today</p>
            <h2>README</h2><pre># Deploying and Customizing an OP_20 Token on OP_NET

![Bitcoin](https://img.shields.io/badge/Bitcoin-000?style=for-the-badge&amp;logo=bitcoin&amp;logoColor=white)
![AssemblyScript](https://img.shields.io/badge/assembly%20script-%23000000.svg?style=for-the-badge&amp;logo=assemblyscript&amp;logoColor=white)
![TypeScript](https://img.shields.io/badge/TypeScript-007ACC?style=for-the-badge&amp;logo=typescript&amp;logoColor=white)
![NodeJS](https://img.shields.io/badge/Node%20js-339933?style=for-the-badge&amp;logo=nodedotjs&amp;logoColor=white)
![WebAssembly](https://img.shields.io/badge/WebAssembly-654FF0?style=for-the-badge&amp;logo=webassembly&amp;logoColor=white)
![NPM](https://img.shields.io/badge/npm-CB3837?style=for-the-badge&amp;logo=npm&amp;logoColor=white)

[![code style: prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat-square)](https://github.com/prettier/prettier)

## Prerequisites

- Ensure you have [Node.js](https://nodejs.org/en/download/prebuilt-installer) and [npm](https://www.npmjs.com/) installed on your computer.

## Step-by-Step Guide

### 1. Install OP_WALLET Chrome Extension

- Download and install the [OP_WALLET Chrome Extension](https://opnet.org).
- Set up the wallet and switch the network to Regtest.

### 2. Obtain Testnet Bitcoin

- If you don&#039;t have any Regtest Bitcoin, get some from [this faucet](https://faucet.opnet.org/).

### 3. Download OP_20 Template Contract

- Clone the [OP_20 template contract](https://github.com/btc-vision/OP_20) repository:
    ```sh
    git clone https://github.com/btc-vision/OP_20.git
    ```

### 4. Edit Token Details

This step is crucial for customizing your OP_20 token. You will need to adjust several key properties such as `maxSupply`, `decimals`, `name`, and `symbol`.

#### **Understanding Token Properties**

Here‚Äôs what each property means and how you can customize it:

1. **`maxSupply`**:

- This defines the total supply of your token.
- It‚Äôs a `u256` value representing the maximum number of tokens that will ever exist.
- The number should include the full number of decimals.
- **Example**: If you want a total supply of 1,000,000 tokens with 18 decimals, the value should be `1000000000000000000000000`.

```typescript
const maxSupply: u256 = u128.fromString(&#039;1000000000000000000000000&#039;).toU256(); // 1,000,000 tokens with 18 decimals
```

2. **`decimals`**:

- This property defines how divisible your token is.
- A value of `18` means the token can be divided down to 18 decimal places, similar to how Ethereum handles its tokens.

```typescript
const decimals: u8 = 18; // Your decimals
```

3. **`name`**:

- The `name` is a string representing the full name of your token.
- This will be displayed in wallets and exchanges.

```typescript
const name: string = &#039;YourTokenName&#039;; // e.g., &#039;My Custom Token&#039;
```

4. **`symbol`**:

- The `symbol` is a short string representing the ticker symbol of your token.
- Similar to how &quot;BTC&quot; represents Bitcoin.

```typescript
const symbol: string = &#039;SYM&#039;; // e.g., &#039;MYT&#039;
```

#### **Modifying the Contract Code**

Open the `OP_20` template repository in your IDE or text editor and navigate to `src/contracts/MyToken.ts`. Look for the following section in the `onInstantiated` method:

```typescript
const maxSupply: u256 = u128.fromString(&#039;1000000000000000000000000&#039;).toU256(); // Your max supply
const decimals: u8 = 18; // Your decimals
const name: string = &#039;YourTokenName&#039;; // Your token name
const symbol: string = &#039;SYM&#039;; // Your token symbol
```

Modify the values as needed for your token.

### 5. Install Dependencies and Build

After customizing your token&#039;s properties, build the contract:

- Open your terminal and navigate to the location of the downloaded `OP_20` template folder.
- Run the following commands:

    ```sh
    npm install
    npm run build
    ```

- After building, a `build` folder will be created in the root of the `OP_20` folder. Look for `[nameoftoken].wasm` for the compiled contract.

### 6. Deploy the Token Contract

- Open the OP_WALLET extension and select the &quot;deploy&quot; option.
- Drag your `.wasm` file or click to choose it.
- Send your transaction to deploy the token contract onto Bitcoin with OP_NET.

### 7. Add Liquidity on Motoswap

- Copy the token address from your OP_WALLET.
- Go to [Motoswap](https://motoswap.org/pool) and paste your token address into the top or bottom box.
- Enter the amount of tokens you wish to add to the liquidity pool.
- Select the other side of the liquidity pair (e.g., WBTC) and enter the amount of tokens you wish to add.
- Click &quot;Add Liquidity&quot;.

Your token is now tradeable on Motoswap!

---

## Customizing Your Token Further

Now that you&#039;ve set up the basic token properties, you can add additional functionality to your OP_20 token contract. Here are some common customizations:

### Adding Custom Methods

To add custom functionality to your token, you can define new methods in your contract. For example, let&#039;s say you want to add an &quot;airdrop&quot; function that distributes tokens to multiple addresses.

#### Example: Airdrop Function

```typescript
public override callMethod(method: Selector, calldata: Calldata): BytesWriter {
    switch (method) {
        case encodeSelector(&#039;airdrop()&#039;):
            return this.airdrop(calldata);
        default:
            return super.callMethod(method, calldata);
    }
}

private airdrop(calldata: Calldata): BytesWriter {
    const drops: Map&lt;Address, u256&gt; = calldata.readAddressValueTuple();

    const addresses: Address[] = drops.keys();
    for (let i: i32 = 0; i &lt; addresses.length; i++) {
        const address = addresses[i];
        const amount = drops.get(address);

        this._mint(address, amount);
    }

    const writer: BytesWriter = new BytesWriter(BOOLEAN_BYTE_LENGTH);
    writer.writeBoolean(true);

    return writer;
}
```

### Overriding Methods

You may want to override some of the existing methods in the `DeployableOP_20` base class. For example, you might want to add additional logic when minting tokens.

#### Example: Overriding `_mint` Method

```typescript
protected _mint(to: Address, amount: u256): void {
    super._mint(to, amount);

    // Add custom logic here
    Blockchain.log(`Minted ${amount.toString()} tokens to ${to.toString()}`); // Only work inside OP_NET Uint Test Framework
}
```

### Creating Events

Events in OP_NET allow you to emit signals that external observers can listen to. These are useful for tracking specific actions within your contract, such as token transfers or approvals.

#### Example: Transfer Event

```typescript
class TransferEvent extends NetEvent {
    constructor(from: Address, to: Address, amount: u256) {
        const writer = new BytesWriter(ADDRESS_BYTE_LENGTH * 2 + U256_BYTE_LENGTH);
        writer.writeAddress(from);
        writer.writeAddress(to);
        writer.writeU256(amount);
        super(&#039;Transfer&#039;, writer);
    }
}

class MyToken extends DeployableOP_20 {
    public transfer(to: Address, amount: u256): void {
        const from: Address = Blockchain.sender;
        this._mint(to, amount);
        this.emitEvent(new TransferEvent(from, to, amount));
    }
}
```

### Implementing Additional Security Measures

If you want to add more control over who can call certain methods or add advanced features like pausing token transfers, you can implement access control mechanisms.

#### Example: Only Owner Modifier

```typescript
public mint(to: Address, amount: u256): void {
    this.onlyOwner(Blockchain.sender); // Restrict minting to the contract owner
    this._mint(to, amount);
}
```

---

## Differences Between Solidity and AssemblyScript on OP_NET

### Constructor Behavior

- **Solidity:** The constructor runs only once at the time of contract deployment and is used for initializing contract state.
- **AssemblyScript on OP_NET:** The constructor runs every time the contract is instantiated. Use `onInstantiated()` for initialization that should occur only once.

### State Management

- **Solidity:** Variables declared at the contract level are automatically persistent and are stored in the contract&#039;s state.
- **AssemblyScript on OP_NET:** Persistent state must be managed explicitly using storage classes like `StoredU256`, `StoredBoolean`, and `StoredString`.

### Method Overriding

- **Solidity:** Method selectors are built-in, and overriding them is straightforward.
- **AssemblyScript on OP_NET:** Method selectors are manually defined using functions like `encodeSelector()`, and method overriding is handled in `callMethod`.

### Event Handling

- **Solidity:** Events are declared and emitted using the `emit` keyword.
- **AssemblyScript on OP_NET:** Events are custom classes derived from `NetEvent` and are emitted using the `emitEvent` function.

---

## Advanced Features

### Implementing Additional Custom Logic

The OPNet runtime allows you to implement complex logic in your token contract. For example, you can add functionality such as token freezing, custom transaction fees, or governance mechanisms.

These features are implemented by extending the base `DeployableOP_20` or `OP_20` class and overriding its methods as needed.

---

## Additional Documentation

For more detailed explanations on specific topics related to the OPNet runtime, refer to the following documentation:

- [OPNet Runtime Documentation](https://github.com/btc-vision/btc-runtime/tree/main)
- [Blockchain.md](https://github.com/btc-vision/btc-runtime/blob/main/docs/Blockchain.md)
- [Contract.md](https://github.com/btc-vision/btc-runtime/blob/main/docs/Contract.md)
- [Events.md](https://github.com/btc-vision/btc-runtime/blob/main/docs/Events.md)
- [Pointers.md](https://github.com/btc-vision/btc-runtime/blob/main/docs/Pointers.md)
- [Storage.md](https://github.com/btc-vision/btc-runtime/blob/main/docs/Storage.md)

---

## License

This project is licensed under the MIT License. View the full license [here](LICENSE.md).
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[n8n-io/n8n]]></title>
            <link>https://github.com/n8n-io/n8n</link>
            <guid>https://github.com/n8n-io/n8n</guid>
            <pubDate>Fri, 18 Jul 2025 00:04:45 GMT</pubDate>
            <description><![CDATA[Fair-code workflow automation platform with native AI capabilities. Combine visual building with custom code, self-host or cloud, 400+ integrations.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/n8n-io/n8n">n8n-io/n8n</a></h1>
            <p>Fair-code workflow automation platform with native AI capabilities. Combine visual building with custom code, self-host or cloud, 400+ integrations.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 119,741</p>
            <p>Forks: 36,043</p>
            <p>Stars today: 741 stars today</p>
            <h2>README</h2><pre>![Banner image](https://user-images.githubusercontent.com/10284570/173569848-c624317f-42b1-45a6-ab09-f0ea3c247648.png)

# n8n - Secure Workflow Automation for Technical Teams

n8n is a workflow automation platform that gives technical teams the flexibility of code with the speed of no-code. With 400+ integrations, native AI capabilities, and a fair-code license, n8n lets you build powerful automations while maintaining full control over your data and deployments.

![n8n.io - Screenshot](https://raw.githubusercontent.com/n8n-io/n8n/master/assets/n8n-screenshot-readme.png)

## Key Capabilities

- **Code When You Need It**: Write JavaScript/Python, add npm packages, or use the visual interface
- **AI-Native Platform**: Build AI agent workflows based on LangChain with your own data and models
- **Full Control**: Self-host with our fair-code license or use our [cloud offering](https://app.n8n.cloud/login)
- **Enterprise-Ready**: Advanced permissions, SSO, and air-gapped deployments
- **Active Community**: 400+ integrations and 900+ ready-to-use [templates](https://n8n.io/workflows)

## Quick Start

Try n8n instantly with [npx](https://docs.n8n.io/hosting/installation/npm/) (requires [Node.js](https://nodejs.org/en/)):

```
npx n8n
```

Or deploy with [Docker](https://docs.n8n.io/hosting/installation/docker/):

```
docker volume create n8n_data
docker run -it --rm --name n8n -p 5678:5678 -v n8n_data:/home/node/.n8n docker.n8n.io/n8nio/n8n
```

Access the editor at http://localhost:5678

## Resources

- üìö [Documentation](https://docs.n8n.io)
- üîß [400+ Integrations](https://n8n.io/integrations)
- üí° [Example Workflows](https://n8n.io/workflows)
- ü§ñ [AI &amp; LangChain Guide](https://docs.n8n.io/langchain/)
- üë• [Community Forum](https://community.n8n.io)
- üìñ [Community Tutorials](https://community.n8n.io/c/tutorials/28)

## Support

Need help? Our community forum is the place to get support and connect with other users:
[community.n8n.io](https://community.n8n.io)

## License

n8n is [fair-code](https://faircode.io) distributed under the [Sustainable Use License](https://github.com/n8n-io/n8n/blob/master/LICENSE.md) and [n8n Enterprise License](https://github.com/n8n-io/n8n/blob/master/LICENSE_EE.md).

- **Source Available**: Always visible source code
- **Self-Hostable**: Deploy anywhere
- **Extensible**: Add your own nodes and functionality

[Enterprise licenses](mailto:license@n8n.io) available for additional features and support.

Additional information about the license model can be found in the [docs](https://docs.n8n.io/reference/license/).

## Contributing

Found a bug üêõ or have a feature idea ‚ú®? Check our [Contributing Guide](https://github.com/n8n-io/n8n/blob/master/CONTRIBUTING.md) to get started.

## Join the Team

Want to shape the future of automation? Check out our [job posts](https://n8n.io/careers) and join our team!

## What does n8n mean?

**Short answer:** It means &quot;nodemation&quot; and is pronounced as n-eight-n.

**Long answer:** &quot;I get that question quite often (more often than I expected) so I decided it is probably best to answer it here. While looking for a good name for the project with a free domain I realized very quickly that all the good ones I could think of were already taken. So, in the end, I chose nodemation. &#039;node-&#039; in the sense that it uses a Node-View and that it uses Node.js and &#039;-mation&#039; for &#039;automation&#039; which is what the project is supposed to help with. However, I did not like how long the name was and I could not imagine writing something that long every time in the CLI. That is when I then ended up on &#039;n8n&#039;.&quot; - **Jan Oberhauser, Founder and CEO, n8n.io**
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[nestjs/nest]]></title>
            <link>https://github.com/nestjs/nest</link>
            <guid>https://github.com/nestjs/nest</guid>
            <pubDate>Fri, 18 Jul 2025 00:04:44 GMT</pubDate>
            <description><![CDATA[A progressive Node.js framework for building efficient, scalable, and enterprise-grade server-side applications with TypeScript/JavaScript üöÄ]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/nestjs/nest">nestjs/nest</a></h1>
            <p>A progressive Node.js framework for building efficient, scalable, and enterprise-grade server-side applications with TypeScript/JavaScript üöÄ</p>
            <p>Language: TypeScript</p>
            <p>Stars: 71,817</p>
            <p>Forks: 7,952</p>
            <p>Stars today: 27 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[tldraw/tldraw]]></title>
            <link>https://github.com/tldraw/tldraw</link>
            <guid>https://github.com/tldraw/tldraw</guid>
            <pubDate>Fri, 18 Jul 2025 00:04:43 GMT</pubDate>
            <description><![CDATA[very good whiteboard SDK / infinite canvas SDK]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/tldraw/tldraw">tldraw/tldraw</a></h1>
            <p>very good whiteboard SDK / infinite canvas SDK</p>
            <p>Language: TypeScript</p>
            <p>Stars: 40,761</p>
            <p>Forks: 2,597</p>
            <p>Stars today: 21 stars today</p>
            <h2>README</h2><pre># tldraw

[![Ask DeepWiki](https://deepwiki.com/badge.svg)](https://deepwiki.com/tldraw/tldraw)

Welcome to the public monorepo for [tldraw](https://github.com/tldraw/tldraw). tldraw is a library for creating infinite canvas experiences in React. It&#039;s the software behind the digital whiteboard [tldraw.com](https://tldraw.com).

- Read the docs and learn more at [tldraw.dev](https://tldraw.dev).
- Learn about [our license](https://github.com/tldraw/tldraw#License).

&gt; [Click here](https://tldraw.dev/#pricing) to learn about our license and pricing.

## Installation

```bash
npm i tldraw
```

## Usage

```tsx
import { Tldraw } from &#039;tldraw&#039;
import &#039;tldraw/tldraw.css&#039;

export default function App() {
	return (
		&lt;div style={{ position: &#039;fixed&#039;, inset: 0 }}&gt;
			&lt;Tldraw /&gt;
		&lt;/div&gt;
	)
}
```

Learn more at [tldraw.dev](https://tldraw.dev).

## Local development

The local development server will run our examples app. The basic example will show any changes you&#039;ve made to the codebase.

To run the local development server, first clone this repo.

Enable [corepack](https://nodejs.org/api/corepack.html) to make sure you have the right version of `yarn`:

```bash
npm i -g corepack
```

Install dependencies:

```bash
yarn
```

Start the local development server:

```bash
yarn dev
```

Open the example project at `localhost:5420`.

## License

The tldraw SDK is provided under the [tldraw license](https://github.com/tldraw/tldraw/blob/main/LICENSE.md).

You can use the tldraw SDK in commercial or non-commercial projects so long as you preserve the &quot;Made with tldraw&quot; watermark on the canvas. To remove the watermark, you can purchase a [business license](https://tldraw.dev#pricing). Visit [tldraw.dev](https://tldraw.dev) to learn more.

## Trademarks

Copyright (c) 2024-present tldraw Inc. The tldraw name and logo are trademarks of tldraw. Please see our [trademark guidelines](https://github.com/tldraw/tldraw/blob/main/TRADEMARKS.md) for info on acceptable usage.

## Distributions

You can find tldraw on npm [here](https://www.npmjs.com/package/@tldraw/tldraw?activeTab=versions).

## Contribution

Please see our [contributing guide](https://github.com/tldraw/tldraw/blob/main/CONTRIBUTING.md). Found a bug? Please [submit an issue](https://github.com/tldraw/tldraw/issues/new).

## Community

Have questions, comments or feedback? [Join our discord](https://discord.tldraw.com/?utm_source=github&amp;utm_medium=readme&amp;utm_campaign=sociallink). For the latest news and release notes, visit [tldraw.dev](https://tldraw.dev).

## Contributors

&lt;a href=&quot;https://github.com/tldraw/tldraw/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=tldraw/tldraw&amp;max=400&amp;columns=20&quot; width=&quot;100%&quot;/&gt;
&lt;/a&gt;

## Star History

&lt;a href=&quot;https://star-history.com/#tldraw/tldraw&quot;&gt;
	&lt;picture&gt;
	  &lt;source
	    media=&quot;(prefers-color-scheme: dark)&quot;
	    srcset=&quot;https://api.star-history.com/svg?repos=tldraw/tldraw&amp;type=Date&amp;theme=dark&quot;
	  /&gt;
	  &lt;source
	    media=&quot;(prefers-color-scheme: light)&quot;
	    srcset=&quot;https://api.star-history.com/svg?repos=tldraw/tldraw&amp;type=Date&quot;
	  /&gt;
	  &lt;img src=&quot;https://api.star-history.com/svg?repos=tldraw/tldraw&amp;type=Date&quot; alt=&quot;Star History Chart&quot; width=&quot;100%&quot; /&gt;
	&lt;/picture&gt;
&lt;/a&gt;

## Contact

Find us on Twitter/X at [@tldraw](https://twitter.com/tldraw). You can contact us by email at [hello@tldraw.com](mailto:hello@tldraw.com).
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[xiangechen/chili3d]]></title>
            <link>https://github.com/xiangechen/chili3d</link>
            <guid>https://github.com/xiangechen/chili3d</guid>
            <pubDate>Fri, 18 Jul 2025 00:04:42 GMT</pubDate>
            <description><![CDATA[A web-based 3D CAD application for online model design and editing]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/xiangechen/chili3d">xiangechen/chili3d</a></h1>
            <p>A web-based 3D CAD application for online model design and editing</p>
            <p>Language: TypeScript</p>
            <p>Stars: 3,589</p>
            <p>Forks: 289</p>
            <p>Stars today: 30 stars today</p>
            <h2>README</h2><pre># Chili3D

A web-based 3D CAD application for online model design and editing.

![Screenshot](./screenshots/screenshot.png)

## Overview

[Chili3D](https://chili3d.com) is an [open-source](https://github.com/xiangechen/chili3d), browser-based 3D CAD (Computer-Aided Design) application built with TypeScript. It achieves near-native performance by compiling OpenCascade (OCCT) to WebAssembly and integrating with Three.js, enabling powerful online modeling, editing, and rendering‚Äîall without the need for local installation.

You can access Chili3D online at:

- Official website: [chili3d.com](https://chili3d.com)
- Cloudflare deployment: [chili3d.pages.dev](https://chili3d.pages.dev)

## Features

### Modeling Tools

- **Basic Shapes**: Create boxes, cylinders, cones, spheres, pyramids, and more
- **2D Sketching**: Draw lines, arcs, circles, ellipses, rectangles, polygons, and Bezier curves
- **Advanced Operations**:
    - Boolean operations (union, difference, intersection)
    - Extrusion and revolution
    - Sweeping and lofting
    - Offset surfaces
    - Section creation

### Snapping and Tracking

- **Object Snapping**: Precisely snap to geometric features (points, edges, faces)
- **Workplane Snapping**: Snap to the current workplane for accurate planar operations
- **Axis Tracking**: Create objects along tracked axes for precise alignment
- **Feature Point Detection**: Automatically detect and snap to key geometric features
- **Tracking Visualization**: Visual guides showing tracking lines and reference points

### Editing Tools

- **Modification**: Chamfer, fillet, trim, break, split
- **Transformation**: Move, rotate, mirror
- **Advanced Editing**:
    - Feature removal
    - Sub-shape manipulation
    - Explode compound objects

### Measurement Tools

- Measure angles and lengths
- Calculate the sum of length, area, and volume

### Document Management

- Create, open, and save documents
- Full undo/redo stack with transaction history
- Import/export of industry-standard formats (STEP, IGES, BREP)

### User Interface

- Office-style interface with contextual command organization
- Hierarchical assembly management with flexible grouping capabilities
- Dynamic workplane support
- 3D viewport with camera controls
- Camera position recall

### Localization

- **Multi-Language Interface**: Built-in internationalization (i18n) supporting seamless adaptation to global user bases
- **Current Languages**: Chinese &amp; English; contributions for additional languages are welcome

## Technology Stack

- **Frontend**: TypeScript, Three.js
- **3D Engine**: OpenCascade (via WebAssembly)
- **Build Tools**: Rspack
- **Testing**: Jest

## Change Log

You can view the full change log [here](https://github.com/xiangechen/chili3d/releases).

For Chinese users, you can also browse the [media](https://space.bilibili.com/539380032/lists/3108412?type=season).

## Getting Started

### Prerequisites

- Node.js
- npm

### Installation

1. Clone the repository

    ```bash
    git clone https://github.com/xiangechen/chili3d.git
    cd chili3d
    ```

2. Install dependencies

    ```bash
    npm install
    ```

### Development

Start the development server:

```bash
npm run dev # Launches at http://localhost:8080
```

### Building

Build the application:

```bash
npm run build
```

### Building wasm

if you want to build wasm by yourself, you can use the following commands:

1. Set up WebAssembly dependencies(if you have not installed them yet)

    ```bash
    npm run setup:wasm
    ```

2. Build the WebAssembly module:

    ```bash
    npm run build:wasm
    ```

## Development Status

‚ö†Ô∏è **Early Development Notice**

Chili3D is currently in active alpha development. Key considerations:

- Core APIs may undergo breaking changes
- Essential features are under implementation
- Documentation is being progressively developed

## Contributing

We welcome contributions in the form of code, bug reports, or feedback. Please feel free to submit pull requests or open issues.

## Contact

- **Discussions**: Join our [GitHub discussions](https://github.com/xiangechen/chili3d/discussions) for general chat or questions
- **Issues**: Use [GitHub issues](https://github.com/xiangechen/chili3d/issues) to report public suggestions or bugs
- **Email**: Contact us privately at xiangetg@msn.cn

## License

Distributed under the GNU Affero General Public License v3.0 (AGPL-3.0). For commercial licensing options, contact xiangetg@msn.cn

Full license details: [LICENSE](LICENSE)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[modelcontextprotocol/servers]]></title>
            <link>https://github.com/modelcontextprotocol/servers</link>
            <guid>https://github.com/modelcontextprotocol/servers</guid>
            <pubDate>Fri, 18 Jul 2025 00:04:41 GMT</pubDate>
            <description><![CDATA[Model Context Protocol Servers]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/modelcontextprotocol/servers">modelcontextprotocol/servers</a></h1>
            <p>Model Context Protocol Servers</p>
            <p>Language: TypeScript</p>
            <p>Stars: 60,144</p>
            <p>Forks: 6,987</p>
            <p>Stars today: 247 stars today</p>
            <h2>README</h2><pre># Model Context Protocol servers

This repository is a collection of *reference implementations* for the [Model Context Protocol](https://modelcontextprotocol.io/) (MCP), as well as references
to community built servers and additional resources.

The servers in this repository showcase the versatility and extensibility of MCP, demonstrating how it can be used to give Large Language Models (LLMs) secure, controlled access to tools and data sources.
Typically, each MCP server is implemented with an MCP SDK:
- [C# MCP SDK](https://github.com/modelcontextprotocol/csharp-sdk)
- [Go MCP SDK](https://github.com/modelcontextprotocol/go-sdk)
- [Java MCP SDK](https://github.com/modelcontextprotocol/java-sdk)
- [Kotlin MCP SDK](https://github.com/modelcontextprotocol/kotlin-sdk)
- [Python MCP SDK](https://github.com/modelcontextprotocol/python-sdk)
- [Typescript MCP SDK](https://github.com/modelcontextprotocol/typescript-sdk)

&gt; Note: Lists in this README are maintained in alphabetical order to minimize merge conflicts when adding new items.

## üåü Reference Servers

These servers aim to demonstrate MCP features and the official SDKs.

- **[Everything](src/everything)** - Reference / test server with prompts, resources, and tools
- **[Fetch](src/fetch)** - Web content fetching and conversion for efficient LLM usage
- **[Filesystem](src/filesystem)** - Secure file operations with configurable access controls
- **[Git](src/git)** - Tools to read, search, and manipulate Git repositories
- **[Memory](src/memory)** - Knowledge graph-based persistent memory system
- **[Sequential Thinking](src/sequentialthinking)** - Dynamic and reflective problem-solving through thought sequences
- **[Time](src/time)** - Time and timezone conversion capabilities

### Archived

The following reference servers are now archived and can be found at [servers-archived](https://github.com/modelcontextprotocol/servers-archived).

- **[AWS KB Retrieval](https://github.com/modelcontextprotocol/servers-archived/tree/main/src/aws-kb-retrieval-server)** - Retrieval from AWS Knowledge Base using Bedrock Agent Runtime
- **[Brave Search](https://github.com/modelcontextprotocol/servers-archived/tree/main/src/brave-search)** - Web and local search using Brave&#039;s Search API
- **[EverArt](https://github.com/modelcontextprotocol/servers-archived/tree/main/src/everart)** - AI image generation using various models
- **[GitHub](https://github.com/modelcontextprotocol/servers-archived/tree/main/src/github)** - Repository management, file operations, and GitHub API integration
- **[GitLab](https://github.com/modelcontextprotocol/servers-archived/tree/main/src/gitlab)** - GitLab API, enabling project management
- **[Google Drive](https://github.com/modelcontextprotocol/servers-archived/tree/main/src/gdrive)** - File access and search capabilities for Google Drive
- **[Google Maps](https://github.com/modelcontextprotocol/servers-archived/tree/main/src/google-maps)** - Location services, directions, and place details
- **[PostgreSQL](https://github.com/modelcontextprotocol/servers-archived/tree/main/src/postgres)** - Read-only database access with schema inspection
- **[Puppeteer](https://github.com/modelcontextprotocol/servers-archived/tree/main/src/puppeteer)** - Browser automation and web scraping
- **[Redis](https://github.com/modelcontextprotocol/servers-archived/tree/main/src/redis)** - Interact with Redis key-value stores
- **[Sentry](https://github.com/modelcontextprotocol/servers-archived/tree/main/src/sentry)** - Retrieving and analyzing issues from Sentry.io
- **[Slack](https://github.com/modelcontextprotocol/servers-archived/tree/main/src/slack)** - Channel management and messaging capabilities. Now maintained by [Zencoder](https://github.com/zencoderai/slack-mcp-server)
- **[SQLite](https://github.com/modelcontextprotocol/servers-archived/tree/main/src/sqlite)** - Database interaction and business intelligence capabilities

## ü§ù Third-Party Servers

### üéñÔ∏è Official Integrations

Official integrations are maintained by companies building production ready MCP servers for their platforms.

- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://www.21st.dev/favicon.ico&quot; alt=&quot;21st.dev Logo&quot; /&gt; **[21st.dev Magic](https://github.com/21st-dev/magic-mcp)** - Create crafted UI components inspired by the best 21st.dev design engineers.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://framerusercontent.com/images/LpSK1tSZweomrAHOMAj9Gea96lA.svg&quot; alt=&quot;Paragon Logo&quot; /&gt; **[ActionKit by Paragon](https://github.com/useparagon/paragon-mcp)** - Connect to 130+ SaaS integrations (e.g. Slack, Salesforce, Gmail) with Paragon‚Äôs [ActionKit](https://www.useparagon.com/actionkit) API.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://invoxx-public-bucket.s3.eu-central-1.amazonaws.com/frontend-resources/adfin-logo-small.svg&quot; alt=&quot;Adfin Logo&quot; /&gt; **[Adfin](https://github.com/Adfin-Engineering/mcp-server-adfin)** - The only platform you need to get paid - all payments in one place, invoicing and accounting reconciliations with [Adfin](https://www.adfin.com/).
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://www.agentql.com/favicon/favicon.png&quot; alt=&quot;AgentQL Logo&quot; /&gt; **[AgentQL](https://github.com/tinyfish-io/agentql-mcp)** - Enable AI agents to get structured data from unstructured web with [AgentQL](https://www.agentql.com/).
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://agentrpc.com/favicon.ico&quot; alt=&quot;AgentRPC Logo&quot; /&gt; **[AgentRPC](https://github.com/agentrpc/agentrpc)** - Connect to any function, any language, across network boundaries using [AgentRPC](https://www.agentrpc.com/).
- **[Agentset](https://github.com/agentset-ai/mcp-server)** - RAG for your knowledge base connected to [Agentset](https://agentset.ai).
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://aiven.io/favicon.ico&quot; alt=&quot;Aiven Logo&quot; /&gt; **[Aiven](https://github.com/Aiven-Open/mcp-aiven)** - Navigate your [Aiven projects](https://go.aiven.io/mcp-server) and interact with the PostgreSQL¬Æ, Apache Kafka¬Æ, ClickHouse¬Æ and OpenSearch¬Æ services
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://www.alation.com/resource-center/download/7p3vnbbznfiw/34FMtBTex5ppvs2hNYa9Fc/c877c37e88e5339878658697c46d2d58/Alation-Logo-Bug-Primary.svg&quot; alt=&quot;Alation Logo&quot; /&gt; **[Alation](https://github.com/Alation/alation-ai-agent-sdk)** - Unlock the power of the enterprise Data Catalog by harnessing tools provided by the Alation MCP server.
- **[Algolia](https://github.com/algolia/mcp)** - Use AI agents to provision, configure, and query your [Algolia](https://algolia.com) search indices.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://img.alicdn.com/imgextra/i4/O1CN01epkXwH1WLAXkZfV6N_!!6000000002771-2-tps-200-200.png&quot; alt=&quot;Alibaba Cloud AnalyticDB for MySQL Logo&quot; /&gt; **[Alibaba Cloud AnalyticDB for MySQL](https://github.com/aliyun/alibabacloud-adb-mysql-mcp-server)** - Connect to a [AnalyticDB for MySQL](https://www.alibabacloud.com/en/product/analyticdb-for-mysql) cluster for getting database or table metadata, querying and analyzing data.It will be supported to add the openapi for cluster operation in the future.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://github.com/aliyun/alibabacloud-adbpg-mcp-server/blob/master/images/AnalyticDB.png&quot; alt=&quot;Alibaba Cloud AnalyticDB for PostgreSQL Logo&quot; /&gt; **[Alibaba Cloud AnalyticDB for PostgreSQL](https://github.com/aliyun/alibabacloud-adbpg-mcp-server)** - An MCP server to connect to [AnalyticDB for PostgreSQL](https://github.com/aliyun/alibabacloud-adbpg-mcp-server) instances, query and analyze data.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://img.alicdn.com/imgextra/i3/O1CN0101UWWF1UYn3rAe3HU_!!6000000002530-2-tps-32-32.png&quot; alt=&quot;DataWorks Logo&quot; /&gt; **[Alibaba Cloud DataWorks](https://github.com/aliyun/alibabacloud-dataworks-mcp-server)** - A Model Context Protocol (MCP) server that provides tools for AI, allowing it to interact with the [DataWorks](https://www.alibabacloud.com/help/en/dataworks/) Open API through a standardized interface. This implementation is based on the Alibaba Cloud Open API and enables AI agents to perform cloud resources operations seamlessly.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://opensearch-shanghai.oss-cn-shanghai.aliyuncs.com/ouhuang/aliyun-icon.png&quot; alt=&quot;Alibaba Cloud OpenSearch Logo&quot; /&gt; **[Alibaba Cloud OpenSearch](https://github.com/aliyun/alibabacloud-opensearch-mcp-server)** - This MCP server equips AI Agents with tools to interact with [OpenSearch](https://help.aliyun.com/zh/open-search/?spm=5176.7946605.J_5253785160.6.28098651AaYZXC) through a standardized and extensible interface.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://github.com/aliyun/alibaba-cloud-ops-mcp-server/blob/master/image/alibaba-cloud.png&quot; alt=&quot;Alibaba Cloud OPS Logo&quot; /&gt; **[Alibaba Cloud OPS](https://github.com/aliyun/alibaba-cloud-ops-mcp-server)** - Manage the lifecycle of your Alibaba Cloud resources with [CloudOps Orchestration Service](https://www.alibabacloud.com/en/product/oos) and Alibaba Cloud OpenAPI.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://github.com/aliyun/alibabacloud-rds-openapi-mcp-server/blob/main/assets/alibabacloudrds.png&quot; alt=&quot;Alibaba Cloud RDS MySQL Logo&quot; /&gt; **[Alibaba Cloud RDS](https://github.com/aliyun/alibabacloud-rds-openapi-mcp-server)** - An MCP server designed to interact with the Alibaba Cloud RDS OpenAPI, enabling programmatic management of RDS resources via an LLM.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://cdn.allvoicelab.com/resources/workbench/dist/icon-dark.ico&quot; alt=&quot;AllVoiceLab Logo&quot; /&gt; **[AllVoiceLab](https://www.allvoicelab.com/mcp)** - An AI voice toolkit with TTS, voice cloning, and video translation, now available as an MCP server for smarter agent integration.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://files.alpaca.markets/webassets/favicon-32x32.png&quot; alt=&quot;Alpaca Logo&quot; /&gt; **[Alpaca](https://github.com/alpacahq/alpaca-mcp-server)** ‚Äì Alpaca&#039;s MCP server lets you trade stocks and options, analyze market data, and build strategies through [Alpaca&#039;s Trading API](https://alpaca.markets/)
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://www.alphavantage.co/logo.png/&quot; alt=&quot;AlphaVantage Logo&quot; /&gt; **[AlphaVantage](https://github.com/calvernaz/alphavantage)** - Connect to 100+ APIs for financial market data, including stock prices, fundamentals, and more from [AlphaVantage](https://www.alphavantage.co)
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://doris.apache.org/images/favicon.ico&quot; alt=&quot;Apache Doris Logo&quot; /&gt; **[Apache Doris](https://github.com/apache/doris-mcp-server)** - MCP Server For [Apache Doris](https://doris.apache.org/), an MPP-based real-time data warehouse.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://iotdb.apache.org/img/logo.svg&quot; alt=&quot;Apache IoTDB Logo&quot; /&gt; **[Apache IoTDB](https://github.com/apache/iotdb-mcp-server)** - MCP Server for [Apache IoTDB](https://github.com/apache/iotdb) database and its tools
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://apify.com/favicon.ico&quot; alt=&quot;Apify Logo&quot; /&gt; **[Apify](https://github.com/apify/actors-mcp-server)** - [Actors MCP Server](https://apify.com/apify/actors-mcp-server): Use 3,000+ pre-built cloud tools to extract data from websites, e-commerce, social media, search engines, maps, and more
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://2052727.fs1.hubspotusercontent-na1.net/hubfs/2052727/cropped-cropped-apimaticio-favicon-1-32x32.png&quot; alt=&quot;APIMatic Logo&quot; /&gt; **[APIMatic MCP](https://github.com/apimatic/apimatic-validator-mcp)** - APIMatic MCP Server is used to validate OpenAPI specifications using [APIMatic](https://www.apimatic.io/). The server processes OpenAPI files and returns validation summaries by leveraging APIMatic&#039;s API.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://apollo-server-landing-page.cdn.apollographql.com/_latest/assets/favicon.png&quot; alt=&quot;Apollo Graph Logo&quot; /&gt; **[Apollo MCP Server](https://github.com/apollographql/apollo-mcp-server/)** - Connect your GraphQL APIs to AI agents
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://developer.aqara.com/favicon.ico&quot; alt=&quot;Aqara Logo&quot; /&gt; **[Aqara MCP Server](https://github.com/aqara/aqara-mcp-server/)** - Control  [Aqara](https://www.aqara.com/) smart home devices, query status, execute scenes, and much more using natural language.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://media.licdn.com/dms/image/v2/C4D0BAQEeD7Dxbpadkw/company-logo_200_200/company-logo_200_200/0/1644692667545/archbee_logo?e=2147483647&amp;v=beta&amp;t=lTi9GRIoqzG6jN3kJC26uZWh0q3uiQelsH6mGoq_Wfw&quot; alt=&quot;Archbee Logo&quot; /&gt; **[Archbee](https://www.npmjs.com/package/@archbee/mcp)** - Write and publish documentation that becomes the trusted source for instant answers with AI. Stop cobbling tools and use [Archbee](https://www.archbee.com/) ‚Äî the first complete documentation platform.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://phoenix.arize.com/wp-content/uploads/2023/04/cropped-Favicon-32x32.png&quot; alt=&quot;Arize-Phoenix Logo&quot; /&gt; **[Arize Phoenix](https://github.com/Arize-ai/phoenix/tree/main/js/packages/phoenix-mcp)** - Inspect traces, manage prompts, curate datasets, and run experiments using [Arize Phoenix](https://github.com/Arize-ai/phoenix), an open-source AI and LLM observability tool.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://731523176-files.gitbook.io/~/files/v0/b/gitbook-x-prod.appspot.com/o/spaces%2FaVUBXRZbpAgtjYf5HsvO%2Fuploads%2FaRRrVVocXCTr6GkepfCx%2Flogo_color.svg?alt=media&amp;token=3ba24089-0ab2-421f-a9d9-41f2f94f954a&quot; alt=&quot;Armor Logo&quot; /&gt; **[Armor Crypto MCP](https://github.com/armorwallet/armor-crypto-mcp)** - MCP to interface with multiple blockchains, staking, DeFi, swap, bridging, wallet management, DCA, Limit Orders, Coin Lookup, Tracking and more.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://console.asgardeo.io/app/libs/themes/wso2is/assets/images/branding/favicon.ico&quot; alt=&quot;Asgardeo Logo&quot; /&gt; **[Asgardeo](https://github.com/asgardeo/asgardeo-mcp-server)** - MCP server to interact with your [Asgardeo](https://wso2.com/asgardeo) organization through LLM tools.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://www.datastax.com/favicon-32x32.png&quot; alt=&quot;DataStax logo&quot; /&gt; **[Astra DB](https://github.com/datastax/astra-db-mcp)** - Comprehensive tools for managing collections and documents in a [DataStax Astra DB](https://www.datastax.com/products/datastax-astra) NoSQL database with a full range of operations such as create, update, delete, find, and associated bulk actions.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://cdn.prod.website-files.com/66598898fd13d51606c3215d/66ccbfef13bd8bc19d587578_favicon-32x32.png&quot; alt=&quot;Atla Logo&quot; /&gt; **[Atla](https://github.com/atla-ai/atla-mcp-server)** - Enable AI agents to interact with the [Atla API](https://docs.atla-ai.com/) for state-of-the-art LLMJ evaluation.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://assets.atlan.com/assets/atlan-a-logo-blue-background.png&quot; alt=&quot;Atlan Logo&quot; /&gt; **[Atlan](https://github.com/atlanhq/agent-toolkit/tree/main/modelcontextprotocol)** - The Atlan Model Context Protocol server allows you to interact with the [Atlan](https://www.atlan.com/) services through multiple tools.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://www.atlassian.com/favicon.ico&quot; alt=&quot;Atlassian Logo&quot; /&gt; **[Atlassian](https://www.atlassian.com/platform/remote-mcp-server)** - Securely interact with Jira work items and Confluence pages, and search across both.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://res.oafimg.cn/-/737b3b3ffed9b19e/logo.png&quot; alt=&quot;AtomGit Logo&quot; /&gt; **[AtomGit](https://atomgit.com/atomgit-open-source-ecosystem/atomgit-mcp-server)** - Official AtomGit server for integration with repository management, PRs, issues, branches, labels, and more.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://resources.audiense.com/hubfs/favicon-1.png&quot; alt=&quot;Audiense Logo&quot; /&gt; **[Audiense Insights](https://github.com/AudienseCo/mcp-audiense-insights)** - Marketing insights and audience analysis from [Audiense](https://www.audiense.com/products/audiense-insights) reports, covering demographic, cultural, influencer, and content engagement analysis.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://cdn.auth0.com/website/website/favicons/auth0-favicon.svg&quot; alt=&quot;Auth0 Logo&quot; /&gt; **[Auth0](https://github.com/auth0/auth0-mcp-server)** - MCP server for interacting with your Auth0 tenant, supporting creating and modifying actions, applications, forms, logs, resource servers, and more.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://firstorder.ai/favicon_auth.ico&quot; alt=&quot;Authenticator App Logo&quot; /&gt; **[Authenticator App ¬∑ 2FA](https://github.com/firstorderai/authenticator_mcp)** - A secure MCP (Model Context Protocol) server that enables AI agents to interact with the Authenticator App.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://a0.awsstatic.com/libra-css/images/site/fav/favicon.ico&quot; alt=&quot;AWS Logo&quot; /&gt; **[AWS](https://github.com/awslabs/mcp)** -  Specialized MCP servers that bring AWS best practices directly to your development workflow.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://axiom.co/favicon.ico&quot; alt=&quot;Axiom Logo&quot; /&gt; **[Axiom](https://github.com/axiomhq/mcp-server-axiom)** - Query and analyze your Axiom logs, traces, and all other event data in natural language
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://cdn-dynmedia-1.microsoft.com/is/content/microsoftcorp/acom_social_icon_azure&quot; alt=&quot;Microsoft Azure Logo&quot; /&gt; **[Azure](https://github.com/Azure/azure-mcp)** - The Azure MCP Server gives MCP Clients access to key Azure services and tools like Azure Storage, Cosmos DB, the Azure CLI, and more.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://mapopen-website-wiki.cdn.bcebos.com/LOGO/lbsyunlogo_icon.ico&quot; alt=&quot;Baidu Map Logo&quot; /&gt; **[Baidu Map](https://github.com/baidu-maps/mcp)** - [Baidu Map MCP Server](https://lbsyun.baidu.com/faq/api?title=mcpserver/base) provides tools for AI agents to interact with Baidu Maps APIs, enabling location-based services and geospatial data analysis.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://www.bankless.com/favicon.ico&quot; alt=&quot;Bankless Logo&quot; /&gt; **[Bankless Onchain](https://github.com/bankless/onchain-mcp)** - Query Onchain data, like ERC20 tokens, transaction history, smart contract state.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://bicscan.io/favicon.png&quot; alt=&quot;BICScan Logo&quot; /&gt; **[BICScan](https://github.com/ahnlabio/bicscan-mcp)** - Risk score / asset holdings of EVM blockchain address (EOA, CA, ENS) and even domain names.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://web-cdn.bitrise.io/favicon.ico&quot; alt=&quot;Bitrise Logo&quot; /&gt; **[Bitrise](https://github.com/bitrise-io/bitrise-mcp)** - Chat with your builds, CI, and [more](https://bitrise.io/blog/post/chat-with-your-builds-ci-and-more-introducing-the-bitrise-mcp-server).
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://boldsign.com/favicon.ico&quot; alt=&quot;BoldSign Logo&quot; /&gt; **[BoldSign](https://github.com/boldsign/boldsign-mcp)** - Search, request, and manage e-signature contracts effortlessly with [BoldSign](https://boldsign.com/).
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://boost.space/favicon.ico&quot; alt=&quot;Boost.space Logo&quot; /&gt; **[Boost.space](https://github.com/boostspace/boostspace-mcp-server)** - An MCP server integrating with [Boost.space](https://boost.space) for centralized, automated business data from 2000+ sources.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://www.box.com/favicon.ico&quot; alt=&quot;Box Logo&quot; /&gt; **[Box](https://github.com/box-community/mcp-server-box)** - Interact with the Intelligent Content Management platform through Box AI.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://www.brightdata.com/favicon.ico&quot; alt=&quot;BrightData Logo&quot; /&gt; **[BrightData](https://github.com/luminati-io/brightdata-mcp)** - Discover, extract, and interact with the web - one interface powering automated access across the public internet.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://browserbase.com/favicon.ico&quot; alt=&quot;Browserbase Logo&quot; /&gt; **[Browserbase](https://github.com/browserbase/mcp-server-browserbase)** - Automate browser interactions in the cloud (e.g. web navigation, data extraction, form filling, and more)
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://browserstack.wpenginepowered.com/wp-content/themes/browserstack/img/favicons/favicon.ico&quot; alt=&quot;BrowserStack Logo&quot; /&gt; **[BrowserStack]

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[langchain-ai/open-agent-platform]]></title>
            <link>https://github.com/langchain-ai/open-agent-platform</link>
            <guid>https://github.com/langchain-ai/open-agent-platform</guid>
            <pubDate>Fri, 18 Jul 2025 00:04:40 GMT</pubDate>
            <description><![CDATA[An open-source, no-code agent building platform.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/langchain-ai/open-agent-platform">langchain-ai/open-agent-platform</a></h1>
            <p>An open-source, no-code agent building platform.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 1,405</p>
            <p>Forks: 281</p>
            <p>Stars today: 28 stars today</p>
            <h2>README</h2><pre># Open Agent Platform

Open Agent Platform is a no-code agent building platform. These agents can be connected to a wide range of tools, RAG servers, and even other agents through an Agent Supervisor!

&lt;video src=&quot;https://github.com/user-attachments/assets/bc91304b-e704-41d7-a0cd-9806d37640c0.mp4&quot; controls=&quot;controls&quot;&gt;&lt;/video&gt;

## Overview

Open Agent Platform provides a modern, web-based interface for creating, managing, and interacting with LangGraph agents. It&#039;s designed with simplicity in mind, making it accessible to users without technical expertise, while still offering advanced capabilities for developers.

## Key Features

- **Agent Management**: Build, configure, and interact with agents through an intuitive interface.
- **RAG Integration**: First-class support for Retrieval Augmented Generation with [LangConnect](https://github.com/langchain-ai/langconnect).
- **MCP Tools**: Connect your agents to external tools through MCP servers.
- **Agent Supervision**: Orchestrate multiple agents working together through an Agent Supervisor.
- **Authentication**: Built-in authentication and access control.
- **Configurable Agents**: Easily define how users can configure your agents through a rich UI.

## Documentation

For detailed setup instructions, guides, and API references, please visit our **[full documentation site](https://docs.oap.langchain.com)**.

## Getting Started

To quickly get started with Open Agent Platform, check out the [Quickstart Guide](https://docs.oap.langchain.com/quickstart) in our documentation.

## Community and Support

- **GitHub Issues**: Report bugs or request features [here](https://github.com/langchain-ai/open-agent-platform/issues).
- **Discussions**: Join the conversation on our [GitHub Discussions page](https://github.com/langchain-ai/open-agent-platform/discussions).

We encourage you to explore the platform, build your own agents, and contribute to the Open Agent Platform community!

# Concepts/FAQ

## Concepts

### Agents

An agent is a custom configuration on-top of an existing LangGraph graph. This is the same concept as an `assistant`, in the LangGraph API.

## FAQ

### Do I need a backend server?

OAP does not require a standalone backend server to be running in order for the web app to work. As long as you&#039;ve added deployments from LangGraph Platform to your instance, it should work as expected!

However, if you want to use the RAG features, you will need to have the LangConnect server running on its own. This is because the LangConnect RAG server is intended to be hosted independently from your LangGraph deployments. See the [LangConnect docs](https://github.com/langchain-ai/langconnect/blob/main/README.md) for more information.

### How can I build my own agents?

Yes! See the [Building Your Own Agents](https://docs.oap.langchain.com/custom-agents/overview#building-your-own-agents) section for more information.

### How can I use non-supabase auth?

Yes! It requires some modifications to be made to the code, but we&#039;ve implemented authentication in a way which makes it easy to swap out with any other authentication provider. 

### How can I use non-langgraph agents?

No. All agents you intend to use with OAP must be LangGraph agents, deployed on LangGraph Platform.

### Why is my agent&#039;s config is only showing string inputs, and not custom fields?

First, ensure you&#039;re using the latest version of LangGraph. If running locally, make sure you&#039;re using the latest version of the LangGraph API, and CLI packages. If deploying, make sure you&#039;ve published a revision after 05/14/2025. Then, check that you have the `x_oap_ui_config` metadata set on your configurable fields. If you have, check that your configurable object is defined using LangGraph Zod (if using TypeScript), as this is required for the Open Agent Platform to recognize &amp; render your UI fields.

If it&#039;s still not working, confirm your `x_oap_ui_config` metadata has the proper fields set.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[Lissy93/web-check]]></title>
            <link>https://github.com/Lissy93/web-check</link>
            <guid>https://github.com/Lissy93/web-check</guid>
            <pubDate>Fri, 18 Jul 2025 00:04:39 GMT</pubDate>
            <description><![CDATA[üïµÔ∏è‚Äç‚ôÇÔ∏è All-in-one OSINT tool for analysing any website]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/Lissy93/web-check">Lissy93/web-check</a></h1>
            <p>üïµÔ∏è‚Äç‚ôÇÔ∏è All-in-one OSINT tool for analysing any website</p>
            <p>Language: TypeScript</p>
            <p>Stars: 25,557</p>
            <p>Forks: 2,027</p>
            <p>Stars today: 16 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
    </channel>
</rss>