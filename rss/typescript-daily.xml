<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for typescript - TypeScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for typescript.</description>
        <lastBuildDate>Wed, 20 Aug 2025 00:04:42 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[immich-app/immich]]></title>
            <link>https://github.com/immich-app/immich</link>
            <guid>https://github.com/immich-app/immich</guid>
            <pubDate>Wed, 20 Aug 2025 00:04:42 GMT</pubDate>
            <description><![CDATA[High performance self-hosted photo and video management solution.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/immich-app/immich">immich-app/immich</a></h1>
            <p>High performance self-hosted photo and video management solution.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 73,601</p>
            <p>Forks: 3,881</p>
            <p>Stars today: 348 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt; 
  &lt;br/&gt;
  &lt;a href=&quot;https://opensource.org/license/agpl-v3&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/License-AGPL_v3-blue.svg?color=3F51B5&amp;style=for-the-badge&amp;label=License&amp;logoColor=000000&amp;labelColor=ececec&quot; alt=&quot;License: AGPLv3&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://discord.immich.app&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/discord/979116623879368755.svg?label=Discord&amp;logo=Discord&amp;style=for-the-badge&amp;logoColor=000000&amp;labelColor=ececec&quot; alt=&quot;Discord&quot;/&gt;
  &lt;/a&gt;
  &lt;br/&gt;
  &lt;br/&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;img src=&quot;design/immich-logo-stacked-light.svg&quot; width=&quot;300&quot; title=&quot;Login With Custom URL&quot;&gt;
&lt;/p&gt;
&lt;h3 align=&quot;center&quot;&gt;High performance self-hosted photo and video management solution&lt;/h3&gt;
&lt;br/&gt;
&lt;a href=&quot;https://immich.app&quot;&gt;
&lt;img src=&quot;design/immich-screenshots.png&quot; title=&quot;Main Screenshot&quot;&gt;
&lt;/a&gt;
&lt;br/&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;readme_i18n/README_ca_ES.md&quot;&gt;Català&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_es_ES.md&quot;&gt;Español&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_fr_FR.md&quot;&gt;Français&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_it_IT.md&quot;&gt;Italiano&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_ja_JP.md&quot;&gt;日本語&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_ko_KR.md&quot;&gt;한국어&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_de_DE.md&quot;&gt;Deutsch&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_nl_NL.md&quot;&gt;Nederlands&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_tr_TR.md&quot;&gt;Türkçe&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_zh_CN.md&quot;&gt;中文&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_uk_UA.md&quot;&gt;Українська&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_ru_RU.md&quot;&gt;Русский&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_pt_BR.md&quot;&gt;Português Brasileiro&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_sv_SE.md&quot;&gt;Svenska&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_ar_JO.md&quot;&gt;العربية&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_vi_VN.md&quot;&gt;Tiếng Việt&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_th_TH.md&quot;&gt;ภาษาไทย&lt;/a&gt;
&lt;/p&gt;

## Disclaimer

- ⚠️ The project is under **very active** development.
- ⚠️ Expect bugs and breaking changes.
- ⚠️ **Do not use the app as the only way to store your photos and videos.**
- ⚠️ Always follow [3-2-1](https://www.backblaze.com/blog/the-3-2-1-backup-strategy/) backup plan for your precious photos and videos!

&gt; [!NOTE]
&gt; You can find the main documentation, including installation guides, at https://immich.app/.

## Links

- [Documentation](https://immich.app/docs)
- [About](https://immich.app/docs/overview/introduction)
- [Installation](https://immich.app/docs/install/requirements)
- [Roadmap](https://immich.app/roadmap)
- [Demo](#demo)
- [Features](#features)
- [Translations](https://immich.app/docs/developer/translations)
- [Contributing](https://immich.app/docs/overview/support-the-project)

## Demo

Access the demo [here](https://demo.immich.app). For the mobile app, you can use `https://demo.immich.app` for the `Server Endpoint URL`.

### Login credentials

| Email           | Password |
| --------------- | -------- |
| demo@immich.app | demo     |

## Features

| Features                                     | Mobile | Web |
| :------------------------------------------- | ------ | --- |
| Upload and view videos and photos            | Yes    | Yes |
| Auto backup when the app is opened           | Yes    | N/A |
| Prevent duplication of assets                | Yes    | Yes |
| Selective album(s) for backup                | Yes    | N/A |
| Download photos and videos to local device   | Yes    | Yes |
| Multi-user support                           | Yes    | Yes |
| Album and Shared albums                      | Yes    | Yes |
| Scrubbable/draggable scrollbar               | Yes    | Yes |
| Support raw formats                          | Yes    | Yes |
| Metadata view (EXIF, map)                    | Yes    | Yes |
| Search by metadata, objects, faces, and CLIP | Yes    | Yes |
| Administrative functions (user management)   | No     | Yes |
| Background backup                            | Yes    | N/A |
| Virtual scroll                               | Yes    | Yes |
| OAuth support                                | Yes    | Yes |
| API Keys                                     | N/A    | Yes |
| LivePhoto/MotionPhoto backup and playback    | Yes    | Yes |
| Support 360 degree image display             | No     | Yes |
| User-defined storage structure               | Yes    | Yes |
| Public Sharing                               | Yes    | Yes |
| Archive and Favorites                        | Yes    | Yes |
| Global Map                                   | Yes    | Yes |
| Partner Sharing                              | Yes    | Yes |
| Facial recognition and clustering            | Yes    | Yes |
| Memories (x years ago)                       | Yes    | Yes |
| Offline support                              | Yes    | No  |
| Read-only gallery                            | Yes    | Yes |
| Stacked Photos                               | Yes    | Yes |
| Tags                                         | No     | Yes |
| Folder View                                  | Yes    | Yes |

## Translations

Read more about translations [here](https://immich.app/docs/developer/translations).

&lt;a href=&quot;https://hosted.weblate.org/engage/immich/&quot;&gt;
&lt;img src=&quot;https://hosted.weblate.org/widget/immich/immich/multi-auto.svg&quot; alt=&quot;Translation status&quot; /&gt;
&lt;/a&gt;

## Repository activity

![Activities](https://repobeats.axiom.co/api/embed/9e86d9dc3ddd137161f2f6d2e758d7863b1789cb.svg &quot;Repobeats analytics image&quot;)

## Star history

&lt;a href=&quot;https://star-history.com/#immich-app/immich&amp;Date&quot;&gt;
 &lt;picture&gt;
   &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://api.star-history.com/svg?repos=immich-app/immich&amp;type=Date&amp;theme=dark&quot; /&gt;
   &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://api.star-history.com/svg?repos=immich-app/immich&amp;type=Date&quot; /&gt;
   &lt;img alt=&quot;Star History Chart&quot; src=&quot;https://api.star-history.com/svg?repos=immich-app/immich&amp;type=Date&quot; width=&quot;100%&quot; /&gt;
 &lt;/picture&gt;
&lt;/a&gt;

## Contributors

&lt;a href=&quot;https://github.com/alextran1502/immich/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=immich-app/immich&quot; width=&quot;100%&quot;/&gt;
&lt;/a&gt;
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[koush/scrypted]]></title>
            <link>https://github.com/koush/scrypted</link>
            <guid>https://github.com/koush/scrypted</guid>
            <pubDate>Wed, 20 Aug 2025 00:04:41 GMT</pubDate>
            <description><![CDATA[Scrypted is a high performance video integration and automation platform]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/koush/scrypted">koush/scrypted</a></h1>
            <p>Scrypted is a high performance video integration and automation platform</p>
            <p>Language: TypeScript</p>
            <p>Stars: 5,094</p>
            <p>Forks: 296</p>
            <p>Stars today: 21 stars today</p>
            <h2>README</h2><pre># Scrypted

Scrypted is a high performance home video integration platform and NVR with smart detections. [Instant, low latency, streaming](https://streamable.com/xbxn7z) to HomeKit, Google Home, and Alexa. Supports most cameras. [Learn more](https://docs.scrypted.app).

&lt;img src=&quot;https://github.com/koush/scrypted/assets/73924/57e1d556-cd3d-4448-81f9-a6c51b6513de&quot;&gt;

## Installation and Documentation

Installation and camera onboarding instructions can be found in the [docs](https://docs.scrypted.app).

## Community

Scrypted has active communities on [Discord](https://discord.gg/DcFzmBHYGq), [Reddit](https://reddit.com/r/scrypted), and [Github](https://github.com/koush/scrypted). Check them out if you have questions!

## Development

## Debug Scrypted Plugins in VS Code

```sh
# this is an example for homekit.
# check out the code
git clone https://github.com/koush/scrypted
cd scrypted
# get the dependencies for the server and various plugins
./npm-install.sh
# open the homekit project in VS Code
code plugins/homekit
```

You can now launch (using the Start Debugging play button) the HomeKit Plugin in VS Code. Please be aware that you do *not* need to restart the Scrypted Server if you make changes to a plugin. Edit the plugin, launch, and the updated plugin will deploy on the running server.

If you do not want to set up VS Code, you can also run build and install the plugin directly from the command line:

```sh
# currently in the plugins/homekit directory.
npm run build &amp;&amp; npm run scrypted-deploy 127.0.0.1
```

### Plugin SDK Documentation

Want to write your own plugin? Full documentation is available here: https://developer.scrypted.app


## Debug the Scrypted Server in VS Code

Debugging the server should not be necessary, as the server only provides the hosting and RPC mechanism for plugins. The following is for reference purpose. Most development can be done by debugging the relevant plugin.

```sh
# check out the code
git clone https://github.com/koush/scrypted
cd scrypted
# get the dependencies for the server and various plugins
./npm-install.sh
# open server project in VS Code
code server
```

You can now launch the Scrypted Server in VS Code.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[Dokploy/dokploy]]></title>
            <link>https://github.com/Dokploy/dokploy</link>
            <guid>https://github.com/Dokploy/dokploy</guid>
            <pubDate>Wed, 20 Aug 2025 00:04:40 GMT</pubDate>
            <description><![CDATA[Open Source Alternative to Vercel, Netlify and Heroku.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/Dokploy/dokploy">Dokploy/dokploy</a></h1>
            <p>Open Source Alternative to Vercel, Netlify and Heroku.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 23,294</p>
            <p>Forks: 1,294</p>
            <p>Stars today: 41 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://dokploy.com&quot;&gt;
    &lt;img src=&quot;.github/sponsors/logo.png&quot; alt=&quot;Dokploy - Open Source Alternative to Vercel, Heroku and Netlify.&quot; width=&quot;100%&quot;  /&gt;
  &lt;/a&gt;
  &lt;/br&gt;
  &lt;/br&gt;
  &lt;p&gt;Join us on Discord for help, feedback, and discussions!&lt;/p&gt;
  &lt;a href=&quot;https://discord.gg/2tBnJ3jDJc&quot;&gt;
    &lt;img src=&quot;https://discordapp.com/api/guilds/1234073262418563112/widget.png?style=banner2&quot; alt=&quot;Discord Shield&quot;/&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;br /&gt;

Dokploy is a free, self-hostable Platform as a Service (PaaS) that simplifies the deployment and management of applications and databases.

## ✨ Features

Dokploy includes multiple features to make your life easier.

- **Applications**: Deploy any type of application (Node.js, PHP, Python, Go, Ruby, etc.).
- **Databases**: Create and manage databases with support for MySQL, PostgreSQL, MongoDB, MariaDB, and Redis.
- **Backups**: Automate backups for databases to an external storage destination.
- **Docker Compose**: Native support for Docker Compose to manage complex applications.
- **Multi Node**: Scale applications to multiple nodes using Docker Swarm to manage the cluster.
- **Templates**: Deploy open-source templates (Plausible, Pocketbase, Calcom, etc.) with a single click.
- **Traefik Integration**: Automatically integrates with Traefik for routing and load balancing.
- **Real-time Monitoring**: Monitor CPU, memory, storage, and network usage for every resource.
- **Docker Management**: Easily deploy and manage Docker containers.
- **CLI/API**: Manage your applications and databases using the command line or through the API.
- **Notifications**: Get notified when your deployments succeed or fail (via Slack, Discord, Telegram, Email, etc.).
- **Multi Server**: Deploy and manage your applications remotely to external servers.
- **Self-Hosted**: Self-host Dokploy on your VPS.

## 🚀 Getting Started

To get started, run the following command on a VPS:

Want to skip the installation process? [Try the Dokploy Cloud](https://app.dokploy.com).

```bash
curl -sSL https://dokploy.com/install.sh | sh
```

For detailed documentation, visit [docs.dokploy.com](https://docs.dokploy.com).

## ♥️ Sponsors

🙏 We&#039;re deeply grateful to all our sponsors who make Dokploy possible! Your support helps cover the costs of hosting, testing, and developing new features.

[Dokploy Open Collective](https://opencollective.com/dokploy)

[Github Sponsors](https://github.com/sponsors/Siumauricio)

&lt;!-- Hero Sponsors 🎖 --&gt;

&lt;!-- Add Hero Sponsors here --&gt;

### Hero Sponsors 🎖

&lt;div&gt;
  &lt;a href=&quot;https://www.hostinger.com/vps-hosting?ref=dokploy&quot;&gt;&lt;img src=&quot;.github/sponsors/hostinger.jpg&quot; alt=&quot;Hostinger&quot; width=&quot;300&quot;/&gt;&lt;/a&gt;
  &lt;a href=&quot;https://www.lxaer.com/?ref=dokploy&quot;&gt;&lt;img src=&quot;.github/sponsors/lxaer.png&quot; alt=&quot;LX Aer&quot; width=&quot;100&quot;/&gt;&lt;/a&gt;
&lt;/div&gt;

&lt;!-- Premium Supporters 🥇 --&gt;

&lt;!-- Add Premium Supporters here --&gt;

### Premium Supporters 🥇

&lt;div&gt;
  &lt;a href=&quot;https://supafort.com/?ref=dokploy&quot;&gt;&lt;img src=&quot;https://supafort.com/build/q-4Ht4rBZR.webp&quot; alt=&quot;Supafort.com&quot; width=&quot;300&quot;/&gt;&lt;/a&gt;
  &lt;a href=&quot;https://agentdock.ai/?ref=dokploy&quot;&gt;&lt;img src=&quot;.github/sponsors/agentdock.png&quot; alt=&quot;agentdock.ai&quot; width=&quot;100&quot;/&gt;&lt;/a&gt;
&lt;/div&gt;

&lt;!-- Elite Contributors 🥈 --&gt;

&lt;!-- Add Elite Contributors here --&gt;

### Elite Contributors 🥈

&lt;div&gt;
  &lt;a href=&quot;https://americancloud.com/?ref=dokploy&quot;&gt;&lt;img src=&quot;.github/sponsors/american-cloud.png&quot; alt=&quot;AmericanCloud&quot; width=&quot;300&quot;/&gt;&lt;/a&gt;
  &lt;a href=&quot;https://tolgee.io/?utm_source=github_dokploy&amp;utm_medium=banner&amp;utm_campaign=dokploy&quot;&gt;&lt;img src=&quot;https://dokploy.com/tolgee-logo.png&quot; alt=&quot;Tolgee&quot; width=&quot;100&quot;/&gt;&lt;/a&gt;
&lt;/div&gt;

### Supporting Members 🥉

&lt;div&gt;

  &lt;a href=&quot;https://cloudblast.io/?ref=dokploy&quot;&gt;&lt;img src=&quot;https://cloudblast.io/img/logo-icon.193cf13e.svg&quot; width=&quot;250px&quot; alt=&quot;Cloudblast.io&quot;/&gt;&lt;/a&gt;

  &lt;a href=&quot;https://synexa.ai/?ref=dokploy&quot;&gt;&lt;img src=&quot;.github/sponsors/synexa.png&quot; width=&quot;65px&quot; alt=&quot;Synexa&quot;/&gt;&lt;/a&gt;
&lt;/div&gt;

### Community Backers 🤝

#### Organizations:

[Sponsors on Open Collective](https://opencollective.com/dokploy)

#### Individuals:

[![Individual Contributors on Open Collective](https://opencollective.com/dokploy/individuals.svg?width=890)](https://opencollective.com/dokploy)

### Contributors 🤝

&lt;a href=&quot;https://github.com/dokploy/dokploy/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=dokploy/dokploy&quot; alt=&quot;Contributors&quot; /&gt;
&lt;/a&gt;

## 📺 Video Tutorial

&lt;a href=&quot;https://youtu.be/mznYKPvhcfw&quot;&gt;
  &lt;img src=&quot;https://dokploy.com/banner.png&quot; alt=&quot;Watch the video&quot; width=&quot;400&quot;/&gt;
&lt;/a&gt;

## 🤝 Contributing

Check out the [Contributing Guide](CONTRIBUTING.md) for more information.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[David-patrick-chuks/Riona-AI-Agent]]></title>
            <link>https://github.com/David-patrick-chuks/Riona-AI-Agent</link>
            <guid>https://github.com/David-patrick-chuks/Riona-AI-Agent</guid>
            <pubDate>Wed, 20 Aug 2025 00:04:39 GMT</pubDate>
            <description><![CDATA[Riona Ai Agent 🌸 is built using Node.js and TypeScript 🛠️, designed for seamless job execution 📸. It's lightweight, efficient, and still evolving 🚧—exciting new features coming soon! 🌟]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/David-patrick-chuks/Riona-AI-Agent">David-patrick-chuks/Riona-AI-Agent</a></h1>
            <p>Riona Ai Agent 🌸 is built using Node.js and TypeScript 🛠️, designed for seamless job execution 📸. It's lightweight, efficient, and still evolving 🚧—exciting new features coming soon! 🌟</p>
            <p>Language: TypeScript</p>
            <p>Stars: 3,729</p>
            <p>Forks: 714</p>
            <p>Stars today: 48 stars today</p>
            <h2>README</h2><pre>## Support the Project 🙌

If you&#039;d like to support the development of Instagram-AI-Agent, please consider contributing to the following wallet addresses:

- **Bitcoin (BTC)**: 1GkWY6pjn7KoAkCnUab2MxnxeEQihknfUi
- **Ethereum (ETH-erc20)**: 0xabb45f4d85e7d9db5de684c35ccde7239a167cbb
- **Solana (SOL)**: EQV7fQ57zKNMFXy53WBfo2sCxtkRQVQLqj8sqWGnoyR

Your support helps keep this project running and growing! 🚀

## Instagram-AI-Agent 🌸

Instagram-AI-Agent is an AI-powered automation tool designed for **Instagram** to automate social media interactions such as posting, liking, and commenting. It leverages advanced AI models to generate engaging content, automate interactions, and manage Instagram accounts efficiently.

Before using the automation features, you can personalize the agent by training with the following, including:
https://www.instagram.com/dreamlandofficial_1?igsh=NTZvcHRkNjlhYzhp
- **YouTube Video URL** 🎥
- **Audio File** 🎙️
- **Portfolio or Website Link** 🌐
- **File Formats Supported**: PDF, DOC, DOCX, TXT 📄

## Features

- **Instagram Automation**: Automatically log in, post photos, like posts, and leave thoughtful comments.
- **AI-Powered Content Generation**: Use Google Generative AI to create engaging captions and comments.
- **Proxy Support**: Use proxies to manage multiple accounts and avoid rate limits.
- **Cookie Management**: Save and load cookies to maintain sessions across restarts.

**Upcoming Features:**

- **Twitter Automation**: (Coming soon) Automatically tweet, retweet, and like tweets.
- **GitHub Automation**: (Coming soon) Automatically manage repositories, issues, and pull requests.

## Installation

1. **Clone the repository**:

   ```sh
   git clone https://github.com/david-patrick-chuks/Instagram-AI-Agent.git
   cd Instagram-AI-Agent
   ```

2. **Install dependencies**:

   ```sh
   npm install
   ```

3. **Set up environment variables**:
   Rename the [.env.example](http://_vscodecontentref_/1) file to [.env](http://_vscodecontentref_/1) in the root directory and add your Instagram credentials. Refer to the [.env.example](http://_vscodecontentref_/2) file for the required variables.
   ```dotenv # Instagram credentials
   IGusername=your_instagram_username
   IGpassword=your_instagram_password 
   
   Xusername= #Twitter username
   Xpassword= #Twitter password

   MONGODB_URI= #MongoDB URI
   ```

## MongoDB Setup (Using Docker)

1. **Install Docker**:
   If you don&#039;t have Docker installed, download and install it from the [official website](https://www.docker.com/products/docker-desktop/)
2. **Run MongoDB using Docker Container**:

    **Option 1:**
      ```sh
      docker run -d -p 27017:27017 --name instagram-ai-mongodb mongodb/mongodb-community-server:latest
      ```
    **Option 2:**
      ```sh
      docker run -d -p 27017:27017 --name instagram-ai-mongodb -v mongodb_data:/data/db mongodb/mongodb-community-server:latest
      ```   
      (Option 2: use this if you want to have like a permanent storage in you so your data won&#039;t be lost or remove if you stop or remove your Docker container)
3. **Modify the MONGODB_URI in the .env file**:
   ```dotenv
   MONGODB_URI=mongodb://localhost:27017/instagram-ai-agent
   ```
4. **Verify the connection**:
   Open a new terminal and run the following command:
   ```sh
   docker ps
   ```
   You should see the MongoDB container running.

   Docker Commands (Additional Info):
   - To stop the MongoDB container:
     ```sh
     docker stop instagram-ai-mongodb
     ```
   - To start the MongoDB container:
       ```sh
       docker start instagram-ai-mongodb
       ```
   - To remove the MongoDB container:
      ```sh
      docker rm instagram-ai-mongodb
      ```
   - To remove the MongoDB container and its data:
      ```sh
      docker rm -v instagram-ai-mongodb
      ```

## Usage

1. **Run the Instagram agent**:
   ```sh
   npm start
   ```

**Upcoming Features:**

- **Run the Twitter agent** (Coming soon):

  ```sh
  npm run start:twitter
  ```

- **Run the GitHub agent** (Coming soon):
  ```sh
  npm run start:github
  ```

## Project Structure

- **src/client**: Contains the main logic for interacting with social media platforms like Instagram.
- **src/config**: Configuration files, including the logger setup.
- **src/utils**: Utility functions for handling errors, cookies, data saving, etc.
- **src/Agent**: Contains the AI agent logic and training scripts.
- **src/Agent/training**: Training scripts for the AI agent.
- **src/schema**: Schema definitions for AI-generated content and database models.
- **src/test**: Contains test data and scripts, such as example tweets.

## Logging

The project uses a custom logger to log information, warnings, and errors. Logs are saved in the [logs](http://_vscodecontentref_/3) directory.

## Error Handling

Process-level error handlers are set up to catch unhandled promise rejections, uncaught exceptions, and process warnings. Errors are logged using the custom logger.

## Contributing

Contributions are welcome! Please fork the repository and submit a pull request with your changes.

## License

This project is licensed under the MIT License. See the LICENSE file for details.

## Acknowledgements

- [Google Generative AI](https://ai.google/tools/) for providing the AI models.
- [Puppeteer](https://github.com/puppeteer/puppeteer) for browser automation.
- [puppeteer-extra](https://github.com/berstend/puppeteer-extra) for additional plugins and enhancements.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[epicenter-so/epicenter]]></title>
            <link>https://github.com/epicenter-so/epicenter</link>
            <guid>https://github.com/epicenter-so/epicenter</guid>
            <pubDate>Wed, 20 Aug 2025 00:04:38 GMT</pubDate>
            <description><![CDATA[Press shortcut → speak → get text. Free and open source. More local-first apps soon ❤️]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/epicenter-so/epicenter">epicenter-so/epicenter</a></h1>
            <p>Press shortcut → speak → get text. Free and open source. More local-first apps soon ❤️</p>
            <p>Language: TypeScript</p>
            <p>Stars: 2,103</p>
            <p>Forks: 126</p>
            <p>Stars today: 616 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://epicenter.so&quot;&gt;
    &lt;img width=&quot;200&quot; src=&quot;https://github.com/user-attachments/assets/9e210c52-2740-43b6-af3f-e6eaf4b5c397&quot; alt=&quot;Epicenter&quot;&gt;
  &lt;/a&gt;
  &lt;h1 align=&quot;center&quot;&gt;Epicenter&lt;/h1&gt;
  &lt;p align=&quot;center&quot;&gt;Local-first, open-source apps&lt;/p&gt;
  &lt;p align=&quot;center&quot;&gt;Own your data. Use any model you want. Free and open source ❤️&lt;/p&gt;
&lt;/p&gt;

&gt; **📢 Repository Update:** The [Whispering](https://github.com/braden-w/whispering/) repository is now part of **Epicenter**! You can find it [here](https://github.com/epicenter-so/epicenter/tree/main/apps/whispering). Everything else remains the same—same tools, same philosophy, same team.

&lt;p align=&quot;center&quot;&gt;
  &lt;!-- GitHub Stars Badge --&gt;
  &lt;a href=&quot;https://github.com/epicenter-so/epicenter&quot; target=&quot;_blank&quot;&gt;
    &lt;img alt=&quot;GitHub stars&quot; src=&quot;https://img.shields.io/github/stars/epicenter-so/epicenter?style=flat-square&quot; /&gt;
  &lt;/a&gt;
  &lt;!-- Latest Version Badge --&gt;
  &lt;img src=&quot;https://img.shields.io/github/v/release/epicenter-so/epicenter?style=flat-square&amp;label=Latest%20Version&amp;color=brightgreen&quot; /&gt;
  &lt;!-- License Badge --&gt;
  &lt;a href=&quot;LICENSE&quot; target=&quot;_blank&quot;&gt;
    &lt;img alt=&quot;MIT License&quot; src=&quot;https://img.shields.io/github/license/epicenter-so/epicenter.svg?style=flat-square&quot; /&gt;
  &lt;/a&gt;
  &lt;!-- Discord Badge --&gt;
  &lt;a href=&quot;https://go.epicenter.so/discord&quot; target=&quot;_blank&quot;&gt;
    &lt;img alt=&quot;Discord&quot; src=&quot;https://img.shields.io/badge/Discord-Join%20us-5865F2?style=flat-square&amp;logo=discord&amp;logoColor=white&quot; /&gt;
  &lt;/a&gt;
  &lt;!-- Platform Support Badges --&gt;
  &lt;a href=&quot;https://github.com/epicenter-so/epicenter/releases&quot; target=&quot;_blank&quot;&gt;
    &lt;img alt=&quot;macOS&quot; src=&quot;https://img.shields.io/badge/-macOS-black?style=flat-square&amp;logo=apple&amp;logoColor=white&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/epicenter-so/epicenter/releases&quot; target=&quot;_blank&quot;&gt;
    &lt;img alt=&quot;Windows&quot; src=&quot;https://img.shields.io/badge/-Windows-blue?style=flat-square&amp;logo=windows&amp;logoColor=white&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/epicenter-so/epicenter/releases&quot; target=&quot;_blank&quot;&gt;
    &lt;img alt=&quot;Linux&quot; src=&quot;https://img.shields.io/badge/-Linux-yellow?style=flat-square&amp;logo=linux&amp;logoColor=white&quot; /&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;#current-tools&quot;&gt;Tools&lt;/a&gt; •
  &lt;a href=&quot;#where-were-headed&quot;&gt;Vision&lt;/a&gt; •
  &lt;a href=&quot;#join-us&quot;&gt;Contributing&lt;/a&gt; •
  &lt;a href=&quot;https://go.epicenter.so/discord&quot;&gt;Discord&lt;/a&gt; •
&lt;/p&gt;

---

## What is Epicenter?

Epicenter is an ecosystem of open-source, local-first apps. Our eventual goal is to store all of your data—notes, transcripts, chat histories—in a single folder of plain text and SQLite. Every tool we build shares this memory. It&#039;s open, tweakable, and yours. Grep it, open it in Obsidian, host it wherever you like. The choice is yours.



## Current Tools

&lt;table&gt;
  &lt;tr&gt;
    &lt;td align=&quot;center&quot; width=&quot;50%&quot;&gt;
      &lt;h3&gt;🎙️ &lt;a href=&quot;https://github.com/epicenter-so/epicenter/tree/main/apps/whispering&quot;&gt;Whispering&lt;/a&gt;&lt;/h3&gt;
      &lt;p&gt;Press shortcut → speak → get text. Desktop transcription that cuts out the middleman. Bring your own API key.&lt;/p&gt;
      &lt;p&gt;&lt;strong&gt;→ &lt;a href=&quot;https://github.com/epicenter-so/epicenter/tree/main/apps/whispering&quot;&gt;Explore Whispering&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
    &lt;/td&gt;
    &lt;td align=&quot;center&quot; width=&quot;50%&quot;&gt;
      &lt;h3&gt;🤖 &lt;a href=&quot;https://github.com/epicenter-so/epicenter/tree/main/apps/sh&quot;&gt;epicenter.sh&lt;/a&gt;&lt;/h3&gt;
      &lt;p&gt;A local-first assistant you can chat with. It lives in your folder, becoming the access point to everything you&#039;ve ever written, thought, or built.&lt;/p&gt;
      &lt;p&gt;&lt;strong&gt;→ &lt;a href=&quot;https://github.com/epicenter-so/epicenter/tree/main/apps/sh&quot;&gt;Explore epicenter.sh&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

## Where We&#039;re Headed

Our vision is to build a personal workspace where you own your data, choose your models, and replace siloed apps with open, interoperable alternatives. All while preserving authenticity and being free and open source.


## Quick Start

Epicenter will have more apps in the future, but for now, the best way to get started is to run Whispering locally:

```bash
# Prerequisites: Install Bun from https://bun.sh (run bun upgrade if there&#039;s issues)
git clone https://github.com/epicenter-so/epicenter.git
cd epicenter
bun install  # Will prompt to upgrade if your Bun version is too old
cd apps/whispering
bun dev
```

## Join Us

## Discord Community

If you think like a generalist, build like a hacker, and value tools that respect your mind—you&#039;ll fit right in.

**→ [Join our Discord](https://go.epicenter.so/discord)**

### We&#039;re looking for contributors

If you&#039;re passionate about open source, local-first software, or are just a cracked Svelte/TypeScript developer—we&#039;d love to build with you.

**→ [Read our Contributing Guide](CONTRIBUTING.md) to get started**

Contributors coordinate and share ideas in our Discord community.

## Tech Stack

&lt;p align=&quot;center&quot;&gt;
  &lt;img alt=&quot;Svelte 5&quot; src=&quot;https://img.shields.io/badge/-Svelte%205-orange?style=flat-square&amp;logo=svelte&amp;logoColor=white&quot; /&gt;
  &lt;img alt=&quot;Tauri&quot; src=&quot;https://img.shields.io/badge/-Tauri-blue?style=flat-square&amp;logo=tauri&amp;logoColor=white&quot; /&gt;
  &lt;img alt=&quot;TypeScript&quot; src=&quot;https://img.shields.io/badge/-TypeScript-blue?style=flat-square&amp;logo=typescript&amp;logoColor=white&quot; /&gt;
  &lt;img alt=&quot;Rust&quot; src=&quot;https://img.shields.io/badge/-Rust-orange?style=flat-square&amp;logo=rust&amp;logoColor=white&quot; /&gt;
  &lt;img alt=&quot;TanStack Query&quot; src=&quot;https://img.shields.io/badge/-TanStack%20Query-red?style=flat-square&amp;logo=react-query&amp;logoColor=white&quot; /&gt;
  &lt;img alt=&quot;Tailwind CSS&quot; src=&quot;https://img.shields.io/badge/-Tailwind%20CSS-38B2AC?style=flat-square&amp;logo=tailwind-css&amp;logoColor=white&quot; /&gt;
&lt;/p&gt;

## License

[MIT](LICENSE). Build on it. Fork it. Make it yours. Please contribute if you can.

---

&lt;p align=&quot;center&quot;&gt;
  &lt;strong&gt;Contact:&lt;/strong&gt; &lt;a href=&quot;mailto:github@bradenwong.com&quot;&gt;github@bradenwong.com&lt;/a&gt; | &lt;a href=&quot;https://go.epicenter.so/discord&quot;&gt;Discord&lt;/a&gt; | &lt;a href=&quot;https://twitter.com/braden_wong_&quot;&gt;@braden_wong_&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;sub&gt;Built with ❤️ for data ownership, local-first, and open-souce&lt;/sub&gt;
&lt;/p&gt;
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[outline/outline]]></title>
            <link>https://github.com/outline/outline</link>
            <guid>https://github.com/outline/outline</guid>
            <pubDate>Wed, 20 Aug 2025 00:04:37 GMT</pubDate>
            <description><![CDATA[The fastest knowledge base for growing teams. Beautiful, realtime collaborative, feature packed, and markdown compatible.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/outline/outline">outline/outline</a></h1>
            <p>The fastest knowledge base for growing teams. Beautiful, realtime collaborative, feature packed, and markdown compatible.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 34,610</p>
            <p>Forks: 2,805</p>
            <p>Stars today: 23 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;https://user-images.githubusercontent.com/31465/34380645-bd67f474-eb0b-11e7-8d03-0151c1730654.png&quot; height=&quot;29&quot; /&gt;
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;i&gt;A fast, collaborative, knowledge base for your team built using React and Node.js.&lt;br/&gt;Try out Outline using our hosted version at &lt;a href=&quot;https://www.getoutline.com&quot;&gt;www.getoutline.com&lt;/a&gt;.&lt;/i&gt;
  &lt;br/&gt;
  &lt;img width=&quot;1640&quot; alt=&quot;screenshot&quot; src=&quot;https://user-images.githubusercontent.com/380914/110356468-26374600-7fef-11eb-9f6a-f2cc2c8c6590.png&quot;&gt;
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://circleci.com/gh/outline/outline&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://circleci.com/gh/outline/outline.svg?style=shield&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;http://www.typescriptlang.org&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%3C%2F%3E-TypeScript-%230074c1.svg&quot; alt=&quot;TypeScript&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://github.com/prettier/prettier&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat&quot; alt=&quot;Prettier&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://github.com/styled-components/styled-components&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/style-%F0%9F%92%85%20styled--components-orange.svg&quot; alt=&quot;Styled Components&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://translate.getoutline.com/project/outline&quot; alt=&quot;Localized&quot;&gt;&lt;img src=&quot;https://badges.crowdin.net/outline/localized.svg&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

This is the source code that runs [**Outline**](https://www.getoutline.com) and all the associated services. If you want to use Outline then you don&#039;t need to run this code, we offer a hosted version of the app at [getoutline.com](https://www.getoutline.com). You can also find documentation on using Outline in [our guide](https://docs.getoutline.com/s/guide).

If you&#039;d like to run your own copy of Outline or contribute to development then this is the place for you.

# Installation

Please see the [documentation](https://docs.getoutline.com/s/hosting/) for running your own copy of Outline in a production configuration.

If you have questions or improvements for the docs please create a thread in [GitHub discussions](https://github.com/outline/outline/discussions).

# Development

There is a short guide for [setting up a development environment](https://docs.getoutline.com/s/hosting/doc/local-development-5hEhFRXow7) if you wish to contribute changes, fixes, and improvements to Outline.

## Contributing

Outline is built and maintained by a small team – we&#039;d love your help to fix bugs and add features!

Before submitting a pull request _please_ discuss with the core team by creating or commenting in an issue on [GitHub](https://www.github.com/outline/outline/issues) – we&#039;d also love to hear from you in the [discussions](https://www.github.com/outline/outline/discussions). This way we can ensure that an approach is agreed on before code is written. This will result in a much higher likelihood of your code being accepted.

If you’re looking for ways to get started, here&#039;s a list of ways to help us improve Outline:

- [Translation](docs/TRANSLATION.md) into other languages
- Issues with [`good first issue`](https://github.com/outline/outline/labels/good%20first%20issue) label
- Performance improvements, both on server and frontend
- Developer happiness and documentation
- Bugs and other issues listed on GitHub

## Architecture

If you&#039;re interested in contributing or learning more about the Outline codebase
please refer to the [architecture document](docs/ARCHITECTURE.md) first for a high level overview of how the application is put together.

## Debugging

In development Outline outputs simple logging to the console, prefixed by categories. In production it outputs JSON logs, these can be easily parsed by your preferred log ingestion pipeline.

HTTP logging is disabled by default, but can be enabled by setting the `DEBUG=http` environment variable.

## Tests

We aim to have sufficient test coverage for critical parts of the application and aren&#039;t aiming for 100% unit test coverage. All API endpoints and anything authentication related should be thoroughly tested.

To add new tests, write your tests with [Jest](https://facebook.github.io/jest/) and add a file with `.test.js` extension next to the tested code.

```shell
# To run all tests
make test

# To run backend tests in watch mode
make watch
```

Once the test database is created with `make test` you may individually run
frontend and backend tests directly.

```shell
# To run backend tests
yarn test:server

# To run a specific backend test
yarn test:server myTestFile

# To run frontend tests
yarn test:app
```

## Migrations

Sequelize is used to create and run migrations, for example:

```shell
yarn sequelize migration:generate --name my-migration
yarn sequelize db:migrate
```

Or to run migrations on test database:

```shell
yarn sequelize db:migrate --env test
```

# Activity

![Alt](https://repobeats.axiom.co/api/embed/ff2e4e6918afff1acf9deb72d1ba6b071d586178.svg &quot;Repobeats analytics image&quot;)

# License

Outline is [BSL 1.1 licensed](LICENSE).
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[mfts/papermark]]></title>
            <link>https://github.com/mfts/papermark</link>
            <guid>https://github.com/mfts/papermark</guid>
            <pubDate>Wed, 20 Aug 2025 00:04:36 GMT</pubDate>
            <description><![CDATA[Papermark is the open-source DocSend alternative with built-in analytics and custom domains.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/mfts/papermark">mfts/papermark</a></h1>
            <p>Papermark is the open-source DocSend alternative with built-in analytics and custom domains.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 7,342</p>
            <p>Forks: 1,000</p>
            <p>Stars today: 211 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
  &lt;h1 align=&quot;center&quot;&gt;Papermark&lt;/h1&gt;
  &lt;h3&gt;The open-source DocSend alternative.&lt;/h3&gt;

&lt;a target=&quot;_blank&quot; href=&quot;https://www.producthunt.com/posts/papermark-3?utm_source=badge-top-post-badge&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-papermark&quot;&gt;&lt;img src=&quot;https://api.producthunt.com/widgets/embed-image/v1/top-post-badge.svg?post_id=411605&amp;amp;theme=light&amp;amp;period=daily&quot; alt=&quot;Papermark - The open-source DocSend alternative | Product Hunt&quot; style=&quot;width:250px;height:40px&quot;&gt;&lt;/a&gt;

&lt;/div&gt;

&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.papermark.com&quot;&gt;papermark.com&lt;/a&gt;
&lt;/div&gt;

&lt;br/&gt;

&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/mfts/papermark/stargazers&quot;&gt;&lt;img alt=&quot;GitHub Repo stars&quot; src=&quot;https://img.shields.io/github/stars/mfts/papermark&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://twitter.com/papermarkio&quot;&gt;&lt;img alt=&quot;Twitter Follow&quot; src=&quot;https://img.shields.io/twitter/follow/papermarkio&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://github.com/mfts/papermark/blob/main/LICENSE&quot;&gt;&lt;img alt=&quot;License&quot; src=&quot;https://img.shields.io/badge/license-AGPLv3-purple&quot;&gt;&lt;/a&gt;
&lt;/div&gt;

&lt;br/&gt;

Papermark is the open-source document-sharing alternative to DocSend, featuring built-in analytics and custom domains.

## Features

- **Shareable Links:** Share your documents securely by sending a custom link.
- **Custom Branding:** Add a custom domain and your own branding.
- **Analytics:** Gain insights through document tracking and soon page-by-page analytics.
- **Self-hosted, Open-source:** Host it yourself and customize it as needed.

## Demo

![Papermark Welcome GIF](.github/images/papermark-welcome.gif)

## Tech Stack

- [Next.js](https://nextjs.org/) – Framework
- [TypeScript](https://www.typescriptlang.org/) – Language
- [Tailwind](https://tailwindcss.com/) – CSS
- [shadcn/ui](https://ui.shadcn.com) - UI Components
- [Prisma](https://prisma.io) - ORM [![Made with Prisma](https://made-with.prisma.io/dark.svg)](https://prisma.io)
- [PostgreSQL](https://www.postgresql.org/) - Database
- [NextAuth.js](https://next-auth.js.org/) – Authentication
- [Tinybird](https://tinybird.co) – Analytics
- [Resend](https://resend.com) – Email
- [Stripe](https://stripe.com) – Payments
- [Vercel](https://vercel.com/) – Hosting

## Getting Started

### Prerequisites

Here&#039;s what you need to run Papermark:

- Node.js (version &gt;= 18.17.0)
- PostgreSQL Database
- Blob storage (currently [AWS S3](https://aws.amazon.com/s3/) or [Vercel Blob](https://vercel.com/storage/blob))
- [Resend](https://resend.com) (for sending emails)

### 1. Clone the repository

```shell
git clone https://github.com/mfts/papermark.git
cd papermark
```

### 2. Install npm dependencies

```shell
npm install
```

### 3. Copy the environment variables to `.env` and change the values

```shell
cp .env.example .env
```

### 4. Initialize the database

```shell
npm run dev:prisma
```

### 5. Run the dev server

```shell
npm run dev
```

### 6. Open the app in your browser

Visit [http://localhost:3000](http://localhost:3000) in your browser.

## Tinybird Instructions

To prepare the Tinybird database, follow these steps:

0. We use `pipenv` to manage our Python dependencies. If you don&#039;t have it installed, you can install it using the following command:
   ```sh
   pkgx pipenv
   ```
1. Download the Tinybird CLI from [here](https://www.tinybird.co/docs/cli.html) and install it on your system.
2. After authenticating with the Tinybird CLI, navigate to the `lib/tinybird` directory:
   ```sh
   cd lib/tinybird
   ```
3. Push the necessary data sources using the following command:
   ```sh
   tb push datasources/*
   tb push endpoints/get_*
   ```
4. Don&#039;t forget to set the `TINYBIRD_TOKEN` with the appropriate rights in your `.env` file.

#### Updating Tinybird

```sh
pipenv shell
## start: pkgx-specific
cd ..
cd papermark
## end: pkgx-specific
pipenv update tinybird-cli
```

## Contributing

Papermark is an open-source project, and we welcome contributions from the community.

If you&#039;d like to contribute, please fork the repository and make any changes you&#039;d like. Pull requests are warmly welcome.

### Our Contributors ✨

&lt;a href=&quot;https://github.com/mfts/papermark/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=mfts/papermark&quot; /&gt;
&lt;/a&gt;
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[pmndrs/zustand]]></title>
            <link>https://github.com/pmndrs/zustand</link>
            <guid>https://github.com/pmndrs/zustand</guid>
            <pubDate>Wed, 20 Aug 2025 00:04:35 GMT</pubDate>
            <description><![CDATA[🐻 Bear necessities for state management in React]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/pmndrs/zustand">pmndrs/zustand</a></h1>
            <p>🐻 Bear necessities for state management in React</p>
            <p>Language: TypeScript</p>
            <p>Stars: 54,212</p>
            <p>Forks: 1,772</p>
            <p>Stars today: 17 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;docs/bear.jpg&quot; /&gt;
&lt;/p&gt;

[![Build Status](https://img.shields.io/github/actions/workflow/status/pmndrs/zustand/test.yml?branch=main&amp;style=flat&amp;colorA=000000&amp;colorB=000000)](https://github.com/pmndrs/zustand/actions?query=workflow%3ALint)
[![Build Size](https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fdeno.bundlejs.com%2F%3Fq%3Dzustand&amp;query=%24.size.uncompressedSize&amp;style=flat&amp;label=bundle%20size&amp;colorA=000000&amp;colorB=000000)](https://bundlejs.com/?q=zustand)
[![Version](https://img.shields.io/npm/v/zustand?style=flat&amp;colorA=000000&amp;colorB=000000)](https://www.npmjs.com/package/zustand)
[![Downloads](https://img.shields.io/npm/dt/zustand.svg?style=flat&amp;colorA=000000&amp;colorB=000000)](https://www.npmjs.com/package/zustand)
[![Discord Shield](https://img.shields.io/discord/740090768164651008?style=flat&amp;colorA=000000&amp;colorB=000000&amp;label=discord&amp;logo=discord&amp;logoColor=ffffff)](https://discord.gg/poimandres)

A small, fast and scalable bearbones state-management solution using simplified flux principles. Has a comfy API based on hooks, isn&#039;t boilerplatey or opinionated.

Don&#039;t disregard it because it&#039;s cute. It has quite the claws, lots of time was spent dealing with common pitfalls, like the dreaded [zombie child problem](https://react-redux.js.org/api/hooks#stale-props-and-zombie-children), [react concurrency](https://github.com/bvaughn/rfcs/blob/useMutableSource/text/0000-use-mutable-source.md), and [context loss](https://github.com/facebook/react/issues/13332) between mixed renderers. It may be the one state-manager in the React space that gets all of these right.

You can try a live [demo](https://zustand-demo.pmnd.rs/) and read the [docs](https://zustand.docs.pmnd.rs/).

```bash
npm install zustand
```

:warning: This readme is written for JavaScript users. If you are a TypeScript user, be sure to check out our [TypeScript Usage section](#typescript-usage).

## First create a store

Your store is a hook! You can put anything in it: primitives, objects, functions. State has to be updated immutably and the `set` function [merges state](./docs/guides/immutable-state-and-merging.md) to help it.

```jsx
import { create } from &#039;zustand&#039;

const useBearStore = create((set) =&gt; ({
  bears: 0,
  increasePopulation: () =&gt; set((state) =&gt; ({ bears: state.bears + 1 })),
  removeAllBears: () =&gt; set({ bears: 0 }),
}))
```

## Then bind your components, and that&#039;s it!

Use the hook anywhere, no providers are needed. Select your state and the component will re-render on changes.

```jsx
function BearCounter() {
  const bears = useBearStore((state) =&gt; state.bears)
  return &lt;h1&gt;{bears} around here ...&lt;/h1&gt;
}

function Controls() {
  const increasePopulation = useBearStore((state) =&gt; state.increasePopulation)
  return &lt;button onClick={increasePopulation}&gt;one up&lt;/button&gt;
}
```

### Why zustand over redux?

- Simple and un-opinionated
- Makes hooks the primary means of consuming state
- Doesn&#039;t wrap your app in context providers
- [Can inform components transiently (without causing render)](#transient-updates-for-often-occurring-state-changes)

### Why zustand over context?

- Less boilerplate
- Renders components only on changes
- Centralized, action-based state management

---

# Recipes

## Fetching everything

You can, but bear in mind that it will cause the component to update on every state change!

```jsx
const state = useBearStore()
```

## Selecting multiple state slices

It detects changes with strict-equality (old === new) by default, this is efficient for atomic state picks.

```jsx
const nuts = useBearStore((state) =&gt; state.nuts)
const honey = useBearStore((state) =&gt; state.honey)
```

If you want to construct a single object with multiple state-picks inside, similar to redux&#039;s mapStateToProps, you can use [useShallow](./docs/guides/prevent-rerenders-with-use-shallow.md) to prevent unnecessary rerenders when the selector output does not change according to shallow equal.

```jsx
import { create } from &#039;zustand&#039;
import { useShallow } from &#039;zustand/react/shallow&#039;

const useBearStore = create((set) =&gt; ({
  nuts: 0,
  honey: 0,
  treats: {},
  // ...
}))

// Object pick, re-renders the component when either state.nuts or state.honey change
const { nuts, honey } = useBearStore(
  useShallow((state) =&gt; ({ nuts: state.nuts, honey: state.honey })),
)

// Array pick, re-renders the component when either state.nuts or state.honey change
const [nuts, honey] = useBearStore(
  useShallow((state) =&gt; [state.nuts, state.honey]),
)

// Mapped picks, re-renders the component when state.treats changes in order, count or keys
const treats = useBearStore(useShallow((state) =&gt; Object.keys(state.treats)))
```

For more control over re-rendering, you may provide any custom equality function (this example requires the use of [`createWithEqualityFn`](./docs/migrations/migrating-to-v5.md#using-custom-equality-functions-such-as-shallow)).

```jsx
const treats = useBearStore(
  (state) =&gt; state.treats,
  (oldTreats, newTreats) =&gt; compare(oldTreats, newTreats),
)
```

## Overwriting state

The `set` function has a second argument, `false` by default. Instead of merging, it will replace the state model. Be careful not to wipe out parts you rely on, like actions.

```jsx
const useFishStore = create((set) =&gt; ({
  salmon: 1,
  tuna: 2,
  deleteEverything: () =&gt; set({}, true), // clears the entire store, actions included
  deleteTuna: () =&gt; set(({ tuna, ...rest }) =&gt; rest, true),
}))
```

## Async actions

Just call `set` when you&#039;re ready, zustand doesn&#039;t care if your actions are async or not.

```jsx
const useFishStore = create((set) =&gt; ({
  fishies: {},
  fetch: async (pond) =&gt; {
    const response = await fetch(pond)
    set({ fishies: await response.json() })
  },
}))
```

## Read from state in actions

`set` allows fn-updates `set(state =&gt; result)`, but you still have access to state outside of it through `get`.

```jsx
const useSoundStore = create((set, get) =&gt; ({
  sound: &#039;grunt&#039;,
  action: () =&gt; {
    const sound = get().sound
    ...
```

## Reading/writing state and reacting to changes outside of components

Sometimes you need to access state in a non-reactive way or act upon the store. For these cases, the resulting hook has utility functions attached to its prototype.

:warning: This technique is not recommended for adding state in [React Server Components](https://github.com/reactjs/rfcs/blob/main/text/0188-server-components.md) (typically in Next.js 13 and above). It can lead to unexpected bugs and privacy issues for your users. For more details, see [#2200](https://github.com/pmndrs/zustand/discussions/2200).

```jsx
const useDogStore = create(() =&gt; ({ paw: true, snout: true, fur: true }))

// Getting non-reactive fresh state
const paw = useDogStore.getState().paw
// Listening to all changes, fires synchronously on every change
const unsub1 = useDogStore.subscribe(console.log)
// Updating state, will trigger listeners
useDogStore.setState({ paw: false })
// Unsubscribe listeners
unsub1()

// You can of course use the hook as you always would
function Component() {
  const paw = useDogStore((state) =&gt; state.paw)
  ...
```

### Using subscribe with selector

If you need to subscribe with a selector,
`subscribeWithSelector` middleware will help.

With this middleware `subscribe` accepts an additional signature:

```ts
subscribe(selector, callback, options?: { equalityFn, fireImmediately }): Unsubscribe
```

```js
import { subscribeWithSelector } from &#039;zustand/middleware&#039;
const useDogStore = create(
  subscribeWithSelector(() =&gt; ({ paw: true, snout: true, fur: true })),
)

// Listening to selected changes, in this case when &quot;paw&quot; changes
const unsub2 = useDogStore.subscribe((state) =&gt; state.paw, console.log)
// Subscribe also exposes the previous value
const unsub3 = useDogStore.subscribe(
  (state) =&gt; state.paw,
  (paw, previousPaw) =&gt; console.log(paw, previousPaw),
)
// Subscribe also supports an optional equality function
const unsub4 = useDogStore.subscribe(
  (state) =&gt; [state.paw, state.fur],
  console.log,
  { equalityFn: shallow },
)
// Subscribe and fire immediately
const unsub5 = useDogStore.subscribe((state) =&gt; state.paw, console.log, {
  fireImmediately: true,
})
```

## Using zustand without React

Zustand core can be imported and used without the React dependency. The only difference is that the create function does not return a hook, but the API utilities.

```jsx
import { createStore } from &#039;zustand/vanilla&#039;

const store = createStore((set) =&gt; ...)
const { getState, setState, subscribe, getInitialState } = store

export default store
```

You can use a vanilla store with `useStore` hook available since v4.

```jsx
import { useStore } from &#039;zustand&#039;
import { vanillaStore } from &#039;./vanillaStore&#039;

const useBoundStore = (selector) =&gt; useStore(vanillaStore, selector)
```

:warning: Note that middlewares that modify `set` or `get` are not applied to `getState` and `setState`.

## Transient updates (for often occurring state-changes)

The subscribe function allows components to bind to a state-portion without forcing re-render on changes. Best combine it with useEffect for automatic unsubscribe on unmount. This can make a [drastic](https://codesandbox.io/s/peaceful-johnson-txtws) performance impact when you are allowed to mutate the view directly.

```jsx
const useScratchStore = create((set) =&gt; ({ scratches: 0, ... }))

const Component = () =&gt; {
  // Fetch initial state
  const scratchRef = useRef(useScratchStore.getState().scratches)
  // Connect to the store on mount, disconnect on unmount, catch state-changes in a reference
  useEffect(() =&gt; useScratchStore.subscribe(
    state =&gt; (scratchRef.current = state.scratches)
  ), [])
  ...
```

## Sick of reducers and changing nested states? Use Immer!

Reducing nested structures is tiresome. Have you tried [immer](https://github.com/mweststrate/immer)?

```jsx
import { produce } from &#039;immer&#039;

const useLushStore = create((set) =&gt; ({
  lush: { forest: { contains: { a: &#039;bear&#039; } } },
  clearForest: () =&gt;
    set(
      produce((state) =&gt; {
        state.lush.forest.contains = null
      }),
    ),
}))

const clearForest = useLushStore((state) =&gt; state.clearForest)
clearForest()
```

[Alternatively, there are some other solutions.](./docs/guides/updating-state.md#with-immer)

## Persist middleware

You can persist your store&#039;s data using any kind of storage.

```jsx
import { create } from &#039;zustand&#039;
import { persist, createJSONStorage } from &#039;zustand/middleware&#039;

const useFishStore = create(
  persist(
    (set, get) =&gt; ({
      fishes: 0,
      addAFish: () =&gt; set({ fishes: get().fishes + 1 }),
    }),
    {
      name: &#039;food-storage&#039;, // name of the item in the storage (must be unique)
      storage: createJSONStorage(() =&gt; sessionStorage), // (optional) by default, &#039;localStorage&#039; is used
    },
  ),
)
```

[See the full documentation for this middleware.](./docs/integrations/persisting-store-data.md)

## Immer middleware

Immer is available as middleware too.

```jsx
import { create } from &#039;zustand&#039;
import { immer } from &#039;zustand/middleware/immer&#039;

const useBeeStore = create(
  immer((set) =&gt; ({
    bees: 0,
    addBees: (by) =&gt;
      set((state) =&gt; {
        state.bees += by
      }),
  })),
)
```

## Can&#039;t live without redux-like reducers and action types?

```jsx
const types = { increase: &#039;INCREASE&#039;, decrease: &#039;DECREASE&#039; }

const reducer = (state, { type, by = 1 }) =&gt; {
  switch (type) {
    case types.increase:
      return { grumpiness: state.grumpiness + by }
    case types.decrease:
      return { grumpiness: state.grumpiness - by }
  }
}

const useGrumpyStore = create((set) =&gt; ({
  grumpiness: 0,
  dispatch: (args) =&gt; set((state) =&gt; reducer(state, args)),
}))

const dispatch = useGrumpyStore((state) =&gt; state.dispatch)
dispatch({ type: types.increase, by: 2 })
```

Or, just use our redux-middleware. It wires up your main-reducer, sets the initial state, and adds a dispatch function to the state itself and the vanilla API.

```jsx
import { redux } from &#039;zustand/middleware&#039;

const useGrumpyStore = create(redux(reducer, initialState))
```

## Redux devtools

Install the [Redux DevTools Chrome extension](https://chromewebstore.google.com/detail/redux-devtools/lmhkpmbekcpmknklioeibfkpmmfibljd) to use the devtools middleware.

```jsx
import { devtools } from &#039;zustand/middleware&#039;

// Usage with a plain action store, it will log actions as &quot;setState&quot;
const usePlainStore = create(devtools((set) =&gt; ...))
// Usage with a redux store, it will log full action types
const useReduxStore = create(devtools(redux(reducer, initialState)))
```

One redux devtools connection for multiple stores

```jsx
import { devtools } from &#039;zustand/middleware&#039;

// Usage with a plain action store, it will log actions as &quot;setState&quot;
const usePlainStore1 = create(devtools((set) =&gt; ..., { name, store: storeName1 }))
const usePlainStore2 = create(devtools((set) =&gt; ..., { name, store: storeName2 }))
// Usage with a redux store, it will log full action types
const useReduxStore1 = create(devtools(redux(reducer, initialState)), { name, store: storeName3 })
const useReduxStore2 = create(devtools(redux(reducer, initialState)), { name, store: storeName4 })
```

Assigning different connection names will separate stores in redux devtools. This also helps group different stores into separate redux devtools connections.

devtools takes the store function as its first argument, optionally you can name the store or configure [serialize](https://github.com/zalmoxisus/redux-devtools-extension/blob/master/docs/API/Arguments.md#serialize) options with a second argument.

Name store: `devtools(..., {name: &quot;MyStore&quot;})`, which will create a separate instance named &quot;MyStore&quot; in the devtools.

Serialize options: `devtools(..., { serialize: { options: true } })`.

#### Logging Actions

devtools will only log actions from each separated store unlike in a typical _combined reducers_ redux store. See an approach to combining stores https://github.com/pmndrs/zustand/issues/163

You can log a specific action type for each `set` function by passing a third parameter:

```jsx
const useBearStore = create(devtools((set) =&gt; ({
  ...
  eatFish: () =&gt; set(
    (prev) =&gt; ({ fishes: prev.fishes &gt; 1 ? prev.fishes - 1 : 0 }),
    undefined,
    &#039;bear/eatFish&#039;
  ),
  ...
```

You can also log the action&#039;s type along with its payload:

```jsx
  ...
  addFishes: (count) =&gt; set(
    (prev) =&gt; ({ fishes: prev.fishes + count }),
    undefined,
    { type: &#039;bear/addFishes&#039;, count, }
  ),
  ...
```

If an action type is not provided, it is defaulted to &quot;anonymous&quot;. You can customize this default value by providing an `anonymousActionType` parameter:

```jsx
devtools(..., { anonymousActionType: &#039;unknown&#039;, ... })
```

If you wish to disable devtools (on production for instance). You can customize this setting by providing the `enabled` parameter:

```jsx
devtools(..., { enabled: false, ... })
```

## React context

The store created with `create` doesn&#039;t require context providers. In some cases, you may want to use contexts for dependency injection or if you want to initialize your store with props from a component. Because the normal store is a hook, passing it as a normal context value may violate the rules of hooks.

The recommended method available since v4 is to use the vanilla store.

```jsx
import { createContext, useContext } from &#039;react&#039;
import { createStore, useStore } from &#039;zustand&#039;

const store = createStore(...) // vanilla store without hooks

const StoreContext = createContext()

const App = () =&gt; (
  &lt;StoreContext.Provider value={store}&gt;
    ...
  &lt;/StoreContext.Provider&gt;
)

const Component = () =&gt; {
  const store = useContext(StoreContext)
  const slice = useStore(store, selector)
  ...
```

## TypeScript Usage

Basic typescript usage doesn&#039;t require anything special except for writing `create&lt;State&gt;()(...)` instead of `create(...)`...

```ts
import { create } from &#039;zustand&#039;
import { devtools, persist } from &#039;zustand/middleware&#039;
import type {} from &#039;@redux-devtools/extension&#039; // required for devtools typing

interface BearState {
  bears: number
  increase: (by: number) =&gt; void
}

const useBearStore = create&lt;BearState&gt;()(
  devtools(
    persist(
      (set) =&gt; ({
        bears: 0,
        increase: (by) =&gt; set((state) =&gt; ({ bears: state.bears + by })),
      }),
      {
        name: &#039;bear-storage&#039;,
      },
    ),
  ),
)
```

A more complete TypeScript guide is [here](docs/guides/typescript.md).

## Best practices

- You may wonder how to organize your code for better maintenance: [Splitting the store into separate slices](./docs/guides/slices-pattern.md).
- Recommended usage for this unopinionated library: [Flux inspired practice](./docs/guides/flux-inspired-practice.md).
- [Calling actions outside a React event handler in pre-React 18](./docs/guides/event-handler-in-pre-react-18.md).
- [Testing](./docs/guides/testing.md)
- For more, have a look [in the docs folder](./docs/)

## Third-Party Libraries

Some users may want to extend Zustand&#039;s feature set which can be done using third-party libraries made by the community. For information regarding third-party libraries with Zustand, visit [the doc](./docs/integrations/third-party-libraries.md).

## Comparison with other libraries

- [Difference between zustand and other state management libraries for React](https://zustand.docs.pmnd.rs/getting-started/comparison)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[danny-avila/LibreChat]]></title>
            <link>https://github.com/danny-avila/LibreChat</link>
            <guid>https://github.com/danny-avila/LibreChat</guid>
            <pubDate>Wed, 20 Aug 2025 00:04:34 GMT</pubDate>
            <description><![CDATA[Enhanced ChatGPT Clone: Features Agents, DeepSeek, Anthropic, AWS, OpenAI, Responses API, Azure, Groq, o1, GPT-5, Mistral, OpenRouter, Vertex AI, Gemini, Artifacts, AI model switching, message search, Code Interpreter, langchain, DALL-E-3, OpenAPI Actions, Functions, Secure Multi-User Auth, Presets, open-source for self-hosting. Active project.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/danny-avila/LibreChat">danny-avila/LibreChat</a></h1>
            <p>Enhanced ChatGPT Clone: Features Agents, DeepSeek, Anthropic, AWS, OpenAI, Responses API, Azure, Groq, o1, GPT-5, Mistral, OpenRouter, Vertex AI, Gemini, Artifacts, AI model switching, message search, Code Interpreter, langchain, DALL-E-3, OpenAPI Actions, Functions, Secure Multi-User Auth, Presets, open-source for self-hosting. Active project.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 29,249</p>
            <p>Forks: 5,432</p>
            <p>Stars today: 40 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://librechat.ai&quot;&gt;
    &lt;img src=&quot;client/public/assets/logo.svg&quot; height=&quot;256&quot;&gt;
  &lt;/a&gt;
  &lt;h1 align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://librechat.ai&quot;&gt;LibreChat&lt;/a&gt;
  &lt;/h1&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://discord.librechat.ai&quot;&gt; 
    &lt;img
      src=&quot;https://img.shields.io/discord/1086345563026489514?label=&amp;logo=discord&amp;style=for-the-badge&amp;logoWidth=20&amp;logoColor=white&amp;labelColor=000000&amp;color=blueviolet&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://www.youtube.com/@LibreChat&quot;&gt; 
    &lt;img
      src=&quot;https://img.shields.io/badge/YOUTUBE-red.svg?style=for-the-badge&amp;logo=youtube&amp;logoColor=white&amp;labelColor=000000&amp;logoWidth=20&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://docs.librechat.ai&quot;&gt; 
    &lt;img
      src=&quot;https://img.shields.io/badge/DOCS-blue.svg?style=for-the-badge&amp;logo=read-the-docs&amp;logoColor=white&amp;labelColor=000000&amp;logoWidth=20&quot;&gt;
  &lt;/a&gt;
  &lt;a aria-label=&quot;Sponsors&quot; href=&quot;https://github.com/sponsors/danny-avila&quot;&gt;
    &lt;img
      src=&quot;https://img.shields.io/badge/SPONSORS-brightgreen.svg?style=for-the-badge&amp;logo=github-sponsors&amp;logoColor=white&amp;labelColor=000000&amp;logoWidth=20&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;a href=&quot;https://railway.app/template/b5k2mn?referralCode=HI9hWz&quot;&gt;
  &lt;img src=&quot;https://railway.app/button.svg&quot; alt=&quot;Deploy on Railway&quot; height=&quot;30&quot;&gt;
&lt;/a&gt;
&lt;a href=&quot;https://zeabur.com/templates/0X2ZY8&quot;&gt;
  &lt;img src=&quot;https://zeabur.com/button.svg&quot; alt=&quot;Deploy on Zeabur&quot; height=&quot;30&quot;/&gt;
&lt;/a&gt;
&lt;a href=&quot;https://template.cloud.sealos.io/deploy?templateName=librechat&quot;&gt;
  &lt;img src=&quot;https://raw.githubusercontent.com/labring-actions/templates/main/Deploy-on-Sealos.svg&quot; alt=&quot;Deploy on Sealos&quot; height=&quot;30&quot;&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.librechat.ai/docs/translation&quot;&gt;
    &lt;img 
      src=&quot;https://img.shields.io/badge/dynamic/json.svg?style=for-the-badge&amp;color=2096F3&amp;label=locize&amp;query=%24.translatedPercentage&amp;url=https://api.locize.app/badgedata/4cb2598b-ed4d-469c-9b04-2ed531a8cb45&amp;suffix=%+translated&quot; 
      alt=&quot;Translation Progress&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;


# ✨ Features

- 🖥️ **UI &amp; Experience** inspired by ChatGPT with enhanced design and features

- 🤖 **AI Model Selection**:  
  - Anthropic (Claude), AWS Bedrock, OpenAI, Azure OpenAI, Google, Vertex AI, OpenAI Responses API (incl. Azure)
  - [Custom Endpoints](https://www.librechat.ai/docs/quick_start/custom_endpoints): Use any OpenAI-compatible API with LibreChat, no proxy required
  - Compatible with [Local &amp; Remote AI Providers](https://www.librechat.ai/docs/configuration/librechat_yaml/ai_endpoints):
    - Ollama, groq, Cohere, Mistral AI, Apple MLX, koboldcpp, together.ai,
    - OpenRouter, Perplexity, ShuttleAI, Deepseek, Qwen, and more

- 🔧 **[Code Interpreter API](https://www.librechat.ai/docs/features/code_interpreter)**: 
  - Secure, Sandboxed Execution in Python, Node.js (JS/TS), Go, C/C++, Java, PHP, Rust, and Fortran
  - Seamless File Handling: Upload, process, and download files directly
  - No Privacy Concerns: Fully isolated and secure execution

- 🔦 **Agents &amp; Tools Integration**:  
  - **[LibreChat Agents](https://www.librechat.ai/docs/features/agents)**:
    - No-Code Custom Assistants: Build specialized, AI-driven helpers without coding  
    - Flexible &amp; Extensible: Use MCP Servers, tools, file search, code execution, and more  
    - Compatible with Custom Endpoints, OpenAI, Azure, Anthropic, AWS Bedrock, Google, Vertex AI, Responses API, and more
    - [Model Context Protocol (MCP) Support](https://modelcontextprotocol.io/clients#librechat) for Tools

- 🔍 **Web Search**:  
  - Search the internet and retrieve relevant information to enhance your AI context
  - Combines search providers, content scrapers, and result rerankers for optimal results
  - **[Learn More →](https://www.librechat.ai/docs/features/web_search)**

- 🪄 **Generative UI with Code Artifacts**:  
  - [Code Artifacts](https://youtu.be/GfTj7O4gmd0?si=WJbdnemZpJzBrJo3) allow creation of React, HTML, and Mermaid diagrams directly in chat

- 🎨 **Image Generation &amp; Editing**
  - Text-to-image and image-to-image with [GPT-Image-1](https://www.librechat.ai/docs/features/image_gen#1--openai-image-tools-recommended)
  - Text-to-image with [DALL-E (3/2)](https://www.librechat.ai/docs/features/image_gen#2--dalle-legacy), [Stable Diffusion](https://www.librechat.ai/docs/features/image_gen#3--stable-diffusion-local), [Flux](https://www.librechat.ai/docs/features/image_gen#4--flux), or any [MCP server](https://www.librechat.ai/docs/features/image_gen#5--model-context-protocol-mcp)
  - Produce stunning visuals from prompts or refine existing images with a single instruction

- 💾 **Presets &amp; Context Management**:  
  - Create, Save, &amp; Share Custom Presets  
  - Switch between AI Endpoints and Presets mid-chat
  - Edit, Resubmit, and Continue Messages with Conversation branching  
  - [Fork Messages &amp; Conversations](https://www.librechat.ai/docs/features/fork) for Advanced Context control

- 💬 **Multimodal &amp; File Interactions**:  
  - Upload and analyze images with Claude 3, GPT-4.5, GPT-4o, o1, Llama-Vision, and Gemini 📸  
  - Chat with Files using Custom Endpoints, OpenAI, Azure, Anthropic, AWS Bedrock, &amp; Google 🗃️

- 🌎 **Multilingual UI**:  
  - English, 中文, Deutsch, Español, Français, Italiano, Polski, Português Brasileiro
  - Русский, 日本語, Svenska, 한국어, Tiếng Việt, 繁體中文, العربية, Türkçe, Nederlands, עברית

- 🧠 **Reasoning UI**:  
  - Dynamic Reasoning UI for Chain-of-Thought/Reasoning AI models like DeepSeek-R1

- 🎨 **Customizable Interface**:  
  - Customizable Dropdown &amp; Interface that adapts to both power users and newcomers

- 🗣️ **Speech &amp; Audio**:  
  - Chat hands-free with Speech-to-Text and Text-to-Speech  
  - Automatically send and play Audio  
  - Supports OpenAI, Azure OpenAI, and Elevenlabs

- 📥 **Import &amp; Export Conversations**:  
  - Import Conversations from LibreChat, ChatGPT, Chatbot UI  
  - Export conversations as screenshots, markdown, text, json

- 🔍 **Search &amp; Discovery**:  
  - Search all messages/conversations

- 👥 **Multi-User &amp; Secure Access**:
  - Multi-User, Secure Authentication with OAuth2, LDAP, &amp; Email Login Support
  - Built-in Moderation, and Token spend tools

- ⚙️ **Configuration &amp; Deployment**:  
  - Configure Proxy, Reverse Proxy, Docker, &amp; many Deployment options  
  - Use completely local or deploy on the cloud

- 📖 **Open-Source &amp; Community**:  
  - Completely Open-Source &amp; Built in Public  
  - Community-driven development, support, and feedback

[For a thorough review of our features, see our docs here](https://docs.librechat.ai/) 📚

## 🪶 All-In-One AI Conversations with LibreChat

LibreChat brings together the future of assistant AIs with the revolutionary technology of OpenAI&#039;s ChatGPT. Celebrating the original styling, LibreChat gives you the ability to integrate multiple AI models. It also integrates and enhances original client features such as conversation and message search, prompt templates and plugins.

With LibreChat, you no longer need to opt for ChatGPT Plus and can instead use free or pay-per-call APIs. We welcome contributions, cloning, and forking to enhance the capabilities of this advanced chatbot platform.

[![Watch the video](https://raw.githubusercontent.com/LibreChat-AI/librechat.ai/main/public/images/changelog/v0.7.6.gif)](https://www.youtube.com/watch?v=ilfwGQtJNlI)

Click on the thumbnail to open the video☝️

---

## 🌐 Resources

**GitHub Repo:**
  - **RAG API:** [github.com/danny-avila/rag_api](https://github.com/danny-avila/rag_api)
  - **Website:** [github.com/LibreChat-AI/librechat.ai](https://github.com/LibreChat-AI/librechat.ai)

**Other:**
  - **Website:** [librechat.ai](https://librechat.ai)
  - **Documentation:** [librechat.ai/docs](https://librechat.ai/docs)
  - **Blog:** [librechat.ai/blog](https://librechat.ai/blog)

---

## 📝 Changelog

Keep up with the latest updates by visiting the releases page and notes:
- [Releases](https://github.com/danny-avila/LibreChat/releases)
- [Changelog](https://www.librechat.ai/changelog) 

**⚠️ Please consult the [changelog](https://www.librechat.ai/changelog) for breaking changes before updating.**

---

## ⭐ Star History

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://star-history.com/#danny-avila/LibreChat&amp;Date&quot;&gt;
    &lt;img alt=&quot;Star History Chart&quot; src=&quot;https://api.star-history.com/svg?repos=danny-avila/LibreChat&amp;type=Date&amp;theme=dark&quot; onerror=&quot;this.src=&#039;https://api.star-history.com/svg?repos=danny-avila/LibreChat&amp;type=Date&#039;&quot; /&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://trendshift.io/repositories/4685&quot; target=&quot;_blank&quot; style=&quot;padding: 10px;&quot;&gt;
    &lt;img src=&quot;https://trendshift.io/api/badge/repositories/4685&quot; alt=&quot;danny-avila%2FLibreChat | Trendshift&quot; style=&quot;width: 250px; height: 55px;&quot; width=&quot;250&quot; height=&quot;55&quot;/&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://runacap.com/ross-index/q1-24/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot; style=&quot;margin-left: 20px;&quot;&gt;
    &lt;img style=&quot;width: 260px; height: 56px&quot; src=&quot;https://runacap.com/wp-content/uploads/2024/04/ROSS_badge_white_Q1_2024.svg&quot; alt=&quot;ROSS Index - Fastest Growing Open-Source Startups in Q1 2024 | Runa Capital&quot; width=&quot;260&quot; height=&quot;56&quot;/&gt;
  &lt;/a&gt;
&lt;/p&gt;

---

## ✨ Contributions

Contributions, suggestions, bug reports and fixes are welcome!

For new features, components, or extensions, please open an issue and discuss before sending a PR.

If you&#039;d like to help translate LibreChat into your language, we&#039;d love your contribution! Improving our translations not only makes LibreChat more accessible to users around the world but also enhances the overall user experience. Please check out our [Translation Guide](https://www.librechat.ai/docs/translation).

---

## 💖 This project exists in its current state thanks to all the people who contribute

&lt;a href=&quot;https://github.com/danny-avila/LibreChat/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=danny-avila/LibreChat&quot; /&gt;
&lt;/a&gt;

---

## 🎉 Special Thanks

We thank [Locize](https://locize.com) for their translation management tools that support multiple languages in LibreChat.

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://locize.com&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;
    &lt;img src=&quot;https://github.com/user-attachments/assets/d6b70894-6064-475e-bb65-92a9e23e0077&quot; alt=&quot;Locize Logo&quot; height=&quot;50&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[ZuodaoTech/everyone-can-use-english]]></title>
            <link>https://github.com/ZuodaoTech/everyone-can-use-english</link>
            <guid>https://github.com/ZuodaoTech/everyone-can-use-english</guid>
            <pubDate>Wed, 20 Aug 2025 00:04:33 GMT</pubDate>
            <description><![CDATA[人人都能用英语]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/ZuodaoTech/everyone-can-use-english">ZuodaoTech/everyone-can-use-english</a></h1>
            <p>人人都能用英语</p>
            <p>Language: TypeScript</p>
            <p>Stars: 26,630</p>
            <p>Forks: 3,931</p>
            <p>Stars today: 27 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
  &lt;img src=&quot;./enjoy/assets/icon.png&quot; alt=&quot;Clash&quot; width=&quot;128&quot; /&gt;
&lt;/div&gt;

&lt;h3 align=&quot;center&quot;&gt;
AI 是当今世界上最好的外语老师，Enjoy 做 AI 最好的助教。
&lt;/h3&gt;

[![Deploy 1000h website](https://github.com/ZuodaoTech/everyone-can-use-english/actions/workflows/deploy-1000h.yml/badge.svg)](https://github.com/ZuodaoTech/everyone-can-use-english/actions/workflows/deploy-1000h.yml)
[![Test Enjoy App](https://github.com/ZuodaoTech/everyone-can-use-english/actions/workflows/test-enjoy-app.yml/badge.svg)](https://github.com/ZuodaoTech/everyone-can-use-english/actions/workflows/test-enjoy-app.yml)
[![Release Enjoy App](https://github.com/ZuodaoTech/everyone-can-use-english/actions/workflows/release-enjoy-app.yml/badge.svg)](https://github.com/ZuodaoTech/everyone-can-use-english/actions/workflows/release-enjoy-app.yml)
![Latest Version](https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fenjoy.bot%2Fapi%2Fconfig%2Fapp_version&amp;query=%24.version&amp;label=Latest&amp;link=https%3A%2F%2F1000h.org%2Fenjoy-app%2Finstall.html)
![Recording Duration](https://img.shields.io/endpoint?url=https%3A%2F%2Fenjoy.bot%2Fapi%2Fbadges%2Frecordings)

---

## 网页版

Enjoy 网页版已经上线，可访问 [https://enjoy.bot](https://enjoy.bot) 直接使用。

&lt;div align=&quot;center&quot; style=&quot;display:flex;overflow:auto;gap:10px;&quot;&gt;
  &lt;img src=&quot;./enjoy/snapshots/web-audios.jpg&quot; alt=&quot;Audios&quot; width=&quot;300&quot; /&gt;
  &lt;img src=&quot;./enjoy/snapshots/web-add-audio.jpg&quot; alt=&quot;Add Audio&quot; width=&quot;300&quot; /&gt;
  &lt;img src=&quot;./enjoy/snapshots/web-audio-shadow.jpg&quot; alt=&quot;Shadow&quot; width=&quot;300&quot; /&gt;
  &lt;img src=&quot;./enjoy/snapshots/web-audio-assessment.jpg&quot; alt=&quot;Assessment&quot; width=&quot;300&quot; /&gt;
  &lt;img src=&quot;./enjoy/snapshots/web-new-chat.jpg&quot; alt=&quot;New Chat&quot; width=&quot;300&quot; /&gt;
  &lt;img src=&quot;./enjoy/snapshots/web-chat.jpg&quot; alt=&quot;Chat&quot; width=&quot;300&quot; /&gt;
&lt;/div&gt;

---

## 桌面版安装及使用

下载及使用相关说明，请参阅 [文档](https://1000h.org/enjoy-app/)。

## 预览

&lt;div align=&quot;center&quot; style=&quot;display:flex;overflow:auto;&quot;&gt;
  &lt;img src=&quot;./enjoy/snapshots/home.png&quot; alt=&quot;Home&quot; width=&quot;800&quot; /&gt;

  &lt;img src=&quot;./enjoy/snapshots/shadow.png&quot; alt=&quot;Home&quot; width=&quot;800&quot; /&gt;

  &lt;img src=&quot;./enjoy/snapshots/assessment.png&quot; alt=&quot;Home&quot; width=&quot;800&quot; /&gt;

  &lt;img src=&quot;./enjoy/snapshots/document.png&quot; alt=&quot;Home&quot; width=&quot;800&quot; /&gt;

  &lt;img src=&quot;./enjoy/snapshots/chat.png&quot; alt=&quot;Home&quot; width=&quot;800&quot; /&gt;
&lt;/div&gt;

## 桌面版开发

```bash
yarn install
yarn enjoy:start
```

## 相关阅读

### 一千小时（2024）

- [简要说明](https://1000h.org/intro.html)
- [训练任务](https://1000h.org/training-tasks/kick-off.html)
- [语音塑造](https://1000h.org/sounds-of-american-english/0-intro.html)
- [大脑内部](https://1000h.org/in-the-brain/01-inifinite.html)
- [自我训练](https://1000h.org/self-training/00-intro.html)

### 人人都能用英语（2010）

- [简介](./book/README.md)
- [第一章：起点](./book/chapter1.md)
- [第二章：口语](./book/chapter2.md)
- [第三章：语音](./book/chapter3.md)
- [第四章：朗读](./book/chapter4.md)
- [第五章：词典](./book/chapter5.md)
- [第六章：语法](./book/chapter6.md)
- [第七章：精读](./book/chapter7.md)
- [第八章：叮嘱](./book/chapter8.md)
- [后记](./book/end.md)

## 常见问题

请查询 [文档 FAQ](https://1000h.org/enjoy-app/faq.html)。
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[microsoft/data-formulator]]></title>
            <link>https://github.com/microsoft/data-formulator</link>
            <guid>https://github.com/microsoft/data-formulator</guid>
            <pubDate>Wed, 20 Aug 2025 00:04:32 GMT</pubDate>
            <description><![CDATA[🪄 Create rich visualizations with AI]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/microsoft/data-formulator">microsoft/data-formulator</a></h1>
            <p>🪄 Create rich visualizations with AI</p>
            <p>Language: TypeScript</p>
            <p>Stars: 13,352</p>
            <p>Forks: 1,144</p>
            <p>Stars today: 170 stars today</p>
            <h2>README</h2><pre>&lt;h1&gt;
    &lt;img src=&quot;./public/favicon.ico&quot; alt=&quot;Data Formulator icon&quot; width=&quot;28&quot;&gt; &lt;b&gt;Data Formulator: Create Rich Visualizations with AI&lt;/b&gt;
&lt;/h1&gt;

&lt;div&gt;
    
[![arxiv](https://img.shields.io/badge/Paper-arXiv:2408.16119-b31b1b.svg)](https://arxiv.org/abs/2408.16119)&amp;ensp;
[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)&amp;ensp;
[![YouTube](https://img.shields.io/badge/YouTube-white?logo=youtube&amp;logoColor=%23FF0000)](https://youtu.be/3ndlwt0Wi3c)&amp;ensp;
[![build](https://github.com/microsoft/data-formulator/actions/workflows/python-build.yml/badge.svg)](https://github.com/microsoft/data-formulator/actions/workflows/python-build.yml)
[![Discord](https://img.shields.io/badge/discord-chat-green?logo=discord)](https://discord.gg/mYCZMQKYZb)

&lt;/div&gt;

Transform data and create rich visualizations iteratively with AI 🪄. Try Data Formulator now!

Any questions? Ask on the Discord channel! [![Discord](https://img.shields.io/badge/discord-chat-green?logo=discord)](https://discord.gg/mYCZMQKYZb)

&lt;!-- [![Open in GitHub Codespaces](https://github.com/codespaces/badge.svg)](https://codespaces.new/microsoft/data-formulator?quickstart=1) --&gt;

&lt;kbd&gt;
  &lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://codespaces.new/microsoft/data-formulator?quickstart=1&quot; title=&quot;open Data Formulator in GitHub Codespaces&quot;&gt;&lt;img src=&quot;public/data-formulator-screenshot.png&quot;&gt;&lt;/a&gt;
&lt;/kbd&gt;



## News 🔥🔥🔥
- [07-10-2025] Data Formulator 0.2.2: Start with an analysis goal
  - Some key frontend performance updates. 
  - You can start your exploration with a goal, or, tab and see if the agent can recommend some good exploration ideas for you. [Demo](https://github.com/microsoft/data-formulator/pull/176)

- [05-13-2025] Data Formulator 0.2.1.3/4: External Data Loader 
  - We introduced external data loader class to make import data easier. [Readme](https://github.com/microsoft/data-formulator/tree/main/py-src/data_formulator/data_loader) and [Demo](https://github.com/microsoft/data-formulator/pull/155)
    - Current data loaders: MySQL, Azure Data Explorer (Kusto), Azure Blob and Amazon S3 (json, parquet, csv).
    - [07-01-2025] Updated with: Postgresql, mssql.
  - Call for action [link](https://github.com/microsoft/data-formulator/issues/156):
    - Users: let us know which data source you&#039;d like to load data from.
    - Developers: let&#039;s build more data loaders.

- [04-23-2025] Data Formulator 0.2: working with *large* data 📦📦📦
  - Explore large data by:
    1. Upload large data file to the local database (powered by [DuckDB](https://github.com/duckdb/duckdb)).
    2. Use drag-and-drop to specify charts, and Data Formulator dynamically fetches data from the database to create visualizations (with ⚡️⚡️⚡️ speeds).
    3. Work with AI agents: they generate SQL queries to transform the data to create rich visualizations!
    4. Anchor the result / follow up / create a new branch / join tables; let&#039;s dive deeper. 
  - Checkout the demos at [[https://github.com/microsoft/data-formulator/releases/tag/0.2]](https://github.com/microsoft/data-formulator/releases/tag/0.2)
  - Improved overall system performance, and enjoy the updated derive concept functionality.

- [03-20-2025] Data Formulator 0.1.7: Anchoring ⚓︎
  - Anchor an intermediate dataset, so that followup data analysis are built on top of the anchored data, not the original one.
  - Clean a data and work with only the cleaned data; create a subset from the original data or join multiple data, and then go from there. AI agents will be less likely to get confused and work faster. ⚡️⚡️
  - Check out the demos at [[https://github.com/microsoft/data-formulator/releases/tag/0.1.7]](https://github.com/microsoft/data-formulator/releases/tag/0.1.7)
  - Don&#039;t forget to update Data Formulator to test it out!

- [02-20-2025] Data Formulator 0.1.6 released! 
  - Now supports working with multiple datasets at once! Tell Data Formulator which data tables you would like to use in the encoding shelf, and it will figure out how to join the tables to create a visualization to answer your question. 🪄
  - Checkout the demo at [[https://github.com/microsoft/data-formulator/releases/tag/0.1.6]](https://github.com/microsoft/data-formulator/releases/tag/0.1.6).
  - Update your Data Formulator to the latest version to play with the new features.

- [02-12-2025] More models supported now!
  - Now supports OpenAI, Azure, Ollama, and Anthropic models (and more powered by [LiteLLM](https://github.com/BerriAI/litellm));
  - Models with strong code generation and instruction following capabilities are recommended (gpt-4o, claude-3-5-sonnet etc.);
  - You can store API keys in `api-keys.env` to avoid typing them every time (see template `api-keys.env.template`).
  - Let us know which models you have good/bad experiences with, and what models you would like to see supported! [[comment here]](https://github.com/microsoft/data-formulator/issues/49)

- [11-07-2024] Minor fun update: data visualization challenges!
  - We added a few visualization challenges with the sample datasets. Can you complete them all? [[try them out!]](https://github.com/microsoft/data-formulator/issues/53#issue-2641841252)
  - Comment in the issue when you did, or share your results/questions with others! [[comment here]](https://github.com/microsoft/data-formulator/issues/53)

- [10-11-2024] Data Formulator python package released! 
  - You can now install Data Formulator using Python and run it locally, easily. [[check it out]](#get-started).
  - Our Codespaces configuration is also updated for fast start up ⚡️. [[try it now!]](https://codespaces.new/microsoft/data-formulator?quickstart=1)
  - New experimental feature: load an image or a messy text, and ask AI to parse and clean it for you(!). [[demo]](https://github.com/microsoft/data-formulator/pull/31#issuecomment-2403652717)
  
- [10-01-2024] Initial release of Data Formulator, check out our [[blog]](https://www.microsoft.com/en-us/research/blog/data-formulator-exploring-how-ai-can-help-analysts-create-rich-data-visualizations/) and [[video]](https://youtu.be/3ndlwt0Wi3c)!

## Overview

**Data Formulator** is an application from Microsoft Research that uses large language models to transform data, expediting the practice of data visualization.

Data Formulator is an AI-powered tool for analysts to iteratively create rich visualizations. Unlike most chat-based AI tools where users need to describe everything in natural language, Data Formulator combines *user interface interactions (UI)* and *natural language (NL) inputs* for easier interaction. This blended approach makes it easier for users to describe their chart designs while delegating data transformation to AI. 

## Get Started

Play with Data Formulator with one of the following options:

- **Option 1: Install via Python PIP**
  
  Use Python PIP for an easy setup experience, running locally (recommend: install it in a virtual environment).
  
  ```bash
  # install data_formulator
  pip install data_formulator

  # start data_formulator
  data_formulator 
  
  # alternatively, you can run data formulator with this command
  python -m data_formulator
  ```

  Data Formulator will be automatically opened in the browser at [http://localhost:5000](http://localhost:5000).

  *Update: you can specify the port number (e.g., 8080) by `python -m data_formulator --port 8080` if the default port is occupied.*

- **Option 2: Codespaces (5 minutes)**
  
  You can also run Data Formulator in Codespaces; we have everything pre-configured. For more details, see [CODESPACES.md](CODESPACES.md).
  
  [![Open in GitHub Codespaces](https://github.com/codespaces/badge.svg)](https://codespaces.new/microsoft/data-formulator?quickstart=1)

- **Option 3: Working in the developer mode**
  
  You can build Data Formulator locally if you prefer full control over your development environment and the ability to customize the setup to your specific needs. For detailed instructions, refer to [DEVELOPMENT.md](DEVELOPMENT.md).


## Using Data Formulator

Once you&#039;ve completed the setup using either option, follow these steps to start using Data Formulator:

### The basics of data visualization
* Provide OpenAI keys and select a model (GPT-4o suggested) and choose a dataset.
* Choose a chart type, and then drag-and-drop data fields to chart properties (x, y, color, ...) to specify visual encodings.

https://github.com/user-attachments/assets/0fbea012-1d2d-46c3-a923-b1fc5eb5e5b8


### Create visualization beyond the initial dataset (powered by 🤖)
* You can type names of **fields that do not exist in current data** in the encoding shelf:
    - this tells Data Formulator that you want to create visualizations that require computation or transformation from existing data,
    - you can optionally provide a natural language prompt to explain and clarify your intent (not necessary when field names are self-explanatory).
* Click the **Formulate** button.
    - Data Formulator will transform data and instantiate the visualization based on the encoding and prompt.
* Inspect the data, chart and code.
* To create a new chart based on existing ones, follow up in natural language:
    - provide a follow up prompt (e.g., *``show only top 5!&#039;&#039;*),
    - you may also update visual encodings for the new chart.

https://github.com/user-attachments/assets/160c69d2-f42d-435c-9ff3-b1229b5bddba

https://github.com/user-attachments/assets/c93b3e84-8ca8-49ae-80ea-f91ceef34acb

Repeat this process as needed to explore and understand your data. Your explorations are trackable in the **Data Threads** panel. 

## Developers&#039; Guide

Follow the [developers&#039; instructions](DEVELOPMENT.md) to build your new data analysis tools on top of Data Formulator.

## Research Papers
* [Data Formulator 2: Iteratively Creating Rich Visualizations with AI](https://arxiv.org/abs/2408.16119)

```
@article{wang2024dataformulator2iteratively,
      title={Data Formulator 2: Iteratively Creating Rich Visualizations with AI}, 
      author={Chenglong Wang and Bongshin Lee and Steven Drucker and Dan Marshall and Jianfeng Gao},
      year={2024},
      booktitle={ArXiv preprint arXiv:2408.16119},
}
```

* [Data Formulator: AI-powered Concept-driven Visualization Authoring](https://arxiv.org/abs/2309.10094)

```
@article{wang2023data,
  title={Data Formulator: AI-powered Concept-driven Visualization Authoring},
  author={Wang, Chenglong and Thompson, John and Lee, Bongshin},
  journal={IEEE Transactions on Visualization and Computer Graphics},
  year={2023},
  publisher={IEEE}
}
```


## Contributing

This project welcomes contributions and suggestions. Most contributions require you to
agree to a Contributor License Agreement (CLA) declaring that you have the right to,
and actually do, grant us the rights to use your contribution. For details, visit
https://cla.microsoft.com.

When you submit a pull request, a CLA-bot will automatically determine whether you need
to provide a CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the
instructions provided by the bot. You will only need to do this once across all repositories using our CLA.

This project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/).
For more information see the [Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/)
or contact [opencode@microsoft.com](mailto:opencode@microsoft.com) with any additional questions or comments.

## Trademarks

This project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft 
trademarks or logos is subject to and must follow 
[Microsoft&#039;s Trademark &amp; Brand Guidelines](https://www.microsoft.com/en-us/legal/intellectualproperty/trademarks/usage/general).
Use of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship.
Any use of third-party trademarks or logos are subject to those third-party&#039;s policies.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[strapi/strapi]]></title>
            <link>https://github.com/strapi/strapi</link>
            <guid>https://github.com/strapi/strapi</guid>
            <pubDate>Wed, 20 Aug 2025 00:04:31 GMT</pubDate>
            <description><![CDATA[🚀 Strapi is the leading open-source headless CMS. It’s 100% JavaScript/TypeScript, fully customizable, and developer-first.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/strapi/strapi">strapi/strapi</a></h1>
            <p>🚀 Strapi is the leading open-source headless CMS. It’s 100% JavaScript/TypeScript, fully customizable, and developer-first.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 69,158</p>
            <p>Forks: 8,873</p>
            <p>Stars today: 38 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://strapi.io/#gh-light-mode-only&quot;&gt;
    &lt;img src=&quot;https://strapi.io/assets/strapi-logo-dark.svg&quot; width=&quot;318px&quot; alt=&quot;Strapi logo&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://strapi.io/#gh-dark-mode-only&quot;&gt;
    &lt;img src=&quot;https://strapi.io/assets/strapi-logo-light.svg&quot; width=&quot;318px&quot; alt=&quot;Strapi logo&quot; /&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;h3 align=&quot;center&quot;&gt;Open-source headless CMS, self-hosted or Cloud you’re in control.&lt;/h3&gt;
&lt;p align=&quot;center&quot;&gt;The leading open-source headless CMS, 100% JavaScript/TypeScript, flexible and fully customizable.&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://cloud.strapi.io/signups?source=github1&quot;&gt;Cloud&lt;/a&gt; · &lt;a href=&quot;https://strapi.io/demo?utm_campaign=Growth-Experiments&amp;utm_source=strapi%2Fstrapi%20README.md&quot;&gt;Try live demo&lt;/a&gt;&lt;/p&gt;
&lt;br /&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.npmjs.org/package/@strapi/strapi&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/npm/v/@strapi/strapi/latest.svg&quot; alt=&quot;NPM Version&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/strapi/strapi/actions/workflows/tests.yml&quot;&gt;
    &lt;img src=&quot;https://github.com/strapi/strapi/actions/workflows/tests.yml/badge.svg?branch=main&quot; alt=&quot;Tests&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://discord.strapi.io&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/discord/811989166782021633?label=Discord&quot; alt=&quot;Strapi on Discord&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/strapi/strapi/actions/workflows/nightly.yml&quot;&gt;
    &lt;img src=&quot;https://github.com/strapi/strapi/actions/workflows/nightly.yml/badge.svg&quot; alt=&quot;Strapi Nightly Release Build Status&quot; /&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;br&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://strapi.io&quot;&gt;
    &lt;img src=&quot;https://raw.githubusercontent.com/strapi/strapi/main/public/assets/admin-demo.gif&quot; alt=&quot;Administration panel&quot; /&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;br&gt;

Strapi Community Edition is a free and open-source headless CMS enabling you to manage any content, anywhere.

- **Self-hosted or Cloud**: You can host and scale Strapi projects the way you want. You can save time by deploying to [Strapi Cloud](https://cloud.strapi.io/signups?source=github1) or deploy to the hosting platform you want\*\*: AWS, Azure, Google Cloud, DigitalOcean.
- **Modern Admin Panel**: Elegant, entirely customizable and a fully extensible admin panel.
- **Multi-database support**: You can choose the database you prefer: PostgreSQL, MySQL, MariaDB, and SQLite.
- **Customizable**: You can quickly build your logic by fully customizing APIs, routes, or plugins to fit your needs perfectly.
- **Blazing Fast and Robust**: Built on top of Node.js and TypeScript, Strapi delivers reliable and solid performance.
- **Front-end Agnostic**: Use any front-end framework (React, Next.js, Vue, Angular, etc.), mobile apps or even IoT.
- **Secure by default**: Reusable policies, CORS, CSP, P3P, Xframe, XSS, and more.
- **Powerful CLI**: Scaffold projects and APIs on the fly.

## Getting Started

&lt;a href=&quot;https://docs.strapi.io/developer-docs/latest/getting-started/quick-start.html&quot; target=&quot;_blank&quot;&gt;Read the Getting Started tutorial&lt;/a&gt; or follow the steps below:

### ⏳ Installation

Install Strapi with this **Quickstart** command to create a Strapi project instantly:

- (Use **yarn** to install the Strapi project (recommended). [Install yarn with these docs](https://yarnpkg.com/lang/en/docs/install/).)

```bash
yarn create strapi
```

**or**

- (Using npx to install the Strapi project.)

```bash
npx create-strapi@latest
```

This command generates a brand new project with the default features (authentication, permissions, content management, content type builder &amp; file upload).

Enjoy 🎉

### 🖐 Requirements

Complete installation requirements can be found in the documentation under &lt;a href=&quot;https://docs.strapi.io/developer-docs/latest/setup-deployment-guides/deployment.html&quot;&gt;Installation Requirements&lt;/a&gt;.

**Supported operating systems**:

| OS              | Recommended | Minimum    |
| --------------- | ----------- | ---------- |
| Ubuntu          | 24.04       | LTS        |
| Debian          | 11          | LTS        |
| RHEL            | 9           | LTS        |
| macOS           | 14          | 12         |
| Windows Desktop | 11          | 10         |
| Windows Server  | No Support  | No Support |
| Docker          | N/A         | N/A        |

(Please note that Strapi may work on other operating systems, but these are not tested nor officially supported at this time.)

**Node:**

Strapi only supports maintenance and LTS versions of Node.js. Please refer to the &lt;a href=&quot;https://nodejs.org/en/about/releases/&quot;&gt;Node.js release schedule&lt;/a&gt; for more information. NPM versions installed by default with Node.js are supported. Generally it&#039;s recommended to use yarn over npm where possible.

| Strapi Version  | Recommended | Minimum |
| --------------- | ----------- | ------- |
| 5.0.0 and up    | 20.x        | 18.x    |
| 4.14.5 and up   | 20.x        | 18.x    |
| 4.11.0 and up   | 18.x        | 16.x    |
| 4.3.9 to 4.10.x | 18.x        | 14.x    |
| 4.0.x to 4.3.8  | 16.x        | 14.x    |

**Database:**

| Database   | Recommended | Minimum |
| ---------- | ----------- | ------- |
| MySQL      | 8.0         | 8.0     |
| MariaDB    | 11.2        | 10.3    |
| PostgreSQL | 16.0        | 14.0    |
| SQLite     | 3           | 3       |

**We recommend always using the latest version of Strapi stable to start your new projects**.

## Features

- **Content Types Builder**: Build the most flexible publishing experience for your content managers, by giving them the freedom to create any page on the go with [fields](https://docs.strapi.io/user-docs/content-manager/writing-content#filling-up-fields), components and [Dynamic Zones](https://docs.strapi.io/user-docs/content-manager/writing-content#dynamic-zones).
- **Media Library**: Upload your images, videos, audio or documents to the media library. Easily find the right asset, edit and reuse it.
- **Internationalization**: The Internationalization (i18n) plugin allows Strapi users to create, manage and distribute localized content in different languages, called &quot;locales&quot;
- **Role Based Access Control**: Create an unlimited number of custom roles and permissions for admin and end users.
- **GraphQL or REST**: Consume the API using REST or GraphQL

You can unlock additional features such as SSO, Audit Logs, Review Workflows in [Strapi Cloud](https://cloud.strapi.io/login?source=github1) or [Strapi Enterprise](https://strapi.io/enterprise?source=github1).

**[See more on our website](https://strapi.io/overview)**.

## Contributing

Please read our [Contributing Guide](./CONTRIBUTING.md) before submitting a Pull Request to the project.

## Community support

For general help using Strapi, please refer to [the official Strapi documentation](https://docs.strapi.io). For additional help, you can use one of these channels to ask a question:

- [Discord](https://discord.strapi.io) (For live discussion with the Community and Strapi team)
- [GitHub](https://github.com/strapi/strapi) (Bug reports, Contributions)
- [Community Forum](https://forum.strapi.io) (Questions and Discussions)
- [Feedback section](https://feedback.strapi.io) (Roadmap, Feature requests)
- [Twitter](https://twitter.com/strapijs) (Get the news fast)
- [Facebook](https://www.facebook.com/Strapi-616063331867161)
- [YouTube Channel](https://www.youtube.com/strapi) (Learn from Video Tutorials)

## Migration

Follow our [migration guides](https://docs.strapi.io/developer-docs/latest/update-migration-guides/migration-guides.html) on the documentation to keep your projects up-to-date.

## Roadmap

Check out our [roadmap](https://feedback.strapi.io) to get informed of the latest features released and the upcoming ones. You may also give us insights and vote for a specific feature.

## Documentation

See our dedicated [repository](https://github.com/strapi/documentation) for the Strapi documentation, or view our documentation live:

- [Developer docs](https://docs.strapi.io/developer-docs/latest/getting-started/introduction.html)
- [User guide](https://docs.strapi.io/user-docs/latest/getting-started/introduction.html)
- [Cloud guide](https://docs.strapi.io/cloud/intro)

## Try live demo

See for yourself what&#039;s under the hood by getting access to a [hosted Strapi project](https://strapi.io/demo) with sample data.

## License

See the [LICENSE](./LICENSE) file for licensing information.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[MotiaDev/motia]]></title>
            <link>https://github.com/MotiaDev/motia</link>
            <guid>https://github.com/MotiaDev/motia</guid>
            <pubDate>Wed, 20 Aug 2025 00:04:30 GMT</pubDate>
            <description><![CDATA[Modern Backend Framework that unifies APIs, background jobs, workflows, and AI agents into a single cohesive system with built-in observability and state management.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/MotiaDev/motia">MotiaDev/motia</a></h1>
            <p>Modern Backend Framework that unifies APIs, background jobs, workflows, and AI agents into a single cohesive system with built-in observability and state management.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 6,693</p>
            <p>Forks: 515</p>
            <p>Stars today: 262 stars today</p>
            <h2>README</h2><pre>&lt;a href=&quot;https://motia.dev&quot;&gt;
  &lt;img src=&quot;assets/github-readme-banner.png&quot; alt=&quot;Motia Banner&quot; width=&quot;100%&quot;&gt;
&lt;/a&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://trendshift.io/repositories/14032&quot; style=&quot;margin-right:8px;&quot;&gt;
    &lt;img src=&quot;https://trendshift.io/api/badge/repositories/14032&quot; alt=&quot;Motia&quot; style=&quot;width: 250px; height: 55px; margin-right:8px;&quot; width=&quot;250&quot; height=&quot;55&quot;/&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://vercel.com/blog/summer-2025-oss-program#motia&quot; target=&quot;_blank&quot; style=&quot;margin-left:8px;&quot;&gt;
    &lt;img alt=&quot;Vercel OSS Program&quot; src=&quot;https://vercel.com/oss/program-badge.svg&quot; style=&quot;width: 250px; height: 55px; margin-left:8px;&quot; width=&quot;250&quot; height=&quot;55&quot;/&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;strong&gt;🔥 The Unified Backend Framework That Eliminates Runtime Fragmentation 🔥&lt;/strong&gt;
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;em&gt;APIs, background jobs, workflows, and AI agents in one system. JavaScript, TypeScript, Python, and more in one codebase.&lt;/em&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.npmjs.com/package/motia&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/npm/v/motia?style=flat&amp;logo=npm&amp;logoColor=white&amp;color=CB3837&amp;labelColor=000000&quot; alt=&quot;npm version&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/MotiaDev/motia/blob/main/LICENSE&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/license-MIT-green?style=flat&amp;logo=opensourceinitiative&amp;logoColor=white&amp;labelColor=000000&quot; alt=&quot;license&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/MotiaDev/motia&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/stars/MotiaDev/motia?style=flat&amp;logo=github&amp;logoColor=white&amp;color=yellow&amp;labelColor=000000&quot; alt=&quot;GitHub stars&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://twitter.com/motiadev&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/Follow-@motiadev-1DA1F2?style=flat&amp;logo=twitter&amp;logoColor=white&amp;labelColor=000000&quot; alt=&quot;Twitter Follow&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://discord.gg/motia&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/discord/1322278831184281721?style=flat&amp;logo=discord&amp;logoColor=white&amp;color=5865F2&amp;label=Discord&amp;labelColor=000000&quot; alt=&quot;Discord&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.motia.dev/manifesto&quot;&gt;💡 Motia Manifesto&lt;/a&gt; •
  &lt;a href=&quot;https://www.motia.dev/docs/getting-started/quick-start&quot;&gt;🚀 Quick Start&lt;/a&gt; •
  &lt;a href=&quot;https://www.motia.dev/docs/concepts/steps/defining-steps&quot;&gt;📋 Defining Steps&lt;/a&gt; •
  &lt;a href=&quot;https://www.motia.dev/docs&quot;&gt;📚 Docs&lt;/a&gt;
&lt;/p&gt;

---

## 🎯 What is Motia?

**Motia solves backend fragmentation.** 

Modern software engineering is splintered – APIs live in one framework, background jobs in another, queues have their own tooling, and AI agents are springing up in yet more isolated runtimes. **This fragmentation demands a unified system.**

Motia unifies APIs, background jobs, workflows, and AI agents into a **single coherent system** with shared observability and developer experience. Similar to how React simplified frontend development where everything is a component, **Motia simplifies backend development where everything is a Step**.

Write **JavaScript, TypeScript, Python, and more** in the same workflow. **What used to take 5 frameworks to build now comes out of the box with Motia.**

[![Motia combines APIs, background queues, and AI agents into one system](assets/Motia_Github_Repository_GIF.gif)](https://motia.dev)

## 🚀 Quickstart

Get Motia project up and running in **under 60 seconds**:

### 1. Bootstrap a New Motia Project

```bash
npx motia@latest create -i   # runs the interactive terminal
```

Follow the prompts to pick a template, project name, and language.

### 2. Start the Workbench

Inside your new project folder, launch the dev server:

```bash
npx motia dev # ➜ http://localhost:3000
```

This spins up the Motia Workbench – a local UI for building, testing &amp; observing your backend in real-time.

![motia-terminal](assets/motia-terminal.gif)

### 3. Hit Your First Endpoint

Open a new terminal tab and run:

```bash
curl http://localhost:3000/default
```

You should see the JSON response:

```json
{ &quot;message&quot;: &quot;Hello World from Motia!&quot; }
```

### 4. Explore the Workbench UI

![new-workbench](assets/new-workbench.png)
The Workbench is your command centre:

- **🌊 Flows** – Visualise how your Steps connect.
- **🔌 Endpoints** – Test APIs with one click and stream results live.
- **👁️ Traces** – Inspect end-to-end traces of every execution.
- **📊 Logs** – View structured logs grouped by trace.
- **🏪 State** – Inspect the key-value store across Steps.

---

🎉 **That&#039;s it!** You now have a production-ready backend with everything you need:

- ✅ **REST API endpoints** with automatic validation and error handling
- ✅ **Visual debugger** with real-time flow inspection and tracing  
- ✅ **Built-in observability** - logs, traces, and state visualization
- ✅ **Hot-reload** for instant feedback during development
- ✅ **Event-driven architecture** ready for complex workflows
- ✅ **Multi-language support** - add Python, Javascript, or other languages anytime
- ✅ **Zero configuration** - no infrastructure setup required


&gt; 💡 **Want a more detailed walkthrough?**  
&gt; Check out the [Quick Start guide in our docs](https://www.motia.dev/docs/getting-started/quick-start) for step-by-step instructions and more examples.

### 🧱 The Step Philosophy

**Everything is a Step** – similar to how React made everything a component, Motia makes every backend pattern a Step:

- **🎯 Steps Represent Distinct Entry Points**: APIs, background jobs, scheduled tasks, and AI agents – all unified under a single primitive
- **🌍 Any Language, One Workflow**: Write **JavaScript, TypeScript, Python, and more** in the same project. Use Python for AI agents, TypeScript for APIs, JavaScript for workflows – all sharing state effortlessly  
- **⚡ Enterprise-Grade, Out of the Box**: Get **event-driven architecture, fault tolerance, observability, and real-time streaming** without complex infrastructure setup
- **👁️ Automatic Observability**: Complete end-to-end tracing, structured logging, and state visualization. **No setup required** – works in both local development and production
- **🌊 Composable Workflows**: Connect Steps by emitting and subscribing to events. Build complex, multi-stage processes with simple, declarative code
- **🏪 Unified State Management**: All Steps share a traced key-value store. Every `get`, `set`, and `delete` is automatically tracked across your entire workflow
- **🔄 Built-in Fault Tolerance**: Retry mechanisms, error handling, and queue infrastructure abstracted away – focus on business logic, not infrastructure

---

## 🚧 The Fragmentation Problem

Today, backend engineers face several recurring challenges:

- **🧩 Fragmented Systems**: APIs in Express, background jobs in Celery/BullMQ, AI agents in LangChain – each with different deployment, debugging, and scaling patterns
- **🌐 Multi-Language Barriers**: AI tools in Python, business logic in TypeScript – forcing teams to choose between cutting-edge tech and their existing skillset  
- **🔍 Observability Gaps**: Tracing requests across multiple frameworks and runtimes is complex and often incomplete
- **⚖️ Scalability vs. Velocity**: Choose between fast development (monolith) or proper scaling (microservices complexity)
- **🚀 Deployment Complexity**: Multiple runtimes mean multiple deploy targets, configs, and failure points

**The rapid advancement of AI has made this worse** – many cutting-edge AI tools are only available in specific languages, forcing companies to abandon their existing tech stack or miss out on breakthrough technologies.

---

## ✅ The Motia Solution

**Motia removes this limitation** by unifying your entire backend into a single runtime where everything is a **Step**:

### 🎯 **Unified vs. Fragmented**
- **Before**: APIs in Express, jobs in BullMQ, AI agents in LangChain
- **After**: All backend patterns as composable Steps with shared state and observability

### 🌐 **True Multi-Language Support**  
- **Before**: Choose between Python AI tools OR your existing TypeScript stack
- **After**: Each Step can be written in any language while sharing common state – use Python for AI, TypeScript for APIs, JavaScript for workflows

### 🔍 **Built-in Observability**
- **Before**: Complex tracing setups across multiple frameworks
- **After**: Complete observability toolkit available in both cloud and local environments out of the box

### ⚖️ **Scalability Without Complexity**
- **Before**: Choose between monolith simplicity or microservice complexity  
- **After**: Each Step scales independently, avoiding bottlenecks while maintaining development velocity

### 🚀 **One-Click Everything**
- **Before**: Multiple deployment pipelines, configs, and failure points
- **After**: Single deployable with atomic blue/green deployments and instant rollbacks

| **Traditional Stack**       | **Motia**                               |
| --------------------------- | --------------------------------------- |
| Multiple deployment targets | **Single unified deployment**           |
| Fragmented observability    | **End-to-end tracing**                  |
| Language silos              | **JavaScript, TypeScript, Python, etc** |
| Context-switching overhead  | **Single intuitive model**              |
| Manual error handling       | **Automatic retries &amp; fault tolerance** |
| Complex infrastructure      | **Zero-config queue &amp; streaming**       |

---

## 🔧 Supported Step Types

| Type        | Trigger               | Use Case                              |
| ----------- | --------------------- | ------------------------------------- |
| **`api`**   | HTTP Request          | Expose REST endpoints                 |
| **`event`** | Emitted Topics        | React to internal or external events  |
| **`cron`**  | Scheduled Time (cron) | Automate recurring jobs               |
| **`noop`**  | None                  | Placeholder for manual/external tasks |

---

### 🤔 How it Works

**One framework. All backend patterns.** Motia replaces your entire backend stack with a single, event-driven system:

**🚀 Replace Multiple Frameworks:**
- **Instead of**: Express/Nest.js + BullMQ + Temporal + LangChain + custom observability
- **Use**: Motia Steps with automatic observability, queuing, and multi-language support

**⚡ Simple but Powerful:**
- **Need a REST API?** Create an `api` step → instant HTTP endpoint with validation, tracing, and error handling
- **Need background processing?** Emit an event → `event` steps pick it up asynchronously with built-in retries and fault tolerance  
- **Need scheduled jobs?** Use a `cron` step → automatic scheduling with full observability
- **Need AI agents?** Write Python steps with access to the entire ecosystem (PyTorch, transformers, etc.) while sharing state with TypeScript APIs

**🔄 Event-Driven by Design:**
Each Step can emit events that trigger other Steps, creating powerful workflows that automatically handle:
- **Parallel processing** across multiple languages
- **Fault tolerance** with automatic retries  
- **Real-time updates** streamed to clients
- **Complete traceability** of every operation

**The result?** What used to require 5+ frameworks, complex deployment pipelines, and weeks of infrastructure setup now works out of the box with Motia.

## ⚡ Core Concepts

The **Step** is Motia&#039;s core primitive. The following concepts are deeply integrated with Steps to help you build powerful, complex, and scalable backends:

### 🔑 Steps &amp; Step Types

Understand the three ways Steps are triggered:

- **HTTP (`api`)** – Build REST/GraphQL endpoints with zero boilerplate.
- **Events (`event`)** – React to internal or external events emitted by other steps.
- **Cron (`cron`)** – Schedule recurring jobs with a familiar cron syntax.

### 📣 Emit &amp; Subscribe (Event-Driven Workflows)

Steps talk to each other by **emitting** and **subscribing** to topics. This decouples producers from consumers and lets you compose complex workflows with simple, declarative code.

### 🏪 State Management

All steps share a unified key-value state store. Every `get`, `set`, and `delete` is automatically traced so you always know when and where your data changed.

### 📊 Structured Logging

Motia provides structured, JSON logs correlated with trace IDs and step names. Search and filter your logs without regex hassle.

### 📡 Streams: Real-time Messaging

Push live updates from long-running or asynchronous workflows to clients without polling. Perfect for dashboards, progress indicators, and interactive AI agents.

### 👁️ End-to-End Observability with Traces

Every execution generates a full trace, capturing step timelines, state operations, emits, stream calls, and logs. Visualise everything in the Workbench&#039;s Traces UI and debug faster.

---

## 🗂 Production-Ready Examples

**⭐ Explore 20+ sophisticated examples** demonstrating real-world use cases from AI agents to enterprise workflows: **[View All Examples →](https://github.com/MotiaDev/motia-examples)**

### 🤖 **AI Agents &amp; Workflows**

| **AI Deep Research Agent** | **Finance Analysis Agent** | **PDF RAG System** |
|----------------------------|----------------------------|-------------------|
| Comprehensive web research with iterative analysis and synthesis | Real-time financial data + AI insights for investment analysis | Document processing with Docling, Weaviate, and OpenAI RAG |
| [View Example →](https://github.com/MotiaDev/motia-examples/tree/main/examples/ai-deep-research-agent) | [View Example →](https://github.com/MotiaDev/motia-examples/tree/main/examples/finance-agent) | [View Example →](https://github.com/MotiaDev/motia-examples/tree/main/examples/rag-docling-weaviate) |

| **GitHub PR Manager** | **Gmail Intelligence** | **Vision Analysis** |
|-----------------------|------------------------|-------------------|
| AI-powered PR classification, labeling, and reviewer assignment | Smart email analysis, auto-responses, and Discord summaries | Multi-modal conversation analysis with visual understanding |
| [View Example →](https://github.com/MotiaDev/motia-examples/tree/main/examples/github-integration-workflow) | [View Example →](https://github.com/MotiaDev/motia-examples/tree/main/examples/gmail-workflow) | [View Example →](https://github.com/MotiaDev/motia-examples/tree/main/examples/conversation-analyzer-vision) |

### 🌊 **Real-Time Streaming &amp; Chat**

| **Streaming AI Chatbot** | **Real-Time Chat App** | **Live Health Monitor** |
|--------------------------|------------------------|------------------------|
| Token-by-token AI responses with WebSocket streaming | Multi-user chat with real-time message processing and moderation | Production uptime monitoring with intelligent Discord alerts |
| [View Example →](https://github.com/MotiaDev/motia-examples/tree/main/examples/streaming-ai-chatbot) | [View Example →](https://github.com/MotiaDev/motia-examples/tree/main/examples/realtime-chat-application) | [View Example →](https://github.com/MotiaDev/motia-examples/tree/main/examples/realtime-uptime-monitor) |

### ⚡ **Parallel Processing &amp; Workflows** 

| **Parallel Execution Demo** | **Content Automation** | **Task Management** |
|-----------------------------|------------------------|-------------------|
| Concurrent task processing with workload distribution | Blog-to-Tweet automation with AI content optimization | Trello workflow automation with AI task validation |
| [View Example →](https://github.com/MotiaDev/motia-examples/tree/main/examples/motia-parallel-execution) | [View Example →](https://github.com/MotiaDev/motia-examples/tree/main/examples/blog-to-tweet-automation) | [View Example →](https://github.com/MotiaDev/motia-examples/tree/main/examples/trello-flow) |

### 🎯 **Key Features Demonstrated:**
- ✅ **Multi-Language Workflows** - JavaScript, TypeScript, Python working together
- ✅ **Real-Time Streaming** - WebSocket integration with live updates  
- ✅ **AI Integration** - OpenAI, Claude, vision models, and custom AI workflows
- ✅ **Event-Driven Architecture** - Complex workflows with automatic retry and fault tolerance
- ✅ **Production Monitoring** - Health checks, uptime monitoring, and intelligent alerting
- ✅ **Parallel Processing** - Concurrent execution and workload distribution
- ✅ **Enterprise Integration** - GitHub, Gmail, Trello, Discord, and social media APIs

**🚀 Each example includes:** Complete source code • Step-by-step tutorials • Production deployment guides • Docker configurations

---

## 🌐 Language Support

Write steps in your preferred language:

| Language       | Status         | Example           |
| -------------- | -------------- | ----------------- |
| **JavaScript** | ✅ Stable      | `handler.step.js` |
| **TypeScript** | ✅ Stable      | `handler.step.ts` |
| **Python**     | ✅ Stable      | `handler.step.py` |
| **Ruby**       | 🚧 Beta        | `handler.step.rb` |
| **Go**         | 🔄 Coming Soon | `handler.step.go` |
| **Rust**       | 🔄 Coming Soon | `handler.step.rs` |

---

### 💬 **Get Help**

- **📋 Questions**: Use our [Discord community](https://discord.gg/motia)
- **🐛 Bug Reports**: [GitHub Issues](https://github.com/MotiaDev/motia/issues)
- **📖 Documentation**: [Official Docs](https://motia.dev/docs)
- **📰 Blog**: [Motia Blog](https://blog.motia.dev)
- **🎥 Youtube**: [Motia Youtube](https://www.youtube.com/@motiadev)

### 🤝 **Contributing**

We welcome contributions! Whether it&#039;s:

- 🐛 Bug fixes and improvements
- ✨ New features and step types
- 📚 Documentation and examples
- 🌍 Language support additions
- 🎨 Workbench UI enhancements

Check out our [Contributing Guide](https://github.com/MotiaDev/motia/blob/main/CONTRIBUTING.md) to get started.

---

&lt;div align=&quot;center&quot;&gt;

**🌟 Ready to unify your backend?**

[🚀 **Get Started Now**](https://motia.dev) • [📖 **Read the Docs**](https://motia.dev/docs) • [💬 **Join Discord**](https://discord.com/invite/nJFfsH5d6v)

&lt;/div&gt;

---

&lt;div align=&quot;center&quot;&gt;

[![Star History Chart](https://api.star-history.com/svg?repos=motiadev/motia&amp;type=Date)](https://www.star-history.com/#motiadev/motia&amp;Date)

&lt;sub&gt;Built with ❤️ by the Motia team • **Star us if you find [Motia](https://github.com/orgs/MotiaDev/motia) useful!** ⭐&lt;/sub&gt;

&lt;/div&gt;

### 🚧 Roadmap

We have a public roadmap for Motia, you can view it [here](https://github.com/orgs/MotiaDev/projects/2/views/4).

Feel free to add comments to the issues, or create a new issue if you have a feature request.

| Feature                               | Status  | Link                                                 | Description                            |
| ------------------------------------- | ------- | ---------------------------------------------------- | -------------------------------------- |
| Python Types                          | Planned | [#485](https://github.com/MotiaDev/motia/issues/485) | Add support for Python types           |
| Streams: RBAC                         | Planned | [#495](https://github.com/MotiaDev/motia/issues/495) | Add support for RBAC                   |
| Streams: Workbench UI                 | Planned | [#497](https://github.com/MotiaDev/motia/issues/497) | Add support for Workbench UI           |
| Queue Strategies                      | Planned | [#476](https://github.com/MotiaDev/motia/issues/476) | Add support for Queue Strategies       |
| Reactive Steps                        | Planned | [#477](https://github.com/MotiaDev/motia/issues/477) | Add support for Reactive Steps         |
| Allow cloud configuration             | Planned | [#478](https://github.com/MotiaDev/motia/issues/478) | Add support for cloud configuration    |
| BYOC: Bring your own Cloud: AWS       | Planned | [#479](https://github.com/MotiaDev/motia/issues/479) | Add support for AWS                    |
| Point in time triggers                | Planned | [#480](https://github.com/MotiaDev/motia/issues/480) | Add support for Point in time triggers |
| Workbench plugins                     | Planned | [#481](https://github.com/MotiaDev/motia/issues/481) | 

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[software-mansion/react-native-reanimated]]></title>
            <link>https://github.com/software-mansion/react-native-reanimated</link>
            <guid>https://github.com/software-mansion/react-native-reanimated</guid>
            <pubDate>Wed, 20 Aug 2025 00:04:29 GMT</pubDate>
            <description><![CDATA[React Native's Animated library reimplemented]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/software-mansion/react-native-reanimated">software-mansion/react-native-reanimated</a></h1>
            <p>React Native's Animated library reimplemented</p>
            <p>Language: TypeScript</p>
            <p>Stars: 10,164</p>
            <p>Forks: 1,405</p>
            <p>Stars today: 5 stars today</p>
            <h2>README</h2><pre>&lt;img src=&quot;https://user-images.githubusercontent.com/16062886/117443145-ff868480-af37-11eb-8680-648bccf0d0ce.png&quot; alt=&quot;React Native Reanimated by Software Mansion&quot; width=&quot;100%&quot;&gt;

### Create smooth animations with an excellent developer experience.

&gt; Reanimated 4 is here! Check out our [documentation page](https://docs.swmansion.com/react-native-reanimated/) for more information

### Nightly CI state

[![NPM Reanimated publish nightly](https://github.com/software-mansion/react-native-reanimated/actions/workflows/npm-reanimated-publish-nightly.yml/badge.svg)](https://github.com/software-mansion/react-native-reanimated/actions/workflows/npm-reanimated-publish-nightly.yml)
[![NPM Worklets publish [Nightly]](https://github.com/software-mansion/react-native-reanimated/actions/workflows/npm-worklets-publish-nightly.yml/badge.svg)](https://github.com/software-mansion/react-native-reanimated/actions/workflows/npm-worklets-publish-nightly.yml)
[![Lint clang-tidy [Nightly]](https://github.com/software-mansion/react-native-reanimated/actions/workflows/lint-clang-tidy-nightly.yml/badge.svg)](https://github.com/software-mansion/react-native-reanimated/actions/workflows/lint-clang-tidy-nightly.yml)
[![Reanimated compatibility check](https://github.com/software-mansion/react-native-reanimated/actions/workflows/reanimated-compatibility-check-nightly.yml/badge.svg)](https://github.com/software-mansion/react-native-reanimated/actions/workflows/reanimated-compatibility-check-nightly.yml)
[![Use frameworks Reanimated build check [Nightly]](https://github.com/software-mansion/react-native-reanimated/actions/workflows/use-frameworks-reanimated-build-check-nightly.yml/badge.svg)](https://github.com/software-mansion/react-native-reanimated/actions/workflows/use-frameworks-reanimated-build-check-nightly.yml)
[![React Native nightly Reanimated build check](https://github.com/software-mansion/react-native-reanimated/actions/workflows/react-native-nightly-reanimated-build-check-nightly.yml/badge.svg)](https://github.com/software-mansion/react-native-reanimated/actions/workflows/react-native-nightly-reanimated-build-check-nightly.yml)
[![Expo DevClient build check](https://github.com/software-mansion/react-native-reanimated/actions/workflows/expo-devclient-build-check-nightly.yml/badge.svg)](https://github.com/software-mansion/react-native-reanimated/actions/workflows/expo-devclient-build-check-nightly.yml)
[![Reanimated TypeScript compatibility test](https://github.com/software-mansion/react-native-reanimated/actions/workflows/reanimated-typescript-compatibility-test-nightly.yml/badge.svg)](https://github.com/software-mansion/react-native-reanimated/actions/workflows/reanimated-typescript-compatibility-test-nightly.yml)
[![Windows hosted app Reanimated build check](https://github.com/software-mansion/react-native-reanimated/actions/workflows/windows-hosted-app-reanimated-build-check-nightly.yml/badge.svg)](https://github.com/software-mansion/react-native-reanimated/actions/workflows/windows-hosted-app-reanimated-build-check-nightly.yml)
[![Worklets Bundle Mode build check [Nightly]](https://github.com/software-mansion/react-native-reanimated/actions/workflows/worklets-bundle-mode-build-check-nightly.yml/badge.svg)](https://github.com/software-mansion/react-native-reanimated/actions/workflows/worklets-bundle-mode-build-check-nightly.yml)
[![URL validation](https://github.com/software-mansion/react-native-reanimated/actions/workflows/url-validation-nightly.yml/badge.svg)](https://github.com/software-mansion/react-native-reanimated/actions/workflows/url-validation-nightly.yml)

## Installation

Check out the [installation](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/getting-started/#installation) section of our docs for the detailed installation instructions.

## Compatibility

React Native Reanimated 4.x supports only the [New React Native architecture](https://reactnative.dev/architecture/landing-page) and three latest React Native versions.

If your app still runs on the old architecture, please consider adopting the New Architecture or stay with latest 3.x release.

## Documentation

Check out our dedicated documentation page for info about this library, API reference and more: [https://docs.swmansion.com/react-native-reanimated/](https://docs.swmansion.com/react-native-reanimated/)

## Examples

The source code for the example (showcase) app is under the [`apps/common-app`](https://github.com/software-mansion/react-native-reanimated/blob/main/apps/common-app/) directory.
If you want to play with the API but don&#039;t feel like trying it on a real app, you can run the example project. Check [Example README](apps/fabric-example/README.md) for installation instructions.

## License

Reanimated library is licensed under [The MIT License](LICENSE).

## Credits

This project has been built and is maintained thanks to the support from [Shopify](https://shopify.com), [Expo.io](https://expo.io) and [Software Mansion](https://swmansion.com)

[![shopify](https://avatars1.githubusercontent.com/u/8085?v=3&amp;s=100 &#039;Shopify.com&#039;)](https://shopify.com)
[![expo](https://avatars2.githubusercontent.com/u/12504344?v=3&amp;s=100 &#039;Expo.io&#039;)](https://expo.io)
[![swm](https://logo.swmansion.com/logo?color=white&amp;variant=desktop&amp;width=150&amp;tag=react-native-reanimated-github &#039;Software Mansion&#039;)](https://swmansion.com)

## Community Discord

[Join the Software Mansion Community Discord](https://discord.swmansion.com) to chat about Reanimated or other Software Mansion libraries.

## Reanimated is created by Software Mansion

Since 2012 [Software Mansion](https://swmansion.com) is a software agency with experience in building web and mobile apps. We are Core React Native Contributors and experts in dealing with all kinds of React Native issues. We can help you build your next dream product – [Hire us](https://swmansion.com/contact/projects?utm_source=reanimated&amp;utm_medium=readme).
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
    </channel>
</rss>