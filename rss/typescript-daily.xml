<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for typescript - TypeScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for typescript.</description>
        <lastBuildDate>Sat, 19 Apr 2025 00:04:50 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[docmost/docmost]]></title>
            <link>https://github.com/docmost/docmost</link>
            <guid>https://github.com/docmost/docmost</guid>
            <pubDate>Sat, 19 Apr 2025 00:04:50 GMT</pubDate>
            <description><![CDATA[Docmost is an open-source collaborative wiki and documentation software. It is an open-source alternative to Confluence and Notion.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/docmost/docmost">docmost/docmost</a></h1>
            <p>Docmost is an open-source collaborative wiki and documentation software. It is an open-source alternative to Confluence and Notion.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 14,005</p>
            <p>Forks: 672</p>
            <p>Stars today: 414 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
    &lt;h1&gt;&lt;b&gt;Docmost&lt;/b&gt;&lt;/h1&gt;
    &lt;p&gt;
        Open-source collaborative wiki and documentation software.
        &lt;br /&gt;
        &lt;a href=&quot;https://docmost.com&quot;&gt;&lt;strong&gt;Website&lt;/strong&gt;&lt;/a&gt; | 
        &lt;a href=&quot;https://docmost.com/docs&quot;&gt;&lt;strong&gt;Documentation&lt;/strong&gt;&lt;/a&gt;
    &lt;/p&gt;
&lt;/div&gt;
&lt;br /&gt;

## Getting started

To get started with Docmost, please refer to our [documentation](https://docmost.com/docs).

## Features

- Real-time collaboration
- Diagrams (Draw.io, Excalidraw and Mermaid)
- Spaces
- Permissions management
- Groups
- Comments
- Page history
- Search
- File attachments
- Embeds (Airtable, Loom, Miro and more)
- Translations (10+ languages)

### Screenshots

&lt;p align=&quot;center&quot;&gt;
&lt;img alt=&quot;home&quot; src=&quot;https://docmost.com/screenshots/home.png&quot; width=&quot;70%&quot;&gt;
&lt;img alt=&quot;editor&quot; src=&quot;https://docmost.com/screenshots/editor.png&quot; width=&quot;70%&quot;&gt;
&lt;/p&gt;

### License
Docmost core is licensed under the open-source AGPL 3.0 license.  
Enterprise features are available under an enterprise license (Enterprise Edition).  

All files in the following directories are licensed under the Docmost Enterprise license defined in `packages/ee/License`.
  - apps/server/src/ee
  - apps/client/src/ee
  - packages/ee

### Contributing

See the [development documentation](https://docmost.com/docs/self-hosting/development)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[browserbase/stagehand]]></title>
            <link>https://github.com/browserbase/stagehand</link>
            <guid>https://github.com/browserbase/stagehand</guid>
            <pubDate>Sat, 19 Apr 2025 00:04:49 GMT</pubDate>
            <description><![CDATA[An AI web browsing framework focused on simplicity and extensibility.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/browserbase/stagehand">browserbase/stagehand</a></h1>
            <p>An AI web browsing framework focused on simplicity and extensibility.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 10,419</p>
            <p>Forks: 576</p>
            <p>Stars today: 311 stars today</p>
            <h2>README</h2><pre>&lt;div id=&quot;toc&quot; align=&quot;center&quot;&gt;
  &lt;ul style=&quot;list-style: none&quot;&gt;
    &lt;a href=&quot;https://stagehand.dev&quot;&gt;
      &lt;picture&gt;
        &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://stagehand.dev/logo-dark.svg&quot; /&gt;
        &lt;img alt=&quot;Stagehand&quot; src=&quot;https://stagehand.dev/logo-light.svg&quot; /&gt;
      &lt;/picture&gt;
    &lt;/a&gt;
  &lt;/ul&gt;
&lt;/div&gt;

&lt;p align=&quot;center&quot;&gt;
  The production-ready framework for AI browser automations.&lt;br&gt;
  &lt;a href=&quot;https://docs.stagehand.dev&quot;&gt;Read the Docs&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/browserbase/stagehand/tree/main?tab=MIT-1-ov-file#MIT-1-ov-file&quot;&gt;
    &lt;picture&gt;
      &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://stagehand.dev/api/assets/license?mode=dark&quot; /&gt;
      &lt;img alt=&quot;MIT License&quot; src=&quot;https://stagehand.dev/api/assets/license?mode=light&quot; /&gt;
    &lt;/picture&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://stagehand.dev/slack&quot;&gt;
    &lt;picture&gt;
      &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://stagehand.dev/api/assets/slack?mode=dark&quot; /&gt;
      &lt;img alt=&quot;Slack Community&quot; src=&quot;https://stagehand.dev/api/assets/slack?mode=light&quot; /&gt;
    &lt;/picture&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
	&lt;a href=&quot;https://trendshift.io/repositories/12122&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://trendshift.io/api/badge/repositories/12122&quot; alt=&quot;browserbase%2Fstagehand | Trendshift&quot; style=&quot;width: 250px; height: 55px;&quot; width=&quot;250&quot; height=&quot;55&quot;/&gt;&lt;/a&gt;
&lt;/p&gt;

## Why Stagehand?

Most existing browser automation tools either require you to write low-level code in a framework like Selenium, Playwright, or Puppeteer, or use high-level agents that can be unpredictable in production. By letting developers choose what to write in code vs. natural language, Stagehand is the natural choice for browser automations in production.

1. **Choose when to write code vs. natural language**: use AI when you want to navigate unfamiliar pages, and use code ([Playwright](https://playwright.dev/)) when you know exactly what you want to do.

2. **Preview and cache actions**: Stagehand lets you preview AI actions before running them, and also helps you easily cache repeatable actions to save time and tokens.

3. **Computer use models with one line of code**: Stagehand lets you integrate SOTA computer use models from OpenAI and Anthropic into the browser with one line of code.

## Example

Here&#039;s how to build a sample browser automation with Stagehand:

&lt;div align=&quot;center&quot;&gt;
  &lt;div style=&quot;max-width:300px;&quot;&gt;
    &lt;img src=&quot;/media/github_demo.gif&quot; alt=&quot;See Stagehand in Action&quot;&gt;
  &lt;/div&gt;
&lt;/div&gt;

```typescript
// Use Playwright functions on the page object
const page = stagehand.page;
await page.goto(&quot;https://github.com/browserbase&quot;);

// Use act() to execute individual actions
await page.act(&quot;click on the stagehand repo&quot;);

// Use Computer Use agents for larger actions
const agent = stagehand.agent({
    provider: &quot;openai&quot;,
    model: &quot;computer-use-preview&quot;,
});
await agent.execute(&quot;Get to the latest PR&quot;);

// Use extract() to read data from the page
const { author, title } = await page.extract({
  instruction: &quot;extract the author and title of the PR&quot;,
  schema: z.object({
    author: z.string().describe(&quot;The username of the PR author&quot;),
    title: z.string().describe(&quot;The title of the PR&quot;),
  }),
});
```

## Documentation

Visit [docs.stagehand.dev](https://docs.stagehand.dev) to view the full documentation.

## Getting Started

Start with Stagehand with one line of code, or check out our [Quickstart Guide](https://docs.stagehand.dev/get_started/quickstart) for more information:

```bash
npx create-browser-app
```

&lt;div align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://www.loom.com/share/f5107f86d8c94fa0a8b4b1e89740f7a7&quot;&gt;
      &lt;p&gt;Watch Anirudh demo create-browser-app to create a Stagehand project!&lt;/p&gt;
    &lt;/a&gt;
    &lt;a href=&quot;https://www.loom.com/share/f5107f86d8c94fa0a8b4b1e89740f7a7&quot;&gt;
      &lt;img style=&quot;max-width:300px;&quot; src=&quot;https://cdn.loom.com/sessions/thumbnails/f5107f86d8c94fa0a8b4b1e89740f7a7-ec3f428b6775ceeb-full-play.gif&quot;&gt;
    &lt;/a&gt;
  &lt;/div&gt;

### Build and Run from Source

```bash
git clone https://github.com/browserbase/stagehand.git
cd stagehand
npm install
npx playwright install
npm run build
npm run example # run the blank script at ./examples/example.ts
```

Stagehand is best when you have an API key for an LLM provider and Browserbase credentials. To add these to your project, run:

```bash
cp .env.example .env
nano .env # Edit the .env file to add API keys
```

## Contributing

&gt; [!NOTE]  
&gt; We highly value contributions to Stagehand! For questions or support, please join our [Slack community](https://stagehand.dev/slack).

At a high level, we&#039;re focused on improving reliability, speed, and cost in that order of priority. If you&#039;re interested in contributing, we strongly recommend reaching out to [Anirudh Kamath](https://x.com/kamathematic) or [Paul Klein](https://x.com/pk_iv) in our [Slack community](https://stagehand.dev/slack) before starting to ensure that your contribution aligns with our goals.

For more information, please see our [Contributing Guide](https://docs.stagehand.dev/contributions/contributing).

## Acknowledgements

This project heavily relies on [Playwright](https://playwright.dev/) as a resilient backbone to automate the web. It also would not be possible without the awesome techniques and discoveries made by [tarsier](https://github.com/reworkd/tarsier), [gemini-zod](https://github.com/jbeoris/gemini-zod), and [fuji-web](https://github.com/normal-computing/fuji-web).

We&#039;d like to thank the following people for their major contributions to Stagehand:
- [Paul Klein](https://github.com/pkiv)
- [Anirudh Kamath](https://github.com/kamath)
- [Sean McGuire](https://github.com/seanmcguire12)
- [Miguel Gonzalez](https://github.com/miguelg719)
- [Sameel Arif](https://github.com/sameelarif)
- [Filip Michalsky](https://github.com/filip-michalsky)
- [Jeremy Press](https://x.com/jeremypress)
- [Navid Pour](https://github.com/navidpour)

## License

Licensed under the MIT License.

Copyright 2025 Browserbase, Inc.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[nocobase/nocobase]]></title>
            <link>https://github.com/nocobase/nocobase</link>
            <guid>https://github.com/nocobase/nocobase</guid>
            <pubDate>Sat, 19 Apr 2025 00:04:48 GMT</pubDate>
            <description><![CDATA[NocoBase is an extensibility-first, open-source no-code/low-code platform for building business applications and enterprise solutions.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/nocobase/nocobase">nocobase/nocobase</a></h1>
            <p>NocoBase is an extensibility-first, open-source no-code/low-code platform for building business applications and enterprise solutions.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 14,331</p>
            <p>Forks: 1,613</p>
            <p>Stars today: 71 stars today</p>
            <h2>README</h2><pre>English | [中文](./README.zh-CN.md) | [日本語](./README.ja-JP.md)

https://github.com/user-attachments/assets/a50c100a-4561-4e06-b2d2-d48098659ec0

&lt;p align=&quot;center&quot;&gt;
&lt;a href=&quot;https://trendshift.io/repositories/4112&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://trendshift.io/api/badge/repositories/4112&quot; alt=&quot;nocobase%2Fnocobase | Trendshift&quot; style=&quot;width: 250px; height: 55px;&quot; width=&quot;250&quot; height=&quot;55&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://www.producthunt.com/posts/nocobase?embed=true&amp;utm_source=badge-top-post-topic-badge&amp;utm_medium=badge&amp;utm_souce=badge-nocobase&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://api.producthunt.com/widgets/embed-image/v1/top-post-topic-badge.svg?post_id=456520&amp;theme=light&amp;period=weekly&amp;topic_id=267&quot; alt=&quot;NocoBase - Scalability&amp;#0045;first&amp;#0044;&amp;#0032;open&amp;#0045;source&amp;#0032;no&amp;#0045;code&amp;#0032;platform | Product Hunt&quot; style=&quot;width: 250px; height: 54px;&quot; width=&quot;250&quot; height=&quot;54&quot; /&gt;&lt;/a&gt;
&lt;/p&gt;

## What is NocoBase

NocoBase is an extensibility-first, open-source no-code development platform.   
Instead of investing years of time and millions of dollars in research and development, deploy NocoBase in a few minutes and you&#039;ll have a private, controllable, and extremely scalable no-code development platform!

Homepage:  
https://www.nocobase.com/  

Online Demo:  
https://demo.nocobase.com/new

Documents:  
https://docs.nocobase.com/

Forum:  
https://forum.nocobase.com/

Tutorials:  
https://www.nocobase.com/en/tutorials

Use Cases:  
https://www.nocobase.com/en/blog/tags/customer-stories


## Release Notes

Our [blog](https://www.nocobase.com/en/blog/timeline) is regularly updated with release notes and provides a weekly summary.

## Distinctive features

### 1. Data model-driven

Most form-, table-, or process-driven no-code products create data structures directly in the user interface, such as Airtable, where adding a new column to a table is adding a new field. This has the advantage of simplicity of use, but the disadvantage of limited functionality and flexibility to meet the needs of more complex scenarios.

NocoBase adopts the design idea of separating the data structure from the user interface, allowing you to create any number of blocks (data views) for the data collections, with different type, styles, content, and actions in each block. This balances the simplicity of no-code operation with the flexibility of native development.

![model](https://static-docs.nocobase.com/model.png)

### 2. What you see is what you get

NocoBase enables the development of complex and distinctive business systems, but this does not mean that complex and specialized operations are required. With a single click, configuration options are displayed on the usage interface, and administrators with system configuration privileges can directly configure the user interface in a WYSIWYG manner.

![wysiwyg](https://static-docs.nocobase.com/wysiwyg.gif)

### 3. Everything is implemented as plugins

NocoBase adopts plugin architecture, all new functions can be realized by developing and installing plugins, and expanding the functions is as easy as installing an APP on your phone.

![plugins](https://static-docs.nocobase.com/plugins.png)

## Installation

NocoBase supports three installation methods:

- &lt;a target=&quot;_blank&quot; href=&quot;https://docs.nocobase.com/welcome/getting-started/installation/docker-compose&quot;&gt;Installing With Docker (👍Recommended)&lt;/a&gt;

  Suitable for no-code scenarios, no code to write. When upgrading, just download the latest image and reboot.

- &lt;a target=&quot;_blank&quot; href=&quot;https://docs.nocobase.com/welcome/getting-started/installation/create-nocobase-app&quot;&gt;Installing from create-nocobase-app CLI&lt;/a&gt;

  The business code of the project is completely independent and supports low-code development.

- &lt;a target=&quot;_blank&quot; href=&quot;https://docs.nocobase.com/welcome/getting-started/installation/git-clone&quot;&gt;Installing from Git source code&lt;/a&gt;

  If you want to experience the latest unreleased version, or want to participate in the contribution, you need to make changes and debug on the source code, it is recommended to choose this installation method, which requires a high level of development skills, and if the code has been updated, you can git pull the latest code.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[appsmithorg/appsmith]]></title>
            <link>https://github.com/appsmithorg/appsmith</link>
            <guid>https://github.com/appsmithorg/appsmith</guid>
            <pubDate>Sat, 19 Apr 2025 00:04:47 GMT</pubDate>
            <description><![CDATA[Platform to build admin panels, internal tools, and dashboards. Integrates with 25+ databases and any API.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/appsmithorg/appsmith">appsmithorg/appsmith</a></h1>
            <p>Platform to build admin panels, internal tools, and dashboards. Integrates with 25+ databases and any API.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 36,692</p>
            <p>Forks: 4,000</p>
            <p>Stars today: 12 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
&lt;a href=&quot;https://www.appsmith.com?utm_source=github&amp;utm_medium=organic&amp;utm_campaign=readme&quot;&gt;
  &lt;img src=&quot;static/appsmith_logo_white.png&quot; alt=&quot;Appsmith Logo&quot; width=&quot;350&quot;&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;a href=&quot;https://discord.gg/rBTTVJp&quot;&gt;
&lt;img alt=&quot;Discord&quot; src=&quot;https://img.shields.io/discord/725602949748752515?color=5865F2&amp;label=Discord&amp;style=for-the-badge&quot; /&gt;
&lt;/a&gt;

&lt;a href=&quot;https://github.com/appsmithorg/appsmith/releases&quot;&gt;
&lt;img alt=&quot;GitHub commit activity&quot; src=&quot;https://img.shields.io/github/commit-activity/m/appsmithorg/appsmith?color=00FF0&amp;style=for-the-badge&quot;&gt;
&lt;/a&gt;
&lt;a href=&quot;https://docs.appsmith.com/getting-started/setup/installation-guides/docker?utm_source=github&amp;utm_medium=organic&amp;utm_campaign=readme&amp;utm_content=badge&quot;&gt;
&lt;img src=&quot;https://img.shields.io/docker/pulls/appsmith/appsmith-ce?color=4591df&amp;style=for-the-badge&quot;&gt;
&lt;/a&gt;
&lt;a href=&quot;https://www.youtube.com/@appsmith/?sub_confirmation=1&quot; target=&quot;_blank&quot;&gt;
    &lt;img alt=&quot;YouTube Channel Subscribers&quot; src=&quot;https://img.shields.io/youtube/channel/subscribers/UCMYwzPG2txS8nR5ZbNY6T5g?color=00FF0&amp;style=for-the-badge&quot;&gt;
&lt;/a&gt;
&lt;a href=&quot;https://www.youtube.com/@appsmith/?sub_confirmation=1&quot; target=&quot;_blank&quot;&gt;
    &lt;img alt=&quot;YouTube Channel Views&quot; src=&quot;https://img.shields.io/youtube/channel/views/UCMYwzPG2txS8nR5ZbNY6T5g?color=00FF0&amp;style=for-the-badge&quot;&gt;
&lt;/a&gt;
&lt;/p&gt;

---

Organizations build internal applications such as dashboards, database GUIs, admin panels, approval apps, customer support dashboards, and more to help their teams perform day-to-day operations. Appsmith is an open-source tool that enables the rapid development of these internal apps. Read more on our [website](https://www.appsmith.com?utm_source=github&amp;utm_medium=organic&amp;utm_campaign=readme).
  
[![Appsmith in 100 secs](/static/images/appsmith-in-100-seconds.png)](https://www.youtube.com/watch?v=NnaJdA1A11s?v=Dxe_NzdGzL4&amp;utm_source=github&amp;utm_medium=organic&amp;utm_campaign=readme/?target=_blank)  


## Installation
There are two ways to start using Appsmith:

- Signup on [Appsmith Cloud](https://app.appsmith.com/?utm_source=github&amp;utm_medium=organic&amp;utm_campaign=readme).
- Install Appsmith on your machine. See the installation guides below. 

| Installation Methods                                                                                                            | Documentation                                                                                                                                                    |
| ------------------------------------------------------------------------------------------------------------------------------ | ---------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| [![Docker](https://img.shields.io/badge/docker-%230db7ed.svg?style=for-the-badge&amp;logo=docker&amp;logoColor=white)](https://docs.appsmith.com/getting-started/setup/installation-guides/docker?utm_source=github&amp;utm_medium=organic&amp;utm_campaign=readme)                  | [Docker](https://docs.appsmith.com/getting-started/setup/installation-guides/docker?utm_source=github&amp;utm_medium=organic&amp;utm_campaign=readme) (*Recommended*)       |
| [![Kubernetes](https://img.shields.io/badge/kubernetes-%23326ce5.svg?style=for-the-badge&amp;logo=kubernetes&amp;logoColor=white)](https://docs.appsmith.com/getting-started/setup/installation-guides/kubernetes?utm_source=github&amp;utm_medium=organic&amp;utm_campaign=readme)        | [Kubernetes](https://docs.appsmith.com/getting-started/setup/installation-guides/kubernetes?utm_source=github&amp;utm_medium=organic&amp;utm_campaign=readme) |
| [![AWS](https://img.shields.io/badge/AWS-%23FF9900.svg?style=for-the-badge&amp;logo=amazon-aws&amp;logoColor=white)](https://docs.appsmith.com/getting-started/setup/installation-guides/aws-ami?utm_source=github&amp;utm_medium=organic&amp;utm_campaign=readme)                      | [AWS AMI](https://docs.appsmith.com/getting-started/setup/installation-guides/aws-ami?utm_source=github&amp;utm_medium=organic&amp;utm_campaign=readme)           |


For other deployment options, see the [Installation Guides](https://docs.appsmith.com/getting-started/setup/installation-guides?utm_source=github&amp;utm_medium=organic&amp;utm_campaign=readme) documentation.  

## Development
To build and run Appsmith in your local dev environment, see [Setup for local development](https://github.com/appsmithorg/appsmith/blob/master/contributions/CodeContributionsGuidelines.md#-setup-for-local-development).

## Learning Resources
- [Documentation](https://docs.appsmith.com?utm_source=github&amp;utm_medium=organic&amp;utm_campaign=readme)
- [Tutorials](https://docs.appsmith.com/getting-started/tutorials?utm_source=github&amp;utm_medium=organic&amp;utm_campaign=readme)
- [Videos](https://www.youtube.com/appsmith?utm_source=github&amp;utm_medium=organic&amp;utm_campaign=readme)
- [Templates](https://www.appsmith.com/templates?utm_source=github&amp;utm_medium=organic&amp;utm_campaign=readme&amp;utm_content=support)

## Need Help?
- [Discord](https://discord.gg/rBTTVJp?utm_source=github&amp;utm_medium=organic&amp;utm_campaign=readme)
- [Community Portal](https://community.appsmith.com/?utm_source=github&amp;utm_medium=organic&amp;utm_campaign=readme)
- [support@appsmith.com](mailto:support@appsmith.com)

                                                                                                                
## Contributing
We ❤️ our contributors. We&#039;re committed to fostering an open, welcoming, and safe environment in the community.

📕 We expect everyone participating in the community to abide by our [Code of Conduct](https://github.com/appsmithorg/appsmith/blob/release/CODE_OF_CONDUCT.md). Please read and follow it. &lt;br&gt;
🤝 If you&#039;d like to contribute, start by reading our [Contribution Guide](https://github.com/appsmithorg/appsmith/blob/master/CONTRIBUTING.md).&lt;br&gt;
👾 Explore some [good first issues](https://github.com/appsmithorg/appsmith/issues?q=is%3Aissue+is%3Aopen+label%3A%22Good+First+Issue%22).&lt;br&gt;

Let&#039;s build great software together.

### Top Contributors

[![Nikhil-Nandagopal](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/3897254?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/Nikhil-Nandagopal)
[![mohanarpit](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/458946?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/mohanarpit)
[![sharat87](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/120119?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/sharat87)
[![hetunandu](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/12022471?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/hetunandu)
[![trishaanand](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/8403079?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/trishaanand)
[![riodeuno](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/103687?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/riodeuno)
[![nidhi-nair](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/5298848?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/nidhi-nair)
[![vicky-primathon](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/67091118?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/vicky-primathon)
[![Aishwarya-U-R](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/91450662?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/Aishwarya-U-R)
[![satbir121](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/39981226?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/satbir121)
[![sumitsum](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/1757421?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/sumitsum)
[![AnaghHegde](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/12005551?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/AnaghHegde)
[![arunvjn](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/32433245?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/arunvjn)
[![NandanAnantharamu](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/67676905?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/NandanAnantharamu)
[![ankitakinger](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/28362912?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/ankitakinger)
[![nayan-rafiq](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/83352306?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/nayan-rafiq)
[![abhvsn](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/41686026?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/abhvsn)
[![jsartisan](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/6636360?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/jsartisan)
[![Rishabh-Rathod](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/23132741?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/Rishabh-Rathod)
[![ohansFavour](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/46670083?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/ohansFavour)
[![sbalaji1192](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/5328605?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/sbalaji1192)
[![sarojsarab](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/43822041?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/sarojsarab)
[![SatishGandham](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/441914?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/SatishGandham)
[![AmanAgarwal041](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/7565635?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/AmanAgarwal041)
[![prsidhu](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/5424788?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/prsidhu)
[![ayushpahwa](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/8526215?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/ayushpahwa)
[![sneha122](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/30018882?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/sneha122)
[![ApekshaBhosale](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/7846888?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/ApekshaBhosale)
[![Parthvi12](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/80334441?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/Parthvi12)
[![yatinappsmith](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/84702014?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/yatinappsmith)
[![somangshu](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/11089579?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/somangshu)
[![pratapaprasanna](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/15846947?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/pratapaprasanna)
[![pranavkanade](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/13262095?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/pranavkanade)
[![albinAppsmith](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/87797149?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/albinAppsmith)
[![marks0351](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/35134347?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/marks0351)
[![nsarupr](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/20905988?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/nsarupr)
[![ashit-rath](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/88306433?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/ashit-rath)
[![NilanshBansal](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/25542733?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/NilanshBansal)
[![sondermanish](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/107841575?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/sondermanish)
[![KelvinOm](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/11555074?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/KelvinOm)
[![dhruvikn](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/22471214?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/dhruvikn)
[![rajatagrawal](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/1189106?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/rajatagrawal)
[![areyabhishek](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/30255708?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/areyabhishek)
[![subrata71](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/3524599?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/subrata71)
[![ichik](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/80973?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/ichik)
[![dipyamanbiswas07](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/26247571?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/dipyamanbiswas07)
[![rahulbarwal](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/6761673?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/rahulbarwal)
[![ankitsrivas14](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/67647761?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/ankitsrivas14)
[![vsvamsi1](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/121419957?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/vsvamsi1)
[![brayn003](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/8724051?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/brayn003)
[![sharanya-appsmith](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/135708039?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/sharanya-appsmith)
[![vivonk](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/25587962?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/vivonk)
[![dvj1988](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/18716465?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/dvj1988)
[![ramsaptami](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/79509062?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/ramsaptami)
[![rohan-arthur](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/94514895?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/rohan-arthur)
[![jacquesikot](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/40626453?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/jacquesikot)
[![danciaclara](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/32227135?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/danciaclara)
[![kocharrahul7](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/20532920?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/kocharrahul7)
[![riteshkew](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/20280935?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/riteshkew)
[![srix](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/5801636?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/srix)
[![laveena-en](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/109572422?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/laveena-en)
[![RakshaKShetty](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/45958978?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/RakshaKShetty)
[![Rishabhkaul](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/1650391?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/Rishabhkaul)
[![sandeepravi](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/804922?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/sandeepravi)
[![tejasahluwalia](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/39881648?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/tejasahluwalia)
[![dilippitchika](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/19730984?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/dilippitchika)
[![nerbos](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/121891?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/nerbos)
[![rlnorthcutt](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/673633?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/rlnorthcutt)
[![kevinblanco](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/1458238?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/kevinblanco)
[![AbhaySM](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/3713873?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/AbhaySM)
[![tomjose92](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/5265702?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/tomjose92)
[![andreevanatasha](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/5361618?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/andreevanatasha)
[![LagunaElectric](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/6085143?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/LagunaElectric)
[![sribalajig](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/15727421?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/sribalajig)
[![infinitetrooper](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/16632903?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/infinitetrooper)
[![RoopKrrish9696](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/16741628?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/RoopKrrish9696)
[![bharath31](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/17562726?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/bharath31)
[![GreenFlux](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/24459976?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/GreenFlux)
[![shadabbuchh](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/39921438?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/shadabbuchh)
[![harshilp24](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/43263619?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/harshilp24)
[![appsmith-bot](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/74705725?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/appsmith-bot)
[![momcilo-appsmith](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/81744497?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/momcilo-appsmith)
[![shwetha-ramesh](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/92293815?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/shwetha-ramesh)
[![vasanthappsmith](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/92305123?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/vasanthappsmith)
[![parth-appsmith](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/92779003?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/parth-appsmith)
[![chandannkumar](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/95341241?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/chandannkumar)
[![jnikhila](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/99252011?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/jnikhila)
[![vinay-appsmith](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/101088862?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/vinay-appsmith)
[![ame-appsmith](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/101268423?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/ame-appsmith)
[![btsgh](https://images.weserv.nl/?url=https://avatars.githubusercontent.com/u/101863839?v=4&amp;w=50&amp;h=50&amp;mask=circle)](https://github.com/btsgh)
[![Sripriya93](https://images.weserv.nl/?url=https

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[Expensify/App]]></title>
            <link>https://github.com/Expensify/App</link>
            <guid>https://github.com/Expensify/App</guid>
            <pubDate>Sat, 19 Apr 2025 00:04:46 GMT</pubDate>
            <description><![CDATA[Welcome to New Expensify: a complete re-imagination of financial collaboration, centered around chat. Help us build the next generation of Expensify by sharing feedback and contributing to the code.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/Expensify/App">Expensify/App</a></h1>
            <p>Welcome to New Expensify: a complete re-imagination of financial collaboration, centered around chat. Help us build the next generation of Expensify by sharing feedback and contributing to the code.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 4,170</p>
            <p>Forks: 3,133</p>
            <p>Stars today: 11 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://new.expensify.com&quot;&gt;
        &lt;img src=&quot;https://raw.githubusercontent.com/Expensify/App/main/web/favicon.png&quot; width=&quot;64&quot; height=&quot;64&quot; alt=&quot;New Expensify Icon&quot;&gt;
    &lt;/a&gt;
    &lt;h1&gt;
        &lt;a href=&quot;https://new.expensify.com&quot;&gt;
            New Expensify
        &lt;/a&gt;
    &lt;/h1&gt;
&lt;/div&gt;

#### Table of Contents
* [Local Development](#local-development)
* [Testing on browsers in simulators and emulators](#testing-on-browsers-in-simulators-and-emulators)
* [Running The Tests](#running-the-tests)
* [Debugging](#debugging)
* [App Structure and Conventions](#app-structure-and-conventions)
* [HybridApp](#HybridApp)
* [Philosophy](#Philosophy)
* [Security](#Security)
* [Internationalization](#Internationalization)
* [Deploying](#deploying)

#### Additional Reading
* [API Details](contributingGuides/API.md)
* [Offline First](contributingGuides/OFFLINE_UX.md)
* [Contributing to Expensify](contributingGuides/CONTRIBUTING.md)
* [Expensify Code of Conduct](CODE_OF_CONDUCT.md)
* [Contributor License Agreement](CLA.md)
* [React StrictMode](contributingGuides/STRICT_MODE.md)
* [Left Hand Navigation(LHN)](contributingGuides/LEFT_HAND_NAVIGATION.md)
* [HybridApp - additional info &amp; troubleshooting](contributingGuides/HYBRID_APP.md)

----

# Local development
These instructions should get you set up ready to work on New Expensify 🙌

## Getting Started
1. Install `nvm` then `node` &amp; `npm`: `brew install nvm &amp;&amp; nvm install`
2. Install `watchman`: `brew install watchman`
3. Install dependencies: `npm install`
4. Install `mkcert`: `brew install mkcert` followed by `npm run setup-https`. If you are not using macOS, follow the instructions [here](https://github.com/FiloSottile/mkcert?tab=readme-ov-file#installation).
5. Create a host entry in your local hosts file, `/etc/hosts` for dev.new.expensify.com pointing to localhost:
```
127.0.0.1 dev.new.expensify.com
```

You can use any IDE or code editing tool for developing on any platform. Use your favorite!

## Recommended `node` setup
In order to have more consistent builds, we use a strict `node` and `npm` version as defined in the `package.json` `engines` field and `.nvmrc` file. `npm install` will fail if you do not use the version defined, so it is recommended to install `node` via `nvm` for easy node version management. Automatic `node` version switching can be installed for [`zsh`](https://github.com/nvm-sh/nvm#zsh) or [`bash`](https://github.com/nvm-sh/nvm#bash) using `nvm`.

## Configuring HTTPS
The webpack development server now uses https. If you&#039;re using a mac, you can simply run `npm run setup-https`.

If you&#039;re using another operating system, you will need to ensure `mkcert` is installed, and then follow the instructions in the repository to generate certificates valid for `dev.new.expensify.com` and `localhost`. The certificate should be named `certificate.pem` and the key should be named `key.pem`. They should be placed in `config/webpack`.

## Running the web app 🕸
* To run the **development web app**: `npm run web`
* Changes applied to Javascript will be applied automatically via WebPack as configured in `webpack.dev.ts`

## Running the iOS app 📱
For an M1 Mac, read this [SO](https://stackoverflow.com/questions/64901180/how-to-run-cocoapods-on-apple-silicon-m1) for installing cocoapods.

* If you haven&#039;t already, install Xcode tools and make sure to install the optional &quot;iOS Platform&quot; package as well. This installation may take awhile.
    * After installation, check in System Settings that there&#039;s no update for Xcode. Otherwise, you may encounter issues later that don&#039;t explain that you solve them by updating Xcode.
* Install project gems, including cocoapods, using bundler to ensure everyone uses the same versions. In the project root, run: `bundle install`
    * If you get the error `Could not find &#039;bundler&#039;`, install the bundler gem first: `gem install bundler` and try again.
    * If you are using MacOS and get the error `Gem::FilePermissionError` when trying to install the bundler gem, you&#039;re likely using system Ruby, which requires administrator permission to modify. To get around this, install another version of Ruby with a version manager like [rbenv](https://github.com/rbenv/rbenv#installation).
* Before installing iOS dependencies, you need to obtain a token from Mapbox to download their SDKs. Please run `npm run configure-mapbox` and follow the instructions.
    * For help with MapBox token, you can see [this Slack thread](https://expensify.slack.com/archives/C01GTK53T8Q/p1692740856745279?thread_ts=1692322511.804599&amp;cid=C01GTK53T8Q)
* To install the iOS dependencies, run: `npm install &amp;&amp; npm run pod-install`
* If you are an Expensify employee and want to point the emulator to your local VM, follow [this](https://stackoverflow.com/c/expensify/questions/7699)
* To run a on a **Development Simulator**: `npm run ios`
* Changes applied to Javascript will be applied automatically, any changes to native code will require a recompile

If you want to run the app on an actual physical iOS device, please follow the instructions [here](https://github.com/Expensify/App/blob/main/contributingGuides/HOW_TO_BUILD_APP_ON_PHYSICAL_IOS_DEVICE.md).

## Running the Android app 🤖
* Before installing Android dependencies, you need to obtain a token from Mapbox to download their SDKs. Please run `npm run configure-mapbox` and follow the instructions. If you already did this step for iOS, there is no need to repeat this step.
* Go through the official React-Native instructions on [this page](https://reactnative.dev/docs/environment-setup?guide=native&amp;platform=android) to start running the app on android.
* If you are an Expensify employee and want to point the emulator to your local VM, follow [this](https://stackoverflow.com/c/expensify/questions/7699)
* To run a on a **Development Emulator**: `npm run android`
* Changes applied to Javascript will be applied automatically, any changes to native code will require a recompile

## Running the MacOS desktop app 🖥
* To run the **Development app**, run: `npm run desktop`, this will start a new Electron process running on your MacOS desktop in the `dist/Mac` folder.

## Receiving Notifications
To receive notifications on development build of the app while hitting the Staging or Production API, you need to use the production airship config.
### Android
1. Copy the [production config](https://github.com/Expensify/App/blob/d7c1256f952c0020344d809ee7299b49a4c70db2/android/app/src/main/assets/airshipconfig.properties#L1-L7) to the [development config](https://github.com/Expensify/App/blob/d7c1256f952c0020344d809ee7299b49a4c70db2/android/app/src/development/assets/airshipconfig.properties#L1-L8).
2. Rebuild the app.

### iOS
1. Replace the [development key and secret](https://github.com/Expensify/App/blob/d7c1256f952c0020344d809ee7299b49a4c70db2/ios/AirshipConfig.plist#L7-L10) with the [production values](https://github.com/Expensify/App/blob/d7c1256f952c0020344d809ee7299b49a4c70db2/ios/AirshipConfig.plist#L11-L14).
2. Rebuild the app.

## Troubleshooting
1. If you are having issues with **_Getting Started_**, please reference [React Native&#039;s Documentation](https://reactnative.dev/docs/environment-setup)
2. If you are running into CORS errors like (in the browser dev console)
   ```sh
   Access to fetch at &#039;https://www.expensify.com/api/BeginSignIn&#039; from origin &#039;http://localhost:8080&#039; has been blocked by CORS policy
   ```
   You probably have a misconfigured `.env` file - remove it (`rm .env`) and try again

**Note:** Expensify engineers that will be testing with the API in your local dev environment please refer to [these additional instructions](https://stackoverflow.com/c/expensify/questions/7699/7700).

## Environment variables
Creating an `.env` file is not necessary. We advise external contributors against it. It can lead to errors when
variables referenced here get updated since your local `.env` file is ignored.

- `NEW_EXPENSIFY_URL` - The root URL used for the website
- `SECURE_EXPENSIFY_URL` - The URL used to hit the Expensify secure API
- `EXPENSIFY_URL` - The URL used to hit the Expensify API
- `EXPENSIFY_PARTNER_NAME` - Constant used for the app when authenticating.
- `EXPENSIFY_PARTNER_PASSWORD` - Another constant used for the app when authenticating. (This is OK to be public)
- `PUSHER_APP_KEY` - Key used to authenticate with Pusher.com
- `SECURE_NGROK_URL` - Secure URL used for `ngrok` when testing
- `NGROK_URL` - URL used for `ngrok` when testing
- `USE_NGROK` - Flag to turn `ngrok` testing on or off
- `USE_WDYR` - Flag to turn [`Why Did You Render`](https://github.com/welldone-software/why-did-you-render) testing on or off
- `USE_WEB_PROXY`⚠️- Used in web/desktop development, it starts a server along the local development server to proxy
   requests to the backend. External contributors should set this to `true` otherwise they&#039;ll have CORS errors.
   If you don&#039;t want to start the proxy server set this explicitly to `false`
- `CAPTURE_METRICS` (optional) - Set this to `true` to capture performance metrics and see them in Flipper
   see [PERFORMANCE.md](contributingGuides/PERFORMANCE.md#performance-metrics-opt-in-on-local-release-builds) for more information
- `ONYX_METRICS` (optional) - Set this to `true` to capture even more performance metrics and see them in Flipper
   see [React-Native-Onyx#benchmarks](https://github.com/Expensify/react-native-onyx#benchmarks) for more information
- `E2E_TESTING` (optional) - This needs to be set to `true` when running the e2e tests for performance regression testing.
   This happens usually automatically, read [this](tests/e2e/README.md) for more information

----

# Testing on browsers in simulators and emulators

The development server is reached through the HTTPS protocol, and any client that access the development server needs a certificate.

You create this certificate by following the instructions in [`Configuring HTTPS`](#configuring-https) of this readme. When accessing the website served from the development server on browsers in iOS simulator or Android emulator, these virtual devices need to have the same certificate installed. Follow the steps below to install them.

#### Pre-requisite for Android flow
1. Open any emulator using Android Studio
2. Use `adb push &quot;$(mkcert -CAROOT)/rootCA.pem&quot; /storage/emulated/0/Download/` to push certificate to install in Download folder.
3. Install the certificate as CA certificate from the settings. On the Android emulator, this option can be found in Settings &gt; Security &gt; Encryption &amp; Credentials &gt; Install a certificate &gt; CA certificate.
4. Close the emulator.

**Note:** If you want to run app on `https://127.0.0.1:8082`, then just install the certificate and use `adb reverse tcp:8082 tcp:8082` on every startup.

#### Android Flow
1. Run `npm run setupNewDotWebForEmulators android`
2. Select the emulator you want to run if prompted. (If single emulator is available, then it will open automatically)
3. Let the script execute till the message `🎉 Done!`.

**Note:** If you want to run app on `https://dev.new.expensify.com:8082`, then just do the Android flow and use `npm run startAndroidEmulator` to start the Android Emulator every time (It will configure the emulator).


Possible Scenario:
The flow may fail to root with error `adbd cannot run as root in production builds`. In this case, please refer to https://stackoverflow.com/a/45668555. Or use `https://127.0.0.1:8082` for less hassle.

#### iOS Flow
1. Run `npm run setupNewDotWebForEmulators ios`
2. Select the emulator you want to run if prompted. (If single emulator is available, then it will open automatically)
3. Let the script execute till the message `🎉 Done!`.

#### All Flow
1. Run `npm run setupNewDotWebForEmulators all` or `npm run setupNewDotWebForEmulators`
2. Check if the iOS flow runs first and then Android flow runs.
3. Let the script execute till the message `🎉 Done!`.

----

# Running the tests
## Unit tests
Unit tests are valuable when you want to test one component. They should be short, fast, and ideally only test one thing.
Often times in order to write a unit test, you may need to mock data, a component, or library. We use the library [Jest](https://jestjs.io/)
to help run our Unit tests.

* To run the **Jest unit tests**: `npm run test`
* UI tests guidelines can be found [here](tests/ui/README.md)

## Performance tests
We use Reassure for monitoring performance regression. More detailed information can be found [here](tests/perf-test/README.md):

----

# Debugging
### iOS
1. If running on the iOS simulator pressing `⌘D` will open the debugging menu.
2. This will allow you to attach a debugger in your IDE, React Developer Tools, or your browser.
3. For more information on how to attach a debugger, see [React Native Debugging Documentation](https://reactnative.dev/docs/debugging#chrome-developer-tools)

Alternatively, you can also set up debugger using [Flipper](https://fbflipper.com/). After installation, press `⌘D` and select &quot;Open Debugger&quot;. This will open Flipper window. To view data stored by Onyx, go to Plugin Manager and install `async-storage` plugin.

## Android
Our React Native Android app now uses the `Hermes` JS engine which requires your browser for remote debugging. These instructions are specific to Chrome since that&#039;s what the Hermes documentation provided.
1. Navigate to `chrome://inspect`
2. Use the `Configure...` button to add the Metro server address (typically `localhost:8081`, check your `Metro` output)
3. You should now see a &quot;Hermes React Native&quot; target with an &quot;inspect&quot; link which can be used to bring up a debugger. If you don&#039;t see the &quot;inspect&quot; link, make sure the Metro server is running
4. You can now use the Chrome debug tools. See [React Native Debugging Hermes](https://reactnative.dev/docs/hermes#debugging-hermes-using-google-chromes-devtools)

## Web

To make it easier to test things in web, we expose the Onyx object to the window, so you can easily do `Onyx.set(&#039;bla&#039;, 1)`.

----

# Release Profiler
Often, performance issue debugging occurs in debug builds, which can introduce errors from elements such as JS Garbage Collection, Hermes debug markers, or LLDB pauses.

`react-native-release-profiler` facilitates profiling within release builds for accurate local problem-solving and broad performance analysis in production to spot regressions or collect extensive device data. Therefore, we will utilize the production build version

### Getting Started with Source Maps
To accurately profile your application, generating source maps for Android and iOS is crucial. Here&#039;s how to enable them:
1. Enable source maps on Android
Ensure the following is set in your app&#039;s `android/app/build.gradle` file.

    ```jsx
    project.ext.react = [
        enableHermes: true,
        hermesFlagsRelease: [&quot;-O&quot;, &quot;-output-source-map&quot;], // &lt;-- here, plus whichever flag was required to set this away from default
    ]
    ```

2. Enable source maps on IOS
Within Xcode head to the build phase - `Bundle React Native code and images`.

    ```jsx
    export SOURCEMAP_FILE=&quot;$(pwd)/../main.jsbundle.map&quot; // &lt;-- here;

    export NODE_BINARY=node
    ../node_modules/react-native/scripts/react-native-xcode.sh
    ```
3. Install the necessary packages and CocoaPods dependencies:
    ```jsx
    npm i &amp;&amp; npm run pod-install
    ```
4. Depending on the platform you are targeting, run your Android/iOS app in production mode.
5. Upon completion, the generated source map can be found at:
  Android: `android/app/build/generated/sourcemaps/react/productionRelease/index.android.bundle.map`
  IOS: `main.jsbundle.map`
  web: `dist/merged-source-map.js.map`

### Recording a Trace:
1. Ensure you have generated the source map as outlined above.
2. Launch the app in production mode.
3. Navigate to the feature you wish to profile.
4. Initiate the profiling session by tapping with four fingers (on mobile) or `cmd+d` (on web) to open the menu and selecting **`Use Profiling`**.
5. Close the menu and interact with the app.
6. After completing your interactions, tap with four fingers or `cmd+d` again and select to stop profiling.
7. You will be presented with a **`Share`** option to export the trace, which includes a trace file (`Profile&lt;app version&gt;.cpuprofile`) and build info (`AppInfo&lt;app version&gt;.json`).

Build info:
```jsx
{
    appVersion: &quot;1.0.0&quot;,
    environment: &quot;production&quot;,
    platform: &quot;IOS&quot;,
    totalMemory: &quot;3GB&quot;,
    usedMemory: &quot;300MB&quot;
}
```

### How to symbolicate trace record:
1. You have two files: `AppInfo&lt;app version&gt;.json` and `Profile&lt;app version&gt;.cpuprofile`
2. Place the `Profile&lt;app version&gt;.cpuprofile` file at the root of your project.
3. If you have already generated a source map from the steps above for this branch, you can skip to the next step. Otherwise, obtain the app version from `AppInfo&lt;app version&gt;.json` switch to that branch and generate the source map as described.

`IMPORTANT:` You should generate the source map from the same branch as the trace was recorded.

4. Use the following commands to symbolicate the trace for Android and iOS, respectively:
Android: `npm run symbolicate-release:android`
IOS: `npm run symbolicate-release:ios`
web: `npm run symbolicate-release:web`
5. A new file named `Profile_trace_for_&lt;app version&gt;-converted.json` will appear in your project&#039;s root folder.
6. Open this file in your tool of choice:
    - SpeedScope ([https://www.speedscope.app](https://www.speedscope.app/))
    - Perfetto UI (https://ui.perfetto.dev/)
    - Google Chrome&#039;s Tracing UI (chrome://tracing)

----

# App Structure and Conventions

## Onyx
This is a persistent storage solution wrapped in a Pub/Sub library. In general that means:

- Onyx stores and retrieves data from persistent storage
- Data is stored as key/value pairs, where the value can be anything from a single piece of data to a complex object
- Collections of data are usually not stored as a single key (eg. an array with multiple objects), but as individual keys+ID (eg. `report_1234`, `report_4567`, etc.). Store collections as individual keys when a component will bind directly to one of those keys. For example: reports are stored as individual keys because `OptionRow.js` binds to the individual report keys for each link. However, report actions are stored as an array of objects because nothing binds directly to a single report action.
- Onyx allows other code to subscribe to changes in data, and then publishes change events whenever data is changed
- Anything needing to read Onyx data needs to:
    1. Know what key the data is stored in (for web, you can find this by looking in the JS console &gt; Application &gt; IndexedDB &gt; OnyxDB &gt; keyvaluepairs)
    2. Subscribe to changes of the data for a particular key or set of keys. React components use `withOnyx()` and non-React libs use `Onyx.connect()`
    3. Get initialized with the current value of that key from persistent storage (Onyx does this by calling `setState()` or triggering the `callback` with the values currently on disk as part of the connection process)
- Subscribing to Onyx keys is done using a constant defined in `ONYXKEYS`. Each Onyx key represents either a collection of items or a specific entry in storage. For example, since all reports are stored as individual keys like `report_1234`, if code needs to know about all the reports (eg. display a list of them in the nav menu), then it would subscribe to the key `ONYXKEYS.COLLECTION.REPORT`.

## Actions
Actions are responsible for managing what is on disk. This is usually:

- Subscribing to Pusher events to receive data from the server that will get put immediately into Onyx
- Making XHRs to request necessary data from the server and then immediately putting that data into Onyx
- Handling any business logic with input coming from the UI layer

## The UI layer
This layer is solely responsible for:

- Reflecting exactly the data that is in persistent storage

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[shadcn-ui/ui]]></title>
            <link>https://github.com/shadcn-ui/ui</link>
            <guid>https://github.com/shadcn-ui/ui</guid>
            <pubDate>Sat, 19 Apr 2025 00:04:45 GMT</pubDate>
            <description><![CDATA[A set of beautifully-designed, accessible components and a code distribution platform. Works with your favorite frameworks. Open Source. Open Code.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/shadcn-ui/ui">shadcn-ui/ui</a></h1>
            <p>A set of beautifully-designed, accessible components and a code distribution platform. Works with your favorite frameworks. Open Source. Open Code.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 85,568</p>
            <p>Forks: 5,775</p>
            <p>Stars today: 81 stars today</p>
            <h2>README</h2><pre># shadcn/ui

Accessible and customizable components that you can copy and paste into your apps. Free. Open Source. **Use this to build your own component library**.

![hero](apps/www/public/og.jpg)

## Documentation

Visit http://ui.shadcn.com/docs to view the documentation.

## Contributing

Please read the [contributing guide](/CONTRIBUTING.md).

## License

Licensed under the [MIT license](https://github.com/shadcn/ui/blob/main/LICENSE.md).
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[microsoft/data-formulator]]></title>
            <link>https://github.com/microsoft/data-formulator</link>
            <guid>https://github.com/microsoft/data-formulator</guid>
            <pubDate>Sat, 19 Apr 2025 00:04:44 GMT</pubDate>
            <description><![CDATA[🪄 Create rich visualizations with AI]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/microsoft/data-formulator">microsoft/data-formulator</a></h1>
            <p>🪄 Create rich visualizations with AI</p>
            <p>Language: TypeScript</p>
            <p>Stars: 11,308</p>
            <p>Forks: 867</p>
            <p>Stars today: 12 stars today</p>
            <h2>README</h2><pre>&lt;h1&gt;
    &lt;img src=&quot;./public/favicon.ico&quot; alt=&quot;Data Formulator icon&quot; width=&quot;28&quot;&gt; &lt;b&gt;Data Formulator: Create Rich Visualizations with AI&lt;/b&gt;
&lt;/h1&gt;

&lt;div&gt;
    
[![arxiv](https://img.shields.io/badge/Paper-arXiv:2408.16119-b31b1b.svg)](https://arxiv.org/abs/2408.16119)&amp;ensp;
[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)&amp;ensp;
[![YouTube](https://img.shields.io/badge/YouTube-white?logo=youtube&amp;logoColor=%23FF0000)](https://youtu.be/3ndlwt0Wi3c)&amp;ensp;
[![build](https://github.com/microsoft/data-formulator/actions/workflows/python-build.yml/badge.svg)](https://github.com/microsoft/data-formulator/actions/workflows/python-build.yml)

&lt;/div&gt;

Transform data and create rich visualizations iteratively with AI 🪄. Try Data Formulator now!

[![Open in GitHub Codespaces](https://github.com/codespaces/badge.svg)](https://codespaces.new/microsoft/data-formulator?quickstart=1)

&lt;kbd&gt;
  &lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://codespaces.new/microsoft/data-formulator?quickstart=1&quot; title=&quot;open Data Formulator in GitHub Codespaces&quot;&gt;&lt;img src=&quot;public/data-formulator-screenshot.png&quot;&gt;&lt;/a&gt;
&lt;/kbd&gt;


## News 🔥🔥🔥

- [03-20-2025] Data Formulator 0.1.7: Anchoring ⚓︎
  - Anchor an intermediate dataset, so that followup data analysis are built on top of the anchored data, not the original one.
  - Clean a data and work with only the cleaned data; create a subset from the original data or join multiple data, and then focus your analysis from there. The AI agent will be less likely to get confused and work faster. ⚡️⚡️
  - Check out the demos at [[https://github.com/microsoft/data-formulator/releases/tag/0.1.7]](https://github.com/microsoft/data-formulator/releases/tag/0.1.7)
  - Don&#039;t forget to update Data Formulator to test it out!

- [02-20-2025] Data Formulator 0.1.6 released! 
  - Now supports working with multiple datasets at once! Tell Data Formulator which data tables you would like to use in the encoding shelf, and it will figure out how to join the tables to create a visualization to answer your question. 🪄
  - Checkout the demo at [[https://github.com/microsoft/data-formulator/releases/tag/0.1.6]](https://github.com/microsoft/data-formulator/releases/tag/0.1.6).
  - Update your Data Formulator to the latest version to play with the new features.

- [02-12-2025] More models supported now!
  - Now supports OpenAI, Azure, Ollama, and Anthropic models (and more powered by [LiteLLM](https://github.com/BerriAI/litellm));
  - Models with strong code generation and instruction following capabilities are recommended (gpt-4o, claude-3-5-sonnet etc.);
  - You can store API keys in `api-keys.env` to avoid typing them every time (see template `api-keys.env.template`).
  - Let us know which models you have good/bad experiences with, and what models you would like to see supported! [[comment here]](https://github.com/microsoft/data-formulator/issues/49)

- [11-07-2024] Minor fun update: data visualization challenges!
  - We added a few visualization challenges with the sample datasets. Can you complete them all? [[try them out!]](https://github.com/microsoft/data-formulator/issues/53#issue-2641841252)
  - Comment in the issue when you did, or share your results/questions with others! [[comment here]](https://github.com/microsoft/data-formulator/issues/53)

- [10-11-2024] Data Formulator python package released! 
  - You can now install Data Formulator using Python and run it locally, easily. [[check it out]](#get-started).
  - Our Codespaces configuration is also updated for fast start up ⚡️. [[try it now!]](https://codespaces.new/microsoft/data-formulator?quickstart=1)
  - New experimental feature: load an image or a messy text, and ask AI to parse and clean it for you(!). [[demo]](https://github.com/microsoft/data-formulator/pull/31#issuecomment-2403652717)
  
- [10-01-2024] Initial release of Data Formulator, check out our [[blog]](https://www.microsoft.com/en-us/research/blog/data-formulator-exploring-how-ai-can-help-analysts-create-rich-data-visualizations/) and [[video]](https://youtu.be/3ndlwt0Wi3c)!



## Overview

**Data Formulator** is an application from Microsoft Research that uses large language models to transform data, expediting the practice of data visualization.

Data Formulator is an AI-powered tool for analysts to iteratively create rich visualizations. Unlike most chat-based AI tools where users need to describe everything in natural language, Data Formulator combines *user interface interactions (UI)* and *natural language (NL) inputs* for easier interaction. This blended approach makes it easier for users to describe their chart designs while delegating data transformation to AI. 

## Get Started

Play with Data Formulator with one of the following options:

- **Option 1: Install via Python PIP**
  
  Use Python PIP for an easy setup experience, running locally (recommend: install it in a virtual environment).
  
  ```bash
  # install data_formulator
  pip install data_formulator

  # start data_formulator
  data_formulator 
  
  # alternatively, you can run data formulator with this command
  python -m data_formulator
  ```

  Data Formulator will be automatically opened in the browser at [http://localhost:5000](http://localhost:5000).

  *Update: you can specify the port number (e.g., 8080) by `python -m data_formulator --port 8080` if the default port is occupied.*

- **Option 2: Codespaces (5 minutes)**
  
  You can also run Data Formulator in Codespaces; we have everything pre-configured. For more details, see [CODESPACES.md](CODESPACES.md).
  
  [![Open in GitHub Codespaces](https://github.com/codespaces/badge.svg)](https://codespaces.new/microsoft/data-formulator?quickstart=1)

- **Option 3: Working in the developer mode**
  
  You can build Data Formulator locally if you prefer full control over your development environment and the ability to customize the setup to your specific needs. For detailed instructions, refer to [DEVELOPMENT.md](DEVELOPMENT.md).


## Using Data Formulator

Once you&#039;ve completed the setup using either option, follow these steps to start using Data Formulator:

### The basics of data visualization
* Provide OpenAI keys and select a model (GPT-4o suggested) and choose a dataset.
* Choose a chart type, and then drag-and-drop data fields to chart properties (x, y, color, ...) to specify visual encodings.

https://github.com/user-attachments/assets/0fbea012-1d2d-46c3-a923-b1fc5eb5e5b8


### Create visualization beyond the initial dataset (powered by 🤖)
* You can type names of **fields that do not exist in current data** in the encoding shelf:
    - this tells Data Formulator that you want to create visualizations that require computation or transformation from existing data,
    - you can optionally provide a natural language prompt to explain and clarify your intent (not necessary when field names are self-explanatory).
* Click the **Formulate** button.
    - Data Formulator will transform data and instantiate the visualization based on the encoding and prompt.
* Inspect the data, chart and code.
* To create a new chart based on existing ones, follow up in natural language:
    - provide a follow up prompt (e.g., *``show only top 5!&#039;&#039;*),
    - you may also update visual encodings for the new chart.

https://github.com/user-attachments/assets/160c69d2-f42d-435c-9ff3-b1229b5bddba

https://github.com/user-attachments/assets/c93b3e84-8ca8-49ae-80ea-f91ceef34acb

Repeat this process as needed to explore and understand your data. Your explorations are trackable in the **Data Threads** panel. 

## Developers&#039; Guide

Follow the [developers&#039; instructions](DEVELOPMENT.md) to build your new data analysis tools on top of Data Formulator.

## Research Papers
* [Data Formulator 2: Iteratively Creating Rich Visualizations with AI](https://arxiv.org/abs/2408.16119)

```
@article{wang2024dataformulator2iteratively,
      title={Data Formulator 2: Iteratively Creating Rich Visualizations with AI}, 
      author={Chenglong Wang and Bongshin Lee and Steven Drucker and Dan Marshall and Jianfeng Gao},
      year={2024},
      booktitle={ArXiv preprint arXiv:2408.16119},
}
```

* [Data Formulator: AI-powered Concept-driven Visualization Authoring](https://arxiv.org/abs/2309.10094)

```
@article{wang2023data,
  title={Data Formulator: AI-powered Concept-driven Visualization Authoring},
  author={Wang, Chenglong and Thompson, John and Lee, Bongshin},
  journal={IEEE Transactions on Visualization and Computer Graphics},
  year={2023},
  publisher={IEEE}
}
```


## Contributing

This project welcomes contributions and suggestions. Most contributions require you to
agree to a Contributor License Agreement (CLA) declaring that you have the right to,
and actually do, grant us the rights to use your contribution. For details, visit
https://cla.microsoft.com.

When you submit a pull request, a CLA-bot will automatically determine whether you need
to provide a CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the
instructions provided by the bot. You will only need to do this once across all repositories using our CLA.

This project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/).
For more information see the [Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/)
or contact [opencode@microsoft.com](mailto:opencode@microsoft.com) with any additional questions or comments.

## Trademarks

This project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft 
trademarks or logos is subject to and must follow 
[Microsoft&#039;s Trademark &amp; Brand Guidelines](https://www.microsoft.com/en-us/legal/intellectualproperty/trademarks/usage/general).
Use of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship.
Any use of third-party trademarks or logos are subject to those third-party&#039;s policies.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[infiniflow/ragflow]]></title>
            <link>https://github.com/infiniflow/ragflow</link>
            <guid>https://github.com/infiniflow/ragflow</guid>
            <pubDate>Sat, 19 Apr 2025 00:04:43 GMT</pubDate>
            <description><![CDATA[RAGFlow is an open-source RAG (Retrieval-Augmented Generation) engine based on deep document understanding.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/infiniflow/ragflow">infiniflow/ragflow</a></h1>
            <p>RAGFlow is an open-source RAG (Retrieval-Augmented Generation) engine based on deep document understanding.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 49,471</p>
            <p>Forks: 4,675</p>
            <p>Stars today: 129 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
&lt;a href=&quot;https://demo.ragflow.io/&quot;&gt;
&lt;img src=&quot;web/src/assets/logo-with-text.png&quot; width=&quot;520&quot; alt=&quot;ragflow logo&quot;&gt;
&lt;/a&gt;
&lt;/div&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;./README.md&quot;&gt;English&lt;/a&gt; |
  &lt;a href=&quot;./README_zh.md&quot;&gt;简体中文&lt;/a&gt; |
  &lt;a href=&quot;./README_tzh.md&quot;&gt;繁体中文&lt;/a&gt; |
  &lt;a href=&quot;./README_ja.md&quot;&gt;日本語&lt;/a&gt; |
  &lt;a href=&quot;./README_ko.md&quot;&gt;한국어&lt;/a&gt; |
  &lt;a href=&quot;./README_id.md&quot;&gt;Bahasa Indonesia&lt;/a&gt; |
  &lt;a href=&quot;/README_pt_br.md&quot;&gt;Português (Brasil)&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://x.com/intent/follow?screen_name=infiniflowai&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/twitter/follow/infiniflow?logo=X&amp;color=%20%23f5f5f5&quot; alt=&quot;follow on X(Twitter)&quot;&gt;
    &lt;/a&gt;
    &lt;a href=&quot;https://demo.ragflow.io&quot; target=&quot;_blank&quot;&gt;
        &lt;img alt=&quot;Static Badge&quot; src=&quot;https://img.shields.io/badge/Online-Demo-4e6b99&quot;&gt;
    &lt;/a&gt;
    &lt;a href=&quot;https://hub.docker.com/r/infiniflow/ragflow&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/badge/docker_pull-ragflow:v0.17.2-brightgreen&quot; alt=&quot;docker pull infiniflow/ragflow:v0.17.2&quot;&gt;
    &lt;/a&gt;
    &lt;a href=&quot;https://github.com/infiniflow/ragflow/releases/latest&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/github/v/release/infiniflow/ragflow?color=blue&amp;label=Latest%20Release&quot; alt=&quot;Latest Release&quot;&gt;
    &lt;/a&gt;
    &lt;a href=&quot;https://github.com/infiniflow/ragflow/blob/main/LICENSE&quot;&gt;
        &lt;img height=&quot;21&quot; src=&quot;https://img.shields.io/badge/License-Apache--2.0-ffffff?labelColor=d4eaf7&amp;color=2e6cc4&quot; alt=&quot;license&quot;&gt;
    &lt;/a&gt;
&lt;/p&gt;

&lt;h4 align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://ragflow.io/docs/dev/&quot;&gt;Document&lt;/a&gt; |
  &lt;a href=&quot;https://github.com/infiniflow/ragflow/issues/4214&quot;&gt;Roadmap&lt;/a&gt; |
  &lt;a href=&quot;https://twitter.com/infiniflowai&quot;&gt;Twitter&lt;/a&gt; |
  &lt;a href=&quot;https://discord.gg/NjYzJD3GM3&quot;&gt;Discord&lt;/a&gt; |
  &lt;a href=&quot;https://demo.ragflow.io&quot;&gt;Demo&lt;/a&gt;
&lt;/h4&gt;

&lt;details open&gt;
&lt;summary&gt;&lt;b&gt;📕 Table of Contents&lt;/b&gt;&lt;/summary&gt;

- 💡 [What is RAGFlow?](#-what-is-ragflow)
- 🎮 [Demo](#-demo)
- 📌 [Latest Updates](#-latest-updates)
- 🌟 [Key Features](#-key-features)
- 🔎 [System Architecture](#-system-architecture)
- 🎬 [Get Started](#-get-started)
- 🔧 [Configurations](#-configurations)
- 🔧 [Build a docker image without embedding models](#-build-a-docker-image-without-embedding-models)
- 🔧 [Build a docker image including embedding models](#-build-a-docker-image-including-embedding-models)
- 🔨 [Launch service from source for development](#-launch-service-from-source-for-development)
- 📚 [Documentation](#-documentation)
- 📜 [Roadmap](#-roadmap)
- 🏄 [Community](#-community)
- 🙌 [Contributing](#-contributing)

&lt;/details&gt;

## 💡 What is RAGFlow?

[RAGFlow](https://ragflow.io/) is an open-source RAG (Retrieval-Augmented Generation) engine based on deep document
understanding. It offers a streamlined RAG workflow for businesses of any scale, combining LLM (Large Language Models)
to provide truthful question-answering capabilities, backed by well-founded citations from various complex formatted
data.

## 🎮 Demo

Try our demo at [https://demo.ragflow.io](https://demo.ragflow.io).

&lt;div align=&quot;center&quot; style=&quot;margin-top:20px;margin-bottom:20px;&quot;&gt;
&lt;img src=&quot;https://github.com/infiniflow/ragflow/assets/7248/2f6baa3e-1092-4f11-866d-36f6a9d075e5&quot; width=&quot;1200&quot;/&gt;
&lt;img src=&quot;https://github.com/user-attachments/assets/504bbbf1-c9f7-4d83-8cc5-e9cb63c26db6&quot; width=&quot;1200&quot;/&gt;
&lt;/div&gt;

## 🔥 Latest Updates

- 2025-03-19 Supports using a multi-modal model to make sense of images within PDF or DOCX files.
- 2025-02-28 Combined with Internet search (Tavily), supports reasoning like Deep Research for any LLMs.
- 2025-01-26 Optimizes knowledge graph extraction and application, offering various configuration options.
- 2024-12-18 Upgrades Document Layout Analysis model in DeepDoc.
- 2024-11-01 Adds keyword extraction and related question generation to the parsed chunks to improve the accuracy of retrieval.
- 2024-08-22 Support text to SQL statements through RAG.

## 🎉 Stay Tuned

⭐️ Star our repository to stay up-to-date with exciting new features and improvements! Get instant notifications for new
releases! 🌟

&lt;div align=&quot;center&quot; style=&quot;margin-top:20px;margin-bottom:20px;&quot;&gt;
&lt;img src=&quot;https://github.com/user-attachments/assets/18c9707e-b8aa-4caf-a154-037089c105ba&quot; width=&quot;1200&quot;/&gt;
&lt;/div&gt;

## 🌟 Key Features

### 🍭 **&quot;Quality in, quality out&quot;**

- [Deep document understanding](./deepdoc/README.md)-based knowledge extraction from unstructured data with complicated
  formats.
- Finds &quot;needle in a data haystack&quot; of literally unlimited tokens.

### 🍱 **Template-based chunking**

- Intelligent and explainable.
- Plenty of template options to choose from.

### 🌱 **Grounded citations with reduced hallucinations**

- Visualization of text chunking to allow human intervention.
- Quick view of the key references and traceable citations to support grounded answers.

### 🍔 **Compatibility with heterogeneous data sources**

- Supports Word, slides, excel, txt, images, scanned copies, structured data, web pages, and more.

### 🛀 **Automated and effortless RAG workflow**

- Streamlined RAG orchestration catered to both personal and large businesses.
- Configurable LLMs as well as embedding models.
- Multiple recall paired with fused re-ranking.
- Intuitive APIs for seamless integration with business.

## 🔎 System Architecture

&lt;div align=&quot;center&quot; style=&quot;margin-top:20px;margin-bottom:20px;&quot;&gt;
&lt;img src=&quot;https://github.com/infiniflow/ragflow/assets/12318111/d6ac5664-c237-4200-a7c2-a4a00691b485&quot; width=&quot;1000&quot;/&gt;
&lt;/div&gt;

## 🎬 Get Started

### 📝 Prerequisites

- CPU &gt;= 4 cores
- RAM &gt;= 16 GB
- Disk &gt;= 50 GB
- Docker &gt;= 24.0.0 &amp; Docker Compose &gt;= v2.26.1
  &gt; If you have not installed Docker on your local machine (Windows, Mac, or Linux),
  &gt; see [Install Docker Engine](https://docs.docker.com/engine/install/).

### 🚀 Start up the server

1. Ensure `vm.max_map_count` &gt;= 262144:

   &gt; To check the value of `vm.max_map_count`:
   &gt;
   &gt; ```bash
   &gt; $ sysctl vm.max_map_count
   &gt; ```
   &gt;
   &gt; Reset `vm.max_map_count` to a value at least 262144 if it is not.
   &gt;
   &gt; ```bash
   &gt; # In this case, we set it to 262144:
   &gt; $ sudo sysctl -w vm.max_map_count=262144
   &gt; ```
   &gt;
   &gt; This change will be reset after a system reboot. To ensure your change remains permanent, add or update the
   &gt; `vm.max_map_count` value in **/etc/sysctl.conf** accordingly:
   &gt;
   &gt; ```bash
   &gt; vm.max_map_count=262144
   &gt; ```

2. Clone the repo:

   ```bash
   $ git clone https://github.com/infiniflow/ragflow.git
   ```

3. Start up the server using the pre-built Docker images:

&gt; [!CAUTION]
&gt; All Docker images are built for x86 platforms. We don&#039;t currently offer Docker images for ARM64.
&gt; If you are on an ARM64 platform, follow [this guide](https://ragflow.io/docs/dev/build_docker_image) to build a Docker image compatible with your system.

   &gt; The command below downloads the `v0.17.2-slim` edition of the RAGFlow Docker image. See the following table for descriptions of different RAGFlow editions. To download a RAGFlow edition different from `v0.17.2-slim`, update the `RAGFLOW_IMAGE` variable accordingly in **docker/.env** before using `docker compose` to start the server. For example: set `RAGFLOW_IMAGE=infiniflow/ragflow:v0.17.2` for the full edition `v0.17.2`.

   ```bash
   $ cd ragflow/docker
   # Use CPU for embedding and DeepDoc tasks:
   $ docker compose -f docker-compose.yml up -d

   # To use GPU to accelerate embedding and DeepDoc tasks:
   # docker compose -f docker-compose-gpu.yml up -d
   ```

   | RAGFlow image tag | Image size (GB) | Has embedding models? | Stable?                  |
   |-------------------|-----------------|-----------------------|--------------------------|
   | v0.17.2           | &amp;approx;9       | :heavy_check_mark:    | Stable release           |
   | v0.17.2-slim      | &amp;approx;2       | ❌                   | Stable release            |
   | nightly           | &amp;approx;9       | :heavy_check_mark:    | _Unstable_ nightly build |
   | nightly-slim      | &amp;approx;2       | ❌                   | _Unstable_ nightly build  |

4. Check the server status after having the server up and running:

   ```bash
   $ docker logs -f ragflow-server
   ```

   _The following output confirms a successful launch of the system:_

   ```bash

         ____   ___    ______ ______ __
        / __ \ /   |  / ____// ____// /____  _      __
       / /_/ // /| | / / __ / /_   / // __ \| | /| / /
      / _, _// ___ |/ /_/ // __/  / // /_/ /| |/ |/ /
     /_/ |_|/_/  |_|\____//_/    /_/ \____/ |__/|__/

    * Running on all addresses (0.0.0.0)
   ```

   &gt; If you skip this confirmation step and directly log in to RAGFlow, your browser may prompt a `network anormal`
   &gt; error because, at that moment, your RAGFlow may not be fully initialized.

5. In your web browser, enter the IP address of your server and log in to RAGFlow.
   &gt; With the default settings, you only need to enter `http://IP_OF_YOUR_MACHINE` (**sans** port number) as the default
   &gt; HTTP serving port `80` can be omitted when using the default configurations.
6. In [service_conf.yaml.template](./docker/service_conf.yaml.template), select the desired LLM factory in `user_default_llm` and update
   the `API_KEY` field with the corresponding API key.

   &gt; See [llm_api_key_setup](https://ragflow.io/docs/dev/llm_api_key_setup) for more information.

   _The show is on!_

## 🔧 Configurations

When it comes to system configurations, you will need to manage the following files:

- [.env](./docker/.env): Keeps the fundamental setups for the system, such as `SVR_HTTP_PORT`, `MYSQL_PASSWORD`, and
  `MINIO_PASSWORD`.
- [service_conf.yaml.template](./docker/service_conf.yaml.template): Configures the back-end services. The environment variables in this file will be automatically populated when the Docker container starts. Any environment variables set within the Docker container will be available for use, allowing you to customize service behavior based on the deployment environment.
- [docker-compose.yml](./docker/docker-compose.yml): The system relies on [docker-compose.yml](./docker/docker-compose.yml) to start up.

&gt; The [./docker/README](./docker/README.md) file provides a detailed description of the environment settings and service
&gt; configurations which can be used as `${ENV_VARS}` in the [service_conf.yaml.template](./docker/service_conf.yaml.template) file.

To update the default HTTP serving port (80), go to [docker-compose.yml](./docker/docker-compose.yml) and change `80:80`
to `&lt;YOUR_SERVING_PORT&gt;:80`.

Updates to the above configurations require a reboot of all containers to take effect:

&gt; ```bash
&gt; $ docker compose -f docker-compose.yml up -d
&gt; ```

### Switch doc engine from Elasticsearch to Infinity

RAGFlow uses Elasticsearch by default for storing full text and vectors. To switch to [Infinity](https://github.com/infiniflow/infinity/), follow these steps:

1. Stop all running containers:

   ```bash
   $ docker compose -f docker/docker-compose.yml down -v
   ```

&gt; [!WARNING]
&gt; `-v` will delete the docker container volumes, and the existing data will be cleared.

2. Set `DOC_ENGINE` in **docker/.env** to `infinity`.

3. Start the containers:

   ```bash
   $ docker compose -f docker-compose.yml up -d
   ```

&gt; [!WARNING]
&gt; Switching to Infinity on a Linux/arm64 machine is not yet officially supported.

## 🔧 Build a Docker image without embedding models

This image is approximately 2 GB in size and relies on external LLM and embedding services.

```bash
git clone https://github.com/infiniflow/ragflow.git
cd ragflow/
docker build --platform linux/amd64 --build-arg LIGHTEN=1 -f Dockerfile -t infiniflow/ragflow:nightly-slim .
```

## 🔧 Build a Docker image including embedding models

This image is approximately 9 GB in size. As it includes embedding models, it relies on external LLM services only.

```bash
git clone https://github.com/infiniflow/ragflow.git
cd ragflow/
docker build --platform linux/amd64 -f Dockerfile -t infiniflow/ragflow:nightly .
```

## 🔨 Launch service from source for development

1. Install uv, or skip this step if it is already installed:

   ```bash
   pipx install uv
   ```

2. Clone the source code and install Python dependencies:

   ```bash
   git clone https://github.com/infiniflow/ragflow.git
   cd ragflow/
   uv sync --python 3.10 --all-extras # install RAGFlow dependent python modules
   ```

3. Launch the dependent services (MinIO, Elasticsearch, Redis, and MySQL) using Docker Compose:

   ```bash
   docker compose -f docker/docker-compose-base.yml up -d
   ```

   Add the following line to `/etc/hosts` to resolve all hosts specified in **docker/.env** to `127.0.0.1`:

   ```
   127.0.0.1       es01 infinity mysql minio redis
   ```

4. If you cannot access HuggingFace, set the `HF_ENDPOINT` environment variable to use a mirror site:

   ```bash
   export HF_ENDPOINT=https://hf-mirror.com
   ```

5. Launch backend service:

   ```bash
   source .venv/bin/activate
   export PYTHONPATH=$(pwd)
   bash docker/launch_backend_service.sh
   ```

6. Install frontend dependencies:
   ```bash
   cd web
   npm install
   ```
7. Launch frontend service:

   ```bash
   npm run dev
   ```

   _The following output confirms a successful launch of the system:_

   ![](https://github.com/user-attachments/assets/0daf462c-a24d-4496-a66f-92533534e187)

## 📚 Documentation

- [Quickstart](https://ragflow.io/docs/dev/)
- [Configuration](https://ragflow.io/docs/dev/configurations)
- [Release notes](https://ragflow.io/docs/dev/release_notes)
- [User guides](https://ragflow.io/docs/dev/category/guides)
- [Developer guides](https://ragflow.io/docs/dev/category/developers)
- [References](https://ragflow.io/docs/dev/category/references)
- [FAQs](https://ragflow.io/docs/dev/faq)

## 📜 Roadmap

See the [RAGFlow Roadmap 2025](https://github.com/infiniflow/ragflow/issues/4214)

## 🏄 Community

- [Discord](https://discord.gg/NjYzJD3GM3)
- [Twitter](https://twitter.com/infiniflowai)
- [GitHub Discussions](https://github.com/orgs/infiniflow/discussions)

## 🙌 Contributing

RAGFlow flourishes via open-source collaboration. In this spirit, we embrace diverse contributions from the community.
If you would like to be a part, review our [Contribution Guidelines](./CONTRIBUTING.md) first.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[codexu/note-gen]]></title>
            <link>https://github.com/codexu/note-gen</link>
            <guid>https://github.com/codexu/note-gen</guid>
            <pubDate>Sat, 19 Apr 2025 00:04:42 GMT</pubDate>
            <description><![CDATA[A cross-platform Markdown note-taking application dedicated to using AI to bridge recording and writing, organizing fragmented knowledge into a readable note.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/codexu/note-gen">codexu/note-gen</a></h1>
            <p>A cross-platform Markdown note-taking application dedicated to using AI to bridge recording and writing, organizing fragmented knowledge into a readable note.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 1,509</p>
            <p>Forks: 122</p>
            <p>Stars today: 39 stars today</p>
            <h2>README</h2><pre>&lt;img src=&quot;https://cdn.jsdelivr.net/gh/codexu/note-gen@dev/app-icon.png&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;

# NoteGen

![](https://github.com/codexu/note-gen/actions/workflows/release.yml/badge.svg?branch=release)
![](https://img.shields.io/github/v/release/codexu/note-gen)
![](https://img.shields.io/badge/version-alpha-orange)
![](https://img.shields.io/github/downloads/codexu/note-gen/total)
![](https://img.shields.io/github/commit-activity/m/codexu/note-gen)

English | [简体中文](README.CN.md)

NoteGen is a cross-platform `Markdown` note-taking application dedicated to using AI to bridge recording and writing, organizing fragmented knowledge into a readable note.

## Why Choose NoteGen?

- Lightweight: [Installation package](https://github.com/codexu/note-gen/releases) is **only about 10MB**, free with no ads or bundled software.
- Cross-platform: Supports Mac, Windows, Linux, and thanks to `Tauri2`&#039;s cross-platform capabilities, will support iOS and Android in the future.
- Supports multiple recording methods including `screenshots`, `text`, `illustrations`, `files`, `links`, etc., meeting fragmented recording needs across various scenarios.
- Native offline usage with `Markdown(.md)` as the storage format, while also supporting real-time synchronization to `private GitHub repositories` with history rollback.
- AI-enhanced: Configurable with ChatGPT, Gemini, Ollama, LM Studio, DeepSeek, and other models, with support for custom third-party model configuration.

## Screenshots

Recording:

![record](https://s2.loli.net/2025/04/14/NxhiWjMZT7RtusS.png)

Writing:

![writing](https://s2.loli.net/2025/04/16/LcgMvUa86IpRi4V.png)

Dark Mode:

![dark](https://s2.loli.net/2025/04/14/9JhgTie2X4tZLdz.png)

## From Recording to Writing

Conventional note-taking applications typically don&#039;t provide recording functionality. Users need to manually copy and paste content for recording, which greatly reduces efficiency. When faced with scattered recorded content, it requires significant effort to organize.

NoteGen is divided into `Recording` and `Writing` pages, with the following relationship:

- Recordings can be organized into notes and transferred to the writing page for in-depth composition.
- During writing, you can insert recordings at any time.

### Recording

The recording function is similar to an **AI chatbot**, but when conversing with it, you can associate it with previously recorded content, switching from conversation mode to organization mode to arrange recordings into a readable note.

The following auxiliary features can help you record more effectively:

- **Tags** to distinguish different recording scenarios.
- **Personas** with support for custom prompts to precisely control your AI assistant.
- **Clipboard Assistant** that automatically recognizes text or images in your clipboard and records them to your list.

### Writing

The writing section is divided into two parts: **File Manager** and **Markdown Editor**.

**File Manager**

- Supports management of local Markdown files and GitHub synchronized files.
- Supports unlimited directory hierarchy.
- Supports multiple sorting methods.

**Markdown Editor**

- Supports WYSIWYG, instant rendering, and split-screen preview modes.
- Supports version control with history rollback.
- Supports AI assistance for conversation, continuation, polishing, and translation functions.
- Supports image hosting, uploading images and converting them to Markdown image links.
- Supports HTML to Markdown conversion, automatically converting copied browser content to Markdown format.
- Supports outlines, math formulas, mind maps, charts, flowcharts, Gantt charts, sequence diagrams, staves, multimedia, voice reading, title anchors, code highlighting and copying, graphviz rendering, and plantuml UML diagrams.
- Supports real-time local content saving, delayed (10s without editing) automatic synchronization, and history rollback.

## Other Features

- Global search for quickly finding and jumping to specific content.
- Image hosting management for convenient management of image repository content.
- Themes and appearance with support for dark themes and appearance settings for Markdown, code, etc.
- Internationalization support, currently available in Chinese and English.

## How to Use?

### Download

Currently supports Mac, Windows, and Linux. Thanks to Tauri2&#039;s cross-platform capabilities, it will support iOS and Android in the future.

[Download NoteGen (alpha)](https://github.com/codexu/note-gen/releases)

### Enhancement

The note-taking application can be used directly without configuration. If you want a better experience, please open the settings page to configure AI and synchronization.

## Community

Welcome to join the NoteGen community group where you can ask questions, share usage experiences, or suggest improvements. You can also join to learn about Tauri and discuss it with me.

Scan the QR code to join the [discussion group](https://github.com/codexu/note-gen/discussions/110). If the QR code expires, you can add WeChat xu461229187 to join the group.

## Contribute

NoteGen is implemented using the following technology stack:

- [Tauri 2](https://v2.tauri.app/)
- [Next.js 15](https://nextjs.org/)
- [shadcn-ui](https://ui.shadcn.com/)

How to contribute:

- [Update plans](https://github.com/codexu/note-gen/issues/46)
- [Submit bugs or improvement suggestions](https://github.com/codexu/note-gen/issues)
- [Discussions](https://github.com/codexu/note-gen/discussions)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[wasp-lang/wasp]]></title>
            <link>https://github.com/wasp-lang/wasp</link>
            <guid>https://github.com/wasp-lang/wasp</guid>
            <pubDate>Sat, 19 Apr 2025 00:04:41 GMT</pubDate>
            <description><![CDATA[The fastest way to develop full-stack web apps with React & Node.js.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/wasp-lang/wasp">wasp-lang/wasp</a></h1>
            <p>The fastest way to develop full-stack web apps with React & Node.js.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 16,305</p>
            <p>Forks: 1,294</p>
            <p>Stars today: 43 stars today</p>
            <h2>README</h2><pre>&lt;p align=center&gt;
  &lt;img height=&quot;80px&quot; src=&quot;https://user-images.githubusercontent.com/1536647/77317442-78625700-6d0b-11ea-9822-0fb21e557e87.png&quot;/&gt;
&lt;/p&gt;
&lt;p align=center&gt;
  The fastest way to develop full-stack web apps with React &amp; Node.js.
&lt;/p&gt;
&lt;br&gt;
&lt;p align=center&gt;
  &lt;a href=&quot;https://github.com/wasp-lang/wasp/blob/main/LICENSE&quot;&gt;&lt;img alt=&quot;license&quot; src=&quot;https://img.shields.io/github/license/wasp-lang/wasp&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://github.com/wasp-lang/wasp/releases/latest&quot;&gt;&lt;img alt=&quot;latest release&quot; src=&quot;https://img.shields.io/github/v/release/wasp-lang/wasp&quot;/&gt;&lt;/a&gt;
  &lt;a href=&quot;https://discord.gg/rzdnErX&quot;&gt;&lt;img alt=&quot;discord&quot; src=&quot;https://img.shields.io/discord/686873244791210014?label=chat%20@%20discord&quot;/&gt;&lt;/a&gt;
&lt;/p&gt;

---

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://wasp.sh&quot;&gt;Web page&lt;/a&gt; | &lt;a href=&quot;https://wasp.sh/docs&quot;&gt;Docs&lt;/a&gt; | &lt;a href=&quot;https://e44cy1h4s0q.typeform.com/to/EPJCwsMi&quot;&gt;Deployed? Get swag! 👕&lt;/a&gt;
&lt;/p&gt;

&lt;br&gt;

Wasp (**W**eb **A**pplication **Sp**ecification) is a Rails-like framework for React, Node.js, and Prisma.  
Build your app in a day and deploy it with a single CLI command!

### Why is Wasp awesome

- 🚀 **Quick start**: Due to its expressiveness, you can create and deploy a production-ready web app from scratch with very few lines of concise, consistent, declarative code.
- 😌 **No boilerplate**: By abstracting away complex full-stack features, there is less boilerplate code. That means less code to maintain and understand! It also means easier upgrades.
- 🔓 **No lock-in**: You can deploy the Wasp app anywhere you like. There is no lock-in into specific providers; you have full control over the code (and can actually check it out in .wasp/ dir if you are interested ).

### Features

🔒 Full-stack Auth, 🖇️ RPC (Client &lt;-&gt; Server), 🚀 Simple Deployment, ⚙ ️Jobs, ✉️ Email Sending, 🛟 Full-stack Type Safety, ...

### Code example

Simple Wasp config file in which you describe the high-level details of your web app:

```js
// file: main.wasp

app todoApp {
  title: &quot;ToDo App&quot;,  // visible in the browser tab
  wasp: { version: &quot;^0.15.0&quot; },
  auth: { // full-stack auth out-of-the-box
    userEntity: User, methods: { email: {...} }
  }
}

route RootRoute { path: &quot;/&quot;, to: MainPage }
page MainPage {
  authRequired: true, // Limit access to logged-in users.
  component: import Main from &quot;@client/Main.tsx&quot; // Your React code.
}

query getTasks {
  fn: import { getTasks } from &quot;@server/tasks.js&quot;, // Your Node.js code.
  entities: [Task] // Automatic cache invalidation.
}

// file: schema.prisma

model Task { // Your Prisma data model.
  id          Int     @id @default(autoincrement())
  description String
  isDone      Boolean @default(false)
}
```

The rest of the code you write in React / Node.js / Prisma and just reference it from the .wasp file.

:arrow_forward: Check out [TodoApp example](/examples/tutorials/TodoApp) for the complete code example. :arrow_backward:

### How it works

&lt;img width=&quot;800px&quot; src=&quot;https://user-images.githubusercontent.com/1536647/231472285-126679e5-ecce-4cbb-8579-eb3cd9ba95bf.png&quot;/&gt;

Given a simple .wasp configuration file that describes the high-level details of your web app, and .js(x)/.css/..., source files with your unique logic, Wasp compiler generates the full source of your web app in the target stack: front-end, back-end and deployment.

This unique approach is what makes Wasp &quot;smart&quot; and gives it its superpowers!

For more information about Wasp, check [**docs**](https://wasp.sh/docs).

# Have a Wasp app deployed? - we will send you swag!

If you have a Wasp application running in production, we&#039;d love to send some swag your way! Fill out [this form](https://e44cy1h4s0q.typeform.com/to/EPJCwsMi), and we&#039;ll make it happen.

# Get started

Run

```
curl -sSL https://get.wasp.sh/installer.sh | sh
```

to install Wasp on OSX/Linux/WSL(Win). From there, just follow the instructions to run your first app in less than a minute!

For more details, check out [the docs](https://wasp.sh/docs).

# Wasp AI / Mage

Wasp comes with experimental AI code generator to help you kickstart your next Wasp project -&gt; you can use it via `wasp new` in the CLI (choose &quot;AI&quot; option) if you can provide your OpenAI keys or you can do it via our [Mage web app](https://usemage.ai) in which case our OpenAI keys are used in the background.

# This repository

This is the main repo of the Wasp universe, containing core code (mostly `waspc` - Wasp compiler) and the supporting materials.

# Project status

Currently, Wasp is in beta, with most features fleshed out and working well.
However, there are still a lot of improvements and additions that we have in mind for the future, and we are working on them constantly, so you can expect a lot of changes and improvements in the future.

While the idea is to support multiple web tech stacks in the future, right now, we are focusing on the specific stack: React + react-query, NodeJS + ExpressJS, and Prisma.

# Contributing

Any way you want to contribute is a good way :)!

The best place to start is to check out [waspc/](waspc/), where you can find detailed steps for first-time contributors + technical details about the Wasp compiler.

The core of Wasp is built in Haskell, but there are also a lot of non-Haskell parts of Wasp, so you will certainly be able to find something for you!

Even if you don&#039;t plan to submit any code, just joining the discussion on discord [![Discord](https://img.shields.io/discord/686873244791210014?label=chat%20on%20discord)](https://discord.gg/rzdnErX) and giving your feedback is already great and helps a lot (motivates us and helps us figure out how to shape Wasp)!

You can also:

- :star: Star this repo to show your interest/support.
- :mailbox: Stay updated by subscribing to our [email list](https://wasp.sh#signup).
- :speech_balloon: Join the discussion at https://github.com/wasp-lang/wasp/discussions .

# Careers

Check our [careers](https://wasp-lang.notion.site/Wasp-Careers-59fd1682c80d446f92be5fa65cc17672) page for a list of currently opened positions!

# Sponsors

&lt;a href=&quot;https://github.com/michelwaechter&quot;&gt;&lt;img src=&quot;https://github.com/michelwaechter.png&quot; width=&quot;50px&quot; alt=&quot;michelwaechter&quot; /&gt;&lt;/a&gt; - Our first sponsor ever! Thanks so much, Michel ❤️ , from the whole Wasp Team, for bravely going where nobody has been before :)!

&lt;a href=&quot;https://github.com/shayneczyzewski&quot;&gt;&lt;img src=&quot;https://github.com/shayneczyzewski.png&quot; width=&quot;50px&quot; alt=&quot;shayneczyzewski&quot; /&gt;&lt;/a&gt; - Thanks Shayne, for all the contributions you did so far and for your continuous support!

&lt;a href=&quot;https://github.com/velocity-one&quot;&gt;&lt;img src=&quot;https://github.com/velocity-one.png&quot; width=&quot;50px&quot; alt=&quot;VelocityOne&quot; /&gt;&lt;/a&gt; - Thanks VelocityOne for the generous donation!

&lt;a href=&quot;https://github.com/ricdex&quot;&gt;&lt;img src=&quot;https://github.com/ricdex.png&quot; width=&quot;50px&quot; alt=&quot;ricdex&quot; /&gt;&lt;/a&gt; - We are thankful for your support Ricardo in this early stage of Wasp :)!

&lt;a href=&quot;https://github.com/ThomasJonesUK&quot;&gt;&lt;img src=&quot;https://github.com/ThomasJonesUK.png&quot; width=&quot;50px&quot; alt=&quot;ThomasJonesUK&quot; /&gt;&lt;/a&gt; - Thanks Thomas for supporting Wasp :)!

&lt;a href=&quot;https://github.com/Arukaito&quot;&gt;&lt;img src=&quot;https://github.com/Arukaito.png&quot; width=&quot;50px&quot; alt=&quot;Arukaito&quot; /&gt;&lt;/a&gt; - Our awesome sponsor again and again!

&lt;a href=&quot;https://github.com/Case-E&quot;&gt;&lt;img src=&quot;https://github.com/Case-E.png&quot; width=&quot;50px&quot; alt=&quot;Case-E&quot; /&gt;&lt;/a&gt; - Big thanks for supporting us both via sponsorship and great suggestions!

## Past sponsors

&lt;a href=&quot;https://github.com/MarianoMiguel&quot;&gt;&lt;img src=&quot;https://github.com/MarianoMiguel.png&quot; width=&quot;50px&quot; alt=&quot;MarianoMiguel&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/Tech4Money&quot;&gt;&lt;img src=&quot;https://github.com/Tech4Money.png&quot; width=&quot;50px&quot; alt=&quot;Tech4Money&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/haseeb-heaven&quot;&gt;&lt;img src=&quot;https://github.com/haseeb-heaven.png&quot; width=&quot;50px&quot; alt=&quot;haseeb-heaven&quot; /&gt;&lt;/a&gt;
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[ant-design/ant-design]]></title>
            <link>https://github.com/ant-design/ant-design</link>
            <guid>https://github.com/ant-design/ant-design</guid>
            <pubDate>Sat, 19 Apr 2025 00:04:40 GMT</pubDate>
            <description><![CDATA[An enterprise-class UI design language and React UI library]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/ant-design/ant-design">ant-design/ant-design</a></h1>
            <p>An enterprise-class UI design language and React UI library</p>
            <p>Language: TypeScript</p>
            <p>Stars: 94,315</p>
            <p>Forks: 52,005</p>
            <p>Stars today: 26 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;&lt;a name=&quot;readme-top&quot;&gt;&lt;/a&gt;

&lt;img height=&quot;180&quot; src=&quot;https://gw.alipayobjects.com/zos/rmsportal/KDpgvguMpGfqaHPjicRK.svg&quot;&gt;

&lt;h1&gt;Ant Design&lt;/h1&gt;

An enterprise-class UI design language and React UI library.

[![CI status][github-action-image]][github-action-url] [![codecov][codecov-image]][codecov-url] [![NPM version][npm-image]][npm-url] [![NPM downloads][download-image]][download-url]

[![][bundlephobia-image]][bundlephobia-url] [![][jsdelivr-image]][jsdelivr-url] [![FOSSA Status][fossa-image]][fossa-url]

[![Follow Twitter][twitter-image]][twitter-url] [![Renovate status][renovate-image]][renovate-dashboard-url] [![][issues-helper-image]][issues-helper-url] [![dumi][dumi-image]][dumi-url] [![Issues need help][help-wanted-image]][help-wanted-url]

[Changelog](./CHANGELOG.en-US.md) · [Report Bug][github-issues-url] · [Request Feature][github-issues-url] · English · [中文](./README-zh_CN.md)

## ❤️ Sponsors and Backers [![](https://opencollective.com/ant-design/tiers/sponsors/badge.svg?label=Sponsors&amp;color=brightgreen)](https://opencollective.com/ant-design#support) [![](https://opencollective.com/ant-design/tiers/backers/badge.svg?label=Backers&amp;color=brightgreen)](https://opencollective.com/ant-design#support)

[![](https://opencollective.com/ant-design/tiers/sponsors.svg?avatarHeight=72)](https://opencollective.com/ant-design/contribute/sponsors-218/checkout) [![](https://opencollective.com/ant-design/tiers/backers.svg?avatarHeight=72)](https://opencollective.com/ant-design/contribute/backers-217/checkout)

[npm-image]: https://img.shields.io/npm/v/antd.svg?style=flat-square
[npm-url]: https://npmjs.org/package/antd
[github-action-image]: https://github.com/ant-design/ant-design/actions/workflows/test.yml/badge.svg
[github-action-url]: https://github.com/ant-design/ant-design/actions/workflows/test.yml
[codecov-image]: https://img.shields.io/codecov/c/github/ant-design/ant-design/master.svg?style=flat-square
[codecov-url]: https://codecov.io/gh/ant-design/ant-design/branch/master
[download-image]: https://img.shields.io/npm/dm/antd.svg?style=flat-square
[download-url]: https://npmjs.org/package/antd
[fossa-image]: https://app.fossa.io/api/projects/git%2Bgithub.com%2Fant-design%2Fant-design.svg?type=shield
[fossa-url]: https://app.fossa.io/projects/git%2Bgithub.com%2Fant-design%2Fant-design?ref=badge_shield
[help-wanted-image]: https://flat.badgen.net/github/label-issues/ant-design/ant-design/help%20wanted/open
[help-wanted-url]: https://github.com/ant-design/ant-design/issues?q=is%3Aopen+is%3Aissue+label%3A%22help+wanted%22
[twitter-image]: https://img.shields.io/twitter/follow/AntDesignUI.svg?label=Ant%20Design
[twitter-url]: https://twitter.com/AntDesignUI
[jsdelivr-image]: https://data.jsdelivr.com/v1/package/npm/antd/badge
[jsdelivr-url]: https://www.jsdelivr.com/package/npm/antd
[bundlephobia-image]: https://badgen.net/bundlephobia/minzip/antd?style=flat-square
[bundlephobia-url]: https://bundlephobia.com/package/antd
[issues-helper-image]: https://img.shields.io/badge/using-actions--cool-blue?style=flat-square
[issues-helper-url]: https://github.com/actions-cool
[renovate-image]: https://img.shields.io/badge/renovate-enabled-brightgreen.svg?style=flat-square
[renovate-dashboard-url]: https://github.com/ant-design/ant-design/issues/32498
[dumi-image]: https://img.shields.io/badge/docs%20by-dumi-blue?style=flat-square
[dumi-url]: https://github.com/umijs/dumi
[github-issues-url]: https://new-issue.ant.design

&lt;/div&gt;

[![](https://user-images.githubusercontent.com/507615/209472919-6f7e8561-be8c-4b0b-9976-eb3c692aa20a.png)](https://ant.design)

## ✨ Features

- 🌈 Enterprise-class UI designed for web applications.
- 📦 A set of high-quality React components out of the box.
- 🛡 Written in TypeScript with predictable static types.
- ⚙️ Whole package of design resources and development tools.
- 🌍 Internationalization support for dozens of languages.
- 🎨 Powerful theme customization based on CSS-in-JS.

## 🖥 Environment Support

- Modern browsers
- Server-side Rendering
- [Electron](https://www.electronjs.org/)

| [&lt;img src=&quot;https://raw.githubusercontent.com/alrra/browser-logos/master/src/edge/edge_48x48.png&quot; alt=&quot;Edge&quot; width=&quot;24px&quot; height=&quot;24px&quot; /&gt;](https://godban.github.io/browsers-support-badges/)&lt;br&gt;Edge | [&lt;img src=&quot;https://raw.githubusercontent.com/alrra/browser-logos/master/src/firefox/firefox_48x48.png&quot; alt=&quot;Firefox&quot; width=&quot;24px&quot; height=&quot;24px&quot; /&gt;](https://godban.github.io/browsers-support-badges/)&lt;br&gt;Firefox | [&lt;img src=&quot;https://raw.githubusercontent.com/alrra/browser-logos/master/src/chrome/chrome_48x48.png&quot; alt=&quot;Chrome&quot; width=&quot;24px&quot; height=&quot;24px&quot; /&gt;](https://godban.github.io/browsers-support-badges/)&lt;br&gt;Chrome | [&lt;img src=&quot;https://raw.githubusercontent.com/alrra/browser-logos/master/src/safari/safari_48x48.png&quot; alt=&quot;Safari&quot; width=&quot;24px&quot; height=&quot;24px&quot; /&gt;](https://godban.github.io/browsers-support-badges/)&lt;br&gt;Safari | [&lt;img src=&quot;https://raw.githubusercontent.com/alrra/browser-logos/master/src/electron/electron_48x48.png&quot; alt=&quot;Electron&quot; width=&quot;24px&quot; height=&quot;24px&quot; /&gt;](https://godban.github.io/browsers-support-badges/)&lt;br&gt;Electron |
| --- | --- | --- | --- | --- |
| Edge | last 2 versions | last 2 versions | last 2 versions | last 2 versions |

## 📦 Install

```bash
npm install antd
```

```bash
yarn add antd
```

```bash
pnpm add antd
```

```bash
bun add antd
```

## 🔨 Usage

```tsx
import { Button, DatePicker } from &#039;antd&#039;;

export default () =&gt; (
  &lt;&gt;
    &lt;Button type=&quot;primary&quot;&gt;PRESS ME&lt;/Button&gt;
    &lt;DatePicker placeholder=&quot;select date&quot; /&gt;
  &lt;/&gt;
);
```

## 🔗 Links

- [Home page](https://ant.design/)
- [Components Overview](https://ant.design/components/overview)
- [Change Log](CHANGELOG.en-US.md)
- [rc-components](https://react-component.github.io/)
- [🆕 Ant Design X](https://x.ant.design/index-cn)
- [Ant Design Pro](https://pro.ant.design/)
- [Pro Components](https://procomponents.ant.design)
- [Ant Design Mobile](https://mobile.ant.design)
- [Ant Design Mini](https://mini.ant.design)
- [Ant Design Charts](https://charts.ant.design)
- [Ant Design Web3](https://web3.ant.design)
- [Landing Pages](https://landing.ant.design)
- [Ant Motion](https://motion.ant.design)
- [Scaffold Market](https://scaffold.ant.design)
- [Developer Instruction](https://github.com/ant-design/ant-design/wiki/Development)
- [Versioning Release Note](https://github.com/ant-design/ant-design/wiki/%E8%BD%AE%E5%80%BC%E8%A7%84%E5%88%99%E5%92%8C%E7%89%88%E6%9C%AC%E5%8F%91%E5%B8%83%E6%B5%81%E7%A8%8B)
- [FAQ](https://ant.design/docs/react/faq)
- [Online Playground](https://u.ant.design/reproduce) for bug reports
- [Customize Theme](https://ant.design/docs/react/customize-theme)
- [How to Apply for Being A Collaborator](https://github.com/ant-design/ant-design/wiki/Collaborators#how-to-apply-for-being-a-collaborator)

## ⌨️ Development

Use [opensumi.run](https://opensumi.run), a free online pure front-end dev environment.

[![opensumi.run](https://custom-icon-badges.demolab.com/badge/opensumi-run-blue.svg?logo=opensumi)](https://opensumi.run/ide/ant-design/ant-design)

Or clone locally:

```bash
$ git clone git@github.com:ant-design/ant-design.git
$ cd ant-design
$ npm install
$ npm start
```

Open your browser and visit http://127.0.0.1:8001 , see more at [Development](https://github.com/ant-design/ant-design/wiki/Development).

## 🤝 Contributing [![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square)](https://makeapullrequest.com)

&lt;table&gt;
&lt;tr&gt;
  &lt;td&gt;
    &lt;a href=&quot;https://next.ossinsight.io/widgets/official/compose-recent-top-contributors?repo_id=34526884&quot; target=&quot;_blank&quot; style=&quot;display: block&quot; align=&quot;center&quot;&gt;
      &lt;picture&gt;
        &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://next.ossinsight.io/widgets/official/compose-recent-top-contributors/thumbnail.png?repo_id=34526884&amp;image_size=auto&amp;color_scheme=dark&quot; width=&quot;280&quot;&gt;
        &lt;img alt=&quot;Top Contributors of ant-design/ant-design - Last 28 days&quot; src=&quot;https://next.ossinsight.io/widgets/official/compose-recent-top-contributors/thumbnail.png?repo_id=34526884&amp;image_size=auto&amp;color_scheme=light&quot; width=&quot;280&quot;&gt;
      &lt;/picture&gt;
    &lt;/a&gt;
  &lt;/td&gt;
  &lt;td rowspan=&quot;2&quot;&gt;
    &lt;a href=&quot;https://next.ossinsight.io/widgets/official/compose-last-28-days-stats?repo_id=34526884&quot; target=&quot;_blank&quot; style=&quot;display: block&quot; align=&quot;center&quot;&gt;
      &lt;picture&gt;
        &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://next.ossinsight.io/widgets/official/compose-last-28-days-stats/thumbnail.png?repo_id=34526884&amp;image_size=auto&amp;color_scheme=dark&quot; width=&quot;655&quot; height=&quot;auto&quot;&gt;
        &lt;img alt=&quot;Performance Stats of ant-design/ant-design - Last 28 days&quot; src=&quot;https://next.ossinsight.io/widgets/official/compose-last-28-days-stats/thumbnail.png?repo_id=34526884&amp;image_size=auto&amp;color_scheme=light&quot; width=&quot;655&quot; height=&quot;auto&quot;&gt;
      &lt;/picture&gt;
    &lt;/a&gt;
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td&gt;
    &lt;a href=&quot;https://next.ossinsight.io/widgets/official/compose-org-active-contributors?period=past_28_days&amp;activity=new&amp;owner_id=12101536&amp;repo_ids=34526884&quot; target=&quot;_blank&quot; style=&quot;display: block&quot; align=&quot;center&quot;&gt;
      &lt;picture&gt;
        &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://next.ossinsight.io/widgets/official/compose-org-active-contributors/thumbnail.png?period=past_28_days&amp;activity=new&amp;owner_id=12101536&amp;repo_ids=34526884&amp;image_size=2x3&amp;color_scheme=dark&quot; width=&quot;273&quot; height=&quot;auto&quot;&gt;
        &lt;img alt=&quot;New participants of ant-design - past 28 days&quot; src=&quot;https://next.ossinsight.io/widgets/official/compose-org-active-contributors/thumbnail.png?period=past_28_days&amp;activity=new&amp;owner_id=12101536&amp;repo_ids=34526884&amp;image_size=2x3&amp;color_scheme=light&quot; width=&quot;273&quot; height=&quot;auto&quot;&gt;
      &lt;/picture&gt;
    &lt;/a&gt;
  &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;a href=&quot;https://openomy.app/github/ant-design/ant-design&quot; target=&quot;_blank&quot; style=&quot;display: block; width: 100%;&quot; align=&quot;center&quot;&gt;
  &lt;img src=&quot;https://openomy.app/svg?repo=ant-design/ant-design&amp;chart=bubble&amp;latestMonth=3&quot; target=&quot;_blank&quot; alt=&quot;Contribution Leaderboard&quot; style=&quot;display: block; width: 100%;&quot; /&gt;
 &lt;/a&gt;


Let&#039;s build a better antd together.

We warmly invite contributions from everyone. Before you get started, please take a moment to review our [Contributing Guide](https://ant.design/docs/react/contributing). Feel free to share your ideas through [Pull Requests](https://github.com/ant-design/ant-design/pulls) or [GitHub Issues](https://github.com/ant-design/ant-design/issues). If you&#039;re interested in enhancing our codebase, explore the [Development Instructions](https://github.com/ant-design/ant-design/wiki/Development) and enjoy your coding journey! :)

For collaborators, adhere to our [Pull Request Principle](https://github.com/ant-design/ant-design/wiki/PR-principle) and utilize our [Pull Request Template](https://github.com/ant-design/ant-design/wiki/PR-principle#pull-request-template) when creating a Pull Request.

## Issue funding

We use [Polar.sh](https://polar.sh/ant-design) and [Issuehunt](https://issuehunt.io/repos/3452688) to up-vote and promote specific features that you would like to see and implement. Check our backlog and help us:

&lt;a href=&quot;https://polar.sh/ant-design&quot;&gt;&lt;img src=&quot;https://polar.sh/embed/fund-our-backlog.svg?org=ant-design&quot; /&gt;&lt;/a&gt;

[![Let&#039;s fund issues in this repository](https://raw.githubusercontent.com/BoostIO/issuehunt-materials/master/v1/issuehunt-button-v1.svg)](https://issuehunt.io/repos/34526884)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[hyperai/tvm-cn]]></title>
            <link>https://github.com/hyperai/tvm-cn</link>
            <guid>https://github.com/hyperai/tvm-cn</guid>
            <pubDate>Sat, 19 Apr 2025 00:04:39 GMT</pubDate>
            <description><![CDATA[TVM Documentation in Chinese Simplified / TVM 中文文档]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/hyperai/tvm-cn">hyperai/tvm-cn</a></h1>
            <p>TVM Documentation in Chinese Simplified / TVM 中文文档</p>
            <p>Language: TypeScript</p>
            <p>Stars: 1,002</p>
            <p>Forks: 153</p>
            <p>Stars today: 23 stars today</p>
            <h2>README</h2><pre># Apache TVM 中文文档

[中文文档](https://tvm.hyper.ai/) |
[参与社区共建](CONTRIBUTING.md) |
[了解更多](https://hyper.ai/) |
[版本注释](NEWS.md)

TVM 是一个开源的深度学习编译器，适用于 CPU、GPU、ARM 等多种硬件架构，旨在使机器学习工程师能够在任意硬件后端，高效地运行并优化计算。

鉴于 TVM 相关的中文学习资料比较零散，不利于开发者系统性学习，我们在 GitHub 上创建了 TVM 文档翻译项目。

目前中文文档的版本是基于 TVM v0.10.0 进行的本土化，随着 TVM 官方版本及文档的更新，中文文档也会不断调整，你可以：

* 学习 TVM 中文文档，为翻译不准确或有歧义的地方 [提交 issue](https://github.com/hyperai/tvm-cn/issues) 或 [PR](https://github.com/hyperai/tvm-cn/pulls)
* 参与开源共建、追踪文档更新，并认领文档翻译，成为 TVM 中文文档贡献者
* 加入 TVM 中文社区、结识同行并参与更多讨论及交流

真诚希望能借此项目，为 TVM 中文社区的发展带来一些微小的帮助。

## 参与贡献

本地开发服务器需先安装 Node.js 以及 [pnpm](https://pnpm.io/installation)。

```bash
pnpm install
pnpm start
```

迁移图片，将第三方的外部图片按其完整路径进行迁移，例如图片：

```md
![图片](https://raw.githubusercontent.com/tvmai/tvmai.github.io/main/images/relay/dataflow.png)
```

请将其保存在项目中的如下路径：

```
static/img/docs/tvmai/tvmai.github.io/main/images/relay/dataflow.png
```

然后在文档中替换为：

```md
![图片](/img/docs/tvmai/tvmai.github.io/main/images/relay/dataflow.png)
```

生成 HTML 文件 (Deprecated)

```bash
sphinx-build -b html docs build
```

## 创建新版本

如果当前版本为 `0.12.0`，想升到 `0.13.0`，那么你需要先保存当前版本

```bash
pnpm run docusaurus docs:version 0.12.0
```

然后编辑 `docusaurus.config.ts` 中 `versions.current.label` 为最新版本 `0.13.0`
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[RealKai42/qwerty-learner]]></title>
            <link>https://github.com/RealKai42/qwerty-learner</link>
            <guid>https://github.com/RealKai42/qwerty-learner</guid>
            <pubDate>Sat, 19 Apr 2025 00:04:38 GMT</pubDate>
            <description><![CDATA[为键盘工作者设计的单词记忆与英语肌肉记忆锻炼软件 / Words learning and English muscle memory training software designed for keyboard workers]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/RealKai42/qwerty-learner">RealKai42/qwerty-learner</a></h1>
            <p>为键盘工作者设计的单词记忆与英语肌肉记忆锻炼软件 / Words learning and English muscle memory training software designed for keyboard workers</p>
            <p>Language: TypeScript</p>
            <p>Stars: 18,276</p>
            <p>Forks: 1,864</p>
            <p>Stars today: 14 stars today</p>
            <h2>README</h2><pre>&lt;div align=center&gt;
&lt;img  src=&quot;src/assets/logo.svg&quot;/&gt;
&lt;/div&gt;

&lt;h1 align=&quot;center&quot;&gt;
  Qwerty Learner
&lt;/h1&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;./docs/README_EN.md&quot;&gt;English&lt;/a&gt;
  &lt;a href=&quot;./docs/README_JP.md&quot;&gt;日本語&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  为键盘工作者设计的单词记忆与英语肌肉记忆锻炼软件
&lt;/p&gt;

&lt;p align=&quot;center&quot; style=&quot;display: flex; justify-content: center; gap: 10px;&quot;&gt;
  &lt;a href=&quot;https://github.com/Realkai42/qwerty-learner/blob/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/Realkai42/qwerty-learner&quot; alt=&quot;License&quot;&gt;&lt;/a&gt;
  &lt;a&gt;&lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg&quot;/&gt;&lt;/a&gt;
  &lt;a&gt;&lt;img src=&quot;https://img.shields.io/badge/Powered%20by-React-blue&quot;/&gt;&lt;/a&gt;
  &lt;a&gt;&lt;img src=&quot;https://img.shields.io/github/stars/RealKai42/qwerty-learner&quot;/&gt;&lt;/a&gt;
  &lt;a&gt;&lt;img src=&quot;https://img.shields.io/github/forks/RealKai42/qwerty-learner&quot;/&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;div align=center&gt;
&lt;img  src=&quot;docs/Screenshot.png&quot;/&gt;
&lt;/div&gt;

## 📸 在线访问

**首选部署**: &lt;https://qwerty.kaiyi.cool/&gt;
GitHub Pages: &lt;https://realkai42.github.io/qwerty-learner/&gt;

镜像仓库:
[GitCode: RealKai42/qwerty-learner](https://gitcode.com/RealKai42/qwerty-learner/overview)
[Gitee: KaiyiWing/qwerty-learner](https://gitee.com/KaiyiWing/qwerty-learner)
&lt;br/&gt;
&lt;br/&gt;

项目已发布 VSCode 插件版，一键启动、随时开始练习
[VSCode Plugin Market](https://marketplace.visualstudio.com/items?itemName=Kaiyi.qwerty-learner)
[GitHub](https://github.com/Realkai42/qwerty-learner-vscode)

&lt;br /&gt;

## 快速部署

### Vercel

[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/clone?repository-url=https%3A%2F%2Fgithub.com%2FRealKai42%2Fqwerty-learner)

#### 部署步骤

1. 更新 `Vercel Build &amp; Development Settings` -&gt; `Output Directory`：&quot;build&quot;
2. Click Deploy Button

&lt;br /&gt;

## ✨ 设计思想

软件设计的目标群体为以英语作为主要工作语言的键盘工作者。部分人会出现输入母语时的打字速度快于英语的情况，因为多年的母语输入练就了非常坚固的肌肉记忆 💪，而英语输入的肌肉记忆相对较弱，易出现输入英语时“提笔忘字”的现象。

同时为了巩固英语技能，也需要持续的背诵单词 📕，本软件将英语单词的记忆与英语键盘输入的肌肉记忆的锻炼相结合，可以在背诵单词的同时巩固肌肉记忆。

为了避免造成错误的肌肉记忆，设计上如果用户单词输入错误则需要重新输入单词，尽可能确保用户维持正确的肌肉记忆。

软件也对需要机考英语的人群有一定的帮助。

**For Coder**：

内置了程序员工作常用单词的词库，方便练习工作中常用的单词、提高输入速度。也内置了诸多语言的 API 的练习，帮助以程序员快速熟悉常用的 API，更多语言的 API 正在逐步添加中...

&lt;div align=center&gt;
&lt;img  src=&quot;https://github.com/Realkai42/qwerty-learner/blob/master/docs/coder.png&quot;/&gt;
&lt;/div&gt;

&lt;br /&gt;
&lt;br /&gt;

## 🛠 功能列表

### 词库

内置了常用的 CET-4 、CET-6 、GMAT 、GRE 、IELTS 、SAT 、TOEFL 、考研英语、专业四级英语、专业八级英语，也有程序员常见英语单词以及多种编程语言 API 等词库。 尽可能满足大部分用户对单词记忆的需求，也非常欢迎社区贡献更多的词库。
&lt;br /&gt;
&lt;br /&gt;

### 音标显示、发音功能

方便用户在记忆单词时，同时记忆读音与音标。

&lt;div align=center&gt;
&lt;img  src=&quot;https://github.com/Realkai42/qwerty-learner/blob/master/docs/phonetic.jpeg&quot;/&gt;
&lt;/div&gt;
&lt;br /&gt;
&lt;br /&gt;

### 默写模式

在用户完成一个章节的练习后，会弹出选项是否默写本章，方便用户巩固本章学习的单词。

&lt;div align=center&gt;
&lt;img  src=&quot;https://github.com/Realkai42/qwerty-learner/blob/master/docs/dictation.png&quot;/&gt;
&lt;/div&gt;
&lt;br /&gt;
&lt;br /&gt;

### 速度、正确率显示

量化用户输入的速度和输入的正确率，让用户有感知的了解自己技能的提升

&lt;div align=center&gt;
&lt;img  src=&quot;https://github.com/Realkai42/qwerty-learner/blob/master/docs/speed.jpeg&quot;/&gt;
&lt;/div&gt;
&lt;br /&gt;
&lt;br /&gt;

## 如何贡献

### 贡献代码

[Call for Contributor](https://github.com/Realkai42/qwerty-learner/issues/390)
[贡献准则](./docs/CONTRIBUTING.md)

### 贡献词库

[导入词典](./docs/toBuildDict.md)

## 运行项目

本项目是基于`React`开发的，需要 node 环境来运行。

### 环境准备

1. NodeJS
2. Git
3. Yarn

&gt; **验证是否已经拥有相关环境**
&gt;
&gt; 1. 手动验证  
&gt;    请在命令行下执行以下命令，查看是否有对应版本输出
&gt;
&gt;    ```sh
&gt;    node --version
&gt;    git --version
&gt;    yarn --version
&gt;    ```
&gt;
&gt; 2. 脚本验证  
&gt;    使用我们提供的脚本对所需环境进行验证，如果确实依赖项会自动安装
&gt;    - Windows 用户可以直接执行 [pre-check.ps1](scripts/pre-check.ps1) 脚本
&gt;    - MacOS 用户可以直接执行 [pre-check.sh](scripts/pre-check.sh) 脚本

如果有对应环境缺失，我们可以参考下列官方文档进行安装

&gt; - [NodeJS](https://nodejs.org/en/download)
&gt; - [Git](https://git-scm.com/downloads)
&gt; - [yarn](https://classic.yarnpkg.com/lang/en/docs/install)

### 手动安装

1. 在命令行中执行 `git clone https://github.com/RealKai42/qwerty-learner.git` 将项目拉取到本地, 如果不使用 git 可能因为缺少依赖而无法运行
2. 在命令行中执行 `cd qwerty-learner`，进入项目根目录，执行`yarn install`来下载依赖。
3. 执行`yarn start`来启动项目，项目默认地址为`http://localhost:5173/`
4. 在浏览器中打开`http://localhost:5173/`来访问项目。

### 脚本执行

对于 Windows 用户，可以直接执行 [install.ps1](scripts/install.ps1) 脚本，来一键安装依赖并启动项目。

1. 打开 powershell，定位到项目根目录中的`scripts`目录
2. 在命令行中，执行`.\install.ps1`
3. 等待脚本完成。

&gt; 备注
&gt; 脚本依赖`winget`来安装 node，仅在 Windows 10 1709（版本 16299）或更高版本上受支持！

对于 MacOS 用户，可以直接执行 [install.sh](scripts/install.sh) 脚本来一键安装依赖并启动项目

1. 打开终端，并进入此项目文件夹
2. 在命令行中执行 `scripts/install.sh`
3. 等待脚本完成

&gt; 此脚本依赖于 `homebrew`，请确保自己电脑上可以执行`brew`命令

## 🏆 荣誉

- Github 全球趋势榜上榜项目
- V2EX 全站热搜项目
- Gitee 全站推荐项目
- [少数派首页推荐](https://sspai.com/post/67535)
- GitCode 开源摘星计划-毕业项目（[G-Star 计划](https://gitcode.com/g-star)）
- Gitee 最有价值开源项目（[GVP](https://gitee.com/gvp)）

## 📕 词库列表

- CET-4
- CET-6
- GMAT
- GRE
- IELTS
- SAT
- TOEFL
- 考研英语
- 专业四级英语
- 专业八级英语
- Coder Dict 程序员常用词
- 高考
- 中考
- 商务英语
- BEC
- 人教版英语 3-9 年级
- 王陆雅思王听力语料库 [@Saigyouji_WKKun](https://github.com/ggehuliang)
- 日语常见词、N1 ～ N5 [@xiaojia](https://github.com/wetery)
- 哈萨克语基础 3000 词(哈拼版) 来源于 [@Elgar](https://github.com/Elgar17) 由 [@Herbert He](https://github.com/HerbertHe) 通过 [哈拼](https://ha-pin.js.org) 技术支持

如果您需要背诵其他词库，欢迎在 Issue 中提出

&lt;br /&gt;
&lt;br /&gt;

## 📗 API 词库

- JavaScript API. [@sdu-gyf](https://github.com/sdu-gyf)
- Node.js API. [@chrysalis1215](https://github.com/chrysalis1215)
- Java API. [@darkSheep](https://github.com/SFAfreshman)
- Linux Command. [@归谜](https://github.com/vhxubo)
- C#: List API [@nidbCN](https://github.com/nidbCN)

目前 API 相关词库主要依赖于社区贡献，如果您想贡献自己需要的 API 词库，建议参考 [Issue #42](https://github.com/Realkai42/qwerty-learner/issues/40) [pr #67](https://github.com/Realkai42/qwerty-learner/pull/67) 贡献词典。

&lt;br /&gt;
&lt;br /&gt;

## 🎙 功能与建议

目前项目处于开发初期，新功能正在持续添加中，如果你对软件有任何功能与建议，欢迎在 Issues 中提出

项目的进展与未来计划在 [Issue](https://github.com/Realkai42/qwerty-learner/issues/42) 中详细介绍，内部也包含对未来功能的意见征询等，如果对 Qwerty Learner 的未来感兴趣，欢迎参与讨论。

如果你也喜欢本软件的设计思想，欢迎提交 pr，非常感谢你对我们的支持！
&lt;br /&gt;
&lt;br /&gt;

## 🏄‍♂️ 贡献指南

如果您对本项目感兴趣，我们非常欢迎参与到项目的贡献中，我们会尽可能地提供帮助

在贡献前，希望您阅读 [Issue #42](https://github.com/Realkai42/qwerty-learner/issues/42) 了解我们目前的开发计划，我们希望您能参与到&quot;计划中&quot;的工作亦或者 Issue 区 Label 为 &quot;Help Wanted&quot; 的工作，我们也非常欢迎您实现自己的想法。

如果您确定了想要参与的工作，希望在有基本进展后提交 draft pr，我们可以在 draft pr 上进行讨论，也有利于听取其他 collaborator 的意见。

再次感谢您对项目的贡献！🎉

&lt;br /&gt;

## ☕️ Buy us a coffe

非常感谢大家使用 Qwerty Learner, 目前该网站由三个人用业余时间在维护，我们希望在未来购买独立的域名(目前使用 vercel 部署)，并购买服务器以方便国内用户访问与云同步存储数据。

如果您喜欢我们软件，非常感谢您对我们未来的支持!

&lt;img  src=&quot;https://github.com/Realkai42/qwerty-learner/blob/master/docs/alipay.png&quot; width=&quot;200px&quot;/&gt;

## 👨‍💻 Contributors

&lt;a href=&quot;https://github.com/Realkai42/qwerty-learner/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=Realkai42/qwerty-learner&quot; /&gt;
&lt;/a&gt;

## 🎁 大感谢

### 灵感来源

[Keybr](https://www.keybr.com/)
以算法著称，功能非常完善的打字网站，根据用户输入每个字母的正确率与速度生成“伪英语”来帮助用户集中锻炼个别输入较慢的字母。并可以根据用户的输入记录生成完整的分析报告。

也是本项目的核心灵感来源，Keybr 更多针对英语为母语的用户。在我使用 Keybr 练习打字时，觉得虽然生成的伪英语能够练习输入不顺畅的个别字母，但并不能提升非母语用户对单词的掌握，于是有了本项目。

[Typing Academy](https://www.typing.academy)
非常优秀的打字练习网站
其优秀的 UI 风格，以及对速度、正确率的展示极大的影响了本项目的 UI 设计

[react-code-game](https://github.com/webzhd/react-code-game)
一个非常酷的开源项目，使用 ts 实现，可以在练习打字的同时练习 js 内置 api，项目中添加代码 api 的想法便来源自此项目。
&lt;br/&gt;&lt;br/&gt;

### 开源项目

[React](https://github.com/facebook/react) &amp; [CRA](https://github.com/facebook/create-react-app)
完整和详细的文档对初学者非常友好，React 系的文档是我目前自学过程中读过最棒的文档，几乎解决使用中大部分问题。非常感谢 React 对开源世界的贡献，为我们搭建了很好的基础，让初学者也能构建非常棒的软件。

[Tailwindcss](https://tailwindcss.com/docs)
如果没有 tailwind，这个项目还有再拖一阵子，tailwind 的设计思路解决了 css 入门选手对写复杂 css 的恐惧，让新手以一个非常舒适的方式去设计 UI。
&lt;br/&gt;&lt;br/&gt;

### 数据来源

字典数据来自于[kajweb](https://github.com/kajweb/dict)，项目爬取了常见的字典，也是这个项目让我看到了实现本项目的希望。

语音数据来源于[有道词典](https://www.youdao.com/)开放 API，感谢有道的贡献让我们这种小项目也可以用上非常专业的发音资源，感谢有道团队以及考神团队为中国教育与中外交流做出的重要贡献。

JS API 来自于[react-code-game](https://github.com/webzhd/react-code-game) ，感谢项目对 JS API 的爬取与预处理。
&lt;br/&gt;&lt;br/&gt;

### 项目 Icon

感谢[libregd](https://github.com/libregd)提供图标设计，给项目贡献了多个好看的图标设计方案，同时也在项目的进行中提供了设计、建议、未来规划等诸多支持

### 感谢支持

感谢[云谦](https://github.com/sorrycc)、[大圣](https://github.com/shengxinjing) 在项目只有十几个 star 时关注了项目，给项目推进下去的动力。

&lt;br/&gt;

也感谢在项目初期跟我讨论 idea、提供建议并时不时 Push 一下我的朋友们，没有你们这个 idea 可能还得再拖一年（🐶

感谢 [Pear Mini](https://github.com/pearmini) ，最开始跟我讨论 idea 给我项目支持，也是他的项目让我相信即使是一个学生的 idea 实现出来也可以很酷。 他的 [Gossip](https://github.com/pearmini/gossip) 项目完全是 Next Generation Slides 级别的创意！

感谢 [AZ](https://github.com/sailist)，鼓励我把 idea 实现出来（虽然我还是拖了很久），他无与伦比的行动力影响了我。他是一个非常酷的 lib maker，写了很多非常棒的 python 库，例如中文语音识别的框架[ASRFrame](https://github.com/sailist/ASRFrame)

感谢 [Luyu Cheng](https://github.com/chengluyu)，我认识的最酷的前端大佬，给项目与我的前端自学提供了无尽的帮助。在项目初期帮助我进行技术选型，在开发阶段帮我解决技术问题，为我不知道如何实现的 feature 提供技术思路，也为项目贡献了很多非常受欢迎的 feature。

## 🌟 Stargazers over time

[![Stargazers over time](https://starchart.cc/Realkai42/qwerty-learner.svg)](https://starchart.cc/Realkai42/qwerty-learner)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[prisma/prisma]]></title>
            <link>https://github.com/prisma/prisma</link>
            <guid>https://github.com/prisma/prisma</guid>
            <pubDate>Sat, 19 Apr 2025 00:04:37 GMT</pubDate>
            <description><![CDATA[Next-generation ORM for Node.js & TypeScript | PostgreSQL, MySQL, MariaDB, SQL Server, SQLite, MongoDB and CockroachDB]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/prisma/prisma">prisma/prisma</a></h1>
            <p>Next-generation ORM for Node.js & TypeScript | PostgreSQL, MySQL, MariaDB, SQL Server, SQLite, MongoDB and CockroachDB</p>
            <p>Language: TypeScript</p>
            <p>Stars: 41,932</p>
            <p>Forks: 1,719</p>
            <p>Stars today: 18 stars today</p>
            <h2>README</h2><pre>![Prisma](https://i.imgur.com/h6UIYTu.png)

&lt;div align=&quot;center&quot;&gt;
  &lt;h1&gt;Prisma&lt;/h1&gt;
  &lt;a href=&quot;https://www.npmjs.com/package/prisma&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/prisma.svg?style=flat&quot; /&gt;&lt;/a&gt;
  &lt;a href=&quot;https://github.com/prisma/prisma/blob/main/CONTRIBUTING.md&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg&quot; /&gt;&lt;/a&gt;
  &lt;a href=&quot;https://github.com/prisma/prisma/blob/main/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-Apache%202-blue&quot; /&gt;&lt;/a&gt;
  &lt;a href=&quot;https://pris.ly/discord&quot;&gt;&lt;img alt=&quot;Discord&quot; src=&quot;https://img.shields.io/discord/937751382725886062?label=Discord&quot;&gt;&lt;/a&gt;
  &lt;br /&gt;
  &lt;br /&gt;
  &lt;a href=&quot;https://www.prisma.io/docs/getting-started/quickstart&quot;&gt;Quickstart&lt;/a&gt;
  &lt;span&gt;&amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp;&lt;/span&gt;
  &lt;a href=&quot;https://www.prisma.io/&quot;&gt;Website&lt;/a&gt;
  &lt;span&gt;&amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp;&lt;/span&gt;
  &lt;a href=&quot;https://www.prisma.io/docs/&quot;&gt;Docs&lt;/a&gt;
  &lt;span&gt;&amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp;&lt;/span&gt;
  &lt;a href=&quot;https://github.com/prisma/prisma-examples/&quot;&gt;Examples&lt;/a&gt;
  &lt;span&gt;&amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp;&lt;/span&gt;
  &lt;a href=&quot;https://www.prisma.io/blog&quot;&gt;Blog&lt;/a&gt;
  &lt;span&gt;&amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp;&lt;/span&gt;
  &lt;a href=&quot;https://pris.ly/discord?utm_source=github&amp;utm_medium=prisma&amp;utm_content=repo_readme&quot;&gt;Discord&lt;/a&gt;
  &lt;span&gt;&amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp;&lt;/span&gt;
  &lt;a href=&quot;https://pris.ly/x?utm_source=github&amp;utm_medium=prisma&amp;utm_content=repo_readme&quot;&gt;Twitter&lt;/a&gt;
  &lt;span&gt;&amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp;&lt;/span&gt;
  &lt;a href=&quot;https://pris.ly/youtube?utm_source=github&amp;utm_medium=prisma&amp;utm_content=repo_readme&quot;&gt;Youtube&lt;/a&gt;
  &lt;br /&gt;
  &lt;hr /&gt;
&lt;/div&gt;

## What is Prisma?

Prisma ORM is a **next-generation ORM** that consists of these tools:

- [**Prisma Client**](https://www.prisma.io/docs/concepts/components/prisma-client): Auto-generated and type-safe query builder for Node.js &amp; TypeScript
- [**Prisma Migrate**](https://www.prisma.io/docs/concepts/components/prisma-migrate): Declarative data modeling &amp; migration system
- [**Prisma Studio**](https://github.com/prisma/studio): GUI to view and edit data in your database

Prisma Client can be used in _any_ Node.js or TypeScript backend application (including serverless applications and microservices). This can be a [REST API](https://www.prisma.io/docs/concepts/overview/prisma-in-your-stack/rest), a [GraphQL API](https://www.prisma.io/docs/concepts/overview/prisma-in-your-stack/graphql), a gRPC API, or anything else that needs a database.

**If you need a database to use with Prisma ORM, check out [Prisma Postgres](https://www.prisma.io/docs/getting-started/quickstart-prismaPostgres?utm_source=github&amp;utm_medium=prisma-readme).**

## Getting started

### Quickstart (5min)

The fastest way to get started with Prisma is by following the quickstart guides. You can choose either of two databases:

- [Prisma Postgres](https://www.prisma.io/docs/getting-started/quickstart-prismaPostgres)
- [SQLite](https://www.prisma.io/docs/getting-started/quickstart-sqlite)

### Bring your own database

If you already have your own database, you can follows these guides:

- [Add Prisma to an existing project](https://www.prisma.io/docs/getting-started/setup-prisma/add-to-existing-project/relational-databases-typescript-postgresql)
- [Set up a new project with Prisma from scratch](https://www.prisma.io/docs/getting-started/setup-prisma/start-from-scratch/relational-databases-typescript-postgresql)

## How Prisma ORM works

This section provides a high-level overview of how Prisma ORM works and its most important technical components. For a more thorough introduction, visit the [Prisma documentation](https://www.prisma.io/docs/).

### The Prisma schema

Every project that uses a tool from the Prisma toolkit starts with a [Prisma schema file](https://www.prisma.io/docs/concepts/components/prisma-schema). The Prisma schema allows developers to define their _application models_ in an intuitive data modeling language. It also contains the connection to a database and defines a _generator_:

```prisma
// Data source
datasource db {
  provider = &quot;postgresql&quot;
  url      = env(&quot;DATABASE_URL&quot;)
}

// Generator
generator client {
  provider = &quot;prisma-client-js&quot;
}

// Data model
model Post {
  id        Int     @id @default(autoincrement())
  title     String
  content   String?
  published Boolean @default(false)
  author    User?   @relation(fields:  [authorId], references: [id])
  authorId  Int?
}

model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  name  String?
  posts Post[]
}
```

In this schema, you configure three things:

- **Data source**: Specifies your database connection (via an environment variable)
- **Generator**: Indicates that you want to generate Prisma Client
- **Data model**: Defines your application models

---

### The Prisma data model

On this page, the focus is on the data model. You can learn more about [Data sources](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-schema/data-sources) and [Generators](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-schema/generators) on the respective docs pages.

#### Functions of Prisma models

The data model is a collection of [models](https://www.prisma.io/docs/concepts/components/prisma-schema/data-model#defining-models). A model has two major functions:

- Represent a table in the underlying database
- Provide the foundation for the queries in the Prisma Client API

#### Getting a data model

There are two major workflows for &quot;getting&quot; a data model into your Prisma schema:

- Generate the data model from [introspecting](https://www.prisma.io/docs/concepts/components/introspection) a database
- Manually writing the data model and mapping it to the database with [Prisma Migrate](https://www.prisma.io/docs/concepts/components/prisma-migrate)

Once the data model is defined, you can [generate Prisma Client](https://www.prisma.io/docs/concepts/components/prisma-client/generating-prisma-client) which will expose CRUD and more queries for the defined models. If you&#039;re using TypeScript, you&#039;ll get full type-safety for all queries (even when only retrieving the subsets of a model&#039;s fields).

---

### Accessing your database with Prisma Client

#### Generating Prisma Client

The first step when using Prisma Client is installing its npm package:

```
npm install @prisma/client
```

Note that the installation of this package invokes the `prisma generate` command which reads your Prisma schema and _generates_ the Prisma Client code. The code will be located in `node_modules/.prisma/client`, which is exported by `node_modules/@prisma/client/index.d.ts`.

After you change your data model, you&#039;ll need to manually re-generate Prisma Client to ensure the code inside `node_modules/.prisma/client` gets updated:

```
npx prisma generate
```

Refer to the documentation for more information about [&quot;generating the Prisma client&quot;](https://www.prisma.io/docs/concepts/components/prisma-client/generating-prisma-client).

#### Using Prisma Client to send queries to your database

Once the Prisma Client is generated, you can import it in your code and send queries to your database. This is what the setup code looks like.

##### Import and instantiate Prisma Client

You can import and instantiate Prisma Client as follows:

```ts
import { PrismaClient } from &#039;@prisma/client&#039;

const prisma = new PrismaClient()
```

or

```js
const { PrismaClient } = require(&#039;@prisma/client&#039;)

const prisma = new PrismaClient()
```

Now you can start sending queries via the generated Prisma Client API, here are a few sample queries. Note that all Prisma Client queries return _plain old JavaScript objects_.

Learn more about the available operations in the [Prisma Client docs](https://www.prisma.io/docs/concepts/components/prisma-client) or watch this [demo video](https://www.youtube.com/watch?v=LggrE5kJ75I&amp;list=PLn2e1F9Rfr6k9PnR_figWOcSHgc_erDr5&amp;index=4) (2 min).

##### Retrieve all `User` records from the database

```ts
const allUsers = await prisma.user.findMany()
```

##### Include the `posts` relation on each returned `User` object

```ts
const allUsers = await prisma.user.findMany({
  include: { posts: true },
})
```

##### Filter all `Post` records that contain `&quot;prisma&quot;`

```ts
const filteredPosts = await prisma.post.findMany({
  where: {
    OR: [{ title: { contains: &#039;prisma&#039; } }, { content: { contains: &#039;prisma&#039; } }],
  },
})
```

##### Create a new `User` and a new `Post` record in the same query

```ts
const user = await prisma.user.create({
  data: {
    name: &#039;Alice&#039;,
    email: &#039;alice@prisma.io&#039;,
    posts: {
      create: { title: &#039;Join us for Prisma Day 2021&#039; },
    },
  },
})
```

##### Update an existing `Post` record

```ts
const post = await prisma.post.update({
  where: { id: 42 },
  data: { published: true },
})
```

#### Usage with TypeScript

Note that when using TypeScript, the result of this query will be _statically typed_ so that you can&#039;t accidentally access a property that doesn&#039;t exist (and any typos are caught at compile-time). Learn more about leveraging Prisma Client&#039;s generated types on the [Advanced usage of generated types](https://www.prisma.io/docs/concepts/components/prisma-client/advanced-usage-of-generated-types) page in the docs.

## Community

Prisma has a large and supportive [community](https://www.prisma.io/community) of enthusiastic application developers. You can join us on [Discord](https://pris.ly/discord) and here on [GitHub](https://github.com/prisma/prisma/discussions).

## Badges

[![Made with Prisma](http://made-with.prisma.io/dark.svg)](https://prisma.io) [![Made with Prisma](http://made-with.prisma.io/indigo.svg)](https://prisma.io)

Built something awesome with Prisma? 🌟 Show it off with these [badges](https://github.com/prisma/presskit?tab=readme-ov-file#badges), perfect for your readme or website.

```
[![Made with Prisma](http://made-with.prisma.io/dark.svg)](https://prisma.io)
```

```
[![Made with Prisma](http://made-with.prisma.io/indigo.svg)](https://prisma.io)
```

## MCP server

The Prisma CLI includes a [Prisma MCP server](https://www.prisma.io/docs/postgres/mcp-server). It&#039;s started via this CLI command:

```
npx prisma mcp
```

Most AI tools support a JSON-based configuration for MCP servers looking like this:

```json
{
  &quot;mcpServers&quot;: {
    &quot;Prisma&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;prisma&quot;, &quot;mcp&quot;]
    }
  }
}
```

Prisma&#039;s MCP server gives AI agents the ability to manage [Prisma Postgres](https://www.prisma.io/postgres) databases (e.g. spin up new database instances or run schema migrations).

## Security

If you have a security issue to report, please contact us at [security@prisma.io](mailto:security@prisma.io?subject=[GitHub]%20Prisma%202%20Security%20Report%20).

## Support

### Ask a question about Prisma

You can ask questions and initiate [discussions](https://github.com/prisma/prisma/discussions/) about Prisma-related topics in the `prisma` repository on GitHub.

👉 [**Ask a question**](https://github.com/prisma/prisma/discussions/new)

### Create a bug report for Prisma

If you see an error message or run into an issue, please make sure to create a bug report! You can find [best practices for creating bug reports](https://www.prisma.io/docs/guides/other/troubleshooting-orm/creating-bug-reports) (like including additional debugging output) in the docs.

👉 [**Create bug report**](https://pris.ly/prisma-prisma-bug-report)

### Submit a feature request

If Prisma currently doesn&#039;t have a certain feature, be sure to check out the [roadmap](https://www.prisma.io/docs/more/roadmap) to see if this is already planned for the future.

If the feature on the roadmap is linked to a GitHub issue, please make sure to leave a 👍 reaction on the issue and ideally a comment with your thoughts about the feature!

👉 [**Submit feature request**](https://github.com/prisma/prisma/issues/new?assignees=&amp;labels=&amp;template=feature_request.md&amp;title=)

## Contributing

Refer to our [contribution guidelines](https://github.com/prisma/prisma/blob/main/CONTRIBUTING.md) and [Code of Conduct for contributors](https://github.com/prisma/prisma/blob/main/CODE_OF_CONDUCT.md).

## Tests Status

- Prisma Tests Status:
  [![Prisma Tests Status](https://github.com/prisma/prisma/workflows/CI/badge.svg)](https://github.com/prisma/prisma/actions/workflows/test.yml?query=branch%3Amain)
- Ecosystem Tests Status:
  [![Ecosystem Tests Status](https://github.com/prisma/ecosystem-tests/workflows/test/badge.svg)](https://github.com/prisma/ecosystem-tests/actions/workflows/test.yaml?query=branch%3Adev)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
    </channel>
</rss>