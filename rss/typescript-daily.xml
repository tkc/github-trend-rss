<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for typescript - TypeScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for typescript.</description>
        <lastBuildDate>Wed, 23 Apr 2025 00:05:17 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[kamranahmedse/developer-roadmap]]></title>
            <link>https://github.com/kamranahmedse/developer-roadmap</link>
            <guid>https://github.com/kamranahmedse/developer-roadmap</guid>
            <pubDate>Wed, 23 Apr 2025 00:05:17 GMT</pubDate>
            <description><![CDATA[Interactive roadmaps, guides and other educational content to help developers grow in their careers.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/kamranahmedse/developer-roadmap">kamranahmedse/developer-roadmap</a></h1>
            <p>Interactive roadmaps, guides and other educational content to help developers grow in their careers.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 315,018</p>
            <p>Forks: 40,939</p>
            <p>Stars today: 337 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[yamadashy/repomix]]></title>
            <link>https://github.com/yamadashy/repomix</link>
            <guid>https://github.com/yamadashy/repomix</guid>
            <pubDate>Wed, 23 Apr 2025 00:05:16 GMT</pubDate>
            <description><![CDATA[üì¶ Repomix (formerly Repopack) is a powerful tool that packs your entire repository into a single, AI-friendly file. Perfect for when you need to feed your codebase to Large Language Models (LLMs) or other AI tools like Claude, ChatGPT, DeepSeek, Perplexity, Gemini, Gemma, Llama, Grok, and more.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/yamadashy/repomix">yamadashy/repomix</a></h1>
            <p>üì¶ Repomix (formerly Repopack) is a powerful tool that packs your entire repository into a single, AI-friendly file. Perfect for when you need to feed your codebase to Large Language Models (LLMs) or other AI tools like Claude, ChatGPT, DeepSeek, Perplexity, Gemini, Gemma, Llama, Grok, and more.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 14,963</p>
            <p>Forks: 644</p>
            <p>Stars today: 55 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://repomix.com&quot;&gt;
    &lt;img src=&quot;website/client/src/public/images/repomix-title.png&quot; alt=&quot;Repomix&quot; width=&quot;500&quot; height=&quot;auto&quot; /&gt;
  &lt;/a&gt;
  &lt;p align=&quot;center&quot;&gt;
    &lt;b&gt;Pack your codebase into AI-friendly formats&lt;/b&gt;
  &lt;/p&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://repomix.com&quot;&gt;&lt;b&gt;Use Repomix online! üëâ repomix.com&lt;/b&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  Need discussion? Join us on &lt;a href=&quot;https://discord.gg/wNYzTwZFku&quot;&gt;Discord&lt;/a&gt;!&lt;br&gt;
  &lt;i&gt;Share your experience and tips&lt;/i&gt;&lt;br&gt;
  &lt;i&gt;Stay updated on new features&lt;/i&gt;&lt;br&gt;
  &lt;i&gt;Get help with configuration and usage&lt;/i&gt;&lt;br&gt;
&lt;/p&gt;

&lt;hr /&gt;

[![Actions Status](https://github.com/yamadashy/repomix/actions/workflows/ci.yml/badge.svg)](https://github.com/yamadashy/repomix/actions?query=workflow%3A&quot;ci&quot;)
[![npm](https://img.shields.io/npm/v/repomix.svg?maxAge=1000)](https://www.npmjs.com/package/repomix)
[![npm](https://img.shields.io/npm/d18m/repomix)](https://www.npmjs.com/package/repomix)
[![npm](https://img.shields.io/npm/l/repomix.svg?maxAge=1000)](https://github.com/yamadashy/repomix/blob/main/LICENSE)
[![node](https://img.shields.io/node/v/repomix.svg?maxAge=1000)](https://www.npmjs.com/package/repomix)
[![codecov](https://codecov.io/github/yamadashy/repomix/graph/badge.svg)](https://codecov.io/github/yamadashy/repomix)

üì¶ Repomix is a powerful tool that packs your entire repository into a single, AI-friendly file.  
It is perfect for when you need to feed your codebase to Large Language Models (LLMs) or other AI tools like Claude,
ChatGPT, DeepSeek, Perplexity, Gemini, Gemma, Llama, Grok, and more.

## üéâ New: Repomix Website &amp; Discord Community!

- Try Repomix in your browser at [repomix.com](https://repomix.com/)
- Join our [Discord Server](https://discord.gg/wNYzTwZFku) for support and discussion

**We look forward to seeing you there!**

## üåü Features

- **AI-Optimized**: Formats your codebase in a way that&#039;s easy for AI to understand and process.
- **Token Counting**: Provides token counts for each file and the entire repository, useful for LLM context limits.
- **Simple to Use**: You need just one command to pack your entire repository.
- **Customizable**: Easily configure what to include or exclude.
- **Git-Aware**: Automatically respects your `.gitignore` files and `.git/info/exclude`.
- **Security-Focused**: Incorporates [Secretlint](https://github.com/secretlint/secretlint) for robust security checks to detect and prevent inclusion of sensitive information.
- **Code Compression**: The `--compress` option uses [Tree-sitter](https://github.com/tree-sitter/tree-sitter) to extract key code elements, reducing token count while preserving structure.

## üöÄ Quick Start

### Using the CLI Tool `&gt;_`

You can try Repomix instantly in your project directory without installation:

```bash
npx repomix
```

Or install globally for repeated use:

```bash
# Install using npm
npm install -g repomix

# Alternatively using yarn
yarn global add repomix

# Alternatively using Homebrew (macOS/Linux)
brew install repomix

# Then run in any project directory
repomix
```

That&#039;s it! Repomix will generate a `repomix-output.xml` file in your current directory, containing your entire
repository in an AI-friendly format.

You can then send this file to an AI assistant with a prompt like:

```
This file contains all the files in the repository combined into one.
I want to refactor the code, so please review it first.
```

![Repomix File Usage 1](website/client/src/public/images/docs/repomix-file-usage-1.png)

When you propose specific changes, the AI might be able to generate code accordingly. With features like Claude&#039;s
Artifacts, you could potentially output multiple files, allowing for the generation of multiple interdependent pieces of
code.

![Repomix File Usage 2](website/client/src/public/images/docs/repomix-file-usage-2.png)

Happy coding! üöÄ

### Using The Website üåê

Want to try it quickly? Visit the official website at [repomix.com](https://repomix.com). Simply enter your repository
name, fill in any optional details, and click the **Pack** button to see your generated output.

#### Available Options

The website offers several convenient features:

- Customizable output format (XML, Markdown, or Plain Text)
- Instant token count estimation
- Much more!

### Using The VSCode Extension ‚ö°Ô∏è

A community-maintained VSCode extension called [Repomix Runner](https://marketplace.visualstudio.com/items?itemName=DorianMassoulier.repomix-runner) (created by [massdo](https://github.com/massdo)) lets you run Repomix right inside your editor with just a few clicks. Run it on any folder, manage outputs seamlessly, and control everything through VSCode&#039;s intuitive interface. 

Want your output as a file or just the content? Need automatic cleanup? This extension has you covered. Plus, it works smoothly with your existing repomix.config.json.

Try it now on the [VSCode Marketplace](https://marketplace.visualstudio.com/items?itemName=DorianMassoulier.repomix-runner)!
Source code is available on [GitHub](https://github.com/massdo/repomix-runner).

### Alternative Tools üõ†Ô∏è

If you&#039;re using Python, you might want to check out `Gitingest`, which is better suited for Python ecosystem and data
science workflows:
https://github.com/cyclotruc/gitingest

## üìä Usage

To pack your entire repository:

```bash
repomix
```

To pack a specific directory:

```bash
repomix path/to/directory
```

To pack specific files or directories
using [glob patterns](https://github.com/mrmlnc/fast-glob?tab=readme-ov-file#pattern-syntax):

```bash
repomix --include &quot;src/**/*.ts,**/*.md&quot;
```

To exclude specific files or directories:

```bash
repomix --ignore &quot;**/*.log,tmp/&quot;
```

To pack a remote repository:

```bash
repomix --remote https://github.com/yamadashy/repomix

# You can also use GitHub shorthand:
repomix --remote yamadashy/repomix

# You can specify the branch name, tag, or commit hash:
repomix --remote https://github.com/yamadashy/repomix --remote-branch main

# Or use a specific commit hash:
repomix --remote https://github.com/yamadashy/repomix --remote-branch 935b695

# Another convenient way is specifying the branch&#039;s URL
repomix --remote https://github.com/yamadashy/repomix/tree/main

# Commit&#039;s URL is also supported
repomix --remote https://github.com/yamadashy/repomix/commit/836abcd7335137228ad77feb28655d85712680f1

```

To compress the output:

```bash
repomix --compress

# You can also use it with remote repositories:
repomix --remote yamadashy/repomix --compress
```

To initialize a new configuration file (`repomix.config.json`):

```bash
repomix --init
```

Once you have generated the packed file, you can use it with Generative AI tools like ChatGPT, DeepSeek, Perplexity, Gemini, Gemma, Llama, Grok, and more.

### Docker Usage üê≥

You can also run Repomix using Docker.  
This is useful if you want to run Repomix in an isolated environment or prefer using containers.

Basic usage (current directory):

```bash
docker run -v .:/app -it --rm ghcr.io/yamadashy/repomix
```

To pack a specific directory:

```bash
docker run -v .:/app -it --rm ghcr.io/yamadashy/repomix path/to/directory
```

Process a remote repository and output to a `output` directory:

```bash
docker run -v ./output:/app -it --rm ghcr.io/yamadashy/repomix --remote https://github.com/yamadashy/repomix
```

### Prompt Examples

Once you have generated the packed file with Repomix, you can use it with AI tools like ChatGPT, DeepSeek, Perplexity, Gemini, Gemma, Llama, Grok, and more.
Here are some example prompts to get you started:

#### Code Review and Refactoring

For a comprehensive code review and refactoring suggestions:

```
This file contains my entire codebase. Please review the overall structure and suggest any improvements or refactoring opportunities, focusing on maintainability and scalability.
```

#### Documentation Generation

To generate project documentation:

```
Based on the codebase in this file, please generate a detailed README.md that includes an overview of the project, its main features, setup instructions, and usage examples.
```

#### Test Case Generation

For generating test cases:

```
Analyze the code in this file and suggest a comprehensive set of unit tests for the main functions and classes. Include edge cases and potential error scenarios.
```

#### Code Quality Assessment

Evaluate code quality and adherence to best practices:

```
Review the codebase for adherence to coding best practices and industry standards. Identify areas where the code could be improved in terms of readability, maintainability, and efficiency. Suggest specific changes to align the code with best practices.
```

#### Library Overview

Get a high-level understanding of the library

```
This file contains the entire codebase of library. Please provide a comprehensive overview of the library, including its main purpose, key features, and overall architecture.
```

Feel free to modify these prompts based on your specific needs and the capabilities of the AI tool you&#039;re using.

### Community Discussion

Check out our [community discussion](https://github.com/yamadashy/repomix/discussions/154) where users share:

- Which AI tools they&#039;re using with Repomix
- Effective prompts they&#039;ve discovered
- How Repomix has helped them
- Tips and tricks for getting the most out of AI code analysis

Feel free to join the discussion and share your own experiences! Your insights could help others make better use of
Repomix.

### Output File Format

Repomix generates a single file with clear separators between different parts of your codebase.  
To enhance AI comprehension, the output file begins with an AI-oriented explanation, making it easier for AI models to
understand the context and structure of the packed repository.

#### XML Format (default)

The XML format structures the content in a hierarchical manner:

```xml
This file is a merged representation of the entire codebase, combining all repository files into a single document.

&lt;file_summary&gt;
  (Metadata and usage AI instructions)
&lt;/file_summary&gt;

&lt;directory_structure&gt;
src/
cli/
cliOutput.ts
index.ts

(...remaining directories)
&lt;/directory_structure&gt;

&lt;files&gt;
&lt;file path=&quot;src/index.js&quot;&gt;
  // File contents here
&lt;/file&gt;

(...remaining files)
&lt;/files&gt;

&lt;instruction&gt;
(Custom instructions from `output.instructionFilePath`)
&lt;/instruction&gt;
```

For those interested in the potential of XML tags in AI contexts:  
https://docs.anthropic.com/en/docs/build-with-claude/prompt-engineering/use-xml-tags

&gt; When your prompts involve multiple components like context, instructions, and examples, XML tags can be a
&gt; game-changer. They help Claude parse your prompts more accurately, leading to higher-quality outputs.

This means that the XML output from Repomix is not just a different format, but potentially a more effective way to feed
your codebase into AI systems for analysis, code review, or other tasks.

#### Markdown Format

To generate output in Markdown format, use the `--style markdown` option:

```bash
repomix --style markdown
```

The Markdown format structures the content in a hierarchical manner:

````markdown
This file is a merged representation of the entire codebase, combining all repository files into a single document.

# File Summary

(Metadata and usage AI instructions)

# Repository Structure

```
src/
  cli/
    cliOutput.ts
    index.ts
```

(...remaining directories)

# Repository Files

## File: src/index.js

```
// File contents here
```

(...remaining files)

# Instruction

(Custom instructions from `output.instructionFilePath`)
````

This format provides a clean, readable structure that is both human-friendly and easily parseable by AI systems.

#### Plain Text Format

To generate output in plain text format, use the `--style plain` option:

```bash
repomix --style plain
```

```text
This file is a merged representation of the entire codebase, combining all repository files into a single document.

================================================================
File Summary
================================================================
(Metadata and usage AI instructions)

================================================================
Directory Structure
================================================================
src/
  cli/
    cliOutput.ts
    index.ts
  config/
    configLoader.ts

(...remaining directories)

================================================================
Files
================================================================

================
File: src/index.js
================
// File contents here

================
File: src/utils.js
================
// File contents here

(...remaining files)

================================================================
Instruction
================================================================
(Custom instructions from `output.instructionFilePath`)
```

### Command Line Options

#### Basic Options
- `-v, --version`: Show tool version

#### Output Options
- `-o, --output &lt;file&gt;`: Specify the output file name
- `--style &lt;style&gt;`: Specify the output style (`xml`, `markdown`, `plain`)
- `--parsable-style`: Enable parsable output based on the chosen style schema. Note that this can increase token count.
- `--compress`: Perform intelligent code extraction, focusing on essential function and class signatures to reduce token count
- `--output-show-line-numbers`: Show line numbers in the output
- `--copy`: Additionally copy generated output to system clipboard
- `--no-file-summary`: Disable file summary section output
- `--no-directory-structure`: Disable directory structure section output
- `--remove-comments`: Remove comments from supported file types
- `--remove-empty-lines`: Remove empty lines from the output
- `--header-text &lt;text&gt;`: Custom text to include in the file header
- `--instruction-file-path &lt;path&gt;`: Path to a file containing detailed custom instructions
- `--include-empty-directories`: Include empty directories in the output
- `--no-git-sort-by-changes`: Disable sorting files by git change count (enabled by default)

#### Filter Options
- `--include &lt;patterns&gt;`: List of include patterns (comma-separated)
- `-i, --ignore &lt;patterns&gt;`: Additional ignore patterns (comma-separated)
- `--no-gitignore`: Disable .gitignore file usage
- `--no-default-patterns`: Disable default patterns

#### Remote Repository Options
- `--remote &lt;url&gt;`: Process a remote Git repository
- `--remote-branch &lt;name&gt;`: Specify the remote branch name, tag, or commit hash (defaults to repository default branch)

#### Configuration Options
- `-c, --config &lt;path&gt;`: Path to a custom config file
- `--init`: Create config file
- `--global`: Use global config

#### Security Options
- `--no-security-check`: Disable security check

#### Token Count Options
- `--token-count-encoding &lt;encoding&gt;`: Specify token count encoding used by OpenAI&#039;s [tiktoken](https://github.com/openai/tiktoken) tokenizer (e.g., `o200k_base` for GPT-4o, `cl100k_base` for GPT-4/3.5). See [tiktoken model.py](https://github.com/openai/tiktoken/blob/main/tiktoken/model.py#L24) for encoding details.

#### MCP
- `--mcp`: Run as a [MCP (Model Context Protocol)](https://modelcontextprotocol.io) server

#### Other Options
- `--top-files-len &lt;number&gt;`: Number of top files to display in the summary
- `--verbose`: Enable verbose logging
- `--quiet`: Disable all output to stdout

Examples:

```bash
repomix -o custom-output.txt
repomix -i &quot;*.log,tmp&quot; -v
repomix -c ./custom-config.json
repomix --style xml
repomix --remote https://github.com/user/repo
npx repomix src
```

### Updating Repomix

To update a globally installed Repomix:

```bash
# Using npm
npm update -g repomix

# Using yarn
yarn global upgrade repomix
```

Using `npx repomix` is generally more convenient as it always uses the latest version.

### Remote Repository Processing

Repomix supports processing remote Git repositories without the need for manual cloning. This feature allows you to
quickly analyze any public Git repository with a single command.

To process a remote repository, use the `--remote` option followed by the repository URL:

```bash
repomix --remote https://github.com/yamadashy/repomix
```

You can also use GitHub&#039;s shorthand format:

```bash
repomix --remote yamadashy/repomix
```

You can specify the branch name, tag, or commit hash:

```bash
# Using --remote-branch option
repomix --remote https://github.com/yamadashy/repomix --remote-branch main

# Using branch&#039;s URL
repomix --remote https://github.com/yamadashy/repomix/tree/main
```

Or use a specific commit hash:

```bash
# Using --remote-branch option
repomix --remote https://github.com/yamadashy/repomix --remote-branch 935b695

# Using commit&#039;s URL
repomix --remote https://github.com/yamadashy/repomix/commit/836abcd7335137228ad77feb28655d85712680f1
```

### Code Compression

The `--compress` option utilizes [Tree-sitter](https://github.com/tree-sitter/tree-sitter) to perform intelligent code extraction, focusing on essential function and class signatures while removing implementation details. This can help reduce token count while retaining important structural information.

```bash
repomix --compress
```

For example, this code:

```typescript
import { ShoppingItem } from &#039;./shopping-item&#039;;

/**
 * Calculate the total price of shopping items
 */
const calculateTotal = (
  items: ShoppingItem[]
) =&gt; {
  let total = 0;
  for (const item of items) {
    total += item.price * item.quantity;
  }
  return total;
}

// Shopping item interface
interface Item {
  name: string;
  price: number;
  quantity: number;
}
```

Will be compressed to:

```typescript
import { ShoppingItem } from &#039;./shopping-item&#039;;
‚ãÆ----
/**
 * Calculate the total price of shopping items
 */
const calculateTotal = (
  items: ShoppingItem[]
) =&gt; {
‚ãÆ----
// Shopping item interface
interface Item {
  name: string;
  price: number;
  quantity: number;
}
```

&gt; [!NOTE]
&gt; This is an experimental feature that we&#039;ll be actively improving based on user feedback and real-world usage

### MCP Server Integration

Repomix supports the [Model Context Protocol (MCP)](https://modelcontextprotocol.io), allowing AI assistants to directly interact with your codebase. When run as an MCP server, Repomix provides tools that enable AI assistants to package local or remote repositories for analysis without requiring manual file preparation.

```bash
repomix --mcp
```

#### Configuring MCP Servers

To use Repomix as an MCP server with AI assistants like Claude, you need to configure the MCP settings:

**For VS Code:**

You can install the Repomix MCP server in VS Code using one of these methods:

1. **Using the Install Badge:**

  [![Install in VS Code](https://img.shields.io/badge/VS_Code-Install_Server-0098FF?style=flat-square&amp;logo=visualstudiocode&amp;logoColor=white)](https://insiders.vscode.dev/redirect/mcp/install?name=repomix&amp;config=%7B%22command%22%3A%22npx%22%2C%22args%22%3A%5B%22-y%22%2C%22repomix%22%2C%22--mcp%22%5D%7D)
  [![Install in VS Code Insiders](https://img.shields.io/badge/VS_Code_Insiders-Install_Server-24bfa5?style=flat-square&amp;logo=visualstudiocode&amp;logoColor=white)](https://insiders.vscode.dev/redirect/mcp/install?name=repomix&amp;config=%7B%22command%22%3A%22npx%22%2C%22args%22%3A%5B%22-y%22%2C%22repomix%22%2C%22--mcp%22%5D%7D&amp;quality=insiders)

2. **Using the Command Line:**

  ```bash
  code --add-mcp &#039;{&quot;name&quot;:&quot;repomix&quot;,&quot;command&quot;:&quot;npx&quot;,&quot;args&quot;:[&quot;-y&quot;,&quot;repomix&quot;,&quot;--mcp&quot;]}&#039;
  ```

  For VS Code Insiders:
  ```bash
  code-insiders --add-mcp &#039;{&quot;name&quot;:&quot;repomix&quot;,&quot;command&quot;:&quot;npx&quot;,&quot;args&quot;:[&quot;-y&quot;,&quot;repomix&quot;,&quot;--mcp&quot;]}&#039;
  ```

**For Cline (VS Code extension):**

Edit the `cline_mcp_settings.json` file:
```json
{
  &quot;mcpServers&quot;: {
    &quot;repomix&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [
        &quot;-y&quot;,
        &quot;repomix&quot;,
        &quot;--mcp&quot;
      ]
    }
  }
}
```

**For Cursor:**

In Cursor, add a new MCP server from `Cursor Settings` &gt; `MCP` &gt; `+ Add new global MCP server` with a c

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[nocobase/nocobase]]></title>
            <link>https://github.com/nocobase/nocobase</link>
            <guid>https://github.com/nocobase/nocobase</guid>
            <pubDate>Wed, 23 Apr 2025 00:05:15 GMT</pubDate>
            <description><![CDATA[NocoBase is an extensibility-first, open-source no-code/low-code platform for building business applications and enterprise solutions.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/nocobase/nocobase">nocobase/nocobase</a></h1>
            <p>NocoBase is an extensibility-first, open-source no-code/low-code platform for building business applications and enterprise solutions.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 15,158</p>
            <p>Forks: 1,660</p>
            <p>Stars today: 200 stars today</p>
            <h2>README</h2><pre>English | [‰∏≠Êñá](./README.zh-CN.md) | [Êó•Êú¨Ë™û](./README.ja-JP.md)

https://github.com/user-attachments/assets/a50c100a-4561-4e06-b2d2-d48098659ec0

&lt;p align=&quot;center&quot;&gt;
&lt;a href=&quot;https://trendshift.io/repositories/4112&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://trendshift.io/api/badge/repositories/4112&quot; alt=&quot;nocobase%2Fnocobase | Trendshift&quot; style=&quot;width: 250px; height: 55px;&quot; width=&quot;250&quot; height=&quot;55&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://www.producthunt.com/posts/nocobase?embed=true&amp;utm_source=badge-top-post-topic-badge&amp;utm_medium=badge&amp;utm_souce=badge-nocobase&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://api.producthunt.com/widgets/embed-image/v1/top-post-topic-badge.svg?post_id=456520&amp;theme=light&amp;period=weekly&amp;topic_id=267&quot; alt=&quot;NocoBase - Scalability&amp;#0045;first&amp;#0044;&amp;#0032;open&amp;#0045;source&amp;#0032;no&amp;#0045;code&amp;#0032;platform | Product Hunt&quot; style=&quot;width: 250px; height: 54px;&quot; width=&quot;250&quot; height=&quot;54&quot; /&gt;&lt;/a&gt;
&lt;/p&gt;

## What is NocoBase

NocoBase is an extensibility-first, open-source no-code development platform.   
Instead of investing years of time and millions of dollars in research and development, deploy NocoBase in a few minutes and you&#039;ll have a private, controllable, and extremely scalable no-code development platform!

Homepage:  
https://www.nocobase.com/  

Online Demo:  
https://demo.nocobase.com/new

Documents:  
https://docs.nocobase.com/

Forum:  
https://forum.nocobase.com/

Tutorials:  
https://www.nocobase.com/en/tutorials

Use Cases:  
https://www.nocobase.com/en/blog/tags/customer-stories


## Release Notes

Our [blog](https://www.nocobase.com/en/blog/timeline) is regularly updated with release notes and provides a weekly summary.

## Distinctive features

### 1. Data model-driven

Most form-, table-, or process-driven no-code products create data structures directly in the user interface, such as Airtable, where adding a new column to a table is adding a new field. This has the advantage of simplicity of use, but the disadvantage of limited functionality and flexibility to meet the needs of more complex scenarios.

NocoBase adopts the design idea of separating the data structure from the user interface, allowing you to create any number of blocks (data views) for the data collections, with different type, styles, content, and actions in each block. This balances the simplicity of no-code operation with the flexibility of native development.

![model](https://static-docs.nocobase.com/model.png)

### 2. What you see is what you get

NocoBase enables the development of complex and distinctive business systems, but this does not mean that complex and specialized operations are required. With a single click, configuration options are displayed on the usage interface, and administrators with system configuration privileges can directly configure the user interface in a WYSIWYG manner.

![wysiwyg](https://static-docs.nocobase.com/wysiwyg.gif)

### 3. Everything is implemented as plugins

NocoBase adopts plugin architecture, all new functions can be realized by developing and installing plugins, and expanding the functions is as easy as installing an APP on your phone.

![plugins](https://static-docs.nocobase.com/plugins.png)

## Installation

NocoBase supports three installation methods:

- &lt;a target=&quot;_blank&quot; href=&quot;https://docs.nocobase.com/welcome/getting-started/installation/docker-compose&quot;&gt;Installing With Docker (üëçRecommended)&lt;/a&gt;

  Suitable for no-code scenarios, no code to write. When upgrading, just download the latest image and reboot.

- &lt;a target=&quot;_blank&quot; href=&quot;https://docs.nocobase.com/welcome/getting-started/installation/create-nocobase-app&quot;&gt;Installing from create-nocobase-app CLI&lt;/a&gt;

  The business code of the project is completely independent and supports low-code development.

- &lt;a target=&quot;_blank&quot; href=&quot;https://docs.nocobase.com/welcome/getting-started/installation/git-clone&quot;&gt;Installing from Git source code&lt;/a&gt;

  If you want to experience the latest unreleased version, or want to participate in the contribution, you need to make changes and debug on the source code, it is recommended to choose this installation method, which requires a high level of development skills, and if the code has been updated, you can git pull the latest code.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[David-patrick-chuks/Instagram-AI-Agent]]></title>
            <link>https://github.com/David-patrick-chuks/Instagram-AI-Agent</link>
            <guid>https://github.com/David-patrick-chuks/Instagram-AI-Agent</guid>
            <pubDate>Wed, 23 Apr 2025 00:05:14 GMT</pubDate>
            <description><![CDATA[Instagram Ai Agent üå∏ is built using Node.js and TypeScript üõ†Ô∏è, designed for seamless job execution üì∏. It's lightweight, efficient, and still evolving üöß‚Äîexciting new features coming soon! üåü]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/David-patrick-chuks/Instagram-AI-Agent">David-patrick-chuks/Instagram-AI-Agent</a></h1>
            <p>Instagram Ai Agent üå∏ is built using Node.js and TypeScript üõ†Ô∏è, designed for seamless job execution üì∏. It's lightweight, efficient, and still evolving üöß‚Äîexciting new features coming soon! üåü</p>
            <p>Language: TypeScript</p>
            <p>Stars: 3,143</p>
            <p>Forks: 530</p>
            <p>Stars today: 22 stars today</p>
            <h2>README</h2><pre>## Instagram-AI-Agent üå∏

Instagram-AI-Agent is an AI-powered automation tool designed for **Instagram** to automate social media interactions such as posting, liking, and commenting. It leverages advanced AI models to generate engaging content, automate interactions, and manage Instagram accounts efficiently.

Before using the automation features, you can personalize the agent by training with the following, including:

- **YouTube Video URL** üé•
- **Audio File** üéôÔ∏è
- **Portfolio or Website Link** üåê
- **File Formats Supported**: PDF, DOC, DOCX, TXT üìÑ

## Features

- **Instagram Automation**: Automatically log in, post photos, like posts, and leave thoughtful comments.
- **AI-Powered Content Generation**: Use Google Generative AI to create engaging captions and comments.
- **Proxy Support**: Use proxies to manage multiple accounts and avoid rate limits.
- **Cookie Management**: Save and load cookies to maintain sessions across restarts.

**Upcoming Features:**

- **Twitter Automation**: (Coming soon) Automatically tweet, retweet, and like tweets.
- **GitHub Automation**: (Coming soon) Automatically manage repositories, issues, and pull requests.

## Installation

1. **Clone the repository**:

   ```sh
   git clone https://github.com/david-patrick-chuks/Instagram-AI-Agent.git
   cd Instagram-AI-Agent
   ```

2. **Install dependencies**:

   ```sh
   npm install
   ```

3. **Set up environment variables**:
   Rename the [.env.example](http://_vscodecontentref_/1) file to [.env](http://_vscodecontentref_/1) in the root directory and add your Instagram credentials. Refer to the [.env.example](http://_vscodecontentref_/2) file for the required variables.
   ```dotenv # Instagram credentials
   IGusername=your_instagram_username
   IGpassword=your_instagram_password 
   
   Xusername= #Twitter username
   Xpassword= #Twitter password

   MONGODB_URI= #MongoDB URI
   ```

## Usage

1. **Run the Instagram agent**:
   ```sh
   npm start
   ```

**Upcoming Features:**

- **Run the Twitter agent** (Coming soon):

  ```sh
  npm run start:twitter
  ```

- **Run the GitHub agent** (Coming soon):
  ```sh
  npm run start:github
  ```

## Project Structure

- **src/client**: Contains the main logic for interacting with social media platforms like Instagram.
- **src/config**: Configuration files, including the logger setup.
- **src/utils**: Utility functions for handling errors, cookies, data saving, etc.
- **src/Agent**: Contains the AI agent logic and training scripts.
- **src/Agent/training**: Training scripts for the AI agent.
- **src/schema**: Schema definitions for AI-generated content and database models.
- **src/test**: Contains test data and scripts, such as example tweets.

## Logging

The project uses a custom logger to log information, warnings, and errors. Logs are saved in the [logs](http://_vscodecontentref_/3) directory.

## Error Handling

Process-level error handlers are set up to catch unhandled promise rejections, uncaught exceptions, and process warnings. Errors are logged using the custom logger.

## Contributing

Contributions are welcome! Please fork the repository and submit a pull request with your changes.

## License

This project is licensed under the MIT License. See the LICENSE file for details.

## Acknowledgements

- [Google Generative AI](https://ai.google/tools/) for providing the AI models.
- [Puppeteer](https://github.com/puppeteer/puppeteer) for browser automation.
- [puppeteer-extra](https://github.com/berstend/puppeteer-extra) for additional plugins and enhancements.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[langfuse/langfuse]]></title>
            <link>https://github.com/langfuse/langfuse</link>
            <guid>https://github.com/langfuse/langfuse</guid>
            <pubDate>Wed, 23 Apr 2025 00:05:13 GMT</pubDate>
            <description><![CDATA[ü™¢ Open source LLM engineering platform: LLM Observability, metrics, evals, prompt management, playground, datasets. Integrates with OpenTelemetry, Langchain, OpenAI SDK, LiteLLM, and more. üçäYC W23]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/langfuse/langfuse">langfuse/langfuse</a></h1>
            <p>ü™¢ Open source LLM engineering platform: LLM Observability, metrics, evals, prompt management, playground, datasets. Integrates with OpenTelemetry, Langchain, OpenAI SDK, LiteLLM, and more. üçäYC W23</p>
            <p>Language: TypeScript</p>
            <p>Stars: 10,599</p>
            <p>Forks: 959</p>
            <p>Stars today: 39 stars today</p>
            <h2>README</h2><pre>![Langfuse GitHub Banner](https://langfuse.com/images/docs/github-readme/github-banner.png)

&lt;div align=&quot;center&quot;&gt;
   &lt;div&gt;
      &lt;h3&gt;
         &lt;a href=&quot;https://cloud.langfuse.com&quot;&gt;
            &lt;strong&gt;Langfuse Cloud&lt;/strong&gt;
         &lt;/a&gt; ¬∑ 
         &lt;a href=&quot;https://langfuse.com/docs/deployment/self-host&quot;&gt;
            &lt;strong&gt;Self Host&lt;/strong&gt;
         &lt;/a&gt; ¬∑ 
         &lt;a href=&quot;https://langfuse.com/demo&quot;&gt;
            &lt;strong&gt;Demo&lt;/strong&gt;
         &lt;/a&gt;
      &lt;/h3&gt;
   &lt;/div&gt;

   &lt;div&gt;
      &lt;a href=&quot;https://langfuse.com/docs&quot;&gt;&lt;strong&gt;Docs&lt;/strong&gt;&lt;/a&gt; ¬∑
      &lt;a href=&quot;https://langfuse.com/issues&quot;&gt;&lt;strong&gt;Report Bug&lt;/strong&gt;&lt;/a&gt; ¬∑
      &lt;a href=&quot;https://langfuse.com/ideas&quot;&gt;&lt;strong&gt;Feature Request&lt;/strong&gt;&lt;/a&gt; ¬∑
      &lt;a href=&quot;https://langfuse.com/changelog&quot;&gt;&lt;strong&gt;Changelog&lt;/strong&gt;&lt;/a&gt; ¬∑
      &lt;a href=&quot;https://langfuse.com/roadmap&quot;&gt;&lt;strong&gt;Roadmap&lt;/strong&gt;&lt;/a&gt; ¬∑
   &lt;/div&gt;
   &lt;br/&gt;
   &lt;span&gt;Langfuse uses &lt;a href=&quot;https://github.com/orgs/langfuse/discussions&quot;&gt;&lt;strong&gt;Github Discussions&lt;/strong&gt;&lt;/a&gt;  for Support and Feature Requests.&lt;/span&gt;
   &lt;br/&gt;
   &lt;span&gt;&lt;b&gt;We&#039;re hiring.&lt;/b&gt; &lt;a href=&quot;https://langfuse.com/careers&quot;&gt;&lt;strong&gt;Join us&lt;/strong&gt;&lt;/a&gt; in product engineering and technical go-to-market roles.&lt;/span&gt;
   &lt;br/&gt;
   &lt;br/&gt;
   &lt;div&gt;
   &lt;/div&gt;
&lt;/div&gt;

&lt;p align=&quot;center&quot;&gt;
   &lt;a href=&quot;https://github.com/langfuse/langfuse/blob/main/LICENSE&quot;&gt;
   &lt;img src=&quot;https://img.shields.io/badge/License-MIT-E11311.svg&quot; alt=&quot;MIT License&quot;&gt;
   &lt;/a&gt;
   &lt;a href=&quot;https://www.ycombinator.com/companies/langfuse&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Y%20Combinator-W23-orange&quot; alt=&quot;Y Combinator W23&quot;&gt;&lt;/a&gt;
   &lt;a href=&quot;https://hub.docker.com/u/langfuse&quot; target=&quot;_blank&quot;&gt;
   &lt;img alt=&quot;Docker Pulls&quot; src=&quot;https://img.shields.io/docker/pulls/langfuse/langfuse?labelColor=%20%23FDB062&amp;logo=Docker&amp;labelColor=%20%23528bff&quot;&gt;&lt;/a&gt;
   &lt;a href=&quot;https://pypi.python.org/pypi/langfuse&quot;&gt;&lt;img src=&quot;https://img.shields.io/pypi/dm/langfuse?logo=python&amp;logoColor=white&amp;label=pypi%20langfuse&amp;color=blue&quot; alt=&quot;langfuse Python package on PyPi&quot;&gt;&lt;/a&gt;
   &lt;a href=&quot;https://www.npmjs.com/package/langfuse&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/langfuse?logo=npm&amp;logoColor=white&amp;label=npm%20langfuse&amp;color=blue&quot; alt=&quot;langfuse npm package&quot;&gt;&lt;/a&gt;
   &lt;br/&gt;
   &lt;a href=&quot;https://discord.com/invite/7NXusRtqYU&quot; target=&quot;_blank&quot;&gt;
   &lt;img src=&quot;https://img.shields.io/discord/1111061815649124414?logo=discord&amp;labelColor=%20%235462eb&amp;logoColor=%20%23f5f5f5&amp;color=%20%235462eb&quot;
      alt=&quot;chat on Discord&quot;&gt;&lt;/a&gt;
   &lt;a href=&quot;https://twitter.com/intent/follow?screen_name=langfuse&quot; target=&quot;_blank&quot;&gt;
   &lt;img src=&quot;https://img.shields.io/twitter/follow/langfuse?logo=X&amp;color=%20%23f5f5f5&quot;
      alt=&quot;follow on X(Twitter)&quot;&gt;&lt;/a&gt;
   &lt;a href=&quot;https://www.linkedin.com/company/langfuse/&quot; target=&quot;_blank&quot;&gt;
   &lt;img src=&quot;https://custom-icon-badges.demolab.com/badge/LinkedIn-0A66C2?logo=linkedin-white&amp;logoColor=fff&quot;
      alt=&quot;follow on LinkedIn&quot;&gt;&lt;/a&gt;
   &lt;a href=&quot;https://github.com/langfuse/langfuse/graphs/commit-activity&quot; target=&quot;_blank&quot;&gt;
   &lt;img alt=&quot;Commits last month&quot; src=&quot;https://img.shields.io/github/commit-activity/m/langfuse/langfuse?labelColor=%20%2332b583&amp;color=%20%2312b76a&quot;&gt;&lt;/a&gt;
   &lt;a href=&quot;https://github.com/langfuse/langfuse/&quot; target=&quot;_blank&quot;&gt;
   &lt;img alt=&quot;Issues closed&quot; src=&quot;https://img.shields.io/github/issues-search?query=repo%3Alangfuse%2Flangfuse%20is%3Aclosed&amp;label=issues%20closed&amp;labelColor=%20%237d89b0&amp;color=%20%235d6b98&quot;&gt;&lt;/a&gt;
   &lt;a href=&quot;https://github.com/langfuse/langfuse/discussions/&quot; target=&quot;_blank&quot;&gt;
   &lt;img alt=&quot;Discussion posts&quot; src=&quot;https://img.shields.io/github/discussions/langfuse/langfuse?labelColor=%20%239b8afb&amp;color=%20%237a5af8&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;./README.md&quot;&gt;&lt;img alt=&quot;README in English&quot; src=&quot;https://img.shields.io/badge/English-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;./README.cn.md&quot;&gt;&lt;img alt=&quot;ÁÆÄ‰Ωì‰∏≠ÊñáÁâàËá™Ëø∞Êñá‰ª∂&quot; src=&quot;https://img.shields.io/badge/ÁÆÄ‰Ωì‰∏≠Êñá-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;./README.ja.md&quot;&gt;&lt;img alt=&quot;Êó•Êú¨Ë™û„ÅÆREADME&quot; src=&quot;https://img.shields.io/badge/Êó•Êú¨Ë™û-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;./README.kr.md&quot;&gt;&lt;img alt=&quot;README in Korean&quot; src=&quot;https://img.shields.io/badge/ÌïúÍµ≠Ïñ¥-d9d9d9&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

Langfuse is an **open source LLM engineering** platform. It helps teams collaboratively
**develop, monitor, evaluate,** and **debug** AI applications. Langfuse can be **self-hosted in minutes** and is **battle-tested**.

[![Langfuse Overview Video](https://github.com/user-attachments/assets/3926b288-ff61-4b95-8aa1-45d041c70866)](https://langfuse.com/watch-demo)

## ‚ú® Core Features

![Langfuse Overview](https://langfuse.com/images/docs/github-readme/github-feature-overview.png)

- [LLM Application Observability](https://langfuse.com/docs/tracing): Instrument your app and start ingesting traces to Langfuse, thereby tracking LLM calls and other relevant logic in your app such as retrieval, embedding, or agent actions. Inspect and debug complex logs and user sessions. Try the interactive [demo](https://langfuse.com/docs/demo) to see this in action.

- [Prompt Management](https://langfuse.com/docs/prompts/get-started) helps you centrally manage, version control, and collaboratively iterate on your prompts. Thanks to strong caching on server and client side, you can iterate on prompts without adding latency to your application.

- [Evaluations](https://langfuse.com/docs/scores/overview) are key to the LLM application development workflow, and Langfuse adapts to your needs. It supports LLM-as-a-judge, user feedback collection, manual labeling, and custom evaluation pipelines via APIs/SDKs.

- [Datasets](https://langfuse.com/docs/datasets/overview) enable test sets and benchmarks for evaluating your LLM application. They support continuous improvement, pre-deployment testing, structured experiments, flexible evaluation, and seamless integration with frameworks like LangChain and LlamaIndex.

- [LLM Playground](https://langfuse.com/docs/playground) is a tool for testing and iterating on your prompts and model configurations, shortening the feedback loop and accelerating development. When you see a bad result in tracing, you can directly jump to the playground to iterate on it.

- [Comprehensive API](https://langfuse.com/docs/api): Langfuse is frequently used to power bespoke LLMOps workflows while using the building blocks provided by Langfuse via the API. OpenAPI spec, Postman collection, and typed SDKs for Python, JS/TS are available.

## üì¶ Deploy Langfuse

![Langfuse Deployment Options](https://langfuse.com/images/docs/github-readme/github-deployment-options.png)

### Langfuse Cloud

Managed deployment by the Langfuse team, generous free-tier (hobby plan), no credit card required.

&lt;div align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://cloud.langfuse.com&quot; target=&quot;_blank&quot;&gt;
        &lt;img alt=&quot;Static Badge&quot; src=&quot;https://img.shields.io/badge/¬ª%20Sign%20up%20for%20Langfuse%20Cloud-8A2BE2?&amp;color=orange&quot;&gt;
    &lt;/a&gt;
&lt;/div&gt;

### Self-Host Langfuse

Run Langfuse on your own infrastructure:

- [Local (docker compose)](https://langfuse.com/self-hosting/local): Run Langfuse on your own machine in 5 minutes using Docker Compose.

  ```bash
  # Get a copy of the latest Langfuse repository
  git clone https://github.com/langfuse/langfuse.git
  cd langfuse

  # Run the langfuse docker compose
  docker compose up
  ```

- [Kubernetes (Helm)](https://langfuse.com/self-hosting/kubernetes-helm): Run Langfuse on a Kubernetes cluster using Helm. This is the preferred production deployment.
- [VM](https://langfuse.com/self-hosting/docker-compose): Run Langfuse on a single Virtual Machine using Docker Compose.
- Planned: Cloud-specific deployment guides, please upvote and comment on the following threads: [AWS](https://github.com/orgs/langfuse/discussions/4645), [Google Cloud](https://github.com/orgs/langfuse/discussions/4646), [Azure](https://github.com/orgs/langfuse/discussions/4647).

See [self-hosting documentation](https://langfuse.com/self-hosting) to learn more about the architecture and configuration options.

## üîå Integrations

![Langfuse Integrations](https://langfuse.com/images/docs/github-readme/github-integrations.png)

### Main Integrations:

| Integration                                                                  | Supports                   | Description                                                                                                                                      |
| ---------------------------------------------------------------------------- | -------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------ |
| [SDK](https://langfuse.com/docs/sdk)                                         | Python, JS/TS              | Manual instrumentation using the SDKs for full flexibility.                                                                                      |
| [OpenAI](https://langfuse.com/docs/integrations/openai)                      | Python, JS/TS              | Automated instrumentation using drop-in replacement of OpenAI SDK.                                                                               |
| [Langchain](https://langfuse.com/docs/integrations/langchain)                | Python, JS/TS              | Automated instrumentation by passing callback handler to Langchain application.                                                                  |
| [LlamaIndex](https://langfuse.com/docs/integrations/llama-index/get-started) | Python                     | Automated instrumentation via LlamaIndex callback system.                                                                                        |
| [Haystack](https://langfuse.com/docs/integrations/haystack)                  | Python                     | Automated instrumentation via Haystack content tracing system.                                                                                   |
| [LiteLLM](https://langfuse.com/docs/integrations/litellm)                    | Python, JS/TS (proxy only) | Use any LLM as a drop in replacement for GPT. Use Azure, OpenAI, Cohere, Anthropic, Ollama, VLLM, Sagemaker, HuggingFace, Replicate (100+ LLMs). |
| [Vercel AI SDK](https://langfuse.com/docs/integrations/vercel-ai-sdk)        | JS/TS                      | TypeScript toolkit designed to help developers build AI-powered applications with React, Next.js, Vue, Svelte, Node.js.                          |
| [API](https://langfuse.com/docs/api)                                         |                            | Directly call the public API. OpenAPI spec available.                                                                                            |

### Packages integrated with Langfuse:

| Name                                                                    | Type               | Description                                                                                                             |
| ----------------------------------------------------------------------- | ------------------ | ----------------------------------------------------------------------------------------------------------------------- |
| [Instructor](https://langfuse.com/docs/integrations/instructor)         | Library            | Library to get structured LLM outputs (JSON, Pydantic)                                                                  |
| [DSPy](https://langfuse.com/docs/integrations/dspy)                     | Library            | Framework that systematically optimizes language model prompts and weights                                              |
| [Mirascope](https://langfuse.com/docs/integrations/mirascope)           | Library            | Python toolkit for building LLM applications.                                                                           |
| [Ollama](https://langfuse.com/docs/integrations/ollama)                 | Model (local)      | Easily run open source LLMs on your own machine.                                                                        |
| [Amazon Bedrock](https://langfuse.com/docs/integrations/amazon-bedrock) | Model              | Run foundation and fine-tuned models on AWS.                                                                            |
| [AutoGen](https://langfuse.com/docs/integrations/autogen)               | Agent Framework    | Open source LLM platform for building distributed agents.                                                               |
| [Flowise](https://langfuse.com/docs/integrations/flowise)               | Chat/Agent&amp;nbsp;UI | JS/TS no-code builder for customized LLM flows.                                                                         |
| [Langflow](https://langfuse.com/docs/integrations/langflow)             | Chat/Agent&amp;nbsp;UI | Python-based UI for LangChain, designed with react-flow to provide an effortless way to experiment and prototype flows. |
| [Dify](https://langfuse.com/docs/integrations/dify)                     | Chat/Agent&amp;nbsp;UI | Open source LLM app development platform with no-code builder.                                                          |
| [OpenWebUI](https://langfuse.com/docs/integrations/openwebui)           | Chat/Agent&amp;nbsp;UI | Self-hosted LLM Chat web ui supporting various LLM runners including self-hosted and local models.                      |
| [Promptfoo](https://langfuse.com/docs/integrations/promptfoo)           | Tool               | Open source LLM testing platform.                                                                                       |
| [LobeChat](https://langfuse.com/docs/integrations/lobechat)             | Chat/Agent&amp;nbsp;UI | Open source chatbot platform.                                                                                           |
| [Vapi](https://langfuse.com/docs/integrations/vapi)                     | Platform           | Open source voice AI platform.                                                                                          |
| [Inferable](https://langfuse.com/docs/integrations/other/inferable)     | Agents             | Open source LLM platform for building distributed agents.                                                               |
| [Gradio](https://langfuse.com/docs/integrations/other/gradio)           | Chat/Agent&amp;nbsp;UI | Open source Python library to build web interfaces like Chat UI.                                                        |
| [Goose](https://langfuse.com/docs/integrations/goose)                   | Agents             | Open source LLM platform for building distributed agents.                                                               |
| [smolagents](https://langfuse.com/docs/integrations/smolagents)         | Agents             | Open source AI agents framework.                                                                                        |
| [CrewAI](https://langfuse.com/docs/integrations/crewai)                 | Agents             | Multi agent framework for agent collaboration and tool use.                                                             |

## üöÄ Quickstart

Instrument your app and start ingesting traces to Langfuse, thereby tracking LLM calls and other relevant logic in your app such as retrieval, embedding, or agent actions. Inspect and debug complex logs and user sessions.

### 1Ô∏è‚É£ Create new project

1.  [Create Langfuse account](https://cloud.langfuse.com/auth/sign-up) or [self-host](https://langfuse.com/self-hosting)
2.  Create a new project
3.  Create new API credentials in the project settings

### 2Ô∏è‚É£ Log your first LLM call

The [`@observe()` decorator](https://langfuse.com/docs/sdk/python/decorators) makes it easy to trace any Python LLM application. In this quickstart we also use the Langfuse [OpenAI integration](https://langfuse.com/docs/integrations/openai) to automatically capture all model parameters.

&gt; [!TIP]
&gt; Not using OpenAI? Visit [our documentation](https://langfuse.com/docs/get-started#log-your-first-llm-call-to-langfuse) to learn how to log other models and frameworks.

```bash
pip install langfuse openai
```

```bash filename=&quot;.env&quot;
LANGFUSE_SECRET_KEY=&quot;sk-lf-...&quot;
LANGFUSE_PUBLIC_KEY=&quot;pk-lf-...&quot;
LANGFUSE_HOST=&quot;https://cloud.langfuse.com&quot; # üá™üá∫ EU region
# LANGFUSE_HOST=&quot;https://us.cloud.langfuse.com&quot; # üá∫üá∏ US region
```

```python /@observe()/ /from langfuse.openai import openai/ filename=&quot;main.py&quot;
from langfuse.decorators import observe
from langfuse.openai import openai # OpenAI integration

@observe()
def story():
    return openai.chat.completions.create(
        model=&quot;gpt-4o&quot;,
        messages=[{&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;What is Langfuse?&quot;}],
    ).choices[0].message.content

@observe()
def main():
    return story()

main()
```

### 3Ô∏è‚É£ See traces in Langfuse

See your language model calls and other application logic in Langfuse.

![Example trace in Langfuse](https://langfuse.com/images/docs/github-readme/github-example-trace.png)

_[Public example trace in Langfuse](https://cloud.langfuse.com/project/cloramnkj0002jz088vzn1ja4/traces/2cec01e3-3dc2-472f-afcf-3b968cf0c1f4?timestamp=2025-02-10T14%3A27%3A30.275Z&amp;observation=cb5ff844-07ef-41e6-b8e2-6c64344bc13b)_

&gt; [!TIP]
&gt;
&gt; [Learn more](https://langfuse.com/docs/tracing) about tracing in Langfuse or play with the [interactive demo](https://langfuse.com/docs/demo).

## ‚≠êÔ∏è Star Us

![star-langfuse-on-github](https://github.com/user-attachments/assets/79a1d816-d229-4526-aecc-097d4a19f1ad)

## üí≠ Support

Finding an answer to your question:

- Our [documentation](https://langfuse.com/docs) is the best place to start looking for answers. It is comprehensive, and we invest significant time into maintaining it. You can also suggest edits to the docs via GitHub.
- [Langfuse FAQs](https://langfuse.com/faq) where the most common questions are answered.
- Use &quot;[Ask AI](https://langfuse.com/docs/ask-ai)&quot; to get instant answers to your questions.

Support Channels:

- **Ask any question in our [public Q&amp;A](https://github.com/orgs/langfuse/discussions/categories/support) on GitHub Discussions.** Please include as much detail as possible (e.g. code snippets, screenshots, background information) to help us understand your question.
- [Request a feature](https://github.com/orgs/langfuse/discussions/categories/ideas) on GitHub Discussions.
- [Report a Bug](https://github.com/langfuse/langfuse/issues) on GitHub Issues.
- For time-sensitive queries, ping us via the in-app chat widget.

## ü§ù Contributing

Your contributions are welcome!

- Vote on [Ideas](https://github.com/orgs/langfuse/discussions/categories/ideas) in GitHub Discussions.
- Raise and comment on [Issues](https://github.com/langfuse/langfuse/issues).
- Open a PR - see [CONTRIBUTING.md](CONTRIBUTING.md) for details on how to setup a development environment.

## ü•á License

This repository is MIT licensed, except for the `ee` folders. See [LICENSE](LICENSE) and [docs](https://langfuse.com/docs/open-source) for more details.

## ‚≠êÔ∏è Star History

&lt;a href=&quot;https://star-history.com/#langfuse/langfuse&amp;Date&quot;&gt;
 &lt;picture&gt;
   &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://api.star-history.com/svg?repos=langfuse/langfuse&amp;type=Date&amp;theme=dark&quot; /&gt;
   &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://api.star-history.com/svg?repos=langfuse/langfuse&amp;type=Date&quot; /&gt;
   &lt;img alt=&quot;Star History Chart&quot; src=&quot;https://api.star-history.com/svg?repos=langfuse/langfuse&amp;type=Date&quot; style=&quot;border-radius: 15px;&quot; /&gt;
 &lt;/picture&gt;
&lt;/a&gt;

## ‚ù§Ô∏è Open Source Projects Using Langfuse

Top open-source Python projects that use Langfuse, ranked by stars ([Source](https://github.com/langfuse/langfuse-docs/blob/main/components-mdx/dependents)):

| Repository                                                                                                                                                                                                                                                          | Stars |
| :----------------------------------------------------------------

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[vueuse/vueuse]]></title>
            <link>https://github.com/vueuse/vueuse</link>
            <guid>https://github.com/vueuse/vueuse</guid>
            <pubDate>Wed, 23 Apr 2025 00:05:12 GMT</pubDate>
            <description><![CDATA[Collection of essential Vue Composition Utilities for Vue 3]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/vueuse/vueuse">vueuse/vueuse</a></h1>
            <p>Collection of essential Vue Composition Utilities for Vue 3</p>
            <p>Language: TypeScript</p>
            <p>Stars: 20,988</p>
            <p>Forks: 2,680</p>
            <p>Stars today: 13 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
&lt;a href=&quot;https://github.com/vueuse/vueuse#gh-light-mode-only&quot;&gt;
  &lt;img src=&quot;https://raw.githubusercontent.com/vueuse/vueuse/main/packages/public/logo-vertical.png#gh-light-mode-only&quot; alt=&quot;VueUse - Collection of essential Vue Composition Utilities&quot; width=&quot;300&quot;&gt;
&lt;/a&gt;
&lt;a href=&quot;https://github.com/vueuse/vueuse#gh-dark-mode-only&quot;&gt;
  &lt;img src=&quot;https://raw.githubusercontent.com/vueuse/vueuse/main/packages/public/logo-vertical-dark.png#gh-dark-mode-only&quot; alt=&quot;VueUse - Collection of essential Vue Composition Utilities&quot; width=&quot;300&quot;&gt;
&lt;/a&gt;
&lt;br&gt;
Collection of essential Vue Composition Utilities
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;a href=&quot;https://www.npmjs.com/package/@vueuse/core&quot; target=&quot;__blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/@vueuse/core?color=a1b858&amp;label=&quot; alt=&quot;NPM version&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://www.npmjs.com/package/@vueuse/core&quot; target=&quot;__blank&quot;&gt;&lt;img alt=&quot;NPM Downloads&quot; src=&quot;https://img.shields.io/npm/dm/@vueuse/core?color=50a36f&amp;label=&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://vueuse.org&quot; target=&quot;__blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/static/v1?label=&amp;message=docs%20%26%20demos&amp;color=1e8a7a&quot; alt=&quot;Docs &amp; Demos&quot;&gt;&lt;/a&gt;
&lt;img alt=&quot;Function Count&quot; src=&quot;https://vueuse.org/badge-function-count.svg&quot;&gt;
&lt;br&gt;
&lt;a href=&quot;https://github.com/vueuse/vueuse&quot; target=&quot;__blank&quot;&gt;&lt;img alt=&quot;GitHub stars&quot; src=&quot;https://img.shields.io/github/stars/vueuse/vueuse?style=social&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://cdn.jsdelivr.net/gh/antfu/static/sponsors.svg&quot;&gt;
    &lt;img src=&#039;https://cdn.jsdelivr.net/gh/antfu/static/sponsors.svg&#039;&gt;
  &lt;/a&gt;
&lt;/p&gt;

## üöÄ Features

- üé™ [**Interactive docs &amp; demos**](https://vueuse.org)
- ‚ö° **Fully tree shakeable**: Only take what you want, [bundle size](https://vueuse.org/export-size)
- ü¶æ **Type Strong**: Written in [TypeScript](https://www.typescriptlang.org/), with [TS Docs](https://github.com/microsoft/tsdoc)
- üîã **SSR Friendly**
- üåé **No bundler required**: Usable via CDN
- üî© **Flexible**: Configurable event filters and targets
- üîå **Optional [Add-ons](https://vueuse.org/add-ons)**: Router, Firebase, RxJS, etc.

## ü¶Ñ Usage

```ts
import { useLocalStorage, useMouse, usePreferredDark } from &#039;@vueuse/core&#039;

const { x, y } = useMouse()

// if user prefers dark theme
const isDark = usePreferredDark()

// persist state in localStorage
const store = useLocalStorage(
  &#039;my-storage&#039;,
  {
    name: &#039;Apple&#039;,
    color: &#039;red&#039;,
  },
)
```

Refer to [functions list](https://vueuse.org/functions) or [documentations](https://vueuse.org/) for more details.

## üì¶ Install

&gt; From v12.0, VueUse no longer supports Vue 2. Please use v11.x for Vue 2 support.

```bash
npm i @vueuse/core
```

[Add ons](https://vueuse.org/add-ons.html) | [Nuxt Module](https://vueuse.org/guide/index.html#nuxt)

###### Demos

- [Vite + Vue 3](https://github.com/vueuse/vueuse-vite-starter)
- [Nuxt 3 + Vue 3](https://github.com/antfu/vitesse-nuxt3)
- [Webpack + Vue 3](https://github.com/vueuse/vueuse-vue3-example)

### CDN

```vue
&lt;script src=&quot;https://unpkg.com/@vueuse/shared&quot;&gt;&lt;/script&gt;

&lt;script src=&quot;https://unpkg.com/@vueuse/core&quot;&gt;&lt;/script&gt;
```

It will be exposed to global as `window.VueUse`

## ü™¥ Project Activity

![Alt](https://repobeats.axiom.co/api/embed/a406ba7461a6a087dbdb14d4395046c948d44c51.svg &#039;Repobeats analytics image&#039;)

## üß± Contribute

See the [**Contributing Guide**](https://vueuse.org/contributing)

## üå∏ Thanks

This project is heavily inspired by the following awesome projects.

- [streamich/react-use](https://github.com/streamich/react-use)
- [u3u/vue-hooks](https://github.com/u3u/vue-hooks)
- [logaretm/vue-use-web](https://github.com/logaretm/vue-use-web)
- [kripod/react-hooks](https://github.com/kripod/react-hooks)

And thanks to [all the contributors on GitHub](https://github.com/vueuse/vueuse/graphs/contributors)!

## üë®‚ÄçüöÄ Contributors

### Financial Contributors on Open Collective

&lt;a href=&quot;https://opencollective.com/vueuse&quot;&gt;&lt;img src=&quot;https://opencollective.com/vueuse/individuals.svg?width=890&quot;&gt;&lt;/a&gt;

## üìÑ License

[MIT License](https://github.com/vueuse/vueuse/blob/main/LICENSE) ¬© 2019-PRESENT [Anthony Fu](https://github.com/antfu)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[elie222/inbox-zero]]></title>
            <link>https://github.com/elie222/inbox-zero</link>
            <guid>https://github.com/elie222/inbox-zero</guid>
            <pubDate>Wed, 23 Apr 2025 00:05:11 GMT</pubDate>
            <description><![CDATA[AI personal assistant for email. Open source app to help you reach inbox zero fast.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/elie222/inbox-zero">elie222/inbox-zero</a></h1>
            <p>AI personal assistant for email. Open source app to help you reach inbox zero fast.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 6,788</p>
            <p>Forks: 691</p>
            <p>Stars today: 241 stars today</p>
            <h2>README</h2><pre>[![](apps/web/app/opengraph-image.png)](https://www.getinboxzero.com)

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.getinboxzero.com&quot;&gt;
    &lt;h1 align=&quot;center&quot;&gt;Inbox Zero - Your AI Email Assistant&lt;/h1&gt;
  &lt;/a&gt;
  &lt;p align=&quot;center&quot;&gt;
    Open source email app to reach inbox zero fast.
    &lt;br /&gt;
    &lt;a href=&quot;https://www.getinboxzero.com&quot;&gt;Website&lt;/a&gt;
    ¬∑
    &lt;a href=&quot;https://www.getinboxzero.com/discord&quot;&gt;Discord&lt;/a&gt;
    ¬∑
    &lt;a href=&quot;https://github.com/elie222/inbox-zero/issues&quot;&gt;Issues&lt;/a&gt;
  &lt;/p&gt;
&lt;/p&gt;

## About

There are two parts to Inbox Zero:

1. An AI email assistant that helps you spend less time on email.
2. Open source AI email client.

If you&#039;re looking to contribue to the project, the email client is the best place to do this.

[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/clone?repository-url=https%3A%2F%2Fgithub.com%2Felie222%2Finbox-zero&amp;env=NEXTAUTH_SECRET,GOOGLE_CLIENT_ID,GOOGLE_CLIENT_SECRET,GOOGLE_ENCRYPT_SECRET,GOOGLE_ENCRYPT_SALT,UPSTASH_REDIS_URL,UPSTASH_REDIS_TOKEN,GOOGLE_PUBSUB_TOPIC_NAME,DATABASE_URL)

Thanks to Vercel for sponsoring Inbox Zero in support of open-source software.

## Features

- **AI Personal Assistant:** Manages your email for you based on a plain text prompt file. It can take any action a human assistant can take on your behalf (Draft reply, Label, Archive, Reply, Forward, Mark Spam, and even call a webhook).
- **Reply Zero:** Track emails that need your reply and those awaiting responses.
- **Smart Categories:** Categorize everyone that&#039;s ever emailed you.
- **Bulk Unsubscriber:** Quickly unsubscribe from emails you never read in one-click.
- **Cold Email Blocker:** Automatically block cold emails.
- **Email Analytics:** Track your email activity with daily, weekly, and monthly stats.

Learn more in our [docs](https://docs.getinboxzero.com).

## Feature Screenshots

| ![AI Assistant](.github/screenshots/email-assistant.png) |        ![Reply Zero](.github/screenshots/reply-zero.png)        |
| :------------------------------------------------------: | :-------------------------------------------------------------: |
|                      _AI Assistant_                      |                          _Reply Zero_                           |
|  ![Gmail Client](.github/screenshots/email-client.png)   | ![Bulk Unsubscriber](.github/screenshots/bulk-unsubscriber.png) |
|                      _Gmail client_                      |                       _Bulk Unsubscriber_                       |

## Demo Video

[![Inbox Zero demo](/video-thumbnail.png)](http://www.youtube.com/watch?v=hfvKvTHBjG0)

## Built with

- [Next.js](https://nextjs.org/)
- [Tailwind CSS](https://tailwindcss.com/)
- [shadcn/ui](https://ui.shadcn.com/)
- [Prisma](https://www.prisma.io/)
- [Upstash](https://upstash.com/)
- [Turborepo](https://turbo.build/)

## Star History

[![Star History Chart](https://api.star-history.com/svg?repos=elie222/inbox-zero&amp;type=Date)](https://www.star-history.com/#elie222/inbox-zero&amp;Date)

## Feature Requests

To request a feature open a [GitHub issue](https://github.com/elie222/inbox-zero/issues), or join our [Discord](https://www.getinboxzero.com/discord).

## Getting Started for Developers

We offer a hosted version of Inbox Zero at [https://getinboxzero.com](https://getinboxzero.com). To self-host follow the steps below.

### Contributing to the project

You can view open tasks in our [GitHub Issues](https://github.com/elie222/inbox-zero/issues).
Join our [Discord](https://www.getinboxzero.com/discord) to discuss tasks and check what&#039;s being worked on.

[ARCHITECTURE.md](./ARCHITECTURE.md) explains the architecture of the project (LLM generated).

### Requirements

- [Node.js](https://nodejs.org/en/) &gt;= 18.0.0
- [pnpm](https://pnpm.io/) &gt;= 8.6.12
- [Docker desktop](https://www.docker.com/products/docker-desktop/) (optional)

### Setup

[Here&#039;s a video](https://youtu.be/hVQENQ4WT2Y) on how to set up the project. It covers the same steps mentioned in this document. But goes into greater detail on setting up the external services.

The external services that are required are:

- [Google OAuth](https://console.cloud.google.com/apis/credentials)
- [Google PubSub](https://console.cloud.google.com/cloudpubsub/topic/list) - see set up instructions below

You also need to set an LLM, but you can use a local one too:

- [Anthropic](https://console.anthropic.com/settings/keys)
- [OpenAI](https://platform.openai.com/api-keys)
- AWS Bedrock Anthropic
- Google Gemini
- OpenRouter (any model)
- Groq (Llama 3.3 70B)
- Ollama (local)

We use Postgres for the database.
For Redis, you can use [Upstash Redis](https://upstash.com/) or set up your own Redis instance.

You can run Postgres &amp; Redis locally using `docker-compose`

```bash
docker-compose up -d # -d will run the services in the background
```

Create your own `.env` file:

```bash
cp apps/web/.env.example apps/web/.env
cd apps/web
pnpm install
```

For self-hosting, you may also need to copy the `.env` file to both the root directory AND the apps/web directory (PRs welcome to improve this):

```bash
cp apps/web/.env .env
```

Set the environment variables in the newly created `.env`. You can see a list of required variables in: `apps/web/env.ts`.

The required environment variables:

- `NEXTAUTH_SECRET` -- can be any random string (try using `openssl rand -hex 32` for a quick secure random string)
- `GOOGLE_CLIENT_ID` -- Google OAuth client ID. More info [here](https://next-auth.js.org/providers/google)
- `GOOGLE_CLIENT_SECRET` -- Google OAuth client secret. More info [here](https://next-auth.js.org/providers/google)
- `GOOGLE_ENCRYPT_SECRET` -- Secret key for encrypting OAuth tokens (try using `openssl rand -hex 32` for a secure key)
- `GOOGLE_ENCRYPT_SALT` -- Salt for encrypting OAuth tokens (try using `openssl rand -hex 16` for a secure salt)
- `UPSTASH_REDIS_URL` -- Redis URL from Upstash. (can be empty if you are using Docker Compose)
- `UPSTASH_REDIS_TOKEN` -- Redis token from Upstash. (or specify your own random string if you are using Docker Compose)

When using Vercel with Fluid Compute turned off, you should set `MAX_DURATION=300` or lower. See Vercel limits for different plans [here](https://vercel.com/docs/functions/configuring-functions/duration#duration-limits).

To run the migrations:

```bash
pnpm prisma migrate dev
```

To run the app locally for development (slower):

```bash
pnpm run dev
```

Or from the project root:

```bash
turbo dev
```

To build and run the app locally in production mode (faster):

```bash
pnpm run build
pnpm start
```

Open [http://localhost:3000](http://localhost:3000) to view the app in your browser.

To upgrade yourself, make yourself an admin in the `.env`: `ADMINS=hello@gmail.com`
Then upgrade yourself at: [http://localhost:3000/admin](http://localhost:3000/admin).

### Supported LLMs

For the LLM, you can use Anthropic, OpenAI, or Anthropic on AWS Bedrock. You can also use Ollama by setting the following enviroment variables:

```sh
DEFAULT_LLM_PROVIDER=ollama
OLLAMA_BASE_URL=http://localhost:11434/api
NEXT_PUBLIC_OLLAMA_MODEL=gemma3  # or whatever available model you want to use
```

Note: If you need to access Ollama hosted locally and the application is running on Docker setup, you can use `http://host.docker.internal:11434/api` as the base URL. You might also need to set `OLLAMA_HOST` to `0.0.0.0` in the Ollama configuration file.

You can select the model you wish to use in the app on the `/settings` page of the app.

### Setting up Google OAuth and Gmail API

1. **Create a Project in Google Cloud Console**
   - Go to [Google Cloud Console](https://console.cloud.google.com/)
   - Create a new project

2. **Enable Required APIs**
   - Enable the [Gmail API](https://console.developers.google.com/apis/api/gmail.googleapis.com/overview)
   - Enable the [People API](https://console.developers.google.com/apis/api/people.googleapis.com/overview)

3. **Configure the OAuth Consent Screen**
   - Go to &#039;APIs &amp; Services&#039; &gt; &#039;OAuth consent screen&#039;
   - Choose &#039;External&#039; user type (or &#039;Internal&#039; if you have Google Workspace)
   - Fill in required app information
   - Add the following scopes:
     ```plaintext
     https://www.googleapis.com/auth/userinfo.profile
     https://www.googleapis.com/auth/userinfo.email
     https://www.googleapis.com/auth/gmail.modify
     https://www.googleapis.com/auth/gmail.settings.basic
     https://www.googleapis.com/auth/contacts
     ```
   - Add yourself as a test user under &#039;Test users&#039; section

4. **Create OAuth 2.0 Credentials**
   - Go to &#039;APIs &amp; Services&#039; &gt; &#039;Credentials&#039;
   - Click &#039;Create Credentials&#039; &gt; &#039;OAuth client ID&#039;
   - Select &#039;Web application&#039; type
   - Add authorized JavaScript origins:
     - Development: `http://localhost:3000`
     - Production: `https://your-production-url.com`
   - Add authorized redirect URIs:
     - Development:
       ```
       http://localhost:3000/api/auth/callback/google
       ```
     - Production:
       ```
       https://your-production-url.com/api/auth/callback/google
       ```

5. **Configure Environment Variables**
   - Add to your `.env` file:
     ```
     GOOGLE_CLIENT_ID=your_client_id
     GOOGLE_CLIENT_SECRET=your_client_secret
     ```

### Set up push notifications via Google PubSub to handle emails in real time

Follow instructions [here](https://developers.google.com/gmail/api/guides/push).

1. [Create a topic](https://developers.google.com/gmail/api/guides/push#create_a_topic)
2. [Create a subscription](https://developers.google.com/gmail/api/guides/push#create_a_subscription)
3. [Grant publish rights on your topic](https://developers.google.com/gmail/api/guides/push#grant_publish_rights_on_your_topic)

Set env var `GOOGLE_PUBSUB_TOPIC_NAME`.
When creating the subscription select Push and the url should look something like: `https://www.getinboxzero.com/api/google/webhook?token=TOKEN` or `https://abc.ngrok-free.app/api/google/webhook?token=TOKEN` where the domain is your domain. Set `GOOGLE_PUBSUB_VERIFICATION_TOKEN` in your `.env` file to be the value of `TOKEN`.

To run in development ngrok can be helpful:

```sh
ngrok http 3000
# or with an ngrok domain to keep your endpoint stable (set `XYZ`):
ngrok http --domain=XYZ.ngrok-free.app 3000
```

And then update the webhook endpoint in the [Google PubSub subscriptions dashboard](https://console.cloud.google.com/cloudpubsub/subscription/list).

To start watching emails visit: `/api/google/watch/all`

### Watching for email updates

Set a cron job to run these:
The Google watch is necessary. Others are optional.

```json
  &quot;crons&quot;: [
    {
      &quot;path&quot;: &quot;/api/google/watch/all&quot;,
      &quot;schedule&quot;: &quot;0 1 * * *&quot;
    },
    {
      &quot;path&quot;: &quot;/api/resend/summary/all&quot;,
      &quot;schedule&quot;: &quot;0 16 * * 1&quot;
    },
    {
      &quot;path&quot;: &quot;/api/reply-tracker/disable-unused-auto-draft&quot;,
      &quot;schedule&quot;: &quot;0 3 * * *&quot;
    }
  ]
```

[Here](https://vercel.com/guides/how-to-setup-cron-jobs-on-vercel#alternative-cron-providers) are some easy ways to run cron jobs. Upstash is a free, easy option. I could never get the Vercel `vercel.json`. Open to PRs if you find a fix for that.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[hydralauncher/hydra]]></title>
            <link>https://github.com/hydralauncher/hydra</link>
            <guid>https://github.com/hydralauncher/hydra</guid>
            <pubDate>Wed, 23 Apr 2025 00:05:10 GMT</pubDate>
            <description><![CDATA[Hydra is a game launcher with its own embedded bittorrent client]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/hydralauncher/hydra">hydralauncher/hydra</a></h1>
            <p>Hydra is a game launcher with its own embedded bittorrent client</p>
            <p>Language: TypeScript</p>
            <p>Stars: 12,459</p>
            <p>Forks: 3,503</p>
            <p>Stars today: 112 stars today</p>
            <h2>README</h2><pre>&lt;br&gt;

&lt;div align=&quot;center&quot;&gt;

[&lt;img src=&quot;./resources/icon.png&quot; width=&quot;144&quot;/&gt;](https://help.hydralauncher.gg)

  &lt;h1 align=&quot;center&quot;&gt;Hydra Launcher&lt;/h1&gt;

  &lt;p align=&quot;center&quot;&gt;
    &lt;strong&gt;Hydra is a game launcher with its own embedded bittorrent client.&lt;/strong&gt;
  &lt;/p&gt;

[![build](https://img.shields.io/github/actions/workflow/status/hydralauncher/hydra/build.yml)](https://github.com/hydralauncher/hydra/actions)
[![release](https://img.shields.io/github/package-json/v/hydralauncher/hydra)](https://github.com/hydralauncher/hydra/releases)

[![pt-BR](https://img.shields.io/badge/lang-pt--BR-green.svg)](./docs/README.pt-BR.md)
[![en](https://img.shields.io/badge/lang-en-red.svg)](./README.md)
[![ru](https://img.shields.io/badge/lang-ru-yellow.svg)](./docs/README.ru.md)
[![uk-UA](https://img.shields.io/badge/lang-uk--UA-blue)](./docs/README.uk-UA.md)
[![be](https://img.shields.io/badge/lang-be-orange)](./docs/README.be.md)
[![es](https://img.shields.io/badge/lang-es-red)](./docs/README.es.md)
[![fr](https://img.shields.io/badge/lang-fr-blue)](./docs/README.fr.md)
[![de](https://img.shields.io/badge/lang-de-black)](./docs/README.de.md)
[![ita](https://img.shields.io/badge/lang-it-red)](./docs/README.it.md)
[![cs](https://img.shields.io/badge/lang-cs-purple)](./docs/README.cs.md)
[![da](https://img.shields.io/badge/lang-da-red)](./docs/README.da.md)
[![nb](https://img.shields.io/badge/lang-nb-blue)](./docs/README.nb.md)
[![et](https://img.shields.io/badge/lang-et-blue.svg)](./docs/README.et.md)
[![tr](https://img.shields.io/badge/lang-tr-red.svg)](./docs/README.tr.md)

![Hydra Catalogue](./docs/screenshot.png)

&lt;/div&gt;

## Table of Contents

- [Table of Contents](#table-of-contents)
- [About](#about)
- [Features](#features)
- [Installation](#installation)
- [Contributing](#-contributing)
  - [Join our Telegram](#-join-our-telegram)
  - [Fork and clone your repository](#fork-and-clone-your-repository)
  - [Ways you can contribute](#ways-you-can-contribute)
  - [Project Structure](#project-structure)
- [Build from source](#build-from-source)
  - [Install Node.js](#install-nodejs)
  - [Install Yarn](#install-yarn)
  - [Install Node Dependencies](#install-node-dependencies)
  - [Install Python 3.9](#install-python-39)
  - [Install Python Dependencies](#install-python-dependencies)
- [Environment variables](#environment-variables)
- [Running](#running)
- [Build](#build)
  - [Build the bittorrent client](#build-the-bittorrent-client)
  - [Build the Electron application](#build-the-electron-application)
- [Contributors](#contributors)
- [License](#license)

## About

**Hydra** is a **Game Launcher** with its own embedded **BitTorrent Client**.
&lt;br&gt;
The launcher is written in TypeScript (Electron) and Python, which handles the torrenting system by using libtorrent.

## Features

- Own embedded bittorrent client
- How Long To Beat (HLTB) integration on game page
- Downloads path customization
- Windows and Linux support
- Constantly updated
- And more ...

## Installation

Follow the steps below to install:

1. Download the latest version of Hydra from the [Releases](https://github.com/hydralauncher/hydra/releases/latest) page.
   - Download only .exe if you want to install Hydra on Windows.
   - Download .deb or .rpm or .zip if you want to install Hydra on Linux. (depends on your Linux distro)
2. Run the downloaded file.
3. Enjoy Hydra!

## &lt;a name=&quot;contributing&quot;&gt; Contributing

### &lt;a name=&quot;join-our-telegram&quot;&gt;&lt;/a&gt; Join our Telegram

We concentrate our discussions on our [Telegram](https://t.me/hydralauncher) channel.

### Fork and clone your repository

1. Fork the repository [(click here to fork now)](https://github.com/hydralauncher/hydra/fork)
2. Clone your forked code `git clone https://github.com/your_username/hydra`
3. Create a new branch
4. Push your commits
5. Submit a new Pull Request

### Ways you can contribute

- Translation: We want Hydra to be available to as many people as possible. Feel free to help translate to new languages or update and improve the ones that are already available on Hydra.
- Code: Hydra is built with Typescript, Electron and a little bit of Python. If you want to contribute, join our [Telegram](https://t.me/hydralauncher)!

### Project Structure

- torrent-client: We use libtorrent, a Python library, to manage torrent downloads
- src/renderer: the UI of the application
- src/main: all the logic rests here.

## Build from source

### Install Node.js

Ensure you have Node.js installed on your machine. If not, download and install it from [nodejs.org](https://nodejs.org/).

### Install Yarn

Yarn is a package manager for Node.js. If you haven&#039;t installed Yarn yet, you can do so by following the instructions on [yarnpkg.com](https://classic.yarnpkg.com/lang/en/docs/install/).

### Install Node Dependencies

Navigate to the project directory and install the Node dependencies using Yarn:

```bash
cd hydra
yarn
```

### Install OpenSSL 1.1

[OpenSSL 1.1](https://slproweb.com/download/Win64OpenSSL-1_1_1w.exe) is required by libtorrent in Windows environments.

### Install Python 3.9

Ensure you have Python 3.9 installed on your machine. You can download and install it from [python.org](https://www.python.org/downloads/release/python-3913/).

### Install Python Dependencies

Install the required Python dependencies using pip:

```bash
pip install -r requirements.txt
```

## Environment variables

You&#039;ll need an SteamGridDB API Key in order to fetch the game icons on installation.

Once you have it, you can copy or rename the `.env.example` file to `.env` and put it on`STEAMGRIDDB_API_KEY`.

## Running

Once you&#039;ve got all things set up, you can run the following command to start both the Electron process and the bittorrent client:

```bash
yarn dev
```

## Build

### Build the bittorrent client

Build the bittorrent client by using this command:

```bash
python torrent-client/setup.py build
```

### Build the Electron application

Build the Electron application by using this command:

On Windows:

```bash
yarn build:win
```

On Linux:

```bash
yarn build:linux
```

## Contributors

&lt;a href=&quot;https://github.com/hydralauncher/hydra/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=hydralauncher/hydra&quot; /&gt;
&lt;/a&gt;

## License

Hydra is licensed under the [MIT License](LICENSE).
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[triggerdotdev/trigger.dev]]></title>
            <link>https://github.com/triggerdotdev/trigger.dev</link>
            <guid>https://github.com/triggerdotdev/trigger.dev</guid>
            <pubDate>Wed, 23 Apr 2025 00:05:09 GMT</pubDate>
            <description><![CDATA[Trigger.dev ‚Äì open source background jobs and AI infrastructure]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/triggerdotdev/trigger.dev">triggerdotdev/trigger.dev</a></h1>
            <p>Trigger.dev ‚Äì open source background jobs and AI infrastructure</p>
            <p>Language: TypeScript</p>
            <p>Stars: 10,962</p>
            <p>Forks: 696</p>
            <p>Stars today: 63 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
&lt;picture&gt;
  &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://imagedelivery.net/3TbraffuDZ4aEf8KWOmI_w/a45d1fa2-0ae8-4a39-4409-f4f934bfae00/public&quot;&gt;
  &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://imagedelivery.net/3TbraffuDZ4aEf8KWOmI_w/3f5ad4c1-c4c8-4277-b622-290e7f37bd00/public&quot;&gt;
  &lt;img alt=&quot;Trigger.dev logo&quot; src=&quot;https://imagedelivery.net/3TbraffuDZ4aEf8KWOmI_w/a45d1fa2-0ae8-4a39-4409-f4f934bfae00/public&quot;&gt;
&lt;/picture&gt;
  
### Open source background jobs and AI infrastructure

[Discord](https://trigger.dev/discord) | [Website](https://trigger.dev) | [Issues](https://github.com/triggerdotdev/trigger.dev/issues) | [Docs](https://trigger.dev/docs)

[![Twitter](https://img.shields.io/twitter/url/https/twitter.com/triggerdotdev.svg?style=social&amp;label=Follow%20%40trigger.dev)](https://twitter.com/triggerdotdev)

&lt;/div&gt;

## About Trigger.dev

Trigger.dev is an open source platform and SDK which allows you to create long-running background jobs. Write normal async code, deploy, and never hit a timeout.

### Key features:

- JavaScript and TypeScript SDK
- No timeouts
- Retries (with exponential backoff)
- Queues and concurrency controls
- Schedules and crons
- Full Observability; logs, live trace views, advanced filtering
- React hooks to interact with the Trigger API from your React app
- Pipe LLM streams straight to your users through the Realtime API
- Trigger tasks and display the run status and metadata anywhere in your app
- Custom alerts, get notified by email, Slack or webhooks
- No infrastructure to manage
- Elastic (scaling)
- Works with your existing tech stack

## In your codebase

Create tasks where they belong: in your codebase. Version control, localhost, test and review like you&#039;re already used to.

```ts
import { task } from &quot;@trigger.dev/sdk/v3&quot;;

//1. You need to export each task
export const helloWorld = task({
  //2. Use a unique id for each task
  id: &quot;hello-world&quot;,
  //3. The run function is the main function of the task
  run: async (payload: { message: string }) =&gt; {
    //4. You can write code that runs for a long time here, there are no timeouts
    console.log(payload.message);
  },
});
```

## Deployment

Use our SDK to write tasks in your codebase. There&#039;s no infrastructure to manage, your tasks automatically scale and connect to our cloud. Or you can always self-host.

## Environments

We support `Development`, `Staging`, and `Production` environments, allowing you to test your tasks before deploying them to production.

## Full visibility of every job run

View every task in every run so you can tell exactly what happened. We provide a full trace view of every task run so you can see what happened at every step.

![Trace view image](https://imagedelivery.net/3TbraffuDZ4aEf8KWOmI_w/7c1b347f-004c-4482-38a7-3f6fa9c00d00/public)

# Getting started

The quickest way to get started is to create an account and project in our [web app](https://cloud.trigger.dev), and follow the instructions in the onboarding. Build and deploy your first task in minutes.

### Useful links:

- [Quick start](https://trigger.dev/docs/quick-start) - get up and running in minutes
- [How it works](https://trigger.dev/docs/v3/how-it-works) - understand how Trigger.dev works under the hood
- [Guides and examples](https://trigger.dev/docs/guides/introduction) - walk-through guides and code examples for popular frameworks and use cases

## Self-hosting

If you prefer to self-host Trigger.dev, you can follow our [self-hosting guide](https://trigger.dev/docs/v3/open-source-self-hosting#overview).

We also have a dedicated self-hosting channel in our [Discord server](https://trigger.dev/discord) for support.

## Development

To setup and develop locally or contribute to the open source project, follow our [development guide](./CONTRIBUTING.md).

## Meet the Amazing People Behind This Project:

&lt;a href=&quot;https://github.com/triggerdotdev/trigger.dev/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=triggerdotdev/trigger.dev&quot; /&gt;
&lt;/a&gt;
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[wandb/openui]]></title>
            <link>https://github.com/wandb/openui</link>
            <guid>https://github.com/wandb/openui</guid>
            <pubDate>Wed, 23 Apr 2025 00:05:08 GMT</pubDate>
            <description><![CDATA[OpenUI let's you describe UI using your imagination, then see it rendered live.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/wandb/openui">wandb/openui</a></h1>
            <p>OpenUI let's you describe UI using your imagination, then see it rendered live.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 20,913</p>
            <p>Forks: 1,942</p>
            <p>Stars today: 92 stars today</p>
            <h2>README</h2><pre># OpenUI

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;./assets/openui.png&quot; width=&quot;150&quot; alt=&quot;OpenUI&quot; /&gt;
&lt;/p&gt;

Building UI components can be a slog.  OpenUI aims to make the process fun, fast, and flexible.  It&#039;s also a tool we&#039;re using at [W&amp;B](https://wandb.com) to test and prototype our next generation tooling for building powerful applications on top of LLM&#039;s.

## Overview

![Demo](./assets/demo.gif)

OpenUI let&#039;s you describe UI using your imagination, then see it rendered live.  You can ask for changes and convert HTML to React, Svelte, Web Components, etc.  It&#039;s like [v0](https://v0.dev) but open source and not as polished :stuck_out_tongue_closed_eyes:.

## Live Demo

[Try the demo](https://openui.fly.dev)

## Running Locally

OpenUI supports [OpenAI](https://platform.openai.com/api-keys), [Groq](https://console.groq.com/keys), and any model [LiteLLM](https://docs.litellm.ai/docs/) supports such as [Gemini](https://aistudio.google.com/app/apikey) or [Anthropic (Claude)](https://console.anthropic.com/settings/keys).  The following environment variables are optional, but need to be set in your environment for alternative models to work:

- **OpenAI** `OPENAI_API_KEY`
- **Groq** `GROQ_API_KEY`
- **Gemini** `GEMINI_API_KEY`
- **Anthropic** `ANTHROPIC_API_KEY`
- **Cohere** `COHERE_API_KEY`
- **Mistral** `MISTRAL_API_KEY`
- **OpenAI Compatible** `OPENAI_COMPATIBLE_ENDPOINT` and `OPENAI_COMPATIBLE_API_KEY`

For example, if you&#039;re running a tool like [localai](https://localai.io/) you can set `OPENAI_COMPATIBLE_ENDPOINT` and optionally `OPENAI_COMPATIBLE_API_KEY` to have the models available listed in the UI&#039;s model selector under LiteLLM.

### Ollama

You can also use models available to [Ollama](https://ollama.com).  [Install Ollama](https://ollama.com/download) and pull a model like [Llava](https://ollama.com/library/llava).  If Ollama is not running on http://127.0.0.1:11434, you can set the `OLLAMA_HOST` environment variable to the host and port of your Ollama instance.  For example when running in docker you&#039;ll need to point to http://host.docker.internal:11434 as shown below.

### Docker (preferred)

The following command would forward the specified API keys from your shell environment and tell Docker to use the Ollama instance running on your machine.

```bash
export ANTHROPIC_API_KEY=xxx
export OPENAI_API_KEY=xxx
docker run --rm --name openui -p 7878:7878 -e OPENAI_API_KEY -e ANTHROPIC_API_KEY -e OLLAMA_HOST=http://host.docker.internal:11434 ghcr.io/wandb/openui
```

Now you can goto [http://localhost:7878](http://localhost:7878) and generate new UI&#039;s!

### From Source / Python

Assuming you have git and [uv](https://github.com/astral-sh/uv) installed:

```bash
git clone https://github.com/wandb/openui
cd openui/backend
uv sync --frozen --extra litellm
source .venv/bin/activate
# Set API keys for any LLM&#039;s you want to use
export OPENAI_API_KEY=xxx
python -m openui
```

## LiteLLM

[LiteLLM](https://docs.litellm.ai/docs/) can be used to connect to basically any LLM service available.  We generate a config automatically based on your environment variables.  You can create your own [proxy config](https://litellm.vercel.app/docs/proxy/configs) to override this behavior.  We look for a custom config in the following locations:

1. `litellm-config.yaml` in the current directory
2. `/app/litellm-config.yaml` when running in a docker container
3. An arbitrary path specified by the `OPENUI_LITELLM_CONFIG` environment variable

For example to use a custom config in docker you can run:

```bash
docker run -n openui -p 7878:7878 -v $(pwd)/litellm-config.yaml:/app/litellm-config.yaml ghcr.io/wandb/openui
```

To use litellm from source you can run:

```bash
pip install .[litellm]
export ANTHROPIC_API_KEY=xxx
export OPENAI_COMPATIBLE_ENDPOINT=http://localhost:8080/v1
python -m openui --litellm
```

## Groq

To use the super fast [Groq](https://groq.com) models, set `GROQ_API_KEY` to your Groq api key which you can [find here](https://console.groq.com/keys).  To use one of the Groq models, click the settings icon in the nav bar.

### Docker Compose

&gt; **DISCLAIMER:** This is likely going to be very slow.  If you have a GPU you may need to change the tag of the `ollama` container to one that supports it.  If you&#039;re running on a Mac, follow the instructions above and run Ollama natively to take advantage of the M1/M2.

From the root directory you can run:

```bash
docker-compose up -d
docker exec -it openui-ollama-1 ollama pull llava
```

If you have your OPENAI_API_KEY set in the environment already, just remove `=xxx` from the `OPENAI_API_KEY` line. You can also replace `llava` in the command above with your open source model of choice *([llava](https://ollama.com/library/llava) is one of the only Ollama models that support images currently)*.  You should now be able to access OpenUI at [http://localhost:7878](http://localhost:7878).

*If you make changes to the frontend or backend, you&#039;ll need to run `docker-compose build` to have them reflected in the service.*

## Development

A [dev container](https://github.com/wandb/openui/blob/main/.devcontainer/devcontainer.json) is configured in this repository which is the quickest way to get started.

### Codespace

&lt;img src=&quot;./assets/codespace.png&quot; alt=&quot;New with options...&quot; width=&quot;500&quot; /&gt;

Choose more options when creating a Codespace, then select **New with options...**.  Select the US West region if you want a really fast boot time.  You&#039;ll also want to configure your OPENAI_API_KEY secret or just set it to `xxx` if you want to try Ollama *(you&#039;ll want at least 16GB of Ram)*.

Once inside the code space you can run the server in one terminal: `python -m openui --dev`.  Then in a new terminal:

```bash
cd /workspaces/openui/frontend
npm run dev
```

This should open another service on port 5173, that&#039;s the service you&#039;ll want to visit.  All changes to both the frontend and backend will automatically be reloaded and reflected in your browser.

### Ollama

The codespace installs ollama automaticaly and downloads the `llava` model.  You can verify Ollama is running with `ollama list` if that fails, open a new terminal and run `ollama serve`.  In Codespaces we pull llava on boot so you should see it in the list.  You can select Ollama models from the settings gear icon in the upper left corner of the application.  Any models you pull i.e. `ollama pull llama` will show up in the settings modal.

&lt;img src=&quot;./assets/ollama.png&quot; width=&quot;500&quot; alt=&quot;Select Ollama models&quot; /&gt;

### Gitpod

You can easily use Open UI via Gitpod, preconfigured with Open AI.

[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/#https://github.com/wandb/openui)

On launch Open UI is automatically installed and launched.

Before you can use Gitpod:

* Make sure you have a Gitpod account.
* To use Open AI models set up the `OPENAI_API_KEY` environment variable in your Gitpod [User Account](https://gitpod.io/user/variables). Set the scope to `wandb/openui` (or your repo if you forked it).

&gt; NOTE: Other (local) models might also be used with a bigger Gitpod instance type. Required models are not preconfigured in Gitpod but can easily be added as documented above.

### Resources

See the readmes in the [frontend](./frontend/README.md) and [backend](./backend/README.md) directories.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[fastrepl/hyprnote]]></title>
            <link>https://github.com/fastrepl/hyprnote</link>
            <guid>https://github.com/fastrepl/hyprnote</guid>
            <pubDate>Wed, 23 Apr 2025 00:05:07 GMT</pubDate>
            <description><![CDATA[AI notepad for meetings. Local-first & Extensible.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/fastrepl/hyprnote">fastrepl/hyprnote</a></h1>
            <p>AI notepad for meetings. Local-first & Extensible.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 522</p>
            <p>Forks: 35</p>
            <p>Stars today: 55 stars today</p>
            <h2>README</h2><pre>![README banner](https://github.com/user-attachments/assets/44ebe793-004e-4313-8e04-2491ab076bea)

&lt;p align=&quot;center&quot;&gt;
&lt;h1 align=&quot;center&quot;&gt;Hyprnote &lt;i&gt;(Public Beta)&lt;/i&gt;&lt;/h1&gt;
&lt;p align=&quot;center&quot;&gt;AI notepad for meetings. &lt;strong&gt;Local-first &amp; Extensible&lt;/strong&gt;.&lt;/p&gt;
 &lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://hyprnote.com/discord&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/static/v1?label=Join%20our&amp;message=Discord&amp;color=blue&amp;logo=Discord&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://x.com/tryhyprnote&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/static/v1?label=Follow%20us%20on&amp;message=X&amp;color=black&amp;logo=x&quot; alt=&quot;X&quot;&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;/p&gt;
   
## Introduction

**What does Hyprnote do?**

- Records and transcribes your meetings  
- Generates **powerful summaries** from your raw meeting notes

**What‚Äôs special about it?**

- &lt;ins&gt;Works **offline**&lt;/ins&gt; using **open-source models** (_Whisper_ &amp; _Llama_)  
- Highly [extensible](https://docs.hyprnote.com/extensions/), powered by [plugins](https://docs.hyprnote.com/plugins/)

## Installation

```bash
brew tap fastrepl/hyprnote &amp;&amp; brew install hyprnote --cask
```

- [Macos](https://hyprnote.com/download) (public beta)
- [Windows](https://github.com/fastrepl/hyprnote/issues/66) (soon)
- [Linux](https://github.com/fastrepl/hyprnote/issues/67) (maybe)

## Highlights

### Hypercharge your notes
Casually jot stuff down and Hyprnote will craft a meeting note based on your memos.

&lt;img src=&quot;https://github.com/user-attachments/assets/1615a9f0-7a30-44c1-b142-0d1774a84e89&quot; width=&quot;720&quot; /&gt;

### Offline &amp; Privacy
Hyprnote is local-first which means you can be off the grid and it&#039;s perfectly fine.

&lt;img src=&quot;https://github.com/user-attachments/assets/e5014024-3f6a-457a-8f1c-3b183883b782&quot; width=&quot;720&quot; /&gt;

### Extensions &amp; Plugins
Just like VSCode, You can add or create extensions based on your circumstances.

&lt;img src=&quot;https://github.com/user-attachments/assets/341d2e6c-a2c7-432b-95b8-fdc2018838d5&quot; width=&quot;720&quot; /&gt;

&lt;br /&gt;
&lt;br /&gt;

For example, [transcript extension](https://docs.hyprnote.com/extensions/transcript.html) is powered by [listener plugin](https://docs.hyprnote.com/plugins/listener.html).

```ts
useEffect(() =&gt; {
  const channel = new Channel&lt;SessionEvent&gt;();
  listenerCommands.subscribe(channel);

  channel.onmessage = (e) =&gt; {
    if (e.type === &quot;started&quot;) {
      setIsLive(true);
    }
    if (e.type === &quot;stopped&quot;) {
      setIsLive(false);
    }
  };

  return () =&gt; {
    listenerCommands.unsubscribe(channel);
  };
}, []);
```
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[johannesjo/super-productivity]]></title>
            <link>https://github.com/johannesjo/super-productivity</link>
            <guid>https://github.com/johannesjo/super-productivity</guid>
            <pubDate>Wed, 23 Apr 2025 00:05:06 GMT</pubDate>
            <description><![CDATA[Super Productivity is an advanced todo list app with integrated Timeboxing and time tracking capabilities. It also comes with integrations for Jira, GitLab, GitHub and Open Project.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/johannesjo/super-productivity">johannesjo/super-productivity</a></h1>
            <p>Super Productivity is an advanced todo list app with integrated Timeboxing and time tracking capabilities. It also comes with integrations for Jira, GitLab, GitHub and Open Project.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 13,468</p>
            <p>Forks: 1,069</p>
            <p>Stars today: 13 stars today</p>
            <h2>README</h2><pre>&lt;a href=&quot;https://super-productivity.com/&quot;&gt;
  &lt;img align=&quot;center&quot; alt=&quot;Banner&quot; src=&quot;screens/banner.png&quot; /&gt;
&lt;/a&gt;

&lt;br&gt;
&lt;br&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;strong&gt;An advanced todo list app with timeboxing &amp; time tracking capabilities that supports importing tasks from your calendar, Jira, GitHub and others&lt;/strong&gt;
&lt;p&gt;
  
&lt;p align=&quot;center&quot;&gt;:globe_with_meridians: &lt;a href=&quot;https://app.super-productivity.com&quot;&gt;Open Web App&lt;/a&gt; or :computer: &lt;a href=&quot;https://github.com/johannesjo/super-productivity/releases&quot;&gt;Download&lt;/a&gt;&lt;/p&gt;

&lt;br&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;a href=&quot;https://youtu.be/_mvMXWLsL-8&quot;&gt;
    &lt;img src=&quot;https://github.com/user-attachments/assets/15384cae-8ba3-4474-bc2c-13e7765c2dd1&quot; alt=&quot;animated&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;
&lt;br&gt;

&lt;p align=&quot;center&quot;&gt;
      &lt;img src=&quot;https://repobeats.axiom.co/api/embed/61f9b9de1bc34a2b526faf6d356120bdae7f4249.svg&quot; alt=&quot;analytics&quot; /&gt;
&lt;/p&gt;

&lt;br&gt;
&lt;br&gt;

[![Stand With Ukraine](https://raw.githubusercontent.com/vshymanskyy/StandWithUkraine/main/banner2-direct.svg)](https://vshymanskyy.github.io/StandWithUkraine)



&lt;p align=&quot;center&quot; style=&quot;text-align: center;&quot;&gt;
&lt;a href=&quot;https://lbesson.mit-license.org&quot;&gt;
  &lt;img alt=&quot;MIT license&quot;
       src=&quot;https://img.shields.io/badge/License-MIT-blue.svg?style=flat-square&quot;
       align=&quot;center&quot;&gt;
&lt;/a&gt;
&lt;a href=&quot;https://github.com/johannesjo/super-productivity/releases&quot;&gt;
  &lt;img alt=&quot;GitHub All Releases&quot;
       src=&quot;https://img.shields.io/github/downloads/johannesjo/super-productivity/total&quot;
       align=&quot;center&quot;&gt;
&lt;/a&gt;
&lt;a href=&quot;https://community.chocolatey.org/packages/super-productivity&quot;&gt;
  &lt;img alt=&quot;Chocolatey package&quot;
       src=&quot;https://img.shields.io/chocolatey/dt/super-productivity?color=blue&amp;label=chocolatey&quot;
       align=&quot;center&quot;&gt;
&lt;/a&gt;
&lt;a href=&quot;https://www.producthunt.com/posts/super-productivity&quot;&gt;
  &lt;img alt=&quot;On product hunt&quot;
       src=&quot;https://img.shields.io/badge/on-product%20hunt-blue.svg?style=flat-square&quot;
       align=&quot;center&quot;&gt;
&lt;/a&gt;
&lt;a href=&quot;https://www.reddit.com/r/superProductivity/&quot;&gt;
  &lt;img alt=&quot;Reddit Community&quot;
       src=&quot;https://img.shields.io/badge/Reddit-%23FF4500.svg?style=for-the-badge&amp;logo=Reddit&amp;logoColor=white&quot;
       align=&quot;center&quot;&gt;
&lt;/a&gt;
&lt;a href=&quot;https://mastodon.social/@superproductivity&quot;&gt;
  &lt;img alt=&quot;Super Productivity on Mastodon&quot;
       src=&quot;https://img.shields.io/badge/-MASTODON-%232B90D9?style=for-the-badge&amp;logo=mastodon&amp;logoColor=white&quot;
       align=&quot;center&quot;&gt;
&lt;/a&gt;
&lt;a href=&quot;https://x.com/intent/post?text=Super%20Productivity%20%20https%3A%2F%2Fsuper-productivity.com&quot;&gt;
  &lt;img alt=&quot;Tweet&quot;
       src=&quot;https://img.shields.io/badge/TWEET-%23000000.svg?style=for-the-badge&amp;logo=X&quot;
       align=&quot;center&quot;&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot; style=&quot;text-align: center;&quot;&gt;
  
&lt;a href=&#039;https://flathub.org/apps/com.super_productivity.SuperProductivity&#039; target=&quot;_blank&quot;&gt;
  &lt;img alt=&#039;Get it on Flathub&#039;
       src=&#039;https://flathub.org/api/badge?locale=en&#039;
       align=&quot;center&quot;
       height=&quot;50&quot; /&gt;
  &lt;/a&gt;
  
&lt;a href=&quot;https://snapcraft.io/superproductivity&quot; target=&quot;_blank&quot;&gt;
  &lt;img alt=&quot;Get it from the Snap Store&quot;
       src=&quot;https://snapcraft.io/static/images/badges/en/snap-store-black.svg&quot;
       align=&quot;center&quot;
       height=&quot;50&quot;&gt;
&lt;/a&gt;
&lt;a href=&#039;//www.microsoft.com/store/apps/9NHFVG8361TW?cid=storebadge&amp;ocid=badge&#039; target=&quot;_blank&quot;&gt;
  &lt;img src=&#039;https://developer.microsoft.com/store/badges/images/English_get-it-from-MS.png&#039;
       align=&quot;center&quot;
       alt=&#039;English badge&#039;
       height=&quot;50&quot; /&gt;
&lt;/a&gt;
&lt;a href=&#039;//apps.apple.com/de/app/super-productivity/id1482572463?l=en&amp;mt=12&#039; target=&quot;_blank&quot;&gt;
  &lt;img src=&#039;./screens/app-store-badge.svg&#039;
       align=&quot;center&quot;
       alt=&#039;App Store Badge&#039;
       height=&quot;50&quot; /&gt;
&lt;/a&gt;
&lt;a href=&#039;//play.google.com/store/apps/details?id=com.superproductivity.superproductivity&#039; target=&quot;_blank&quot;&gt;
  &lt;img src=&#039;./screens/google-play-badge.png&#039;
       align=&quot;center&quot;
       alt=&#039;Play Store Badge&#039;
       height=&quot;50&quot; /&gt;
&lt;/a&gt;
&lt;a href=&#039;//f-droid.org/en/packages/com.superproductivity.superproductivity&#039; target=&quot;_blank&quot;&gt;
  &lt;img src=&#039;https://f-droid.org/assets/fdroid-logo-text_S0MUfk_FsnAYL7n2MQye-34IoSNm6QM6xYjDnMqkufo=.svg&#039;
       align=&quot;center&quot;
       alt=&#039;F-Droid Badge&#039;
       height=&quot;50&quot; /&gt;
&lt;/a&gt;
&lt;a href=&#039;http://apps.obtainium.imranr.dev/redirect.html?r=obtainium://add/https://github.com/johannesjo/super-productivity/releases&#039;&gt;
  &lt;img src=&#039;https://raw.githubusercontent.com/ImranR98/Obtainium/main/assets/graphics/badge_obtainium.png&#039;
       align=&quot;center&quot;
       alt=&#039;Obtanium Badge&#039;
       height=&quot;50&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;br&gt;

## :heavy_check_mark: Features

- **Keep organized and focused!** Plan and categorize your tasks using sub-tasks, projects and tags and color code them as needed.
- Use **timeboxing** and **track your time**. Create time sheets and work summaries in a breeze to easily export them to your company&#039;s time tracking system.
- Helps you to **establish healthy &amp; productive habits**:
  - A **break reminder** reminds you when it&#039;s time to step away.
  - The **anti-procrastination feature** helps you gain perspective when you really need to.
  - Need some extra focus? A **Pomodoro timer** is also always at hand.
  - **Collect personal metrics** to see, which of your work routines need adjustments.
- Integrate with **Jira**, **GitHub**, **GitLab**, **Gitea** and **OpenProject**. Auto import tasks assigned to you, plan the details locally, automatically create work logs, and get notified immediately, when something changes.
- Basic [**CalDAV**](https://github.com/johannesjo/super-productivity/blob/master/docs/caldav.md) integration.
- Back up and synchronize your data across multiple devices with **Dropbox** and **WebDAV** support
- Attach context information to tasks and projects. Create **notes**, attach **files** or create **project-level bookmarks** for links, files, and even commands.
- Super Productivity **respects your privacy** and **does NOT collect any data** and there are no user accounts or registration. **You decide where you store your data!**
- It&#039;s **free** and **open source** and always will be.

And much more!

&lt;a href=&quot;https://youtu.be/_mvMXWLsL-8&quot;&gt;&lt;img alt=&quot;Work View with global links&quot; src=&quot;screens/screen_standard.png&quot; width=&quot;100%&quot;&gt;&lt;/a&gt;

## :question: How to use it

If you need some help, [this article on dev.to is the best place to start](https://dev.to/johannesjo/getting-started-with-super-productivity-2791).

If you prefer, there is also a (long) [YouTube video available](https://www.youtube.com/watch?v=VoF2_RSdNXA).

There is another older ‚Äì the app looks and feels much better now ;) ‚Äì [article](https://dev.to/johannesjo/super-productivity-how-to-grow-fond-of-time-tracking-and-task-management-22ee) on how I personally might use the app - and still [another one](https://dev.to/johannesjo/the-prioritising-scheme-how-to-eat-the-frog-with-super-productivity-mlk) on how I implement the &#039;eat the frog&#039; prioritizing scheme in the app.

[If you have further questions, please refer to the discussions page](https://github.com/johannesjo/super-productivity/discussions).

&lt;details&gt;
&lt;summary&gt; &lt;b&gt;‚å® Keyboard shortcuts and short-syntax&lt;/b&gt;&lt;/summary&gt;

### Keyboard shortcuts (most important)

- `Shift`+`A`: Open add task bar
- `Enter`: Edit currently focussed task title
- `Arrow keys`: Navigate around task list
- `D`: Mark currently focused task as done
- `A`: Add subtask to currently focused task
- `Y`: Toggle tracking time to currently focused task
- `S`: Open schedule dialog for currently focused task
- `Backspace`: Delete currently focused task
- `ArrowRight`: Open additional info panel for currently focused task
- `Ctrl`+`Shift`+`ArrowUp`: Move currently focused task up in list
- `Ctrl`+`Shift`+`ArrowDown`: Move currently focused task down in list

### Short-Syntax

Can be used when adding a task. &lt;strong&gt;(Each of these can be disabled in settings-&gt;short syntax)&lt;/strong&gt;

- `# &lt;tag-name&gt;`: add a tag to the task  
  (`&quot;task-description #tag1&quot;`)
- `&lt;number&gt;m` or `&lt;number&gt;h`: set time-estimate for the task  
  (`&quot;task-description 10m&quot;` or `&quot;task-description 5h&quot;`)
- `@&lt;time&gt;`: add due time to the task
  (`&quot;task-description @fri 10pm&quot;`)
- `+ &lt;project-name&gt;`: add the task to an existing project  
  (`&quot;task-description +Important Project&quot;`)
- `Ctr + 2`: toggle between moving the new task to the bottom and top of the list

&lt;/details&gt;

## :globe_with_meridians: Web Version

Check out the web version even though it is a bit limited: Time tracking only works if the app is open and for idle time tracking to work, the chrome extension must be installed.

If you want the Jira integration and idle time tracking to work, you also have to download and install the [Super Productivity Chrome Extension](https://chrome.google.com/webstore/detail/super-productivity/ljkbjodfmekklcoibdnhahlaalhihmlb).

## :computer: Downloads &amp; Install

### All Platforms

[Install from the releases page](https://github.com/johannesjo/super-productivity/releases).

### Windows

Due to certification issues it&#039;s recommended to download the app from the Microsoft Store:

&lt;a href=&#039;//www.microsoft.com/store/apps/9nhfvg8361tw?cid=storebadge&amp;ocid=badge&#039;&gt;&lt;img src=&#039;https://developer.microsoft.com/store/badges/images/English_get-it-from-MS.png&#039; alt=&#039;English badge&#039; width=&quot;127&quot; height=&quot;52&quot;/&gt;&lt;/a&gt;

You can also install the app using [Chocolatey](https://community.chocolatey.org/packages/super-productivity):

```powershell
choco install super-productivity
```

### Linux

#### Snap - Most distributions

Install via command-line:

```bash
# stable
sudo snap install superproductivity

# edge channel releases
sudo snap install --channel=edge superproductivity

# it is also recommended to disable updates to the app while it is running:
sudo snap set core experimental.refresh-app-awareness=true
```

&lt;a href=&quot;https://snapcraft.io/superproductivity&quot;&gt;
  &lt;img alt=&quot;Get it from the Snap Store&quot; src=&quot;https://snapcraft.io/static/images/badges/en/snap-store-black.svg&quot; /&gt;
&lt;/a&gt;

#### Flatpak - Most distributions

Must install Flatpak first. See [setup instructions for all distributions](https://flathub.org/setup).

Install via command-line:

```bash
# install
flatpak install flathub com.super_productivity.SuperProductivity

# run
flatpak run com.super_productivity.SuperProductivity
```

&lt;a href=&#039;https://flathub.org/apps/com.super_productivity.SuperProductivity&#039;&gt;
    &lt;img width=&#039;175&#039; alt=&#039;Get it on Flathub&#039; src=&#039;https://flathub.org/api/badge?locale=en&#039;/&gt;
  &lt;/a&gt;

#### Aur - Arch Linux

```bash
git clone https://aur.archlinux.org/superproductivity-bin.git
cd superproductivity-bin
makepkg -si
```

#### AppImage

If you encounter problems, please have a look here:
https://github.com/johannesjo/super-productivity/issues/3193#issuecomment-2131315513

### MacOS

Install via [homebrew cask](https://github.com/caskroom/homebrew-cask):

```bash
brew install --cask superproductivity
```

&lt;a href=&#039;//apps.apple.com/de/app/super-productivity/id1482572463?l=en&amp;mt=12&#039; target=&quot;_blank&quot;&gt;
  &lt;img src=&#039;./screens/app-store-badge.svg&#039;
       alt=&#039;App Store Badge&#039;
       height=&quot;50&quot; /&gt;
&lt;/a&gt;

### Android

A new version of the Android app is now available with **Connectivity-Free Mode**, allowing you to use the app without an internet connection.

This update offers more flexibility, supporting both fully offline usage and integration with services like WebDAV and Dropbox for syncing. Enjoy a smoother, more reliable experience whether you&#039;re online or offline.

Stay tuned for even more exciting updates!

You can find the Android app here:

&lt;a href=&#039;//play.google.com/store/apps/details?id=com.superproductivity.superproductivity&#039; target=&quot;_blank&quot;&gt;
  &lt;img src=&#039;./screens/google-play-badge.png&#039;
       align=&quot;center&quot;
       alt=&#039;App Store Badge&#039;
       height=&quot;50&quot; /&gt;
&lt;/a&gt;
&lt;a href=&#039;//f-droid.org/en/packages/com.superproductivity.superproductivity&#039; target=&quot;_blank&quot;&gt;
  &lt;img src=&#039;https://f-droid.org/assets/fdroid-logo-text_S0MUfk_FsnAYL7n2MQye-34IoSNm6QM6xYjDnMqkufo=.svg&#039;
       align=&quot;center&quot;
       alt=&#039;F-Droid Badge&#039;
       height=&quot;50&quot; /&gt;
&lt;/a&gt;

The sources can be [found here](/android).

## :hearts: Contributing

Please check out the [CONTRIBUTING.md](CONTRIBUTING.md)

There are several ways to help.

1. **Spread the word:** More users mean more people testing and contributing to the app which in turn means better stability and possibly more and better features. You can vote for Super Productivity on [Slant](https://www.slant.co/topics/14021/viewpoints/7/~productivity-tools-for-linux~super-productivity), [Product Hunt](https://www.producthunt.com/posts/super-productivity), [Softpedia](https://www.softpedia.com/get/Office-tools/Diary-Organizers-Calendar/Super-Productivity.shtml) or on [AlternativeTo](https://alternativeto.net/software/super-productivity/), you can [tweet about it](https://twitter.com/intent/tweet?text=I%20like%20Super%20Productivity%20%20https%3A%2F%2Fsuper-productivity.com), share it on [LinkedIn](http://www.linkedin.com/shareArticle?mini=true&amp;url=https://super-productivity.com&amp;title=I%20like%20Super%20Productivity&amp;), [reddit](http://www.reddit.com/submit?url=https%3A%2F%2Fsuper-productivity.com&amp;title=I%20like%20Super%20Productivity) or any of your favorite social media platforms. Every little bit helps!

2. **Provide a Pull Request:** Here is a list of [the most popular community requests](https://github.com/johannesjo/super-productivity/issues?q=is%3Aissue+is%3Aopen+sort%3Areactions-%2B1-desc) and here some info on [how to run the development build](https://github.com/johannesjo/super-productivity#running-the-development-server).
   Please make sure that you&#039;re following the [angular commit guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits) and to also include the issue number in your commit message, if you&#039;re fixing a particular issue (e.g.: `feat: add nice feature with the number #31`).

3. **[Answer questions](https://github.com/johannesjo/super-productivity/discussions)**: You know the answer to another user&#039;s problem? Share your knowledge!

4. **[Provide your opinion](https://github.com/johannesjo/super-productivity/issues?q=is%3Aissue+is%3Aopen+sort%3Areactions-%2B1-desc+label%3A%22community+feedback+wanted%22):** Some community suggestions are controversial. Your input might be helpful and if it is just an up- or down-vote.

5. **[Provide a more refined UI spec for existing feature requests](https://github.com/johannesjo/super-productivity/issues?q=is%3Aissue+is%3Aopen+label%3A%22needs+concept+and%2For+ui+spec%22)**

6. **[Report bugs](https://github.com/johannesjo/super-productivity/issues/new)**

7. **[Make a feature or improvement request](https://github.com/johannesjo/super-productivity/issues/new)**: Something can be done better? Something essential missing? Let us know!

8. **[Translations](https://github.com/johannesjo/super-productivity/tree/master/src/assets/i18n), Icons, etc.**: You don&#039;t have to be a programmer to help. Some of the icons really need improvement and many of the translations could use some love.

[//]: # &#039;[![inlang status badge](https://badge.inlang.com/?url=github.com/johannesjo/super-productivity)](https://fink.inlang.com/github.com/johannesjo/super-productivity?ref=badge)&#039;
[//]: #
[//]: # &#039;You can use the Fink Localization Editor to edit, lint, and add translations for different languages. [Contribute via fink Guide](https://inlang.com/g/6ddyhpoi).&#039;

9. **[Sponsor the project](https://github.com/sponsors/johannesjo)**

### Running the development server

To run the development server you need to have Node installed at least in the version 14. Go to https://nodejs.org for installation instructions.

**Clone repo**

```bash
git clone https://github.com/johannesjo/super-productivity.git
```

**Install dependencies**

```bash
cd super-productivity
npm i -g @angular/cli
npm i
```

**Run the dev server**

```bash
ng serve
```

Afterwards you can open http://localhost:4200 in your browser. For most adjustments this should be enough and also enables you to use the [redux dev tools](https://chrome.google.com/webstore/detail/redux-devtools/lmhkpmbekcpmknklioeibfkpmmfibljd?hl=de).

If you want to run the app standalone do the following:

```bash
ng serve

# in a new console tab
npm start
```

### Packaging the app

Packaging the app is done via [electron-builder](https://github.com/electron-userland/electron-builder). To start packaging run `npm run dist`. If you want to add new platforms and experiment with the build options the easiest way to do so is manipulating the `build` property in the [package.json](https://github.com/johannesjo/super-productivity/blob/develop/package.json), but you can also use the [command line interface of electron builder](https://www.electron.build/cli).

### Building for Android

_This feature was added on October 7, 2024. See [Pull Request #57](https://github.com/johannesjo/super-productivity-android/pull/57)._

To build the Android version of Super Productivity, please refer to the [Android Build Documentation](./android/README.md), which includes instructions on configuring **Connectivity-Free Mode** and **Online-Only Mode (Compatibility Mode)**.

Ensure you follow the setup steps properly to configure the environment for building the app.

## Run as Docker Container

```bash
docker run -d -p 80:80 johannesjo/super-productivity:latest
```

&gt; [!NOTE]
&gt; The command will automatically pull the container that matches the host&#039;s platform. Use `--platform` to specify a different one.
&gt;
&gt; Currently supported architectures: `linux/amd64`, `linux/arm64`, `linux/arm/v7`.

Now you can access the web app from your browser at `http://localhost`.

This container only serves the web app, and the user data is stored in the browser. Therefore, it does not have any persistent storage.

### Integrate with WebDAV backend server

You can integrate the container with a WebDAV server container to provide WebDAV service with base url `http://localhost/webdav`.

**Download pre-configured files**

Download the pre-configured `docker-compose.yaml` and `webdav.yaml` from this repository to a local directory, say `sp/`.

```bash
# Alternatively, you can get them by cloning this repository
git clone https://github.com/johannesjo/super-productivity.git
mkdir -p sp
cp super-productivity/docker-compose.yaml sp/
cp super-productivity/webdav.yaml sp/
cd sp
```

**Setup user accounts**

Edit `webdav.yaml` to configure username and password. Remember to create and assign different directories to different users (within `/data`) to avoid mixing up user data.

**Start the services**

```bash
docker compose pull
docker compose up -d
```

Additionally to accessing the web app from your browser at `http://localhost`, you can set up WebDAV synchronization with base url `http://localhost/webdav/`.

## Custom themes (desktop only)

In addition to color coding your projects and tags and to the dark and light theme you can also load completely custom CSS to restyle everything. To load a custom theme you simply need to put them into a new file named `styles.css` directly in the [user data folder](#user-data-folder).

There is a great set of [themes available for download in this repository](https://github.com/johannesjo/super-productivity-themes/tree/main/dist) as well as some [info on how to create your own custom themes](https://github.com/johannesjo/super-productivity-themes).

## Custom WebDAV Syncing

If using the integrated WebDAV Syncing is not working out for you, you can also try to sync all app files, which are located in the [user data folder](#user-data-folder).

## Automatic Backups

For the desktop version automatic backups are stored by default in the `backup` subfolder of the [user data folder](#user-data-folder). Once you locate a backup, you can restore it on the settings page under `Sync &amp; Export/Import/Export/Import from file`.

## User Data Folder

Where user data is stored differs from OS to OS. The most common locations are:

| OS          | Location                                                                                        |
| ----------- | -----------------------------

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[zaidmukaddam/scira]]></title>
            <link>https://github.com/zaidmukaddam/scira</link>
            <guid>https://github.com/zaidmukaddam/scira</guid>
            <pubDate>Wed, 23 Apr 2025 00:05:05 GMT</pubDate>
            <description><![CDATA[Scira (Formerly MiniPerplx) is a minimalistic AI-powered search engine that helps you find information on the internet. Powered by Vercel AI SDK! Search with models like Grok 2.0.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/zaidmukaddam/scira">zaidmukaddam/scira</a></h1>
            <p>Scira (Formerly MiniPerplx) is a minimalistic AI-powered search engine that helps you find information on the internet. Powered by Vercel AI SDK! Search with models like Grok 2.0.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 7,748</p>
            <p>Forks: 916</p>
            <p>Stars today: 25 stars today</p>
            <h2>README</h2><pre># Scira

![Scira](/app/opengraph-image.png)

A minimalistic AI-powered search engine that helps you find information on the internet.

## Powered By

&lt;div align=&quot;center&quot;&gt;
  &lt;div style=&quot;display: flex; justify-content: center; align-items: center; gap: 80px; margin: 20px 0;&quot;&gt;
    &lt;a href=&quot;https://sdk.vercel.ai/docs&quot;&gt;
      &lt;img src=&quot;/public/one.svg&quot; alt=&quot;Vercel AI SDK&quot; height=&quot;40&quot; /&gt;
    &lt;/a&gt;
    &lt;a href=&quot;https://tavily.com&quot;&gt;
      &lt;img src=&quot;/public/four.svg&quot; alt=&quot;Tavily AI&quot; height=&quot;40&quot; /&gt;
    &lt;/a&gt;
  &lt;/div&gt;
&lt;/div&gt;

- [Vercel AI SDK](https://sdk.vercel.ai/docs) - For AI model integration and streaming
- [Tavily AI](https://tavily.com) - For search grounding and web search capabilities

## Special Thanks

&lt;div align=&quot;center&quot; markdown=&quot;1&quot;&gt;

  [![Warp](https://github.com/user-attachments/assets/2bda420d-4211-4900-a37e-e3c7056d799c)](https://www.warp.dev/?utm_source=github&amp;utm_medium=referral&amp;utm_campaign=scira)&lt;br&gt;
  ### **[Warp, the intelligent terminal](https://www.warp.dev/?utm_source=github&amp;utm_medium=referral&amp;utm_campaign=scira)**&lt;br&gt;
  [Available for MacOS, Linux, &amp; Windows](https://www.warp.dev/?utm_source=github&amp;utm_medium=referral&amp;utm_campaign=scira)&lt;br&gt;
  [Visit warp.dev to learn more](https://www.warp.dev/?utm_source=github&amp;utm_medium=referral&amp;utm_campaign=scira)

  [![NinjaTools](https://bakrqvdfyriopfzffskk.supabase.co/storage/v1/object/sign/ads/Ninja%20Tools%20AD.png?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1cmwiOiJhZHMvTmluamEgVG9vbHMgQUQucG5nIiwiaWF0IjoxNzQyNzExMTMwLCJleHAiOjEwMzgyNzExMTMwfQ.eTY4DXSEXe61I7-Jk0nK8rimSLAETqfp5mEO5MpsH00)](https://ninjatools.ai/?ref=scria)&lt;br&gt;
  ### **[NinjaTools, the All in one AI assistant and workspace](https://ninjatools.ai/?ref=scria)**&lt;br&gt;
  [Visit Ninjatools.ai to learn more](https://ninjatools.ai/?ref=scria)
  
&lt;/div&gt;

## Features

- **AI-powered search**: Get answers to your questions using Anthropic&#039;s Models.
- **Web search**: Search the web using Tavily&#039;s API.
- **URL Specific search**: Get information from a specific URL.
- **Weather**: Get the current weather for any location using OpenWeather&#039;s API.
- **Programming**: Run code snippets in multiple languages using E2B&#039;s API.
- **Maps**: Get the location of any place using Google Maps API, Mapbox API, and TripAdvisor API.
- **YouTube Search**: Search for videos on YouTube and get timestamps and transcripts [powered by Exa.AI - the Web Search API](https://exa.ai/).
- **Academic Search**: Search for academic papers [powered by Exa.AI - the Web Search API](https://exa.ai/). 
- **X Posts Search**: Search for posts on X.com [powered by Exa.AI - the Web Search API](https://exa.ai/).
- **Flight Tracker**: Track flights using AviationStack&#039;s API.
- **Trending Movies and TV Shows**: Get information about trending movies and TV shows.
- **Movie or TV Show Search**: Get information about any movie or TV show.

## LLM used
- [xAI&#039;s Grok](https://x.ai/grok)
- [Anthropic&#039;s Claude 3.5 Sonnet](https://www.anthropic.com/news/claude-3-5-sonnet)
- [Meta&#039;s Llama 3.3 70B by Cerebras](https://inference-docs.cerebras.ai/introduction)
- [Deepseek R1 Distill by Groq Inc](https://console.groq.com/docs/model/deepseek-r1-distill-llama-70b)

## Built with
- [Next.js](https://nextjs.org/)
- [Tailwind CSS](https://tailwindcss.com/)
- [Vercel AI SDK](https://sdk.vercel.ai/docs)
- [Shadcn/UI](https://ui.shadcn.com/)
- [Exa.AI](https://exa.ai/)
- [Tavily](https://tavily.com/)
- [OpenWeather](https://openweathermap.org/)
- [E2B](https://e2b.dev/)
- [Google Maps](https://developers.google.com/maps)
- [Mapbox](https://www.mapbox.com/)
- [TripAdvisor](https://www.tripadvisor.com/)
- [AviationStack](https://aviationstack.com/)

### Deploy your own

[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/clone?repository-url=https%3A%2F%2Fgithub.com%2Fzaidmukaddam%2Fscira&amp;env=XAI_API_KEY,OPENAI_API_KEY,GROQ_API_KEY,E2B_API_KEY,ELEVENLABS_API_KEY,TAVILY_API_KEY,EXA_API_KEY,TMDB_API_KEY,YT_ENDPOINT,FIRECRAWL_API_KEY,OPENWEATHER_API_KEY,SANDBOX_TEMPLATE_ID,GOOGLE_MAPS_API_KEY,MAPBOX_ACCESS_TOKEN,TRIPADVISOR_API_KEY,AVIATION_STACK_API_KEY,CRON_SECRET,BLOB_READ_WRITE_TOKEN,NEXT_PUBLIC_MAPBOX_TOKEN,NEXT_PUBLIC_POSTHOG_KEY,NEXT_PUBLIC_POSTHOG_HOST,NEXT_PUBLIC_GOOGLE_MAPS_API_KEY,MEM0_API_KEY,MEM0_ORG_ID,MEM0_PROJECT_ID,SMITHERY_API_KEY&amp;envDescription=API%20keys%20and%20configuration%20required%20for%20Scira%20to%20function%20(including%20SMITHERY_API_KEY))

## Set Scira as your default search engine

1. **Open the Chrome browser settings**:
   - Click on the three vertical dots in the upper right corner of the browser.
   - Select &quot;Settings&quot; from the dropdown menu.

2. **Go to the search engine settings**:
   - In the left sidebar, click on &quot;Search engine.&quot;
   - Then select &quot;Manage search engines and site search.&quot;

3. **Add a new search engine**:
   - Click on &quot;Add&quot; next to &quot;Site search.&quot;

4. **Set the search engine name**:
   - Enter `Scira` in the &quot;Search engine&quot; field.

5. **Set the search engine URL**:
   - Enter `https://scira.ai?q=%s` in the &quot;URL with %s in place of query&quot; field.

6. **Set the search engine shortcut**:
   - Enter `sh` in the &quot;Shortcut&quot; field.

7. **Set Default**:
   - Click on the three dots next to the search engine you just added.
   - Select &quot;Make default&quot; from the dropdown menu.

After completing these steps, you should be able to use Scira as your default search engine in Chrome.

### Local development

#### Run via Docker

The application can be run using Docker in two ways:

##### Using Docker Compose (Recommended)

1. Make sure you have Docker and Docker Compose installed on your system
2. Create a `.env` file based on `.env.example` with your API keys
3. Run the following command in the project root:
   ```bash
   docker compose up
   ```
4. The application will be available at `http://localhost:3000`

##### Using Docker Directly

1. Create a `.env` file based on `.env.example` with your API keys
2. Build the Docker image:
   ```bash
   docker build -t scira.app .
   ```
3. Run the container:
   ```bash
   docker run --env-file .env -p 3000:3000 scira.app
   ```

The application uses a multi-stage build process to minimize the final image size and implements security best practices. The production image runs on Node.js LTS with Alpine Linux for a minimal footprint.

#### Run with Node.js

To run the application locally without Docker:

1. Sign up for accounts with the required AI providers:
   - OpenAI (required)
   - Anthropic (required)
   - Tavily (required for web search feature)
2. Copy `.env.example` to `.env.local` and fill in your API keys
3. Install dependencies:
   ```bash
   pnpm install
   ```
4. Start the development server:
   ```bash
   pnpm dev
   ```
5. Open `http://localhost:3000` in your browser

# License

This project is licensed under the Apache 2.0 License - see the [LICENSE](LICENSE) file for details.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[better-auth/better-auth]]></title>
            <link>https://github.com/better-auth/better-auth</link>
            <guid>https://github.com/better-auth/better-auth</guid>
            <pubDate>Wed, 23 Apr 2025 00:05:04 GMT</pubDate>
            <description><![CDATA[The most comprehensive authentication framework for TypeScript]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/better-auth/better-auth">better-auth/better-auth</a></h1>
            <p>The most comprehensive authentication framework for TypeScript</p>
            <p>Language: TypeScript</p>
            <p>Stars: 11,831</p>
            <p>Forks: 790</p>
            <p>Stars today: 102 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;picture&gt;
    &lt;source srcset=&quot;./banner-dark.png&quot; media=&quot;(prefers-color-scheme: dark)&quot;&gt;
    &lt;source srcset=&quot;./banner.png&quot; media=&quot;(prefers-color-scheme: light)&quot;&gt;
    &lt;img src=&quot;./banner.png&quot; alt=&quot;Better Auth Logo&quot;&gt;
  &lt;/picture&gt;
  &lt;h2 align=&quot;center&quot;&gt;
    Better Auth
  &lt;/h2&gt;

  &lt;p align=&quot;center&quot;&gt;
    The most comprehensive authentication library for TypeScript
    &lt;br /&gt;
    &lt;a href=&quot;https://better-auth.com&quot;&gt;&lt;strong&gt;Learn more ¬ª&lt;/strong&gt;&lt;/a&gt;
    &lt;br /&gt;
    &lt;br /&gt;
    &lt;a href=&quot;https://discord.gg/better-auth&quot;&gt;Discord&lt;/a&gt;
    ¬∑
    &lt;a href=&quot;https://better-auth.com&quot;&gt;Website&lt;/a&gt;
    ¬∑
    &lt;a href=&quot;https://github.com/better-auth/better-auth/issues&quot;&gt;Issues&lt;/a&gt;
  &lt;/p&gt;

[![npm](https://img.shields.io/npm/dm/better-auth)](https://npm.chart.dev/better-auth?primary=neutral&amp;gray=neutral&amp;theme=dark)
[![npm version](https://img.shields.io/npm/v/better-auth.svg)](https://www.npmjs.com/package/better-auth)
[![GitHub stars](https://img.shields.io/github/stars/better-auth/better-auth)](https://github.com/better-auth/better-auth/stargazers)
&lt;/p&gt;

## About the Project

Better Auth is framework-agnostic authentication (and authorization) library for TypeScript. It provides a comprehensive set of features out of the box and includes a plugin ecosystem that simplifies adding advanced functionalities with minimal code in short amount of time. Whether you need 2FA, multi-tenant support, or other complex features. It lets you focus on building your actual application instead of reinventing the wheel. 

### Why Better Auth

Authentication in the TypeScript ecosystem is a half-solved problem. Other open-source libraries often requires a lot of additional code for anything beyond basic authentication. Rather than just pushing third-party services as the solution, I believe we can do better as a community‚Äîhence, Better Auth.

## Contribution

Better Auth is free and open source project licensed under the [MIT License](./LICENSE.md). You are free to do whatever you want with it.

You could help continuing its development by:

- [Contribute to the source code](./CONTRIBUTING.md)
- [Suggest new features and report issues](https://github.com/better-auth/better-auth/issues)

## Security
If you discover a security vulnerability within Better Auth, please send an e-mail to security@better-auth.com.

All reports will be promptly addressed, and you&#039;ll be credited accordingly.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
    </channel>
</rss>