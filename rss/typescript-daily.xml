<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for typescript - TypeScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for typescript.</description>
        <lastBuildDate>Sun, 18 May 2025 00:04:59 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[n8n-io/n8n]]></title>
            <link>https://github.com/n8n-io/n8n</link>
            <guid>https://github.com/n8n-io/n8n</guid>
            <pubDate>Sun, 18 May 2025 00:04:59 GMT</pubDate>
            <description><![CDATA[Fair-code workflow automation platform with native AI capabilities. Combine visual building with custom code, self-host or cloud, 400+ integrations.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/n8n-io/n8n">n8n-io/n8n</a></h1>
            <p>Fair-code workflow automation platform with native AI capabilities. Combine visual building with custom code, self-host or cloud, 400+ integrations.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 95,137</p>
            <p>Forks: 26,058</p>
            <p>Stars today: 577 stars today</p>
            <h2>README</h2><pre>![Banner image](https://user-images.githubusercontent.com/10284570/173569848-c624317f-42b1-45a6-ab09-f0ea3c247648.png)

# n8n - Secure Workflow Automation for Technical Teams

n8n is a workflow automation platform that gives technical teams the flexibility of code with the speed of no-code. With 400+ integrations, native AI capabilities, and a fair-code license, n8n lets you build powerful automations while maintaining full control over your data and deployments.

![n8n.io - Screenshot](https://raw.githubusercontent.com/n8n-io/n8n/master/assets/n8n-screenshot-readme.png)

## Key Capabilities

- **Code When You Need It**: Write JavaScript/Python, add npm packages, or use the visual interface
- **AI-Native Platform**: Build AI agent workflows based on LangChain with your own data and models
- **Full Control**: Self-host with our fair-code license or use our [cloud offering](https://app.n8n.cloud/login)
- **Enterprise-Ready**: Advanced permissions, SSO, and air-gapped deployments
- **Active Community**: 400+ integrations and 900+ ready-to-use [templates](https://n8n.io/workflows)

## Quick Start

Try n8n instantly with [npx](https://docs.n8n.io/hosting/installation/npm/) (requires [Node.js](https://nodejs.org/en/)):

```
npx n8n
```

Or deploy with [Docker](https://docs.n8n.io/hosting/installation/docker/):

```
docker volume create n8n_data
docker run -it --rm --name n8n -p 5678:5678 -v n8n_data:/home/node/.n8n docker.n8n.io/n8nio/n8n
```

Access the editor at http://localhost:5678

## Resources

- üìö [Documentation](https://docs.n8n.io)
- üîß [400+ Integrations](https://n8n.io/integrations)
- üí° [Example Workflows](https://n8n.io/workflows)
- ü§ñ [AI &amp; LangChain Guide](https://docs.n8n.io/langchain/)
- üë• [Community Forum](https://community.n8n.io)
- üìñ [Community Tutorials](https://community.n8n.io/c/tutorials/28)

## Support

Need help? Our community forum is the place to get support and connect with other users:
[community.n8n.io](https://community.n8n.io)

## License

n8n is [fair-code](https://faircode.io) distributed under the [Sustainable Use License](https://github.com/n8n-io/n8n/blob/master/LICENSE.md) and [n8n Enterprise License](https://github.com/n8n-io/n8n/blob/master/LICENSE_EE.md).

- **Source Available**: Always visible source code
- **Self-Hostable**: Deploy anywhere
- **Extensible**: Add your own nodes and functionality

[Enterprise licenses](mailto:license@n8n.io) available for additional features and support.

Additional information about the license model can be found in the [docs](https://docs.n8n.io/reference/license/).

## Contributing

Found a bug üêõ or have a feature idea ‚ú®? Check our [Contributing Guide](https://github.com/n8n-io/n8n/blob/master/CONTRIBUTING.md) to get started.

## Join the Team

Want to shape the future of automation? Check out our [job posts](https://n8n.io/careers) and join our team!

## What does n8n mean?

**Short answer:** It means &quot;nodemation&quot; and is pronounced as n-eight-n.

**Long answer:** &quot;I get that question quite often (more often than I expected) so I decided it is probably best to answer it here. While looking for a good name for the project with a free domain I realized very quickly that all the good ones I could think of were already taken. So, in the end, I chose nodemation. &#039;node-&#039; in the sense that it uses a Node-View and that it uses Node.js and &#039;-mation&#039; for &#039;automation&#039; which is what the project is supposed to help with. However, I did not like how long the name was and I could not imagine writing something that long every time in the CLI. That is when I then ended up on &#039;n8n&#039;.&quot; - **Jan Oberhauser, Founder and CEO, n8n.io**
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[th-ch/youtube-music]]></title>
            <link>https://github.com/th-ch/youtube-music</link>
            <guid>https://github.com/th-ch/youtube-music</guid>
            <pubDate>Sun, 18 May 2025 00:04:58 GMT</pubDate>
            <description><![CDATA[YouTube Music Desktop App bundled with custom plugins (and built-in ad blocker / downloader)]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/th-ch/youtube-music">th-ch/youtube-music</a></h1>
            <p>YouTube Music Desktop App bundled with custom plugins (and built-in ad blocker / downloader)</p>
            <p>Language: TypeScript</p>
            <p>Stars: 20,215</p>
            <p>Forks: 1,054</p>
            <p>Stars today: 189 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;

# YouTube Music

[![GitHub release](https://img.shields.io/github/release/th-ch/youtube-music.svg?style=for-the-badge&amp;logo=youtube-music)](https://github.com/th-ch/youtube-music/releases/)
[![GitHub license](https://img.shields.io/github/license/th-ch/youtube-music.svg?style=for-the-badge)](https://github.com/th-ch/youtube-music/blob/master/license)
[![eslint code style](https://img.shields.io/badge/code_style-eslint-5ed9c7.svg?style=for-the-badge)](https://github.com/th-ch/youtube-music/blob/master/eslint.config.mjs)
[![Build status](https://img.shields.io/github/actions/workflow/status/th-ch/youtube-music/build.yml?branch=master&amp;style=for-the-badge&amp;logo=youtube-music)](https://GitHub.com/th-ch/youtube-music/releases/)
[![GitHub All Releases](https://img.shields.io/github/downloads/th-ch/youtube-music/total?style=for-the-badge&amp;logo=youtube-music)](https://GitHub.com/th-ch/youtube-music/releases/)
[![AUR](https://img.shields.io/aur/version/youtube-music-bin?color=blueviolet&amp;style=for-the-badge&amp;logo=youtube-music)](https://aur.archlinux.org/packages/youtube-music-bin)
[![Known Vulnerabilities](https://snyk.io/test/github/th-ch/youtube-music/badge.svg)](https://snyk.io/test/github/th-ch/youtube-music)

&lt;/div&gt;

![Screenshot](web/screenshot.png &quot;Screenshot&quot;)


&lt;div align=&quot;center&quot;&gt;
	&lt;a href=&quot;https://github.com/th-ch/youtube-music/releases/latest&quot;&gt;
		&lt;img src=&quot;web/youtube-music.svg&quot; width=&quot;400&quot; height=&quot;100&quot; alt=&quot;YouTube Music SVG&quot;&gt;
	&lt;/a&gt;
&lt;/div&gt;

Read this in other languages: [üá∞üá∑](./docs/readme/README-ko.md), [üá´üá∑](./docs/readme/README-fr.md), [üáÆüá∏](./docs/readme/README-is.md), [üá®üá± üá™üá∏](./docs/readme/README-es.md), [üá∑üá∫](./docs/readme/README-ru.md), [üá∫üá¶](./docs/readme/README-uk.md), [üá≠üá∫](./docs/readme/README-hu.md), [üáßüá∑](./docs/readme/README-pt.md), [üáØüáµ](./docs/readme/README-ja.md)

**Electron wrapper around YouTube Music featuring:**

- Native look &amp; feel, aims at keeping the original interface
- Framework for custom plugins: change YouTube Music to your needs (style, content, features), enable/disable plugins in
  one click

## Demo Image

|                          Player Screen (album color theme &amp; ambient light)                                |
|:---------------------------------------------------------------------------------------------------------:|
|![Screenshot1](https://github.com/th-ch/youtube-music/assets/16558115/53efdf73-b8fa-4d7b-a235-b96b91ea77fc)|

## Content

- [Features](#features)
- [Available plugins](#available-plugins)
- [Translation](#translation)
- [Download](#download)
  - [Arch Linux](#arch-linux)
  - [MacOS](#macos)
  - [Windows](#windows)
    - [How to install without a network connection? (in Windows)](#how-to-install-without-a-network-connection-in-windows)
- [Themes](#themes)
- [Dev](#dev)
- [Build your own plugins](#build-your-own-plugins)
  - [Creating a plugin](#creating-a-plugin)
  - [Common use cases](#common-use-cases)
- [Build](#build)
- [Production Preview](#production-preview)
- [Tests](#tests)
- [License](#license)
- [FAQ](#faq)

## Features:

- **Auto confirm when paused** (Always Enabled): disable
  the [&quot;Continue Watching?&quot;](https://user-images.githubusercontent.com/61631665/129977894-01c60740-7ec6-4bf0-9a2c-25da24491b0e.png)
  popup that pause music after a certain time

 - And more ...

## Available plugins:

- **Ad Blocker**: Block all ads and tracking out of the box

- **Album Actions**: Adds Undislike, Dislike, Like, and Unlike buttons to apply this to all songs in a playlist or album

- **Album Color Theme**: Applies a dynamic theme and visual effects based on the album color palette

- **Ambient Mode**: Applies a lighting effect by casting gentle colors from the video, into your screen‚Äôs background

- **Audio Compressor**: Apply compression to audio (lowers the volume of the loudest parts of the signal and raises the
  volume of the softest parts)

- **Blur Navigation Bar**: makes navigation bar transparent and blurry

- **Bypass Age Restrictions**: bypass YouTube&#039;s age verification

- **Captions Selector**: Enable captions

- **Compact Sidebar**: Always set the sidebar in compact mode

- **Crossfade**: Crossfade between songs

- **Disable Autoplay**: Makes every song start in &quot;paused&quot; mode

- **[Discord](https://discord.com/) Rich Presence**: Show your friends what you listen to
  with [Rich Presence](https://user-images.githubusercontent.com/28219076/104362104-a7a0b980-5513-11eb-9744-bb89eabe0016.png)

- **Downloader**: downloads
  MP3 [directly from the interface](https://user-images.githubusercontent.com/61631665/129977677-83a7d067-c192-45e1-98ae-b5a4927393be.png) [(youtube-dl)](https://github.com/ytdl-org/youtube-dl)

- **Equalizer**: add filters to boost or cut specific range of frequencies (e.g. bass booster)

- **Exponential Volume**: Makes the volume
  slider [exponential](https://greasyfork.org/en/scripts/397686-youtube-music-fix-volume-ratio/) so it&#039;s easier to
  select lower volumes

- **In-App Menu**: [gives bars a fancy, dark look](https://user-images.githubusercontent.com/78568641/112215894-923dbf00-8c29-11eb-95c3-3ce15db27eca.png)

  &gt; (see [this post](https://github.com/th-ch/youtube-music/issues/410#issuecomment-952060709) if you have problem
  accessing the menu after enabling this plugin and hide-menu option)

- **Scrobbler**: Adds scrobbling support for [Last.fm](https://www.last.fm/) and [ListenBrainz](https://listenbrainz.org/)

- **Lumia Stream**: Adds [Lumia Stream](https://lumiastream.com/) support

- **Lyrics Genius**: Adds lyrics support for most songs

- **Music Together**: Share a playlist with others. When the host plays a song, everyone else will hear the same song

- **Navigation**: Next/Back navigation arrows directly integrated in the interface, like in your favorite browser

- **No Google Login**: Remove Google login buttons and links from the interface

- **Notifications**: Display a notification when a song starts
  playing ([interactive notifications](https://user-images.githubusercontent.com/78568641/114102651-63ce0e00-98d0-11eb-9dfe-c5a02bb54f9c.png)
  are available on windows)

- **Picture-in-picture**: allows to switch the app to picture-in-picture mode

- **Playback Speed**: Listen fast, listen
  slow! [Adds a slider that controls song speed](https://user-images.githubusercontent.com/61631665/129976003-e55db5ba-bf42-448c-a059-26a009775e68.png)

- **Precise Volume**: Control the volume precisely using mousewheel/hotkeys, with a custom hud and customizable volume
  steps

- **Shortcuts (&amp; MPRIS)**: Allows setting global hotkeys for playback (play/pause/next/previous) +
  disable [media osd](https://user-images.githubusercontent.com/84923831/128601225-afa38c1f-dea8-4209-9f72-0f84c1dd8b54.png)
  by overriding media keys + enable Ctrl/CMD + F to search + enable linux mpris support for
  mediakeys + [custom hotkeys](https://github.com/Araxeus/youtube-music/blob/1e591d6a3df98449bcda6e63baab249b28026148/providers/song-controls.js#L13-L50)
  for [advanced users](https://github.com/th-ch/youtube-music/issues/106#issuecomment-952156902)

- **Skip Disliked Song**: Skips disliked songs

- **Skip Silences**: Automatically skip silenced sections

- [**SponsorBlock**](https://github.com/ajayyy/SponsorBlock): Automatically Skips non-music parts like intro/outro or
  parts of music videos where the song isn&#039;t playing

- **Synced Lyrics**: Provides synced lyrics to songs, using providers like [LRClib](https://lrclib.net).

- **Taskbar Media Control**: Control playback from
  your [Windows taskbar](https://user-images.githubusercontent.com/78568641/111916130-24a35e80-8a82-11eb-80c8-5021c1aa27f4.png)

- **TouchBar**: Custom TouchBar layout for macOS

- **Tuna OBS**: Integration with [OBS](https://obsproject.com/)&#039;s
  plugin [Tuna](https://obsproject.com/forum/resources/tuna.843/)

- **Video Quality Changer**: Allows changing the video quality with
  a [button](https://user-images.githubusercontent.com/78568641/138574366-70324a5e-2d64-4f6a-acdd-dc2a2b9cecc5.png) on
  the video overlay

- **Video Toggle**: Adds
  a [button](https://user-images.githubusercontent.com/28893833/173663950-63e6610e-a532-49b7-9afa-54cb57ddfc15.png) to
  switch between Video/Song mode. can also optionally remove the whole video tab

- **Visualizer**: Different music visualizers


## Translation

You can help with translation on [Hosted Weblate](https://hosted.weblate.org/projects/youtube-music/).

&lt;a href=&quot;https://hosted.weblate.org/engage/youtube-music/&quot;&gt;
  &lt;img src=&quot;https://hosted.weblate.org/widget/youtube-music/i18n/multi-auto.svg&quot; alt=&quot;translation status&quot; /&gt;
  &lt;img src=&quot;https://hosted.weblate.org/widget/youtube-music/i18n/287x66-black.png&quot; alt=&quot;translation status 2&quot; /&gt;
&lt;/a&gt;

## Download

You can check out the [latest release](https://github.com/th-ch/youtube-music/releases/latest) to quickly find the
latest version.

### Arch Linux

Install the [`youtube-music-bin`](https://aur.archlinux.org/packages/youtube-music-bin) package from the AUR. For AUR installation instructions, take a look at
this [wiki page](https://wiki.archlinux.org/index.php/Arch_User_Repository#Installing_packages).

### macOS

You can install the app using Homebrew (see the [cask definition](https://github.com/th-ch/homebrew-youtube-music)):

```bash
brew install th-ch/youtube-music/youtube-music
```

If you install the app manually and get an error &quot;is damaged and can‚Äôt be opened.&quot; when launching the app, run the following in the Terminal:

```bash
/usr/bin/xattr -cr /Applications/YouTube\ Music.app
```

### Windows

You can use the [Scoop package manager](https://scoop.sh) to install the `youtube-music` package from
the [`extras` bucket](https://github.com/ScoopInstaller/Extras).

```bash
scoop bucket add extras
scoop install extras/youtube-music
```

Alternately you can use [Winget](https://learn.microsoft.com/en-us/windows/package-manager/winget/), Windows 11s
official CLI package manager to install the `th-ch.YouTubeMusic` package.

*Note: Microsoft Defender SmartScreen might block the installation since it is from an &quot;unknown publisher&quot;. This is also
true for the manual installation when trying to run the executable(.exe) after a manual download here on github (same
file).*

```bash
winget install th-ch.YouTubeMusic
```

#### How to install without a network connection? (in Windows)

- Download the `*.nsis.7z` file for _your device architecture_ in [release page](https://github.com/th-ch/youtube-music/releases/latest).
  - `x64` for 64-bit Windows
  - `ia32` for 32-bit Windows
  - `arm64` for ARM64 Windows
- Download installer in release page. (`*-Setup.exe`)
- Place them in the **same directory**.
- Run the installer.

## Themes

You can load CSS files to change the look of the application (Options &gt; Visual Tweaks &gt; Themes).

Some predefined themes are available in https://github.com/kerichdev/themes-for-ytmdesktop-player.

## Dev

```bash
git clone https://github.com/th-ch/youtube-music
cd youtube-music
pnpm install --frozen-lockfile
pnpm dev
```

## Build your own plugins

Using plugins, you can:

- manipulate the app - the `BrowserWindow` from electron is passed to the plugin handler
- change the front by manipulating the HTML/CSS

### Creating a plugin

Create a folder in `src/plugins/YOUR-PLUGIN-NAME`:

- `index.ts`: the main file of the plugin
```typescript
import style from &#039;./style.css?inline&#039;; // import style as inline

import { createPlugin } from &#039;@/utils&#039;;

export default createPlugin({
  name: &#039;Plugin Label&#039;,
  restartNeeded: true, // if value is true, ytmusic show restart dialog
  config: {
    enabled: false,
  }, // your custom config
  stylesheets: [style], // your custom style,
  menu: async ({ getConfig, setConfig }) =&gt; {
    // All *Config methods are wrapped Promise&lt;T&gt;
    const config = await getConfig();
    return [
      {
        label: &#039;menu&#039;,
        submenu: [1, 2, 3].map((value) =&gt; ({
          label: `value ${value}`,
          type: &#039;radio&#039;,
          checked: config.value === value,
          click() {
            setConfig({ value });
          },
        })),
      },
    ];
  },
  backend: {
    start({ window, ipc }) {
      window.maximize();

      // you can communicate with renderer plugin
      ipc.handle(&#039;some-event&#039;, () =&gt; {
        return &#039;hello&#039;;
      });
    },
    // it fired when config changed
    onConfigChange(newConfig) { /* ... */ },
    // it fired when plugin disabled
    stop(context) { /* ... */ },
  },
  renderer: {
    async start(context) {
      console.log(await context.ipc.invoke(&#039;some-event&#039;));
    },
    // Only renderer available hook
    onPlayerApiReady(api: YoutubePlayer, context: RendererContext) {
      // set plugin config easily
      context.setConfig({ myConfig: api.getVolume() });
    },
    onConfigChange(newConfig) { /* ... */ },
    stop(_context) { /* ... */ },
  },
  preload: {
    async start({ getConfig }) {
      const config = await getConfig();
    },
    onConfigChange(newConfig) {},
    stop(_context) {},
  },
});
```

### Common use cases

- injecting custom CSS: create a `style.css` file in the same folder then:

```typescript
// index.ts
import style from &#039;./style.css?inline&#039;; // import style as inline

import { createPlugin } from &#039;@/utils&#039;;

export default createPlugin({
  name: &#039;Plugin Label&#039;,
  restartNeeded: true, // if value is true, ytmusic will show a restart dialog
  config: {
    enabled: false,
  }, // your custom config
  stylesheets: [style], // your custom style
  renderer() {} // define renderer hook
});
```

- If you want to change the HTML:

```typescript
import { createPlugin } from &#039;@/utils&#039;;

export default createPlugin({
  name: &#039;Plugin Label&#039;,
  restartNeeded: true, // if value is true, ytmusic will show the restart dialog
  config: {
    enabled: false,
  }, // your custom config
  renderer() {
    // Remove the login button
    document.querySelector(&quot;.sign-in-link.ytmusic-nav-bar&quot;).remove();
  } // define renderer hook
});
```

- communicating between the front and back: can be done using the ipcMain module from electron. See `index.ts` file and
  example in `sponsorblock` plugin.

## Build

1. Clone the repo
2. Follow [this guide](https://pnpm.io/installation) to install `pnpm`
3. Run `pnpm install --frozen-lockfile` to install dependencies
4. Run `pnpm build:OS`

- `pnpm dist:win` - Windows
- `pnpm dist:linux` - Linux (amd64)
- `pnpm dist:linux:deb-arm64` - Linux (arm64 for Debian)
- `pnpm dist:linux:rpm-arm64` - Linux (arm64 for Fedora)
- `pnpm dist:mac` - macOS (amd64)
- `pnpm dist:mac:arm64` - macOS (arm64)

Builds the app for macOS, Linux, and Windows,
using [electron-builder](https://github.com/electron-userland/electron-builder).

## Production Preview

```bash
pnpm start
```

## Tests

```bash
pnpm test
```

Uses [Playwright](https://playwright.dev/) to test the app.

## License

MIT ¬© [th-ch](https://github.com/th-ch/youtube-music)

## FAQ

### Why apps menu isn&#039;t showing up?

If `Hide Menu` option is on - you can show the menu with the &lt;kbd&gt;alt&lt;/kbd&gt; key (or &lt;kbd&gt;\`&lt;/kbd&gt; [backtick] if using
the in-app-menu plugin)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[CopilotKit/CopilotKit]]></title>
            <link>https://github.com/CopilotKit/CopilotKit</link>
            <guid>https://github.com/CopilotKit/CopilotKit</guid>
            <pubDate>Sun, 18 May 2025 00:04:57 GMT</pubDate>
            <description><![CDATA[React UI + elegant infrastructure for AI Copilots, AI chatbots, and in-app AI agents. The Agentic last-mile ü™Å]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/CopilotKit/CopilotKit">CopilotKit/CopilotKit</a></h1>
            <p>React UI + elegant infrastructure for AI Copilots, AI chatbots, and in-app AI agents. The Agentic last-mile ü™Å</p>
            <p>Language: TypeScript</p>
            <p>Stars: 19,111</p>
            <p>Forks: 2,695</p>
            <p>Stars today: 62 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://copilotkit.ai&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;./assets/banner.png&quot; alt=&quot;CopilotKit Logo&quot;&gt;
  &lt;/a&gt;

  &lt;br/&gt;

  &lt;h3&gt;
    Build deeply-integrated AI assistants &amp; agents&lt;br/&gt;
    that work &lt;em&gt;alongside&lt;/em&gt; your users inside your applications.
  &lt;/h3&gt;
  
&lt;/div&gt;

&lt;!-- --&gt;

&lt;br/&gt;

&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.npmjs.com/package/@copilotkit/react-core&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/npm/v/%40copilotkit%2Freact-core?logo=npm&amp;logoColor=%23FFFFFF&amp;label=Version&amp;color=%236963ff&quot; alt=&quot;NPM&quot;&gt;
  &lt;/a&gt;
  &lt;img src=&quot;https://img.shields.io/github/license/copilotkit/copilotkit?color=%236963ff&amp;label=License&quot; alt=&quot;MIT&quot;&gt;
  &lt;a href=&quot;https://discord.gg/6dffbvGU3D&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/discord/1122926057641742418?logo=discord&amp;logoColor=%23FFFFFF&amp;label=Discord&amp;color=%236963ff&quot; alt=&quot;Discord&quot;&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;br/&gt;

&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://discord.gg/6dffbvGU3D?ref=github_readme&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;./assets/btn_discord.png&quot; alt=&quot;CopilotKit Discord&quot; height=&quot;40px&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://docs.copilotkit.ai?ref=github_readme&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;./assets/btn_docs.png&quot; alt=&quot;CopilotKit GitHub&quot; height=&quot;40px&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://cloud.copilotkit.ai?ref=github_readme&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;./assets/btn_cloud.png&quot; alt=&quot;CopilotKit GitHub&quot; height=&quot;40px&quot;&gt;
  &lt;/a&gt;
  
&lt;/div&gt;


&lt;h3 align=&quot;center&quot;&gt; 
Stay up to date with our latest releases!
&lt;/h3&gt;

&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://go.copilotkit.ai/gh-linkedin&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;https://github.com/user-attachments/assets/e33e7ebb-f5fc-4775-81b0-d5dd6865271a&quot; alt=&quot;LI&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://go.copilotkit.ai/gh-twitter&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;https://github.com/user-attachments/assets/14e57c97-70ac-4f9a-88f5-67028107794f&quot; alt=&quot;Discord&quot;&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;br/&gt;
&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.producthunt.com/posts/copilotkit&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;https://api.producthunt.com/widgets/embed-image/v1/top-post-badge.svg?post_id=428778&amp;theme=light&amp;period=daily&quot;&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;br /&gt;


&lt;img width=&quot;1685&quot; alt=&quot;214 (1)&quot; src=&quot;https://github.com/user-attachments/assets/145600ce-c49b-4e25-883e-feee149d6332&quot;&gt;

## üèÜ Featured Examples

### üìù [Form-Filling Copilot](https://github.com/CopilotKit/CopilotKit/tree/main/examples/copilot-form-filling)
Transform tedious form-filling into natural conversations. The AI assistant asks the right questions, understands context, and completes forms automatically‚Äîno more field-by-field drudgery.
&lt;div&gt;
  &lt;a href=&quot;https://github.com/CopilotKit/CopilotKit/tree/main/examples/copilot-form-filling&quot;&gt;&lt;code&gt;GitHub ‚Üí&lt;/code&gt;&lt;/a&gt;
  &lt;a href=&quot;https://form-filling-copilot.vercel.app&quot;&gt;&lt;code&gt;Live Demo ‚Üí&lt;/code&gt;&lt;/a&gt;
&lt;/div&gt;

### üîÑ [State Machine Copilot](https://github.com/CopilotKit/CopilotKit/tree/main/examples/copilot-state-machine)
Transform complex conversational flows into manageable state machines. This AI-powered car sales application demonstrates how to build sophisticated multi-stage interactions with contextual awareness and state transitions.
&lt;div&gt;
  &lt;a href=&quot;https://github.com/CopilotKit/CopilotKit/tree/main/examples/state-machine-copilot&quot;&gt;&lt;code&gt;GitHub ‚Üí&lt;/code&gt;&lt;/a&gt;
  &lt;a href=&quot;https://state-machine-copilot.vercel.app&quot;&gt;&lt;code&gt;Live Demo ‚Üí&lt;/code&gt;&lt;/a&gt;
&lt;/div&gt;

### üí¨ [Chat With Your Data](https://github.com/CopilotKit/CopilotKit/tree/main/examples/copilot-chat-with-your-data)
Transform your data visualization experience with an AI-powered dashboard assistant. Ask questions about your data in natural language, get insights, and interact with your metrics‚Äîall through a conversational interface powered by CopilotKit.
&lt;div&gt;
  &lt;a href=&quot;https://github.com/CopilotKit/CopilotKit/tree/main/examples/copilot-chat-with-your-data&quot;&gt;&lt;code&gt;GitHub ‚Üí&lt;/code&gt;&lt;/a&gt;
  &lt;a href=&quot;https://chat-with-your-data.vercel.app&quot;&gt;&lt;code&gt;Live Demo ‚Üí&lt;/code&gt;&lt;/a&gt;
&lt;/div&gt;

### üè¶ [SaaS Copilot (Bank)](https://github.com/CopilotKit/demo-banking)
A context-aware financial assistant that analyzes transactions, provides spending insights, and helps users manage their finances through natural conversation. Demonstrates how CopilotKit can integrate deeply with complex data structures.
&lt;div&gt;
  &lt;a href=&quot;https://github.com/CopilotKit/demo-banking&quot;&gt;&lt;code&gt;GitHub ‚Üí&lt;/code&gt;&lt;/a&gt;
&lt;/div&gt;

## üßô‚Äç‚ôÇÔ∏è Agent Examples

### ‚úàÔ∏è [Travel Planner](https://github.com/CopilotKit/CopilotKit/tree/main/examples/coagents-travel)
An agent-native application that helps users plan trips by generating detailed itineraries, finding attractions, and visualizing travel plans. Shows how agents can collaborate with users to create rich, interactive experiences.
&lt;div&gt;
  &lt;a href=&quot;https://github.com/CopilotKit/CopilotKit/tree/main/examples/coagents-travel&quot;&gt;&lt;code&gt;GitHub ‚Üí&lt;/code&gt;&lt;/a&gt;
  &lt;a href=&quot;https://docs.copilotkit.ai/coagents/tutorials/ai-travel-app/overview&quot;&gt;&lt;code&gt;Tutorial ‚Üí&lt;/code&gt;&lt;/a&gt;
&lt;/div&gt;

### üîç [Research Canvas](https://github.com/CopilotKit/CopilotKit/tree/main/examples/coagents-research-canvas)
Multi-agent document analysis system that helps users analyze papers, synthesize information, and generate comprehensive research summaries through collaborative AI workflows.
&lt;div&gt;
  &lt;a href=&quot;https://github.com/CopilotKit/CopilotKit/tree/main/examples/coagents-research-canvas&quot;&gt;&lt;code&gt;GitHub ‚Üí&lt;/code&gt;&lt;/a&gt;
  &lt;a href=&quot;https://examples-coagents-research-canvas-ui.vercel.app
&quot;&gt;&lt;code&gt;Live Demo ‚Üí&lt;/code&gt;&lt;/a&gt;
&lt;/div&gt;

# Getting Started
Get started in minutes - check out the [quickstart documentation](https://docs.copilotkit.ai/quickstart).

# Code Samples
```ts
// Headless UI with full control
const { visibleMessages, appendMessage, setMessages, ... } = useCopilotChat();

// Pre-built components with deep customization options (CSS + pass custom sub-components)
&lt;CopilotPopup 
  instructions={&quot;You are assisting the user as best as you can. Answer in the best way possible given the data you have.&quot;} 
  labels={{ title: &quot;Popup Assistant&quot;, initial: &quot;Need any help?&quot; }} 
/&gt;

// ---

// Frontend RAG
useCopilotReadable({
  description: &quot;The current user&#039;s colleagues&quot;,
  value: colleagues,
});

// knowledge-base integration
useCopilotKnowledgebase(myCustomKnowledgeBase)

// ---

// Frontend actions + generative UI, with full streaming support
useCopilotAction({
  name: &quot;appendToSpreadsheet&quot;,
  description: &quot;Append rows to the current spreadsheet&quot;,
  parameters: [
    { name: &quot;rows&quot;, type: &quot;object[]&quot;, attributes: [{ name: &quot;cells&quot;, type: &quot;object[]&quot;, attributes: [{ name: &quot;value&quot;, type: &quot;string&quot; }] }] }
  ],
  render: ({ status, args }) =&gt; &lt;Spreadsheet data={canonicalSpreadsheetData(args.rows)} /&gt;,
  handler: ({ rows }) =&gt; setSpreadsheet({ ...spreadsheet, rows: [...spreadsheet.rows, ...canonicalSpreadsheetData(rows)] }),
});

// ---

// structured autocomplete for anything
const { suggestions } = useCopilotStructuredAutocompletion(
  {
    instructions: `Autocomplete or modify spreadsheet rows based on the inferred user intent.`,
    value: { rows: spreadsheet.rows.map((row) =&gt; ({ cells: row })) },
    enabled: !!activeCell &amp;&amp; !spreadsheetIsEmpty,
  },
  [activeCell, spreadsheet]
);
```

# Code Samples (CoAgents: in-app LangGraph Agents)

```ts
// Share state between app and agent
const { agentState } = useCoAgent({ 
  name: &quot;basic_agent&quot;, 
  initialState: { input: &quot;NYC&quot; } 
});

// agentic generative UI
useCoAgentStateRender({
  name: &quot;basic_agent&quot;,
  render: ({ state }) =&gt; &lt;WeatherDisplay {...state.final_response} /&gt;,
});

// Human in the Loop (Approval)
useCopilotAction({
    name: &quot;email_tool&quot;,
    parameters: [{ name: &quot;email_draft&quot;, type: &quot;string&quot;, description: &quot;The email content&quot;, required: true }],
    renderAndWaitForResponse: ({ args, status, respond }) =&gt; (
      &lt;EmailConfirmation
        emailContent={args.email_draft || &quot;&quot;}
        isExecuting={status === &quot;executing&quot;}
        onCancel={() =&gt; respond?.({ approved: false })}
        onSend={() =&gt; respond?.({ approved: true, metadata: { sentAt: new Date().toISOString() } })}
      /&gt;
    ),
  });

// ---

// intermediate agent state streaming (supports both LangGraph.js + LangGraph python)
const modifiedConfig = copilotKitCustomizeConfig(config, {
  emitIntermediateState: [{ 
    stateKey: &quot;outline&quot;, 
    tool: &quot;set_outline&quot;, 
    toolArgument: &quot;outline&quot; 
  }],
});
const response = await ChatOpenAI({ model: &quot;gpt-4o&quot; }).invoke(messages, modifiedConfig);
```


## Contributing

Thanks for your interest in contributing to CopilotKit! üíú

We value all contributions, whether it&#039;s through code, documentation, creating demo apps, or just spreading the word.

Here are a few useful resources to help you get started:

- For code contributions, [CONTRIBUTING.md](./CONTRIBUTING.md).
- For documentation-related contributions, [check out the documentation contributions guide](https://docs.copilotkit.ai/contributing/docs-contributions?ref=github_readme).

- Want to contribute but not sure how? [Join our Discord](https://discord.gg/6dffbvGU3D) and we&#039;ll help you out!

&gt; üí° **NOTE:** All contributions must be submitted via a pull request and be reviewed by our team. This ensures all contributions are of high quality and align with the project&#039;s goals.

## Get in touch

You are invited to join our community on [Discord](https://discord.gg/6dffbvGU3D) and chat with our team and other community members.

## License

This repository&#039;s source code is available under the [MIT License](https://github.com/CopilotKit/CopilotKit/blob/main/LICENSE).
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[dream-num/univer]]></title>
            <link>https://github.com/dream-num/univer</link>
            <guid>https://github.com/dream-num/univer</guid>
            <pubDate>Sun, 18 May 2025 00:04:56 GMT</pubDate>
            <description><![CDATA[Univer is a full-stack framework for creating and editing spreadsheets, documents, and slides on both web and server.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/dream-num/univer">dream-num/univer</a></h1>
            <p>Univer is a full-stack framework for creating and editing spreadsheets, documents, and slides on both web and server.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 8,956</p>
            <p>Forks: 791</p>
            <p>Stars today: 10 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;

&lt;picture&gt;
    &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;./docs/img/banner-light.png&quot;&gt;
    &lt;img src=&quot;./docs/img/banner-dark.png&quot; alt=&quot;Univer&quot; width=&quot;400&quot; /&gt;
&lt;/picture&gt;

Univer: An Isomorphic Full-Stack Framework for Creating and Editing Spreadsheets, Docs, and Slides Across Web and Server &lt;br /&gt;
Extensible. High-performance. Embedded to your application.

**English** | [ÁÆÄ‰Ωì‰∏≠Êñá][readme-zh-link] | [Êó•Êú¨Ë™û][readme-ja-link] &lt;br /&gt;
[Official Site][official-site-link] | [Documentation][documentation-link] | [Online Playground][playground-link] | [Blog][blog-link]

[![][github-license-shield]][github-license-link]
[![][github-actions-shield]][github-actions-link]
[![][github-stars-shield]][github-stars-link]
[![][github-contributors-shield]][github-contributors-link] &lt;br /&gt;
[![][github-forks-shield]][github-forks-link]
[![][github-issues-shield]][github-issues-link]
[![][codecov-shield]][codecov-link]
[![][codefactor-shield]][codefactor-link]
[![][discord-shield]][discord-link]

[![Trendshift][github-trending-shield]][github-trending-url]

&lt;/div&gt;

&lt;details open&gt;
&lt;summary&gt;
&lt;strong&gt;Table of contents&lt;/strong&gt;
&lt;/summary&gt;

- [üåà Highlights](#-highlights)
- [‚ú® Features](#-features)
    - [üìä Univer Sheet](#-univer-sheet)
    - [üìù Univer Doc](#-univer-doc-under-development)
    - [üìΩÔ∏è Univer Slide](#%EF%B8%8F-univer-slide-under-development)
- [üåê Internationalization](#-internationalization)
- [üëæ Showcase](#-showcase)&lt;!-- - [üì¶ Ecosystem](#-ecosystem) --&gt;
- [üí¨ Community](#-community)
- [ü§ù Contribution](#-contribution)
- [‚ù§Ô∏è Sponsor](#%EF%B8%8F-sponsors)
- [üìÑ License](#-license)

&lt;/details&gt;

## üåà Highlights

- üìà Univer is designed to support **spreadsheets**, **documents** and **presentation**.
- üßô‚Äç‚ôÄÔ∏è Univer is **isomorphic**. It can run both on browsers and Node.js (in the future, mobile devices as well), with the same API.
- ‚öôÔ∏è Univer is easily **embeddable**, allowing seamless integration into your applications.
- üéá Univer is **powerful**, offering a wide range of features including **formulas**, **conditional formatting**, **data validation**, **filtering**, **collaborative editing**, **printing**, **import &amp; export** and more features on the horizon.
- üîå Univer is **highly extensible**, thanks to its *plug-in architecture* that makes it a delight for developers to implement their unique requirements on the top of Univer.
- üíÑ Univer is **highly customizable**, allowing you to personalize its appearance using *themes*. It also provides support for internationalization (i18n).
- ü•§ Univer is **easy to work with**. The *Presets* &amp; *Facade API* make it easy to hands on.
- ‚ö° Univer in **performant**.
  - ‚úèÔ∏è Univer boasts an efficient *rendering engine* based on canvas, capable of rendering various document types flawlessly. The rendering engines supports advanced typesetting features such as *punctuation squeezing*, *text and image layout* and *scroll buffering*.
  - üßÆ Univer incorporates a lightning-fast *formula engine* that can operate in Web Workers or even on the server side.
- üåå Univer is a **highly integrated** system. Documents, spreadsheets and slides can interoperate with each others and even rendered on the same canvas, allowing information and data flow within Univer.

## ‚ú® Features

Univer provides a wide range of features for spreadsheets, documents and presentations. Here are some of the key features:

### üìä Univer Sheet

- **Core Features**: Univer supports core spreadsheet functionality, including cells, rows, columns, worksheets, and workbooks.
- **Formulas**: Extensive support for various formulas, including mathematical, statistical, logical, text, date and time, lookup and reference, engineering, financial, and information formulas.
- **Permissions**: Allows restricting access to specific elements.
- **Number Formatting**: Supports formatting numbers based on specific criteria.
- **Hyperlinks**: Enables linking to external websites, email addresses, and other locations within a spreadsheet.
- **Floating Images**: Allows inserting images into a spreadsheet and positioning them anywhere on the sheet.
- **Find &amp; Replace**: Provides the ability to search for specific text within a spreadsheet and replace it with other text.
- **Filtering**: Allows filtering data based on specific criteria.
- **Sorting**: Allows sorting data based on specific criteria.
- **Data Validation**: Supports restricting the type of data that can be entered into a cell.
- **Conditional Formatting**: Supports applying formatting to cells based on specific criteria.
- **Comments**: Enables adding comments to cells to provide additional information.
- **Cross-highlighting**: Supports displaying cross-highlighting in spreadsheets to help users quickly locate selected cells.
- **Pivot Tables**[^1]: Supports pivot tables, allowing users to summarize and analyze data.
- **Collaborative Editing**[^1]: Supports multiple users editing a spreadsheet simultaneously. File history and recovering are also provided.
- **Printing**[^1]: Allows printing a spreadsheet or exporting it to PDF.
- **Import &amp; Export**[^1]: Support for importing and exporting data in XLSX.
- **Charts**[^2]: Third-party chart support via [VChart][vchart-link].

### üìù Univer Doc (beta)

- **Core Features**: Univer supports core document features, including paragraphs, headings, lists, superscript, subscript, and more.
- **Lists**: Supports ordered lists, unordered lists, and task lists.
- **Hyperlinks**: Supports inserting links to external websites, email addresses, and other locations within a document.
- **Floating Images**: Allows inserting images into a document and supporting text and image layout.
- **Headers &amp; Footers**: Allows adding headers and footers to a document.
- **Comments**: Enables adding comments to a document to provide additional information.
- **Import**[^1]: Supports importing data in DOCX format.
- **Collaborative Editing**[^1]: Supports multiple users editing a document simultaneously.

### üìΩÔ∏è Univer Slide (Under Development)

- **Core Features**: Univer will support core presentation features, including slides, shapes, text, images, and more.

## üåê Internationalization

Univer supports multiple languages, including:

- `zh-CN`
- `zh-TW`
- `en-US`
- `ru-RU`
- `vi-VN`
- `fa-IR`

`zh-CN` and `en-US` are officially supported, while the others are contributed and maintained by the community.

You can add the language you want by [Using Custom Locales](https://univer.ai/guides/sheet/getting-started/i18n#using-custom-locales). You can also help us add new language support by referring to the [contribution guide](./CONTRIBUTING.md).

## üëæ Showcase

You can find all the examples in the [Univer Examples](https://univer.ai/examples).

| **üìä Spreadsheets** | **üìä Multi-instance** | **üìä Uniscript** |
| :---: | :---: | :---: |
| [![][examples-preview-0]][examples-link-0] | [![][examples-preview-1]][examples-link-1] | [![][examples-preview-2]][examples-link-2] |
| **üìä Big data** | **üìä Collaboration** | **üìä Collaboration Playground** |
| [![][examples-preview-3]][examples-link-3] | [![][examples-preview-4]][examples-link-4] | [![][examples-preview-5]][examples-link-5] |
| **üìä Import &amp; Export** | **üìä Printing** | **üìù Documents** |
| [![][examples-preview-6]][examples-link-6] | [![][examples-preview-7]][examples-link-7] | [![][examples-preview-8]][examples-link-8] |
| **üìù Multi-instance** | **üìù Uniscript** | **üìù Big data** |
| [![][examples-preview-9]][examples-link-9] | [![][examples-preview-10]][examples-link-10] | [![][examples-preview-11]][examples-link-11] |
| **üìù Collaboration** | **üìù Collaboration Playground** | **üìΩÔ∏è Presentations** |
| [![][examples-preview-12]][examples-link-12] | [![][examples-preview-13]][examples-link-13] | [![][examples-preview-14]][examples-link-14] |
| **üìä Zen Editor** | **Univer Workspace (SaaS version)** | &amp;nbsp; |
| [![][examples-preview-15]][examples-link-15] | [![][examples-preview-16]][examples-link-16] | &amp;nbsp; |

&lt;!-- ## üì¶ Ecosystem

Univer has a rich ecosystem that includes a wide range of tools and resources to help you get started with Univer: --&gt;

## üîó Links

- [Latest Preview of the `dev` Branch](https://univer-preview.vercel.app/)
- [Official Site](https://univer.ai)
- [Presets Repository](https://github.com/dream-num/univer-presets)

## üîí Security

Univer is committed to maintaining a secure codebase. We follow best practices for security and regularly update our dependencies. For more information, please refer to our [Security Policy](./SECURITY.md).

## üí¨ Community

[![][github-community-badge]][github-community-link] [![][discord-community-badge]][discord-community-link] [![][stackoverflow-community-badge]][stackoverflow-community-link]

Univer is an inclusive and welcoming project. Please read our [Code of Conduct](./CODE_OF_CONDUCT.md) before participating in the community.

Join the Univer community:

- Chat with us and other developers on [Discord][discord-community-link].
- Start a discussion on [GitHub Discussions][github-community-link].
- Open a topic on [Stack Overflow][stackoverflow-community-link] and tag it with `univer`.

You can also find Univer on:

[Twitter][twitter-community-link] | [YouTube][youtube-community-link]

## ü§ù Contribution

We appreciate any kinds of contributing. You can submit [issues or feature requests](https://github.com/dream-num/univer/issues) to us. Please read our [contributing guide](./CONTRIBUTING.md) first.

If you would like to contribute code to Univer, please refer to the contributing guide as well. It would guide you through the process of setting up the development environment and submitting a pull request.

## ‚ù§Ô∏è Sponsors

The growth and development of the Univer project rely on the support of its backers and sponsors. If you are interested in supporting our project, we kindly invite you to consider becoming a sponsor. You can sponsor us through [Open Collective](https://opencollective.com/univer).

Thanks to our sponsors, just part of them are listed here because of the space limit, ranking is no particular order:

[![][sponsor-badge-0]][sponsor-link-0]
[![][sponsor-badge-1]][sponsor-link-1]
[![][sponsor-badge-2]][sponsor-link-2]
[![][sponsor-badge-3]][sponsor-link-3]
[![][sponsor-badge-4]][sponsor-link-4]
[![][sponsor-badge-5]][sponsor-link-5]
[![][sponsor-badge-6]][sponsor-link-6]

[![][backer-badge-0]][backer-link-0]
[![][backer-badge-1]][backer-link-1]
[![][backer-badge-2]][backer-link-2]
[![][backer-badge-3]][backer-link-3]
[![][backer-badge-4]][backer-link-4]
[![][backer-badge-5]][backer-link-5]
[![][backer-badge-6]][backer-link-6]

## üìÑ License

Copyright ¬© 2021-2024 DreamNum Co,Ltd. All Rights Reserved.

Licensed under the [Apache-2.0](https://www.apache.org/licenses/LICENSE-2.0) license.

&lt;!-- Footnotes --&gt;
[^1]: These features are provided by the non-OSS version of Univer, which is free for commercial use and also includes paid upgrade plans.
[^2]: VChart is a third-party library that provides chart support for Univer. You can find more information here: [univer-vchart-plugin][vchart-univer-link].

&lt;!-- Links --&gt;
[github-license-shield]: https://img.shields.io/github/license/dream-num/univer?style=flat-square
[github-license-link]: ./LICENSE
[github-actions-shield]: https://img.shields.io/github/actions/workflow/status/dream-num/univer/build.yml?style=flat-square
[github-actions-link]: https://github.com/dream-num/univer/actions/workflows/build.yml
[github-stars-link]: https://github.com/dream-num/univer/stargazers
[github-stars-shield]: https://img.shields.io/github/stars/dream-num/univer?style=flat-square
[github-trending-shield]: https://trendshift.io/api/badge/repositories/4376
[github-trending-url]: https://trendshift.io/repositories/4376
[github-contributors-link]: https://github.com/dream-num/univer/graphs/contributors
[github-contributors-shield]: https://img.shields.io/github/contributors/dream-num/univer?style=flat-square
[github-forks-link]: https://github.com/dream-num/univer/network/members
[github-forks-shield]: https://img.shields.io/github/forks/dream-num/univer?style=flat-square
[github-issues-link]: https://github.com/dream-num/univer/issues
[github-issues-shield]: https://img.shields.io/github/issues/dream-num/univer?style=flat-square
[codecov-shield]: https://img.shields.io/codecov/c/gh/dream-num/univer?token=aPfyW2pIMN&amp;style=flat-square
[codecov-link]: https://codecov.io/gh/dream-num/univer
[codefactor-shield]: https://www.codefactor.io/repository/github/dream-num/univer/badge/dev?style=flat-square
[codefactor-link]: https://www.codefactor.io/repository/github/dream-num/univer/overview/dev
[discord-shield]: https://img.shields.io/discord/1136129819961217077?logo=discord&amp;logoColor=FFFFFF&amp;label=discord&amp;color=5865F2&amp;style=flat-square
[discord-link]: https://discord.gg/z3NKNT6D2f

[readme-en-link]: ./README.md
[readme-zh-link]: ./README-zh.md
[readme-ja-link]: ./README-ja.md

[official-site-link]: https://univer.ai
[documentation-link]: https://univer.ai/guides/sheet/introduction
[playground-link]: https://univer.ai/playground
[blog-link]: https://univer.ai/blog/post/this-is-univer

[stackoverflow-community-link]: https://stackoverflow.com/questions/tagged/univer
[stackoverflow-community-badge]: https://img.shields.io/badge/stackoverflow-univer-ef8236?labelColor=black&amp;logo=stackoverflow&amp;logoColor=white&amp;style=for-the-badge
[github-community-link]: https://github.com/dream-num/univer/discussions
[github-community-badge]: https://img.shields.io/badge/github-univer-24292e?labelColor=black&amp;logo=github&amp;logoColor=white&amp;style=for-the-badge
[discord-community-link]: https://discord.gg/z3NKNT6D2f
[discord-community-badge]: https://img.shields.io/discord/1136129819961217077?color=5865F2&amp;label=discord&amp;labelColor=black&amp;logo=discord&amp;logoColor=white&amp;style=for-the-badge
[twitter-community-link]: https://twitter.com/univerhq
[youtube-community-link]: https://www.youtube.com/@dreamNum
[zhihu-community-link]: https://www.zhihu.com/org/meng-shu-ke-ji
[segmentfault-community-link]: https://segmentfault.com/u/congrongdehongjinyu
[juejin-community-link]: https://juejin.cn/user/4312146127850733

[sponsor-link-0]: https://opencollective.com/univer/sponsor/0/website
[sponsor-link-1]: https://opencollective.com/univer/sponsor/1/website
[sponsor-link-2]: https://opencollective.com/univer/sponsor/2/website
[sponsor-link-3]: https://opencollective.com/univer/sponsor/3/website
[sponsor-link-4]: https://opencollective.com/univer/sponsor/4/website
[sponsor-link-5]: https://opencollective.com/univer/sponsor/5/website
[sponsor-link-6]: https://opencollective.com/univer/sponsor/6/website
[sponsor-badge-0]: https://opencollective.com/univer/sponsor/0/avatar.svg
[sponsor-badge-1]: https://opencollective.com/univer/sponsor/1/avatar.svg
[sponsor-badge-2]: https://opencollective.com/univer/sponsor/2/avatar.svg
[sponsor-badge-3]: https://opencollective.com/univer/sponsor/3/avatar.svg
[sponsor-badge-4]: https://opencollective.com/univer/sponsor/4/avatar.svg
[sponsor-badge-5]: https://opencollective.com/univer/sponsor/5/avatar.svg
[sponsor-badge-6]: https://opencollective.com/univer/sponsor/6/avatar.svg
[backer-link-0]: https://opencollective.com/univer/backer/0/website
[backer-link-1]: https://opencollective.com/univer/backer/1/website
[backer-link-2]: https://opencollective.com/univer/backer/2/website
[backer-link-3]: https://opencollective.com/univer/backer/3/website
[backer-link-4]: https://opencollective.com/univer/backer/4/website
[backer-link-5]: https://opencollective.com/univer/backer/5/website
[backer-link-6]: https://opencollective.com/univer/backer/6/website
[backer-badge-0]: https://opencollective.com/univer/backer/0/avatar.svg
[backer-badge-1]: https://opencollective.com/univer/backer/1/avatar.svg
[backer-badge-2]: https://opencollective.com/univer/backer/2/avatar.svg
[backer-badge-3]: https://opencollective.com/univer/backer/3/avatar.svg
[backer-badge-4]: https://opencollective.com/univer/backer/4/avatar.svg
[backer-badge-5]: https://opencollective.com/univer/backer/5/avatar.svg
[backer-badge-6]: https://opencollective.com/univer/backer/6/avatar.svg

[vchart-link]: https://github.com/VisActor/VChart
[vchart-univer-link]: https://github.com/VisActor/univer-vchart-plugin

[examples-preview-0]: ./docs/img/examples-sheets.gif
[examples-preview-1]: ./docs/img/examples-sheets-multi.gif
[examples-preview-2]: ./docs/img/examples-sheets-uniscript.gif
[examples-preview-3]: ./docs/img/examples-sheets-big-data.gif
[examples-preview-4]: ./docs/img/pro-examples-sheets-collaboration.gif
[examples-preview-5]: ./docs/img/pro-examples-sheets-collaboration-playground.gif
[examples-preview-6]: ./docs/img/pro-examples-sheets-exchange.gif
[examples-preview-7]: ./docs/img/pro-examples-sheets-print.gif
[examples-preview-8]: ./docs/img/examples-docs.gif
[examples-preview-9]: ./docs/img/examples-docs-multi.gif
[examples-preview-10]: ./docs/img/examples-docs-uniscript.gif
[examples-preview-11]: ./docs/img/examples-docs-big-data.gif
[examples-preview-12]: ./docs/img/pro-examples-docs-collaboration.gif
[examples-preview-13]: ./docs/img/pro-examples-docs-collaboration-playground.gif
[examples-preview-14]: ./docs/img/examples-slides.gif
[examples-preview-15]: ./docs/img/zen-mode.gif
[examples-preview-16]: ./docs/img/univer-workspace-drag-chart.gif
[examples-link-0]: https://univer.ai/examples/sheets/
[examples-link-1]: https://univer.ai/examples/sheets-multi/
[examples-link-2]: https://univer.ai/examples/sheets-uniscript/
[examples-link-3]: https://univer.ai/examples/sheets-big-data/
[examples-link-4]: https://univer.ai/pro/examples/sheets-collaboration/
[examples-link-5]: https://univer.ai/pro/examples/sheets-collaboration-playground/
[examples-link-6]: https://univer.ai/pro/examples/sheets-exchange/
[examples-link-7]: https://univer.ai/pro/examples/sheets-print/
[examples-link-8]: https://univer.ai/examples/docs/
[examples-link-9]: https://univer.ai/examples/docs-multi/
[examples-link-10]: https://univer.ai/examples/docs-uniscript/
[examples-link-11]: https://univer.ai/examples/docs-big-data/
[examples-link-12]: https://univer.ai/pro/examples/docs-collaboration/
[examples-link-13]: https://univer.ai/pro/examples/docs-collaboration-playground/
[examples-link-14]: https://univer.ai/examples/slides/
[examples-link-15]: https://univer.ai/guides/sheet/features/zen-editor
[examples-link-16]: https://youtu.be/kpV0MvQuFZA
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[MetaMask/metamask-extension]]></title>
            <link>https://github.com/MetaMask/metamask-extension</link>
            <guid>https://github.com/MetaMask/metamask-extension</guid>
            <pubDate>Sun, 18 May 2025 00:04:55 GMT</pubDate>
            <description><![CDATA[üåê üîå The MetaMask browser extension enables browsing Ethereum blockchain enabled websites]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/MetaMask/metamask-extension">MetaMask/metamask-extension</a></h1>
            <p>üåê üîå The MetaMask browser extension enables browsing Ethereum blockchain enabled websites</p>
            <p>Language: TypeScript</p>
            <p>Stars: 12,559</p>
            <p>Forks: 5,174</p>
            <p>Stars today: 11 stars today</p>
            <h2>README</h2><pre># MetaMask Browser Extension

You can find the latest version of MetaMask on [our official website](https://metamask.io/). For help using MetaMask, visit our [User Support Site](https://support.metamask.io/).

For [general questions](https://community.metamask.io/c/learn/26), [feature requests](https://community.metamask.io/c/feature-requests-ideas/13), or [developer questions](https://community.metamask.io/c/developer-questions/11), visit our [Community Forum](https://community.metamask.io/).

MetaMask supports Firefox, Google Chrome, and Chromium-based browsers. We recommend using the latest available browser version.

For up to the minute news, follow us on [X](https://x.com/MetaMask).

To learn how to develop MetaMask-compatible applications, visit our [Developer Docs](https://docs.metamask.io/).

To learn how to contribute to the MetaMask codebase, visit our [Contributor Docs](https://github.com/MetaMask/contributor-docs).

To learn how to contribute to the MetaMask Extension project itself, visit our [Extension Docs](https://github.com/MetaMask/metamask-extension/tree/main/docs).

## GitHub Codespaces quickstart

As an alternative to building on your local machine, there is a new option to get a development environment up and running in less than 5 minutes by using GitHub Codespaces. Please note that there is a [Limited Free Monthly Quota](https://docs.github.com/en/billing/managing-billing-for-github-codespaces/about-billing-for-github-codespaces), and after that GitHub will start charging you.

_Note: You are billed for both time spent running, and for storage used_

[![Open in GitHub Codespaces](https://github.com/codespaces/badge.svg)](https://codespaces.new/MetaMask/metamask-extension?quickstart=1)

1. Start by clicking the button above
2. A new browser tab will open with a remote version of Visual Studio Code (this will take a few minutes to load)
3. A &quot;Simple Browser&quot; will open inside the browser with noVNC -- click Connect
   - Optional steps:
     - Click the button at the upper-right of the Simple Browser tab to open the noVNC window in its own tab
     - Open the noVNC sidebar on the left, click the gear icon, change the Scaling Mode to Remote Resizing
4. Wait about 20 extra seconds on the first launch, for the scripts to finish
5. Right-click on the noVNC desktop to launch Chrome or Firefox with MetaMask pre-installed
6. Change some code, then run `yarn start` to build in dev mode
7. After a minute or two, it will finish building, and you can see your changes in the noVNC desktop

### Tips to keep your Codespaces usage lower

- You are billed for both time spent running, and for storage used
- Codespaces pause after 30 minutes of inactivity, and auto-delete after 30 days of inactivity
- You can manage your Codespaces here: https://github.com/codespaces
  - You may want to manually pause them before the 30 minute timeout
  - If you have several idle Codespaces hanging around for several days, you can quickly run out of storage quota. You should delete the ones you do not plan to use anymore, and probably keep only 1 or 2 in the long-term. It&#039;s also possible to re-use old Codespaces and switch the branch, instead of creating new ones and deleting the old ones.

### Codespaces on a fork

If you are not a MetaMask Internal Developer, or are otherwise developing on a fork, the default Infura key will be on the Free Plan and have very limited requests per second. If you want to use your own Infura key, follow the `.metamaskrc` and `INFURA_PROJECT_ID` instructions in the section [Building on your local machine](#building-on-your-local-machine).

## Building on your local machine

- Install [Node.js](https://nodejs.org) version 20
  - If you are using [nvm](https://github.com/nvm-sh/nvm#installing-and-updating) (recommended) running `nvm use` will automatically choose the right node version for you.
- Enable Corepack by executing the command `corepack enable` within the metamask-extension project. Corepack is a utility included with Node.js by default. It manages Yarn on a per-project basis, using the version specified by the `packageManager` property in the project&#039;s package.json file. Please note that modern releases of [Yarn](https://yarnpkg.com/getting-started/install) are not intended to be installed globally or via npm.
- Duplicate `.metamaskrc.dist` within the root and rename it to `.metamaskrc` by running `cp .metamaskrc{.dist,}`.

  - Replace the `INFURA_PROJECT_ID` value with your own personal [Infura API Key](https://docs.infura.io/networks/ethereum/how-to/secure-a-project/project-id).
    - If you don&#039;t have an Infura account, you can create one for free on the [Infura website](https://app.infura.io/register).
  - If debugging MetaMetrics, you&#039;ll need to add a value for `SEGMENT_WRITE_KEY` [Segment write key](https://segment.com/docs/connections/find-writekey/), see [Developing on MetaMask - Segment](./development/README.md#segment).
  - If debugging unhandled exceptions, you&#039;ll need to add a value for `SENTRY_DSN` [Sentry Dsn](https://docs.sentry.io/product/sentry-basics/dsn-explainer/), see [Developing on MetaMask - Sentry](./development/README.md#sentry).
  - Optionally, replace the `PASSWORD` value with your development wallet password to avoid entering it each time you open the app.
  - If developing with remote feature flags, and you want to override the flags in the build process, you can add a `.manifest-overrides.json` file to the root of the project and set `MANIFEST_OVERRIDES=.manifest-overrides.json` in `.metamaskrc` to the path of the file.
    This file is used to add flags to `manifest.json` build files for the extension. You can also modify the `_flags.remoteFeatureFlags` in the built version of `manifest.json` in the `dist/browser` folder to tweak the flags after the build process (these changes will get overwritten when you build again).
    An example of this remote feature flag overwrite could be:

  ```json
  {
    &quot;_flags&quot;: {
      &quot;remoteFeatureFlags&quot;: { &quot;testBooleanFlag&quot;: false }
    }
  }
  ```

- Run `yarn install` to install the dependencies.
- Build the project to the `./dist/` folder with `yarn dist` (for Chromium-based browsers) or `yarn dist:mv2` (for Firefox)

  - Optionally, to create a development build you can instead run `yarn start` (for Chromium-based browsers) or `yarn start:mv2` (for Firefox)
  - Uncompressed builds can be found in `/dist`, compressed builds can be found in `/builds` once they&#039;re built.
  - See the [build system readme](./development/build/README.md) for build system usage information.

- Follow these instructions to verify that your local build runs correctly:
  - [How to add custom build to Chrome](./docs/add-to-chrome.md)
  - [How to add custom build to Firefox](./docs/add-to-firefox.md)

## Git Hooks

To get quick feedback from our shared code quality fitness functions before committing the code, you can install our git hooks with Husky.

`$ yarn githooks:install`

You can read more about them in our [testing documentation](./docs/testing.md#fitness-functions-measuring-progress-in-code-quality-and-preventing-regressions-using-custom-git-hooks).

If you are using VS Code and are unable to make commits from the source control sidebar due to a &quot;command not found&quot; error, try these steps from the [Husky docs](https://typicode.github.io/husky/troubleshooting.html#command-not-found).

## Contributing

### Development builds

To start a development build (e.g. with logging and file watching) run `yarn start`.

#### Development build with wallet state

You can start a development build with a preloaded wallet state, by adding `TEST_SRP=&#039;&lt;insert SRP here&gt;&#039;` and `PASSWORD=&#039;&lt;insert wallet password here&gt;&#039;` to the `.metamaskrc` file. Then you have the following options:

1. Start the wallet with the default fixture flags, by running `yarn start:with-state`.
2. Check the list of available fixture flags, by running `yarn start:with-state --help`.
3. Start the wallet with custom fixture flags, by running `yarn start:with-state --FIXTURE_NAME=VALUE` for example `yarn start:with-state --withAccounts=100`. You can pass as many flags as you want. The rest of the fixtures will take the default values.

#### Development build with Webpack

You can also start a development build using the `yarn webpack` command, or `yarn webpack --watch`. This uses an alternative build system that is much faster, but not yet production ready. See the [Webpack README](./development/webpack/README.md) for more information.

#### React and Redux DevTools

To start the [React DevTools](https://github.com/facebook/react-devtools), run `yarn devtools:react` with a development build installed in a browser. This will open in a separate window; no browser extension is required.

To start the [Redux DevTools Extension](https://github.com/reduxjs/redux-devtools/tree/main/extension):

- Install the package `remotedev-server` globally (e.g. `yarn global add remotedev-server`)
- Install the Redux Devtools extension.
- Open the Redux DevTools extension and check the &quot;Use custom (local) server&quot; checkbox in the Remote DevTools Settings, using the default server configuration (host `localhost`, port `8000`, secure connection checkbox unchecked).

Then run the command `yarn devtools:redux` with a development build installed in a browser. This will enable you to use the Redux DevTools extension to inspect MetaMask.

To create a development build and run both of these tools simultaneously, run `yarn start:dev`.

#### Test Dapp

[This test site](https://metamask.github.io/test-dapp/) can be used to execute different user flows.

### Running Unit Tests and Linting

Run unit tests and the linter with `yarn test`. To run just unit tests, run `yarn test:unit`.

You can run the linter by itself with `yarn lint`, and you can automatically fix some lint problems with `yarn lint:fix`. You can also run these two commands just on your local changes to save time with `yarn lint:changed` and `yarn lint:changed:fix` respectively.

For Jest debugging guide using Node.js, see [docs/tests/jest.md](docs/tests/jest.md).

### Running E2E Tests

Our e2e test suite can be run on either Firefox or Chrome. Here&#039;s how to get started with e2e testing:

#### Preparing a Test Build

Before running e2e tests, ensure you&#039;ve run `yarn install` to download dependencies. Next, you&#039;ll need a test build. You have 3 options:

1. Use `yarn download-builds:test` to quickly download and unzip test builds for Chrome and Firefox into the `./dist/` folder. This method is fast and convenient for standard testing.
2. Create a custom test build: for testing against different build types, use `yarn build:test`. This command allows you to generate test builds for various types, including:
   - `yarn build:test` for main build
   - `yarn build:test:flask` for flask build
   - `yarn build:test:mv2` for mv2 build
   - `yarn build:test:mmi` for mmi build
3. Start a test build with live changes: `yarn start:test` is particularly useful for development. It starts a test build that automatically recompiles application code upon changes. This option is ideal for iterative testing and development. This command also allows you to generate test builds for various types, including:
   - `yarn start:test` for main build
   - `yarn start:test:flask` for flask build
   - `yarn start:test:mv2` for mv2 build

Note: The `yarn start:test` command (which initiates the testDev build type) has LavaMoat disabled for both the build system and the application, offering a streamlined testing experience during development. On the other hand, `yarn build:test` enables LavaMoat for enhanced security in both the build system and application, mirroring production environments more closely.

#### Running Tests

Once you have your test build ready, choose the browser for your e2e tests:

- For Firefox, run `yarn test:e2e:firefox`.
  - Note: If you are running Firefox as a snap package on Linux, ensure you enable the appropriate environment variable: `FIREFOX_SNAP=true yarn test:e2e:firefox`
- For Chrome, run `yarn test:e2e:chrome`.

These scripts support additional options for debugging. Use `--help`to see all available options.

#### Running a single e2e test

Single e2e tests can be run with `yarn test:e2e:single test/e2e/tests/TEST_NAME.spec.js` along with the options below.

```console
  --browser           Set the browser to be used; specify &#039;chrome&#039;, &#039;firefox&#039;, &#039;all&#039;
                      or leave unset to run on &#039;all&#039; by default.
                                                          [string] [default: &#039;all&#039;]
  --debug             Run tests in debug mode, logging each driver interaction
                                                         [boolean] [default: true]
  --retries           Set how many times the test should be retried upon failure.
                                                              [number] [default: 0]
  --leave-running     Leaves the browser running after a test fails, along with
                      anything else that the test used (ganache, the test dapp,
                      etc.)                              [boolean] [default: false]
  --update-snapshot   Update E2E test snapshots
                                             [alias: -u] [boolean] [default: false]
```

For example, to run the `account-details` tests using Chrome, with debug logging and with the browser set to remain open upon failure, you would use:
`yarn test:e2e:single test/e2e/tests/account-menu/account-details.spec.js --browser=chrome --leave-running`

#### Running e2e tests against specific feature flag

While developing new features, we often use feature flags. As we prepare to make these features generally available (GA), we remove the feature flags. Existing feature flags are listed in the `.metamaskrc.dist` file. To execute e2e tests with a particular feature flag enabled, it&#039;s necessary to first generate a test build with that feature flag activated. There are two ways to achieve this:

- To enable a feature flag in your local configuration, you should first ensure you have a `.metamaskrc` file copied from `.metamaskrc.dist`. Then, within your local `.metamaskrc` file, you can set the desired feature flag to true. Following this, a test build with the feature flag enabled can be created by executing `yarn build:test`.

- Alternatively, for enabling a feature flag directly during the test build creation, you can pass the parameter as true via the command line. For instance, activating the MULTICHAIN feature flag can be done by running `MULTICHAIN=1 yarn build:test` or `MULTICHAIN=1 yarn start:test` . This method allows for quick adjustments to feature flags without altering the `.metamaskrc` file.

Once you&#039;ve created a test build with the desired feature flag enabled, proceed to run your tests as usual. Your tests will now run against the version of the extension with the specific feature flag activated. For example:
`yarn test:e2e:single test/e2e/tests/account-menu/account-details.spec.js --browser=chrome`

This approach ensures that your e2e tests accurately reflect the user experience for the upcoming GA features.

#### Running specific builds types e2e test

Different build types have different e2e tests sets. In order to run them look in the `package.json` file. You will find:

```console
    &quot;test:e2e:chrome:snaps&quot;: &quot;SELENIUM_BROWSER=chrome node test/e2e/run-all.js --snaps&quot;,
    &quot;test:e2e:firefox&quot;: &quot;SELENIUM_BROWSER=firefox node test/e2e/run-all.js&quot;,
```

### Changing dependencies

Whenever you change dependencies (adding, removing, or updating, either in `package.json` or `yarn.lock`), there are various files that must be kept up-to-date.

- `yarn.lock`:
  - Run `yarn` again after your changes to ensure `yarn.lock` has been properly updated.
  - Run `yarn lint:lockfile:dedupe:fix` to remove duplicate dependencies from the lockfile.
- The `allow-scripts` configuration in `package.json`
  - Run `yarn allow-scripts auto` to update the `allow-scripts` configuration automatically. This config determines whether the package&#039;s install/postinstall scripts are allowed to run. Review each new package to determine whether the install script needs to run or not, testing if necessary.
  - Unfortunately, `yarn allow-scripts auto` will behave inconsistently on different platforms. macOS and Windows users may see extraneous changes relating to optional dependencies.
- The LavaMoat policy files
  - If you are a MetaMask team member and your PR is on a repository branch, you can use the bot command `@metamaskbot update-policies` to ask the MetaMask bot to automatically update the policies for you.
  - If your PR is from a fork, you can ask a MetaMask team member to help with updating the policy files.
  - Manual update instructions: The _tl;dr_ is to run `yarn lavamoat:auto` to update these files, but there can be devils in the details:
    - There are two sets of LavaMoat policy files:
      - The production LavaMoat policy files (`lavamoat/browserify/*/policy.json`), which are re-generated using `yarn lavamoat:webapp:auto`. Add `--help` for usage.
        - These should be regenerated whenever the production dependencies for the webapp change.
      - The build system LavaMoat policy file (`lavamoat/build-system/policy.json`), which is re-generated using `yarn lavamoat:build:auto`.
        - This should be regenerated whenever the dependencies used by the build system itself change.
    - Whenever you regenerate a policy file, review the changes to determine whether the access granted to each package seems appropriate.
    - Unfortunately, `yarn lavamoat:auto` will behave inconsistently on different platforms.
      macOS and Windows users may see extraneous changes relating to optional dependencies.
    - If you keep getting policy failures even after regenerating the policy files, try regenerating the policies after a clean install by doing:
      - `rm -rf node_modules/ &amp;&amp; yarn &amp;&amp; yarn lavamoat:auto`
    - Keep in mind that any kind of dynamic import or dynamic use of globals may elude LavaMoat&#039;s static analysis.
      Refer to the LavaMoat documentation or ask for help if you run into any issues.
- The Attributions file
  - If you are a MetaMask team member and your PR is on a repository branch, you can use the bot command `@metamaskbot update-attributions` to ask the MetaMask bot to automatically update the attributions file for you.
  - Manual update: run `yarn attributions:generate`.

## Architecture

- [Visual of the controller hierarchy and dependencies as of summer 2022.](https://gist.github.com/rekmarks/8dba6306695dcd44967cce4b6a94ae33)
- [Visual of the entire codebase.](https://mango-dune-07a8b7110.1.azurestaticapps.net/?repo=metamask%2Fmetamask-extension)

[![Architecture Diagram](./docs/architecture.png)][1]

## Other Docs

- [How to add a new translation to MetaMask](./docs/translating-guide.md)
- [Publishing Guide](./docs/publishing.md)
- [How to use the TREZOR emulator](./docs/trezor-emulator.md)
- [Developing on MetaMask](./development/README.md)
- [How to generate a visualization of this repository&#039;s development](./development/gource-viz.sh)
- [How to add new confirmations](./docs/confirmations.md)
- [Browser support guidelines](./docs/browser-support.md)

## Dapp Developer Resources

- [Extend MetaMask&#039;s features w/ MetaMask Snaps.](https://docs.metamask.io/snaps/)
- [Prompt your users to add and switch to a new network.](https://docs.metamask.io/wallet/how-to/add-network/)
- [Change the logo that appears when your dapp connects to MetaMask.](https://docs.metamask.io/wallet/how-to/display/icon/)

[1]: http://www.nomnoml.com/#view/%5B%3Cactor%3Euser%5D%0A%0A%5Bmetamask-ui%7C%0A%20%20%20%5Btools%7C%0A%20%20%20%20%20react%0A%20%20%20%20%20redux%0A%20%20%20%20%20thunk%0A%20%20%20%20%20ethUtils%0A%20%20%20%20%20jazzicon%0A%20%20%20%5D%0A%20%20%20%5Bcomponents%7C%0A%20%20%20%20%20app%0A%20%20%20%20%20account-detail%0A%20%20%20%20%20accounts%0A%

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[freeCodeCamp/freeCodeCamp]]></title>
            <link>https://github.com/freeCodeCamp/freeCodeCamp</link>
            <guid>https://github.com/freeCodeCamp/freeCodeCamp</guid>
            <pubDate>Sun, 18 May 2025 00:04:54 GMT</pubDate>
            <description><![CDATA[freeCodeCamp.org's open-source codebase and curriculum. Learn math, programming, and computer science for free.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/freeCodeCamp/freeCodeCamp">freeCodeCamp/freeCodeCamp</a></h1>
            <p>freeCodeCamp.org's open-source codebase and curriculum. Learn math, programming, and computer science for free.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 418,042</p>
            <p>Forks: 40,103</p>
            <p>Stars today: 44 stars today</p>
            <h2>README</h2><pre>[![freeCodeCamp Social Banner](https://cdn.freecodecamp.org/platform/universal/fcc_banner_new.png)](https://www.freecodecamp.org/)

[![Pull Requests Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat)](https://makeapullrequest.com)
[![first-timers-only Friendly](https://img.shields.io/badge/first--timers--only-friendly-blue.svg)](https://www.firsttimersonly.com/)
[![Open Source Helpers](https://www.codetriage.com/freecodecamp/freecodecamp/badges/users.svg)](https://www.codetriage.com/freecodecamp/freecodecamp)
[![Setup Automated](https://img.shields.io/badge/setup-automated-blue?logo=gitpod)](https://gitpod.io/from-referrer/)
[![Discord](https://img.shields.io/discord/692816967895220344?logo=discord&amp;label=Discord&amp;color=5865F2)](https://discord.gg/PRyKn3Vbay)

## freeCodeCamp.org&#039;s open-source codebase and curriculum

[freeCodeCamp.org](https://www.freecodecamp.org) is a friendly community where you can learn to code for free. It is run by a [donor-supported 501(c)(3) charity](https://www.freecodecamp.org/donate) to help millions of busy adults transition into tech. Our community has already helped more than 40,000 people get their first developer job.

Our full-stack web development and machine learning curriculum is completely free and self-paced. We have thousands of interactive coding challenges to help you expand your skills.

## Table of Contents

- [Certifications](#certifications)
- [The Learning Platform](#the-learning-platform)
- [Reporting Bugs and Issues](#reporting-bugs-and-issues)
- [Reporting Security Issues and Responsible Disclosure](#reporting-security-issues-and-responsible-disclosure)
- [Contributing](#contributing)
- [Platform, Build and Deployment Status](#platform-build-and-deployment-status)
- [License](#license)

### Certifications

freeCodeCamp.org offers several free developer certifications. Each of these certifications involves building 5 required web app projects, along with hundreds of optional coding challenges to help you prepare for those projects. We estimate that each certification will take a beginner programmer around 300 hours to earn.

Each of these 50 projects in the freeCodeCamp.org curriculum has its own agile user stories and automated tests. These help you build up your project incrementally and ensure you&#039;ve fulfilled all the user stories before you submit it.

You can pull in these test suites through [freeCodeCamp&#039;s CDN](https://cdn.freecodecamp.org/testable-projects-fcc/v1/bundle.js). This means you can build these projects on websites like CodePen and Replit - or even on your local computer&#039;s development environment.

Once you&#039;ve earned a certification, you will always have it. You will always be able to link to it from your LinkedIn or resume. And when your prospective employers or freelance clients click that link, they&#039;ll see a verified certification specific to you.

The one exception to this is if we discover violations of our [Academic Honesty Policy](https://www.freecodecamp.org/news/academic-honesty-policy/). When we catch people unambiguously plagiarizing (submitting other people&#039;s code or projects as their own without citation), we do what all rigorous institutions of learning should do - we revoke their certifications and ban those people.

Here are our twelve core certifications:

#### 1. [Responsive Web Design Certification](https://www.freecodecamp.org/learn/2022/responsive-web-design/)

- [Learn HTML by Building a Cat Photo App](https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-html-by-building-a-cat-photo-app)
- [Learn Basic CSS by Building a Cafe Menu](https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-basic-css-by-building-a-cafe-menu)
- [Learn CSS Colors by Building a Set of Colored Markers](https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-css-colors-by-building-a-set-of-colored-markers)
- [Learn HTML Forms by Building a Registration Form](https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-html-forms-by-building-a-registration-form)
- [Learn the CSS Box Model by Building a Rothko Painting](https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-the-css-box-model-by-building-a-rothko-painting)
- [Learn CSS Flexbox by Building a Photo Gallery](https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-css-flexbox-by-building-a-photo-gallery)
- [Learn Typography by Building a Nutrition Label](https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-typography-by-building-a-nutrition-label)
- [Learn Accessibility by Building a Quiz](https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-accessibility-by-building-a-quiz)
- [Learn More About CSS Pseudo Selectors by Building A Balance Sheet](https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-more-about-css-pseudo-selectors-by-building-a-balance-sheet)
- [Learn Intermediate CSS by Building a Cat Painting](https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-intermediate-css-by-building-a-cat-painting)
- [Learn Responsive Web Design by Building a Piano](https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-responsive-web-design-by-building-a-piano)
- [Learn CSS Variables by Building a City Skyline](https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-css-variables-by-building-a-city-skyline)
- [Learn CSS Grid by Building a Magazine](https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-css-grid-by-building-a-magazine)
- [Learn CSS Transforms by Building a Penguin](https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-css-transforms-by-building-a-penguin)
- [Learn CSS Animations by Building a Ferris Wheel](https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-css-animation-by-building-a-ferris-wheel)
  &lt;br /&gt;
  &lt;br /&gt;
  **Projects**: [Survey Form](https://www.freecodecamp.org/learn/2022/responsive-web-design/build-a-survey-form-project/build-a-survey-form), [Tribute Page](https://www.freecodecamp.org/learn/2022/responsive-web-design/build-a-tribute-page-project/build-a-tribute-page), [Technical Documentation Page](https://www.freecodecamp.org/learn/2022/responsive-web-design/build-a-technical-documentation-page-project/build-a-technical-documentation-page), [Product Landing Page](https://www.freecodecamp.org/learn/2022/responsive-web-design/build-a-product-landing-page-project/build-a-product-landing-page), [Personal Portfolio Webpage](https://www.freecodecamp.org/learn/2022/responsive-web-design/build-a-personal-portfolio-webpage-project/build-a-personal-portfolio-webpage)

#### 2. [JavaScript Algorithms and Data Structures Certification](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/)

- [Learn Introductory JavaScript by Building a Pyramid Generator](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-introductory-javascript-by-building-a-pyramid-generator)
- [Learn Basic JavaScript by Building a Role Playing Game](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-basic-javascript-by-building-a-role-playing-game)
- [Learn Form Validation by Building a Calorie Counter](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-form-validation-by-building-a-calorie-counter)
- [Learn Basic String and Array Methods by Building a Music Player](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-basic-string-and-array-methods-by-building-a-music-player)
- [Learn the Date Object by Building a Date Formatter](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-the-date-object-by-building-a-date-formatter)
- [Learn Modern JavaScript Methods By Building Football Team Cards](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-modern-javascript-methods-by-building-football-team-cards)
- [Learn localStorage by Building a Todo App](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-localstorage-by-building-a-todo-app)
- [Learn Recursion by Building a Decimal to Binary Converter](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-recursion-by-building-a-decimal-to-binary-converter)
- [Learn Basic Algorithmic Thinking by Building a Number Sorter](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-basic-algorithmic-thinking-by-building-a-number-sorter)
- [Learn Advanced Array Methods by Building a Statistics Calculator](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-advanced-array-methods-by-building-a-statistics-calculator)
- [Learn Functional Programming by Building a Spreadsheet](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-functional-programming-by-building-a-spreadsheet)
- [Learn Regular Expressions by Building a Spam Filter](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-regular-expressions-by-building-a-spam-filter)
- [Learn Basic OOP by Building a Shopping Cart](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-basic-oop-by-building-a-shopping-cart)
- [Learn Intermediate OOP by Building a Platformer Game](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-intermediate-oop-by-building-a-platformer-game)
- [Learn Intermediate Algorithmic Thinking by Building a Dice Game](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#review-algorithmic-thinking-by-building-a-dice-game)
- [Learn Fetch and Promises By Building an fCC Authors Page](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-fetch-and-promises-by-building-an-fcc-authors-page)
- [Learn Asynchronous Programming by Building an fCC Forum Leaderboard](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-asynchronous-programming-by-building-an-fcc-forum-leaderboard)
  &lt;br /&gt;
  &lt;br /&gt;
  **Projects**: [Palindrome Checker](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/build-a-palindrome-checker-project/build-a-palindrome-checker), [Roman Numeral Converter](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/build-a-roman-numeral-converter-project/build-a-roman-numeral-converter), [Telephone Number Validator](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/build-a-telephone-number-validator-project/build-a-telephone-number-validator), [Cash Register](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/build-a-cash-register-project/build-a-cash-register), [RPG Creature Search App](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/build-an-rpg-creature-search-app-project/build-an-rpg-creature-search-app)

#### 3. [Front End Libraries Certification](https://www.freecodecamp.org/learn/front-end-development-libraries/)

- [Bootstrap](https://www.freecodecamp.org/learn/front-end-development-libraries/#bootstrap)
- [jQuery](https://www.freecodecamp.org/learn/front-end-development-libraries/#jquery)
- [Sass](https://www.freecodecamp.org/learn/front-end-development-libraries/#sass)
- [React](https://www.freecodecamp.org/learn/front-end-development-libraries/#react)
- [Redux](https://www.freecodecamp.org/learn/front-end-development-libraries/#redux)
- [React and Redux](https://www.freecodecamp.org/learn/front-end-development-libraries/#react-and-redux)
  &lt;br /&gt;
  &lt;br /&gt;
  **Projects**: [Random Quote Machine](https://www.freecodecamp.org/learn/front-end-development-libraries/front-end-development-libraries-projects/build-a-random-quote-machine), [Markdown Previewer](https://www.freecodecamp.org/learn/front-end-development-libraries/front-end-development-libraries-projects/build-a-markdown-previewer), [Drum Machine](https://www.freecodecamp.org/learn/front-end-development-libraries/front-end-development-libraries-projects/build-a-drum-machine), [JavaScript Calculator](https://www.freecodecamp.org/learn/front-end-development-libraries/front-end-development-libraries-projects/build-a-javascript-calculator), [25 + 5 Clock](https://www.freecodecamp.org/learn/front-end-development-libraries/front-end-development-libraries-projects/build-a-25--5-clock)

#### 4. [Data Visualization Certification](https://www.freecodecamp.org/learn/data-visualization/)

- [Data Visualization with D3](https://www.freecodecamp.org/learn/data-visualization/#data-visualization-with-d3)
- [JSON APIs and Ajax](https://www.freecodecamp.org/learn/data-visualization/#json-apis-and-ajax)
  &lt;br /&gt;
  &lt;br /&gt;
  **Projects**: [Bar Chart](https://www.freecodecamp.org/learn/data-visualization/data-visualization-projects/visualize-data-with-a-bar-chart), [Scatterplot Graph](https://www.freecodecamp.org/learn/data-visualization/data-visualization-projects/visualize-data-with-a-scatterplot-graph), [Heat Map](https://www.freecodecamp.org/learn/data-visualization/data-visualization-projects/visualize-data-with-a-heat-map), [Choropleth Map](https://www.freecodecamp.org/learn/data-visualization/data-visualization-projects/visualize-data-with-a-choropleth-map), [Treemap Diagram](https://www.freecodecamp.org/learn/data-visualization/data-visualization-projects/visualize-data-with-a-treemap-diagram)

#### 5. [Relational Database](https://www.freecodecamp.org/learn/relational-database/)

- [Learn Bash by Building a Boilerplate](https://www.freecodecamp.org/learn/relational-database/#learn-bash-by-building-a-boilerplate)
- [Learn Relational Databases by Building a Database of Video Game Characters](https://www.freecodecamp.org/learn/relational-database/#learn-relational-databases-by-building-a-database-of-video-game-characters)
- [Learn Bash Scripting by Building Five Programs](https://www.freecodecamp.org/learn/relational-database/#learn-bash-scripting-by-building-five-programs)
- [Learn SQL by Building a Student Database: Part 1](https://www.freecodecamp.org/learn/relational-database/#learn-sql-by-building-a-student-database-part-1)
- [Learn SQL by Building a Student Database: Part 2](https://www.freecodecamp.org/learn/relational-database/#learn-sql-by-building-a-student-database-part-2)
- [Learn Advanced Bash by Building a Kitty Ipsum Translator](https://www.freecodecamp.org/learn/relational-database/#learn-advanced-bash-by-building-a-kitty-ipsum-translator)
- [Learn Bash and SQL by Building a Bike Rental Shop](https://www.freecodecamp.org/learn/relational-database/#learn-bash-and-sql-by-building-a-bike-rental-shop)
- [Learn Nano by Building a Castle](https://www.freecodecamp.org/learn/relational-database/#learn-nano-by-building-a-castle)
- [Learn Git by Building an SQL Reference Object](https://www.freecodecamp.org/learn/relational-database/#learn-git-by-building-an-sql-reference-object)
  &lt;br /&gt;
  &lt;br /&gt;
  **Projects**: [Salon Appointment Scheduler](https://www.freecodecamp.org/learn/relational-database/#build-a-salon-appointment-scheduler-project), [Celestial Bodies Database](https://www.freecodecamp.org/learn/relational-database/#build-a-celestial-bodies-database-project), [Periodic Table Database](https://www.freecodecamp.org/learn/relational-database/#build-a-periodic-table-database-project), [Number Guessing Game](https://www.freecodecamp.org/learn/relational-database/#build-a-number-guessing-game-project), [World Cup Database](https://www.freecodecamp.org/learn/relational-database/#build-a-world-cup-database-project)

#### 6. [Back End Development and APIs Certification](https://www.freecodecamp.org/learn/back-end-development-and-apis/)

- [Managing Packages with Npm](https://www.freecodecamp.org/learn/back-end-development-and-apis/#managing-packages-with-npm)
- [Basic Node and Express](https://www.freecodecamp.org/learn/back-end-development-and-apis/#basic-node-and-express)
- [MongoDB and Mongoose](https://www.freecodecamp.org/learn/back-end-development-and-apis/#mongodb-and-mongoose)
  &lt;br /&gt;
  &lt;br /&gt;
  **Projects**: [Timestamp Microservice](https://www.freecodecamp.org/learn/back-end-development-and-apis/back-end-development-and-apis-projects/timestamp-microservice), [Request Header Parser](https://www.freecodecamp.org/learn/back-end-development-and-apis/back-end-development-and-apis-projects/request-header-parser-microservice), [URL Shortener](https://www.freecodecamp.org/learn/back-end-development-and-apis/back-end-development-and-apis-projects/url-shortener-microservice), [Exercise Tracker](https://www.freecodecamp.org/learn/back-end-development-and-apis/back-end-development-and-apis-projects/exercise-tracker), [File Metadata Microservice](https://www.freecodecamp.org/learn/back-end-development-and-apis/back-end-development-and-apis-projects/file-metadata-microservice)

#### 7. [Quality Assurance Certification](https://www.freecodecamp.org/learn/quality-assurance/)

- [Quality Assurance and Testing with Chai](https://www.freecodecamp.org/learn/quality-assurance/#quality-assurance-and-testing-with-chai)
- [Advanced Node and Express](https://www.freecodecamp.org/learn/quality-assurance/#advanced-node-and-express)
  &lt;br /&gt;
  &lt;br /&gt;
  **Projects**: [Metric-Imperial Converter](https://www.freecodecamp.org/learn/quality-assurance/quality-assurance-projects/metric-imperial-converter), [Issue Tracker](https://www.freecodecamp.org/learn/quality-assurance/quality-assurance-projects/issue-tracker), [Personal Library](https://www.freecodecamp.org/learn/quality-assurance/quality-assurance-projects/personal-library), [Sudoku Solver](https://www.freecodecamp.org/learn/quality-assurance/quality-assurance-projects/sudoku-solver), [American British Translator](https://www.freecodecamp.org/learn/quality-assurance/quality-assurance-projects/american-british-translator)

#### 8. [Scientific Computing with Python Certification](https://www.freecodecamp.org/learn/scientific-computing-with-python/)

- [Learn String Manipulation by Building a Cipher](https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-string-manipulation-by-building-a-cipher)
- [Learn How to Work with Numbers and Strings by Implementing the Luhn Algorithm](https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-how-to-work-with-numbers-and-strings-by-implementing-the-luhn-algorithm)
- [Learn Lambda Functions by Building an Expense Tracker](https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-lambda-functions-by-building-an-expense-tracker)
- [Learn List Comprehension by Building a Case Converter Program](https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-list-comprehension-by-building-a-case-converter-program)
- [Learn the Bisection Method by Finding the Square Root of a Number](https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-the-bisection-method-by-finding-the-square-root-of-a-number)
- [Learn Regular Expressions by Building a Password Generator](https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-regular-expressions-by-building-a-password-generator)
- [Learn Algorithm Design by Building a Shortest Path Algorithm](https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-algorithm-design-by-building-a-shortest-path-algorithm)
- [Learn Recursion by Solving the Tower of Hanoi Puzzle](https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-recursion-by-solving-the-tower-of-hanoi-puzzle)
- [Learn Data Structures by Building the Merge Sort Algorithm](https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-data-structures-by-building-the-merge-sort-algorithm)
- [Learn Classes and Objects by Building a Sudoku Solver](https://www.freecodecamp.org/learn/scie

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[colinhacks/zod]]></title>
            <link>https://github.com/colinhacks/zod</link>
            <guid>https://github.com/colinhacks/zod</guid>
            <pubDate>Sun, 18 May 2025 00:04:53 GMT</pubDate>
            <description><![CDATA[TypeScript-first schema validation with static type inference]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/colinhacks/zod">colinhacks/zod</a></h1>
            <p>TypeScript-first schema validation with static type inference</p>
            <p>Language: TypeScript</p>
            <p>Stars: 37,770</p>
            <p>Forks: 1,425</p>
            <p>Stars today: 20 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;https://raw.githubusercontent.com/colinhacks/zod/main/logo.svg&quot; width=&quot;200px&quot; align=&quot;center&quot; alt=&quot;Zod logo&quot; /&gt;
  &lt;h1 align=&quot;center&quot;&gt;Zod&lt;/h1&gt;
  &lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://zod.dev&quot;&gt;zod.dev&lt;/a&gt;
  &lt;br/&gt;
    TypeScript-first schema validation with static type inference
  &lt;/p&gt;
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
&lt;a href=&quot;https://github.com/colinhacks/zod/actions?query=branch%3Amain&quot;&gt;&lt;img src=&quot;https://github.com/colinhacks/zod/actions/workflows/test.yml/badge.svg?event=push&amp;branch=main&quot; alt=&quot;Zod CI status&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://twitter.com/colinhacks&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/created%20by-@colinhacks-4BBAAB.svg&quot; alt=&quot;Created by Colin McDonnell&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opensource.org/licenses/MIT&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/colinhacks/zod&quot; alt=&quot;License&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://www.npmjs.com/package/zod&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dw/zod.svg&quot; alt=&quot;npm&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/colinhacks/zod&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/colinhacks/zod&quot; alt=&quot;stars&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://zod.dev&quot;&gt;Website&lt;/a&gt;
  &lt;span&gt;&amp;nbsp;&amp;nbsp;‚Ä¢&amp;nbsp;&amp;nbsp;&lt;/span&gt;
  &lt;a href=&quot;https://discord.gg/RcG33DQJdf&quot;&gt;Discord&lt;/a&gt;
  &lt;span&gt;&amp;nbsp;&amp;nbsp;‚Ä¢&amp;nbsp;&amp;nbsp;&lt;/span&gt;
  &lt;a href=&quot;https://twitter.com/colinhacks&quot;&gt;ùïè&lt;/a&gt;
  &lt;span&gt;&amp;nbsp;&amp;nbsp;‚Ä¢&amp;nbsp;&amp;nbsp;&lt;/span&gt;
  &lt;a href=&quot;https://bsky.app/profile/zod.dev&quot;&gt;Bluesky&lt;/a&gt;
  &lt;br /&gt;
&lt;/div&gt;

&lt;br/&gt;&lt;br/&gt;

&lt;table align=&quot;center&quot; style=&quot;justify-content:center;align-items:center;display:flex;&quot;&gt;&lt;td&gt;
  &lt;p align=&quot;center&quot;&gt;Zod 4 is now in beta!
  &lt;br/&gt;
  &lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://v4.zod.dev/v4&quot;&gt;Read the announcement üëâ&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/table&gt;

&lt;br/&gt;
&lt;br/&gt;

&lt;h2 align=&quot;center&quot;&gt;Featured sponsor: Jazz&lt;/h2&gt;

&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://jazz.tools/?utm_source=zod&quot;&gt;
    &lt;picture width=&quot;95%&quot; &gt;
      &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://i.imgur.com/w1GE8ao.png&quot;&gt;
      &lt;img alt=&quot;jazz logo&quot; src=&quot;https://i.imgur.com/w1GE8ao.png&quot; width=&quot;95%&quot;&gt;
    &lt;/picture&gt;
  &lt;/a&gt;
  &lt;br/&gt;
  &lt;p&gt;&lt;sub&gt;Learn more about &lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;mailto:sponsorship@colinhacks.com&quot;&gt;featured sponsorships&lt;/a&gt;&lt;/sub&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;!-- &lt;hr/&gt; --&gt;
&lt;br/&gt;
&lt;br/&gt;

## Table of contents

&gt; These docs have been translated into [Chinese](./README_ZH.md) and [Korean](./README_KO.md).

- [Table of contents](#table-of-contents)
- [Introduction](#introduction)
  - [Sponsors](#sponsors)
    - [Platinum](#platinum)
    - [Gold](#gold)
    - [Silver](#silver)
    - [Bronze](#bronze)
    - [Copper](#copper)
  - [Ecosystem](#ecosystem)
    - [Resources](#resources)
    - [API libraries](#api-libraries)
    - [Form integrations](#form-integrations)
    - [Zod to X](#zod-to-x)
    - [X to Zod](#x-to-zod)
    - [Mocking](#mocking)
    - [Powered by Zod](#powered-by-zod)
    - [Utilities for Zod](#utilities-for-zod)
- [Installation](#installation)
  - [Requirements](#requirements)
  - [From `npm`](#from-npm)
- [Basic usage](#basic-usage)
- [Primitives](#primitives)
- [Coercion for primitives](#coercion-for-primitives)
- [Literals](#literals)
- [Strings](#strings)
  - [Datetimes](#datetimes)
  - [Dates](#dates)
  - [Times](#times)
  - [IP addresses](#ip-addresses)
  - [IP ranges](#ip-ranges-cidr)
- [Numbers](#numbers)
- [BigInts](#bigints)
- [NaNs](#nans)
- [Booleans](#booleans)
- [Dates](#dates-1)
- [Zod enums](#zod-enums)
- [Native enums](#native-enums)
- [Optionals](#optionals)
- [Nullables](#nullables)
- [Objects](#objects)
  - [`.shape`](#shape)
  - [`.keyof`](#keyof)
  - [`.extend`](#extend)
  - [`.merge`](#merge)
  - [`.pick/.omit`](#pickomit)
  - [`.partial`](#partial)
  - [`.deepPartial`](#deeppartial)
  - [`.required`](#required)
  - [`.passthrough`](#passthrough)
  - [`.strict`](#strict)
  - [`.strip`](#strip)
  - [`.catchall`](#catchall)
- [Arrays](#arrays)
  - [`.element`](#element)
  - [`.nonempty`](#nonempty)
  - [`.min/.max/.length`](#minmaxlength)
- [Tuples](#tuples)
- [Unions](#unions)
- [Discriminated unions](#discriminated-unions)
- [Records](#records)
  - [Record key type](#record-key-type)
- [Maps](#maps)
- [Sets](#sets)
- [Intersections](#intersections)
- [Recursive types](#recursive-types)
  - [ZodType with ZodEffects](#zodtype-with-zodeffects)
  - [JSON type](#json-type)
  - [Cyclical objects](#cyclical-objects)
- [Promises](#promises)
- [Instanceof](#instanceof)
- [Functions](#functions)
- [Preprocess](#preprocess)
- [Custom schemas](#custom-schemas)
- [Schema methods](#schema-methods)
  - [`.parse`](#parse)
  - [`.parseAsync`](#parseasync)
  - [`.safeParse`](#safeparse)
  - [`.safeParseAsync`](#safeparseasync)
  - [`.refine`](#refine)
    - [Arguments](#arguments)
    - [Customize error path](#customize-error-path)
    - [Asynchronous refinements](#asynchronous-refinements)
    - [Relationship to transforms](#relationship-to-transforms)
  - [`.superRefine`](#superrefine)
    - [Abort early](#abort-early)
    - [Type refinements](#type-refinements)
  - [`.transform`](#transform)
    - [Chaining order](#chaining-order)
    - [Validating during transform](#validating-during-transform)
    - [Relationship to refinements](#relationship-to-refinements)
    - [Async transforms](#async-transforms)
  - [`.default`](#default)
  - [`.describe`](#describe)
  - [`.catch`](#catch)
  - [`.optional`](#optional)
  - [`.nullable`](#nullable)
  - [`.nullish`](#nullish)
  - [`.array`](#array)
  - [`.promise`](#promise)
  - [`.or`](#or)
  - [`.and`](#and)
  - [`.brand`](#brand)
  - [`.readonly`](#readonly)
  - [`.pipe`](#pipe)
    - [You can use `.pipe()` to fix common issues with `z.coerce`.](#you-can-use-pipe-to-fix-common-issues-with-zcoerce)
- [Guides and concepts](#guides-and-concepts)
  - [Type inference](#type-inference)
  - [Writing generic functions](#writing-generic-functions)
    - [Constraining allowable inputs](#constraining-allowable-inputs)
  - [Error handling](#error-handling)
  - [Error formatting](#error-formatting)
- [Comparison](#comparison)
  - [Joi](#joi)
  - [Yup](#yup)
  - [io-ts](#io-ts)
  - [Runtypes](#runtypes)
  - [Ow](#ow)
- [Changelog](#changelog)

&lt;br/&gt;

## Introduction

Zod is a TypeScript-first schema declaration and validation library. I&#039;m using the term &quot;schema&quot; to broadly refer to any data type, from a simple `string` to a complex nested object.

Zod is designed to be as developer-friendly as possible. The goal is to eliminate duplicative type declarations. With Zod, you declare a validator _once_ and Zod will automatically infer the static TypeScript type. It&#039;s easy to compose simpler types into complex data structures.

Some other great aspects:

- Zero dependencies
- Works in Node.js and all modern browsers
- Tiny: 8kb minified + zipped
- Immutable: methods (e.g. `.optional()`) return a new instance
- Concise, chainable interface
- Functional approach: [parse, don&#039;t validate](https://lexi-lambda.github.io/blog/2019/11/05/parse-don-t-validate/)
- Works with plain JavaScript too! You don&#039;t need to use TypeScript.

&lt;br/&gt;

## Sponsors

Sponsorship at any level is appreciated and encouraged. If you built a paid product using Zod, consider one of the [corporate tiers](https://github.com/sponsors/colinhacks).

&lt;br/&gt;

&lt;h3 align=&quot;center&quot;&gt;Platinum&lt;/h3&gt;

&lt;table align=&quot;center&quot; style=&quot;justify-content: center;align-items: center;display: flex;&quot;&gt;
  &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;
      &lt;p&gt;&lt;/p&gt;
      &lt;p&gt;
      &lt;a href=&quot;https://www.coderabbit.ai/&quot;&gt;
        &lt;picture height=&quot;80px&quot;&gt;
          &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://github.com/user-attachments/assets/eea24edb-ff20-4532-b57c-e8719f455d6d&quot;&gt;
          &lt;img alt=&quot;CodeRabbit logo&quot; height=&quot;80px&quot; src=&quot;https://github.com/user-attachments/assets/d791bc7d-dc60-4d55-9c31-97779839cb74&quot;&gt;
        &lt;/picture&gt;
      &lt;/a&gt;
      &lt;br  /&gt;
      Cut code review time &amp; bugs in half
      &lt;br/&gt;
      &lt;a href=&quot;https://www.coderabbit.ai/&quot; style=&quot;text-decoration:none;&quot;&gt;coderabbit.ai&lt;/a&gt;
      &lt;/p&gt;
      &lt;p&gt;&lt;/p&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

&lt;br/&gt;

&lt;h3 align=&quot;center&quot;&gt;Gold&lt;/h3&gt;

&lt;table align=&quot;center&quot; style=&quot;justify-content: center;align-items: center;display: flex;&quot;&gt;
  &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;
      &lt;p&gt;&lt;/p&gt;
      &lt;p&gt;
      &lt;a href=&quot;https://www.courier.com/?utm_source=zod&amp;utm_campaign=osssponsors&quot;&gt;
        &lt;picture height=&quot;62px&quot;&gt;
          &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://github.com/user-attachments/assets/6b09506a-78de-47e8-a8c1-792efe31910a&quot;&gt;
          &lt;img alt=&quot;Courier logo&quot; height=&quot;62px&quot; src=&quot;https://github.com/user-attachments/assets/6b09506a-78de-47e8-a8c1-792efe31910a&quot;&gt;
        &lt;/picture&gt;
      &lt;/a&gt;
      &lt;br  /&gt;
      The API platform for sending notifications
      &lt;br/&gt;
      &lt;a href=&quot;https://www.courier.com/?utm_source=zod&amp;utm_campaign=osssponsors&quot; style=&quot;text-decoration:none;&quot;&gt;courier.com&lt;/a&gt;
      &lt;/p&gt;
      &lt;p&gt;&lt;/p&gt;
    &lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;
      &lt;p&gt;&lt;/p&gt;
      &lt;p&gt;
      &lt;a href=&quot;https://liblab.com/?utm_source=zod&quot;&gt;
        &lt;picture height=&quot;62px&quot;&gt;
          &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://github.com/user-attachments/assets/34dfa1a2-ce94-46f4-8902-fbfac3e1a9bc&quot;&gt;
          &lt;img alt=&quot;LibLab&quot; height=&quot;62px&quot; src=&quot;https://github.com/user-attachments/assets/3de0b617-5137-49c4-b72d-a033cbe602d8&quot;&gt;
        &lt;/picture&gt;
      &lt;/a&gt;
      &lt;br  /&gt;
      Generate better SDKs for your APIs
      &lt;br/&gt;
      &lt;a href=&quot;https://liblab.com/?utm_source=zod&quot; style=&quot;text-decoration:none;&quot;&gt;liblab.com&lt;/a&gt;
      &lt;/p&gt;
      &lt;p&gt;&lt;/p&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;
      &lt;p&gt;&lt;/p&gt;
      &lt;p&gt;
      &lt;a href=&quot;https://neon.tech&quot;&gt;
        &lt;picture height=&quot;68px&quot;&gt;
          &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://github.com/user-attachments/assets/83b4b1b1-a9ab-4ae5-a632-56d282f0c444&quot;&gt;
          &lt;img alt=&quot;Neon&quot; height=&quot;68px&quot; src=&quot;https://github.com/user-attachments/assets/b5799fc8-81ff-4053-a1c3-b29adf85e7a1&quot;&gt;
        &lt;/picture&gt;
      &lt;/a&gt;
      &lt;br  /&gt;
      Serverless Postgres ‚Äî Ship faster
      &lt;br/&gt;
      &lt;a href=&quot;https://neon.tech&quot; style=&quot;text-decoration:none;&quot;&gt;neon.tech&lt;/a&gt;
      &lt;/p&gt;
      &lt;p&gt;&lt;/p&gt;
    &lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;
      &lt;p&gt;&lt;/p&gt;
      &lt;p&gt;
      &lt;a href=&quot;https://retool.com/?utm_source=github&amp;utm_medium=referral&amp;utm_campaign=zod&quot;&gt;
        &lt;picture height=&quot;45px&quot;&gt;
          &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://github.com/colinhacks/zod/assets/3084745/ac65013f-aeb4-48dd-a2ee-41040b69cbe6&quot;&gt;
          &lt;img alt=&quot;Retool&quot; height=&quot;45px&quot; src=&quot;https://github.com/colinhacks/zod/assets/3084745/5ef4c11b-efeb-4495-90a8-41b83f798600&quot;&gt;
        &lt;/picture&gt;
      &lt;/a&gt;
      &lt;br  /&gt;
      Build AI apps and workflows with &lt;a href=&quot;https://retool.com/products/ai?utm_source=github&amp;utm_medium=referral&amp;utm_campaign=zod&quot;&gt;Retool AI&lt;/a&gt;
      &lt;br/&gt;
      &lt;a href=&quot;https://retool.com/?utm_source=github&amp;utm_medium=referral&amp;utm_campaign=zod&quot; style=&quot;text-decoration:none;&quot;&gt;retool.com&lt;/a&gt;
      &lt;/p&gt;
      &lt;p&gt;&lt;/p&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;
      &lt;p&gt;&lt;/p&gt;
      &lt;p&gt;
      &lt;a href=&quot;https://stainless.com&quot;&gt;
        &lt;picture height=&quot;45px&quot;&gt;
          &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://github.com/colinhacks/zod/assets/3084745/f20759c1-3e51-49d0-a31e-bbc43abec665&quot;&gt;
          &lt;img alt=&quot;stainless&quot; height=&quot;45px&quot; src=&quot;https://github.com/colinhacks/zod/assets/3084745/e9444e44-d991-4bba-a697-dbcfad608e47&quot;&gt;
        &lt;/picture&gt;
      &lt;/a&gt;
      &lt;br  /&gt;
      Generate best-in-class SDKs
      &lt;br/&gt;
      &lt;a href=&quot;https://stainless.com&quot; style=&quot;text-decoration:none;&quot;&gt;stainless.com&lt;/a&gt;
      &lt;/p&gt;
      &lt;p&gt;&lt;/p&gt;
    &lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;
      &lt;p&gt;&lt;/p&gt;
      &lt;p&gt;
      &lt;a href=&quot;https://speakeasy.com/editor?utm_source=zod+docs&quot;&gt;
        &lt;picture height=&quot;40px&quot;&gt;
          &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://github.com/colinhacks/zod/assets/3084745/b1d86601-c7fb-483c-9927-5dc24ce8b737&quot;&gt;
          &lt;img alt=&quot;speakeasy&quot; height=&quot;40px&quot; src=&quot;https://github.com/colinhacks/zod/assets/3084745/647524a4-22bb-4199-be70-404207a5a2b5&quot;&gt;
        &lt;/picture&gt;
      &lt;/a&gt;
      &lt;br  /&gt;
      SDKs &amp; Terraform providers for your API
      &lt;br/&gt;
      &lt;a href=&quot;https://speakeasy.com/?utm_source=zod+docs&quot; style=&quot;text-decoration:none;&quot;&gt;speakeasy.com&lt;/a&gt;
      &lt;/p&gt;
      &lt;p&gt;&lt;/p&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

&lt;br/&gt;

&lt;h3 align=&quot;center&quot;&gt;Silver&lt;/h3&gt;

&lt;table align=&quot;center&quot; style=&quot;justify-content: center;align-items: center;display: flex;&quot;&gt;
  &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;
      &lt;img src=&quot;https://avatars.githubusercontent.com/u/72055470?s=200&amp;v=4&quot; height=&quot;50px;&quot; alt=&quot;Nitric&quot; /&gt;
      &lt;br /&gt;
      &lt;a style=&quot;text-decoration:none;&quot; href=&quot;https://nitric.io/&quot; target=&quot;_blank&quot;&gt;Nitric&lt;/a&gt;
    &lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;
      &lt;img src=&quot;https://avatars.githubusercontent.com/u/89474619?s=200&amp;v=4&quot; height=&quot;50px;&quot; alt=&quot;PropelAuth&quot; /&gt;
      &lt;br /&gt;
      &lt;a style=&quot;text-decoration:none;&quot; href=&quot;https://www.propelauth.com/&quot; target=&quot;_blank&quot;&gt;PropelAuth&lt;/a&gt;
    &lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;
      &lt;img src=&quot;https://avatars.githubusercontent.com/u/80861386?s=200&amp;v=4&quot; height=&quot;50px;&quot; alt=&quot;Cerbos&quot; /&gt;
      &lt;br /&gt;
      &lt;a style=&quot;text-decoration:none;&quot; href=&quot;https://cerbos.dev/&quot; target=&quot;_blank&quot;&gt;Cerbos&lt;/a&gt;
    &lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;
      &lt;img src=&quot;https://avatars.githubusercontent.com/u/301879?s=200&amp;v=4&quot; height=&quot;50px;&quot; alt=&quot;Scalar.com logo&quot; /&gt;
      &lt;br /&gt;
      &lt;a style=&quot;text-decoration:none;&quot; href=&quot;https://scalar.com/&quot; target=&quot;_blank&quot;&gt;Scalar&lt;/a&gt;
    &lt;/td&gt;
    &lt;/tr&gt;&lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;
      &lt;img src=&quot;https://avatars.githubusercontent.com/u/95297378?s=200&amp;v=4&quot; height=&quot;50px;&quot; alt=&quot;Trigger.dev logo&quot; /&gt;
      &lt;br /&gt;
      &lt;a style=&quot;text-decoration:none;&quot; href=&quot;https://trigger.dev&quot; target=&quot;_blank&quot;&gt;Trigger.dev&lt;/a&gt;
    &lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;
      &lt;img src=&quot;https://avatars.githubusercontent.com/u/125754?s=200&amp;v=4&quot; height=&quot;50px;&quot; alt=&quot;Transloadit logo&quot; /&gt;
      &lt;br /&gt;
      &lt;a style=&quot;text-decoration:none;&quot; href=&quot;https://transloadit.com/?utm_source=zod&amp;utm_medium=refe
    rral&amp;utm_campaign=sponsorship&amp;utm_content=github&quot; target=&quot;_blank&quot;&gt;Transloadit&lt;/a&gt;
    &lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;
      &lt;img src=&quot;https://avatars.githubusercontent.com/u/107880645?s=200&amp;v=4&quot; height=&quot;50px;&quot; alt=&quot;Infisical logo&quot; /&gt;
      &lt;br /&gt;
      &lt;a style=&quot;text-decoration:none;&quot; href=&quot;https://infisical.com&quot; target=&quot;_blank&quot;&gt;Infisical&lt;/a&gt;
    &lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;
      &lt;img src=&quot;https://avatars.githubusercontent.com/u/91036480?s=200&amp;v=4&quot; height=&quot;50px;&quot; alt=&quot;Whop logo&quot; /&gt;
      &lt;br /&gt;
      &lt;a style=&quot;text-decoration:none;&quot; href=&quot;https://whop.com/&quot; target=&quot;_blank&quot;&gt;Whop&lt;/a&gt;
    &lt;/td&gt;
    &lt;/tr&gt;&lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;
      &lt;img src=&quot;https://avatars.githubusercontent.com/u/36402888?s=200&amp;v=4&quot; height=&quot;50px;&quot; alt=&quot;CryptoJobsList logo&quot; /&gt;
      &lt;br /&gt;
      &lt;a style=&quot;text-decoration:none;&quot; href=&quot;https://cryptojobslist.com/&quot; target=&quot;_blank&quot;&gt;CryptoJobsList&lt;/a&gt;
    &lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;
      &lt;img src=&quot;https://avatars.githubusercontent.com/u/70170949?s=200&amp;v=4&quot; height=&quot;50px;&quot; alt=&quot;Plain logo&quot; /&gt;
      &lt;br /&gt;
      &lt;a style=&quot;text-decoration:none;&quot; href=&quot;https://plain.com/&quot; target=&quot;_blank&quot;&gt;Plain.&lt;/a&gt;
    &lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;
      &lt;img src=&quot;https://avatars.githubusercontent.com/u/78935958?s=200&amp;v=4&quot; height=&quot;50px;&quot; alt=&quot;Inngest logo&quot; /&gt;
      &lt;br /&gt;
      &lt;a style=&quot;text-decoration:none;&quot; href=&quot;https://inngest.com/&quot; target=&quot;_blank&quot;&gt;Inngest&lt;/a&gt;
    &lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;
      &lt;img src=&quot;https://avatars.githubusercontent.com/u/13880908?s=200&amp;v=4&quot; height=&quot;50px;&quot; alt=&quot;Storyblok CMS&quot; /&gt;
      &lt;br /&gt;
      &lt;a style=&quot;text-decoration:none;&quot; href=&quot;https://storyblok.com/&quot; target=&quot;_blank&quot;&gt;Storyblok&lt;/a&gt;
    &lt;/td&gt;
    &lt;/tr&gt;&lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;
      &lt;img src=&quot;https://avatars.githubusercontent.com/u/16199997?s=200&amp;v=4&quot; height=&quot;50px;&quot; alt=&quot;Mux logo&quot; /&gt;
      &lt;br /&gt;
      &lt;a style=&quot;text-decoration:none;&quot; href=&quot;https://mux.link/zod&quot; target=&quot;_blank&quot;&gt;Mux&lt;/a&gt;
    &lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;
      &lt;img src=&quot;https://avatars.githubusercontent.com/u/76428554?s=200&amp;v=4&quot; height=&quot;50px;&quot; alt=&quot;Cybozu logo&quot; /&gt;
      &lt;br /&gt;
      &lt;a style=&quot;text-decoration:none;&quot; href=&quot;https://cybozu.co.jp/index.html&quot; target=&quot;_blank&quot;&gt;Cybozu&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

&lt;br/&gt;

&lt;h3 align=&quot;center&quot;&gt;Bronze&lt;/h3&gt;

&lt;table align=&quot;center&quot; style=&quot;justify-content: center;align-items: center;display: flex;&quot;&gt;
  &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;
      &lt;a href=&quot;https://www.val.town/&quot;&gt;
        &lt;picture width=&quot;100%&quot; height=&quot;40px&quot;&gt;
          &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://github.com/user-attachments/assets/36961d2e-d92e-42af-9031-a41885ece5f4&quot;&gt;
          &lt;img alt=&quot;val town logo&quot; src=&quot;https://github.com/user-attachments/assets/95305fc4-4da6-4bf8-aea4-bae8f5893e5d&quot; height=&quot;40px&quot;&gt;
        &lt;/picture&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;
      &lt;a href=&quot;https://www.route4me.com/&quot;&gt;
        &lt;img src=&quot;https://avatars.githubusercontent.com/u/7936820?s=200&amp;v=4&quot; height=&quot;40px;&quot; alt=&quot;route4me logo&quot; /&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;
      &lt;a href=&quot;https://encore.dev&quot;&gt;
        &lt;img src=&quot;https://github.com/colinhacks/zod/assets/3084745/5ad94e73-cd34-4957-9979-37da85fcf9cd&quot; height=&quot;40px;&quot; alt=&quot;Encore.dev logo&quot; /&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;
      &lt;a href=&quot;https://www.replay.io/&quot;&gt;
        &lt;img src=&quot;https://avatars.githubusercontent.com/u/60818315?s=200&amp;v=4&quot; height=&quot;40px;&quot; alt=&quot;Replay.io logo&quot; /&gt;
      &lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;
      &lt;a href=&quot;https://www.numeric.io&quot;&gt;
        &lt;img src=&quot;https://i.imgur.com/kTiLtZt.png&quot; height=&quot;40px;&quot; alt=&quot;Numeric logo&quot; /&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;
      &lt;a href=&quot;https://marcatopartners.com&quot;&gt;
        &lt;img src=&quot;https://avatars.githubusercontent.com/u/84106192?s=200&amp;v=4&quot; height=&quot;40px;&quot; alt=&quot;Marcato Partners&quot; /&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;
      &lt;a href=&quot;https://interval.com&quot;&gt;
        &lt;img src=&quot;https://avatars.githubusercontent.com/u/67802063?s=200&amp;v=4&quot; height=&quot;40px;&quot; alt=&quot;&quot; /&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;
      &lt;a href=&quot;https://seasoned.cc&quot;&gt;
        &lt;img src=&quot;https://avatars.githubusercontent.com/u/33913103?s=200&amp;v=4&quot; height=&quot;40px;&quot; alt=&quot;&quot; /&gt;
      &lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;
      &lt;a href=&quot;https://www.bamboocreative.nz/&quot;&gt;
        &lt;img src=&quot;https://avatars.githubusercontent.com/u/41406870?v=4&quot; height=&quot;40px;&quot; alt=&quot;Bamboo Creative logo&quot; /&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;
      &lt;a href=&quot;https://github.com/jasonLaster&quot;&gt;
        &lt;img src=&quot;https://avatars.githubusercontent.com/u/254562?v=4&quot; height=&quot;40px;&quot; alt=&quot;Jason Laster&quot; /&gt;
      &lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

&lt;!-- &lt;h3 align=&quot;center&quot;&gt;Bronze&lt;/h3&gt;

&lt;table align=&quot;center&quot; style=&quot;justify-content: center;align-items: center;display: flex;&quot;&gt;
  &lt;tr&gt;
    &lt;td&gt;Brandon Bayer&lt;/td&gt;
    &lt;td&gt;Ji≈ô√≠ Brabec&lt;/td&gt;
    &lt;td&gt;Alex Johansson&lt;/td&gt;
    &lt;td&gt;Fungible Systems&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Adaptable&lt;/td&gt;
    &lt;td&gt;Avana Wallet&lt;/td&gt;
    &lt;td&gt;Jason Lengstorf&lt;/td&gt;
    &lt;td&gt;Global Illumination, Inc.&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;MasterBorn&lt;/td&gt;
    &lt;td&gt;Ryan Palmer&lt;/td&gt;
    &lt;td&gt;Michael Sweeney&lt;/td&gt;
    &lt;td&gt;Nextbase&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Remotion&lt;/td&gt;
    &lt;td&gt;Connor Sinnott&lt;/td&gt;
    &lt;td&gt;Mohammad-Ali A&#039;r√¢bi&lt;/td&gt;
    &lt;td&gt;Supatool&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt; --&gt;

### Ecosystem

There are a growing number of tools that are built atop or support Zod natively! If you&#039;ve built a tool or library on top of Zod, tell me about it [on Twitter](https://twitter.com/colinhacks) or [start a Discussion](https://github.com/colinhacks/zod/discussions). I&#039;ll add it below and tweet it out.

#### Resources

- [Total TypeScript Zod Tutorial](https://www.totaltypescript.com/tutorials/zod) by [@mattpocockuk](https://twitter.com/mattpocockuk)
- [Fixing TypeScript&#039;s Blindspot: Runtime Typechecking](https://www.youtube.com/watch?v=rY_XqfSHock) by [@jherr](https://twitter.com/jherr)

#### API libraries

- [`tRPC`](https://github.com/trpc/trpc): Build end-to-end typesafe APIs without GraphQL.
- [`@anatine/zod-nestjs`](https://github.com/anatine/zod-pl

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[kortix-ai/suna]]></title>
            <link>https://github.com/kortix-ai/suna</link>
            <guid>https://github.com/kortix-ai/suna</guid>
            <pubDate>Sun, 18 May 2025 00:04:52 GMT</pubDate>
            <description><![CDATA[Suna - Open Source Generalist AI Agent]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/kortix-ai/suna">kortix-ai/suna</a></h1>
            <p>Suna - Open Source Generalist AI Agent</p>
            <p>Language: TypeScript</p>
            <p>Stars: 11,275</p>
            <p>Forks: 1,553</p>
            <p>Stars today: 59 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;

# Suna - Open Source Generalist AI Agent

(that acts on your behalf)

![Suna Screenshot](frontend/public/banner.png)

Suna is a fully open source AI assistant that helps you accomplish real-world tasks with ease. Through natural conversation, Suna becomes your digital companion for research, data analysis, and everyday challenges‚Äîcombining powerful capabilities with an intuitive interface that understands what you need and delivers results.

Suna&#039;s powerful toolkit includes seamless browser automation to navigate the web and extract data, file management for document creation and editing, web crawling and extended search capabilities, command-line execution for system tasks, website deployment, and integration with various APIs and services. These capabilities work together harmoniously, allowing Suna to solve your complex problems and automate workflows through simple conversations!

[![License](https://img.shields.io/badge/License-Apache--2.0-blue)](./license)
[![Discord Follow](https://dcbadge.limes.pink/api/server/Py6pCBUUPw?style=flat)](https://discord.gg/Py6pCBUUPw)
[![Twitter Follow](https://img.shields.io/twitter/follow/kortixai)](https://x.com/kortixai)
[![GitHub Repo stars](https://img.shields.io/github/stars/kortix-ai/suna)](https://github.com/kortix-ai/suna)
[![Issues](https://img.shields.io/github/issues/kortix-ai/suna)](https://github.com/kortix-ai/suna/labels/bug)

&lt;/div&gt;

## Table of Contents

- [Suna Architecture](#project-architecture)
  - [Backend API](#backend-api)
  - [Frontend](#frontend)
  - [Agent Docker](#agent-docker)
  - [Supabase Database](#supabase-database)
- [Use Cases](#use-cases)
- [Self-Hosting](#self-hosting)
- [Acknowledgements](#acknowledgements)
- [License](#license)

## Project Architecture

![Architecture Diagram](docs/images/diagram.png)

Suna consists of four main components:

### Backend API

Python/FastAPI service that handles REST endpoints, thread management, and LLM integration with Anthropic, and others via LiteLLM.

### Frontend

Next.js/React application providing a responsive UI with chat interface, dashboard, etc.

### Agent Docker

Isolated execution environment for every agent - with browser automation, code interpreter, file system access, tool integration, and security features.

### Supabase Database

Handles data persistence with authentication, user management, conversation history, file storage, agent state, analytics, and real-time subscriptions.

## Use Cases

1. **Competitor Analysis** ([Watch](https://www.suna.so/share/5ee791ac-e19c-4986-a61c-6d0659d0e5bc)) - _&quot;Analyze the market for my next company in the healthcare industry, located in the UK. Give me the major players, their market size, strengths, and weaknesses, and add their website URLs. Once done, generate a PDF report.&quot;_

2. **VC List** ([Watch](https://www.suna.so/share/804d20a3-cf1c-4adb-83bb-0e77cc6adeac)) - _&quot;Give me the list of the most important VC Funds in the United States based on Assets Under Management. Give me website URLs, and if possible an email to reach them out.&quot;_

3. **Looking for Candidates** ([Watch](https://www.suna.so/share/3ae581b0-2db8-4c63-b324-3b8d29762e74)) - _&quot;Go on LinkedIn, and find me 10 profiles available - they are not working right now - for a junior software engineer position, who are located in Munich, Germany. They should have at least one bachelor&#039;s degree in Computer Science or anything related to it, and 1-year of experience in any field/role.&quot;_

4. **Planning Company Trip** ([Watch](https://www.suna.so/share/725e64a0-f1e2-4bb6-8a1f-703c2833fd72)) - _&quot;Generate me a route plan for my company. We should go to California. We&#039;ll be in 8 people. Compose the trip from the departure (Paris, France) to the activities we can do considering that the trip will be 7 days long - departure on the 21st of Apr 2025. Check the weather forecast and temperature for the upcoming days, and based on that, you can plan our activities (outdoor vs indoor).&quot;_

5. **Working on Excel** ([Watch](https://www.suna.so/share/128f23a4-51cd-42a6-97a0-0b458b32010e)) - _&quot;My company asked me to set up an Excel spreadsheet with all the information about Italian lottery games (Lotto, 10eLotto, and Million Day). Based on that, generate and send me a spreadsheet with all the basic information (public ones).&quot;_

6. **Automate Event Speaker Prospecting** ([Watch](https://www.suna.so/share/7a7592ea-ed44-4c69-bcb5-5f9bb88c188c)) - _&quot;Find 20 AI ethics speakers from Europe who&#039;ve spoken at conferences in the past year. Scrapes conference sites, cross-references LinkedIn and YouTube, and outputs contact info + talk summaries.&quot;_

7. **Summarize and Cross-Reference Scientific Papers** ([Watch](https://www.suna.so/share/c2081b3c-786e-4e7c-9bf4-46e9b23bb662)) - _&quot;Research and compare scientific papers talking about Alcohol effects on our bodies during the last 5 years. Generate a report about the most important scientific papers talking about the topic I wrote before.&quot;_

8. **Research + First Contact Draft** ([Watch](https://www.suna.so/share/6b6296a6-8683-49e5-9ad0-a32952d12c44)) - _&quot;Research my potential customers (B2B) on LinkedIn. They should be in the clean tech industry. Find their websites and their email addresses. After that, based on the company profile, generate a personalized first contact email where I present my company which is offering consulting services to cleantech companies to maximize their profits and reduce their costs.&quot;_

9. **SEO Analysis** ([Watch](https://www.suna.so/share/43491cb0-cd6c-45f0-880c-66ddc8c4b842)) - _&quot;Based on my website suna.so, generate an SEO report analysis, find top-ranking pages by keyword clusters, and identify topics I&#039;m missing.&quot;_

10. **Generate a Personal Trip** ([Watch](https://www.suna.so/share/37b31907-8349-4f63-b0e5-27ca597ed02a)) - _&quot;Generate a personal trip to London, with departure from Bangkok on the 1st of May. The trip will last 10 days. Find an accommodation in the center of London, with a rating on Google reviews of at least 4.5. Find me interesting outdoor activities to do during the journey. Generate a detailed itinerary plan.&quot;_

11. **Recently Funded Startups** ([Watch](https://www.suna.so/share/8b2a897e-985a-4d5e-867b-15239274f764)) - _&quot;Go on Crunchbase, Dealroom, and TechCrunch, filter by Series A funding rounds in the SaaS Finance Space, and build a report with company data, founders, and contact info for outbound sales.&quot;_

12. **Scrape Forum Discussions** ([Watch](https://www.suna.so/share/7d7a5d93-a20d-48b0-82cc-e9a876e9fd04)) - _&quot;I need to find the best beauty centers in Rome, but I want to find them by using open forums that speak about this topic. Go on Google, and scrape the forums by looking for beauty center discussions located in Rome. Then generate a list of 5 beauty centers with the best comments about them.&quot;_

## Self-Hosting

Suna can be self-hosted on your own infrastructure using our setup wizard. For a comprehensive guide to self-hosting Suna, please refer to our [Self-Hosting Guide](./docs/SELF-HOSTING.md).

The setup process includes:

- Setting up a Supabase project for database and authentication
- Configuring Redis for caching and session management
- Setting up Daytona for secure agent execution
- Integrating with LLM providers (Anthropic, OpenAI, Groq, etc.)
- Configuring web search and scraping capabilities

### Quick Start

1. **Clone the repository**:

```bash
git clone https://github.com/kortix-ai/suna.git
cd suna
```

2. **Run the setup wizard**:

```bash
python setup.py
```

3. **Start or stop the containers**:

```bash
python start.py
```

### Manual Setup

See the [Self-Hosting Guide](./docs/SELF-HOSTING.md) for detailed manual setup instructions.

The wizard will guide you through all necessary steps to get your Suna instance up and running. For detailed instructions, troubleshooting tips, and advanced configuration options, see the [Self-Hosting Guide](./SELF-HOSTING.md).

## Contributing

We welcome contributions from the community! Please see our [Contributing Guide](./CONTRIBUTING.md) for more details.

## Acknowledgements

### Main Contributors

- [Adam Cohen Hillel](https://x.com/adamcohenhillel)
- [Dat-lequoc](https://x.com/datlqqq)
- [Marko Kraemer](https://twitter.com/markokraemer)

### Technologies

- [Daytona](https://daytona.io/) - Secure agent execution environment
- [Supabase](https://supabase.com/) - Database and authentication
- [Playwright](https://playwright.dev/) - Browser automation
- [OpenAI](https://openai.com/) - LLM provider
- [Anthropic](https://www.anthropic.com/) - LLM provider
- [Tavily](https://tavily.com/) - Search capabilities
- [Firecrawl](https://firecrawl.dev/) - Web scraping capabilities
- [RapidAPI](https://rapidapi.com/) - API services

## License

Kortix Suna is licensed under the Apache License, Version 2.0. See [LICENSE](./LICENSE) for the full license text.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[modelcontextprotocol/typescript-sdk]]></title>
            <link>https://github.com/modelcontextprotocol/typescript-sdk</link>
            <guid>https://github.com/modelcontextprotocol/typescript-sdk</guid>
            <pubDate>Sun, 18 May 2025 00:04:51 GMT</pubDate>
            <description><![CDATA[The official Typescript SDK for Model Context Protocol servers and clients]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/modelcontextprotocol/typescript-sdk">modelcontextprotocol/typescript-sdk</a></h1>
            <p>The official Typescript SDK for Model Context Protocol servers and clients</p>
            <p>Language: TypeScript</p>
            <p>Stars: 6,643</p>
            <p>Forks: 771</p>
            <p>Stars today: 26 stars today</p>
            <h2>README</h2><pre># MCP TypeScript SDK ![NPM Version](https://img.shields.io/npm/v/%40modelcontextprotocol%2Fsdk) ![MIT licensed](https://img.shields.io/npm/l/%40modelcontextprotocol%2Fsdk)

## Table of Contents

- [Overview](#overview)
- [Installation](#installation)
- [Quickstart](#quick-start)
- [What is MCP?](#what-is-mcp)
- [Core Concepts](#core-concepts)
  - [Server](#server)
  - [Resources](#resources)
  - [Tools](#tools)
  - [Prompts](#prompts)
- [Running Your Server](#running-your-server)
  - [stdio](#stdio)
  - [Streamable HTTP](#streamable-http)
  - [Testing and Debugging](#testing-and-debugging)
- [Examples](#examples)
  - [Echo Server](#echo-server)
  - [SQLite Explorer](#sqlite-explorer)
- [Advanced Usage](#advanced-usage)
  - [Dynamic Servers](#dynamic-servers)
  - [Low-Level Server](#low-level-server)
  - [Writing MCP Clients](#writing-mcp-clients)
  - [Proxy Authorization Requests Upstream](#proxy-authorization-requests-upstream)
  - [Backwards Compatibility](#backwards-compatibility)
- [Documentation](#documentation)
- [Contributing](#contributing)
- [License](#license)

## Overview

The Model Context Protocol allows applications to provide context for LLMs in a standardized way, separating the concerns of providing context from the actual LLM interaction. This TypeScript SDK implements the full MCP specification, making it easy to:

- Build MCP clients that can connect to any MCP server
- Create MCP servers that expose resources, prompts and tools
- Use standard transports like stdio and Streamable HTTP
- Handle all MCP protocol messages and lifecycle events

## Installation

```bash
npm install @modelcontextprotocol/sdk
```

## Quick Start

Let&#039;s create a simple MCP server that exposes a calculator tool and some data:

```typescript
import { McpServer, ResourceTemplate } from &quot;@modelcontextprotocol/sdk/server/mcp.js&quot;;
import { StdioServerTransport } from &quot;@modelcontextprotocol/sdk/server/stdio.js&quot;;
import { z } from &quot;zod&quot;;

// Create an MCP server
const server = new McpServer({
  name: &quot;Demo&quot;,
  version: &quot;1.0.0&quot;
});

// Add an addition tool
server.tool(&quot;add&quot;,
  { a: z.number(), b: z.number() },
  async ({ a, b }) =&gt; ({
    content: [{ type: &quot;text&quot;, text: String(a + b) }]
  })
);

// Add a dynamic greeting resource
server.resource(
  &quot;greeting&quot;,
  new ResourceTemplate(&quot;greeting://{name}&quot;, { list: undefined }),
  async (uri, { name }) =&gt; ({
    contents: [{
      uri: uri.href,
      text: `Hello, ${name}!`
    }]
  })
);

// Start receiving messages on stdin and sending messages on stdout
const transport = new StdioServerTransport();
await server.connect(transport);
```

## What is MCP?

The [Model Context Protocol (MCP)](https://modelcontextprotocol.io) lets you build servers that expose data and functionality to LLM applications in a secure, standardized way. Think of it like a web API, but specifically designed for LLM interactions. MCP servers can:

- Expose data through **Resources** (think of these sort of like GET endpoints; they are used to load information into the LLM&#039;s context)
- Provide functionality through **Tools** (sort of like POST endpoints; they are used to execute code or otherwise produce a side effect)
- Define interaction patterns through **Prompts** (reusable templates for LLM interactions)
- And more!

## Core Concepts

### Server

The McpServer is your core interface to the MCP protocol. It handles connection management, protocol compliance, and message routing:

```typescript
const server = new McpServer({
  name: &quot;My App&quot;,
  version: &quot;1.0.0&quot;
});
```

### Resources

Resources are how you expose data to LLMs. They&#039;re similar to GET endpoints in a REST API - they provide data but shouldn&#039;t perform significant computation or have side effects:

```typescript
// Static resource
server.resource(
  &quot;config&quot;,
  &quot;config://app&quot;,
  async (uri) =&gt; ({
    contents: [{
      uri: uri.href,
      text: &quot;App configuration here&quot;
    }]
  })
);

// Dynamic resource with parameters
server.resource(
  &quot;user-profile&quot;,
  new ResourceTemplate(&quot;users://{userId}/profile&quot;, { list: undefined }),
  async (uri, { userId }) =&gt; ({
    contents: [{
      uri: uri.href,
      text: `Profile data for user ${userId}`
    }]
  })
);
```

### Tools

Tools let LLMs take actions through your server. Unlike resources, tools are expected to perform computation and have side effects:

```typescript
// Simple tool with parameters
server.tool(
  &quot;calculate-bmi&quot;,
  {
    weightKg: z.number(),
    heightM: z.number()
  },
  async ({ weightKg, heightM }) =&gt; ({
    content: [{
      type: &quot;text&quot;,
      text: String(weightKg / (heightM * heightM))
    }]
  })
);

// Async tool with external API call
server.tool(
  &quot;fetch-weather&quot;,
  { city: z.string() },
  async ({ city }) =&gt; {
    const response = await fetch(`https://api.weather.com/${city}`);
    const data = await response.text();
    return {
      content: [{ type: &quot;text&quot;, text: data }]
    };
  }
);
```

### Prompts

Prompts are reusable templates that help LLMs interact with your server effectively:

```typescript
server.prompt(
  &quot;review-code&quot;,
  { code: z.string() },
  ({ code }) =&gt; ({
    messages: [{
      role: &quot;user&quot;,
      content: {
        type: &quot;text&quot;,
        text: `Please review this code:\n\n${code}`
      }
    }]
  })
);
```

## Running Your Server

MCP servers in TypeScript need to be connected to a transport to communicate with clients. How you start the server depends on the choice of transport:

### stdio

For command-line tools and direct integrations:

```typescript
import { McpServer } from &quot;@modelcontextprotocol/sdk/server/mcp.js&quot;;
import { StdioServerTransport } from &quot;@modelcontextprotocol/sdk/server/stdio.js&quot;;

const server = new McpServer({
  name: &quot;example-server&quot;,
  version: &quot;1.0.0&quot;
});

// ... set up server resources, tools, and prompts ...

const transport = new StdioServerTransport();
await server.connect(transport);
```

### Streamable HTTP

For remote servers, set up a Streamable HTTP transport that handles both client requests and server-to-client notifications.

#### With Session Management

In some cases, servers need to be stateful. This is achieved by [session management](https://modelcontextprotocol.io/specification/2025-03-26/basic/transports#session-management).

```typescript
import express from &quot;express&quot;;
import { randomUUID } from &quot;node:crypto&quot;;
import { McpServer } from &quot;@modelcontextprotocol/sdk/server/mcp.js&quot;;
import { StreamableHTTPServerTransport } from &quot;@modelcontextprotocol/sdk/server/streamableHttp.js&quot;;
import { isInitializeRequest } from &quot;@modelcontextprotocol/sdk/types.js&quot;



const app = express();
app.use(express.json());

// Map to store transports by session ID
const transports: { [sessionId: string]: StreamableHTTPServerTransport } = {};

// Handle POST requests for client-to-server communication
app.post(&#039;/mcp&#039;, async (req, res) =&gt; {
  // Check for existing session ID
  const sessionId = req.headers[&#039;mcp-session-id&#039;] as string | undefined;
  let transport: StreamableHTTPServerTransport;

  if (sessionId &amp;&amp; transports[sessionId]) {
    // Reuse existing transport
    transport = transports[sessionId];
  } else if (!sessionId &amp;&amp; isInitializeRequest(req.body)) {
    // New initialization request
    transport = new StreamableHTTPServerTransport({
      sessionIdGenerator: () =&gt; randomUUID(),
      onsessioninitialized: (sessionId) =&gt; {
        // Store the transport by session ID
        transports[sessionId] = transport;
      }
    });

    // Clean up transport when closed
    transport.onclose = () =&gt; {
      if (transport.sessionId) {
        delete transports[transport.sessionId];
      }
    };
    const server = new McpServer({
      name: &quot;example-server&quot;,
      version: &quot;1.0.0&quot;
    });

    // ... set up server resources, tools, and prompts ...

    // Connect to the MCP server
    await server.connect(transport);
  } else {
    // Invalid request
    res.status(400).json({
      jsonrpc: &#039;2.0&#039;,
      error: {
        code: -32000,
        message: &#039;Bad Request: No valid session ID provided&#039;,
      },
      id: null,
    });
    return;
  }

  // Handle the request
  await transport.handleRequest(req, res, req.body);
});

// Reusable handler for GET and DELETE requests
const handleSessionRequest = async (req: express.Request, res: express.Response) =&gt; {
  const sessionId = req.headers[&#039;mcp-session-id&#039;] as string | undefined;
  if (!sessionId || !transports[sessionId]) {
    res.status(400).send(&#039;Invalid or missing session ID&#039;);
    return;
  }
  
  const transport = transports[sessionId];
  await transport.handleRequest(req, res);
};

// Handle GET requests for server-to-client notifications via SSE
app.get(&#039;/mcp&#039;, handleSessionRequest);

// Handle DELETE requests for session termination
app.delete(&#039;/mcp&#039;, handleSessionRequest);

app.listen(3000);
```

#### Without Session Management (Stateless)

For simpler use cases where session management isn&#039;t needed:

```typescript
const app = express();
app.use(express.json());

app.post(&#039;/mcp&#039;, async (req: Request, res: Response) =&gt; {
  // In stateless mode, create a new instance of transport and server for each request
  // to ensure complete isolation. A single instance would cause request ID collisions
  // when multiple clients connect concurrently.
  
  try {
    const server = getServer(); 
    const transport: StreamableHTTPServerTransport = new StreamableHTTPServerTransport({
      sessionIdGenerator: undefined,
    });
    res.on(&#039;close&#039;, () =&gt; {
      console.log(&#039;Request closed&#039;);
      transport.close();
      server.close();
    });
    await server.connect(transport);
    await transport.handleRequest(req, res, req.body);
  } catch (error) {
    console.error(&#039;Error handling MCP request:&#039;, error);
    if (!res.headersSent) {
      res.status(500).json({
        jsonrpc: &#039;2.0&#039;,
        error: {
          code: -32603,
          message: &#039;Internal server error&#039;,
        },
        id: null,
      });
    }
  }
});

app.get(&#039;/mcp&#039;, async (req: Request, res: Response) =&gt; {
  console.log(&#039;Received GET MCP request&#039;);
  res.writeHead(405).end(JSON.stringify({
    jsonrpc: &quot;2.0&quot;,
    error: {
      code: -32000,
      message: &quot;Method not allowed.&quot;
    },
    id: null
  }));
});

app.delete(&#039;/mcp&#039;, async (req: Request, res: Response) =&gt; {
  console.log(&#039;Received DELETE MCP request&#039;);
  res.writeHead(405).end(JSON.stringify({
    jsonrpc: &quot;2.0&quot;,
    error: {
      code: -32000,
      message: &quot;Method not allowed.&quot;
    },
    id: null
  }));
});


// Start the server
const PORT = 3000;
app.listen(PORT, () =&gt; {
  console.log(`MCP Stateless Streamable HTTP Server listening on port ${PORT}`);
});

```

This stateless approach is useful for:

- Simple API wrappers
- RESTful scenarios where each request is independent
- Horizontally scaled deployments without shared session state

### Testing and Debugging

To test your server, you can use the [MCP Inspector](https://github.com/modelcontextprotocol/inspector). See its README for more information.

## Examples

### Echo Server

A simple server demonstrating resources, tools, and prompts:

```typescript
import { McpServer, ResourceTemplate } from &quot;@modelcontextprotocol/sdk/server/mcp.js&quot;;
import { z } from &quot;zod&quot;;

const server = new McpServer({
  name: &quot;Echo&quot;,
  version: &quot;1.0.0&quot;
});

server.resource(
  &quot;echo&quot;,
  new ResourceTemplate(&quot;echo://{message}&quot;, { list: undefined }),
  async (uri, { message }) =&gt; ({
    contents: [{
      uri: uri.href,
      text: `Resource echo: ${message}`
    }]
  })
);

server.tool(
  &quot;echo&quot;,
  { message: z.string() },
  async ({ message }) =&gt; ({
    content: [{ type: &quot;text&quot;, text: `Tool echo: ${message}` }]
  })
);

server.prompt(
  &quot;echo&quot;,
  { message: z.string() },
  ({ message }) =&gt; ({
    messages: [{
      role: &quot;user&quot;,
      content: {
        type: &quot;text&quot;,
        text: `Please process this message: ${message}`
      }
    }]
  })
);
```

### SQLite Explorer

A more complex example showing database integration:

```typescript
import { McpServer } from &quot;@modelcontextprotocol/sdk/server/mcp.js&quot;;
import sqlite3 from &quot;sqlite3&quot;;
import { promisify } from &quot;util&quot;;
import { z } from &quot;zod&quot;;

const server = new McpServer({
  name: &quot;SQLite Explorer&quot;,
  version: &quot;1.0.0&quot;
});

// Helper to create DB connection
const getDb = () =&gt; {
  const db = new sqlite3.Database(&quot;database.db&quot;);
  return {
    all: promisify&lt;string, any[]&gt;(db.all.bind(db)),
    close: promisify(db.close.bind(db))
  };
};

server.resource(
  &quot;schema&quot;,
  &quot;schema://main&quot;,
  async (uri) =&gt; {
    const db = getDb();
    try {
      const tables = await db.all(
        &quot;SELECT sql FROM sqlite_master WHERE type=&#039;table&#039;&quot;
      );
      return {
        contents: [{
          uri: uri.href,
          text: tables.map((t: {sql: string}) =&gt; t.sql).join(&quot;\n&quot;)
        }]
      };
    } finally {
      await db.close();
    }
  }
);

server.tool(
  &quot;query&quot;,
  { sql: z.string() },
  async ({ sql }) =&gt; {
    const db = getDb();
    try {
      const results = await db.all(sql);
      return {
        content: [{
          type: &quot;text&quot;,
          text: JSON.stringify(results, null, 2)
        }]
      };
    } catch (err: unknown) {
      const error = err as Error;
      return {
        content: [{
          type: &quot;text&quot;,
          text: `Error: ${error.message}`
        }],
        isError: true
      };
    } finally {
      await db.close();
    }
  }
);
```

## Advanced Usage

### Dynamic Servers

If you want to offer an initial set of tools/prompts/resources, but later add additional ones based on user action or external state change, you can add/update/remove them _after_ the Server is connected. This will automatically emit the corresponding `listChanged` notifications:

```ts
import { McpServer } from &quot;@modelcontextprotocol/sdk/server/mcp.js&quot;;
import { z } from &quot;zod&quot;;

const server = new McpServer({
  name: &quot;Dynamic Example&quot;,
  version: &quot;1.0.0&quot;
});

const listMessageTool = server.tool(
  &quot;listMessages&quot;,
  { channel: z.string() },
  async ({ channel }) =&gt; ({
    content: [{ type: &quot;text&quot;, text: await listMessages(channel) }]
  })
);

const putMessageTool = server.tool(
  &quot;putMessage&quot;,
  { channel: z.string(), message: z.string() },
  async ({ channel, message }) =&gt; ({
    content: [{ type: &quot;text&quot;, text: await putMessage(channel, string) }]
  })
);
// Until we upgrade auth, `putMessage` is disabled (won&#039;t show up in listTools)
putMessageTool.disable()

const upgradeAuthTool = server.tool(
  &quot;upgradeAuth&quot;,
  { permission: z.enum([&quot;write&#039;, vadmin&quot;])},
  // Any mutations here will automatically emit `listChanged` notifications
  async ({ permission }) =&gt; {
    const { ok, err, previous } = await upgradeAuthAndStoreToken(permission)
    if (!ok) return {content: [{ type: &quot;text&quot;, text: `Error: ${err}` }]}

    // If we previously had read-only access, &#039;putMessage&#039; is now available
    if (previous === &quot;read&quot;) {
      putMessageTool.enable()
    }

    if (permission === &#039;write&#039;) {
      // If we&#039;ve just upgraded to &#039;write&#039; permissions, we can still call &#039;upgradeAuth&#039; 
      // but can only upgrade to &#039;admin&#039;. 
      upgradeAuthTool.update({
        paramSchema: { permission: z.enum([&quot;admin&quot;]) }, // change validation rules
      })
    } else {
      // If we&#039;re now an admin, we no longer have anywhere to upgrade to, so fully remove that tool
      upgradeAuthTool.remove()
    }
  }
)

// Connect as normal
const transport = new StdioServerTransport();
await server.connect(transport);
```

### Low-Level Server

For more control, you can use the low-level Server class directly:

```typescript
import { Server } from &quot;@modelcontextprotocol/sdk/server/index.js&quot;;
import { StdioServerTransport } from &quot;@modelcontextprotocol/sdk/server/stdio.js&quot;;
import {
  ListPromptsRequestSchema,
  GetPromptRequestSchema
} from &quot;@modelcontextprotocol/sdk/types.js&quot;;

const server = new Server(
  {
    name: &quot;example-server&quot;,
    version: &quot;1.0.0&quot;
  },
  {
    capabilities: {
      prompts: {}
    }
  }
);

server.setRequestHandler(ListPromptsRequestSchema, async () =&gt; {
  return {
    prompts: [{
      name: &quot;example-prompt&quot;,
      description: &quot;An example prompt template&quot;,
      arguments: [{
        name: &quot;arg1&quot;,
        description: &quot;Example argument&quot;,
        required: true
      }]
    }]
  };
});

server.setRequestHandler(GetPromptRequestSchema, async (request) =&gt; {
  if (request.params.name !== &quot;example-prompt&quot;) {
    throw new Error(&quot;Unknown prompt&quot;);
  }
  return {
    description: &quot;Example prompt&quot;,
    messages: [{
      role: &quot;user&quot;,
      content: {
        type: &quot;text&quot;,
        text: &quot;Example prompt text&quot;
      }
    }]
  };
});

const transport = new StdioServerTransport();
await server.connect(transport);
```

### Writing MCP Clients

The SDK provides a high-level client interface:

```typescript
import { Client } from &quot;@modelcontextprotocol/sdk/client/index.js&quot;;
import { StdioClientTransport } from &quot;@modelcontextprotocol/sdk/client/stdio.js&quot;;

const transport = new StdioClientTransport({
  command: &quot;node&quot;,
  args: [&quot;server.js&quot;]
});

const client = new Client(
  {
    name: &quot;example-client&quot;,
    version: &quot;1.0.0&quot;
  }
);

await client.connect(transport);

// List prompts
const prompts = await client.listPrompts();

// Get a prompt
const prompt = await client.getPrompt({
  name: &quot;example-prompt&quot;,
  arguments: {
    arg1: &quot;value&quot;
  }
});

// List resources
const resources = await client.listResources();

// Read a resource
const resource = await client.readResource({
  uri: &quot;file:///example.txt&quot;
});

// Call a tool
const result = await client.callTool({
  name: &quot;example-tool&quot;,
  arguments: {
    arg1: &quot;value&quot;
  }
});
```

### Proxy Authorization Requests Upstream

You can proxy OAuth requests to an external authorization provider:

```typescript
import express from &#039;express&#039;;
import { ProxyOAuthServerProvider } from &#039;@modelcontextprotocol/sdk/server/auth/providers/proxyProvider.js&#039;;
import { mcpAuthRouter } from &#039;@modelcontextprotocol/sdk/server/auth/router.js&#039;;

const app = express();

const proxyProvider = new ProxyOAuthServerProvider({
    endpoints: {
        authorizationUrl: &quot;https://auth.external.com/oauth2/v1/authorize&quot;,
        tokenUrl: &quot;https://auth.external.com/oauth2/v1/token&quot;,
        revocationUrl: &quot;https://auth.external.com/oauth2/v1/revoke&quot;,
    },
    verifyAccessToken: async (token) =&gt; {
        return {
            token,
            clientId: &quot;123&quot;,
            scopes: [&quot;openid&quot;, &quot;email&quot;, &quot;profile&quot;],
        }
    },
    getClient: async (client_id) =&gt; {
        return {
            client_id,
            redirect_uris: [&quot;http://localhost:3000/callback&quot;],
        }
    }
})

app.use(mcpAuthRouter({
    provider: proxyProvider,
    issuerUrl: new URL(&quot;http://auth.external.com&quot;),
    baseUrl: new URL(&quot;http://mcp.example.com&quot;),
    serviceDocumentationUrl: new URL(&quot;https://docs.example.com/&quot;),
}))
```

This setup allows you to:

- Forward OAuth requests to an external provider
- Add custom token validation logic
- Manage client registrations
- Provide custom documentation URLs
- Maintain control over the OAuth flow while delegating to an external provider

### Backwards Compatibility

Clients and servers with StreamableHttp tranport can maintain [backwards compatibility](https://modelcontextprotocol.io/specification/2025-03-26/basic/transports#backwards-compatibility) with the deprecated HTTP+SSE transport (from protocol version 2024-11-05) as follows

#### Client-Side Compatibility

For clients that need to work with both Streamable HTTP and older SSE servers:

```typescript
import { Client } from &quot;@modelcontextprotocol/sdk/client/index.js&quot;;
import { StreamableHTTPClientTransport } from &quot;@modelcontextprotocol/sdk/client/streamableHttp.js&quot;;
import { SSEClientTransport } from &quot;@modelcontextprotocol/sdk/client/sse.js&quot;;
let client: Client|undefined = undefined
const baseUrl = new URL(url);
try {
  client = new Client({
    name: &#039;streamable-http-client&#039;,
    version: &#039;1.0.0&#039;
  });
  const transport = new StreamableHTTPClientTransport(
    new UR

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[langgenius/dify]]></title>
            <link>https://github.com/langgenius/dify</link>
            <guid>https://github.com/langgenius/dify</guid>
            <pubDate>Sun, 18 May 2025 00:04:50 GMT</pubDate>
            <description><![CDATA[Dify is an open-source LLM app development platform. Dify's intuitive interface combines AI workflow, RAG pipeline, agent capabilities, model management, observability features and more, letting you quickly go from prototype to production.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/langgenius/dify">langgenius/dify</a></h1>
            <p>Dify is an open-source LLM app development platform. Dify's intuitive interface combines AI workflow, RAG pipeline, agent capabilities, model management, observability features and more, letting you quickly go from prototype to production.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 97,540</p>
            <p>Forks: 14,618</p>
            <p>Stars today: 109 stars today</p>
            <h2>README</h2><pre>![cover-v5-optimized](./images/GitHub_README_if.png)

&lt;p align=&quot;center&quot;&gt;
  üìå &lt;a href=&quot;https://dify.ai/blog/introducing-dify-workflow-file-upload-a-demo-on-ai-podcast&quot;&gt;Introducing Dify Workflow File Upload: Recreate Google NotebookLM Podcast&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://cloud.dify.ai&quot;&gt;Dify Cloud&lt;/a&gt; ¬∑
  &lt;a href=&quot;https://docs.dify.ai/getting-started/install-self-hosted&quot;&gt;Self-hosting&lt;/a&gt; ¬∑
  &lt;a href=&quot;https://docs.dify.ai&quot;&gt;Documentation&lt;/a&gt; ¬∑
  &lt;a href=&quot;https://dify.ai/pricing&quot;&gt;Dify edition overview&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://dify.ai&quot; target=&quot;_blank&quot;&gt;
        &lt;img alt=&quot;Static Badge&quot; src=&quot;https://img.shields.io/badge/Product-F04438&quot;&gt;&lt;/a&gt;
    &lt;a href=&quot;https://dify.ai/pricing&quot; target=&quot;_blank&quot;&gt;
        &lt;img alt=&quot;Static Badge&quot; src=&quot;https://img.shields.io/badge/free-pricing?logo=free&amp;color=%20%23155EEF&amp;label=pricing&amp;labelColor=%20%23528bff&quot;&gt;&lt;/a&gt;
    &lt;a href=&quot;https://discord.gg/FngNHpbcY7&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/discord/1082486657678311454?logo=discord&amp;labelColor=%20%235462eb&amp;logoColor=%20%23f5f5f5&amp;color=%20%235462eb&quot;
            alt=&quot;chat on Discord&quot;&gt;&lt;/a&gt;
    &lt;a href=&quot;https://reddit.com/r/difyai&quot; target=&quot;_blank&quot;&gt;  
        &lt;img src=&quot;https://img.shields.io/reddit/subreddit-subscribers/difyai?style=plastic&amp;logo=reddit&amp;label=r%2Fdifyai&amp;labelColor=white&quot;
            alt=&quot;join Reddit&quot;&gt;&lt;/a&gt;
    &lt;a href=&quot;https://twitter.com/intent/follow?screen_name=dify_ai&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/twitter/follow/dify_ai?logo=X&amp;color=%20%23f5f5f5&quot;
            alt=&quot;follow on X(Twitter)&quot;&gt;&lt;/a&gt;
    &lt;a href=&quot;https://www.linkedin.com/company/langgenius/&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https://custom-icon-badges.demolab.com/badge/LinkedIn-0A66C2?logo=linkedin-white&amp;logoColor=fff&quot;
            alt=&quot;follow on LinkedIn&quot;&gt;&lt;/a&gt;
    &lt;a href=&quot;https://hub.docker.com/u/langgenius&quot; target=&quot;_blank&quot;&gt;
        &lt;img alt=&quot;Docker Pulls&quot; src=&quot;https://img.shields.io/docker/pulls/langgenius/dify-web?labelColor=%20%23FDB062&amp;color=%20%23f79009&quot;&gt;&lt;/a&gt;
    &lt;a href=&quot;https://github.com/langgenius/dify/graphs/commit-activity&quot; target=&quot;_blank&quot;&gt;
        &lt;img alt=&quot;Commits last month&quot; src=&quot;https://img.shields.io/github/commit-activity/m/langgenius/dify?labelColor=%20%2332b583&amp;color=%20%2312b76a&quot;&gt;&lt;/a&gt;
    &lt;a href=&quot;https://github.com/langgenius/dify/&quot; target=&quot;_blank&quot;&gt;
        &lt;img alt=&quot;Issues closed&quot; src=&quot;https://img.shields.io/github/issues-search?query=repo%3Alanggenius%2Fdify%20is%3Aclosed&amp;label=issues%20closed&amp;labelColor=%20%237d89b0&amp;color=%20%235d6b98&quot;&gt;&lt;/a&gt;
    &lt;a href=&quot;https://github.com/langgenius/dify/discussions/&quot; target=&quot;_blank&quot;&gt;
        &lt;img alt=&quot;Discussion posts&quot; src=&quot;https://img.shields.io/github/discussions/langgenius/dify?labelColor=%20%239b8afb&amp;color=%20%237a5af8&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;./README.md&quot;&gt;&lt;img alt=&quot;README in English&quot; src=&quot;https://img.shields.io/badge/English-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;./README_TW.md&quot;&gt;&lt;img alt=&quot;ÁπÅÈ´î‰∏≠ÊñáÊñá‰ª∂&quot; src=&quot;https://img.shields.io/badge/ÁπÅÈ´î‰∏≠Êñá-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;./README_CN.md&quot;&gt;&lt;img alt=&quot;ÁÆÄ‰Ωì‰∏≠ÊñáÁâàËá™Ëø∞Êñá‰ª∂&quot; src=&quot;https://img.shields.io/badge/ÁÆÄ‰Ωì‰∏≠Êñá-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;./README_JA.md&quot;&gt;&lt;img alt=&quot;Êó•Êú¨Ë™û„ÅÆREADME&quot; src=&quot;https://img.shields.io/badge/Êó•Êú¨Ë™û-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;./README_ES.md&quot;&gt;&lt;img alt=&quot;README en Espa√±ol&quot; src=&quot;https://img.shields.io/badge/Espa√±ol-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;./README_FR.md&quot;&gt;&lt;img alt=&quot;README en Fran√ßais&quot; src=&quot;https://img.shields.io/badge/Fran√ßais-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;./README_KL.md&quot;&gt;&lt;img alt=&quot;README tlhIngan Hol&quot; src=&quot;https://img.shields.io/badge/Klingon-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;./README_KR.md&quot;&gt;&lt;img alt=&quot;README in Korean&quot; src=&quot;https://img.shields.io/badge/ÌïúÍµ≠Ïñ¥-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;./README_AR.md&quot;&gt;&lt;img alt=&quot;README ÿ®ÿßŸÑÿπÿ±ÿ®Ÿäÿ©&quot; src=&quot;https://img.shields.io/badge/ÿßŸÑÿπÿ±ÿ®Ÿäÿ©-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;./README_TR.md&quot;&gt;&lt;img alt=&quot;T√ºrk√ße README&quot; src=&quot;https://img.shields.io/badge/T√ºrk√ße-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;./README_VI.md&quot;&gt;&lt;img alt=&quot;README Ti·∫øng Vi·ªát&quot; src=&quot;https://img.shields.io/badge/Ti%E1%BA%BFng%20Vi%E1%BB%87t-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;./README_DE.md&quot;&gt;&lt;img alt=&quot;README in Deutsch&quot; src=&quot;https://img.shields.io/badge/German-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;./README_BN.md&quot;&gt;&lt;img alt=&quot;README in ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ&quot; src=&quot;https://img.shields.io/badge/‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ-d9d9d9&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

Dify is an open-source LLM app development platform. Its intuitive interface combines agentic AI workflow, RAG pipeline, agent capabilities, model management, observability features, and more, allowing you to quickly move from prototype to production.

## Quick start

&gt; Before installing Dify, make sure your machine meets the following minimum system requirements:
&gt;
&gt; - CPU &gt;= 2 Core
&gt; - RAM &gt;= 4 GiB

&lt;/br&gt;

The easiest way to start the Dify server is through [docker compose](docker/docker-compose.yaml). Before running Dify with the following commands, make sure that [Docker](https://docs.docker.com/get-docker/) and [Docker Compose](https://docs.docker.com/compose/install/) are installed on your machine:

```bash
cd dify
cd docker
cp .env.example .env
docker compose up -d
```

After running, you can access the Dify dashboard in your browser at [http://localhost/install](http://localhost/install) and start the initialization process.

#### Seeking help

Please refer to our [FAQ](https://docs.dify.ai/getting-started/install-self-hosted/faqs) if you encounter problems setting up Dify. Reach out to [the community and us](#community--contact) if you are still having issues.

&gt; If you&#039;d like to contribute to Dify or do additional development, refer to our [guide to deploying from source code](https://docs.dify.ai/getting-started/install-self-hosted/local-source-code)

## Key features

**1. Workflow**:
Build and test powerful AI workflows on a visual canvas, leveraging all the following features and beyond.

**2. Comprehensive model support**:
Seamless integration with hundreds of proprietary / open-source LLMs from dozens of inference providers and self-hosted solutions, covering GPT, Mistral, Llama3, and any OpenAI API-compatible models. A full list of supported model providers can be found [here](https://docs.dify.ai/getting-started/readme/model-providers).

![providers-v5](https://github.com/langgenius/dify/assets/13230914/5a17bdbe-097a-4100-8363-40255b70f6e3)

**3. Prompt IDE**:
Intuitive interface for crafting prompts, comparing model performance, and adding additional features such as text-to-speech to a chat-based app.

**4. RAG Pipeline**:
Extensive RAG capabilities that cover everything from document ingestion to retrieval, with out-of-box support for text extraction from PDFs, PPTs, and other common document formats.

**5. Agent capabilities**:
You can define agents based on LLM Function Calling or ReAct, and add pre-built or custom tools for the agent. Dify provides 50+ built-in tools for AI agents, such as Google Search, DALL¬∑E, Stable Diffusion and WolframAlpha.

**6. LLMOps**:
Monitor and analyze application logs and performance over time. You could continuously improve prompts, datasets, and models based on production data and annotations.

**7. Backend-as-a-Service**:
All of Dify&#039;s offerings come with corresponding APIs, so you could effortlessly integrate Dify into your own business logic.

## Feature Comparison

&lt;table style=&quot;width: 100%;&quot;&gt;
  &lt;tr&gt;
    &lt;th align=&quot;center&quot;&gt;Feature&lt;/th&gt;
    &lt;th align=&quot;center&quot;&gt;Dify.AI&lt;/th&gt;
    &lt;th align=&quot;center&quot;&gt;LangChain&lt;/th&gt;
    &lt;th align=&quot;center&quot;&gt;Flowise&lt;/th&gt;
    &lt;th align=&quot;center&quot;&gt;OpenAI Assistants API&lt;/th&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;Programming Approach&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;API + App-oriented&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;Python Code&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;App-oriented&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;API-oriented&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;Supported LLMs&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;Rich Variety&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;Rich Variety&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;Rich Variety&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;OpenAI-only&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;RAG Engine&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚úÖ&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚úÖ&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚úÖ&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚úÖ&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;Agent&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚úÖ&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚úÖ&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚ùå&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚úÖ&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;Workflow&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚úÖ&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚ùå&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚úÖ&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚ùå&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;Observability&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚úÖ&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚úÖ&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚ùå&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚ùå&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;Enterprise Feature (SSO/Access control)&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚úÖ&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚ùå&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚ùå&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚ùå&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;Local Deployment&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚úÖ&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚úÖ&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚úÖ&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚ùå&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

## Using Dify

- **Cloud &lt;/br&gt;**
  We host a [Dify Cloud](https://dify.ai) service for anyone to try with zero setup. It provides all the capabilities of the self-deployed version, and includes 200 free GPT-4 calls in the sandbox plan.

- **Self-hosting Dify Community Edition&lt;/br&gt;**
  Quickly get Dify running in your environment with this [starter guide](#quick-start).
  Use our [documentation](https://docs.dify.ai) for further references and more in-depth instructions.

- **Dify for enterprise / organizations&lt;/br&gt;**
  We provide additional enterprise-centric features. [Log your questions for us through this chatbot](https://udify.app/chat/22L1zSxg6yW1cWQg) or [send us an email](mailto:business@dify.ai?subject=[GitHub]Business%20License%20Inquiry) to discuss enterprise needs. &lt;/br&gt;
  &gt; For startups and small businesses using AWS, check out [Dify Premium on AWS Marketplace](https://aws.amazon.com/marketplace/pp/prodview-t22mebxzwjhu6) and deploy it to your own AWS VPC with one click. It&#039;s an affordable AMI offering with the option to create apps with custom logo and branding.

## Staying ahead

Star Dify on GitHub and be instantly notified of new releases.

![star-us](https://github.com/langgenius/dify/assets/13230914/b823edc1-6388-4e25-ad45-2f6b187adbb4)

## Advanced Setup

If you need to customize the configuration, please refer to the comments in our [.env.example](docker/.env.example) file and update the corresponding values in your `.env` file. Additionally, you might need to make adjustments to the `docker-compose.yaml` file itself, such as changing image versions, port mappings, or volume mounts, based on your specific deployment environment and requirements. After making any changes, please re-run `docker-compose up -d`. You can find the full list of available environment variables [here](https://docs.dify.ai/getting-started/install-self-hosted/environments).

If you&#039;d like to configure a highly-available setup, there are community-contributed [Helm Charts](https://helm.sh/) and YAML files which allow Dify to be deployed on Kubernetes.

- [Helm Chart by @LeoQuote](https://github.com/douban/charts/tree/master/charts/dify)
- [Helm Chart by @BorisPolonsky](https://github.com/BorisPolonsky/dify-helm)
- [Helm Chart by @magicsong](https://github.com/magicsong/ai-charts)
- [YAML file by @Winson-030](https://github.com/Winson-030/dify-kubernetes)
- [YAML file by @wyy-holding](https://github.com/wyy-holding/dify-k8s)

#### Using Terraform for Deployment

Deploy Dify to Cloud Platform with a single click using [terraform](https://www.terraform.io/)

##### Azure Global

- [Azure Terraform by @nikawang](https://github.com/nikawang/dify-azure-terraform)

##### Google Cloud

- [Google Cloud Terraform by @sotazum](https://github.com/DeNA/dify-google-cloud-terraform)

#### Using AWS CDK for Deployment

Deploy Dify to AWS with [CDK](https://aws.amazon.com/cdk/)

##### AWS

- [AWS CDK by @KevinZhao](https://github.com/aws-samples/solution-for-deploying-dify-on-aws)

## Contributing

For those who&#039;d like to contribute code, see our [Contribution Guide](https://github.com/langgenius/dify/blob/main/CONTRIBUTING.md).
At the same time, please consider supporting Dify by sharing it on social media and at events and conferences.

&gt; We are looking for contributors to help translate Dify into languages other than Mandarin or English. If you are interested in helping, please see the [i18n README](https://github.com/langgenius/dify/blob/main/web/i18n/README.md) for more information, and leave us a comment in the `global-users` channel of our [Discord Community Server](https://discord.gg/8Tpq4AcN9c).

## Community &amp; contact

- [Github Discussion](https://github.com/langgenius/dify/discussions). Best for: sharing feedback and asking questions.
- [GitHub Issues](https://github.com/langgenius/dify/issues). Best for: bugs you encounter using Dify.AI, and feature proposals. See our [Contribution Guide](https://github.com/langgenius/dify/blob/main/CONTRIBUTING.md).
- [Discord](https://discord.gg/FngNHpbcY7). Best for: sharing your applications and hanging out with the community.
- [X(Twitter)](https://twitter.com/dify_ai). Best for: sharing your applications and hanging out with the community.

**Contributors**

&lt;a href=&quot;https://github.com/langgenius/dify/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=langgenius/dify&quot; /&gt;
&lt;/a&gt;

## Star history

[![Star History Chart](https://api.star-history.com/svg?repos=langgenius/dify&amp;type=Date)](https://star-history.com/#langgenius/dify&amp;Date)

## Security disclosure

To protect your privacy, please avoid posting security issues on GitHub. Instead, send your questions to security@dify.ai and we will provide you with a more detailed answer.

## License

This repository is available under the [Dify Open Source License](LICENSE), which is essentially Apache 2.0 with a few additional restrictions.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[excalidraw/excalidraw]]></title>
            <link>https://github.com/excalidraw/excalidraw</link>
            <guid>https://github.com/excalidraw/excalidraw</guid>
            <pubDate>Sun, 18 May 2025 00:04:49 GMT</pubDate>
            <description><![CDATA[Virtual whiteboard for sketching hand-drawn like diagrams]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/excalidraw/excalidraw">excalidraw/excalidraw</a></h1>
            <p>Virtual whiteboard for sketching hand-drawn like diagrams</p>
            <p>Language: TypeScript</p>
            <p>Stars: 99,885</p>
            <p>Forks: 9,751</p>
            <p>Stars today: 85 stars today</p>
            <h2>README</h2><pre>&lt;a href=&quot;https://excalidraw.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;
  &lt;picture&gt;
    &lt;source media=&quot;(prefers-color-scheme: dark)&quot; alt=&quot;Excalidraw&quot; srcset=&quot;https://excalidraw.nyc3.cdn.digitaloceanspaces.com/github/excalidraw_github_cover_2_dark.png&quot; /&gt;
    &lt;img alt=&quot;Excalidraw&quot; src=&quot;https://excalidraw.nyc3.cdn.digitaloceanspaces.com/github/excalidraw_github_cover_2.png&quot; /&gt;
  &lt;/picture&gt;
&lt;/a&gt;

&lt;h4 align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://excalidraw.com&quot;&gt;Excalidraw Editor&lt;/a&gt; |
  &lt;a href=&quot;https://plus.excalidraw.com/blog&quot;&gt;Blog&lt;/a&gt; |
  &lt;a href=&quot;https://docs.excalidraw.com&quot;&gt;Documentation&lt;/a&gt; |
  &lt;a href=&quot;https://plus.excalidraw.com&quot;&gt;Excalidraw+&lt;/a&gt;
&lt;/h4&gt;

&lt;div align=&quot;center&quot;&gt;
  &lt;h2&gt;
    An open source virtual hand-drawn style whiteboard. &lt;/br&gt;
    Collaborative and end-to-end encrypted. &lt;/br&gt;
  &lt;br /&gt;
  &lt;/h2&gt;
&lt;/div&gt;

&lt;br /&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/excalidraw/excalidraw/blob/master/LICENSE&quot;&gt;
    &lt;img alt=&quot;Excalidraw is released under the MIT license.&quot; src=&quot;https://img.shields.io/badge/license-MIT-blue.svg&quot;  /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://www.npmjs.com/package/@excalidraw/excalidraw&quot;&gt;
    &lt;img alt=&quot;npm downloads/month&quot; src=&quot;https://img.shields.io/npm/dm/@excalidraw/excalidraw&quot;  /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://docs.excalidraw.com/docs/introduction/contributing&quot;&gt;
    &lt;img alt=&quot;PRs welcome!&quot; src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat&quot;  /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://discord.gg/UexuTaE&quot;&gt;
    &lt;img alt=&quot;Chat on Discord&quot; src=&quot;https://img.shields.io/discord/723672430744174682?color=738ad6&amp;label=Chat%20on%20Discord&amp;logo=discord&amp;logoColor=ffffff&amp;widge=false&quot;/&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://twitter.com/excalidraw&quot;&gt;
    &lt;img alt=&quot;Follow Excalidraw on Twitter&quot; src=&quot;https://img.shields.io/twitter/follow/excalidraw.svg?label=follow+@excalidraw&amp;style=social&amp;logo=twitter&quot;/&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
  &lt;figure&gt;
    &lt;a href=&quot;https://excalidraw.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;
      &lt;img src=&quot;https://excalidraw.nyc3.cdn.digitaloceanspaces.com/github%2Fproduct_showcase.png&quot; alt=&quot;Product showcase&quot; /&gt;
    &lt;/a&gt;
    &lt;figcaption&gt;
      &lt;p align=&quot;center&quot;&gt;
        Create beautiful hand-drawn like diagrams, wireframes, or whatever you like.
      &lt;/p&gt;
    &lt;/figcaption&gt;
  &lt;/figure&gt;
&lt;/div&gt;

## Features

The Excalidraw editor (npm package) supports:

- üíØ&amp;nbsp;Free &amp; open-source.
- üé®&amp;nbsp;Infinite, canvas-based whiteboard.
- ‚úçÔ∏è&amp;nbsp;Hand-drawn like style.
- üåì&amp;nbsp;Dark mode.
- üèóÔ∏è&amp;nbsp;Customizable.
- üì∑&amp;nbsp;Image support.
- üòÄ&amp;nbsp;Shape libraries support.
- üåê&amp;nbsp;Localization (i18n) support.
- üñºÔ∏è&amp;nbsp;Export to PNG, SVG &amp; clipboard.
- üíæ&amp;nbsp;Open format - export drawings as an `.excalidraw` json file.
- ‚öíÔ∏è&amp;nbsp;Wide range of tools - rectangle, circle, diamond, arrow, line, free-draw, eraser...
- ‚û°Ô∏è&amp;nbsp;Arrow-binding &amp; labeled arrows.
- üîô&amp;nbsp;Undo / Redo.
- üîç&amp;nbsp;Zoom and panning support.

## Excalidraw.com

The app hosted at [excalidraw.com](https://excalidraw.com) is a minimal showcase of what you can build with Excalidraw. Its [source code](https://github.com/excalidraw/excalidraw/tree/master/excalidraw-app) is part of this repository as well, and the app features:

- üì°&amp;nbsp;PWA support (works offline).
- ü§º&amp;nbsp;Real-time collaboration.
- üîí&amp;nbsp;End-to-end encryption.
- üíæ&amp;nbsp;Local-first support (autosaves to the browser).
- üîó&amp;nbsp;Shareable links (export to a readonly link you can share with others).

We&#039;ll be adding these features as drop-in plugins for the npm package in the future.

## Quick start

**Note:** following instructions are for installing the Excalidraw [npm package](https://www.npmjs.com/package/@excalidraw/excalidraw) when integrating Excalidraw into your own app. To run the repository locally for development, please refer to our [Development Guide](https://docs.excalidraw.com/docs/introduction/development).

Use `npm` or `yarn` to install the package.

```bash
npm install react react-dom @excalidraw/excalidraw
# or
yarn add react react-dom @excalidraw/excalidraw
```

Check out our [documentation](https://docs.excalidraw.com/docs/@excalidraw/excalidraw/installation) for more details!

## Contributing

- Missing something or found a bug? [Report here](https://github.com/excalidraw/excalidraw/issues).
- Want to contribute? Check out our [contribution guide](https://docs.excalidraw.com/docs/introduction/contributing) or let us know on [Discord](https://discord.gg/UexuTaE).
- Want to help with translations? See the [translation guide](https://docs.excalidraw.com/docs/introduction/contributing#translating).

## Integrations

- [VScode extension](https://marketplace.visualstudio.com/items?itemName=pomdtr.excalidraw-editor)
- [npm package](https://www.npmjs.com/package/@excalidraw/excalidraw)

## Who&#039;s integrating Excalidraw

[Google Cloud](https://googlecloudcheatsheet.withgoogle.com/architecture) ‚Ä¢ [Meta](https://meta.com/) ‚Ä¢ [CodeSandbox](https://codesandbox.io/) ‚Ä¢ [Obsidian Excalidraw](https://github.com/zsviczian/obsidian-excalidraw-plugin) ‚Ä¢ [Replit](https://replit.com/) ‚Ä¢ [Slite](https://slite.com/) ‚Ä¢ [Notion](https://notion.so/) ‚Ä¢ [HackerRank](https://www.hackerrank.com/) ‚Ä¢ and many others

## Sponsors &amp; support

If you like the project, you can become a sponsor at [Open Collective](https://opencollective.com/excalidraw) or use [Excalidraw+](https://plus.excalidraw.com/).

## Thank you for supporting Excalidraw

[&lt;img src=&quot;https://opencollective.com/excalidraw/tiers/sponsors/0/avatar.svg?avatarHeight=120&quot;/&gt;](https://opencollective.com/excalidraw/tiers/sponsors/0/website) [&lt;img src=&quot;https://opencollective.com/excalidraw/tiers/sponsors/1/avatar.svg?avatarHeight=120&quot;/&gt;](https://opencollective.com/excalidraw/tiers/sponsors/1/website) [&lt;img src=&quot;https://opencollective.com/excalidraw/tiers/sponsors/2/avatar.svg?avatarHeight=120&quot;/&gt;](https://opencollective.com/excalidraw/tiers/sponsors/2/website) [&lt;img src=&quot;https://opencollective.com/excalidraw/tiers/sponsors/3/avatar.svg?avatarHeight=120&quot;/&gt;](https://opencollective.com/excalidraw/tiers/sponsors/3/website) [&lt;img src=&quot;https://opencollective.com/excalidraw/tiers/sponsors/4/avatar.svg?avatarHeight=120&quot;/&gt;](https://opencollective.com/excalidraw/tiers/sponsors/4/website) [&lt;img src=&quot;https://opencollective.com/excalidraw/tiers/sponsors/5/avatar.svg?avatarHeight=120&quot;/&gt;](https://opencollective.com/excalidraw/tiers/sponsors/5/website) [&lt;img src=&quot;https://opencollective.com/excalidraw/tiers/sponsors/6/avatar.svg?avatarHeight=120&quot;/&gt;](https://opencollective.com/excalidraw/tiers/sponsors/6/website) [&lt;img src=&quot;https://opencollective.com/excalidraw/tiers/sponsors/7/avatar.svg?avatarHeight=120&quot;/&gt;](https://opencollective.com/excalidraw/tiers/sponsors/7/website) [&lt;img src=&quot;https://opencollective.com/excalidraw/tiers/sponsors/8/avatar.svg?avatarHeight=120&quot;/&gt;](https://opencollective.com/excalidraw/tiers/sponsors/8/website) [&lt;img src=&quot;https://opencollective.com/excalidraw/tiers/sponsors/9/avatar.svg?avatarHeight=120&quot;/&gt;](https://opencollective.com/excalidraw/tiers/sponsors/9/website) [&lt;img src=&quot;https://opencollective.com/excalidraw/tiers/sponsors/10/avatar.svg?avatarHeight=120&quot;/&gt;](https://opencollective.com/excalidraw/tiers/sponsors/10/website)

&lt;a href=&quot;https://opencollective.com/excalidraw#category-CONTRIBUTE&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/excalidraw/tiers/backers.svg?avatarHeight=32&quot;/&gt;&lt;/a&gt;

Last but not least, we&#039;re thankful to these companies for offering their services for free:

[![Vercel](./.github/assets/vercel.svg)](https://vercel.com) [![Sentry](./.github/assets/sentry.svg)](https://sentry.io) [![Crowdin](./.github/assets/crowdin.svg)](https://crowdin.com)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[mendableai/firecrawl]]></title>
            <link>https://github.com/mendableai/firecrawl</link>
            <guid>https://github.com/mendableai/firecrawl</guid>
            <pubDate>Sun, 18 May 2025 00:04:48 GMT</pubDate>
            <description><![CDATA[üî• Turn entire websites into LLM-ready markdown or structured data. Scrape, crawl and extract with a single API.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/mendableai/firecrawl">mendableai/firecrawl</a></h1>
            <p>üî• Turn entire websites into LLM-ready markdown or structured data. Scrape, crawl and extract with a single API.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 38,394</p>
            <p>Forks: 3,499</p>
            <p>Stars today: 73 stars today</p>
            <h2>README</h2><pre>&lt;h3 align=&quot;center&quot;&gt;
  &lt;a name=&quot;readme-top&quot;&gt;&lt;/a&gt;
  &lt;img
    src=&quot;https://raw.githubusercontent.com/mendableai/firecrawl/main/img/firecrawl_logo.png&quot;
    height=&quot;200&quot;
  &gt;
&lt;/h3&gt;
&lt;div align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://github.com/mendableai/firecrawl/blob/main/LICENSE&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/github/license/mendableai/firecrawl&quot; alt=&quot;License&quot;&gt;
&lt;/a&gt;
    &lt;a href=&quot;https://pepy.tech/project/firecrawl-py&quot;&gt;
  &lt;img src=&quot;https://static.pepy.tech/badge/firecrawl-py&quot; alt=&quot;Downloads&quot;&gt;
&lt;/a&gt;
&lt;a href=&quot;https://GitHub.com/mendableai/firecrawl/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/github/contributors/mendableai/firecrawl.svg&quot; alt=&quot;GitHub Contributors&quot;&gt;
&lt;/a&gt;
&lt;a href=&quot;https://firecrawl.dev&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/badge/Visit-firecrawl.dev-orange&quot; alt=&quot;Visit firecrawl.dev&quot;&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;div&gt;
  &lt;p align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://twitter.com/firecrawl_dev&quot;&gt;
      &lt;img src=&quot;https://img.shields.io/badge/Follow%20on%20X-000000?style=for-the-badge&amp;logo=x&amp;logoColor=white&quot; alt=&quot;Follow on X&quot; /&gt;
    &lt;/a&gt;
    &lt;a href=&quot;https://www.linkedin.com/company/104100957&quot;&gt;
      &lt;img src=&quot;https://img.shields.io/badge/Follow%20on%20LinkedIn-0077B5?style=for-the-badge&amp;logo=linkedin&amp;logoColor=white&quot; alt=&quot;Follow on LinkedIn&quot; /&gt;
    &lt;/a&gt;
    &lt;a href=&quot;https://discord.com/invite/gSmWdAkdwd&quot;&gt;
      &lt;img src=&quot;https://img.shields.io/badge/Join%20our%20Discord-5865F2?style=for-the-badge&amp;logo=discord&amp;logoColor=white&quot; alt=&quot;Join our Discord&quot; /&gt;
    &lt;/a&gt;
  &lt;/p&gt;
&lt;/div&gt;

# üî• Firecrawl

Empower your AI apps with clean data from any website. Featuring advanced scraping, crawling, and data extraction capabilities.

_This repository is in development, and we‚Äôre still integrating custom modules into the mono repo. It&#039;s not fully ready for self-hosted deployment yet, but you can run it locally._

## What is Firecrawl?

[Firecrawl](https://firecrawl.dev?ref=github) is an API service that takes a URL, crawls it, and converts it into clean markdown or structured data. We crawl all accessible subpages and give you clean data for each. No sitemap required. Check out our [documentation](https://docs.firecrawl.dev).

_Pst. hey, you, join our stargazers :)_

&lt;a href=&quot;https://github.com/mendableai/firecrawl&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/github/stars/mendableai/firecrawl.svg?style=social&amp;label=Star&amp;maxAge=2592000&quot; alt=&quot;GitHub stars&quot;&gt;
&lt;/a&gt;

## How to use it?

We provide an easy to use API with our hosted version. You can find the playground and documentation [here](https://firecrawl.dev/playground). You can also self host the backend if you&#039;d like.

Check out the following resources to get started:
- [x] **API**: [Documentation](https://docs.firecrawl.dev/api-reference/introduction)
- [x] **SDKs**: [Python](https://docs.firecrawl.dev/sdks/python), [Node](https://docs.firecrawl.dev/sdks/node), [Go](https://docs.firecrawl.dev/sdks/go), [Rust](https://docs.firecrawl.dev/sdks/rust)
- [x] **LLM Frameworks**: [Langchain (python)](https://python.langchain.com/docs/integrations/document_loaders/firecrawl/), [Langchain (js)](https://js.langchain.com/docs/integrations/document_loaders/web_loaders/firecrawl), [Llama Index](https://docs.llamaindex.ai/en/latest/examples/data_connectors/WebPageDemo/#using-firecrawl-reader), [Crew.ai](https://docs.crewai.com/), [Composio](https://composio.dev/tools/firecrawl/all), [PraisonAI](https://docs.praison.ai/firecrawl/), [Superinterface](https://superinterface.ai/docs/assistants/functions/firecrawl), [Vectorize](https://docs.vectorize.io/integrations/source-connectors/firecrawl)
- [x] **Low-code Frameworks**: [Dify](https://dify.ai/blog/dify-ai-blog-integrated-with-firecrawl), [Langflow](https://docs.langflow.org/), [Flowise AI](https://docs.flowiseai.com/integrations/langchain/document-loaders/firecrawl), [Cargo](https://docs.getcargo.io/integration/firecrawl), [Pipedream](https://pipedream.com/apps/firecrawl/)
- [x] **Others**: [Zapier](https://zapier.com/apps/firecrawl/integrations), [Pabbly Connect](https://www.pabbly.com/connect/integrations/firecrawl/)
- [ ] Want an SDK or Integration? Let us know by opening an issue.

To run locally, refer to guide [here](https://github.com/mendableai/firecrawl/blob/main/CONTRIBUTING.md).

### API Key

To use the API, you need to sign up on [Firecrawl](https://firecrawl.dev) and get an API key.

### Features

- [**Scrape**](#scraping): scrapes a URL and get its content in LLM-ready format (markdown, structured data via [LLM Extract](#llm-extraction-beta), screenshot, html)
- [**Crawl**](#crawling): scrapes all the URLs of a web page and return content in LLM-ready format
- [**Map**](#map-alpha): input a website and get all the website urls - extremely fast
- [**Search**](#search): search the web and get full content from results
- [**Extract**](#extract): get structured data from single page, multiple pages or entire websites with AI.

### Powerful Capabilities
- **LLM-ready formats**: markdown, structured data, screenshot, HTML, links, metadata
- **The hard stuff**: proxies, anti-bot mechanisms, dynamic content (js-rendered), output parsing, orchestration
- **Customizability**: exclude tags, crawl behind auth walls with custom headers, max crawl depth, etc...
- **Media parsing**: pdfs, docx, images
- **Reliability first**: designed to get the data you need - no matter how hard it is
- **Actions**: click, scroll, input, wait and more before extracting data
- **Batching (New)**: scrape thousands of URLs at the same time with a new async endpoint.

You can find all of Firecrawl&#039;s capabilities and how to use them in our [documentation](https://docs.firecrawl.dev)

### Crawling

Used to crawl a URL and all accessible subpages. This submits a crawl job and returns a job ID to check the status of the crawl.

```bash
curl -X POST https://api.firecrawl.dev/v1/crawl \
    -H &#039;Content-Type: application/json&#039; \
    -H &#039;Authorization: Bearer fc-YOUR_API_KEY&#039; \
    -d &#039;{
      &quot;url&quot;: &quot;https://docs.firecrawl.dev&quot;,
      &quot;limit&quot;: 10,
      &quot;scrapeOptions&quot;: {
        &quot;formats&quot;: [&quot;markdown&quot;, &quot;html&quot;]
      }
    }&#039;
```

Returns a crawl job id and the url to check the status of the crawl.

```json
{
  &quot;success&quot;: true,
  &quot;id&quot;: &quot;123-456-789&quot;,
  &quot;url&quot;: &quot;https://api.firecrawl.dev/v1/crawl/123-456-789&quot;
}
```

### Check Crawl Job

Used to check the status of a crawl job and get its result.

```bash
curl -X GET https://api.firecrawl.dev/v1/crawl/123-456-789 \
  -H &#039;Content-Type: application/json&#039; \
  -H &#039;Authorization: Bearer YOUR_API_KEY&#039;
```

```json
{
  &quot;status&quot;: &quot;completed&quot;,
  &quot;total&quot;: 36,
  &quot;creditsUsed&quot;: 36,
  &quot;expiresAt&quot;: &quot;2024-00-00T00:00:00.000Z&quot;,
  &quot;data&quot;: [
    {
      &quot;markdown&quot;: &quot;[Firecrawl Docs home page![light logo](https://mintlify.s3-us-west-1.amazonaws.com/firecrawl/logo/light.svg)!...&quot;,
      &quot;html&quot;: &quot;&lt;!DOCTYPE html&gt;&lt;html lang=\&quot;en\&quot; class=\&quot;js-focus-visible lg:[--scroll-mt:9.5rem]\&quot; data-js-focus-visible=\&quot;\&quot;&gt;...&quot;,
      &quot;metadata&quot;: {
        &quot;title&quot;: &quot;Build a &#039;Chat with website&#039; using Groq Llama 3 | Firecrawl&quot;,
        &quot;language&quot;: &quot;en&quot;,
        &quot;sourceURL&quot;: &quot;https://docs.firecrawl.dev/learn/rag-llama3&quot;,
        &quot;description&quot;: &quot;Learn how to use Firecrawl, Groq Llama 3, and Langchain to build a &#039;Chat with your website&#039; bot.&quot;,
        &quot;ogLocaleAlternate&quot;: [],
        &quot;statusCode&quot;: 200
      }
    }
  ]
}
```

### Scraping

Used to scrape a URL and get its content in the specified formats.

```bash
curl -X POST https://api.firecrawl.dev/v1/scrape \
    -H &#039;Content-Type: application/json&#039; \
    -H &#039;Authorization: Bearer YOUR_API_KEY&#039; \
    -d &#039;{
      &quot;url&quot;: &quot;https://docs.firecrawl.dev&quot;,
      &quot;formats&quot; : [&quot;markdown&quot;, &quot;html&quot;]
    }&#039;
```

Response:

```json
{
  &quot;success&quot;: true,
  &quot;data&quot;: {
    &quot;markdown&quot;: &quot;Launch Week I is here! [See our Day 2 Release üöÄ](https://www.firecrawl.dev/blog/launch-week-i-day-2-doubled-rate-limits)[üí• Get 2 months free...&quot;,
    &quot;html&quot;: &quot;&lt;!DOCTYPE html&gt;&lt;html lang=\&quot;en\&quot; class=\&quot;light\&quot; style=\&quot;color-scheme: light;\&quot;&gt;&lt;body class=\&quot;__variable_36bd41 __variable_d7dc5d font-inter ...&quot;,
    &quot;metadata&quot;: {
      &quot;title&quot;: &quot;Home - Firecrawl&quot;,
      &quot;description&quot;: &quot;Firecrawl crawls and converts any website into clean markdown.&quot;,
      &quot;language&quot;: &quot;en&quot;,
      &quot;keywords&quot;: &quot;Firecrawl,Markdown,Data,Mendable,Langchain&quot;,
      &quot;robots&quot;: &quot;follow, index&quot;,
      &quot;ogTitle&quot;: &quot;Firecrawl&quot;,
      &quot;ogDescription&quot;: &quot;Turn any website into LLM-ready data.&quot;,
      &quot;ogUrl&quot;: &quot;https://www.firecrawl.dev/&quot;,
      &quot;ogImage&quot;: &quot;https://www.firecrawl.dev/og.png?123&quot;,
      &quot;ogLocaleAlternate&quot;: [],
      &quot;ogSiteName&quot;: &quot;Firecrawl&quot;,
      &quot;sourceURL&quot;: &quot;https://firecrawl.dev&quot;,
      &quot;statusCode&quot;: 200
    }
  }
}
```

### Map

Used to map a URL and get urls of the website. This returns most links present on the website.

```bash cURL
curl -X POST https://api.firecrawl.dev/v1/map \
    -H &#039;Content-Type: application/json&#039; \
    -H &#039;Authorization: Bearer YOUR_API_KEY&#039; \
    -d &#039;{
      &quot;url&quot;: &quot;https://firecrawl.dev&quot;
    }&#039;
```

Response:

```json
{
  &quot;status&quot;: &quot;success&quot;,
  &quot;links&quot;: [
    &quot;https://firecrawl.dev&quot;,
    &quot;https://www.firecrawl.dev/pricing&quot;,
    &quot;https://www.firecrawl.dev/blog&quot;,
    &quot;https://www.firecrawl.dev/playground&quot;,
    &quot;https://www.firecrawl.dev/smart-crawl&quot;,
  ]
}
```

#### Map with search

Map with `search` param allows you to search for specific urls inside a website.

```bash cURL
curl -X POST https://api.firecrawl.dev/v1/map \
    -H &#039;Content-Type: application/json&#039; \
    -H &#039;Authorization: Bearer YOUR_API_KEY&#039; \
    -d &#039;{
      &quot;url&quot;: &quot;https://firecrawl.dev&quot;,
      &quot;search&quot;: &quot;docs&quot;
    }&#039;
```

Response will be an ordered list from the most relevant to the least relevant.

```json
{
  &quot;status&quot;: &quot;success&quot;,
  &quot;links&quot;: [
    &quot;https://docs.firecrawl.dev&quot;,
    &quot;https://docs.firecrawl.dev/sdks/python&quot;,
    &quot;https://docs.firecrawl.dev/learn/rag-llama3&quot;,
  ]
}
```

### Search

Search the web and get full content from results

Firecrawl‚Äôs search API allows you to perform web searches and optionally scrape the search results in one operation.

- Choose specific output formats (markdown, HTML, links, screenshots)
- Search the web with customizable parameters (language, country, etc.)
- Optionally retrieve content from search results in various formats
- Control the number of results and set timeouts

```bash
curl -X POST https://api.firecrawl.dev/v1/search \
  -H &quot;Content-Type: application/json&quot; \
  -H &quot;Authorization: Bearer fc-YOUR_API_KEY&quot; \
  -d &#039;{
    &quot;query&quot;: &quot;what is firecrawl?&quot;,
    &quot;limit&quot;: 5
  }&#039;
```

#### Response

```json
{
  &quot;success&quot;: true,
  &quot;data&quot;: [
    {
      &quot;url&quot;: &quot;https://firecrawl.dev&quot;,
      &quot;title&quot;: &quot;Firecrawl | Home Page&quot;,
      &quot;description&quot;: &quot;Turn websites into LLM-ready data with Firecrawl&quot;
    },
    {
      &quot;url&quot;: &quot;https://docs.firecrawl.dev&quot;,
      &quot;title&quot;: &quot;Documentation | Firecrawl&quot;,
      &quot;description&quot;: &quot;Learn how to use Firecrawl in your own applications&quot;
    }
  ]
}
```

#### With content scraping

```bash
curl -X POST https://api.firecrawl.dev/v1/search \
  -H &quot;Content-Type: application/json&quot; \
  -H &quot;Authorization: Bearer fc-YOUR_API_KEY&quot; \
  -d &#039;{
    &quot;query&quot;: &quot;what is firecrawl?&quot;,
    &quot;limit&quot;: 5,
    &quot;scrapeOptions&quot;: {
      &quot;formats&quot;: [&quot;markdown&quot;, &quot;links&quot;]
    }
  }&#039;
```

### Extract (Beta)

Get structured data from entire websites with a prompt and/or a schema.

You can extract structured data from one or multiple URLs, including wildcards:

Single Page:
Example: https://firecrawl.dev/some-page

Multiple Pages / Full Domain
Example: https://firecrawl.dev/*

When you use /*, Firecrawl will automatically crawl and parse all URLs it can discover in that domain, then extract the requested data.

```bash
curl -X POST https://api.firecrawl.dev/v1/extract \
    -H &#039;Content-Type: application/json&#039; \
    -H &#039;Authorization: Bearer YOUR_API_KEY&#039; \
    -d &#039;{
      &quot;urls&quot;: [
        &quot;https://firecrawl.dev/*&quot;, 
        &quot;https://docs.firecrawl.dev/&quot;, 
        &quot;https://www.ycombinator.com/companies&quot;
      ],
      &quot;prompt&quot;: &quot;Extract the company mission, whether it is open source, and whether it is in Y Combinator from the page.&quot;,
      &quot;schema&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;company_mission&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;is_open_source&quot;: {
            &quot;type&quot;: &quot;boolean&quot;
          },
          &quot;is_in_yc&quot;: {
            &quot;type&quot;: &quot;boolean&quot;
          }
        },
        &quot;required&quot;: [
          &quot;company_mission&quot;,
          &quot;is_open_source&quot;,
          &quot;is_in_yc&quot;
        ]
      }
    }&#039;
```

```json
{
  &quot;success&quot;: true,
  &quot;id&quot;: &quot;44aa536d-f1cb-4706-ab87-ed0386685740&quot;,
  &quot;urlTrace&quot;: []
}
```

If you are using the sdks, it will auto pull the response for you:

```json
{
  &quot;success&quot;: true,
  &quot;data&quot;: {
    &quot;company_mission&quot;: &quot;Firecrawl is the easiest way to extract data from the web. Developers use us to reliably convert URLs into LLM-ready markdown or structured data with a single API call.&quot;,
    &quot;supports_sso&quot;: false,
    &quot;is_open_source&quot;: true,
    &quot;is_in_yc&quot;: true
  }
}
```

### LLM Extraction (Beta)

Used to extract structured data from scraped pages.

```bash
curl -X POST https://api.firecrawl.dev/v1/scrape \
    -H &#039;Content-Type: application/json&#039; \
    -H &#039;Authorization: Bearer YOUR_API_KEY&#039; \
    -d &#039;{
      &quot;url&quot;: &quot;https://www.mendable.ai/&quot;,
      &quot;formats&quot;: [&quot;json&quot;],
      &quot;jsonOptions&quot;: {
        &quot;schema&quot;: {
          &quot;type&quot;: &quot;object&quot;,
          &quot;properties&quot;: {
            &quot;company_mission&quot;: {
                      &quot;type&quot;: &quot;string&quot;
            },
            &quot;supports_sso&quot;: {
                      &quot;type&quot;: &quot;boolean&quot;
            },
            &quot;is_open_source&quot;: {
                      &quot;type&quot;: &quot;boolean&quot;
            },
            &quot;is_in_yc&quot;: {
                      &quot;type&quot;: &quot;boolean&quot;
            }
          },
          &quot;required&quot;: [
            &quot;company_mission&quot;,
            &quot;supports_sso&quot;,
            &quot;is_open_source&quot;,
            &quot;is_in_yc&quot;
          ]
        }
      }
    }&#039;
```

```json
{
  &quot;success&quot;: true,
  &quot;data&quot;: {
    &quot;content&quot;: &quot;Raw Content&quot;,
    &quot;metadata&quot;: {
      &quot;title&quot;: &quot;Mendable&quot;,
      &quot;description&quot;: &quot;Mendable allows you to easily build AI chat applications. Ingest, customize, then deploy with one line of code anywhere you want. Brought to you by SideGuide&quot;,
      &quot;robots&quot;: &quot;follow, index&quot;,
      &quot;ogTitle&quot;: &quot;Mendable&quot;,
      &quot;ogDescription&quot;: &quot;Mendable allows you to easily build AI chat applications. Ingest, customize, then deploy with one line of code anywhere you want. Brought to you by SideGuide&quot;,
      &quot;ogUrl&quot;: &quot;https://mendable.ai/&quot;,
      &quot;ogImage&quot;: &quot;https://mendable.ai/mendable_new_og1.png&quot;,
      &quot;ogLocaleAlternate&quot;: [],
      &quot;ogSiteName&quot;: &quot;Mendable&quot;,
      &quot;sourceURL&quot;: &quot;https://mendable.ai/&quot;
    },
    &quot;json&quot;: {
      &quot;company_mission&quot;: &quot;Train a secure AI on your technical resources that answers customer and employee questions so your team doesn&#039;t have to&quot;,
      &quot;supports_sso&quot;: true,
      &quot;is_open_source&quot;: false,
      &quot;is_in_yc&quot;: true
    }
  }
}
```

### Extracting without a schema (New)

You can now extract without a schema by just passing a `prompt` to the endpoint. The llm chooses the structure of the data.

```bash
curl -X POST https://api.firecrawl.dev/v1/scrape \
    -H &#039;Content-Type: application/json&#039; \
    -H &#039;Authorization: Bearer YOUR_API_KEY&#039; \
    -d &#039;{
      &quot;url&quot;: &quot;https://docs.firecrawl.dev/&quot;,
      &quot;formats&quot;: [&quot;json&quot;],
      &quot;jsonOptions&quot;: {
        &quot;prompt&quot;: &quot;Extract the company mission from the page.&quot;
      }
    }&#039;
```

### Interacting with the page with Actions (Cloud-only)

Firecrawl allows you to perform various actions on a web page before scraping its content. This is particularly useful for interacting with dynamic content, navigating through pages, or accessing content that requires user interaction.

Here is an example of how to use actions to navigate to google.com, search for Firecrawl, click on the first result, and take a screenshot.

```bash
curl -X POST https://api.firecrawl.dev/v1/scrape \
    -H &#039;Content-Type: application/json&#039; \
    -H &#039;Authorization: Bearer YOUR_API_KEY&#039; \
    -d &#039;{
        &quot;url&quot;: &quot;google.com&quot;,
        &quot;formats&quot;: [&quot;markdown&quot;],
        &quot;actions&quot;: [
            {&quot;type&quot;: &quot;wait&quot;, &quot;milliseconds&quot;: 2000},
            {&quot;type&quot;: &quot;click&quot;, &quot;selector&quot;: &quot;textarea[title=\&quot;Search\&quot;]&quot;},
            {&quot;type&quot;: &quot;wait&quot;, &quot;milliseconds&quot;: 2000},
            {&quot;type&quot;: &quot;write&quot;, &quot;text&quot;: &quot;firecrawl&quot;},
            {&quot;type&quot;: &quot;wait&quot;, &quot;milliseconds&quot;: 2000},
            {&quot;type&quot;: &quot;press&quot;, &quot;key&quot;: &quot;ENTER&quot;},
            {&quot;type&quot;: &quot;wait&quot;, &quot;milliseconds&quot;: 3000},
            {&quot;type&quot;: &quot;click&quot;, &quot;selector&quot;: &quot;h3&quot;},
            {&quot;type&quot;: &quot;wait&quot;, &quot;milliseconds&quot;: 3000},
            {&quot;type&quot;: &quot;screenshot&quot;}
        ]
    }&#039;
```

### Batch Scraping Multiple URLs (New)

You can now batch scrape multiple URLs at the same time. It is very similar to how the /crawl endpoint works. It submits a batch scrape job and returns a job ID to check the status of the batch scrape.

```bash
curl -X POST https://api.firecrawl.dev/v1/batch/scrape \
    -H &#039;Content-Type: application/json&#039; \
    -H &#039;Authorization: Bearer YOUR_API_KEY&#039; \
    -d &#039;{
      &quot;urls&quot;: [&quot;https://docs.firecrawl.dev&quot;, &quot;https://docs.firecrawl.dev/sdks/overview&quot;],
      &quot;formats&quot; : [&quot;markdown&quot;, &quot;html&quot;]
    }&#039;
```



## Using Python SDK

### Installing Python SDK

```bash
pip install firecrawl-py
```

### Crawl a website

```python
from firecrawl.firecrawl import FirecrawlApp

app = FirecrawlApp(api_key=&quot;fc-YOUR_API_KEY&quot;)

# Scrape a website:
scrape_status = app.scrape_url(
  &#039;https://firecrawl.dev&#039;, 
  formats=[&quot;markdown&quot;, &quot;html&quot;]
)
print(scrape_status)

# Crawl a website:
crawl_status = app.crawl_url(
  &#039;https://firecrawl.dev&#039;,
  limit=100,
  scrapeOptions&#039;={&#039;formats&#039;: [&#039;markdown&#039;, &#039;html&#039;]}
  poll_interval=30
)
print(crawl_status)
```

### Extracting structured data from a URL

With LLM extraction, you can easily extract structured data from any URL. We support pydantic schemas to make it easier for you too. Here is how you to use it:

```python
class ArticleSchema(BaseModel):
    title: str
    points: int 
    by: str
    commentsURL: str

class TopArticlesSchema(BaseModel):
    top: List[ArticleSchema] = Field(..., description=&quot;Top 5 stories&quot;)

json_config = JsonConfig(schema=TopArticlesSchema.model_json_schema())

llm_extraction_result = app.scrape_url(&#039;https://news.ycombinator.com&#039;, formats=[&quot;json&quot;], json=json_config)

print(llm_extraction_result.json)
```

## Using the Node SDK

### Installation

To install the Firecrawl Node SDK, you can use npm:

```bash
npm install @mendable/firecrawl-js
```

### Usage

1. Get an API key from [firecrawl.dev](https://firecrawl.dev)
2. Set the API key as an environment variable named `FIRECRAWL_API_KEY` or pass it as a parameter to the `FirecrawlApp` class.

```js
import FirecrawlApp, { CrawlParams, CrawlStatusResponse } from &#039;@mendable/firecrawl-js&#039;;

const app = new FirecrawlApp({apiKey: &quot;fc-YOUR_API_KEY&quot;});

// Scrape a website
const scrapeResponse = await app.scrapeUrl(&#039;https://firecrawl.dev&#039;, {
  formats: [&#039;markdown&#039;, &#039;html&#039;],
});

if (scrapeResponse) {
  console.log(scrapeResponse)
}

// Crawl a website
const crawlResponse = await app.crawlUrl(&#039;https://firecrawl.dev&#039;, {
  limit: 100,
  scrapeOptions: {
    formats: [&#039;markdown&#039;, &#039;html&#039;],
  }
} satisfies CrawlParams, true, 30) satisfies CrawlStatusResponse;

if (crawlResponse) {
  console.log(crawlResponse)
}
```


### Extracting structured data from a URL

With LLM extraction, you can easily extract structured data from any URL. We support zod schema to make it easier for you too. Here is how to use it:

```js
import FirecrawlApp from &quot;@mendable/firecrawl-js&quot;;
import { z } from &quot;zod&quot;;

const app = new FirecrawlApp({
  apiKey: &quot;fc-YOUR_API_KEY&quot;
});

// Define schema to extract contents into
const schema = z.object({
  top: z
    .array(
      z.object({
        title: z.string(),
        points: z.number(),
        by: z.string(),
        commentsURL: z.string(),
      })
    )
    .length(5)
    .describe(&quot;Top 5 stories on Hacker News&quot;),
});

const scrapeResult = await app.scrapeUrl(&quot;https://news.ycombinator.com&quot;, {
  jsonOption

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[langfuse/langfuse]]></title>
            <link>https://github.com/langfuse/langfuse</link>
            <guid>https://github.com/langfuse/langfuse</guid>
            <pubDate>Sun, 18 May 2025 00:04:47 GMT</pubDate>
            <description><![CDATA[ü™¢ Open source LLM engineering platform: LLM Observability, metrics, evals, prompt management, playground, datasets. Integrates with OpenTelemetry, Langchain, OpenAI SDK, LiteLLM, and more. üçäYC W23]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/langfuse/langfuse">langfuse/langfuse</a></h1>
            <p>ü™¢ Open source LLM engineering platform: LLM Observability, metrics, evals, prompt management, playground, datasets. Integrates with OpenTelemetry, Langchain, OpenAI SDK, LiteLLM, and more. üçäYC W23</p>
            <p>Language: TypeScript</p>
            <p>Stars: 11,485</p>
            <p>Forks: 1,039</p>
            <p>Stars today: 14 stars today</p>
            <h2>README</h2><pre>![Langfuse GitHub Banner](https://langfuse.com/images/docs/github-readme/github-banner.png)

&lt;div align=&quot;center&quot;&gt;
   &lt;div&gt;
      &lt;h3&gt;
         &lt;a href=&quot;https://cloud.langfuse.com&quot;&gt;
            &lt;strong&gt;Langfuse Cloud&lt;/strong&gt;
         &lt;/a&gt; ¬∑ 
         &lt;a href=&quot;https://langfuse.com/docs/deployment/self-host&quot;&gt;
            &lt;strong&gt;Self Host&lt;/strong&gt;
         &lt;/a&gt; ¬∑ 
         &lt;a href=&quot;https://langfuse.com/demo&quot;&gt;
            &lt;strong&gt;Demo&lt;/strong&gt;
         &lt;/a&gt;
      &lt;/h3&gt;
   &lt;/div&gt;

   &lt;div&gt;
      &lt;a href=&quot;https://langfuse.com/docs&quot;&gt;&lt;strong&gt;Docs&lt;/strong&gt;&lt;/a&gt; ¬∑
      &lt;a href=&quot;https://langfuse.com/issues&quot;&gt;&lt;strong&gt;Report Bug&lt;/strong&gt;&lt;/a&gt; ¬∑
      &lt;a href=&quot;https://langfuse.com/ideas&quot;&gt;&lt;strong&gt;Feature Request&lt;/strong&gt;&lt;/a&gt; ¬∑
      &lt;a href=&quot;https://langfuse.com/changelog&quot;&gt;&lt;strong&gt;Changelog&lt;/strong&gt;&lt;/a&gt; ¬∑
      &lt;a href=&quot;https://langfuse.com/roadmap&quot;&gt;&lt;strong&gt;Roadmap&lt;/strong&gt;&lt;/a&gt; ¬∑
   &lt;/div&gt;
   &lt;br/&gt;
   &lt;span&gt;Langfuse uses &lt;a href=&quot;https://github.com/orgs/langfuse/discussions&quot;&gt;&lt;strong&gt;Github Discussions&lt;/strong&gt;&lt;/a&gt;  for Support and Feature Requests.&lt;/span&gt;
   &lt;br/&gt;
   &lt;span&gt;&lt;b&gt;We&#039;re hiring.&lt;/b&gt; &lt;a href=&quot;https://langfuse.com/careers&quot;&gt;&lt;strong&gt;Join us&lt;/strong&gt;&lt;/a&gt; in product engineering and technical go-to-market roles.&lt;/span&gt;
   &lt;br/&gt;
   &lt;br/&gt;
   &lt;div&gt;
   &lt;/div&gt;
&lt;/div&gt;

&lt;p align=&quot;center&quot;&gt;
   &lt;a href=&quot;https://github.com/langfuse/langfuse/blob/main/LICENSE&quot;&gt;
   &lt;img src=&quot;https://img.shields.io/badge/License-MIT-E11311.svg&quot; alt=&quot;MIT License&quot;&gt;
   &lt;/a&gt;
   &lt;a href=&quot;https://www.ycombinator.com/companies/langfuse&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Y%20Combinator-W23-orange&quot; alt=&quot;Y Combinator W23&quot;&gt;&lt;/a&gt;
   &lt;a href=&quot;https://hub.docker.com/u/langfuse&quot; target=&quot;_blank&quot;&gt;
   &lt;img alt=&quot;Docker Pulls&quot; src=&quot;https://img.shields.io/docker/pulls/langfuse/langfuse?labelColor=%20%23FDB062&amp;logo=Docker&amp;labelColor=%20%23528bff&quot;&gt;&lt;/a&gt;
   &lt;a href=&quot;https://pypi.python.org/pypi/langfuse&quot;&gt;&lt;img src=&quot;https://img.shields.io/pypi/dm/langfuse?logo=python&amp;logoColor=white&amp;label=pypi%20langfuse&amp;color=blue&quot; alt=&quot;langfuse Python package on PyPi&quot;&gt;&lt;/a&gt;
   &lt;a href=&quot;https://www.npmjs.com/package/langfuse&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/langfuse?logo=npm&amp;logoColor=white&amp;label=npm%20langfuse&amp;color=blue&quot; alt=&quot;langfuse npm package&quot;&gt;&lt;/a&gt;
   &lt;br/&gt;
   &lt;a href=&quot;https://discord.com/invite/7NXusRtqYU&quot; target=&quot;_blank&quot;&gt;
   &lt;img src=&quot;https://img.shields.io/discord/1111061815649124414?logo=discord&amp;labelColor=%20%235462eb&amp;logoColor=%20%23f5f5f5&amp;color=%20%235462eb&quot;
      alt=&quot;chat on Discord&quot;&gt;&lt;/a&gt;
   &lt;a href=&quot;https://twitter.com/intent/follow?screen_name=langfuse&quot; target=&quot;_blank&quot;&gt;
   &lt;img src=&quot;https://img.shields.io/twitter/follow/langfuse?logo=X&amp;color=%20%23f5f5f5&quot;
      alt=&quot;follow on X(Twitter)&quot;&gt;&lt;/a&gt;
   &lt;a href=&quot;https://www.linkedin.com/company/langfuse/&quot; target=&quot;_blank&quot;&gt;
   &lt;img src=&quot;https://custom-icon-badges.demolab.com/badge/LinkedIn-0A66C2?logo=linkedin-white&amp;logoColor=fff&quot;
      alt=&quot;follow on LinkedIn&quot;&gt;&lt;/a&gt;
   &lt;a href=&quot;https://github.com/langfuse/langfuse/graphs/commit-activity&quot; target=&quot;_blank&quot;&gt;
   &lt;img alt=&quot;Commits last month&quot; src=&quot;https://img.shields.io/github/commit-activity/m/langfuse/langfuse?labelColor=%20%2332b583&amp;color=%20%2312b76a&quot;&gt;&lt;/a&gt;
   &lt;a href=&quot;https://github.com/langfuse/langfuse/&quot; target=&quot;_blank&quot;&gt;
   &lt;img alt=&quot;Issues closed&quot; src=&quot;https://img.shields.io/github/issues-search?query=repo%3Alangfuse%2Flangfuse%20is%3Aclosed&amp;label=issues%20closed&amp;labelColor=%20%237d89b0&amp;color=%20%235d6b98&quot;&gt;&lt;/a&gt;
   &lt;a href=&quot;https://github.com/langfuse/langfuse/discussions/&quot; target=&quot;_blank&quot;&gt;
   &lt;img alt=&quot;Discussion posts&quot; src=&quot;https://img.shields.io/github/discussions/langfuse/langfuse?labelColor=%20%239b8afb&amp;color=%20%237a5af8&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;./README.md&quot;&gt;&lt;img alt=&quot;README in English&quot; src=&quot;https://img.shields.io/badge/English-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;./README.cn.md&quot;&gt;&lt;img alt=&quot;ÁÆÄ‰Ωì‰∏≠ÊñáÁâàËá™Ëø∞Êñá‰ª∂&quot; src=&quot;https://img.shields.io/badge/ÁÆÄ‰Ωì‰∏≠Êñá-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;./README.ja.md&quot;&gt;&lt;img alt=&quot;Êó•Êú¨Ë™û„ÅÆREADME&quot; src=&quot;https://img.shields.io/badge/Êó•Êú¨Ë™û-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;./README.kr.md&quot;&gt;&lt;img alt=&quot;README in Korean&quot; src=&quot;https://img.shields.io/badge/ÌïúÍµ≠Ïñ¥-d9d9d9&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

Langfuse is an **open source LLM engineering** platform. It helps teams collaboratively
**develop, monitor, evaluate,** and **debug** AI applications. Langfuse can be **self-hosted in minutes** and is **battle-tested**.

[![Langfuse Overview Video](https://github.com/user-attachments/assets/3926b288-ff61-4b95-8aa1-45d041c70866)](https://langfuse.com/watch-demo)

## ‚ú® Core Features

![Langfuse Overview](https://langfuse.com/images/docs/github-readme/github-feature-overview.png)

- [LLM Application Observability](https://langfuse.com/docs/tracing): Instrument your app and start ingesting traces to Langfuse, thereby tracking LLM calls and other relevant logic in your app such as retrieval, embedding, or agent actions. Inspect and debug complex logs and user sessions. Try the interactive [demo](https://langfuse.com/docs/demo) to see this in action.

- [Prompt Management](https://langfuse.com/docs/prompts/get-started) helps you centrally manage, version control, and collaboratively iterate on your prompts. Thanks to strong caching on server and client side, you can iterate on prompts without adding latency to your application.

- [Evaluations](https://langfuse.com/docs/scores/overview) are key to the LLM application development workflow, and Langfuse adapts to your needs. It supports LLM-as-a-judge, user feedback collection, manual labeling, and custom evaluation pipelines via APIs/SDKs.

- [Datasets](https://langfuse.com/docs/datasets/overview) enable test sets and benchmarks for evaluating your LLM application. They support continuous improvement, pre-deployment testing, structured experiments, flexible evaluation, and seamless integration with frameworks like LangChain and LlamaIndex.

- [LLM Playground](https://langfuse.com/docs/playground) is a tool for testing and iterating on your prompts and model configurations, shortening the feedback loop and accelerating development. When you see a bad result in tracing, you can directly jump to the playground to iterate on it.

- [Comprehensive API](https://langfuse.com/docs/api): Langfuse is frequently used to power bespoke LLMOps workflows while using the building blocks provided by Langfuse via the API. OpenAPI spec, Postman collection, and typed SDKs for Python, JS/TS are available.

## üì¶ Deploy Langfuse

![Langfuse Deployment Options](https://langfuse.com/images/docs/github-readme/github-deployment-options.png)

### Langfuse Cloud

Managed deployment by the Langfuse team, generous free-tier (hobby plan), no credit card required.

&lt;div align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://cloud.langfuse.com&quot; target=&quot;_blank&quot;&gt;
        &lt;img alt=&quot;Static Badge&quot; src=&quot;https://img.shields.io/badge/¬ª%20Sign%20up%20for%20Langfuse%20Cloud-8A2BE2?&amp;color=orange&quot;&gt;
    &lt;/a&gt;
&lt;/div&gt;

### Self-Host Langfuse

Run Langfuse on your own infrastructure:

- [Local (docker compose)](https://langfuse.com/self-hosting/local): Run Langfuse on your own machine in 5 minutes using Docker Compose.

  ```bash
  # Get a copy of the latest Langfuse repository
  git clone https://github.com/langfuse/langfuse.git
  cd langfuse

  # Run the langfuse docker compose
  docker compose up
  ```

- [Kubernetes (Helm)](https://langfuse.com/self-hosting/kubernetes-helm): Run Langfuse on a Kubernetes cluster using Helm. This is the preferred production deployment.
- [VM](https://langfuse.com/self-hosting/docker-compose): Run Langfuse on a single Virtual Machine using Docker Compose.
- Planned: Cloud-specific deployment guides, please upvote and comment on the following threads: [AWS](https://github.com/orgs/langfuse/discussions/4645), [Google Cloud](https://github.com/orgs/langfuse/discussions/4646), [Azure](https://github.com/orgs/langfuse/discussions/4647).

See [self-hosting documentation](https://langfuse.com/self-hosting) to learn more about the architecture and configuration options.

## üîå Integrations

![Langfuse Integrations](https://langfuse.com/images/docs/github-readme/github-integrations.png)

### Main Integrations:

| Integration                                                                  | Supports                   | Description                                                                                                                                      |
| ---------------------------------------------------------------------------- | -------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------ |
| [SDK](https://langfuse.com/docs/sdk)                                         | Python, JS/TS              | Manual instrumentation using the SDKs for full flexibility.                                                                                      |
| [OpenAI](https://langfuse.com/docs/integrations/openai)                      | Python, JS/TS              | Automated instrumentation using drop-in replacement of OpenAI SDK.                                                                               |
| [Langchain](https://langfuse.com/docs/integrations/langchain)                | Python, JS/TS              | Automated instrumentation by passing callback handler to Langchain application.                                                                  |
| [LlamaIndex](https://langfuse.com/docs/integrations/llama-index/get-started) | Python                     | Automated instrumentation via LlamaIndex callback system.                                                                                        |
| [Haystack](https://langfuse.com/docs/integrations/haystack)                  | Python                     | Automated instrumentation via Haystack content tracing system.                                                                                   |
| [LiteLLM](https://langfuse.com/docs/integrations/litellm)                    | Python, JS/TS (proxy only) | Use any LLM as a drop in replacement for GPT. Use Azure, OpenAI, Cohere, Anthropic, Ollama, VLLM, Sagemaker, HuggingFace, Replicate (100+ LLMs). |
| [Vercel AI SDK](https://langfuse.com/docs/integrations/vercel-ai-sdk)        | JS/TS                      | TypeScript toolkit designed to help developers build AI-powered applications with React, Next.js, Vue, Svelte, Node.js.                          |
| [API](https://langfuse.com/docs/api)                                         |                            | Directly call the public API. OpenAPI spec available.                                                                                            |

### Packages integrated with Langfuse:

| Name                                                                    | Type               | Description                                                                                                             |
| ----------------------------------------------------------------------- | ------------------ | ----------------------------------------------------------------------------------------------------------------------- |
| [Instructor](https://langfuse.com/docs/integrations/instructor)         | Library            | Library to get structured LLM outputs (JSON, Pydantic)                                                                  |
| [DSPy](https://langfuse.com/docs/integrations/dspy)                     | Library            | Framework that systematically optimizes language model prompts and weights                                              |
| [Mirascope](https://langfuse.com/docs/integrations/mirascope)           | Library            | Python toolkit for building LLM applications.                                                                           |
| [Ollama](https://langfuse.com/docs/integrations/ollama)                 | Model (local)      | Easily run open source LLMs on your own machine.                                                                        |
| [Amazon Bedrock](https://langfuse.com/docs/integrations/amazon-bedrock) | Model              | Run foundation and fine-tuned models on AWS.                                                                            |
| [AutoGen](https://langfuse.com/docs/integrations/autogen)               | Agent Framework    | Open source LLM platform for building distributed agents.                                                               |
| [Flowise](https://langfuse.com/docs/integrations/flowise)               | Chat/Agent&amp;nbsp;UI | JS/TS no-code builder for customized LLM flows.                                                                         |
| [Langflow](https://langfuse.com/docs/integrations/langflow)             | Chat/Agent&amp;nbsp;UI | Python-based UI for LangChain, designed with react-flow to provide an effortless way to experiment and prototype flows. |
| [Dify](https://langfuse.com/docs/integrations/dify)                     | Chat/Agent&amp;nbsp;UI | Open source LLM app development platform with no-code builder.                                                          |
| [OpenWebUI](https://langfuse.com/docs/integrations/openwebui)           | Chat/Agent&amp;nbsp;UI | Self-hosted LLM Chat web ui supporting various LLM runners including self-hosted and local models.                      |
| [Promptfoo](https://langfuse.com/docs/integrations/promptfoo)           | Tool               | Open source LLM testing platform.                                                                                       |
| [LobeChat](https://langfuse.com/docs/integrations/lobechat)             | Chat/Agent&amp;nbsp;UI | Open source chatbot platform.                                                                                           |
| [Vapi](https://langfuse.com/docs/integrations/vapi)                     | Platform           | Open source voice AI platform.                                                                                          |
| [Inferable](https://langfuse.com/docs/integrations/other/inferable)     | Agents             | Open source LLM platform for building distributed agents.                                                               |
| [Gradio](https://langfuse.com/docs/integrations/other/gradio)           | Chat/Agent&amp;nbsp;UI | Open source Python library to build web interfaces like Chat UI.                                                        |
| [Goose](https://langfuse.com/docs/integrations/goose)                   | Agents             | Open source LLM platform for building distributed agents.                                                               |
| [smolagents](https://langfuse.com/docs/integrations/smolagents)         | Agents             | Open source AI agents framework.                                                                                        |
| [CrewAI](https://langfuse.com/docs/integrations/crewai)                 | Agents             | Multi agent framework for agent collaboration and tool use.                                                             |

## üöÄ Quickstart

Instrument your app and start ingesting traces to Langfuse, thereby tracking LLM calls and other relevant logic in your app such as retrieval, embedding, or agent actions. Inspect and debug complex logs and user sessions.

### 1Ô∏è‚É£ Create new project

1.  [Create Langfuse account](https://cloud.langfuse.com/auth/sign-up) or [self-host](https://langfuse.com/self-hosting)
2.  Create a new project
3.  Create new API credentials in the project settings

### 2Ô∏è‚É£ Log your first LLM call

The [`@observe()` decorator](https://langfuse.com/docs/sdk/python/decorators) makes it easy to trace any Python LLM application. In this quickstart we also use the Langfuse [OpenAI integration](https://langfuse.com/docs/integrations/openai) to automatically capture all model parameters.

&gt; [!TIP]
&gt; Not using OpenAI? Visit [our documentation](https://langfuse.com/docs/get-started#log-your-first-llm-call-to-langfuse) to learn how to log other models and frameworks.

```bash
pip install langfuse openai
```

```bash filename=&quot;.env&quot;
LANGFUSE_SECRET_KEY=&quot;sk-lf-...&quot;
LANGFUSE_PUBLIC_KEY=&quot;pk-lf-...&quot;
LANGFUSE_HOST=&quot;https://cloud.langfuse.com&quot; # üá™üá∫ EU region
# LANGFUSE_HOST=&quot;https://us.cloud.langfuse.com&quot; # üá∫üá∏ US region
```

```python /@observe()/ /from langfuse.openai import openai/ filename=&quot;main.py&quot;
from langfuse.decorators import observe
from langfuse.openai import openai # OpenAI integration

@observe()
def story():
    return openai.chat.completions.create(
        model=&quot;gpt-4o&quot;,
        messages=[{&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;What is Langfuse?&quot;}],
    ).choices[0].message.content

@observe()
def main():
    return story()

main()
```

### 3Ô∏è‚É£ See traces in Langfuse

See your language model calls and other application logic in Langfuse.

![Example trace in Langfuse](https://langfuse.com/images/docs/github-readme/github-example-trace.png)

_[Public example trace in Langfuse](https://cloud.langfuse.com/project/cloramnkj0002jz088vzn1ja4/traces/2cec01e3-3dc2-472f-afcf-3b968cf0c1f4?timestamp=2025-02-10T14%3A27%3A30.275Z&amp;observation=cb5ff844-07ef-41e6-b8e2-6c64344bc13b)_

&gt; [!TIP]
&gt;
&gt; [Learn more](https://langfuse.com/docs/tracing) about tracing in Langfuse or play with the [interactive demo](https://langfuse.com/docs/demo).

## ‚≠êÔ∏è Star Us

![star-langfuse-on-github](https://github.com/user-attachments/assets/79a1d816-d229-4526-aecc-097d4a19f1ad)

## üí≠ Support

Finding an answer to your question:

- Our [documentation](https://langfuse.com/docs) is the best place to start looking for answers. It is comprehensive, and we invest significant time into maintaining it. You can also suggest edits to the docs via GitHub.
- [Langfuse FAQs](https://langfuse.com/faq) where the most common questions are answered.
- Use &quot;[Ask AI](https://langfuse.com/docs/ask-ai)&quot; to get instant answers to your questions.

Support Channels:

- **Ask any question in our [public Q&amp;A](https://github.com/orgs/langfuse/discussions/categories/support) on GitHub Discussions.** Please include as much detail as possible (e.g. code snippets, screenshots, background information) to help us understand your question.
- [Request a feature](https://github.com/orgs/langfuse/discussions/categories/ideas) on GitHub Discussions.
- [Report a Bug](https://github.com/langfuse/langfuse/issues) on GitHub Issues.
- For time-sensitive queries, ping us via the in-app chat widget.

## ü§ù Contributing

Your contributions are welcome!

- Vote on [Ideas](https://github.com/orgs/langfuse/discussions/categories/ideas) in GitHub Discussions.
- Raise and comment on [Issues](https://github.com/langfuse/langfuse/issues).
- Open a PR - see [CONTRIBUTING.md](CONTRIBUTING.md) for details on how to setup a development environment.

## ü•á License

This repository is MIT licensed, except for the `ee` folders. See [LICENSE](LICENSE) and [docs](https://langfuse.com/docs/open-source) for more details.

## ‚≠êÔ∏è Star History

&lt;a href=&quot;https://star-history.com/#langfuse/langfuse&amp;Date&quot;&gt;
 &lt;picture&gt;
   &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://api.star-history.com/svg?repos=langfuse/langfuse&amp;type=Date&amp;theme=dark&quot; /&gt;
   &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://api.star-history.com/svg?repos=langfuse/langfuse&amp;type=Date&quot; /&gt;
   &lt;img alt=&quot;Star History Chart&quot; src=&quot;https://api.star-history.com/svg?repos=langfuse/langfuse&amp;type=Date&quot; style=&quot;border-radius: 15px;&quot; /&gt;
 &lt;/picture&gt;
&lt;/a&gt;

## ‚ù§Ô∏è Open Source Projects Using Langfuse

Top open-source Python projects that use Langfuse, ranked by stars ([Source](https://github.com/langfuse/langfuse-docs/blob/main/components-mdx/dependents)):

| Repository                                                                                                                                                                                                                                                          | Stars |
| :----------------------------------------------------------------

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[medusajs/medusa]]></title>
            <link>https://github.com/medusajs/medusa</link>
            <guid>https://github.com/medusajs/medusa</guid>
            <pubDate>Sun, 18 May 2025 00:04:46 GMT</pubDate>
            <description><![CDATA[The world's most flexible commerce platform.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/medusajs/medusa">medusajs/medusa</a></h1>
            <p>The world's most flexible commerce platform.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 29,063</p>
            <p>Forks: 3,291</p>
            <p>Stars today: 20 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.medusajs.com&quot;&gt;
  &lt;picture&gt;
    &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://user-images.githubusercontent.com/59018053/229103275-b5e482bb-4601-46e6-8142-244f531cebdb.svg&quot;&gt;
    &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://user-images.githubusercontent.com/59018053/229103726-e5b529a3-9b3f-4970-8a1f-c6af37f087bf.svg&quot;&gt;
    &lt;img alt=&quot;Medusa logo&quot; src=&quot;https://user-images.githubusercontent.com/59018053/229103726-e5b529a3-9b3f-4970-8a1f-c6af37f087bf.svg&quot;&gt;
    &lt;/picture&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;h1 align=&quot;center&quot;&gt;
  Medusa
&lt;/h1&gt;

&lt;h4 align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://docs.medusajs.com&quot;&gt;Documentation&lt;/a&gt; |
  &lt;a href=&quot;https://www.medusajs.com&quot;&gt;Website&lt;/a&gt;
&lt;/h4&gt;

&lt;p align=&quot;center&quot;&gt;
  Building blocks for digital commerce
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/medusajs/medusa/blob/master/LICENSE&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/license-MIT-blue.svg&quot; alt=&quot;Medusa is released under the MIT license.&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://circleci.com/gh/medusajs/medusa&quot;&gt;
    &lt;img src=&quot;https://circleci.com/gh/medusajs/medusa.svg?style=shield&quot; alt=&quot;Current CircleCI build status.&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/medusajs/medusa/blob/master/CONTRIBUTING.md&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat&quot; alt=&quot;PRs welcome!&quot; /&gt;
  &lt;/a&gt;
    &lt;a href=&quot;https://www.producthunt.com/posts/medusa&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Product%20Hunt-%231%20Product%20of%20the%20Day-%23DA552E&quot; alt=&quot;Product Hunt&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://discord.gg/xpCwq3Kfn8&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/chat-on%20discord-7289DA.svg&quot; alt=&quot;Discord Chat&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://twitter.com/intent/follow?screen_name=medusajs&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/twitter/follow/medusajs.svg?label=Follow%20@medusajs&quot; alt=&quot;Follow @medusajs&quot; /&gt;
  &lt;/a&gt;
&lt;/p&gt;

## Getting Started

Visit the [Quickstart Guide](https://docs.medusajs.com/create-medusa-app) to set up a server.

Visit the [Docs](https://docs.medusajs.com/development/backend/prepare-environment) to learn more about our system requirements.

## What is Medusa

Medusa is a set of commerce modules and tools that allow you to build rich, reliable, and performant commerce applications without reinventing core commerce logic. The modules can be customized and used to build advanced ecommerce stores, marketplaces, or any product that needs foundational commerce primitives. All modules are open-source and freely available on npm.

Learn more about [Medusa‚Äôs architecture](https://docs.medusajs.com/development/fundamentals/architecture-overview) and [commerce modules](https://docs.medusajs.com/modules/overview) in the Docs.

## Roadmap, Upgrades &amp; Plugins

You can view the planned, started and completed features in the [Roadmap discussion](https://github.com/medusajs/medusa/discussions/categories/roadmap).

Follow the [Upgrade Guides](https://docs.medusajs.com/upgrade-guides/) to keep your Medusa project up-to-date.

Check out all [available Medusa plugins](https://medusajs.com/plugins/).

## Community &amp; Contributions

The community and core team are available in [GitHub Discussions](https://github.com/medusajs/medusa/discussions), where you can ask for support, discuss roadmap, and share ideas.

Our [Contribution Guide](https://github.com/medusajs/medusa/blob/master/CONTRIBUTING.md) describes how to contribute to the codebase and Docs.

Join our [Discord server](https://discord.com/invite/medusajs) to meet other community members.

## Other channels

- [GitHub Issues](https://github.com/medusajs/medusa/issues)
- [Twitter](https://twitter.com/medusajs)
- [LinkedIn](https://www.linkedin.com/company/medusajs)
- [Medusa Blog](https://medusajs.com/blog/)

## License

Licensed under the [MIT License](https://github.com/medusajs/medusa/blob/master/LICENSE).
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[vitejs/vite]]></title>
            <link>https://github.com/vitejs/vite</link>
            <guid>https://github.com/vitejs/vite</guid>
            <pubDate>Sun, 18 May 2025 00:04:45 GMT</pubDate>
            <description><![CDATA[Next generation frontend tooling. It's fast!]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/vitejs/vite">vitejs/vite</a></h1>
            <p>Next generation frontend tooling. It's fast!</p>
            <p>Language: TypeScript</p>
            <p>Stars: 72,721</p>
            <p>Forks: 6,705</p>
            <p>Stars today: 19 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://vite.dev&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;
    &lt;img width=&quot;180&quot; src=&quot;https://vite.dev/logo.svg&quot; alt=&quot;Vite logo&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;br/&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://npmjs.com/package/vite&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/vite.svg&quot; alt=&quot;npm package&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://nodejs.org/en/about/previous-releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/node/v/vite.svg&quot; alt=&quot;node compatibility&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://github.com/vitejs/vite/actions/workflows/ci.yml&quot;&gt;&lt;img src=&quot;https://github.com/vitejs/vite/actions/workflows/ci.yml/badge.svg?branch=main&quot; alt=&quot;build status&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://pr.new/vitejs/vite&quot;&gt;&lt;img src=&quot;https://developer.stackblitz.com/img/start_pr_dark_small.svg&quot; alt=&quot;Start new PR in StackBlitz Codeflow&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://chat.vite.dev&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/chat-discord-blue?style=flat&amp;logo=discord&quot; alt=&quot;discord chat&quot;&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;br/&gt;

# Vite ‚ö°

&gt; Next Generation Frontend Tooling

- üí° Instant Server Start
- ‚ö°Ô∏è Lightning Fast HMR
- üõ†Ô∏è Rich Features
- üì¶ Optimized Build
- üî© Universal Plugin Interface
- üîë Fully Typed APIs

Vite (French word for &quot;quick&quot;, pronounced [`/vit/`](https://cdn.jsdelivr.net/gh/vitejs/vite@main/docs/public/vite.mp3), like &quot;veet&quot;) is a new breed of frontend build tooling that significantly improves the frontend development experience. It consists of two major parts:

- A dev server that serves your source files over [native ES modules](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules), with [rich built-in features](https://vite.dev/guide/features.html) and astonishingly fast [Hot Module Replacement (HMR)](https://vite.dev/guide/features.html#hot-module-replacement).

- A [build command](https://vite.dev/guide/build.html) that bundles your code with [Rollup](https://rollupjs.org), pre-configured to output highly optimized static assets for production.

In addition, Vite is highly extensible via its [Plugin API](https://vite.dev/guide/api-plugin.html) and [JavaScript API](https://vite.dev/guide/api-javascript.html) with full typing support.

[Read the Docs to Learn More](https://vite.dev).

## Packages

| Package                                         | Version (click for changelogs)                                                                                                    |
| ----------------------------------------------- | :-------------------------------------------------------------------------------------------------------------------------------- |
| [vite](packages/vite)                           | [![vite version](https://img.shields.io/npm/v/vite.svg?label=%20)](packages/vite/CHANGELOG.md)                                    |
| [@vitejs/plugin-legacy](packages/plugin-legacy) | [![plugin-legacy version](https://img.shields.io/npm/v/@vitejs/plugin-legacy.svg?label=%20)](packages/plugin-legacy/CHANGELOG.md) |
| [create-vite](packages/create-vite)             | [![create-vite version](https://img.shields.io/npm/v/create-vite.svg?label=%20)](packages/create-vite/CHANGELOG.md)               |

## Contribution

See [Contributing Guide](CONTRIBUTING.md).

## License

[MIT](LICENSE).

## Sponsors

&lt;p align=&quot;center&quot;&gt;
  &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/sponsors/yyx990803&quot;&gt;
    &lt;img alt=&quot;sponsors&quot; src=&quot;https://sponsors.vuejs.org/vite.svg?v2&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[Flux159/mcp-server-kubernetes]]></title>
            <link>https://github.com/Flux159/mcp-server-kubernetes</link>
            <guid>https://github.com/Flux159/mcp-server-kubernetes</guid>
            <pubDate>Sun, 18 May 2025 00:04:44 GMT</pubDate>
            <description><![CDATA[MCP Server for kubernetes management commands]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/Flux159/mcp-server-kubernetes">Flux159/mcp-server-kubernetes</a></h1>
            <p>MCP Server for kubernetes management commands</p>
            <p>Language: TypeScript</p>
            <p>Stars: 613</p>
            <p>Forks: 88</p>
            <p>Stars today: 7 stars today</p>
            <h2>README</h2><pre># MCP Server Kubernetes

[![CI](https://github.com/Flux159/mcp-server-kubernetes/actions/workflows/ci.yml/badge.svg)](https://github.com/yourusername/mcp-server-kubernetes/actions/workflows/ci.yml)
[![Language](https://img.shields.io/github/languages/top/Flux159/mcp-server-kubernetes)](https://github.com/yourusername/mcp-server-kubernetes)
[![Bun](https://img.shields.io/badge/runtime-bun-orange)](https://bun.sh)
[![Kubernetes](https://img.shields.io/badge/kubernetes-%23326ce5.svg?style=flat&amp;logo=kubernetes&amp;logoColor=white)](https://kubernetes.io/)
[![Docker](https://img.shields.io/badge/docker-%230db7ed.svg?style=flat&amp;logo=docker&amp;logoColor=white)](https://www.docker.com/)
[![Stars](https://img.shields.io/github/stars/Flux159/mcp-server-kubernetes)](https://github.com/Flux159/mcp-server-kubernetes/stargazers)
[![Issues](https://img.shields.io/github/issues/Flux159/mcp-server-kubernetes)](https://github.com/Flux159/mcp-server-kubernetes/issues)
[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](https://github.com/Flux159/mcp-server-kubernetes/pulls)
[![Last Commit](https://img.shields.io/github/last-commit/Flux159/mcp-server-kubernetes)](https://github.com/Flux159/mcp-server-kubernetes/commits/main)
[![smithery badge](https://smithery.ai/badge/mcp-server-kubernetes)](https://smithery.ai/protocol/mcp-server-kubernetes)

MCP Server that can connect to a Kubernetes cluster and manage it.

https://github.com/user-attachments/assets/f25f8f4e-4d04-479b-9ae0-5dac452dd2ed

&lt;a href=&quot;https://glama.ai/mcp/servers/w71ieamqrt&quot;&gt;&lt;img width=&quot;380&quot; height=&quot;200&quot; src=&quot;https://glama.ai/mcp/servers/w71ieamqrt/badge&quot; /&gt;&lt;/a&gt;

## Usage with Claude Desktop

```json
{
  &quot;mcpServers&quot;: {
    &quot;kubernetes&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;mcp-server-kubernetes&quot;]
    }
  }
}
```

The server will automatically connect to your current kubectl context. Make sure you have:

1. kubectl installed and in your PATH
2. A valid kubeconfig file with contexts configured
3. Access to a Kubernetes cluster configured for kubectl (e.g. minikube, Rancher Desktop, GKE, etc.)
4. Helm v3 installed and in your PATH (no Tiller required). Optional if you don&#039;t plan to use Helm.

You can verify your connection by asking Claude to list your pods or create a test deployment.

If you have errors open up a standard terminal and run `kubectl get pods` to see if you can connect to your cluster without credentials issues.

## Usage with mcp-chat

[mcp-chat](https://github.com/Flux159/mcp-chat) is a CLI chat client for MCP servers. You can use it to interact with the Kubernetes server.

```shell
npx mcp-chat --server &quot;npx mcp-server-kubernetes&quot;
```

Alternatively, pass it your existing Claude Desktop configuration file from above (Linux should pass the correct path to config):

Mac:

```shell
npx mcp-chat --config &quot;~/Library/Application Support/Claude/claude_desktop_config.json&quot;
```

Windows:

```shell
npx mcp-chat --config &quot;%APPDATA%\Claude\claude_desktop_config.json&quot;
```

## Features

- [x] Connect to a Kubernetes cluster
- [x] List all pods, services, deployments
- [x] List, Describe nodes
- [x] Create, describe, delete a pod
- [x] List all namespaces, create a namespace
- [x] Create custom pod &amp; deployment configs, update deployment replicas
- [x] Create, describe, delete, update a service
- [x] Create, get, update, delete a ConfigMap
- [x] Get logs from a pod for debugging (supports pods, deployments, jobs, and label selectors)
- [x] Support Helm v3 for installing charts
  - Install charts with custom values
  - Uninstall releases
  - Upgrade existing releases
  - Support for namespaces
  - Support for version specification
  - Support for custom repositories
- [x] kubectl explain and kubectl api-resources support
- [x] Get Kubernetes events from the cluster
- [x] Port forward to a pod or service
- [x] Create, list, and decribe cronjobs
- [x] Non-destructive mode for read and create/update-only access to clusters

## Local Development

Make sure that you have [bun installed](https://bun.sh/docs/installation). Clone the repo &amp; install dependencies:

```bash
git clone https://github.com/Flux159/mcp-server-kubernetes.git
cd mcp-server-kubernetes
bun install
```

### Development Workflow

1. Start the server in development mode (watches for file changes):

```bash
bun run dev
```

2. Run unit tests:

```bash
bun run test
```

3. Build the project:

```bash
bun run build
```

4. Local Testing with [Inspector](https://github.com/modelcontextprotocol/inspector)

```bash
npx @modelcontextprotocol/inspector node dist/index.js
# Follow further instructions on terminal for Inspector link
```

5. Local testing with Claude Desktop

```json
{
  &quot;mcpServers&quot;: {
    &quot;mcp-server-kubernetes&quot;: {
      &quot;command&quot;: &quot;node&quot;,
      &quot;args&quot;: [&quot;/path/to/your/mcp-server-kubernetes/dist/index.js&quot;]
    }
  }
}
```

6. Local testing with [mcp-chat](https://github.com/Flux159/mcp-chat)

```bash
bun run chat
```

## Contributing

See the [CONTRIBUTING.md](CONTRIBUTING.md) file for details.

## Advanced

### Additional Advanced Features

For more advanced information like using SSE transport, Non-destructive mode with `ALLOW_ONLY_NON_DESTRUCTIVE_TOOLS`, see the [ADVANCED_README.md](ADVANCED_README.md).

## Architecture

See this [DeepWiki link](https://deepwiki.com/Flux159/mcp-server-kubernetes) for a more indepth architecture overview created by Devin.

This section describes the high-level architecture of the MCP Kubernetes server.

### Request Flow

The sequence diagram below illustrates how requests flow through the system:

```mermaid
sequenceDiagram
    participant Client
    participant Transport as StdioTransport
    participant Server as MCP Server
    participant Handler as Request Handler
    participant K8sManager as KubernetesManager
    participant K8s as Kubernetes API

    Client-&gt;&gt;Transport: Send Request via STDIO
    Transport-&gt;&gt;Server: Forward Request

    alt Tools Request
        Server-&gt;&gt;Handler: Route to tools handler
        Handler-&gt;&gt;K8sManager: Execute tool operation
        K8sManager-&gt;&gt;K8s: Make API call
        K8s--&gt;&gt;K8sManager: Return result
        K8sManager--&gt;&gt;Handler: Process response
        Handler--&gt;&gt;Server: Return tool result
    else Resource Request
        Server-&gt;&gt;Handler: Route to resource handler
        Handler-&gt;&gt;K8sManager: Get resource data
        K8sManager-&gt;&gt;K8s: Query API
        K8s--&gt;&gt;K8sManager: Return data
        K8sManager--&gt;&gt;Handler: Format response
        Handler--&gt;&gt;Server: Return resource data
    end

    Server--&gt;&gt;Transport: Send Response
    Transport--&gt;&gt;Client: Return Final Response
```

## Publishing new release

Go to the [releases page](https://github.com/Flux159/mcp-server-kubernetes/releases), click on &quot;Draft New Release&quot;, click &quot;Choose a tag&quot; and create a new tag by typing out a new version number using &quot;v{major}.{minor}.{patch}&quot; semver format. Then, write a release title &quot;Release v{major}.{minor}.{patch}&quot; and description / changelog if necessary and click &quot;Publish Release&quot;.

This will create a new tag which will trigger a new release build via the cd.yml workflow. Once successful, the new release will be published to [npm](https://www.npmjs.com/package/mcp-server-kubernetes). Note that there is no need to update the package.json version manually, as the workflow will automatically update the version number in the package.json file &amp; push a commit to main.

## Not planned

Authentication / adding clusters to kubectx.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[open-metadata/OpenMetadata]]></title>
            <link>https://github.com/open-metadata/OpenMetadata</link>
            <guid>https://github.com/open-metadata/OpenMetadata</guid>
            <pubDate>Sun, 18 May 2025 00:04:43 GMT</pubDate>
            <description><![CDATA[OpenMetadata is a unified metadata platform for data discovery, data observability, and data governance powered by a central metadata repository, in-depth column level lineage, and seamless team collaboration.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/open-metadata/OpenMetadata">open-metadata/OpenMetadata</a></h1>
            <p>OpenMetadata is a unified metadata platform for data discovery, data observability, and data governance powered by a central metadata repository, in-depth column level lineage, and seamless team collaboration.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 6,690</p>
            <p>Forks: 1,224</p>
            <p>Stars today: 12 stars today</p>
            <h2>README</h2><pre>&lt;br /&gt;&lt;br /&gt;
&lt;p align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://open-metadata.org&quot;&gt;
        &lt;img alt=&quot;Logo&quot; src=&quot;https://github.com/open-metadata/OpenMetadata/assets/40225091/e794ced8-7220-4393-8efc-3faf93bfb503&quot; width=&quot;49%&quot;&gt;
    &lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;&lt;b&gt;Empower your Data Journey with OpenMetadata&lt;/b&gt;&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
    
![Commit Activity](https://img.shields.io/github/commit-activity/m/open-metadata/OpenMetadata?style=for-the-badge)
[![Release](https://img.shields.io/github/release/open-metadata/OpenMetadata/all.svg?style=for-the-badge)](https://github.com/open-metadata/OpenMetadata/releases)

&lt;/div&gt;

## What is OpenMetadata?
[OpenMetadata](https://open-metadata.org/)  is a unified metadata platform for data discovery, data observability, and data governance powered by a central metadata repository, in-depth column level lineage, and seamless team collaboration. It is one of the fastest-growing open-source projects with a vibrant community and adoption by a diverse set of companies in a variety of industry verticals. Based on Open Metadata Standards and APIs, supporting connectors to a wide range of data services, OpenMetadata enables end-to-end metadata management, giving you the freedom to unlock the value of your data assets.
&lt;div align=&quot;center&quot;&gt;
    &lt;img src=&quot;https://github.com/open-metadata/OpenMetadata/assets/40225091/ebfb4ec5-f0a2-4d58-8ce5-a082b5cf0f76&quot; width=800&gt;
&lt;/div&gt;

&lt;br /&gt;
Contents:

- [Features](#key-features-of-openmetadata)
- [Try our Sandbox](#try-our-sandbox)
- [Install &amp; Run](#install-and-run-openmetadata)
- [Roadmap](https://docs.open-metadata.org/latest/roadmap)
- [Documentation and Support](#documentation-and-support)
- [Contributors](#contributors)

OpenMetadata Consists of Four Main Components:
- **Metadata Schemas**: These are the core definitions and vocabulary for metadata based on common abstractions and types. They also allow for custom extensions and properties to suit different use cases and domains.
- **Metadata Store**: This is the central repository for storing and managing the metadata graph, which connects data assets, users, and tool-generated metadata in a unified way.
- **Metadata APIs**: These are the interfaces for producing and consuming metadata, built on top of the metadata schemas. They enable seamless integration of user interfaces and tools, systems, and services with the metadata store.
- **Ingestion Framework**: This is a pluggable framework for ingesting metadata from various sources and tools to the metadata store. It supports about 75+ connectors for data warehouses, databases, dashboard services, messaging services, pipeline services, and more.

## Key Features of OpenMetadata
**Data Discovery**: Find and explore all your data assets in a single place using various strategies, such as keyword search, data associations, and advanced queries. You can search across tables, topics, dashboards, pipelines, and services.

![12](https://github.com/open-metadata/OpenMetadata/assets/40225091/0dbd2746-c93d-4a47-8d3e-ceb3ae01436f)
&lt;br&gt;&lt;br&gt;&lt;br&gt;
**Data Collaboration**: Communicate, converse, and cooperate with other users and teams on data assets. You can get event notifications, send alerts, add announcements, create tasks, and use conversation threads.

![11](https://github.com/open-metadata/OpenMetadata/assets/40225091/7df29e12-8a29-44b7-9466-42474823783f)
&lt;br&gt;&lt;br&gt;&lt;br&gt;
**Data Quality and Profiler**: Measure and monitor the quality with **no-code** to build trust in your data. You can define and run data quality tests, group them into test suites, and view the results in an interactive dashboard. With powerful collaboration, make data quality a shared responsibility in your organization.

![8](https://github.com/open-metadata/OpenMetadata/assets/40225091/6b330827-cc2d-4d06-abf0-a4d42ce532ba)
&lt;br&gt;&lt;br&gt;&lt;br&gt;
**Data Governance**: Enforce data policies and standards across your organization. You can define data domains and data products, assign owners and stakeholders, and classify data assets using tags and terms. Use powerful automation features to auto-classify your data.

![10](https://github.com/open-metadata/OpenMetadata/assets/40225091/f7384a71-6b58-44ad-983f-e302718ee3f1)
&lt;br&gt;&lt;br&gt;&lt;br&gt;
**Data Insights and KPIs**: Use reports and platform analytics to understand how your organization&#039;s data is doing. Data Insights provides a single-pane view of all the key metrics to reflect the state of your data best. Define the Key Performance Indicators (KPIs) and set goals within OpenMetadata to work towards better documentation, ownership, and tiering. Alerts can be set against the KPIs to be received on a specified schedule.

![9](https://github.com/open-metadata/OpenMetadata/assets/40225091/61fc2f65-2436-4fc9-9434-c27ee9b25183)
&lt;br&gt;&lt;br&gt;&lt;br&gt;
**Data Lineage**: Track and visualize the origin and transformation of your data assets end-to-end. You can view column-level lineage, filter queries, and edit lineage manually using a no-code editor.
  
**Data Documentation**: Document your data assets and metadata entities using rich text, images, and links. You can also add comments and annotations and generate data dictionaries and data catalogs.
  
**Data Observability**: Monitor the health and performance of your data assets and pipelines. You can view metrics such as data freshness, data volume, data quality, and data latency. You can also set up alerts and notifications for any anomalies or failures.
  
**Data Security**: Secure your data and metadata using various authentication and authorization mechanisms. You can integrate with different identity providers for single sign-on and define roles and policies for access control.
  
**Webhooks**: Integrate with external applications and services using webhooks. You can register URLs to receive metadata event notifications and integrate with Slack, Microsoft Teams, and Google Chat.
  
**Connectors**: Ingest metadata from various sources and tools using connectors. OpenMetadata supports about 75+ connectors for data warehouses, databases, dashboard services, messaging services, pipeline services, and more.

## Try our Sandbox

Take a look and play with sample data at [http://sandbox.open-metadata.org](http://sandbox.open-metadata.org)

## Install and Run OpenMetadata
Get up and running in a few minutes. See the OpenMetadata documentation for [installation instructions](https://docs.open-metadata.org/quick-start/local-docker-deployment).

## Documentation and Support

We&#039;re here to help and make OpenMetadata even better! Check out [OpenMetadata documentation](https://docs.open-metadata.org/) for a complete description of OpenMetadata&#039;s features. Join our [Slack Community](https://slack.open-metadata.org/) to get in touch with us if you want to chat, need help, or discuss new feature requirements.


## Contributors

We ‚ù§Ô∏è all contributions, big and small! Check out our [CONTRIBUTING](./CONTRIBUTING.md) guide to get started, and let us know how we can help.

Don&#039;t want to miss anything? Give the project a ‚≠ê üöÄ 

A HUGE THANK YOU to all our supporters!

&lt;a href=&quot;https://github.com/open-metadata/OpenMetadata/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=open-metadata/OpenMetadata&amp;max=4000&amp;columns=30&quot; /&gt;
&lt;/a&gt;

## Stargazers

[![Stargazers of @open-metadata/OpenMetadata repo](http://reporoster.com/stars/open-metadata/OpenMetadata)](https://github.com/open-metadata/OpenMetadata/stargazers)

## License
OpenMetadata is released under [Apache License, Version 2.0](http://www.apache.org/licenses/LICENSE-2.0)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[FlowiseAI/Flowise]]></title>
            <link>https://github.com/FlowiseAI/Flowise</link>
            <guid>https://github.com/FlowiseAI/Flowise</guid>
            <pubDate>Sun, 18 May 2025 00:04:42 GMT</pubDate>
            <description><![CDATA[Build AI Agents, Visually]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/FlowiseAI/Flowise">FlowiseAI/Flowise</a></h1>
            <p>Build AI Agents, Visually</p>
            <p>Language: TypeScript</p>
            <p>Stars: 38,401</p>
            <p>Forks: 19,941</p>
            <p>Stars today: 109 stars today</p>
            <h2>README</h2><pre>&lt;!-- markdownlint-disable MD030 --&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;img src=&quot;https://github.com/FlowiseAI/Flowise/blob/main/images/flowise_white.svg#gh-light-mode-only&quot;&gt;
&lt;img src=&quot;https://github.com/FlowiseAI/Flowise/blob/main/images/flowise_dark.svg#gh-dark-mode-only&quot;&gt;
&lt;/p&gt;

[![Release Notes](https://img.shields.io/github/release/FlowiseAI/Flowise)](https://github.com/FlowiseAI/Flowise/releases)
[![Discord](https://img.shields.io/discord/1087698854775881778?label=Discord&amp;logo=discord)](https://discord.gg/jbaHfsRVBW)
[![Twitter Follow](https://img.shields.io/twitter/follow/FlowiseAI?style=social)](https://twitter.com/FlowiseAI)
[![GitHub star chart](https://img.shields.io/github/stars/FlowiseAI/Flowise?style=social)](https://star-history.com/#FlowiseAI/Flowise)
[![GitHub fork](https://img.shields.io/github/forks/FlowiseAI/Flowise?style=social)](https://github.com/FlowiseAI/Flowise/fork)

English | [ÁπÅÈ´î‰∏≠Êñá](./i18n/README-TW.md) | [ÁÆÄ‰Ωì‰∏≠Êñá](./i18n/README-ZH.md) | [Êó•Êú¨Ë™û](./i18n/README-JA.md) | [ÌïúÍµ≠Ïñ¥](./i18n/README-KR.md)

&lt;h3&gt;Build AI Agents, Visually&lt;/h3&gt;
&lt;a href=&quot;https://github.com/FlowiseAI/Flowise&quot;&gt;
&lt;img width=&quot;100%&quot; src=&quot;https://github.com/FlowiseAI/Flowise/blob/main/images/flowise_agentflow.gif?raw=true&quot;&gt;&lt;/a&gt;

## ‚ö°Quick Start

Download and Install [NodeJS](https://nodejs.org/en/download) &gt;= 18.15.0

1. Install Flowise
    ```bash
    npm install -g flowise
    ```
2. Start Flowise

    ```bash
    npx flowise start
    ```

    With username &amp; password

    ```bash
    npx flowise start --FLOWISE_USERNAME=user --FLOWISE_PASSWORD=1234
    ```

3. Open [http://localhost:3000](http://localhost:3000)

## üê≥ Docker

### Docker Compose

1. Clone the Flowise project
2. Go to `docker` folder at the root of the project
3. Copy `.env.example` file, paste it into the same location, and rename to `.env` file
4. `docker compose up -d`
5. Open [http://localhost:3000](http://localhost:3000)
6. You can bring the containers down by `docker compose stop`

### Docker Image

1. Build the image locally:
    ```bash
    docker build --no-cache -t flowise .
    ```
2. Run image:

    ```bash
    docker run -d --name flowise -p 3000:3000 flowise
    ```

3. Stop image:
    ```bash
    docker stop flowise
    ```

## üë®‚Äçüíª Developers

Flowise has 3 different modules in a single mono repository.

-   `server`: Node backend to serve API logics
-   `ui`: React frontend
-   `components`: Third-party nodes integrations
-   `api-documentation`: Auto-generated swagger-ui API docs from express

### Prerequisite

-   Install [PNPM](https://pnpm.io/installation)
    ```bash
    npm i -g pnpm
    ```

### Setup

1.  Clone the repository

    ```bash
    git clone https://github.com/FlowiseAI/Flowise.git
    ```

2.  Go into repository folder

    ```bash
    cd Flowise
    ```

3.  Install all dependencies of all modules:

    ```bash
    pnpm install
    ```

4.  Build all the code:

    ```bash
    pnpm build
    ```

    &lt;details&gt;
    &lt;summary&gt;Exit code 134 (JavaScript heap out of memory)&lt;/summary&gt;  
      If you get this error when running the above `build` script, try increasing the Node.js heap size and run the script again:

        export NODE_OPTIONS=&quot;--max-old-space-size=4096&quot;
        pnpm build

    &lt;/details&gt;

5.  Start the app:

    ```bash
    pnpm start
    ```

    You can now access the app on [http://localhost:3000](http://localhost:3000)

6.  For development build:

    -   Create `.env` file and specify the `VITE_PORT` (refer to `.env.example`) in `packages/ui`
    -   Create `.env` file and specify the `PORT` (refer to `.env.example`) in `packages/server`
    -   Run

        ```bash
        pnpm dev
        ```

    Any code changes will reload the app automatically on [http://localhost:8080](http://localhost:8080)

## üîí Authentication

To enable app level authentication, add `FLOWISE_USERNAME` and `FLOWISE_PASSWORD` to the `.env` file in `packages/server`:

```
FLOWISE_USERNAME=user
FLOWISE_PASSWORD=1234
```

## üå± Env Variables

Flowise support different environment variables to configure your instance. You can specify the following variables in the `.env` file inside `packages/server` folder. Read [more](https://github.com/FlowiseAI/Flowise/blob/main/CONTRIBUTING.md#-env-variables)

## üìñ Documentation

[Flowise Docs](https://docs.flowiseai.com/)

## üåê Self Host

Deploy Flowise self-hosted in your existing infrastructure, we support various [deployments](https://docs.flowiseai.com/configuration/deployment)

-   [AWS](https://docs.flowiseai.com/configuration/deployment/aws)
-   [Azure](https://docs.flowiseai.com/configuration/deployment/azure)
-   [Digital Ocean](https://docs.flowiseai.com/configuration/deployment/digital-ocean)
-   [GCP](https://docs.flowiseai.com/configuration/deployment/gcp)
-   [Alibaba Cloud](https://computenest.console.aliyun.com/service/instance/create/default?type=user&amp;ServiceName=FlowiseÁ§æÂå∫Áâà)
-   &lt;details&gt;
      &lt;summary&gt;Others&lt;/summary&gt;

    -   [Railway](https://docs.flowiseai.com/configuration/deployment/railway)

        [![Deploy on Railway](https://railway.app/button.svg)](https://railway.app/template/pn4G8S?referralCode=WVNPD9)

    -   [Render](https://docs.flowiseai.com/configuration/deployment/render)

        [![Deploy to Render](https://render.com/images/deploy-to-render-button.svg)](https://docs.flowiseai.com/configuration/deployment/render)

    -   [HuggingFace Spaces](https://docs.flowiseai.com/deployment/hugging-face)

        &lt;a href=&quot;https://huggingface.co/spaces/FlowiseAI/Flowise&quot;&gt;&lt;img src=&quot;https://huggingface.co/datasets/huggingface/badges/raw/main/open-in-hf-spaces-sm.svg&quot; alt=&quot;HuggingFace Spaces&quot;&gt;&lt;/a&gt;

    -   [Elestio](https://elest.io/open-source/flowiseai)

        [![Deploy on Elestio](https://elest.io/images/logos/deploy-to-elestio-btn.png)](https://elest.io/open-source/flowiseai)

    -   [Sealos](https://template.sealos.io/deploy?templateName=flowise)

        [![Deploy on Sealos](https://sealos.io/Deploy-on-Sealos.svg)](https://template.sealos.io/deploy?templateName=flowise)

    -   [RepoCloud](https://repocloud.io/details/?app_id=29)

        [![Deploy on RepoCloud](https://d16t0pc4846x52.cloudfront.net/deploy.png)](https://repocloud.io/details/?app_id=29)

      &lt;/details&gt;

## ‚òÅÔ∏è Flowise Cloud

[Get Started with Flowise Cloud](https://flowiseai.com/)

## üôã Support

Feel free to ask any questions, raise problems, and request new features in [discussion](https://github.com/FlowiseAI/Flowise/discussions)

## üôå Contributing

Thanks go to these awesome contributors

&lt;a href=&quot;https://github.com/FlowiseAI/Flowise/graphs/contributors&quot;&gt;
&lt;img src=&quot;https://contrib.rocks/image?repo=FlowiseAI/Flowise&quot; /&gt;
&lt;/a&gt;

See [contributing guide](CONTRIBUTING.md). Reach out to us at [Discord](https://discord.gg/jbaHfsRVBW) if you have any questions or issues.
[![Star History Chart](https://api.star-history.com/svg?repos=FlowiseAI/Flowise&amp;type=Timeline)](https://star-history.com/#FlowiseAI/Flowise&amp;Date)

## üìÑ License

Source code in this repository is made available under the [Apache License Version 2.0](LICENSE.md).
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
    </channel>
</rss>