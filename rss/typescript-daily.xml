<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for typescript - TypeScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for typescript.</description>
        <lastBuildDate>Fri, 18 Apr 2025 00:05:01 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[docmost/docmost]]></title>
            <link>https://github.com/docmost/docmost</link>
            <guid>https://github.com/docmost/docmost</guid>
            <pubDate>Fri, 18 Apr 2025 00:05:01 GMT</pubDate>
            <description><![CDATA[Docmost is an open-source collaborative wiki and documentation software. It is an open-source alternative to Confluence and Notion.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/docmost/docmost">docmost/docmost</a></h1>
            <p>Docmost is an open-source collaborative wiki and documentation software. It is an open-source alternative to Confluence and Notion.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 13,646</p>
            <p>Forks: 662</p>
            <p>Stars today: 97 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
    &lt;h1&gt;&lt;b&gt;Docmost&lt;/b&gt;&lt;/h1&gt;
    &lt;p&gt;
        Open-source collaborative wiki and documentation software.
        &lt;br /&gt;
        &lt;a href=&quot;https://docmost.com&quot;&gt;&lt;strong&gt;Website&lt;/strong&gt;&lt;/a&gt; | 
        &lt;a href=&quot;https://docmost.com/docs&quot;&gt;&lt;strong&gt;Documentation&lt;/strong&gt;&lt;/a&gt;
    &lt;/p&gt;
&lt;/div&gt;
&lt;br /&gt;

## Getting started

To get started with Docmost, please refer to our [documentation](https://docmost.com/docs).

## Features

- Real-time collaboration
- Diagrams (Draw.io, Excalidraw and Mermaid)
- Spaces
- Permissions management
- Groups
- Comments
- Page history
- Search
- File attachments
- Embeds (Airtable, Loom, Miro and more)
- Translations (10+ languages)

### Screenshots

&lt;p align=&quot;center&quot;&gt;
&lt;img alt=&quot;home&quot; src=&quot;https://docmost.com/screenshots/home.png&quot; width=&quot;70%&quot;&gt;
&lt;img alt=&quot;editor&quot; src=&quot;https://docmost.com/screenshots/editor.png&quot; width=&quot;70%&quot;&gt;
&lt;/p&gt;

### License
Docmost core is licensed under the open-source AGPL 3.0 license.  
Enterprise features are available under an enterprise license (Enterprise Edition).  

All files in the following directories are licensed under the Docmost Enterprise license defined in `packages/ee/License`.
  - apps/server/src/ee
  - apps/client/src/ee
  - packages/ee

### Contributing

See the [development documentation](https://docmost.com/docs/self-hosting/development)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[midday-ai/midday]]></title>
            <link>https://github.com/midday-ai/midday</link>
            <guid>https://github.com/midday-ai/midday</guid>
            <pubDate>Fri, 18 Apr 2025 00:05:00 GMT</pubDate>
            <description><![CDATA[Invoicing, Time tracking, File reconciliation, Storage, Financial Overview & your own Assistant made for Freelancers]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/midday-ai/midday">midday-ai/midday</a></h1>
            <p>Invoicing, Time tracking, File reconciliation, Storage, Financial Overview & your own Assistant made for Freelancers</p>
            <p>Language: TypeScript</p>
            <p>Stars: 7,600</p>
            <p>Forks: 737</p>
            <p>Stars today: 44 stars today</p>
            <h2>README</h2><pre>![hero](github.png)

&lt;p align=&quot;center&quot;&gt;
	&lt;h1 align=&quot;center&quot;&gt;&lt;b&gt;Midday&lt;/b&gt;&lt;/h1&gt;
&lt;p align=&quot;center&quot;&gt;
    Run your business smarter
    &lt;br /&gt;
    &lt;br /&gt;
    &lt;a href=&quot;https://go.midday.ai/anPiuRx&quot;&gt;Discord&lt;/a&gt;
    ·
    &lt;a href=&quot;https://midday.ai&quot;&gt;Website&lt;/a&gt;
    ·
    &lt;a href=&quot;https://github.com/midday-ai/midday/issues&quot;&gt;Issues&lt;/a&gt;
  &lt;/p&gt;
&lt;/p&gt;

## About Midday

Midday is an all-in-one tool designed to help freelancers, contractors, consultants, and solo entrepreneurs manage their business operations more efficiently. It integrates various functions typically scattered across multiple platforms into a single, cohesive system.

## Features

**Time Tracking**: Allows for live time tracking of projects to boost productivity and collaboration, providing insightful project overviews.&lt;br/&gt;
**Invoicing**: An upcoming feature that will enable users to create web-based invoices, collaborate in real-time, and synchronize projects seamlessly.&lt;br/&gt;
**Magic Inbox**: Automatically matches incoming invoices or receipts to the correct transactions, simplifying financial tracking and organization.&lt;br/&gt;
**Vault**: Secure storage for important files like contracts and agreements, keeping everything in one place for easy access​.&lt;br/&gt;
**Seamless Export**: Facilitates easy export of financial data, packaged neatly in CSV files for accountants.&lt;br/&gt;
**Assistant**: Provides tailored insights into financial situations, helping users understand spending patterns, cut costs, and find documents.&lt;br/&gt;


## Recognition

&lt;a href=&quot;https://news.ycombinator.com/item?id=40737901&quot;&gt;
  &lt;img
    style=&quot;width: 250px; height: 54px;&quot; width=&quot;250&quot; height=&quot;54&quot;
    alt=&quot;Featured on Hacker News&quot;
    src=&quot;https://hackernews-badge.vercel.app/api?id=40737901&quot;
  /&gt;
&lt;/a&gt;

&lt;a href=&quot;https://www.producthunt.com/posts/midday-2?embed=true&amp;utm_source=badge-featured&amp;utm_medium=badge&amp;utm_souce=badge-midday&amp;#0045;2&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=460784&amp;theme=light&quot; alt=&quot;Midday - Run&amp;#0032;your&amp;#0032;business&amp;#0032;smarter | Product Hunt&quot; style=&quot;width: 250px; height: 54px;&quot; width=&quot;250&quot; height=&quot;54&quot; /&gt;&lt;/a&gt;

&lt;br/&gt;

## Get started

We are working on the documentation to get started with Midday for local development: https://docs.midday.ai

## App Architecture

- Monorepo
- Bun
- React
- TypeScript
- Nextjs
- Supabase
- Shadcn
- ToDesktop
- Expo
- TailwindCSS

### Hosting

- Supabase (database, storage, realtime, auth)
- Vercel (Website, edge-config, and metrics)
- Upstash (redis)

### Services

- Trigger.dev (background jobs)
- Resend (Transactional &amp; Marketing)
- Novu (notifications)
- Github Actions (CI/CD)
- GoCardLess (Bank connection EU)
- Plaid (Bank connection in Canada and US)
- Teller (Bank connection in the US)
- OpenPanel (Events and Analytics)
- Dub (Short URLs)
- Polar (Payment processing)
- Typesense (Search)

## Repo Activity

![Alt](https://repobeats.axiom.co/api/embed/96aae855e5dd87c30d53c1d154b37cf7aa5a89b3.svg &quot;Repobeats analytics image&quot;)

## License

This project is licensed under the **[AGPL-3.0](https://opensource.org/licenses/AGPL-3.0)** for non-commercial use. 

### Commercial Use

For commercial use or deployments requiring a setup fee, please contact us
for a commercial license at [engineer@midday.ai](mailto:engineer@midday.ai).

By using this software, you agree to the terms of the license.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[cline/cline]]></title>
            <link>https://github.com/cline/cline</link>
            <guid>https://github.com/cline/cline</guid>
            <pubDate>Fri, 18 Apr 2025 00:04:59 GMT</pubDate>
            <description><![CDATA[Autonomous coding agent right in your IDE, capable of creating/editing files, executing commands, using the browser, and more with your permission every step of the way.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/cline/cline">cline/cline</a></h1>
            <p>Autonomous coding agent right in your IDE, capable of creating/editing files, executing commands, using the browser, and more with your permission every step of the way.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 40,608</p>
            <p>Forks: 4,475</p>
            <p>Stars today: 173 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;&lt;sub&gt;
English | &lt;a href=&quot;https://github.com/cline/cline/blob/main/locales/es/README.md&quot; target=&quot;_blank&quot;&gt;Español&lt;/a&gt; | &lt;a href=&quot;https://github.com/cline/cline/blob/main/locales/de/README.md&quot; target=&quot;_blank&quot;&gt;Deutsch&lt;/a&gt; | &lt;a href=&quot;https://github.com/cline/cline/blob/main/locales/ja/README.md&quot; target=&quot;_blank&quot;&gt;日本語&lt;/a&gt; | &lt;a href=&quot;https://github.com/cline/cline/blob/main/locales/zh-cn/README.md&quot; target=&quot;_blank&quot;&gt;简体中文&lt;/a&gt; | &lt;a href=&quot;https://github.com/cline/cline/blob/main/locales/zh-tw/README.md&quot; target=&quot;_blank&quot;&gt;繁體中文&lt;/a&gt; | &lt;a href=&quot;https://github.com/cline/cline/blob/main/locales/ko/README.md&quot; target=&quot;_blank&quot;&gt;한국어&lt;/a&gt;
&lt;/sub&gt;&lt;/div&gt;

# Cline – \#1 on OpenRouter

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;https://media.githubusercontent.com/media/cline/cline/main/assets/docs/demo.gif&quot; width=&quot;100%&quot; /&gt;
&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
&lt;table&gt;
&lt;tbody&gt;
&lt;td align=&quot;center&quot;&gt;
&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=saoudrizwan.claude-dev&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Download on VS Marketplace&lt;/strong&gt;&lt;/a&gt;
&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;
&lt;a href=&quot;https://discord.gg/cline&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Discord&lt;/strong&gt;&lt;/a&gt;
&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;
&lt;a href=&quot;https://www.reddit.com/r/cline/&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;r/cline&lt;/strong&gt;&lt;/a&gt;
&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;
&lt;a href=&quot;https://github.com/cline/cline/discussions/categories/feature-requests?discussions_q=is%3Aopen+category%3A%22Feature+Requests%22+sort%3Atop&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Feature Requests&lt;/strong&gt;&lt;/a&gt;
&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;
&lt;a href=&quot;https://docs.cline.bot/getting-started/for-new-coders&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Getting Started&lt;/strong&gt;&lt;/a&gt;
&lt;/td&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

Meet Cline, an AI assistant that can use your **CLI** a**N**d **E**ditor.

Thanks to [Claude 3.7 Sonnet&#039;s agentic coding capabilities](https://www.anthropic.com/claude/sonnet), Cline can handle complex software development tasks step-by-step. With tools that let him create &amp; edit files, explore large projects, use the browser, and execute terminal commands (after you grant permission), he can assist you in ways that go beyond code completion or tech support. Cline can even use the Model Context Protocol (MCP) to create new tools and extend his own capabilities. While autonomous AI scripts traditionally run in sandboxed environments, this extension provides a human-in-the-loop GUI to approve every file change and terminal command, providing a safe and accessible way to explore the potential of agentic AI.

1. Enter your task and add images to convert mockups into functional apps or fix bugs with screenshots.
2. Cline starts by analyzing your file structure &amp; source code ASTs, running regex searches, and reading relevant files to get up to speed in existing projects. By carefully managing what information is added to context, Cline can provide valuable assistance even for large, complex projects without overwhelming the context window.
3. Once Cline has the information he needs, he can:
    - Create and edit files + monitor linter/compiler errors along the way, letting him proactively fix issues like missing imports and syntax errors on his own.
    - Execute commands directly in your terminal and monitor their output as he works, letting him e.g., react to dev server issues after editing a file.
    - For web development tasks, Cline can launch the site in a headless browser, click, type, scroll, and capture screenshots + console logs, allowing him to fix runtime errors and visual bugs.
4. When a task is completed, Cline will present the result to you with a terminal command like `open -a &quot;Google Chrome&quot; index.html`, which you run with a click of a button.

&gt; [!TIP]
&gt; Use the `CMD/CTRL + Shift + P` shortcut to open the command palette and type &quot;Cline: Open In New Tab&quot; to open the extension as a tab in your editor. This lets you use Cline side-by-side with your file explorer, and see how he changes your workspace more clearly.

---

&lt;img align=&quot;right&quot; width=&quot;340&quot; src=&quot;https://github.com/user-attachments/assets/3cf21e04-7ce9-4d22-a7b9-ba2c595e88a4&quot;&gt;

### Use any API and Model

Cline supports API providers like OpenRouter, Anthropic, OpenAI, Google Gemini, AWS Bedrock, Azure, and GCP Vertex. You can also configure any OpenAI compatible API, or use a local model through LM Studio/Ollama. If you&#039;re using OpenRouter, the extension fetches their latest model list, allowing you to use the newest models as soon as they&#039;re available.

The extension also keeps track of total tokens and API usage cost for the entire task loop and individual requests, keeping you informed of spend every step of the way.

&lt;!-- Transparent pixel to create line break after floating image --&gt;

&lt;img width=&quot;2000&quot; height=&quot;0&quot; src=&quot;https://github.com/user-attachments/assets/ee14e6f7-20b8-4391-9091-8e8e25561929&quot;&gt;&lt;br&gt;

&lt;img align=&quot;left&quot; width=&quot;370&quot; src=&quot;https://github.com/user-attachments/assets/81be79a8-1fdb-4028-9129-5fe055e01e76&quot;&gt;

### Run Commands in Terminal

Thanks to the new [shell integration updates in VSCode v1.93](https://code.visualstudio.com/updates/v1_93#_terminal-shell-integration-api), Cline can execute commands directly in your terminal and receive the output. This allows him to perform a wide range of tasks, from installing packages and running build scripts to deploying applications, managing databases, and executing tests, all while adapting to your dev environment &amp; toolchain to get the job done right.

For long running processes like dev servers, use the &quot;Proceed While Running&quot; button to let Cline continue in the task while the command runs in the background. As Cline works he’ll be notified of any new terminal output along the way, letting him react to issues that may come up, such as compile-time errors when editing files.

&lt;!-- Transparent pixel to create line break after floating image --&gt;

&lt;img width=&quot;2000&quot; height=&quot;0&quot; src=&quot;https://github.com/user-attachments/assets/ee14e6f7-20b8-4391-9091-8e8e25561929&quot;&gt;&lt;br&gt;

&lt;img align=&quot;right&quot; width=&quot;400&quot; src=&quot;https://github.com/user-attachments/assets/c5977833-d9b8-491e-90f9-05f9cd38c588&quot;&gt;

### Create and Edit Files

Cline can create and edit files directly in your editor, presenting you a diff view of the changes. You can edit or revert Cline&#039;s changes directly in the diff view editor, or provide feedback in chat until you&#039;re satisfied with the result. Cline also monitors linter/compiler errors (missing imports, syntax errors, etc.) so he can fix issues that come up along the way on his own.

All changes made by Cline are recorded in your file&#039;s Timeline, providing an easy way to track and revert modifications if needed.

&lt;!-- Transparent pixel to create line break after floating image --&gt;

&lt;img width=&quot;2000&quot; height=&quot;0&quot; src=&quot;https://github.com/user-attachments/assets/ee14e6f7-20b8-4391-9091-8e8e25561929&quot;&gt;&lt;br&gt;

&lt;img align=&quot;left&quot; width=&quot;370&quot; src=&quot;https://github.com/user-attachments/assets/bc2e85ba-dfeb-4fe6-9942-7cfc4703cbe5&quot;&gt;

### Use the Browser

With Claude 3.5 Sonnet&#039;s new [Computer Use](https://www.anthropic.com/news/3-5-models-and-computer-use) capability, Cline can launch a browser, click elements, type text, and scroll, capturing screenshots and console logs at each step. This allows for interactive debugging, end-to-end testing, and even general web use! This gives him autonomy to fixing visual bugs and runtime issues without you needing to handhold and copy-pasting error logs yourself.

Try asking Cline to &quot;test the app&quot;, and watch as he runs a command like `npm run dev`, launches your locally running dev server in a browser, and performs a series of tests to confirm that everything works. [See a demo here.](https://x.com/sdrzn/status/1850880547825823989)

&lt;!-- Transparent pixel to create line break after floating image --&gt;

&lt;img width=&quot;2000&quot; height=&quot;0&quot; src=&quot;https://github.com/user-attachments/assets/ee14e6f7-20b8-4391-9091-8e8e25561929&quot;&gt;&lt;br&gt;

&lt;img align=&quot;right&quot; width=&quot;350&quot; src=&quot;https://github.com/user-attachments/assets/ac0efa14-5c1f-4c26-a42d-9d7c56f5fadd&quot;&gt;

### &quot;add a tool that...&quot;

Thanks to the [Model Context Protocol](https://github.com/modelcontextprotocol), Cline can extend his capabilities through custom tools. While you can use [community-made servers](https://github.com/modelcontextprotocol/servers), Cline can instead create and install tools tailored to your specific workflow. Just ask Cline to &quot;add a tool&quot; and he will handle everything, from creating a new MCP server to installing it into the extension. These custom tools then become part of Cline&#039;s toolkit, ready to use in future tasks.

-   &quot;add a tool that fetches Jira tickets&quot;: Retrieve ticket ACs and put Cline to work
-   &quot;add a tool that manages AWS EC2s&quot;: Check server metrics and scale instances up or down
-   &quot;add a tool that pulls the latest PagerDuty incidents&quot;: Fetch details and ask Cline to fix bugs

&lt;!-- Transparent pixel to create line break after floating image --&gt;

&lt;img width=&quot;2000&quot; height=&quot;0&quot; src=&quot;https://github.com/user-attachments/assets/ee14e6f7-20b8-4391-9091-8e8e25561929&quot;&gt;&lt;br&gt;

&lt;img align=&quot;left&quot; width=&quot;360&quot; src=&quot;https://github.com/user-attachments/assets/7fdf41e6-281a-4b4b-ac19-020b838b6970&quot;&gt;

### Add Context

**`@url`:** Paste in a URL for the extension to fetch and convert to markdown, useful when you want to give Cline the latest docs

**`@problems`:** Add workspace errors and warnings (&#039;Problems&#039; panel) for Cline to fix

**`@file`:** Adds a file&#039;s contents so you don&#039;t have to waste API requests approving read file (+ type to search files)

**`@folder`:** Adds folder&#039;s files all at once to speed up your workflow even more

&lt;!-- Transparent pixel to create line break after floating image --&gt;

&lt;img width=&quot;2000&quot; height=&quot;0&quot; src=&quot;https://github.com/user-attachments/assets/ee14e6f7-20b8-4391-9091-8e8e25561929&quot;&gt;&lt;br&gt;

&lt;img align=&quot;right&quot; width=&quot;350&quot; src=&quot;https://github.com/user-attachments/assets/140c8606-d3bf-41b9-9a1f-4dbf0d4c90cb&quot;&gt;

### Checkpoints: Compare and Restore

As Cline works through a task, the extension takes a snapshot of your workspace at each step. You can use the &#039;Compare&#039; button to see a diff between the snapshot and your current workspace, and the &#039;Restore&#039; button to roll back to that point.

For example, when working with a local web server, you can use &#039;Restore Workspace Only&#039; to quickly test different versions of your app, then use &#039;Restore Task and Workspace&#039; when you find the version you want to continue building from. This lets you safely explore different approaches without losing progress.

&lt;!-- Transparent pixel to create line break after floating image --&gt;

&lt;img width=&quot;2000&quot; height=&quot;0&quot; src=&quot;https://github.com/user-attachments/assets/ee14e6f7-20b8-4391-9091-8e8e25561929&quot;&gt;&lt;br&gt;

## Contributing

To contribute to the project, start with our [Contributing Guide](CONTRIBUTING.md) to learn the basics. You can also join our [Discord](https://discord.gg/cline) to chat with other contributors in the `#contributors` channel. If you&#039;re looking for full-time work, check out our open positions on our [careers page](https://cline.bot/join-us)!

&lt;details&gt;
&lt;summary&gt;Local Development Instructions&lt;/summary&gt;

1. Clone the repository _(Requires [git-lfs](https://git-lfs.com/))_:
    ```bash
    git clone https://github.com/cline/cline.git
    ```
2. Open the project in VSCode:
    ```bash
    code cline
    ```
3. Install the necessary dependencies for the extension and webview-gui:
    ```bash
    npm run install:all
    ```
4. Launch by pressing `F5` (or `Run`-&gt;`Start Debugging`) to open a new VSCode window with the extension loaded. (You may need to install the [esbuild problem matchers extension](https://marketplace.visualstudio.com/items?itemName=connor4312.esbuild-problem-matchers) if you run into issues building the project.)

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;Creating a Pull Request&lt;/summary&gt;

1. Before creating a PR, generate a changeset entry:
    ```bash
    npm run changeset
    ```
   This will prompt you for:
   - Type of change (major, minor, patch)
     - `major` → breaking changes (1.0.0 → 2.0.0)
     - `minor` → new features (1.0.0 → 1.1.0)
     - `patch` → bug fixes (1.0.0 → 1.0.1)
   - Description of your changes

2. Commit your changes and the generated `.changeset` file

3. Push your branch and create a PR on GitHub. Our CI will:
   - Run tests and checks
   - Changesetbot will create a comment showing the version impact
   - When merged to main, changesetbot will create a Version Packages PR
   - When the Version Packages PR is merged, a new release will be published

&lt;/details&gt;


## License

[Apache 2.0 © 2025 Cline Bot Inc.](./LICENSE)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[browserbase/stagehand]]></title>
            <link>https://github.com/browserbase/stagehand</link>
            <guid>https://github.com/browserbase/stagehand</guid>
            <pubDate>Fri, 18 Apr 2025 00:04:58 GMT</pubDate>
            <description><![CDATA[An AI web browsing framework focused on simplicity and extensibility.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/browserbase/stagehand">browserbase/stagehand</a></h1>
            <p>An AI web browsing framework focused on simplicity and extensibility.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 10,141</p>
            <p>Forks: 562</p>
            <p>Stars today: 135 stars today</p>
            <h2>README</h2><pre>&lt;div id=&quot;toc&quot; align=&quot;center&quot;&gt;
  &lt;ul style=&quot;list-style: none&quot;&gt;
    &lt;a href=&quot;https://stagehand.dev&quot;&gt;
      &lt;picture&gt;
        &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://stagehand.dev/logo-dark.svg&quot; /&gt;
        &lt;img alt=&quot;Stagehand&quot; src=&quot;https://stagehand.dev/logo-light.svg&quot; /&gt;
      &lt;/picture&gt;
    &lt;/a&gt;
  &lt;/ul&gt;
&lt;/div&gt;

&lt;p align=&quot;center&quot;&gt;
  The production-ready framework for AI browser automations.&lt;br&gt;
  &lt;a href=&quot;https://docs.stagehand.dev&quot;&gt;Read the Docs&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/browserbase/stagehand/tree/main?tab=MIT-1-ov-file#MIT-1-ov-file&quot;&gt;
    &lt;picture&gt;
      &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://stagehand.dev/api/assets/license?mode=dark&quot; /&gt;
      &lt;img alt=&quot;MIT License&quot; src=&quot;https://stagehand.dev/api/assets/license?mode=light&quot; /&gt;
    &lt;/picture&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://stagehand.dev/slack&quot;&gt;
    &lt;picture&gt;
      &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://stagehand.dev/api/assets/slack?mode=dark&quot; /&gt;
      &lt;img alt=&quot;Slack Community&quot; src=&quot;https://stagehand.dev/api/assets/slack?mode=light&quot; /&gt;
    &lt;/picture&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
	&lt;a href=&quot;https://trendshift.io/repositories/12122&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://trendshift.io/api/badge/repositories/12122&quot; alt=&quot;browserbase%2Fstagehand | Trendshift&quot; style=&quot;width: 250px; height: 55px;&quot; width=&quot;250&quot; height=&quot;55&quot;/&gt;&lt;/a&gt;
&lt;/p&gt;

## Why Stagehand?

Most existing browser automation tools either require you to write low-level code in a framework like Selenium, Playwright, or Puppeteer, or use high-level agents that can be unpredictable in production. By letting developers choose what to write in code vs. natural language, Stagehand is the natural choice for browser automations in production.

1. **Choose when to write code vs. natural language**: use AI when you want to navigate unfamiliar pages, and use code ([Playwright](https://playwright.dev/)) when you know exactly what you want to do.

2. **Preview and cache actions**: Stagehand lets you preview AI actions before running them, and also helps you easily cache repeatable actions to save time and tokens.

3. **Computer use models with one line of code**: Stagehand lets you integrate SOTA computer use models from OpenAI and Anthropic into the browser with one line of code.

## Example

Here&#039;s how to build a sample browser automation with Stagehand:

&lt;div align=&quot;center&quot;&gt;
  &lt;div style=&quot;max-width:300px;&quot;&gt;
    &lt;img src=&quot;/media/github_demo.gif&quot; alt=&quot;See Stagehand in Action&quot;&gt;
  &lt;/div&gt;
&lt;/div&gt;

```typescript
// Use Playwright functions on the page object
const page = stagehand.page;
await page.goto(&quot;https://github.com/browserbase&quot;);

// Use act() to execute individual actions
await page.act(&quot;click on the stagehand repo&quot;);

// Use Computer Use agents for larger actions
const agent = stagehand.agent({
    provider: &quot;openai&quot;,
    model: &quot;computer-use-preview&quot;,
});
await agent.execute(&quot;Get to the latest PR&quot;);

// Use extract() to read data from the page
const { author, title } = await page.extract({
  instruction: &quot;extract the author and title of the PR&quot;,
  schema: z.object({
    author: z.string().describe(&quot;The username of the PR author&quot;),
    title: z.string().describe(&quot;The title of the PR&quot;),
  }),
});
```

## Documentation

Visit [docs.stagehand.dev](https://docs.stagehand.dev) to view the full documentation.

## Getting Started

Start with Stagehand with one line of code, or check out our [Quickstart Guide](https://docs.stagehand.dev/get_started/quickstart) for more information:

```bash
npx create-browser-app
```

&lt;div align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://www.loom.com/share/f5107f86d8c94fa0a8b4b1e89740f7a7&quot;&gt;
      &lt;p&gt;Watch Anirudh demo create-browser-app to create a Stagehand project!&lt;/p&gt;
    &lt;/a&gt;
    &lt;a href=&quot;https://www.loom.com/share/f5107f86d8c94fa0a8b4b1e89740f7a7&quot;&gt;
      &lt;img style=&quot;max-width:300px;&quot; src=&quot;https://cdn.loom.com/sessions/thumbnails/f5107f86d8c94fa0a8b4b1e89740f7a7-ec3f428b6775ceeb-full-play.gif&quot;&gt;
    &lt;/a&gt;
  &lt;/div&gt;

### Build and Run from Source

```bash
git clone https://github.com/browserbase/stagehand.git
cd stagehand
npm install
npx playwright install
npm run build
npm run example # run the blank script at ./examples/example.ts
```

Stagehand is best when you have an API key for an LLM provider and Browserbase credentials. To add these to your project, run:

```bash
cp .env.example .env
nano .env # Edit the .env file to add API keys
```

## Contributing

&gt; [!NOTE]  
&gt; We highly value contributions to Stagehand! For questions or support, please join our [Slack community](https://stagehand.dev/slack).

At a high level, we&#039;re focused on improving reliability, speed, and cost in that order of priority. If you&#039;re interested in contributing, we strongly recommend reaching out to [Anirudh Kamath](https://x.com/kamathematic) or [Paul Klein](https://x.com/pk_iv) in our [Slack community](https://stagehand.dev/slack) before starting to ensure that your contribution aligns with our goals.

For more information, please see our [Contributing Guide](https://docs.stagehand.dev/contributions/contributing).

## Acknowledgements

This project heavily relies on [Playwright](https://playwright.dev/) as a resilient backbone to automate the web. It also would not be possible without the awesome techniques and discoveries made by [tarsier](https://github.com/reworkd/tarsier), and [fuji-web](https://github.com/normal-computing/fuji-web).

We&#039;d like to thank the following people for their major contributions to Stagehand:
- [Paul Klein](https://github.com/pkiv)
- [Anirudh Kamath](https://github.com/kamath)
- [Sean McGuire](https://github.com/seanmcguire12)
- [Miguel Gonzalez](https://github.com/miguelg719)
- [Sameel Arif](https://github.com/sameelarif)
- [Filip Michalsky](https://github.com/filip-michalsky)
- [Jeremy Press](https://x.com/jeremypress)
- [Navid Pour](https://github.com/navidpour)

## License

Licensed under the MIT License.

Copyright 2025 Browserbase, Inc.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[elie222/inbox-zero]]></title>
            <link>https://github.com/elie222/inbox-zero</link>
            <guid>https://github.com/elie222/inbox-zero</guid>
            <pubDate>Fri, 18 Apr 2025 00:04:57 GMT</pubDate>
            <description><![CDATA[AI personal assistant for email. Open source app to help you reach inbox zero fast.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/elie222/inbox-zero">elie222/inbox-zero</a></h1>
            <p>AI personal assistant for email. Open source app to help you reach inbox zero fast.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 5,691</p>
            <p>Forks: 598</p>
            <p>Stars today: 42 stars today</p>
            <h2>README</h2><pre>[![](apps/web/app/opengraph-image.png)](https://www.getinboxzero.com)

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.getinboxzero.com&quot;&gt;
    &lt;h1 align=&quot;center&quot;&gt;Inbox Zero - Your AI Email Assistant&lt;/h1&gt;
  &lt;/a&gt;
  &lt;p align=&quot;center&quot;&gt;
    Open source email app to reach inbox zero fast.
    &lt;br /&gt;
    &lt;a href=&quot;https://www.getinboxzero.com&quot;&gt;Website&lt;/a&gt;
    ·
    &lt;a href=&quot;https://www.getinboxzero.com/discord&quot;&gt;Discord&lt;/a&gt;
    ·
    &lt;a href=&quot;https://github.com/elie222/inbox-zero/issues&quot;&gt;Issues&lt;/a&gt;
  &lt;/p&gt;
&lt;/p&gt;

## About

There are two parts to Inbox Zero:

1. An AI email assistant that helps you spend less time on email.
2. Open source AI email client.

If you&#039;re looking to contribue to the project, the email client is the best place to do this.

[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/clone?repository-url=https%3A%2F%2Fgithub.com%2Felie222%2Finbox-zero&amp;env=NEXTAUTH_SECRET,GOOGLE_CLIENT_ID,GOOGLE_CLIENT_SECRET,GOOGLE_ENCRYPT_SECRET,GOOGLE_ENCRYPT_SALT,UPSTASH_REDIS_URL,UPSTASH_REDIS_TOKEN,GOOGLE_PUBSUB_TOPIC_NAME,DATABASE_URL)

Thanks to Vercel for sponsoring Inbox Zero in support of open-source software.

## Features

- **AI Personal Assistant:** Manages your email for you based on a plain text prompt file. It can take any action a human assistant can take on your behalf (Draft reply, Label, Archive, Reply, Forward, Mark Spam, and even call a webhook).
- **Reply Zero:** Track emails that need your reply and those awaiting responses.
- **Smart Categories:** Categorize everyone that&#039;s ever emailed you.
- **Bulk Unsubscriber:** Quickly unsubscribe from emails you never read in one-click.
- **Cold Email Blocker:** Automatically block cold emails.
- **Email Analytics:** Track your email activity with daily, weekly, and monthly stats.

Learn more in our [docs](https://docs.getinboxzero.com).

## Feature Screenshots

| ![AI Assistant](.github/screenshots/email-assistant.png) |        ![Reply Zero](.github/screenshots/reply-zero.png)        |
| :------------------------------------------------------: | :-------------------------------------------------------------: |
|                      _AI Assistant_                      |                          _Reply Zero_                           |
|  ![Gmail Client](.github/screenshots/email-client.png)   | ![Bulk Unsubscriber](.github/screenshots/bulk-unsubscriber.png) |
|                      _Gmail client_                      |                       _Bulk Unsubscriber_                       |

## Demo Video

[![Inbox Zero demo](/video-thumbnail.png)](http://www.youtube.com/watch?v=hfvKvTHBjG0)

## Built with

- [Next.js](https://nextjs.org/)
- [Tailwind CSS](https://tailwindcss.com/)
- [shadcn/ui](https://ui.shadcn.com/)
- [Prisma](https://www.prisma.io/)
- [Upstash](https://upstash.com/)
- [Turborepo](https://turbo.build/)

## Feature Requests

To request a feature open a [GitHub issue](https://github.com/elie222/inbox-zero/issues). If you don&#039;t have a GitHub account you can request features [here](https://www.getinboxzero.com/feature-requests). Or join our [Discord](https://www.getinboxzero.com/discord).

## Getting Started for Developers

We offer a hosted version of Inbox Zero at [https://getinboxzero.com](https://getinboxzero.com). To self-host follow the steps below.

### Contributing to the project

You can view open tasks in our [GitHub Issues](https://github.com/elie222/inbox-zero/issues).
Join our [Discord](https://www.getinboxzero.com/discord) to discuss tasks and check what&#039;s being worked on.

[ARCHITECTURE.md](./ARCHITECTURE.md) explains the architecture of the project (LLM generated).

### Requirements

- [Node.js](https://nodejs.org/en/) &gt;= 18.0.0
- [pnpm](https://pnpm.io/) &gt;= 8.6.12
- [Docker desktop](https://www.docker.com/products/docker-desktop/) (optional)

### Setup

[Here&#039;s a video](https://youtu.be/hVQENQ4WT2Y) on how to set up the project. It covers the same steps mentioned in this document. But goes into greater detail on setting up the external services.

The external services that are required are:

- [Google OAuth](https://console.cloud.google.com/apis/credentials)
- [Google PubSub](https://console.cloud.google.com/cloudpubsub/topic/list) - see set up instructions below

You also need to set an LLM, but you can use a local one too:

- [Anthropic](https://console.anthropic.com/settings/keys)
- [OpenAI](https://platform.openai.com/api-keys)
- AWS Bedrock Anthropic
- Google Gemini
- Groq Llama 3.3 70B
- Ollama (local)

We use Postgres for the database.
For Redis, you can use [Upstash Redis](https://upstash.com/) or set up your own Redis instance.

You can run Postgres &amp; Redis locally using `docker-compose`

```bash
docker-compose up -d # -d will run the services in the background
```

Create your own `.env` file:

```bash
cp apps/web/.env.example apps/web/.env
cd apps/web
pnpm install
```

Set the environment variables in the newly created `.env`. You can see a list of required variables in: `apps/web/env.ts`.

The required environment variables:

- `NEXTAUTH_SECRET` -- can be any random string (try using `openssl rand -hex 32` for a quick secure random string)
- `GOOGLE_CLIENT_ID` -- Google OAuth client ID. More info [here](https://next-auth.js.org/providers/google)
- `GOOGLE_CLIENT_SECRET` -- Google OAuth client secret. More info [here](https://next-auth.js.org/providers/google)
- `GOOGLE_ENCRYPT_SECRET` -- Secret key for encrypting OAuth tokens (try using `openssl rand -hex 32` for a secure key)
- `GOOGLE_ENCRYPT_SALT` -- Salt for encrypting OAuth tokens (try using `openssl rand -hex 16` for a secure salt)
- `UPSTASH_REDIS_URL` -- Redis URL from Upstash. (can be empty if you are using Docker Compose)
- `UPSTASH_REDIS_TOKEN` -- Redis token from Upstash. (or specify your own random string if you are using Docker Compose)

When using Vercel with Fluid Compute turned off, you should set `MAX_DURATION=300` or lower. See Vercel limits for different plans [here](https://vercel.com/docs/functions/configuring-functions/duration#duration-limits).

To run the migrations:

```bash
pnpm prisma migrate dev
```

To run the app locally for development (slower):

```bash
pnpm run dev
```

Or from the project root:

```bash
turbo dev
```

To build and run the app locally in production mode (faster):

```bash
pnpm run build
pnpm start
```

Open [http://localhost:3000](http://localhost:3000) to view the app in your browser.

To upgrade yourself, make yourself an admin in the `.env`: `ADMINS=hello@gmail.com`
Then upgrade yourself at: [http://localhost:3000/admin](http://localhost:3000/admin).

### Supported LLMs

For the LLM, you can use Anthropic, OpenAI, or Anthropic on AWS Bedrock. You can also use Ollama by setting the following enviroment variables:

```sh
OLLAMA_BASE_URL=http://localhost:11434/api
NEXT_PUBLIC_OLLAMA_MODEL=phi3
```

Note: If you need to access Ollama hosted locally and the application is running on Docker setup, you can use `http://host.docker.internal:11434/api` as the base URL. You might also need to set `OLLAMA_HOST` to `0.0.0.0` in the Ollama configuration file.

You can select the model you wish to use in the app on the `/settings` page of the app.

### Setting up Google OAuth and Gmail API

You need to enable these scopes in the Google Cloud Console:

```plaintext
https://www.googleapis.com/auth/userinfo.profile
https://www.googleapis.com/auth/userinfo.email
https://www.googleapis.com/auth/gmail.modify
https://www.googleapis.com/auth/gmail.settings.basic
https://www.googleapis.com/auth/contacts
```

### Set up push notifications via Google PubSub to handle emails in real time

Follow instructions [here](https://developers.google.com/gmail/api/guides/push).

1. [Create a topic](https://developers.google.com/gmail/api/guides/push#create_a_topic)
2. [Create a subscription](https://developers.google.com/gmail/api/guides/push#create_a_subscription)
3. [Grant publish rights on your topic](https://developers.google.com/gmail/api/guides/push#grant_publish_rights_on_your_topic)

Set env var `GOOGLE_PUBSUB_TOPIC_NAME`.
When creating the subscription select Push and the url should look something like: `https://www.getinboxzero.com/api/google/webhook?token=TOKEN` or `https://abc.ngrok-free.app/api/google/webhook?token=TOKEN` where the domain is your domain. Set `GOOGLE_PUBSUB_VERIFICATION_TOKEN` in your `.env` file to be the value of `TOKEN`.

To run in development ngrok can be helpful:

```sh
ngrok http 3000
# or with an ngrok domain to keep your endpoint stable (set `XYZ`):
ngrok http --domain=XYZ.ngrok-free.app 3000
```

And then update the webhook endpoint in the [Google PubSub subscriptions dashboard](https://console.cloud.google.com/cloudpubsub/subscription/list).

To start watching emails visit: `/api/google/watch/all`

### Watching for email updates

Set a cron job to run these:
The Google watch is necessary. Others are optional.

```json
  &quot;crons&quot;: [
    {
      &quot;path&quot;: &quot;/api/google/watch/all&quot;,
      &quot;schedule&quot;: &quot;0 1 * * *&quot;
    },
    {
      &quot;path&quot;: &quot;/api/resend/summary/all&quot;,
      &quot;schedule&quot;: &quot;0 16 * * 1&quot;
    },
    {
      &quot;path&quot;: &quot;/api/reply-tracker/disable-unused-auto-draft&quot;,
      &quot;schedule&quot;: &quot;0 3 * * *&quot;
    }
  ]
```

[Here](https://vercel.com/guides/how-to-setup-cron-jobs-on-vercel#alternative-cron-providers) are some easy ways to run cron jobs. Upstash is a free, easy option. I could never get the Vercel `vercel.json`. Open to PRs if you find a fix for that.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[fuma-nama/fumadocs]]></title>
            <link>https://github.com/fuma-nama/fumadocs</link>
            <guid>https://github.com/fuma-nama/fumadocs</guid>
            <pubDate>Fri, 18 Apr 2025 00:04:56 GMT</pubDate>
            <description><![CDATA[The beautiful docs framework with Next.js.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/fuma-nama/fumadocs">fuma-nama/fumadocs</a></h1>
            <p>The beautiful docs framework with Next.js.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 5,141</p>
            <p>Forks: 274</p>
            <p>Stars today: 358 stars today</p>
            <h2>README</h2><pre>![banner](./apps/docs/public/banner.png)

The framework for building documentation websites in Next.js.

📘 Learn More: [Documentation](https://fumadocs.vercel.app).

## Compatibility

All packages are **ESM only**.

## Sticker

![logo](./documents/logo.png)

Welcome to print it out :D

## Contributions

Make sure to read the [Contributing Guide](/.github/contributing.md) before submitting a pull request.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[blakeblackshear/frigate]]></title>
            <link>https://github.com/blakeblackshear/frigate</link>
            <guid>https://github.com/blakeblackshear/frigate</guid>
            <pubDate>Fri, 18 Apr 2025 00:04:55 GMT</pubDate>
            <description><![CDATA[NVR with realtime local object detection for IP cameras]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/blakeblackshear/frigate">blakeblackshear/frigate</a></h1>
            <p>NVR with realtime local object detection for IP cameras</p>
            <p>Language: TypeScript</p>
            <p>Stars: 22,058</p>
            <p>Forks: 2,052</p>
            <p>Stars today: 23 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;img align=&quot;center&quot; alt=&quot;logo&quot; src=&quot;docs/static/img/frigate.png&quot;&gt;
&lt;/p&gt;

# Frigate - NVR With Realtime Object Detection for IP Cameras

A complete and local NVR designed for [Home Assistant](https://www.home-assistant.io) with AI object detection. Uses OpenCV and Tensorflow to perform realtime object detection locally for IP cameras.

Use of a [Google Coral Accelerator](https://coral.ai/products/) is optional, but highly recommended. The Coral will outperform even the best CPUs and can process 100+ FPS with very little overhead.

- Tight integration with Home Assistant via a [custom component](https://github.com/blakeblackshear/frigate-hass-integration)
- Designed to minimize resource use and maximize performance by only looking for objects when and where it is necessary
- Leverages multiprocessing heavily with an emphasis on realtime over processing every frame
- Uses a very low overhead motion detection to determine where to run object detection
- Object detection with TensorFlow runs in separate processes for maximum FPS
- Communicates over MQTT for easy integration into other systems
- Records video with retention settings based on detected objects
- 24/7 recording
- Re-streaming via RTSP to reduce the number of connections to your camera
- WebRTC &amp; MSE support for low-latency live view

## Documentation

View the documentation at https://docs.frigate.video

## Donations

If you would like to make a donation to support development, please use [Github Sponsors](https://github.com/sponsors/blakeblackshear).

## Screenshots

### Live dashboard
&lt;div&gt;
&lt;img width=&quot;800&quot; alt=&quot;Live dashboard&quot; src=&quot;https://github.com/blakeblackshear/frigate/assets/569905/5e713cb9-9db5-41dc-947a-6937c3bc376e&quot;&gt;
&lt;/div&gt;

### Streamlined review workflow
&lt;div&gt;
&lt;img width=&quot;800&quot; alt=&quot;Streamlined review workflow&quot; src=&quot;https://github.com/blakeblackshear/frigate/assets/569905/6fed96e8-3b18-40e5-9ddc-31e6f3c9f2ff&quot;&gt;
&lt;/div&gt;

### Multi-camera scrubbing
&lt;div&gt;
&lt;img width=&quot;800&quot; alt=&quot;Multi-camera scrubbing&quot; src=&quot;https://github.com/blakeblackshear/frigate/assets/569905/d6788a15-0eeb-4427-a8d4-80b93cae3d74&quot;&gt;
&lt;/div&gt;

### Built-in mask and zone editor
&lt;div&gt;
&lt;img width=&quot;800&quot; alt=&quot;Multi-camera scrubbing&quot; src=&quot;https://github.com/blakeblackshear/frigate/assets/569905/d7885fc3-bfe6-452f-b7d0-d957cb3e31f5&quot;&gt;
&lt;/div&gt;
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[TanStack/table]]></title>
            <link>https://github.com/TanStack/table</link>
            <guid>https://github.com/TanStack/table</guid>
            <pubDate>Fri, 18 Apr 2025 00:04:54 GMT</pubDate>
            <description><![CDATA[🤖 Headless UI for building powerful tables & datagrids for TS/JS - React-Table, Vue-Table, Solid-Table, Svelte-Table]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/TanStack/table">TanStack/table</a></h1>
            <p>🤖 Headless UI for building powerful tables & datagrids for TS/JS - React-Table, Vue-Table, Solid-Table, Svelte-Table</p>
            <p>Language: TypeScript</p>
            <p>Stars: 26,256</p>
            <p>Forks: 3,160</p>
            <p>Stars today: 13 stars today</p>
            <h2>README</h2><pre>![TanStack Table Header](https://github.com/tanstack/table/raw/main/media/repo-header.png)

# [TanStack](https://tanstack.com) Table v8

Headless UI for building **powerful tables &amp; datagrids** for **React, Solid, Vue, Svelte, Qwik and TS/JS**.

&lt;a href=&quot;https://twitter.com/intent/tweet?button_hashtag=TanStack&quot; target=&quot;\_parent&quot;&gt;
  &lt;img alt=&quot;#TanStack&quot; src=&quot;https://img.shields.io/twitter/url?color=%2308a0e9&amp;label=%23TanStack&amp;style=social&amp;url=https%3A%2F%2Ftwitter.com%2Fintent%2Ftweet%3Fbutton_hashtag%3DTanStack&quot; /&gt;
&lt;/a&gt;
&lt;a href=&quot;https://github.com/tanstack/table/actions?table=workflow%3A%22react-table+tests%22&quot;&gt;
  &lt;img src=&quot;https://github.com/tanstack/table/workflows/react-table%20tests/badge.svg&quot; /&gt;
&lt;/a&gt;
&lt;a href=&quot;https://npmjs.com/package/@tanstack/react-table&quot; target=&quot;\_parent&quot;&gt;
  &lt;img alt=&quot;&quot; src=&quot;https://img.shields.io/npm/dm/@tanstack/react-table.svg&quot; /&gt;
&lt;/a&gt;
&lt;a href=&quot;https://bundlephobia.com/result?p=@tanstack/react-table@latest&quot; target=&quot;\_parent&quot;&gt;
  &lt;img alt=&quot;&quot; src=&quot;https://badgen.net/bundlephobia/minzip/@tanstack/react-table@latest&quot; /&gt;
&lt;/a&gt;
&lt;a href=&quot;#badge&quot;&gt;
  &lt;img alt=&quot;semantic-release&quot; src=&quot;https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg&quot;&gt;
&lt;/a&gt;
&lt;a href=&quot;https://github.com/tanstack/table/discussions&quot;&gt;
  &lt;img alt=&quot;Join the discussion on Github&quot; src=&quot;https://img.shields.io/badge/Github%20Discussions%20%26%20Support-Chat%20now!-blue&quot; /&gt;
&lt;/a&gt;
&lt;a href=&quot;https://github.com/tanstack/table&quot; target=&quot;\_parent&quot;&gt;
  &lt;img alt=&quot;&quot; src=&quot;https://img.shields.io/github/stars/tanstack/react-table.svg?style=social&amp;label=Star&quot; /&gt;
&lt;/a&gt;
&lt;a href=&quot;https://twitter.com/tannerlinsley&quot; target=&quot;\_parent&quot;&gt;
  &lt;img alt=&quot;&quot; src=&quot;https://img.shields.io/twitter/follow/tannerlinsley.svg?style=social&amp;label=Follow&quot; /&gt;
&lt;/a&gt;

&gt; [Looking for version 7 of `react-table`? Click here!](https://github.com/tanstack/table/tree/v7)

## Enjoy this library?

Try other [TanStack](https://tanstack.com) libraries:

- [TanStack Query](https://github.com/TanStack/query) &lt;img alt=&quot;&quot; src=&quot;https://img.shields.io/github/stars/tanstack/query.svg&quot; /&gt;
- [TanStack Table](https://github.com/TanStack/table) &lt;img alt=&quot;&quot; src=&quot;https://img.shields.io/github/stars/tanstack/table.svg&quot; /&gt;
- [TanStack Router](https://github.com/TanStack/router) &lt;img alt=&quot;&quot; src=&quot;https://img.shields.io/github/stars/tanstack/router.svg&quot; /&gt;
- [TanStack Virtual](https://github.com/TanStack/virtual) &lt;img alt=&quot;&quot; src=&quot;https://img.shields.io/github/stars/tanstack/virtual.svg&quot; /&gt;
- [TanStack Form](https://github.com/TanStack/form) &lt;img alt=&quot;&quot; src=&quot;https://img.shields.io/github/stars/tanstack/form.svg&quot; /&gt;
- [TanStack Ranger](https://github.com/TanStack/ranger) &lt;img alt=&quot;&quot; src=&quot;https://img.shields.io/github/stars/tanstack/ranger.svg&quot; /&gt;

## Visit [tanstack.com/table](https://tanstack.com/table) for docs, guides, API and more!

You may know **TanStack Table** by our adapter names, too!

- [Angular Table](https://tanstack.com/table/v8/docs/framework/angular/angular-table)
- [Lit Table](https://tanstack.com/table/v8/docs/framework/lit/lit-table)
- [Qwik Table](https://tanstack.com/table/v8/docs/framework/qwik/qwik-table)
- [**React Table**](https://tanstack.com/table/v8/docs/framework/react/react-table)
- [Solid Table](https://tanstack.com/table/v8/docs/framework/solid/solid-table)
- [Svelte Table](https://tanstack.com/table/v8/docs/framework/svelte/svelte-table)
- [Vue Table](https://tanstack.com/table/v8/docs/framework/vue/vue-table)

## Summary

TanStack Table is a **headless** table library, which means it does not ship with components, markup or styles. This means that you have **full control** over markup and styles (CSS, CSS-in-JS, UI Component Libraries, etc) and this is also what gives it its portable nature. You can even use it in React Native!

If you want a **lightweight table with full control over markup and implementation**, then you should consider using **TanStack Table, a headless table library**.

If you want a **ready-to-use component-based table with more power but more constraints around markup/styles/implementation**, you should consider using [AG Grid](https://ag-grid.com/react-data-grid/?utm_source=reacttable&amp;utm_campaign=githubreacttable), a component-based table library from our OSS partner [AG Grid](https://ag-grid.com).

TanStack Table and AG Grid are respectfully the
**best table/datagrid libraries around**. Instead
of competing, we&#039;re working together to ensure the highest
quality table/datagrid options are available for the entire
JS/TS ecosystem and every use-case.

## Quick Features

- Agnostic core (JS/TS)
- 1st-class framework bindings for React, Vue, Solid
- ~15kb or less (with tree-shaking)
- 100% TypeScript (but not required)
- Headless (100% customizable, Bring-your-own-UI)
- Auto out of the box, opt-in controllable state
- Filters (column and global)
- Sorting (multi-column, multi-directional)
- Grouping &amp; Aggregation
- Pivoting (coming soon!)
- Row Selection
- Row Expansion
- Column Visibility/Ordering/Pinning/Resizing
- Table Splitting
- Animatable
- Virtualizable
- Server-side/external data model support

# Migrating from React Table v7

## Notable Changes

- Full rewrite to TypeScript with types included in the base package
- Removal of plugin system to favor more inversion of control
- Vastly larger and improved API (and new features like pinning)
- Better controlled state management
- Better support for server-side operations
- Complete (but optional) data pipeline control
- Agnostic core with framework adapters for React, Solid, Svelte, Vue, and potentially more in the future
- New Dev Tools

## Migration

There are a fair amount of breaking changes (they&#039;re worth it, trust us!):

- Turns out that TypeScript makes your code **a lot** better/safer, but also usually requires breaking changes to architecture.
- Plugin system has been removed so plugins must be rewritten to wrap/compose the new functional API. Contact us if you need help!
- Column configuration options have changed, but only slightly.
- Table options are mostly the same, with some larger changes around optional state management/control and data pipeline control
- The `table` instance while similar in spirit to v7 has been reconfigured to be much faster.

## Installation

Install one of the following packages based on your framework of choice:

```bash
# Npm
npm install @tanstack/angular-table
npm install @tanstack/lit-table
npm install @tanstack/qwik-table
npm install @tanstack/react-table
npm install @tanstack/solid-table
npm install @tanstack/svelte-table
npm install @tanstack/vue-table
npm install @tanstack/table-core #vanilla js that can work with any framework
```

## How to help?

- Try out the already-migrated examples
- Try it out in your own projects.
- Introspect the types! Even without the docs finished, the library ships with 100% typescript to help you explore its capabilities.
- [Read the contribution guidelines](https://github.com/tanstack/table/tree/main/CONTRIBUTING.md)
- Write some docs! Start with the [API docs](https://github.com/TanStack/react-table/tree/main/docs/api) and try adding some information about one or more of the features. The types do a decent job of showing what&#039;s supported and the capabilities of the library.
- **Using a plugin?** Try rewriting your plugin (v8 doesn&#039;t have a plugin system any more) as a functional wrapper that uses TanStack Table internally. The new API is much more powerful and easier to compose. If you find something you can&#039;t figure out, let us know and we&#039;ll add it to the API.

### [Become a Sponsor](https://github.com/sponsors/tannerlinsley/)

&lt;!-- USE THE FORCE LUKE --&gt;
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[OpenCTI-Platform/opencti]]></title>
            <link>https://github.com/OpenCTI-Platform/opencti</link>
            <guid>https://github.com/OpenCTI-Platform/opencti</guid>
            <pubDate>Fri, 18 Apr 2025 00:04:53 GMT</pubDate>
            <description><![CDATA[Open Cyber Threat Intelligence Platform]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/OpenCTI-Platform/opencti">OpenCTI-Platform/opencti</a></h1>
            <p>Open Cyber Threat Intelligence Platform</p>
            <p>Language: TypeScript</p>
            <p>Stars: 7,188</p>
            <p>Forks: 1,039</p>
            <p>Stars today: 2 stars today</p>
            <h2>README</h2><pre>&lt;h1 align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://opencti.io&quot;&gt;&lt;img src=&quot;./.github/img/logo_opencti.png&quot; alt=&quot;OpenCTI&quot;&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://opencti.io&quot; alt=&quot;Website&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/website-opencti.io-blue.svg&quot; /&gt;&lt;/a&gt;
  &lt;a href=&quot;https://docs.opencti.io&quot; alt=&quot;Documentation&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/documentation-latest-orange.svg&quot; /&gt;&lt;/a&gt;
  &lt;a href=&quot;https://community.filigran.io&quot; alt=&quot;Slack&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/slack-3K%2B%20members-4A154B&quot; /&gt;&lt;/a&gt;
  &lt;a href=&quot;https://drone.filigran.io/OpenCTI-Platform/opencti&quot;&gt;&lt;img src=&quot;https://drone.filigran.io/api/badges/OpenCTI-Platform/opencti/status.svg&quot; /&gt;&lt;/a&gt;
  &lt;a href=&quot;https://codecov.io/gh/OpenCTI-Platform/opencti&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/OpenCTI-Platform/opencti/graph/badge.svg&quot; /&gt;&lt;/a&gt;
  &lt;a href=&quot;https://deepscan.io/dashboard#view=project&amp;tid=4926&amp;pid=6716&amp;bid=57311&quot;&gt;&lt;img src=&quot;https://deepscan.io/api/teams/4926/projects/6716/branches/57311/badge/grade.svg&quot; alt=&quot;DeepScan grade&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://renovatebot.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/renovate-enabled-brightgreen.svg&quot; alt=&quot;DeepScan grade&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://hub.docker.com/u/opencti&quot; alt=&quot;Docker pulls&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/pulls/opencti/platform&quot; /&gt;&lt;/a&gt;
&lt;/p&gt;

## Introduction

OpenCTI is an open source platform allowing organizations to manage their cyber threat intelligence knowledge and observables. It has been created in order to structure, store, organize and visualize technical and non-technical information about cyber threats.

The structuration of the data is performed using a knowledge schema based on the [STIX2 standards](https://oasis-open.github.io/cti-documentation/). It has been designed as a modern web application including a [GraphQL API](https://graphql.org) and an UX oriented frontend. Also, OpenCTI can be integrated with other tools and applications such as [MISP](https://github.com/MISP/MISP), [TheHive](https://github.com/TheHive-Project/TheHive), [MITRE ATT&amp;CK](https://github.com/mitre/cti), etc.

![Screenshot](./.github/img/screenshot.png &quot;Screenshot&quot;)

## Objective

The goal is to create a comprehensive tool allowing users to capitalize technical (such as TTPs and observables) and non-technical information (such as suggested attribution, victimology etc.) while linking each piece of information to its primary source (a report, a MISP event, etc.), with features such as links between each information, first and last seen dates, levels of confidence, etc. The tool is able to use the [MITRE ATT&amp;CK framework](https://attack.mitre.org) (through a [dedicated connector](https://github.com/OpenCTI-Platform/connectors)) to help structure the data. The user can also choose to implement their own datasets.

Once data has been capitalized and processed by the analysts within OpenCTI, new relations may be inferred from existing ones to facilitate the understanding and the representation of this information. This allows the user to extract and leverage meaningful knowledge from the raw data.

OpenCTI not only allows [imports](https://docs.opencti.io/latest/usage/import-automated/) but also [exports of data](https://docs.opencti.io/latest/usage/feeds/) under different formats (CSV, STIX2 bundles, etc.). [Connectors](https://filigran.notion.site/OpenCTI-Ecosystem-868329e9fb734fca89692b2ed6087e76) are currently developed to accelerate interactions between the tool and other platforms.

## Editions of the platform

OpenCTI platform has 2 different editions: Community (CE) and Enterprise (EE). The purpose of the Enterprise Edition is to provide [additional and powerful features](https://filigran.io/offering/subscribe) which require specific investments in research and development. You can enable the Enterprise Edition directly in the settings of the platform.

* OpenCTI Community Edition, licensed under the [Apache 2, Version 2.0 license](LICENSE).
* OpenCTI Enterprise Edition, licensed under the [Enterprise Edition license](LICENSE).

To understand what OpenCTI Enterprise Edition brings in terms of features, just check the [Enterprise Editions page](https://filigran.io/offering/subscribe) on the Filigran website. You can also try this edition by enabling it in the settings of the platform.

## Documentation and demonstration

If you want to know more on OpenCTI, you can read the [documentation on the tool](https://docs.opencti.io). If you wish to discover how the OpenCTI platform is working, a [demonstration instance](https://demo.opencti.io) is available and open to everyone. This instance is reset every night and is based on reference data maintained by the OpenCTI developers.

## Releases download

The releases are available on the [Github releases page](https://github.com/OpenCTI-Platform/opencti/releases). You can also access the [rolling release package](https://releases.opencti.io) generated from the master branch of the repository.

## Installation

All you need to install the OpenCTI platform can be found in the [official documentation](https://docs.opencti.io). For installation, you can:

* [Use Docker](https://docs.opencti.io/latest/deployment/installation/#using-docker)
* [Install manually](https://docs.opencti.io/latest/deployment/installation/#install-manually)
* [Use Terraform (community)](https://docs.opencti.io/latest/deployment/installation/#terraform)
* [Use Helm charts (community)](https://docs.opencti.io/latest/deployment/installation/#helm-charts)

## Contributing

### Code of Conduct

OpenCTI has adopted a [Code of Conduct](CODE_OF_CONDUCT.md) that we expect project participants to adhere to. Please read the [full text](CODE_OF_CONDUCT.md) so that you can understand what actions will and will not be tolerated.

### Contributing Guide

Read our [contributing guide](CONTRIBUTING.md) to learn about our development process, how to propose bugfixes and improvements, and how to build and test your changes to OpenCTI.

### Beginner friendly issues

To help you get you familiar with our contribution process, we have a list of [beginner friendly issues](https://github.com/OpenCTI-Platform/opencti/labels/beginner%20friendly%20issue) which are fairly easy to implement. This is a great place to get started.

### Development

If you want to actively help OpenCTI, we created a [dedicated documentation](https://docs.opencti.io/latest/development/environment_ubuntu/) about the deployment of a development environment and how to start the source code modification.

## Community

### Status &amp; bugs

Currently OpenCTI is under heavy development, if you wish to report bugs or ask for new features, you can directly use the [Github issues module](https://github.com/OpenCTI-Platform/opencti/issues).

### Discussion

If you need support or you wish to engage a discussion about the OpenCTI platform, feel free to join us on our [Slack channel](https://community.filigran.io). You can also send us an email to contact@filigran.io.

## About

### Authors

OpenCTI is a product designed and developed by the company [Filigran](https://filigran.io).

&lt;a href=&quot;https://filigran.io&quot; alt=&quot;Filigran&quot;&gt;&lt;img src=&quot;./.github/img/logo_filigran.png&quot; width=&quot;300&quot; /&gt;&lt;/a&gt;

### Data Collection

#### Usage telemetry

To improve the features and the performances of OpenCTI, the platform collects anonymous statistical data related to its usage and health.

You can find all the details on collected data and associated usage in the [usage telemetry documentation](https://docs.opencti.io/latest/reference/usage-telemetry/).

#### OpenStreetMap server

To provide OpenCTI users with cartography features, the platform uses a dedicated OpenStreetMap server (https://map.opencti.io). To monitor usage and adapt services performances, Filigran collects access log to this server (including IP addresses).

By using this server, you authorize Filigran to collect this information. Otherwise, you are free to deploy your own OpenStreetMap server and modify the platform configuration accordingly.

If you have started using the Filigran server and change your mind, you have the right to access, limit, rectify, erase and receive your data. To exercise your rights, please send your request to privacy@filigran.io.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[scalar/scalar]]></title>
            <link>https://github.com/scalar/scalar</link>
            <guid>https://github.com/scalar/scalar</guid>
            <pubDate>Fri, 18 Apr 2025 00:04:52 GMT</pubDate>
            <description><![CDATA[Scalar is an open-source API platform:　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　🌐 Modern Rest API Client　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　📖 Beautiful API References　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　✨ 1st-Class OpenAPI/Swagger Support]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/scalar/scalar">scalar/scalar</a></h1>
            <p>Scalar is an open-source API platform:　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　🌐 Modern Rest API Client　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　📖 Beautiful API References　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　✨ 1st-Class OpenAPI/Swagger Support</p>
            <p>Language: TypeScript</p>
            <p>Stars: 9,933</p>
            <p>Forks: 342</p>
            <p>Stars today: 36 stars today</p>
            <h2>README</h2><pre>[![CI](https://github.com/scalar/scalar/actions/workflows/ci.yml/badge.svg)](https://github.com/scalar/scalar/actions/workflows/ci.yml)
[![Contributors](https://img.shields.io/github/contributors/scalar/scalar)](https://github.com/scalar/scalar/graphs/contributors)
[![GitHub License](https://img.shields.io/github/license/scalar/scalar)](https://github.com/scalar/scalar/blob/main/LICENSE)
[![Discord](https://img.shields.io/discord/1135330207960678410?style=flat&amp;color=5865F2)](https://discord.gg/scalar)
[![Scalar App](https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fapi.todesktop.com%2Fv1%2FgetReleaseBuildIds%3FappId%3D240718bnjmcfyp4&amp;query=%24.releases%5B%3A1%5D.version&amp;label=Scalar%20App&amp;labelColor=%231a1a1a&amp;color=%23e7e7e7)](https://scalar.com/download)

&lt;h1&gt;
	&lt;p&gt;Scalar&lt;/p&gt;
	&lt;p&gt;
		&lt;a href=&quot;https://scalar.com/download&quot; target=&quot;_blank&quot;&gt;
			&lt;picture&gt;
				&lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://github.com/user-attachments/assets/b391b82f-d993-4e97-8a17-1c3c7ccbb19b&quot;&gt;
				&lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://github.com/user-attachments/assets/579d0853-b2a5-4ea8-b2bd-a98753faeaf3&quot;&gt;
				&lt;img width=&quot;48.494%&quot; height=&quot;250&quot; src=&quot;https://github.com/user-attachments/assets/b391b82f-d993-4e97-8a17-1c3c7ccbb19b#gh-light-mode-only&quot; alt=&quot;Scalar API client&quot;&gt;
			&lt;/picture&gt;
		&lt;/a&gt;
		&lt;a href=&quot;https://docs.scalar.com/swagger-editor&quot; target=&quot;_blank&quot;&gt;
			&lt;picture&gt;
				&lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://github.com/user-attachments/assets/9b639f2d-0204-4b15-b918-158072a9afa5&quot;&gt;
				&lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://github.com/user-attachments/assets/be723d07-ec9c-4edb-b657-05a8bc05c7d6&quot;&gt;
				&lt;img width=&quot;48.494%&quot; height=&quot;250&quot; src=&quot;https://github.com/user-attachments/assets/9b639f2d-0204-4b15-b918-158072a9afa5#gh-light-mode-only&quot; alt=&quot;Scalar API Reference&quot;&gt;
			&lt;/picture&gt;
	 	&lt;/a&gt;
	&lt;/p&gt;
&lt;/h1&gt;

&lt;p&gt;
	&lt;img width=&quot;830&quot; height=&quot;520&quot; src=&quot;https://github.com/user-attachments/assets/7c4d4971-a6d9-457d-a7ab-11894889f6f9#gh-light-mode-only&quot;&gt;
	&lt;img width=&quot;830&quot; height=&quot;520&quot; src=&quot;https://github.com/user-attachments/assets/0e3ffca5-8912-487a-a390-fef0e8222c35#gh-dark-mode-only&quot;&gt;
&lt;/p&gt;

### An offline first API Client built for OpenAPI

└ Minimal, powerful &amp; open-source &lt;br&gt;
└ Integrates with dozens of API Frameworks (Elysia, Hono, FastAPI, etc)&lt;br&gt;
└ Syncs directly with your server frameworks with our Watch Mode &lt;br&gt;
└ First class OpenAPI (formerly Swagger) support &lt;br&gt;
└ Environment variables and dynamic parameters &lt;br&gt;
└ Save and organize requests into collections &lt;br&gt;
└ &lt;a href=&quot;https://scalar.com/download&quot;&gt;Download (Windows, MacOS, Linux)&lt;/a&gt; &lt;br&gt;
└ &lt;a href=&quot;https://client.scalar.com/&quot;&gt;Try Online Demo&lt;/a&gt;

&lt;!-- minimal line break--&gt;
&lt;p&gt;
	&lt;img width=&quot;1200&quot; height=&quot;1&quot; src=&quot;https://github.com/user-attachments/assets/7d7e7ba7-2b02-49f3-abcd-b24c566a3c16#gh-light-mode-only&quot;&gt;
	&lt;img width=&quot;1200&quot; height=&quot;1&quot; src=&quot;https://github.com/user-attachments/assets/341bfb1d-5cb0-4ec6-89eb-4b1dcc07eeb7#gh-dark-mode-only&quot;&gt;
&lt;/p&gt;
&lt;!-- end minimal line break--&gt;

&lt;p&gt;
	&lt;img width=&quot;830&quot; height=&quot;520&quot; src=&quot;https://github.com/user-attachments/assets/718201bf-421a-4802-b0b0-2b016ee3f1b4#gh-light-mode-only&quot;&gt;
	&lt;img width=&quot;830&quot; height=&quot;520&quot; src=&quot;https://github.com/user-attachments/assets/28b4b80c-2c12-4501-b403-1c1e4949941c#gh-dark-mode-only&quot;&gt;
&lt;/p&gt;

&lt;h3&gt;Interactive API Reference from OpenAPI/Swagger&lt;/h3&gt;
└ Uses OpenAPI/Swagger documents &lt;br&gt;
└ Request examples for many favorite languages and frameworks &lt;br&gt;
└ Comes with an integrated API playground &lt;br&gt;
└ Integrates with your favorite framework &lt;br&gt;
└ Doesn&#039;t look like 2011 &lt;br&gt;
└ &lt;a href=&quot;https://docs.scalar.com/swagger-editor&quot;&gt;Try Demo&lt;/a&gt;

&lt;!-- minimal line break--&gt;
&lt;p&gt;
	&lt;img width=&quot;1200&quot; height=&quot;1&quot; src=&quot;https://github.com/user-attachments/assets/7d7e7ba7-2b02-49f3-abcd-b24c566a3c16#gh-light-mode-only&quot;&gt;
	&lt;img width=&quot;1200&quot; height=&quot;1&quot; src=&quot;https://github.com/user-attachments/assets/341bfb1d-5cb0-4ec6-89eb-4b1dcc07eeb7#gh-dark-mode-only&quot;&gt;
&lt;/p&gt;
&lt;!-- end minimal line break--&gt;

### Trusted by:

&lt;br&gt;

&lt;p&gt;
	&lt;img width=&quot;48.494%&quot; height=&quot;330&quot; src=&quot;https://github.com/user-attachments/assets/73dcef95-fc4f-4111-bb09-f3ce37453a81#gh-light-mode-only&quot;&gt;
	&lt;img width=&quot;48.494%&quot; height=&quot;330&quot; src=&quot;https://github.com/user-attachments/assets/1da6b904-34be-4760-b535-0dd2160e6d12#gh-light-mode-only&quot;&gt;
	&lt;img width=&quot;48.494%&quot; height=&quot;330&quot; src=&quot;https://github.com/user-attachments/assets/c792c977-8551-432c-9417-3ea05e408151#gh-dark-mode-only&quot;&gt;
	&lt;img width=&quot;48.494%&quot; height=&quot;330&quot; src=&quot;https://github.com/user-attachments/assets/54a9ea69-c50a-4f49-8c3e-ddd6f8fbe1f3#gh-dark-mode-only&quot;&gt;
&lt;/p&gt;

### Quickstart

You’re just one HTML file away from having an awesome API reference:

```html
&lt;!doctype html&gt;
&lt;html&gt;
  &lt;head&gt;
    &lt;title&gt;Scalar API Reference&lt;/title&gt;
    &lt;meta charset=&quot;utf-8&quot; /&gt;
    &lt;meta
      name=&quot;viewport&quot;
      content=&quot;width=device-width, initial-scale=1&quot; /&gt;
  &lt;/head&gt;

  &lt;body&gt;
    &lt;div id=&quot;app&quot;&gt;&lt;/div&gt;

    &lt;!-- Load the Script --&gt;
    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/@scalar/api-reference&quot;&gt;&lt;/script&gt;

    &lt;!-- Initialize the Scalar API Reference --&gt;
    &lt;script&gt;
      Scalar.createApiReference(&#039;#app&#039;, {
        // The URL of the OpenAPI/Swagger document
        url: &#039;https://cdn.jsdelivr.net/npm/@scalar/galaxy/dist/latest.json&#039;,
        // Avoid CORS issues
        proxyUrl: &#039;https://proxy.scalar.com&#039;,
      })
    &lt;/script&gt;
  &lt;/body&gt;
&lt;/html&gt;
```

&gt; Need a Custom Header? Check out this example: https://codepen.io/scalarorg/pen/VwOXqam

And there’s an ever-growing list of plugins and integrations:

### Integrations

- [HTML/JS API](documentation/integrations/html-js.md) (works everywhere)
- [.NET](integrations/aspnetcore/README.md)
- [AdonisJS](documentation/integrations/adonisjs.md)
- [Django](https://github.com/m1guer/django-scalar)
- [Django Ninja](integrations/django-ninja/README.md)
- [Docusaurus](integrations/docusaurus/README.md)
- [Express](integrations/express/README.md)
- [FastAPI](integrations/fastapi/README.md)
- [Fastify](integrations/fastify/README.md)
- [Go](documentation/integrations/go.md)
- [Hono](integrations/hono/README.md)
- [Laravel Scribe](documentation/integrations/laravel-scribe.md)
- [Micronaut](https://micronaut-projects.github.io/micronaut-openapi/latest/guide/index.html#scalar)
- [NestJS](integrations/nestjs/README.md)
- [Next.js](integrations/nextjs/README.md)
- [Nuxt](integrations/nuxt/README.md)
- [React](packages/api-reference-react/README.md)
- [Ruby on Rails](https://github.com/dmytroshevchuk/scalar_ruby)
- [Rust](documentation/integrations/rust.md)
- [Scalar for Laravel](https://github.com/scalar/laravel)
- [Ts.ED](https://tsed.dev/tutorials/scalar.html)
- [Vue.js](packages/api-reference/README.md)

### Built-in Support

The following frameworks have chosen Scalar API Reference as their default OpenAPI documentation UI, recognizing its developer-friendly features and modern design:

- [ElysiaJS](documentation/integrations/elysiajs.md)
- [HappyX](https://github.com/HapticX/happyx)
- [Litestar](https://docs.litestar.dev/latest/usage/openapi/ui_plugins.html)
- [Nitro](documentation/integrations/nitro.md)
- [Platformatic](documentation/integrations/platformatic.md)

&lt;br&gt;

### Managed Hosting

We’re offering a free and paid managed hosting on the edge, too:

- Write your API documentation and publish your API references (free)
- Get SSL and a super cool `*.apidocumentation.com` subdomain (free)
- Write free text documentation (paid)
- Collaborate with your whole team (paid)
- Use any domain (paid)

Ready? [Create your account on scalar.com](https://scalar.com).

&lt;br&gt;

### Projects

| Project                                                     | Description            |
| ----------------------------------------------------------- | ---------------------- |
| [Scalar API Client](packages/api-client/README.md)          | API client             |
| [Scalar CLI](packages/cli/README.md)                        | Command-line interface |
| [Scalar Galaxy](packages/galaxy/README.md)                  | OpenAPI Example        |
| [Scalar Play Button](packages/play-button/README.md)        | Quick API Client Embed |
| [Scalar Mock Server](packages/mock-server/README.md)        | OpenAPI Mock Server    |
| [Scalar Void Server](packages/void-server/README.md)        | HTTP Request Mirror    |
| [Scalar Open API Parser](packages/openapi-parser/README.md) | OpenAPI SDK            |
| [Scalar Sandbox](https://sandbox.scalar.com/)               | Online OpenAPI Editor  |

&lt;br&gt;

### Documentation

| Topic                                           | Description                        |
| ----------------------------------------------- | ---------------------------------- |
| [Themes](documentation/themes.md)               | Themes, layouts &amp; styling          |
| [Configuration](documentation/configuration.md) | The universal configuration object |
| [OpenAPI](documentation/openapi.md)             | OpenAPI and our extensions to it   |
| [Markdown](documentation/markdown.md)           | Markdown syntax                    |

&lt;br&gt;

### Community

We are API nerds. You too? Let’s chat on Discord: &lt;https://discord.gg/scalar&gt;

&lt;br&gt;

### Contributions

Contributions are welcome! Read the [`CONTRIBUTING`](CONTRIBUTING.md) guide.

**Top 10 Contributors (November 2024)**

&lt;p&gt;
	&lt;img width=&quot;830&quot; height=&quot;280&quot; src=&quot;https://github.com/user-attachments/assets/f325a891-8b23-4c4f-97e8-8c0e768a9d4a#gh-light-mode-only&quot;&gt;
	&lt;img width=&quot;830&quot; height=&quot;280&quot; src=&quot;https://github.com/user-attachments/assets/8811e01d-914b-4a4b-8d24-166b360fa637#gh-dark-mode-only&quot;&gt;
&lt;/p&gt;

&lt;br&gt;
&lt;br&gt;

**Top Contributors (All Time)**

&lt;!-- readme: collaborators,contributors -start --&gt;
&lt;table&gt;
	&lt;tbody&gt;
		&lt;tr&gt;
            &lt;td align=&quot;center&quot;&gt;
                &lt;a href=&quot;https://github.com/hanspagel&quot;&gt;
                    &lt;img src=&quot;https://avatars.githubusercontent.com/u/1577992?v=4&quot; width=&quot;100;&quot; alt=&quot;hanspagel&quot;/&gt;
                    &lt;br /&gt;
                    &lt;sub&gt;&lt;b&gt;hanspagel&lt;/b&gt;&lt;/sub&gt;
                &lt;/a&gt;
            &lt;/td&gt;
            &lt;td align=&quot;center&quot;&gt;
                &lt;a href=&quot;https://github.com/amritk&quot;&gt;
                    &lt;img src=&quot;https://avatars.githubusercontent.com/u/2039539?v=4&quot; width=&quot;100;&quot; alt=&quot;amritk&quot;/&gt;
                    &lt;br /&gt;
                    &lt;sub&gt;&lt;b&gt;amritk&lt;/b&gt;&lt;/sub&gt;
                &lt;/a&gt;
            &lt;/td&gt;
            &lt;td align=&quot;center&quot;&gt;
                &lt;a href=&quot;https://github.com/xC0dex&quot;&gt;
                    &lt;img src=&quot;https://avatars.githubusercontent.com/u/22918366?v=4&quot; width=&quot;100;&quot; alt=&quot;xC0dex&quot;/&gt;
                    &lt;br /&gt;
                    &lt;sub&gt;&lt;b&gt;xC0dex&lt;/b&gt;&lt;/sub&gt;
                &lt;/a&gt;
            &lt;/td&gt;
            &lt;td align=&quot;center&quot;&gt;
                &lt;a href=&quot;https://github.com/antlio&quot;&gt;
                    &lt;img src=&quot;https://avatars.githubusercontent.com/u/14966155?v=4&quot; width=&quot;100;&quot; alt=&quot;antlio&quot;/&gt;
                    &lt;br /&gt;
                    &lt;sub&gt;&lt;b&gt;antlio&lt;/b&gt;&lt;/sub&gt;
                &lt;/a&gt;
            &lt;/td&gt;
            &lt;td align=&quot;center&quot;&gt;
                &lt;a href=&quot;https://github.com/marclave&quot;&gt;
                    &lt;img src=&quot;https://avatars.githubusercontent.com/u/6176314?v=4&quot; width=&quot;100;&quot; alt=&quot;marclave&quot;/&gt;
                    &lt;br /&gt;
                    &lt;sub&gt;&lt;b&gt;marclave&lt;/b&gt;&lt;/sub&gt;
                &lt;/a&gt;
            &lt;/td&gt;
            &lt;td align=&quot;center&quot;&gt;
                &lt;a href=&quot;https://github.com/hwkr&quot;&gt;
                    &lt;img src=&quot;https://avatars.githubusercontent.com/u/6374090?v=4&quot; width=&quot;100;&quot; alt=&quot;hwkr&quot;/&gt;
                    &lt;br /&gt;
                    &lt;sub&gt;&lt;b&gt;hwkr&lt;/b&gt;&lt;/sub&gt;
                &lt;/a&gt;
            &lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
            &lt;td align=&quot;center&quot;&gt;
                &lt;a href=&quot;https://github.com/cameronrohani&quot;&gt;
                    &lt;img src=&quot;https://avatars.githubusercontent.com/u/6201407?v=4&quot; width=&quot;100;&quot; alt=&quot;cameronrohani&quot;/&gt;
                    &lt;br /&gt;
                    &lt;sub&gt;&lt;b&gt;cameronrohani&lt;/b&gt;&lt;/sub&gt;
                &lt;/a&gt;
            &lt;/td&gt;
            &lt;td align=&quot;center&quot;&gt;
                &lt;a href=&quot;https://github.com/tmastrom&quot;&gt;
                    &lt;img src=&quot;https://avatars.githubusercontent.com/u/36525329?v=4&quot; width=&quot;100;&quot; alt=&quot;tmastrom&quot;/&gt;
                    &lt;br /&gt;
                    &lt;sub&gt;&lt;b&gt;tmastrom&lt;/b&gt;&lt;/sub&gt;
                &lt;/a&gt;
            &lt;/td&gt;
            &lt;td align=&quot;center&quot;&gt;
                &lt;a href=&quot;https://github.com/geoffgscott&quot;&gt;
                    &lt;img src=&quot;https://avatars.githubusercontent.com/u/59206100?v=4&quot; width=&quot;100;&quot; alt=&quot;geoffgscott&quot;/&gt;
                    &lt;br /&gt;
                    &lt;sub&gt;&lt;b&gt;geoffgscott&lt;/b&gt;&lt;/sub&gt;
                &lt;/a&gt;
            &lt;/td&gt;
            &lt;td align=&quot;center&quot;&gt;
                &lt;a href=&quot;https://github.com/inyourtime&quot;&gt;
                    &lt;img src=&quot;https://avatars.githubusercontent.com/u/66111030?v=4&quot; width=&quot;100;&quot; alt=&quot;inyourtime&quot;/&gt;
                    &lt;br /&gt;
                    &lt;sub&gt;&lt;b&gt;inyourtime&lt;/b&gt;&lt;/sub&gt;
                &lt;/a&gt;
            &lt;/td&gt;
            &lt;td align=&quot;center&quot;&gt;
                &lt;a href=&quot;https://github.com/Amorim33&quot;&gt;
                    &lt;img src=&quot;https://avatars.githubusercontent.com/u/42624869?v=4&quot; width=&quot;100;&quot; alt=&quot;Amorim33&quot;/&gt;
                    &lt;br /&gt;
                    &lt;sub&gt;&lt;b&gt;Amorim33&lt;/b&gt;&lt;/sub&gt;
                &lt;/a&gt;
            &lt;/td&gt;
            &lt;td align=&quot;center&quot;&gt;
                &lt;a href=&quot;https://github.com/ivanagas&quot;&gt;
                    &lt;img src=&quot;https://avatars.githubusercontent.com/u/34755028?v=4&quot; width=&quot;100;&quot; alt=&quot;ivanagas&quot;/&gt;
                    &lt;br /&gt;
                    &lt;sub&gt;&lt;b&gt;ivanagas&lt;/b&gt;&lt;/sub&gt;
                &lt;/a&gt;
            &lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
            &lt;td align=&quot;center&quot;&gt;
                &lt;a href=&quot;https://github.com/Mason-Little&quot;&gt;
                    &lt;img src=&quot;https://avatars.githubusercontent.com/u/105008441?v=4&quot; width=&quot;100;&quot; alt=&quot;Mason-Little&quot;/&gt;
                    &lt;br /&gt;
                    &lt;sub&gt;&lt;b&gt;Mason-Little&lt;/b&gt;&lt;/sub&gt;
                &lt;/a&gt;
            &lt;/td&gt;
            &lt;td align=&quot;center&quot;&gt;
                &lt;a href=&quot;https://github.com/RemcoGoy&quot;&gt;
                    &lt;img src=&quot;https://avatars.githubusercontent.com/u/34539109?v=4&quot; width=&quot;100;&quot; alt=&quot;RemcoGoy&quot;/&gt;
                    &lt;br /&gt;
                    &lt;sub&gt;&lt;b&gt;RemcoGoy&lt;/b&gt;&lt;/sub&gt;
                &lt;/a&gt;
            &lt;/td&gt;
            &lt;td align=&quot;center&quot;&gt;
                &lt;a href=&quot;https://github.com/adjsky&quot;&gt;
                    &lt;img src=&quot;https://avatars.githubusercontent.com/u/49305219?v=4&quot; width=&quot;100;&quot; alt=&quot;adjsky&quot;/&gt;
                    &lt;br /&gt;
                    &lt;sub&gt;&lt;b&gt;adjsky&lt;/b&gt;&lt;/sub&gt;
                &lt;/a&gt;
            &lt;/td&gt;
            &lt;td align=&quot;center&quot;&gt;
                &lt;a href=&quot;https://github.com/ATREAY&quot;&gt;
                    &lt;img src=&quot;https://avatars.githubusercontent.com/u/66585295?v=4&quot; width=&quot;100;&quot; alt=&quot;ATREAY&quot;/&gt;
                    &lt;br /&gt;
                    &lt;sub&gt;&lt;b&gt;ATREAY&lt;/b&gt;&lt;/sub&gt;
                &lt;/a&gt;
            &lt;/td&gt;
            &lt;td align=&quot;center&quot;&gt;
                &lt;a href=&quot;https://github.com/Edgaraszs&quot;&gt;
                    &lt;img src=&quot;https://avatars.githubusercontent.com/u/55696268?v=4&quot; width=&quot;100;&quot; alt=&quot;Edgaraszs&quot;/&gt;
                    &lt;br /&gt;
                    &lt;sub&gt;&lt;b&gt;Edgaraszs&lt;/b&gt;&lt;/sub&gt;
                &lt;/a&gt;
            &lt;/td&gt;
            &lt;td align=&quot;center&quot;&gt;
                &lt;a href=&quot;https://github.com/fuma-nama&quot;&gt;
                    &lt;img src=&quot;https://avatars.githubusercontent.com/u/76240755?v=4&quot; width=&quot;100;&quot; alt=&quot;fuma-nama&quot;/&gt;
                    &lt;br /&gt;
                    &lt;sub&gt;&lt;b&gt;fuma-nama&lt;/b&gt;&lt;/sub&gt;
                &lt;/a&gt;
            &lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
            &lt;td align=&quot;center&quot;&gt;
                &lt;a href=&quot;https://github.com/lc-soft&quot;&gt;
                    &lt;img src=&quot;https://avatars.githubusercontent.com/u/1730073?v=4&quot; width=&quot;100;&quot; alt=&quot;lc-soft&quot;/&gt;
                    &lt;br /&gt;
                    &lt;sub&gt;&lt;b&gt;lc-soft&lt;/b&gt;&lt;/sub&gt;
                &lt;/a&gt;
            &lt;/td&gt;
            &lt;td align=&quot;center&quot;&gt;
                &lt;a href=&quot;https://github.com/Mohib834&quot;&gt;
                    &lt;img src=&quot;https://avatars.githubusercontent.com/u/47316464?v=4&quot; width=&quot;100;&quot; alt=&quot;Mohib834&quot;/&gt;
                    &lt;br /&gt;
                    &lt;sub&gt;&lt;b&gt;Mohib834&lt;/b&gt;&lt;/sub&gt;
                &lt;/a&gt;
            &lt;/td&gt;
            &lt;td align=&quot;center&quot;&gt;
                &lt;a href=&quot;https://github.com/mcollina&quot;&gt;
                    &lt;img src=&quot;https://avatars.githubusercontent.com/u/52195?v=4&quot; width=&quot;100;&quot; alt=&quot;mcollina&quot;/&gt;
                    &lt;br /&gt;
                    &lt;sub&gt;&lt;b&gt;mcollina&lt;/b&gt;&lt;/sub&gt;
                &lt;/a&gt;
            &lt;/td&gt;
            &lt;td align=&quot;center&quot;&gt;
                &lt;a href=&quot;https://github.com/soulchild&quot;&gt;
                    &lt;img src=&quot;https://avatars.githubusercontent.com/u/59642?v=4&quot; width=&quot;100;&quot; alt=&quot;soulchild&quot;/&gt;
                    &lt;br /&gt;
                    &lt;sub&gt;&lt;b&gt;soulchild&lt;/b&gt;&lt;/sub&gt;
                &lt;/a&gt;
            &lt;/td&gt;
            &lt;td align=&quot;center&quot;&gt;
                &lt;a href=&quot;https://github.com/yshrsmz&quot;&gt;
                    &lt;img src=&quot;https://avatars.githubusercontent.com/u/654889?v=4&quot; width=&quot;100;&quot; alt=&quot;yshrsmz&quot;/&gt;
                    &lt;br /&gt;
                    &lt;sub&gt;&lt;b&gt;yshrsmz&lt;/b&gt;&lt;/sub&gt;
                &lt;/a&gt;
            &lt;/td&gt;
            &lt;td align=&quot;center&quot;&gt;
                &lt;a href=&quot;https://github.com/hex0id&quot;&gt;
                    &lt;img src=&quot;https://avatars.githubusercontent.com/u/5276261?v=4&quot; width=&quot;100;&quot; alt=&quot;hex0id&quot;/&gt;
                    &lt;br /&gt;
                    &lt;sub&gt;&lt;b&gt;hex0id&lt;/b&gt;&lt;/sub&gt;
                &lt;/a&gt;
            &lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
            &lt;td align=&quot;center&quot;&gt;
                &lt;a href=&quot;https://github.com/mpminardi&quot;&gt;
                    &lt;img src=&quot;https://avatars.githubusercontent.com/u/8587567?v=4&quot; width=&quot;100;&quot; alt=&quot;mpminardi&quot;/&gt;
                    &lt;br /&gt;
                    &lt;sub&gt;&lt;b&gt;mpminardi&lt;/b&gt;&lt;/sub&gt;
                &lt;/a&gt;
            &lt;/td&gt;
            &lt;td align=&quot;center&quot;&gt;
                &lt;a href=&quot;https://github.com/x-delfino&quot;&gt;
                    &lt;img src=&quot;https://avatars.githubusercontent.com/u/67192579?v=4&quot; width=&quot;100;&quot; alt=&quot;x-delfino&quot;/&gt;
                    &lt;br /&gt;
                    &lt;sub&gt;&lt;b&gt;x-delfino&lt;/b&gt;&lt;/sub&gt;
                &lt;/a&gt;
            &lt;/td&gt;
            &lt;td align=&quot;center&quot;&gt;
                &lt;a href=&quot;https://github.com/ykdojo&quot;&gt;
                    &lt;img src=&quot;https://avatars.githubusercontent.com/u/1811651?v=4&quot; width=&quot;100;&quot; alt=&quot;ykdojo&quot;/&gt;
                    &lt;br /&gt;
                    &lt;sub&gt;&lt;b&gt;ykdojo&lt;/b&gt;&lt;/sub&gt;
                &lt;/a&gt;
            &lt;/td&gt;
            &lt;td align=&quot;center&quot;&gt;
                &lt;a href=&quot;https://github.com/timheuer&quot;&gt;
                    &lt;img src=&quot;https://avatars.githubusercontent.com/u/4821?v=4&quot; width=&quot;100;&quot; alt=&quot;timheuer&quot;/&gt;
                    &lt;br /&gt;
                    &lt;sub&gt;&lt;b&gt;timheuer&lt;/b&gt;&lt;/sub&gt;
                &lt;/a&gt;
            &lt;/td&gt;
            &lt;td align=&quot;center&quot;&gt;
                &lt;a href=&quot;https://github.com/DemonHa&quot;&gt;
                    &lt;img src=&quot;https://avatars.githubusercontent.com/u/91160178?v=4&quot; width=&quot;100;&quot; alt=&quot;DemonHa&quot;/&gt;
                    &lt;br /&gt;
                    &lt;sub&gt;&lt;b&gt;DemonHa&lt;/b&gt;&lt;/sub&gt;
                &lt;/a&gt;
            &lt;/td&gt;
            &lt;td align=&quot;center&quot;&gt;
                &lt;a href=&quot;https://github.com/mouhannad-sh&quot;&gt;
                    &lt;img src=&quot;https://avatars.githubusercontent.com/u/18495740?v=4&quot; width=&quot;100;&quot; alt=&quot;mouhannad-sh&quot;/&gt;
                    &lt;br /&gt;
                    &lt;sub&gt;&lt;b&gt;mouhannad-sh&lt;/b&gt;&lt;/sub&gt;
                &lt;/a&gt;
            &lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
            &lt;td align=&quot;center&quot;&gt;
                &lt;a href=&quot;https://github.com/matthyk&quot;&gt;
                    &lt;img src=&quot;https://avatars.githubusercontent.com/u/53833818?v=4&quot; width=&quot;100;&quot; alt=&quot;matthyk&quot;/&gt;
                    &lt;br /&gt;
                    &lt;sub&gt;&lt;b&gt;matthyk&lt;/b&gt;&lt;/sub&gt;
                &lt;/a&gt;
            &lt;/td&gt;
            &lt;td align=&quot;center&quot;&gt;
                &lt;a href=&quot;https://github.com/mason-at-pieces&quot;&gt;
                    &lt;img src=&quot;https://avatars.githubusercontent.com/u/123421085?v=4&quot; width=&quot;100;&quot; alt=&quot;mason-at-pieces&quot;/&gt;
                    &lt;br /&gt;
                    &lt;sub&gt;&lt;b&gt;mason-at-pieces&lt;/b&gt;&lt;/sub&gt;
                &lt;/a&gt;
            &lt;/td&gt;
            &lt;td align=&quot;center&quot;&gt;
                &lt;a href=&quot;https://github.com/bgrcs&quot;&gt;
                    &lt;img src=&quot;https://avatars.githubuserconte

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[CapSoftware/Cap]]></title>
            <link>https://github.com/CapSoftware/Cap</link>
            <guid>https://github.com/CapSoftware/Cap</guid>
            <pubDate>Fri, 18 Apr 2025 00:04:51 GMT</pubDate>
            <description><![CDATA[Open source Loom alternative. Beautiful, shareable screen recordings.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/CapSoftware/Cap">CapSoftware/Cap</a></h1>
            <p>Open source Loom alternative. Beautiful, shareable screen recordings.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 7,649</p>
            <p>Forks: 435</p>
            <p>Stars today: 83 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;p align=&quot;center&quot;&gt;
   &lt;img width=&quot;150&quot; height=&quot;150&quot; src=&quot;https://github.com/CapSoftware/Cap/blob/main/apps/desktop/src-tauri/icons/Square310x310Logo.png&quot; alt=&quot;Logo&quot;&gt;
  &lt;/p&gt;
	&lt;h1 align=&quot;center&quot;&gt;&lt;b&gt;Cap&lt;/b&gt;&lt;/h1&gt;
	&lt;p align=&quot;center&quot;&gt;
		The open source Loom alternative.
    &lt;br /&gt;
    &lt;a href=&quot;https://cap.so&quot;&gt;&lt;strong&gt;Cap.so »&lt;/strong&gt;&lt;/a&gt;
    &lt;br /&gt;
    &lt;br /&gt;
    &lt;b&gt;Downloads for &lt;/b&gt;
		&lt;a href=&quot;https://cap.so/download&quot;&gt;macOS &amp; Windows&lt;/a&gt;
    &lt;br /&gt;
  &lt;/p&gt;
&lt;/p&gt;
&lt;br/&gt;

[![Open Bounties](https://img.shields.io/endpoint?url=https%3A%2F%2Fconsole.algora.io%2Fapi%2Fshields%2FCapSoftware%2Fbounties%3Fstatus%3Dopen)](https://console.algora.io/org/CapSoftware/bounties?status=open)

Cap is the open source alternative to Loom. It&#039;s a video messaging tool that allows you to record, edit and share videos in seconds.

&lt;img src=&quot;https://raw.githubusercontent.com/CapSoftware/Cap/refs/heads/main/apps/web/public/landing-cover.png&quot;/&gt;

# Cap Self Hosting

We&#039;re working on a self-hosting guide for Cap. This will include one-click deployment buttons for Vercel and Render, as well as an option to self host with Docker. Join the &lt;a href=&quot;https://discord.gg/y8gdQ3WRN3&quot;&gt;Cap Discord&lt;/a&gt; if you want to help contribute to this particular project.

# Monorepo App Architecture

We use a combination of Rust, React (Next.js), TypeScript, Tauri, Drizzle (ORM), MySQL, TailwindCSS throughout this Turborepo powered monorepo.

### Apps:

- `desktop`: A [Tauri](https://tauri.app) (Rust) app, using [SolidStart](https://start.solidjs.com) on the frontend.
- `web`: A [Next.js](https://nextjs.org) web app.

### Packages:

- `ui`: A [React](https://reactjs.org) Shared component library.
- `utils`: A [React](https://reactjs.org) Shared utility library.
- `tsconfig`: Shared `tsconfig` configurations used throughout the monorepo.
- `database`: A [React](https://reactjs.org) and [Drizzle ORM](https://orm.drizzle.team/) Shared database library.
- `config`: `eslint` configurations (includes `eslint-config-next`, `eslint-config-prettier` other configs used throughout the monorepo).

# Contributing

See [CONTRIBUTING.md](CONTRIBUTING.md) for more information. This guide is a work in progress, and is updated regularly as the app matures.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[expo/expo]]></title>
            <link>https://github.com/expo/expo</link>
            <guid>https://github.com/expo/expo</guid>
            <pubDate>Fri, 18 Apr 2025 00:04:50 GMT</pubDate>
            <description><![CDATA[An open-source framework for making universal native apps with React. Expo runs on Android, iOS, and the web.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/expo/expo">expo/expo</a></h1>
            <p>An open-source framework for making universal native apps with React. Expo runs on Android, iOS, and the web.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 39,150</p>
            <p>Forks: 6,605</p>
            <p>Stars today: 45 stars today</p>
            <h2>README</h2><pre>&lt;!-- Banner Image --&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://expo.dev/&quot;&gt;
    &lt;img alt=&quot;expo sdk&quot; height=&quot;128&quot; src=&quot;./.github/resources/banner.png&quot;&gt;
    &lt;h1 align=&quot;center&quot;&gt;Expo&lt;/h1&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
   &lt;a aria-label=&quot;SDK version&quot; href=&quot;https://www.npmjs.com/package/expo&quot; target=&quot;_blank&quot;&gt;
    &lt;img alt=&quot;Expo SDK version&quot; src=&quot;https://img.shields.io/npm/v/expo.svg?style=flat-square&amp;label=SDK&amp;labelColor=000000&amp;color=4630EB&quot; /&gt;
  &lt;/a&gt;
  &lt;a aria-label=&quot;Chat or ask a question&quot; href=&quot;https://chat.expo.dev&quot; target=&quot;_blank&quot;&gt;
    &lt;img alt=&quot;Chat or ask a question&quot; src=&quot;https://img.shields.io/discord/695411232856997968.svg?style=flat-square&amp;labelColor=000000&amp;color=4630EB&amp;logo=discord&amp;logoColor=FFFFFF&amp;label=Chat%20with%20us&quot; /&gt;
  &lt;/a&gt;
  &lt;a aria-label=&quot;Expo is free to use&quot; href=&quot;https://github.com/expo/expo/blob/main/LICENSE&quot; target=&quot;_blank&quot;&gt;
    &lt;img alt=&quot;License: MIT&quot; src=&quot;https://img.shields.io/badge/License-MIT-success.svg?style=flat-square&amp;color=33CC12&quot; target=&quot;_blank&quot; /&gt;
  &lt;/a&gt;
  &lt;a aria-label=&quot;expo downloads&quot; href=&quot;http://www.npmtrends.com/expo&quot; target=&quot;_blank&quot;&gt;
    &lt;img alt=&quot;Downloads&quot; src=&quot;https://img.shields.io/npm/dm/expo.svg?style=flat-square&amp;labelColor=gray&amp;color=33CC12&amp;label=Downloads&quot; /&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a aria-label=&quot;try expo with snack&quot; href=&quot;https://snack.expo.dev&quot;&gt;&lt;b&gt;Try Expo in the Browser&lt;/b&gt;&lt;/a&gt;
&amp;ensp;•&amp;ensp;
  &lt;a aria-label=&quot;expo documentation&quot; href=&quot;https://docs.expo.dev&quot;&gt;Read the Documentation&lt;/a&gt;
&amp;ensp;•&amp;ensp;
  &lt;a aria-label=&quot;expo documentation&quot; href=&quot;https://expo.dev/blog&quot;&gt;Learn more on our blog&lt;/a&gt;
&amp;ensp;•&amp;ensp;
  &lt;a aria-label=&quot;expo documentation&quot; href=&quot;https://expo.canny.io/feature-requests&quot;&gt;Request a feature&lt;/a&gt;
&lt;/p&gt;

&lt;h6 align=&quot;center&quot;&gt;Follow us on&lt;/h6&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a aria-label=&quot;Follow @expo on X&quot; href=&quot;https://x.com/intent/follow?screen_name=expo&quot; target=&quot;_blank&quot;&gt;
    &lt;img alt=&quot;Expo on X&quot; src=&quot;https://img.shields.io/badge/X-000000?style=for-the-badge&amp;logo=x&amp;logoColor=white&quot; target=&quot;_blank&quot; /&gt;
  &lt;/a&gt;&amp;nbsp;
  &lt;a aria-label=&quot;Follow @expo on GitHub&quot; href=&quot;https://github.com/expo&quot; target=&quot;_blank&quot;&gt;
    &lt;img alt=&quot;Expo on GitHub&quot; src=&quot;https://img.shields.io/badge/GitHub-222222?style=for-the-badge&amp;logo=github&amp;logoColor=white&quot; target=&quot;_blank&quot; /&gt;
  &lt;/a&gt;&amp;nbsp;
  &lt;a aria-label=&quot;Follow @expo on Reddit&quot; href=&quot;https://www.reddit.com/r/expo/&quot; target=&quot;_blank&quot;&gt;
    &lt;img alt=&quot;Expo on Reddit&quot; src=&quot;https://img.shields.io/badge/Reddit-FF4500?style=for-the-badge&amp;logo=reddit&amp;logoColor=white&quot; target=&quot;_blank&quot; /&gt;
  &lt;/a&gt;&amp;nbsp;
  &lt;a aria-label=&quot;Follow @expo on Bluesky&quot; href=&quot;https://bsky.app/profile/expo.dev&quot; target=&quot;_blank&quot;&gt;
    &lt;img alt=&quot;Expo on LinkedIn&quot; src=&quot;https://img.shields.io/badge/Bluesky-1DA1F2?style=for-the-badge&amp;logo=bluesky&amp;logoColor=white&quot; target=&quot;_blank&quot; /&gt;
  &lt;/a&gt;&amp;nbsp;
  &lt;a aria-label=&quot;Follow @expo on LinkedIn&quot; href=&quot;https://www.linkedin.com/company/expo-dev&quot; target=&quot;_blank&quot;&gt;
    &lt;img alt=&quot;Expo on LinkedIn&quot; src=&quot;https://img.shields.io/badge/LinkedIn-0077B5?style=for-the-badge&amp;logo=linkedin&amp;logoColor=white&quot; target=&quot;_blank&quot; /&gt;
  &lt;/a&gt;
&lt;/p&gt;

## Introduction

Expo is an open-source platform for making universal native apps that run on Android, iOS, and the web. It includes a universal runtime and libraries that let you build native apps by writing React and JavaScript.

This repository includes the Expo SDK, Modules API, Go app, CLI, Router, documentation, and various other supporting tools. [Expo Application Services (EAS)](https://expo.dev/eas) is a platform of hosted services that are deeply integrated with Expo open source tools. EAS helps you build, ship, and iterate on your app as an individual or a team.

Read the [Expo Community Guidelines](https://expo.dev/guidelines) before interacting in the repository. Thank you for helping keep the Expo community open and welcoming!

## Table of contents

- [📚 Documentation](#-documentation)
- [🗺 Project Layout](#-project-layout)
- [🏅 Badges](#-badges)
- [👏 Contributing](#-contributing)
- [❓ FAQ](#-faq)
- [💙 The Team](#-the-team)
- [License](#license)

## 📚 Documentation

&lt;p&gt;Learn about building and deploying universal apps &lt;a aria-label=&quot;expo documentation&quot; href=&quot;https://docs.expo.dev&quot;&gt;in our official docs!&lt;/a&gt;&lt;/p&gt;

- [Getting Started](https://docs.expo.dev/)
- [API Reference](https://docs.expo.dev/versions/latest/)
- [Using Custom Native Modules](https://docs.expo.dev/workflow/customizing/)

## 🗺 Project Layout

- [`packages`](/packages) All the source code for Expo modules, if you want to edit a library or just see how it works this is where you&#039;ll find it.
- [`apps`](/apps) This is where you can find Expo projects which are linked to the development modules. You&#039;ll do most of your testing in here.
- [`apps/expo-go`](/apps/expo-go) This is where you can find the source code for Expo Go.
- [`apps/expo-go/ios/Exponent.xcworkspace`](/apps/expo-go/ios) is the Xcode workspace. When developing iOS, always open this instead of `Exponent.xcodeproj` because the workspace also loads the CocoaPods dependencies.
- [`docs`](/docs) The source code for **https://docs.expo.dev**
- [`templates`](/templates) The template projects you get when you run `npx create-expo-app`
- [`react-native-lab`](/react-native-lab) This is our fork of `react-native` used to build Expo Go.
- [`guides`](/guides) In-depth tutorials for advanced topics like contributing to the client.
- [`tools`](/tools) contain build and configuration tools.
- [`template-files`](/template-files) contains templates for files that require private keys. They are populated using the keys in `template-files/keys.json`.
- [`template-files/ios/dependencies.json`](/template-files/ios/dependencies.json) specifies the CocoaPods dependencies of the app.

## 🏅 Badges

Let everyone know your app can be run instantly in the _Expo Go_ app!
&lt;br/&gt;

[![runs with Expo Go](https://img.shields.io/badge/Runs%20with%20Expo%20Go-000.svg?style=flat-square&amp;logo=EXPO&amp;labelColor=f3f3f3&amp;logoColor=000)](https://expo.dev/client)

[![runs with Expo Go](https://img.shields.io/badge/Runs%20with%20Expo%20Go-4630EB.svg?style=flat-square&amp;logo=EXPO&amp;labelColor=f3f3f3&amp;logoColor=000)](https://expo.dev/client)

```md
[![runs with Expo Go](https://img.shields.io/badge/Runs%20with%20Expo%20Go-000.svg?style=flat-square&amp;logo=EXPO&amp;labelColor=f3f3f3&amp;logoColor=000)](https://expo.dev/client)

[![runs with Expo Go](https://img.shields.io/badge/Runs%20with%20Expo%20Go-4630EB.svg?style=flat-square&amp;logo=EXPO&amp;labelColor=f3f3f3&amp;logoColor=000)](https://expo.dev/client)
```

## 👏 Contributing

If you like Expo and want to help make it better then check out our [contributing guide](/CONTRIBUTING.md)! Check out the [CLI package](https://github.com/expo/expo/tree/main/packages/%40expo/cli) to work on the Expo CLI.

## ❓ FAQ

If you have questions about Expo and want answers, then check out our [Frequently Asked Questions](https://docs.expo.dev/faq/)!

If you still have questions you can ask them on our [Discord and Forums](https://chat.expo.dev) or X [@expo](https://x.com/expo).

## 💙 The Team

Curious about who makes Expo? Here are our [team members](https://expo.dev/about)!

## License

The Expo source code is made available under the [MIT license](LICENSE). Some of the dependencies are licensed differently, with the BSD license, for example.

&lt;img alt=&quot;Star the Expo repo on GitHub to support the project&quot; src=&quot;https://user-images.githubusercontent.com/9664363/185428788-d762fd5d-97b3-4f59-8db7-f72405be9677.gif&quot; width=&quot;50%&quot;&gt;
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[web-infra-dev/midscene]]></title>
            <link>https://github.com/web-infra-dev/midscene</link>
            <guid>https://github.com/web-infra-dev/midscene</guid>
            <pubDate>Fri, 18 Apr 2025 00:04:49 GMT</pubDate>
            <description><![CDATA[Let AI be your browser operator.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/web-infra-dev/midscene">web-infra-dev/midscene</a></h1>
            <p>Let AI be your browser operator.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 8,015</p>
            <p>Forks: 455</p>
            <p>Stars today: 37 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;img alt=&quot;Midscene.js&quot;  width=&quot;260&quot; src=&quot;https://github.com/user-attachments/assets/f60de3c1-dd6f-4213-97a1-85bf7c6e79e4&quot;&gt;
&lt;/p&gt;

&lt;h1 align=&quot;center&quot;&gt;Midscene.js&lt;/h1&gt;
&lt;div align=&quot;center&quot;&gt;

English | [简体中文](./README.zh.md)

&lt;/div&gt;

&lt;p align=&quot;center&quot;&gt;
  Let AI be your browser operator.
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.npmjs.com/package/@midscene/web&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/@midscene/web?style=flat-square&amp;color=00a8f0&quot; alt=&quot;npm version&quot; /&gt;&lt;/a&gt;
  &lt;a href=&quot;https://huggingface.co/bytedance-research/UI-TARS-7B-SFT&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%A4%97-UI%20TARS%20Models-yellow&quot; alt=&quot;huagging face model&quot; /&gt;&lt;/a&gt;
  &lt;a href=&quot;https://npm-compare.com/@midscene/web/#timeRange=THREE_YEARS&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/@midscene/web.svg?style=flat-square&amp;color=00a8f0&quot; alt=&quot;downloads&quot; /&gt;&lt;/a&gt;
  &lt;img src=&quot;https://img.shields.io/badge/License-MIT-blue.svg?style=flat-square&amp;color=00a8f0&quot; alt=&quot;License&quot; /&gt;
  &lt;a href=&quot;https://discord.gg/2JyBHxszE4&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/1328277792730779648?style=flat-square&amp;color=7289DA&amp;label=Discord&amp;logo=discord&amp;logoColor=white&quot; alt=&quot;discord&quot; /&gt;&lt;/a&gt;
  &lt;a href=&quot;https://x.com/midscene_ai&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/midscene_ai?style=flat-square&quot; alt=&quot;twitter&quot; /&gt;&lt;/a&gt;
&lt;/p&gt;

Midscene.js lets AI be your browser operator 🤖.Just describe what you want to do in natural language, and it will help you operate web pages, validate content, and extract data. Whether you want a quick experience or deep development, you can get started easily.


## Showcases

The following recorded example video is based on the [UI-TARS 7B SFT](https://huggingface.co/bytedance-research/UI-TARS-7B-SFT) model, and the video has not been sped up at all~

| Instruction  | Video |
| :---:  | :---: |
| Post a Tweet      |    &lt;video src=&quot;https://github.com/user-attachments/assets/bb3d695a-fbff-4af1-b6cc-5e967c07ccee&quot; height=&quot;300&quot; /&gt;    |
| Use JS code to drive task orchestration, collect information about Jay Chou&#039;s concert, and write it into Google Docs   | &lt;video src=&quot;https://github.com/user-attachments/assets/75474138-f51f-4c54-b3cf-46d61d059999&quot; height=&quot;300&quot; /&gt;        |


## 📢 New open-source model choice - UI-TARS and Qwen2.5-VL

Besides the default model *GPT-4o*, we have added two new recommended open-source models to Midscene.js: *UI-TARS* and *Qwen2.5-VL*. (Yes, Open Source !) They are dedicated models for image recognition and UI automation, which are known for performing well in UI automation scenarios. Read more about it in [Choose a model](https://midscenejs.com/choose-a-model).

## 💡 Features
- **Natural Language Interaction 👆**: Just describe your goals and steps, and Midscene will plan and operate the user interface for you.
- **Chrome Extension Experience 🖥️**: Start experiencing immediately through the Chrome extension, no coding required.
- **Puppeteer/Playwright Integration 🔧**: Supports Puppeteer and Playwright integration, allowing you to combine AI capabilities with these powerful automation tools for easy automation.
- **Support Open-Source Models 🤖**: Supports private deployment of [`UI-TARS`](https://github.com/bytedance/ui-tars) and [`Qwen2.5-VL`](https://github.com/QwenLM/Qwen2.5-VL), which outperforms closed-source models like GPT-4o and Claude in UI automation scenarios while better protecting data security.
- **Support General Models 🌟**: Supports general large models like GPT-4o and Claude, adapting to various scenario needs.
- **Visual Reports for Debugging 🎞️**: Through our test reports and Playground, you can easily understand, replay and debug the entire process.
- **Support Caching 🔄**: The first time you execute a task through AI, it will be cached, and subsequent executions of the same task will significantly improve execution efficiency.
- **Completely Open Source 🔥**: Experience a whole new automation development experience, enjoy!
- **Understand UI, JSON Format Responses 🔍**: You can specify data format requirements and receive responses in JSON format.
- **Intuitive Assertions 🤔**: Express your assertions in natural language, and AI will understand and process them.

## ✨ Model Choices

- You can use general-purpose LLMs like `gpt-4o`, it works well for most cases. And also, `gemini-1.5-pro`, `qwen-vl-max-latest` are supported.
- You can also use [`UI-TARS`](https://github.com/bytedance/ui-tars) model, which is an **open-source model** dedicated for UI automation. You can deploy it on your own server, and it will dramatically improve the performance and data privacy. 
- Read more about [Choose a model](https://midscenejs.com/choose-a-model)

## 👀 Comparing to ...

There are so many UI automation tools out there, and each one seems to be all-powerful. What&#039;s special about Midscene.js?

* Debugging Experience: You will soon find that debugging and maintaining automation scripts is the real challenge point. No matter how magic the demo is, you still need to debug the process to make it stable over time. Midscene.js offers a visualized report file, a built-in playground, and a Chrome Extension to debug the entire process. This is what most developers really need. And we&#039;re continuing to work on improving the debugging experience.

* Open Source, Free, Deploy as you want: Midscene.js is an open-source project. It&#039;s decoupled from any cloud service and model provider, you can choose either public or private deployment. There is always a suitable plan for your business.

* Integrate with Javascript: You can always bet on Javascript 😎

## 📄 Resources 

* [Home Page: https://midscenejs.com](https://midscenejs.com/)
* [Quick Experience By Chrome Extension](https://midscenejs.com/quick-experience.html), this is where you should get started 
* Integration
  * [Automate with Scripts in YAML](https://midscenejs.com/automate-with-scripts-in-yaml.html), use this if you prefer to write YAML file instead of code
  * [Bridge Mode by Chrome Extension](https://midscenejs.com/bridge-mode-by-chrome-extension.html), use this to control the desktop Chrome by scripts
  * [Integrate with Puppeteer](https://midscenejs.com/integrate-with-puppeteer.html)
  * [Integrate with Playwright](https://midscenejs.com/integrate-with-playwright.html)
* [API Reference](https://midscenejs.com/api.html)
* [Choose a model](https://midscenejs.com/choose-a-model.html)
* [Config Model and Provider](https://midscenejs.com/model-provider.html)

## 🤝 Community

* [Discord](https://discord.gg/2JyBHxszE4)
* [Follow us on X](https://x.com/midscene_ai)
* [Lark Group](https://applink.larkoffice.com/client/chat/chatter/add_by_link?link_token=291q2b25-e913-411a-8c51-191e59aab14d)


## Citation

If you use Midscene.js in your research or project, please cite:

```bibtex
@software{Midscene.js,
  author = {Zhou, Xiao and Yu, Tao},
  title = {Midscene.js: Let AI be your browser operator.},
  year = {2025},
  publisher = {GitHub},
  url = {https://github.com/web-infra-dev/midscene}
}
```


## 📝 License

Midscene.js is [MIT licensed](https://github.com/web-infra-dev/midscene/blob/main/LICENSE).

---

&lt;div align=&quot;center&quot;&gt;
  If this project helps you or inspires you, please give us a ⭐️
&lt;/div&gt;
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[nocodb/nocodb]]></title>
            <link>https://github.com/nocodb/nocodb</link>
            <guid>https://github.com/nocodb/nocodb</guid>
            <pubDate>Fri, 18 Apr 2025 00:04:48 GMT</pubDate>
            <description><![CDATA[🔥 🔥 🔥 Open Source Airtable Alternative]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/nocodb/nocodb">nocodb/nocodb</a></h1>
            <p>🔥 🔥 🔥 Open Source Airtable Alternative</p>
            <p>Language: TypeScript</p>
            <p>Stars: 53,796</p>
            <p>Forks: 3,772</p>
            <p>Stars today: 24 stars today</p>
            <h2>README</h2><pre>&lt;h1 align=&quot;center&quot; style=&quot;border-bottom: none&quot;&gt;
    &lt;div&gt;
        &lt;a style=&quot;color:#36f&quot; href=&quot;https://www.nocodb.com&quot;&gt;
            &lt;img src=&quot;/packages/nc-gui/assets/img/icons/512x512.png&quot; width=&quot;80&quot; /&gt;
            &lt;br&gt;
            NocoDB
        &lt;/a&gt;
    &lt;/div&gt;
    The Open Source Airtable Alternative &lt;br&gt;
&lt;/h1&gt;

&lt;p align=&quot;center&quot;&gt;
NocoDB is the fastest and easiest way to build databases online.
&lt;/p&gt;


&lt;p align=&quot;center&quot;&gt;
    &lt;a href=&quot;http://www.nocodb.com&quot;&gt;&lt;b&gt;Website&lt;/b&gt;&lt;/a&gt; •
    &lt;a href=&quot;https://discord.gg/5RgZmkW&quot;&gt;&lt;b&gt;Discord&lt;/b&gt;&lt;/a&gt; •
    &lt;a href=&quot;https://community.nocodb.com/&quot;&gt;&lt;b&gt;Community&lt;/b&gt;&lt;/a&gt; •
    &lt;a href=&quot;https://twitter.com/nocodb&quot;&gt;&lt;b&gt;Twitter&lt;/b&gt;&lt;/a&gt; •
    &lt;a href=&quot;https://www.reddit.com/r/NocoDB/&quot;&gt;&lt;b&gt;Reddit&lt;/b&gt;&lt;/a&gt; •
    &lt;a href=&quot;https://docs.nocodb.com/&quot;&gt;&lt;b&gt;Documentation&lt;/b&gt;&lt;/a&gt;
&lt;/p&gt;

![video avi](https://github.com/nocodb/nocodb/assets/86527202/e2fad786-f211-4dcb-9bd3-aaece83a6783)

&lt;div align=&quot;center&quot;&gt;

[&lt;img height=&quot;38&quot; src=&quot;https://user-images.githubusercontent.com/61551451/135263434-75fe793d-42af-49e4-b964-d70920e41655.png&quot;&gt;](markdown/readme/languages/chinese.md)
[&lt;img height=&quot;38&quot; src=&quot;https://user-images.githubusercontent.com/61551451/135263474-787d71e7-3a87-42a8-92a8-be1d1f55413d.png&quot;&gt;](markdown/readme/languages/french.md)
[&lt;img height=&quot;38&quot; src=&quot;https://user-images.githubusercontent.com/61551451/135263531-fae58600-6616-4b43-95a0-5891019dd35d.png&quot;&gt;](markdown/readme/languages/german.md)
[&lt;img height=&quot;38&quot; src=&quot;https://user-images.githubusercontent.com/61551451/135263589-3dbeda9a-0d2e-4bbd-b1fc-691404bb74fb.png&quot;&gt;](markdown/readme/languages/spanish.md)
[&lt;img height=&quot;38&quot; src=&quot;https://user-images.githubusercontent.com/61551451/135263669-f567196a-d4e8-4143-a80a-93d3be32ba90.png&quot;&gt;](markdown/readme/languages/portuguese.md)
[&lt;img height=&quot;38&quot; src=&quot;https://user-images.githubusercontent.com/61551451/135263707-ba4e04a4-268a-4626-91b8-048e572fd9f6.png&quot;&gt;](markdown/readme/languages/italian.md)
[&lt;img height=&quot;38&quot; src=&quot;https://user-images.githubusercontent.com/61551451/135263770-38e3e79d-11d4-472e-ac27-ae0f17cf65c4.png&quot;&gt;](markdown/readme/languages/japanese.md)
[&lt;img height=&quot;38&quot; src=&quot;https://user-images.githubusercontent.com/61551451/135263822-28fce9de-915a-44dc-962d-7a61d340e91d.png&quot;&gt;](markdown/readme/languages/korean.md)
[&lt;img height=&quot;38&quot; src=&quot;https://user-images.githubusercontent.com/61551451/135263888-151d4ad1-7084-4943-97c9-56f28cd40b80.png&quot;&gt;](markdown/readme/languages/russian.md)

&lt;/div&gt;

&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;markdown/readme/languages/README.md&quot;&gt;&lt;b&gt;See other languages »&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;

&lt;img src=&quot;https://static.scarf.sh/a.png?x-pxid=c12a77cc-855e-4602-8a0f-614b2d0da56a&quot; /&gt;

# Join Our Community

&lt;a href=&quot;https://discord.gg/5RgZmkW&quot; target=&quot;_blank&quot;&gt;
&lt;img src=&quot;https://discordapp.com/api/guilds/661905455894888490/widget.png?style=banner3&quot; alt=&quot;&quot;&gt;
&lt;/a&gt;

[![Stargazers repo roster for @nocodb/nocodb](http://reporoster.com/stars/nocodb/nocodb)](https://github.com/nocodb/nocodb/stargazers)

# Installation

## Docker with SQLite

```bash 
docker run -d \
  --name noco \
  -v &quot;$(pwd)&quot;/nocodb:/usr/app/data/ \
  -p 8080:8080 \
  nocodb/nocodb:latest
  ```

## Docker with PG
```bash
docker run -d \
  --name noco \
  -v &quot;$(pwd)&quot;/nocodb:/usr/app/data/ \
  -p 8080:8080 \
  -e NC_DB=&quot;pg://host.docker.internal:5432?u=root&amp;p=password&amp;d=d1&quot; \
  -e NC_AUTH_JWT_SECRET=&quot;569a1821-0a93-45e8-87ab-eb857f20a010&quot; \
  nocodb/nocodb:latest
```

## Nix

```
nix run github:nocodb/nocodb
```

## NixOS
To use NocoDB as a NixOS module, a flake.nix would be as follows:

```
{
  description = &quot;Bane&#039;s NixOS configuration&quot;;

  inputs = {
    nixpkgs.url = &quot;github:nixos/nixpkgs/nixos-unstable&quot;;
    nocodb.url = &quot;github:nocodb/nocodb&quot;;
  };

  outputs = inputs@{ nixpkgs, nocodb, ... }: {
    nixosConfigurations = {
      hostname = nixpkgs.lib.nixosSystem {
        system = &quot;x86_64-linux&quot;;
        modules = [
          ./configuration.nix
          nocodb.nixosModules.nocodb

          {
            services.nocodb.enable = true;
          }
        ];
      };
    };
  };
}
```

## Auto-upstall
Auto-upstall is a single command that sets up NocoDB on a server for production usage.
Behind the scenes it auto-generates docker-compose for you.

```bash
bash &lt;(curl -sSL http://install.nocodb.com/noco.sh) &lt;(mktemp)
```

Auto-upstall does the following: 🕊
- 🐳 Automatically installs all pre-requisites like docker, docker-compose
- 🚀 Automatically installs NocoDB with PostgreSQL, Redis, Minio, Traefik gateway using Docker Compose. 🐘 🗄️ 🌐
- 🔄 Automatically upgrades NocoDB to the latest version when you run the command again.
- 🔒 Automatically setups SSL and also renews it. Needs a domain or subdomain as input while installation.
&gt; install.nocodb.com/noco.sh script can be found [here in our github](https://raw.githubusercontent.com/nocodb/nocodb/develop/docker-compose/1_Auto_Upstall/noco.sh)


## Other Methods

&gt; Binaries are only for quick testing locally.

| Install Method                | Command to install                                                                                                                                                                                                                                                                                                                                                         |
|-------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| 🍏 MacOS arm64 &lt;br&gt;(Binary)   | `curl http://get.nocodb.com/macos-arm64 -o nocodb -L &amp;&amp; chmod +x nocodb &amp;&amp; ./nocodb`                                                                                                                                                                                                                                                                                       |
| 🍏 MacOS x64 &lt;br&gt;(Binary)     | `curl http://get.nocodb.com/macos-x64 -o nocodb -L &amp;&amp; chmod +x nocodb &amp;&amp; ./nocodb`                                                                                                                                                                                                                                                                                         |
| 🐧 Linux arm64 &lt;br&gt;(Binary)   | `curl http://get.nocodb.com/linux-arm64 -o nocodb -L &amp;&amp; chmod +x nocodb &amp;&amp; ./nocodb`                                                                                                                                                                                                                                                                                       |
| 🐧 Linux x64 &lt;br&gt;(Binary)     | `curl http://get.nocodb.com/linux-x64 -o nocodb -L &amp;&amp; chmod +x nocodb &amp;&amp; ./nocodb`                                                                                                                                                                                                                                                                                         |
| 🪟 Windows arm64 &lt;br&gt;(Binary) | `iwr http://get.nocodb.com/win-arm64.exe -OutFile Noco-win-arm64.exe &amp;&amp; .\Noco-win-arm64.exe`                                                                                                                                                                                                                                                                              |
| 🪟 Windows x64 &lt;br&gt;(Binary)   | `iwr http://get.nocodb.com/win-x64.exe -OutFile Noco-win-x64.exe &amp;&amp; .\Noco-win-x64.exe`                                                                                                                                                                                                                                                                                    |


&gt; When running locally access nocodb by visiting: [http://localhost:8080/dashboard](http://localhost:8080/dashboard)

For more installation methods, please refer to [our docs](https://docs.nocodb.com/category/installation)

# Screenshots
![2](https://github.com/nocodb/nocodb/assets/86527202/a127c05e-2121-4af2-a342-128e0e2d0291)
![3](https://github.com/nocodb/nocodb/assets/86527202/674da952-8a06-4848-a0e8-a7b02d5f5c88)
![4](https://github.com/nocodb/nocodb/assets/86527202/cbc5152a-9caf-4f77-a8f7-92a9d06d025b)
![5](https://github.com/nocodb/nocodb/assets/86527202/dc75dfdc-c486-4f5a-a853-2a8f9e6b569a)

![5](https://user-images.githubusercontent.com/35857179/194844886-a17006e0-979d-493f-83c4-0e72f5a9b716.png)
![7](https://github.com/nocodb/nocodb/assets/86527202/be64e619-7295-43e2-aa95-cace4462b17f)
![8](https://github.com/nocodb/nocodb/assets/86527202/4538bf5a-371f-4ec1-a867-8197e5824286)

![8](https://user-images.githubusercontent.com/35857179/194844893-82d5e21b-ae61-41bd-9990-31ad659bf490.png)
![9](https://user-images.githubusercontent.com/35857179/194844897-cfd79946-e413-4c97-b16d-eb4d7678bb79.png)
![10](https://user-images.githubusercontent.com/35857179/194844902-c0122570-0dd5-41cf-a26f-6f8d71fefc99.png)
![11](https://user-images.githubusercontent.com/35857179/194844903-c1e47f40-e782-4f5d-8dce-6449cc70b181.png)
![12](https://user-images.githubusercontent.com/35857179/194844907-09277d3e-cbbf-465c-9165-6afc4161e279.png)

# Features

### Rich Spreadsheet Interface

- ⚡ &amp;nbsp;Basic Operations: Create, Read, Update and Delete Tables, Columns, and Rows
- ⚡ &amp;nbsp;Fields Operations: Sort, Filter, Group, Hide / Unhide Columns
- ⚡ &amp;nbsp;Multiple Views Types: Grid (By default), Gallery, Form, Kanban and Calendar View
- ⚡ &amp;nbsp;View Permissions Types: Collaborative Views, &amp; Locked Views
- ⚡ &amp;nbsp;Share Bases / Views: either Public or Private (with Password Protected)
- ⚡ &amp;nbsp;Variant Cell Types: ID, Links, Lookup, Rollup, SingleLineText, Attachment, Currency, Formula, User, etc
- ⚡ &amp;nbsp;Access Control with Roles: Fine-grained Access Control at different levels
- ⚡ &amp;nbsp;and more ...

### App Store for Workflow Automations

We provide different integrations in three main categories. See &lt;a href=&quot;https://docs.nocodb.com/account-settings/oss-specific-details/#app-store&quot; target=&quot;_blank&quot;&gt;App Store&lt;/a&gt; for details.

- ⚡ &amp;nbsp;Chat: Slack, Discord, Mattermost, and etc
- ⚡ &amp;nbsp;Email: AWS SES, SMTP, MailerSend, and etc
- ⚡ &amp;nbsp;Storage: AWS S3, Google Cloud Storage, Minio, and etc

### Programmatic Access

We provide the following ways to let users programmatically invoke actions. You can use a token (either JWT or Social Auth) to sign your requests for authorization to NocoDB.

- ⚡ &amp;nbsp;REST APIs
- ⚡ &amp;nbsp;NocoDB SDK

# Contributing

Please refer to [Contribution Guide](https://github.com/nocodb/nocodb/blob/master/.github/CONTRIBUTING.md).

# Why are we building this?

Most internet businesses equip themselves with either spreadsheet or a database to solve their business needs. Spreadsheets are used by Billion+ humans collaboratively every single day. However, we are way off working at similar speeds on databases which are way more powerful tools when it comes to computing. Attempts to solve this with SaaS offerings have meant horrible access controls, vendor lock-in, data lock-in, abrupt price changes &amp; most importantly a glass ceiling on what&#039;s possible in the future.

# Our Mission

Our mission is to provide the most powerful no-code interface for databases that is open source to every single internet business in the world. This would not only democratise access to a powerful computing tool but also bring forth a billion+ people who will have radical tinkering-and-building abilities on the internet.

# License

&lt;p&gt;
This project is licensed under &lt;a href=&quot;./LICENSE&quot;&gt;AGPLv3&lt;/a&gt;.
&lt;/p&gt;

# Contributors

Thank you for your contributions! We appreciate all the contributions from the community.

&lt;a href=&quot;https://github.com/nocodb/nocodb/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=nocodb/nocodb&quot; /&gt;
&lt;/a&gt;
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[heroui-inc/heroui]]></title>
            <link>https://github.com/heroui-inc/heroui</link>
            <guid>https://github.com/heroui-inc/heroui</guid>
            <pubDate>Fri, 18 Apr 2025 00:04:47 GMT</pubDate>
            <description><![CDATA[🚀 Beautiful, fast and modern React UI library. (Previously NextUI)]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/heroui-inc/heroui">heroui-inc/heroui</a></h1>
            <p>🚀 Beautiful, fast and modern React UI library. (Previously NextUI)</p>
            <p>Language: TypeScript</p>
            <p>Stars: 23,918</p>
            <p>Forks: 1,734</p>
            <p>Stars today: 17 stars today</p>
            <h2>README</h2><pre>packages/core/react/README.md</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[Expensify/App]]></title>
            <link>https://github.com/Expensify/App</link>
            <guid>https://github.com/Expensify/App</guid>
            <pubDate>Fri, 18 Apr 2025 00:04:46 GMT</pubDate>
            <description><![CDATA[Welcome to New Expensify: a complete re-imagination of financial collaboration, centered around chat. Help us build the next generation of Expensify by sharing feedback and contributing to the code.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/Expensify/App">Expensify/App</a></h1>
            <p>Welcome to New Expensify: a complete re-imagination of financial collaboration, centered around chat. Help us build the next generation of Expensify by sharing feedback and contributing to the code.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 4,164</p>
            <p>Forks: 3,133</p>
            <p>Stars today: 6 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://new.expensify.com&quot;&gt;
        &lt;img src=&quot;https://raw.githubusercontent.com/Expensify/App/main/web/favicon.png&quot; width=&quot;64&quot; height=&quot;64&quot; alt=&quot;New Expensify Icon&quot;&gt;
    &lt;/a&gt;
    &lt;h1&gt;
        &lt;a href=&quot;https://new.expensify.com&quot;&gt;
            New Expensify
        &lt;/a&gt;
    &lt;/h1&gt;
&lt;/div&gt;

#### Table of Contents
* [Local Development](#local-development)
* [Testing on browsers in simulators and emulators](#testing-on-browsers-in-simulators-and-emulators)
* [Running The Tests](#running-the-tests)
* [Debugging](#debugging)
* [App Structure and Conventions](#app-structure-and-conventions)
* [HybridApp](#HybridApp)
* [Philosophy](#Philosophy)
* [Security](#Security)
* [Internationalization](#Internationalization)
* [Deploying](#deploying)

#### Additional Reading
* [API Details](contributingGuides/API.md)
* [Offline First](contributingGuides/OFFLINE_UX.md)
* [Contributing to Expensify](contributingGuides/CONTRIBUTING.md)
* [Expensify Code of Conduct](CODE_OF_CONDUCT.md)
* [Contributor License Agreement](CLA.md)
* [React StrictMode](contributingGuides/STRICT_MODE.md)
* [Left Hand Navigation(LHN)](contributingGuides/LEFT_HAND_NAVIGATION.md)
* [HybridApp - additional info &amp; troubleshooting](contributingGuides/HYBRID_APP.md)

----

# Local development
These instructions should get you set up ready to work on New Expensify 🙌

## Getting Started
1. Install `nvm` then `node` &amp; `npm`: `brew install nvm &amp;&amp; nvm install`
2. Install `watchman`: `brew install watchman`
3. Install dependencies: `npm install`
4. Install `mkcert`: `brew install mkcert` followed by `npm run setup-https`. If you are not using macOS, follow the instructions [here](https://github.com/FiloSottile/mkcert?tab=readme-ov-file#installation).
5. Create a host entry in your local hosts file, `/etc/hosts` for dev.new.expensify.com pointing to localhost:
```
127.0.0.1 dev.new.expensify.com
```

You can use any IDE or code editing tool for developing on any platform. Use your favorite!

## Recommended `node` setup
In order to have more consistent builds, we use a strict `node` and `npm` version as defined in the `package.json` `engines` field and `.nvmrc` file. `npm install` will fail if you do not use the version defined, so it is recommended to install `node` via `nvm` for easy node version management. Automatic `node` version switching can be installed for [`zsh`](https://github.com/nvm-sh/nvm#zsh) or [`bash`](https://github.com/nvm-sh/nvm#bash) using `nvm`.

## Configuring HTTPS
The webpack development server now uses https. If you&#039;re using a mac, you can simply run `npm run setup-https`.

If you&#039;re using another operating system, you will need to ensure `mkcert` is installed, and then follow the instructions in the repository to generate certificates valid for `dev.new.expensify.com` and `localhost`. The certificate should be named `certificate.pem` and the key should be named `key.pem`. They should be placed in `config/webpack`.

## Running the web app 🕸
* To run the **development web app**: `npm run web`
* Changes applied to Javascript will be applied automatically via WebPack as configured in `webpack.dev.ts`

## Running the iOS app 📱
For an M1 Mac, read this [SO](https://stackoverflow.com/questions/64901180/how-to-run-cocoapods-on-apple-silicon-m1) for installing cocoapods.

* If you haven&#039;t already, install Xcode tools and make sure to install the optional &quot;iOS Platform&quot; package as well. This installation may take awhile.
    * After installation, check in System Settings that there&#039;s no update for Xcode. Otherwise, you may encounter issues later that don&#039;t explain that you solve them by updating Xcode.
* Install project gems, including cocoapods, using bundler to ensure everyone uses the same versions. In the project root, run: `bundle install`
    * If you get the error `Could not find &#039;bundler&#039;`, install the bundler gem first: `gem install bundler` and try again.
    * If you are using MacOS and get the error `Gem::FilePermissionError` when trying to install the bundler gem, you&#039;re likely using system Ruby, which requires administrator permission to modify. To get around this, install another version of Ruby with a version manager like [rbenv](https://github.com/rbenv/rbenv#installation).
* Before installing iOS dependencies, you need to obtain a token from Mapbox to download their SDKs. Please run `npm run configure-mapbox` and follow the instructions.
    * For help with MapBox token, you can see [this Slack thread](https://expensify.slack.com/archives/C01GTK53T8Q/p1692740856745279?thread_ts=1692322511.804599&amp;cid=C01GTK53T8Q)
* To install the iOS dependencies, run: `npm install &amp;&amp; npm run pod-install`
* If you are an Expensify employee and want to point the emulator to your local VM, follow [this](https://stackoverflow.com/c/expensify/questions/7699)
* To run a on a **Development Simulator**: `npm run ios`
* Changes applied to Javascript will be applied automatically, any changes to native code will require a recompile

If you want to run the app on an actual physical iOS device, please follow the instructions [here](https://github.com/Expensify/App/blob/main/contributingGuides/HOW_TO_BUILD_APP_ON_PHYSICAL_IOS_DEVICE.md).

## Running the Android app 🤖
* Before installing Android dependencies, you need to obtain a token from Mapbox to download their SDKs. Please run `npm run configure-mapbox` and follow the instructions. If you already did this step for iOS, there is no need to repeat this step.
* Go through the official React-Native instructions on [this page](https://reactnative.dev/docs/environment-setup?guide=native&amp;platform=android) to start running the app on android.
* If you are an Expensify employee and want to point the emulator to your local VM, follow [this](https://stackoverflow.com/c/expensify/questions/7699)
* To run a on a **Development Emulator**: `npm run android`
* Changes applied to Javascript will be applied automatically, any changes to native code will require a recompile

## Running the MacOS desktop app 🖥
* To run the **Development app**, run: `npm run desktop`, this will start a new Electron process running on your MacOS desktop in the `dist/Mac` folder.

## Receiving Notifications
To receive notifications on development build of the app while hitting the Staging or Production API, you need to use the production airship config.
### Android
1. Copy the [production config](https://github.com/Expensify/App/blob/d7c1256f952c0020344d809ee7299b49a4c70db2/android/app/src/main/assets/airshipconfig.properties#L1-L7) to the [development config](https://github.com/Expensify/App/blob/d7c1256f952c0020344d809ee7299b49a4c70db2/android/app/src/development/assets/airshipconfig.properties#L1-L8).
2. Rebuild the app.

### iOS
1. Replace the [development key and secret](https://github.com/Expensify/App/blob/d7c1256f952c0020344d809ee7299b49a4c70db2/ios/AirshipConfig.plist#L7-L10) with the [production values](https://github.com/Expensify/App/blob/d7c1256f952c0020344d809ee7299b49a4c70db2/ios/AirshipConfig.plist#L11-L14).
2. Rebuild the app.

## Troubleshooting
1. If you are having issues with **_Getting Started_**, please reference [React Native&#039;s Documentation](https://reactnative.dev/docs/environment-setup)
2. If you are running into CORS errors like (in the browser dev console)
   ```sh
   Access to fetch at &#039;https://www.expensify.com/api/BeginSignIn&#039; from origin &#039;http://localhost:8080&#039; has been blocked by CORS policy
   ```
   You probably have a misconfigured `.env` file - remove it (`rm .env`) and try again

**Note:** Expensify engineers that will be testing with the API in your local dev environment please refer to [these additional instructions](https://stackoverflow.com/c/expensify/questions/7699/7700).

## Environment variables
Creating an `.env` file is not necessary. We advise external contributors against it. It can lead to errors when
variables referenced here get updated since your local `.env` file is ignored.

- `NEW_EXPENSIFY_URL` - The root URL used for the website
- `SECURE_EXPENSIFY_URL` - The URL used to hit the Expensify secure API
- `EXPENSIFY_URL` - The URL used to hit the Expensify API
- `EXPENSIFY_PARTNER_NAME` - Constant used for the app when authenticating.
- `EXPENSIFY_PARTNER_PASSWORD` - Another constant used for the app when authenticating. (This is OK to be public)
- `PUSHER_APP_KEY` - Key used to authenticate with Pusher.com
- `SECURE_NGROK_URL` - Secure URL used for `ngrok` when testing
- `NGROK_URL` - URL used for `ngrok` when testing
- `USE_NGROK` - Flag to turn `ngrok` testing on or off
- `USE_WDYR` - Flag to turn [`Why Did You Render`](https://github.com/welldone-software/why-did-you-render) testing on or off
- `USE_WEB_PROXY`⚠️- Used in web/desktop development, it starts a server along the local development server to proxy
   requests to the backend. External contributors should set this to `true` otherwise they&#039;ll have CORS errors.
   If you don&#039;t want to start the proxy server set this explicitly to `false`
- `CAPTURE_METRICS` (optional) - Set this to `true` to capture performance metrics and see them in Flipper
   see [PERFORMANCE.md](contributingGuides/PERFORMANCE.md#performance-metrics-opt-in-on-local-release-builds) for more information
- `ONYX_METRICS` (optional) - Set this to `true` to capture even more performance metrics and see them in Flipper
   see [React-Native-Onyx#benchmarks](https://github.com/Expensify/react-native-onyx#benchmarks) for more information
- `E2E_TESTING` (optional) - This needs to be set to `true` when running the e2e tests for performance regression testing.
   This happens usually automatically, read [this](tests/e2e/README.md) for more information

----

# Testing on browsers in simulators and emulators

The development server is reached through the HTTPS protocol, and any client that access the development server needs a certificate.

You create this certificate by following the instructions in [`Configuring HTTPS`](#configuring-https) of this readme. When accessing the website served from the development server on browsers in iOS simulator or Android emulator, these virtual devices need to have the same certificate installed. Follow the steps below to install them.

#### Pre-requisite for Android flow
1. Open any emulator using Android Studio
2. Use `adb push &quot;$(mkcert -CAROOT)/rootCA.pem&quot; /storage/emulated/0/Download/` to push certificate to install in Download folder.
3. Install the certificate as CA certificate from the settings. On the Android emulator, this option can be found in Settings &gt; Security &gt; Encryption &amp; Credentials &gt; Install a certificate &gt; CA certificate.
4. Close the emulator.

**Note:** If you want to run app on `https://127.0.0.1:8082`, then just install the certificate and use `adb reverse tcp:8082 tcp:8082` on every startup.

#### Android Flow
1. Run `npm run setupNewDotWebForEmulators android`
2. Select the emulator you want to run if prompted. (If single emulator is available, then it will open automatically)
3. Let the script execute till the message `🎉 Done!`.

**Note:** If you want to run app on `https://dev.new.expensify.com:8082`, then just do the Android flow and use `npm run startAndroidEmulator` to start the Android Emulator every time (It will configure the emulator).


Possible Scenario:
The flow may fail to root with error `adbd cannot run as root in production builds`. In this case, please refer to https://stackoverflow.com/a/45668555. Or use `https://127.0.0.1:8082` for less hassle.

#### iOS Flow
1. Run `npm run setupNewDotWebForEmulators ios`
2. Select the emulator you want to run if prompted. (If single emulator is available, then it will open automatically)
3. Let the script execute till the message `🎉 Done!`.

#### All Flow
1. Run `npm run setupNewDotWebForEmulators all` or `npm run setupNewDotWebForEmulators`
2. Check if the iOS flow runs first and then Android flow runs.
3. Let the script execute till the message `🎉 Done!`.

----

# Running the tests
## Unit tests
Unit tests are valuable when you want to test one component. They should be short, fast, and ideally only test one thing.
Often times in order to write a unit test, you may need to mock data, a component, or library. We use the library [Jest](https://jestjs.io/)
to help run our Unit tests.

* To run the **Jest unit tests**: `npm run test`
* UI tests guidelines can be found [here](tests/ui/README.md)

## Performance tests
We use Reassure for monitoring performance regression. More detailed information can be found [here](tests/perf-test/README.md):

----

# Debugging
### iOS
1. If running on the iOS simulator pressing `⌘D` will open the debugging menu.
2. This will allow you to attach a debugger in your IDE, React Developer Tools, or your browser.
3. For more information on how to attach a debugger, see [React Native Debugging Documentation](https://reactnative.dev/docs/debugging#chrome-developer-tools)

Alternatively, you can also set up debugger using [Flipper](https://fbflipper.com/). After installation, press `⌘D` and select &quot;Open Debugger&quot;. This will open Flipper window. To view data stored by Onyx, go to Plugin Manager and install `async-storage` plugin.

## Android
Our React Native Android app now uses the `Hermes` JS engine which requires your browser for remote debugging. These instructions are specific to Chrome since that&#039;s what the Hermes documentation provided.
1. Navigate to `chrome://inspect`
2. Use the `Configure...` button to add the Metro server address (typically `localhost:8081`, check your `Metro` output)
3. You should now see a &quot;Hermes React Native&quot; target with an &quot;inspect&quot; link which can be used to bring up a debugger. If you don&#039;t see the &quot;inspect&quot; link, make sure the Metro server is running
4. You can now use the Chrome debug tools. See [React Native Debugging Hermes](https://reactnative.dev/docs/hermes#debugging-hermes-using-google-chromes-devtools)

## Web

To make it easier to test things in web, we expose the Onyx object to the window, so you can easily do `Onyx.set(&#039;bla&#039;, 1)`.

----

# Release Profiler
Often, performance issue debugging occurs in debug builds, which can introduce errors from elements such as JS Garbage Collection, Hermes debug markers, or LLDB pauses.

`react-native-release-profiler` facilitates profiling within release builds for accurate local problem-solving and broad performance analysis in production to spot regressions or collect extensive device data. Therefore, we will utilize the production build version

### Getting Started with Source Maps
To accurately profile your application, generating source maps for Android and iOS is crucial. Here&#039;s how to enable them:
1. Enable source maps on Android
Ensure the following is set in your app&#039;s `android/app/build.gradle` file.

    ```jsx
    project.ext.react = [
        enableHermes: true,
        hermesFlagsRelease: [&quot;-O&quot;, &quot;-output-source-map&quot;], // &lt;-- here, plus whichever flag was required to set this away from default
    ]
    ```

2. Enable source maps on IOS
Within Xcode head to the build phase - `Bundle React Native code and images`.

    ```jsx
    export SOURCEMAP_FILE=&quot;$(pwd)/../main.jsbundle.map&quot; // &lt;-- here;

    export NODE_BINARY=node
    ../node_modules/react-native/scripts/react-native-xcode.sh
    ```
3. Install the necessary packages and CocoaPods dependencies:
    ```jsx
    npm i &amp;&amp; npm run pod-install
    ```
4. Depending on the platform you are targeting, run your Android/iOS app in production mode.
5. Upon completion, the generated source map can be found at:
  Android: `android/app/build/generated/sourcemaps/react/productionRelease/index.android.bundle.map`
  IOS: `main.jsbundle.map`
  web: `dist/merged-source-map.js.map`

### Recording a Trace:
1. Ensure you have generated the source map as outlined above.
2. Launch the app in production mode.
3. Navigate to the feature you wish to profile.
4. Initiate the profiling session by tapping with four fingers (on mobile) or `cmd+d` (on web) to open the menu and selecting **`Use Profiling`**.
5. Close the menu and interact with the app.
6. After completing your interactions, tap with four fingers or `cmd+d` again and select to stop profiling.
7. You will be presented with a **`Share`** option to export the trace, which includes a trace file (`Profile&lt;app version&gt;.cpuprofile`) and build info (`AppInfo&lt;app version&gt;.json`).

Build info:
```jsx
{
    appVersion: &quot;1.0.0&quot;,
    environment: &quot;production&quot;,
    platform: &quot;IOS&quot;,
    totalMemory: &quot;3GB&quot;,
    usedMemory: &quot;300MB&quot;
}
```

### How to symbolicate trace record:
1. You have two files: `AppInfo&lt;app version&gt;.json` and `Profile&lt;app version&gt;.cpuprofile`
2. Place the `Profile&lt;app version&gt;.cpuprofile` file at the root of your project.
3. If you have already generated a source map from the steps above for this branch, you can skip to the next step. Otherwise, obtain the app version from `AppInfo&lt;app version&gt;.json` switch to that branch and generate the source map as described.

`IMPORTANT:` You should generate the source map from the same branch as the trace was recorded.

4. Use the following commands to symbolicate the trace for Android and iOS, respectively:
Android: `npm run symbolicate-release:android`
IOS: `npm run symbolicate-release:ios`
web: `npm run symbolicate-release:web`
5. A new file named `Profile_trace_for_&lt;app version&gt;-converted.json` will appear in your project&#039;s root folder.
6. Open this file in your tool of choice:
    - SpeedScope ([https://www.speedscope.app](https://www.speedscope.app/))
    - Perfetto UI (https://ui.perfetto.dev/)
    - Google Chrome&#039;s Tracing UI (chrome://tracing)

----

# App Structure and Conventions

## Onyx
This is a persistent storage solution wrapped in a Pub/Sub library. In general that means:

- Onyx stores and retrieves data from persistent storage
- Data is stored as key/value pairs, where the value can be anything from a single piece of data to a complex object
- Collections of data are usually not stored as a single key (eg. an array with multiple objects), but as individual keys+ID (eg. `report_1234`, `report_4567`, etc.). Store collections as individual keys when a component will bind directly to one of those keys. For example: reports are stored as individual keys because `OptionRow.js` binds to the individual report keys for each link. However, report actions are stored as an array of objects because nothing binds directly to a single report action.
- Onyx allows other code to subscribe to changes in data, and then publishes change events whenever data is changed
- Anything needing to read Onyx data needs to:
    1. Know what key the data is stored in (for web, you can find this by looking in the JS console &gt; Application &gt; IndexedDB &gt; OnyxDB &gt; keyvaluepairs)
    2. Subscribe to changes of the data for a particular key or set of keys. React components use `withOnyx()` and non-React libs use `Onyx.connect()`
    3. Get initialized with the current value of that key from persistent storage (Onyx does this by calling `setState()` or triggering the `callback` with the values currently on disk as part of the connection process)
- Subscribing to Onyx keys is done using a constant defined in `ONYXKEYS`. Each Onyx key represents either a collection of items or a specific entry in storage. For example, since all reports are stored as individual keys like `report_1234`, if code needs to know about all the reports (eg. display a list of them in the nav menu), then it would subscribe to the key `ONYXKEYS.COLLECTION.REPORT`.

## Actions
Actions are responsible for managing what is on disk. This is usually:

- Subscribing to Pusher events to receive data from the server that will get put immediately into Onyx
- Making XHRs to request necessary data from the server and then immediately putting that data into Onyx
- Handling any business logic with input coming from the UI layer

## The UI layer
This layer is solely responsible for:

- Reflecting exactly the data that is in persistent storage

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[Budibase/budibase]]></title>
            <link>https://github.com/Budibase/budibase</link>
            <guid>https://github.com/Budibase/budibase</guid>
            <pubDate>Fri, 18 Apr 2025 00:04:45 GMT</pubDate>
            <description><![CDATA[Create business apps and automate workflows in minutes. Supports PostgreSQL, MySQL, MariaDB, MSSQL, MongoDB, Rest API, Docker, K8s, and more 🚀 No code / Low code platform..]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/Budibase/budibase">Budibase/budibase</a></h1>
            <p>Create business apps and automate workflows in minutes. Supports PostgreSQL, MySQL, MariaDB, MSSQL, MongoDB, Rest API, Docker, K8s, and more 🚀 No code / Low code platform..</p>
            <p>Language: TypeScript</p>
            <p>Stars: 24,316</p>
            <p>Forks: 1,706</p>
            <p>Stars today: 22 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.budibase.com&quot;&gt;
    &lt;img alt=&quot;Budibase&quot; src=&quot;https://res.cloudinary.com/daog6scxm/image/upload/v1696515725/Branding/Assets/Symbol/RGB/Full%20Colour/Budibase_Symbol_RGB_FullColour_cbqvha_1_z5cwq2.svg&quot; width=&quot;60&quot; /&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;h1 align=&quot;center&quot;&gt;
  Budibase
&lt;/h1&gt;

&lt;h3 align=&quot;center&quot;&gt;
  The low code platform you&#039;ll enjoy using
&lt;/h3&gt;
&lt;p align=&quot;center&quot;&gt;
  Budibase is an open-source low-code platform that saves engineers 100s of hours building forms, portals, and approval apps, securely.
&lt;/p&gt;

&lt;h3 align=&quot;center&quot;&gt;
 🤖 🎨 🚀
&lt;/h3&gt;
&lt;br&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;img alt=&quot;Budibase design ui&quot; src=&quot;https://res.cloudinary.com/daog6scxm/image/upload/v1680181644/ui/homepage-design-ui_sizp7b.png&quot;&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/Budibase/budibase/releases&quot;&gt;
    &lt;img alt=&quot;GitHub all releases&quot; src=&quot;https://img.shields.io/github/downloads/Budibase/budibase/total&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/Budibase/budibase/releases&quot;&gt;
    &lt;img alt=&quot;GitHub release (latest by date)&quot; src=&quot;https://img.shields.io/github/v/release/Budibase/budibase&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://twitter.com/intent/follow?screen_name=budibase&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/twitter/follow/budibase?style=social&quot; alt=&quot;Follow @budibase&quot; /&gt;
  &lt;/a&gt;
  &lt;img src=&quot;https://img.shields.io/badge/Contributor%20Covenant-v2.0%20adopted-ff69b4.svg&quot; alt=&quot;Code of conduct&quot; /&gt;
  &lt;a href=&quot;https://codecov.io/gh/Budibase/budibase&quot;&gt;
    &lt;img src=&quot;https://codecov.io/gh/Budibase/budibase/graph/badge.svg?token=E8W2ZFXQOH&quot;/&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;h3 align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://account.budibase.app/register&quot;&gt;Get started - we host (Budibase Cloud)&lt;/a&gt;
  &lt;span&gt; · &lt;/span&gt;
  &lt;a href=&quot;https://docs.budibase.com/docs/hosting-methods&quot;&gt;Get started - you host (Docker, K8s, DO)&lt;/a&gt;
  &lt;span&gt; · &lt;/span&gt;
  &lt;a href=&quot;https://docs.budibase.com/docs&quot;&gt;Docs&lt;/a&gt;
  &lt;span&gt; · &lt;/span&gt;
  &lt;a href=&quot;https://github.com/Budibase/budibase/discussions?discussions_q=category%3AIdeas&quot;&gt;Feature request&lt;/a&gt;
  &lt;span&gt; · &lt;/span&gt;
  &lt;a href=&quot;https://github.com/Budibase/budibase/issues&quot;&gt;Report a bug&lt;/a&gt;
  &lt;span&gt; · &lt;/span&gt;
  Support: &lt;a href=&quot;https://github.com/Budibase/budibase/discussions&quot;&gt;Discussions&lt;/a&gt;
&lt;/h3&gt;

&lt;br /&gt;&lt;br /&gt;

## ✨ Features

### Build and ship real software

Unlike other platforms, with Budibase you build and ship single page applications. Budibase applications have performance baked in and can be designed responsively, providing users with a great experience.
&lt;br /&gt;&lt;br /&gt;

### Open source and extensible

Budibase is open-source - licensed as GPL v3. This should fill you with confidence that Budibase will always be around. You can also code against Budibase or fork it and make changes as you please, providing a developer-friendly experience.
&lt;br /&gt;&lt;br /&gt;

### Load data or start from scratch

Budibase pulls data from multiple sources, including MongoDB, CouchDB, PostgreSQL, MariaDB, MySQL, Airtable, S3, DynamoDB, or a REST API. And unlike other platforms, with Budibase you can start from scratch and create business apps with no data sources. [Request new datasources](https://github.com/Budibase/budibase/discussions?discussions_q=category%3AIdeas).

&lt;p align=&quot;center&quot;&gt;
  &lt;img alt=&quot;Budibase data&quot; src=&quot;https://res.cloudinary.com/daog6scxm/image/upload/v1680281798/ui/data_klbuna.png&quot;&gt;
&lt;/p&gt;
&lt;br /&gt;&lt;br /&gt;

### Design and build apps with powerful pre-made components

Budibase comes out of the box with beautifully designed, powerful components which you can use like building blocks to build your UI. We also expose many of your favourite CSS styling options so you can go that extra creative mile. [Request new component](https://github.com/Budibase/budibase/discussions?discussions_q=category%3AIdeas).

&lt;p align=&quot;center&quot;&gt;
  &lt;img alt=&quot;Budibase design&quot; src=&quot;https://res.cloudinary.com/daog6scxm/image/upload/v1675437167/ui/form_2x_mbli8y.png&quot;&gt;
&lt;/p&gt;
&lt;br /&gt;&lt;br /&gt;

### Automate processes, integrate with other tools and connect to webhooks

Save time by automating manual processes and workflows. From connecting to webhooks to automating emails, simply tell Budibase what to do and let it work for you. You can easily [create new automations for Budibase here](https://github.com/Budibase/automations) or [Request new automation](https://github.com/Budibase/budibase/discussions?discussions_q=category%3AIdeas).
&lt;br /&gt;&lt;br /&gt;

### Integrate with your favorite tools

Budibase integrates with a number of popular tools allowing you to build apps that perfectly fit your stack.

&lt;p align=&quot;center&quot;&gt;
  &lt;img alt=&quot;Budibase integrations&quot; src=&quot;https://res.cloudinary.com/daog6scxm/image/upload/v1680195228/ui/automate_fg9z07.png&quot;&gt;
&lt;/p&gt;
&lt;br /&gt;&lt;br /&gt;

### Deploy with confidence and security

Budibase is made to scale. With Budibase, you can self-host on your own infrastructure and globally manage users, onboarding, SMTP, apps, groups, theming and more. You can also provide users/groups with an app portal and disseminate user management to the group manager.

- Checkout the promo video: https://youtu.be/xoljVpty_Kw

&lt;br /&gt;

---

&lt;br /&gt;

## Budibase Public API

As with anything that we build in Budibase, our new public API is simple to use, flexible, and introduces new extensibility. To summarize, the Budibase API enables:

- Budibase as a backend
- Interoperability

#### Docs

You can learn more about the Budibase API at the following places:

- [General documentation](https://docs.budibase.com/docs/public-api): Learn how to get your API key, how to use spec, and how to use Postman
- [Interactive API documentation](https://docs.budibase.com/reference/appcreate) : Learn how to interact with the API

&lt;br /&gt;&lt;br /&gt;

## 🏁 Get started

Deploy Budibase using Docker, Kubernetes, and Digital Ocean on your existing infrastructure. Or use Budibase Cloud if you don&#039;t need to self-host and would like to get started quickly.

### [Get started with self-hosting Budibase](https://docs.budibase.com/docs/hosting-methods)

- [Docker - single ARM compatible image](https://docs.budibase.com/docs/docker)
- [Docker Compose](https://docs.budibase.com/docs/docker-compose)
- [Kubernetes](https://docs.budibase.com/docs/kubernetes-k8s)
- [Digital Ocean](https://docs.budibase.com/docs/digitalocean)
- [Portainer](https://docs.budibase.com/docs/portainer)

### [Get started with Budibase Cloud](https://budibase.com)

&lt;br /&gt;&lt;br /&gt;

## 🎓 Learning Budibase

The Budibase documentation [lives here](https://docs.budibase.com/docs).
&lt;br /&gt;

&lt;br /&gt;&lt;br /&gt;

## 💬 Community

If you have a question or would like to talk with other Budibase users and join our community, please hop over to [Github discussions](https://github.com/Budibase/budibase/discussions)

&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;

## ❗ Code of conduct

Budibase is dedicated to providing everyone a welcoming, diverse, and harassment-free experience. We expect everyone in the Budibase community to abide by our [**Code of Conduct**](https://github.com/Budibase/budibase/blob/HEAD/docs/CODE_OF_CONDUCT.md). Please read it.
&lt;br /&gt;

&lt;br /&gt;&lt;br /&gt;

## 🙌 Contributing to Budibase

From opening a bug report to creating a pull request: every contribution is appreciated and welcomed. If you&#039;re planning to implement a new feature or change the API, please create an issue first. This way, we can ensure your work is not in vain.
Environment setup instructions are available [here](https://github.com/Budibase/budibase/tree/HEAD/docs/CONTRIBUTING.md).

### Not Sure Where to Start?

A good place to start contributing is by looking for the [good first issue](https://github.com/Budibase/budibase/labels/good%20first%20issue) tag.

### How the repository is organized

Budibase is a monorepo managed by lerna. Lerna manages the building and publishing of the budibase packages. At a high level, here are the packages that make up Budibase.

- [packages/builder](https://github.com/Budibase/budibase/tree/HEAD/packages/builder) - contains code for the budibase builder client-side svelte application.

- [packages/client](https://github.com/Budibase/budibase/tree/HEAD/packages/client) - A module that runs in the browser responsible for reading JSON definition and creating living, breathing web apps from it.

- [packages/server](https://github.com/Budibase/budibase/tree/HEAD/packages/server) - The budibase server. This Koa app is responsible for serving the JS for the builder and budibase apps, as well as providing the API for interaction with the database and file system.

For more information, see [CONTRIBUTING.md](https://github.com/Budibase/budibase/blob/HEAD/docs/CONTRIBUTING.md)

&lt;br /&gt;&lt;br /&gt;

## 📝 License

Budibase is open-source, licensed as [GPL v3](https://www.gnu.org/licenses/gpl-3.0.en.html). The client and component libraries are licensed as [MPL](https://directory.fsf.org/wiki/License:MPL-2.0) - so the apps you build can be licensed however you like.

&lt;br /&gt;&lt;br /&gt;

## ⭐ Stargazers over time

[![Stargazers over time](https://starchart.cc/Budibase/budibase.svg)](https://starchart.cc/Budibase/budibase)

If you are having issues between updates of the builder, please use the guide [here](https://github.com/Budibase/budibase/blob/HEAD/docs/CONTRIBUTING.md#troubleshooting) to clear down your environment.

&lt;br /&gt;&lt;br /&gt;

## Contributors ✨

Thanks goes to these wonderful people ([emoji key](https://allcontributors.org/docs/en/emoji-key)):

&lt;a href=&quot;https://github.com/Budibase/budibase/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=Budibase/budibase&quot; /&gt;
&lt;/a&gt;

Made with [contrib.rocks](https://contrib.rocks).
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[n8n-io/n8n]]></title>
            <link>https://github.com/n8n-io/n8n</link>
            <guid>https://github.com/n8n-io/n8n</guid>
            <pubDate>Fri, 18 Apr 2025 00:04:44 GMT</pubDate>
            <description><![CDATA[Fair-code workflow automation platform with native AI capabilities. Combine visual building with custom code, self-host or cloud, 400+ integrations.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/n8n-io/n8n">n8n-io/n8n</a></h1>
            <p>Fair-code workflow automation platform with native AI capabilities. Combine visual building with custom code, self-host or cloud, 400+ integrations.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 82,376</p>
            <p>Forks: 22,040</p>
            <p>Stars today: 482 stars today</p>
            <h2>README</h2><pre>![Banner image](https://user-images.githubusercontent.com/10284570/173569848-c624317f-42b1-45a6-ab09-f0ea3c247648.png)

# n8n - Secure Workflow Automation for Technical Teams

n8n is a workflow automation platform that gives technical teams the flexibility of code with the speed of no-code. With 400+ integrations, native AI capabilities, and a fair-code license, n8n lets you build powerful automations while maintaining full control over your data and deployments.

![n8n.io - Screenshot](https://raw.githubusercontent.com/n8n-io/n8n/master/assets/n8n-screenshot-readme.png)

## Key Capabilities

- **Code When You Need It**: Write JavaScript/Python, add npm packages, or use the visual interface
- **AI-Native Platform**: Build AI agent workflows based on LangChain with your own data and models
- **Full Control**: Self-host with our fair-code license or use our [cloud offering](https://app.n8n.cloud/login)
- **Enterprise-Ready**: Advanced permissions, SSO, and air-gapped deployments
- **Active Community**: 400+ integrations and 900+ ready-to-use [templates](https://n8n.io/workflows)

## Quick Start

Try n8n instantly with [npx](https://docs.n8n.io/hosting/installation/npm/) (requires [Node.js](https://nodejs.org/en/)):

```
npx n8n
```

Or deploy with [Docker](https://docs.n8n.io/hosting/installation/docker/):

```
docker volume create n8n_data
docker run -it --rm --name n8n -p 5678:5678 -v n8n_data:/home/node/.n8n docker.n8n.io/n8nio/n8n
```

Access the editor at http://localhost:5678

## Resources

- 📚 [Documentation](https://docs.n8n.io)
- 🔧 [400+ Integrations](https://n8n.io/integrations)
- 💡 [Example Workflows](https://n8n.io/workflows)
- 🤖 [AI &amp; LangChain Guide](https://docs.n8n.io/langchain/)
- 👥 [Community Forum](https://community.n8n.io)
- 📖 [Community Tutorials](https://community.n8n.io/c/tutorials/28)

## Support

Need help? Our community forum is the place to get support and connect with other users:
[community.n8n.io](https://community.n8n.io)

## License

n8n is [fair-code](https://faircode.io) distributed under the [Sustainable Use License](https://github.com/n8n-io/n8n/blob/master/LICENSE.md) and [n8n Enterprise License](https://github.com/n8n-io/n8n/blob/master/LICENSE_EE.md).

- **Source Available**: Always visible source code
- **Self-Hostable**: Deploy anywhere
- **Extensible**: Add your own nodes and functionality

[Enterprise licenses](mailto:license@n8n.io) available for additional features and support.

Additional information about the license model can be found in the [docs](https://docs.n8n.io/reference/license/).

## Contributing

Found a bug 🐛 or have a feature idea ✨? Check our [Contributing Guide](https://github.com/n8n-io/n8n/blob/master/CONTRIBUTING.md) to get started.

## Join the Team

Want to shape the future of automation? Check out our [job posts](https://n8n.io/careers) and join our team!

## What does n8n mean?

**Short answer:** It means &quot;nodemation&quot; and is pronounced as n-eight-n.

**Long answer:** &quot;I get that question quite often (more often than I expected) so I decided it is probably best to answer it here. While looking for a good name for the project with a free domain I realized very quickly that all the good ones I could think of were already taken. So, in the end, I chose nodemation. &#039;node-&#039; in the sense that it uses a Node-View and that it uses Node.js and &#039;-mation&#039; for &#039;automation&#039; which is what the project is supposed to help with. However, I did not like how long the name was and I could not imagine writing something that long every time in the CLI. That is when I then ended up on &#039;n8n&#039;.&quot; - **Jan Oberhauser, Founder and CEO, n8n.io**
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[alibaba/formily]]></title>
            <link>https://github.com/alibaba/formily</link>
            <guid>https://github.com/alibaba/formily</guid>
            <pubDate>Fri, 18 Apr 2025 00:04:43 GMT</pubDate>
            <description><![CDATA[📱🚀 🧩 Cross Device & High Performance Normal Form/Dynamic(JSON Schema) Form/Form Builder -- Support React/React Native/Vue 2/Vue 3]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/alibaba/formily">alibaba/formily</a></h1>
            <p>📱🚀 🧩 Cross Device & High Performance Normal Form/Dynamic(JSON Schema) Form/Form Builder -- Support React/React Native/Vue 2/Vue 3</p>
            <p>Language: TypeScript</p>
            <p>Stars: 11,857</p>
            <p>Forks: 1,522</p>
            <p>Stars today: 7 stars today</p>
            <h2>README</h2><pre>English | [简体中文](./README.zh-cn.md)

&lt;p align=&quot;center&quot;&gt;
&lt;img src=&quot;https://img.alicdn.com/tfs/TB1fHhZu4D1gK0jSZFyXXciOVXa-2500-1200.png&quot;&gt;
&lt;a href=&quot;https://www.npmjs.com/package/@formily/core&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/@formily/core.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://www.npmjs.com/package/@formily/react&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/@formily/react.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://travis-ci.com/alibaba/formily&quot;&gt;&lt;img src=&quot;https://travis-ci.com/alibaba/formily.svg?branch=master&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://standardjs.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/code_style-standard-brightgreen.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://app.netlify.com/sites/formily/deploys&quot;&gt;&lt;img src=&quot;https://api.netlify.com/api/v1/badges/7145918b-9cb5-47f8-8a42-111969e232ef/deploy-status&quot;/&gt;&lt;/a&gt;
&lt;/p&gt;

---

## Background

In React, the whole tree rendering performance problem of the form is very obvious in the controlled mode. Especially for the scene of data linkage, it is easy to cause the page to be stuck. To solve this problem, we have distributed the management of the state of each form field, which significantly improves the performance of the form operations. At the same time, we deeply integrate the JSON Schema protocol to help you solve the problem of back-end driven form rendering quickly.

## Features

- 🚀 High performance, fields managed independently, rather rerender the whole tree.
- 💡 Integrated Alibaba Fusion and Ant Design components are guaranteed to work out of the box.
- 🎨 JSON Schema applied for BackEnd. JSchema applied for FrontEnd. Two paradigms can be converted to each other.
- 🏅 Side effects are managed independently, making form data linkages easier than ever before.
- 🌯 Override most complicated form layout use cases.

## WebSite

2.0

https://v2.formilyjs.org

1.0

https://formilyjs.org

## Community

- [icejs](https://github.com/alibaba/ice)

## Contributors

This project exists thanks to all the people who contribute.
&lt;a href=&quot;https://github.com/alibaba/formily/graphs/contributors&quot;&gt;&lt;img src=&quot;https://opencollective.com/formily/contributors.svg?width=890&quot; /&gt;&lt;/a&gt;

## LICENSE

Formily is open source software licensed as
[MIT](https://github.com/alibaba/formily/blob/master/LICENSE.md).
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[FlowiseAI/Flowise]]></title>
            <link>https://github.com/FlowiseAI/Flowise</link>
            <guid>https://github.com/FlowiseAI/Flowise</guid>
            <pubDate>Fri, 18 Apr 2025 00:04:42 GMT</pubDate>
            <description><![CDATA[Drag & drop UI to build your customized LLM flow]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/FlowiseAI/Flowise">FlowiseAI/Flowise</a></h1>
            <p>Drag & drop UI to build your customized LLM flow</p>
            <p>Language: TypeScript</p>
            <p>Stars: 37,314</p>
            <p>Forks: 19,433</p>
            <p>Stars today: 31 stars today</p>
            <h2>README</h2><pre>&lt;!-- markdownlint-disable MD030 --&gt;

&lt;img width=&quot;100%&quot; src=&quot;https://github.com/FlowiseAI/Flowise/blob/main/images/flowise.png?raw=true&quot;&gt;&lt;/a&gt;

# Flowise - Build LLM Apps Easily

[![Release Notes](https://img.shields.io/github/release/FlowiseAI/Flowise)](https://github.com/FlowiseAI/Flowise/releases)
[![Discord](https://img.shields.io/discord/1087698854775881778?label=Discord&amp;logo=discord)](https://discord.gg/jbaHfsRVBW)
[![Twitter Follow](https://img.shields.io/twitter/follow/FlowiseAI?style=social)](https://twitter.com/FlowiseAI)
[![GitHub star chart](https://img.shields.io/github/stars/FlowiseAI/Flowise?style=social)](https://star-history.com/#FlowiseAI/Flowise)
[![GitHub fork](https://img.shields.io/github/forks/FlowiseAI/Flowise?style=social)](https://github.com/FlowiseAI/Flowise/fork)

English | [繁體中文](./i18n/README-TW.md) | [简体中文](./i18n/README-ZH.md) | [日本語](./i18n/README-JA.md) | [한국어](./i18n/README-KR.md)

&lt;h3&gt;Drag &amp; drop UI to build your customized LLM flow&lt;/h3&gt;
&lt;a href=&quot;https://github.com/FlowiseAI/Flowise&quot;&gt;
&lt;img width=&quot;100%&quot; src=&quot;https://github.com/FlowiseAI/Flowise/blob/main/images/flowise.gif?raw=true&quot;&gt;&lt;/a&gt;

## ⚡Quick Start

Download and Install [NodeJS](https://nodejs.org/en/download) &gt;= 18.15.0

1. Install Flowise
    ```bash
    npm install -g flowise
    ```
2. Start Flowise

    ```bash
    npx flowise start
    ```

    With username &amp; password

    ```bash
    npx flowise start --FLOWISE_USERNAME=user --FLOWISE_PASSWORD=1234
    ```

3. Open [http://localhost:3000](http://localhost:3000)

## 🐳 Docker

### Docker Compose

1. Clone the Flowise project
2. Go to `docker` folder at the root of the project
3. Copy `.env.example` file, paste it into the same location, and rename to `.env` file
4. `docker compose up -d`
5. Open [http://localhost:3000](http://localhost:3000)
6. You can bring the containers down by `docker compose stop`

### Docker Image

1. Build the image locally:
    ```bash
    docker build --no-cache -t flowise .
    ```
2. Run image:

    ```bash
    docker run -d --name flowise -p 3000:3000 flowise
    ```

3. Stop image:
    ```bash
    docker stop flowise
    ```

## 👨‍💻 Developers

Flowise has 3 different modules in a single mono repository.

-   `server`: Node backend to serve API logics
-   `ui`: React frontend
-   `components`: Third-party nodes integrations
-   `api-documentation`: Auto-generated swagger-ui API docs from express

### Prerequisite

-   Install [PNPM](https://pnpm.io/installation)
    ```bash
    npm i -g pnpm
    ```

### Setup

1.  Clone the repository

    ```bash
    git clone https://github.com/FlowiseAI/Flowise.git
    ```

2.  Go into repository folder

    ```bash
    cd Flowise
    ```

3.  Install all dependencies of all modules:

    ```bash
    pnpm install
    ```

4.  Build all the code:

    ```bash
    pnpm build
    ```

    &lt;details&gt;
    &lt;summary&gt;Exit code 134 (JavaScript heap out of memory)&lt;/summary&gt;  
      If you get this error when running the above `build` script, try increasing the Node.js heap size and run the script again:

        export NODE_OPTIONS=&quot;--max-old-space-size=4096&quot;
        pnpm build

    &lt;/details&gt;

5.  Start the app:

    ```bash
    pnpm start
    ```

    You can now access the app on [http://localhost:3000](http://localhost:3000)

6.  For development build:

    -   Create `.env` file and specify the `VITE_PORT` (refer to `.env.example`) in `packages/ui`
    -   Create `.env` file and specify the `PORT` (refer to `.env.example`) in `packages/server`
    -   Run

        ```bash
        pnpm dev
        ```

    Any code changes will reload the app automatically on [http://localhost:8080](http://localhost:8080)

## 🔒 Authentication

To enable app level authentication, add `FLOWISE_USERNAME` and `FLOWISE_PASSWORD` to the `.env` file in `packages/server`:

```
FLOWISE_USERNAME=user
FLOWISE_PASSWORD=1234
```

## 🌱 Env Variables

Flowise support different environment variables to configure your instance. You can specify the following variables in the `.env` file inside `packages/server` folder. Read [more](https://github.com/FlowiseAI/Flowise/blob/main/CONTRIBUTING.md#-env-variables)

## 📖 Documentation

[Flowise Docs](https://docs.flowiseai.com/)

## 🌐 Self Host

Deploy Flowise self-hosted in your existing infrastructure, we support various [deployments](https://docs.flowiseai.com/configuration/deployment)

-   [AWS](https://docs.flowiseai.com/configuration/deployment/aws)
-   [Azure](https://docs.flowiseai.com/configuration/deployment/azure)
-   [Digital Ocean](https://docs.flowiseai.com/configuration/deployment/digital-ocean)
-   [GCP](https://docs.flowiseai.com/configuration/deployment/gcp)
-   [Alibaba Cloud](https://computenest.console.aliyun.com/service/instance/create/default?type=user&amp;ServiceName=Flowise社区版)
-   &lt;details&gt;
      &lt;summary&gt;Others&lt;/summary&gt;

    -   [Railway](https://docs.flowiseai.com/configuration/deployment/railway)

        [![Deploy on Railway](https://railway.app/button.svg)](https://railway.app/template/pn4G8S?referralCode=WVNPD9)

    -   [Render](https://docs.flowiseai.com/configuration/deployment/render)

        [![Deploy to Render](https://render.com/images/deploy-to-render-button.svg)](https://docs.flowiseai.com/configuration/deployment/render)

    -   [HuggingFace Spaces](https://docs.flowiseai.com/deployment/hugging-face)

        &lt;a href=&quot;https://huggingface.co/spaces/FlowiseAI/Flowise&quot;&gt;&lt;img src=&quot;https://huggingface.co/datasets/huggingface/badges/raw/main/open-in-hf-spaces-sm.svg&quot; alt=&quot;HuggingFace Spaces&quot;&gt;&lt;/a&gt;

    -   [Elestio](https://elest.io/open-source/flowiseai)

        [![Deploy on Elestio](https://elest.io/images/logos/deploy-to-elestio-btn.png)](https://elest.io/open-source/flowiseai)

    -   [Sealos](https://template.sealos.io/deploy?templateName=flowise)

        [![Deploy on Sealos](https://sealos.io/Deploy-on-Sealos.svg)](https://template.sealos.io/deploy?templateName=flowise)

    -   [RepoCloud](https://repocloud.io/details/?app_id=29)

        [![Deploy on RepoCloud](https://d16t0pc4846x52.cloudfront.net/deploy.png)](https://repocloud.io/details/?app_id=29)

      &lt;/details&gt;

## ☁️ Flowise Cloud

[Get Started with Flowise Cloud](https://flowiseai.com/)

## 🙋 Support

Feel free to ask any questions, raise problems, and request new features in [discussion](https://github.com/FlowiseAI/Flowise/discussions)

## 🙌 Contributing

Thanks go to these awesome contributors

&lt;a href=&quot;https://github.com/FlowiseAI/Flowise/graphs/contributors&quot;&gt;
&lt;img src=&quot;https://contrib.rocks/image?repo=FlowiseAI/Flowise&quot; /&gt;
&lt;/a&gt;

See [contributing guide](CONTRIBUTING.md). Reach out to us at [Discord](https://discord.gg/jbaHfsRVBW) if you have any questions or issues.
[![Star History Chart](https://api.star-history.com/svg?repos=FlowiseAI/Flowise&amp;type=Timeline)](https://star-history.com/#FlowiseAI/Flowise&amp;Date)

## 📄 License

Source code in this repository is made available under the [Apache License Version 2.0](LICENSE.md).
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
    </channel>
</rss>