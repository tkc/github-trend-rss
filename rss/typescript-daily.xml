<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for typescript - TypeScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for typescript.</description>
        <lastBuildDate>Mon, 20 Oct 2025 00:05:17 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[lfnovo/open-notebook]]></title>
            <link>https://github.com/lfnovo/open-notebook</link>
            <guid>https://github.com/lfnovo/open-notebook</guid>
            <pubDate>Mon, 20 Oct 2025 00:05:17 GMT</pubDate>
            <description><![CDATA[An Open Source implementation of Notebook LM with more flexibility and features]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/lfnovo/open-notebook">lfnovo/open-notebook</a></h1>
            <p>An Open Source implementation of Notebook LM with more flexibility and features</p>
            <p>Language: TypeScript</p>
            <p>Stars: 5,651</p>
            <p>Forks: 585</p>
            <p>Stars today: 142 stars today</p>
            <h2>README</h2><pre>&lt;a id=&quot;readme-top&quot;&gt;&lt;/a&gt;

&lt;!-- [![Contributors][contributors-shield]][contributors-url] --&gt;
[![Forks][forks-shield]][forks-url]
[![Stargazers][stars-shield]][stars-url]
[![Issues][issues-shield]][issues-url]
[![MIT License][license-shield]][license-url]
&lt;!-- [![LinkedIn][linkedin-shield]][linkedin-url] --&gt;


&lt;!-- PROJECT LOGO --&gt;
&lt;br /&gt;
&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/lfnovo/open-notebook&quot;&gt;
    &lt;img src=&quot;docs/assets/hero.svg&quot; alt=&quot;Logo&quot;&gt;
  &lt;/a&gt;

  &lt;h3 align=&quot;center&quot;&gt;Open Notebook&lt;/h3&gt;

  &lt;p align=&quot;center&quot;&gt;
    An open source, privacy-focused alternative to Google&#039;s Notebook LM!
    &lt;br /&gt;&lt;strong&gt;Join our &lt;a href=&quot;https://discord.gg/37XJPXfz2w&quot;&gt;Discord server&lt;/a&gt; for help, to share workflow ideas, and suggest features!&lt;/strong&gt;
    &lt;br /&gt;
    &lt;a href=&quot;https://www.open-notebook.ai&quot;&gt;&lt;strong&gt;Checkout our website »&lt;/strong&gt;&lt;/a&gt;
    &lt;br /&gt;
    &lt;br /&gt;
    &lt;a href=&quot;docs/getting-started/index.md&quot;&gt;📚 Get Started&lt;/a&gt;
    ·
    &lt;a href=&quot;docs/user-guide/index.md&quot;&gt;📖 User Guide&lt;/a&gt;
    ·
    &lt;a href=&quot;docs/features/index.md&quot;&gt;✨ Features&lt;/a&gt;
    ·
    &lt;a href=&quot;docs/deployment/index.md&quot;&gt;🚀 Deploy&lt;/a&gt;
  &lt;/p&gt;
&lt;/div&gt;

&lt;div align=&quot;center&quot;&gt;
  &lt;!-- Keep these links. Translations will automatically update with the README. --&gt;
  &lt;a href=&quot;https://zdoc.app/de/lfnovo/open-notebook&quot;&gt;Deutsch&lt;/a&gt; | 
  &lt;a href=&quot;https://zdoc.app/es/lfnovo/open-notebook&quot;&gt;Español&lt;/a&gt; | 
  &lt;a href=&quot;https://zdoc.app/fr/lfnovo/open-notebook&quot;&gt;français&lt;/a&gt; | 
  &lt;a href=&quot;https://zdoc.app/ja/lfnovo/open-notebook&quot;&gt;日本語&lt;/a&gt; | 
  &lt;a href=&quot;https://zdoc.app/ko/lfnovo/open-notebook&quot;&gt;한국어&lt;/a&gt; | 
  &lt;a href=&quot;https://zdoc.app/pt/lfnovo/open-notebook&quot;&gt;Português&lt;/a&gt; | 
  &lt;a href=&quot;https://zdoc.app/ru/lfnovo/open-notebook&quot;&gt;Русский&lt;/a&gt; | 
  &lt;a href=&quot;https://zdoc.app/zh/lfnovo/open-notebook&quot;&gt;中文&lt;/a&gt;
&lt;/div&gt;

## A private, multi-model, 100% local, full-featured alternative to Notebook LM

![New Notebook](docs/assets/asset_list.png)

In a world dominated by Artificial Intelligence, having the ability to think 🧠 and acquire new knowledge 💡, is a skill that should not be a privilege for a few, nor restricted to a single provider.

**Open Notebook empowers you to:**
- 🔒 **Control your data** - Keep your research private and secure
- 🤖 **Choose your AI models** - Support for 16+ providers including OpenAI, Anthropic, Ollama, LM Studio, and more
- 📚 **Organize multi-modal content** - PDFs, videos, audio, web pages, and more
- 🎙️ **Generate professional podcasts** - Advanced multi-speaker podcast generation
- 🔍 **Search intelligently** - Full-text and vector search across all your content
- 💬 **Chat with context** - AI conversations powered by your research

Learn more about our project at [https://www.open-notebook.ai](https://www.open-notebook.ai)

---

## ⚠️ IMPORTANT: v1.0 Breaking Changes

**If you&#039;re upgrading from a previous version**, please note:

- 🏷️ **Docker tags have changed**: The `latest` tag is now **frozen** at the last Streamlit version
- 🆕 **Use `v1-latest` tag** for the new React/Next.js version (recommended)
- 🔌 **Port 5055 required**: You must expose port 5055 for the API to work
- 📖 **Read the migration guide**: See [MIGRATION.md](MIGRATION.md) for detailed upgrade instructions

**New users**: You can ignore this notice and proceed with the Quick Start below using the `v1-latest-single` tag.

---

## 🆚 Open Notebook vs Google Notebook LM

| Feature | Open Notebook | Google Notebook LM | Advantage |
|---------|---------------|--------------------|-----------|
| **Privacy &amp; Control** | Self-hosted, your data | Google cloud only | Complete data sovereignty |
| **AI Provider Choice** | 16+ providers (OpenAI, Anthropic, Ollama, LM Studio, etc.) | Google models only | Flexibility and cost optimization |
| **Podcast Speakers** | 1-4 speakers with custom profiles | 2 speakers only | Extreme flexibility |
| **Context Control** | 3 granular levels | All-or-nothing | Privacy and performance tuning |
| **Content Transformations** | Custom and built-in | Limited options | Unlimited processing power |
| **API Access** | Full REST API | No API | Complete automation |
| **Deployment** | Docker, cloud, or local | Google hosted only | Deploy anywhere |
| **Citations** | Comprehensive with sources | Basic references | Research integrity |
| **Customization** | Open source, fully customizable | Closed system | Unlimited extensibility |
| **Cost** | Pay only for AI usage | Monthly subscription + usage | Transparent and controllable |

**Why Choose Open Notebook?**
- 🔒 **Privacy First**: Your sensitive research stays completely private
- 💰 **Cost Control**: Choose cheaper AI providers or run locally with Ollama
- 🎙️ **Better Podcasts**: Full script control and multi-speaker flexibility vs limited 2-speaker deep-dive format
- 🔧 **Unlimited Customization**: Modify, extend, and integrate as needed
- 🌐 **No Vendor Lock-in**: Switch providers, deploy anywhere, own your data

### Built With

[![Python][Python]][Python-url] [![Next.js][Next.js]][Next-url] [![React][React]][React-url] [![SurrealDB][SurrealDB]][SurrealDB-url] [![LangChain][LangChain]][LangChain-url]

## 🚀 Quick Start

**Docker Images Available:**
- **Docker Hub**: `lfnovo/open_notebook:v1-latest-single`
- **GitHub Container Registry**: `ghcr.io/lfnovo/open-notebook:v1-latest-single`

Both registries contain identical images - choose whichever you prefer!

Ready to try Open Notebook? Choose your preferred method:

### ⚡ Instant Setup (Recommended)
```bash
# Create a new directory for your Open Notebook installation
mkdir open-notebook
cd open-notebook

# Using Docker - Get started in 2 minutes
docker run -d \
  --name open-notebook \
  -p 8502:8502 -p 5055:5055 \
  -v ./notebook_data:/app/data \
  -v ./surreal_data:/mydata \
  -e OPENAI_API_KEY=your_key \
  lfnovo/open_notebook:v1-latest-single

# Or use GitHub Container Registry:
# ghcr.io/lfnovo/open-notebook:v1-latest-single
```

**What gets created:**
```
open-notebook/
├── notebook_data/     # Your notebooks and research content
└── surreal_data/      # Database files
```

**Access your installation:**
- **🖥️ Main Interface**: http://localhost:8502 (Next.js UI)
- **🔧 API Access**: http://localhost:5055 (REST API)
- **📚 API Documentation**: http://localhost:5055/docs (Interactive Swagger UI)

&gt; **⚠️ Important**: 
&gt; 1. **Run from a dedicated folder**: Create and run this from inside a new `open-notebook` folder so your data volumes are properly organized
&gt; 2. **Volume persistence**: The volumes (`-v ./notebook_data:/app/data` and `-v ./surreal_data:/mydata`) are essential to persist your data between container restarts. Without them, you&#039;ll lose all your notebooks and research when the container stops.

### 🛠️ Full Installation
For development or customization:
```bash
git clone https://github.com/lfnovo/open-notebook
cd open-notebook
make start-all
```

### 📖 Need Help?
- **🤖 AI Installation Assistant**: We have a [CustomGPT built to help you install Open Notebook](https://chatgpt.com/g/g-68776e2765b48191bd1bae3f30212631-open-notebook-installation-assistant) - it will guide you through each step!
- **New to Open Notebook?** Start with our [Getting Started Guide](docs/getting-started/index.md)
- **Need installation help?** Check our [Installation Guide](docs/getting-started/installation.md)
- **Want to see it in action?** Try our [Quick Start Tutorial](docs/getting-started/quick-start.md)

## Provider Support Matrix

Thanks to the [Esperanto](https://github.com/lfnovo/esperanto) library, we support this providers out of the box!

| Provider     | LLM Support | Embedding Support | Speech-to-Text | Text-to-Speech |
|--------------|-------------|------------------|----------------|----------------|
| OpenAI       | ✅          | ✅               | ✅             | ✅             |
| Anthropic    | ✅          | ❌               | ❌             | ❌             |
| Groq         | ✅          | ❌               | ✅             | ❌             |
| Google (GenAI) | ✅          | ✅               | ❌             | ✅             |
| Vertex AI    | ✅          | ✅               | ❌             | ✅             |
| Ollama       | ✅          | ✅               | ❌             | ❌             |
| Perplexity   | ✅          | ❌               | ❌             | ❌             |
| ElevenLabs   | ❌          | ❌               | ✅             | ✅             |
| Azure OpenAI | ✅          | ✅               | ❌             | ❌             |
| Mistral      | ✅          | ✅               | ❌             | ❌             |
| DeepSeek     | ✅          | ❌               | ❌             | ❌             |
| Voyage       | ❌          | ✅               | ❌             | ❌             |
| xAI          | ✅          | ❌               | ❌             | ❌             |
| OpenRouter   | ✅          | ❌               | ❌             | ❌             |
| OpenAI Compatible* | ✅          | ❌               | ❌             | ❌             |

*Supports LM Studio and any OpenAI-compatible endpoint

## ✨ Key Features

### Core Capabilities
- **🔒 Privacy-First**: Your data stays under your control - no cloud dependencies
- **🎯 Multi-Notebook Organization**: Manage multiple research projects seamlessly
- **📚 Universal Content Support**: PDFs, videos, audio, web pages, Office docs, and more
- **🤖 Multi-Model AI Support**: 16+ providers including OpenAI, Anthropic, Ollama, Google, LM Studio, and more
- **🎙️ Professional Podcast Generation**: Advanced multi-speaker podcasts with Episode Profiles
- **🔍 Intelligent Search**: Full-text and vector search across all your content
- **💬 Context-Aware Chat**: AI conversations powered by your research materials
- **📝 AI-Assisted Notes**: Generate insights or write notes manually

### Advanced Features
- **⚡ Reasoning Model Support**: Full support for thinking models like DeepSeek-R1 and Qwen3
- **🔧 Content Transformations**: Powerful customizable actions to summarize and extract insights
- **🌐 Comprehensive REST API**: Full programmatic access for custom integrations [![API Docs](https://img.shields.io/badge/API-Documentation-blue?style=flat-square)](http://localhost:5055/docs)
- **🔐 Optional Password Protection**: Secure public deployments with authentication
- **📊 Fine-Grained Context Control**: Choose exactly what to share with AI models
- **📎 Citations**: Get answers with proper source citations

### Three-Column Interface
1. **Sources**: Manage all your research materials
2. **Notes**: Create manual or AI-generated notes
3. **Chat**: Converse with AI using your content as context

[![Check out our podcast sample](https://img.youtube.com/vi/D-760MlGwaI/0.jpg)](https://www.youtube.com/watch?v=D-760MlGwaI)

## 📚 Documentation

### Getting Started
- **[📖 Introduction](docs/getting-started/introduction.md)** - Learn what Open Notebook offers
- **[⚡ Quick Start](docs/getting-started/quick-start.md)** - Get up and running in 5 minutes
- **[🔧 Installation](docs/getting-started/installation.md)** - Comprehensive setup guide
- **[🎯 Your First Notebook](docs/getting-started/first-notebook.md)** - Step-by-step tutorial

### User Guide
- **[📱 Interface Overview](docs/user-guide/interface-overview.md)** - Understanding the layout
- **[📚 Notebooks](docs/user-guide/notebooks.md)** - Organizing your research
- **[📄 Sources](docs/user-guide/sources.md)** - Managing content types
- **[📝 Notes](docs/user-guide/notes.md)** - Creating and managing notes
- **[💬 Chat](docs/user-guide/chat.md)** - AI conversations
- **[🔍 Search](docs/user-guide/search.md)** - Finding information

### Advanced Topics
- **[🎙️ Podcast Generation](docs/features/podcasts.md)** - Create professional podcasts
- **[🔧 Content Transformations](docs/features/transformations.md)** - Customize content processing
- **[🤖 AI Models](docs/features/ai-models.md)** - AI model configuration
- **[🔧 REST API Reference](docs/development/api-reference.md)** - Complete API documentation
- **[🔐 Security](docs/deployment/security.md)** - Password protection and privacy
- **[🚀 Deployment](docs/deployment/index.md)** - Complete deployment guides for all scenarios

&lt;p align=&quot;right&quot;&gt;(&lt;a href=&quot;#readme-top&quot;&gt;back to top&lt;/a&gt;)&lt;/p&gt;

## 🗺️ Roadmap

### Upcoming Features
- **Live Front-End Updates**: Real-time UI updates for smoother experience
- **Async Processing**: Faster UI through asynchronous content processing
- **Cross-Notebook Sources**: Reuse research materials across projects
- **Bookmark Integration**: Connect with your favorite bookmarking apps

### Recently Completed ✅
- **Next.js Frontend**: Modern React-based frontend with improved performance
- **Comprehensive REST API**: Full programmatic access to all functionality
- **Multi-Model Support**: 16+ AI providers including OpenAI, Anthropic, Ollama, LM Studio
- **Advanced Podcast Generator**: Professional multi-speaker podcasts with Episode Profiles
- **Content Transformations**: Powerful customizable actions for content processing
- **Enhanced Citations**: Improved layout and finer control for source citations
- **Multiple Chat Sessions**: Manage different conversations within notebooks

See the [open issues](https://github.com/lfnovo/open-notebook/issues) for a full list of proposed features and known issues.

&lt;p align=&quot;right&quot;&gt;(&lt;a href=&quot;#readme-top&quot;&gt;back to top&lt;/a&gt;)&lt;/p&gt;


## 🤝 Community &amp; Contributing

### Join the Community
- 💬 **[Discord Server](https://discord.gg/37XJPXfz2w)** - Get help, share ideas, and connect with other users
- 🐛 **[GitHub Issues](https://github.com/lfnovo/open-notebook/issues)** - Report bugs and request features
- ⭐ **Star this repo** - Show your support and help others discover Open Notebook

### Contributing
We welcome contributions! We&#039;re especially looking for help with:
- **Frontend Development**: Help improve our modern Next.js/React UI
- **Testing &amp; Bug Fixes**: Make Open Notebook more robust
- **Feature Development**: Build the coolest research tool together
- **Documentation**: Improve guides and tutorials

**Current Tech Stack**: Python, FastAPI, Next.js, React, SurrealDB
**Future Roadmap**: Real-time updates, enhanced async processing

See our [Contributing Guide](CONTRIBUTING.md) for detailed information on how to get started.

&lt;p align=&quot;right&quot;&gt;(&lt;a href=&quot;#readme-top&quot;&gt;back to top&lt;/a&gt;)&lt;/p&gt;


## 📄 License

Open Notebook is MIT licensed. See the [LICENSE](LICENSE) file for details.

## 📞 Contact

**Luis Novo** - [@lfnovo](https://twitter.com/lfnovo)

**Community Support**:
- 💬 [Discord Server](https://discord.gg/37XJPXfz2w) - Get help, share ideas, and connect with users
- 🐛 [GitHub Issues](https://github.com/lfnovo/open-notebook/issues) - Report bugs and request features
- 🌐 [Website](https://www.open-notebook.ai) - Learn more about the project

## 🙏 Acknowledgments

Open Notebook is built on the shoulders of amazing open-source projects:

* **[Podcast Creator](https://github.com/lfnovo/podcast-creator)** - Advanced podcast generation capabilities
* **[Surreal Commands](https://github.com/lfnovo/surreal-commands)** - Background job processing
* **[Content Core](https://github.com/lfnovo/content-core)** - Content processing and management
* **[Esperanto](https://github.com/lfnovo/esperanto)** - Multi-provider AI model abstraction
* **[Docling](https://github.com/docling-project/docling)** - Document processing and parsing

&lt;p align=&quot;right&quot;&gt;(&lt;a href=&quot;#readme-top&quot;&gt;back to top&lt;/a&gt;)&lt;/p&gt;


&lt;!-- MARKDOWN LINKS &amp; IMAGES --&gt;
&lt;!-- https://www.markdownguide.org/basic-syntax/#reference-style-links --&gt;
[contributors-shield]: https://img.shields.io/github/contributors/lfnovo/open-notebook.svg?style=for-the-badge
[contributors-url]: https://github.com/lfnovo/open-notebook/graphs/contributors
[forks-shield]: https://img.shields.io/github/forks/lfnovo/open-notebook.svg?style=for-the-badge
[forks-url]: https://github.com/lfnovo/open-notebook/network/members
[stars-shield]: https://img.shields.io/github/stars/lfnovo/open-notebook.svg?style=for-the-badge
[stars-url]: https://github.com/lfnovo/open-notebook/stargazers
[issues-shield]: https://img.shields.io/github/issues/lfnovo/open-notebook.svg?style=for-the-badge
[issues-url]: https://github.com/lfnovo/open-notebook/issues
[license-shield]: https://img.shields.io/github/license/lfnovo/open-notebook.svg?style=for-the-badge
[license-url]: https://github.com/lfnovo/open-notebook/blob/master/LICENSE.txt
[linkedin-shield]: https://img.shields.io/badge/-LinkedIn-black.svg?style=for-the-badge&amp;logo=linkedin&amp;colorB=555
[linkedin-url]: https://linkedin.com/in/lfnovo
[product-screenshot]: images/screenshot.png
[Next.js]: https://img.shields.io/badge/Next.js-000000?style=for-the-badge&amp;logo=next.js&amp;logoColor=white
[Next-url]: https://nextjs.org/
[React]: https://img.shields.io/badge/React-61DAFB?style=for-the-badge&amp;logo=react&amp;logoColor=black
[React-url]: https://reactjs.org/
[Python]: https://img.shields.io/badge/Python-3776AB?style=for-the-badge&amp;logo=python&amp;logoColor=white
[Python-url]: https://www.python.org/
[LangChain]: https://img.shields.io/badge/LangChain-3A3A3A?style=for-the-badge&amp;logo=chainlink&amp;logoColor=white
[LangChain-url]: https://www.langchain.com/
[SurrealDB]: https://img.shields.io/badge/SurrealDB-FF5E00?style=for-the-badge&amp;logo=databricks&amp;logoColor=white
[SurrealDB-url]: https://surrealdb.com/
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[atuinsh/desktop]]></title>
            <link>https://github.com/atuinsh/desktop</link>
            <guid>https://github.com/atuinsh/desktop</guid>
            <pubDate>Mon, 20 Oct 2025 00:05:16 GMT</pubDate>
            <description><![CDATA[📖 Runbooks that run]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/atuinsh/desktop">atuinsh/desktop</a></h1>
            <p>📖 Runbooks that run</p>
            <p>Language: TypeScript</p>
            <p>Stars: 1,711</p>
            <p>Forks: 46</p>
            <p>Stars today: 43 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
 &lt;picture&gt;
  &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://github.com/atuinsh/atuin/assets/53315310/13216a1d-1ac0-4c99-b0eb-d88290fe0efd&quot;&gt;
  &lt;img alt=&quot;Atuin Desktop&quot; src=&quot;https://github.com/atuinsh/atuin/assets/53315310/08bc86d4-a781-4aaa-8d7e-478ae6bcd129&quot;&gt;
&lt;/picture&gt;
&lt;/p&gt;

&lt;h1 align=&quot;center&quot;&gt;Atuin Desktop&lt;/h1&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;em&gt;Runbooks that Run. A local-first, executable runbook editor for real terminal workflows. Atuin Desktop looks like a doc, but runs like your terminal.&lt;/em&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/atuinsh/desktop/releases&quot;&gt;download&lt;/a&gt; | &lt;a href=&quot;https://man.atuin.sh&quot;&gt;documentation&lt;/a&gt; | &lt;a href=&quot;https://hub.atuin.sh/&quot;&gt;hub&lt;/a&gt; | &lt;a href=&quot;https://discord.gg/Fq8bJSKPHh&quot;&gt;discord&lt;/a&gt;
&lt;/p&gt;


&lt;p align=&quot;center&quot;&gt;
 &lt;picture&gt;
  &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://man.atuin.sh/images/atuin-desktop-ss-dark.png&quot;&gt;
  &lt;img alt=&quot;Atuin Desktop&quot; src=&quot;https://man.atuin.sh/images/atuin-desktop-ss-light.png&quot;&gt;
&lt;/picture&gt;
&lt;/p&gt;

## 🚀 Open Beta

Atuin Desktop is currently in **open beta**. We&#039;re actively collecting feedback and improving the experience based on real-world usage.

Read the [announcement post](https://blog.atuin.sh/atuin-desktop-open-source/)

## What is Atuin Desktop?

Most infrastructure is held together by five commands someone remembers when things go wrong. Documentation is out of date (if it exists at all), and the real answers are buried in Slack threads, rotting in Notion, or trapped in someone&#039;s shell history.

Atuin Desktop solves this by creating **executable runbooks** that bridge the gap between documentation and automation:

- **Kill context switching**: Chain shell commands, database queries, and HTTP requests in one place
- **Docs that don&#039;t rot**: Execute directly and stay relevant
- **Reusable automation**: Dynamic runbooks with Jinja-style templating  
- **Instant recall**: Autocomplete from your real shell history
- **Local-first, CRDT-powered**: If it runs in your terminal, it runs in a runbook
- **Sync and share**: Keep runbooks up to date across devices and teams with Atuin Hub

## Key Features

### 🔧 Embedded Execution
- Terminal blocks that run directly in the interface
- Database clients for live queries
- Prometheus charts and monitoring integration

### 📚 Living Documentation
- Runbooks that run
- No more copy-pasting from outdated docs
- Real workflows that teams can actually use

### 🔄 Dynamic Templating
- Jinja-style templating for reusable logic
- Variable substitution and conditional logic
- Parameterized workflows for different environments

### 🏛️ Local-First Architecture
- CRDT-powered collaboration
- Works offline, syncs when connected

## Use Cases

Teams are already using Atuin Desktop for:

- **Release Management**: Automated release checklists that actually run
- **Infrastructure Migration**: Safe, repeatable migration workflows
- **Environment Management**: Spinning up staging and production with confidence
- **Database Operations**: Collaborative live query management
- **Incident Response**: Runbooks for when things break

## Getting Started

1. Download a package for your platform [on our releases page](https://github.com/atuinsh/desktop/releases)
2. Sign up for an account [on Atuin Hub](https://hub.atuin.sh/)
3. [Log into Atuin Desktop](https://man.atuin.sh/hub/getting-started/) and create your first runbook

## Feedback &amp; Support

We&#039;re actively seeking feedback during our beta phase! Please use this repository to:

### 🐛 Report Issues

- Found a bug? [Open an issue](../../issues/new?template=bug_report.md)
- Include your OS, Atuin Desktop version, and steps to reproduce

### 💡 Request Features  

- Have an idea? [Submit a feature request](../../issues/new?template=feature_request.md)
- Tell us about your workflow and how Atuin Desktop could better support it

### 💬 General Discussion

Questions about usage? [Start a discussion](https://forum.atuin.sh)

## Roadmap

### Coming Soon

- **Enhanced Integrations**: More database clients, monitoring tools, and APIs
- **History-to-Runbook**: Generate runbooks automatically from your shell history

## Community

- **Blog**: [blog.atuin.sh](https://blog.atuin.sh)
- **Discord**: [Join our community](https://discord.gg/Fq8bJSKPHh)
- **Twitter**: [@atuinsh](https://twitter.com/atuinsh)
- **Bluesky**: [@atuin.sh](https://bsky.app/profile/atuin.sh)
- **Website**: [atuin.sh](https://atuin.sh)

## Related Projects

- **[Atuin CLI](https://github.com/atuinsh/atuin)**: Magical shell history with sync, search, and stats

## License

Copyright 2025 Atuin, Inc

Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[mountain-loop/yaak]]></title>
            <link>https://github.com/mountain-loop/yaak</link>
            <guid>https://github.com/mountain-loop/yaak</guid>
            <pubDate>Mon, 20 Oct 2025 00:05:15 GMT</pubDate>
            <description><![CDATA[The most intuitive desktop API client. Organize and execute REST, GraphQL, WebSockets, Server Sent Events, and gRPC 🦬]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/mountain-loop/yaak">mountain-loop/yaak</a></h1>
            <p>The most intuitive desktop API client. Organize and execute REST, GraphQL, WebSockets, Server Sent Events, and gRPC 🦬</p>
            <p>Language: TypeScript</p>
            <p>Stars: 8,404</p>
            <p>Forks: 293</p>
            <p>Stars today: 178 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/JamesIves/github-sponsors-readme-action&quot;&gt;
    &lt;img width=&quot;200px&quot; src=&quot;https://github.com/mountain-loop/yaak/raw/main/src-tauri/icons/icon.png&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;h1 align=&quot;center&quot;&gt;
  💫 Yaak ➟ Desktop API Client 💫
&lt;/h1&gt;

&lt;p align=&quot;center&quot;&gt;
    A fast, privacy-first API client for REST, GraphQL, SSE, WebSocket, and gRPC – built with Tauri, Rust, and React.
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
 Development is funded by community-purchased &lt;a href=&quot;https://yaak.app/pricing&quot;&gt;licenses&lt;/a&gt;. You can also &lt;a href=&quot;https://github.com/sponsors/gschier&quot;&gt;become a sponsor&lt;/a&gt; to have your logo appear below. 💖
&lt;/p&gt;
&lt;br&gt;



&lt;p align=&quot;center&quot;&gt;
  &lt;!-- sponsors-premium --&gt;&lt;a href=&quot;https://github.com/MVST-Solutions&quot;&gt;&lt;img src=&quot;https:&amp;#x2F;&amp;#x2F;github.com&amp;#x2F;MVST-Solutions.png&quot; width=&quot;80px&quot; alt=&quot;User avatar: MVST-Solutions&quot; /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://github.com/dharsanb&quot;&gt;&lt;img src=&quot;https:&amp;#x2F;&amp;#x2F;github.com&amp;#x2F;dharsanb.png&quot; width=&quot;80px&quot; alt=&quot;User avatar: dharsanb&quot; /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://github.com/railwayapp&quot;&gt;&lt;img src=&quot;https:&amp;#x2F;&amp;#x2F;github.com&amp;#x2F;railwayapp.png&quot; width=&quot;80px&quot; alt=&quot;User avatar: railwayapp&quot; /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://github.com/caseyamcl&quot;&gt;&lt;img src=&quot;https:&amp;#x2F;&amp;#x2F;github.com&amp;#x2F;caseyamcl.png&quot; width=&quot;80px&quot; alt=&quot;User avatar: caseyamcl&quot; /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://github.com/andriyor&quot;&gt;&lt;img src=&quot;https:&amp;#x2F;&amp;#x2F;github.com&amp;#x2F;andriyor.png&quot; width=&quot;80px&quot; alt=&quot;User avatar: andriyor&quot; /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://github.com/&quot;&gt;&lt;img src=&quot;https:&amp;#x2F;&amp;#x2F;raw.githubusercontent.com&amp;#x2F;JamesIves&amp;#x2F;github-sponsors-readme-action&amp;#x2F;dev&amp;#x2F;.github&amp;#x2F;assets&amp;#x2F;placeholder.png&quot; width=&quot;80px&quot; alt=&quot;User avatar: &quot; /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;!-- sponsors-premium --&gt;
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;!-- sponsors-base --&gt;&lt;a href=&quot;https://github.com/seanwash&quot;&gt;&lt;img src=&quot;https:&amp;#x2F;&amp;#x2F;github.com&amp;#x2F;seanwash.png&quot; width=&quot;50px&quot; alt=&quot;User avatar: seanwash&quot; /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://github.com/jerath&quot;&gt;&lt;img src=&quot;https:&amp;#x2F;&amp;#x2F;github.com&amp;#x2F;jerath.png&quot; width=&quot;50px&quot; alt=&quot;User avatar: jerath&quot; /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://github.com/itsa-sh&quot;&gt;&lt;img src=&quot;https:&amp;#x2F;&amp;#x2F;github.com&amp;#x2F;itsa-sh.png&quot; width=&quot;50px&quot; alt=&quot;User avatar: itsa-sh&quot; /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://github.com/dmmulroy&quot;&gt;&lt;img src=&quot;https:&amp;#x2F;&amp;#x2F;github.com&amp;#x2F;dmmulroy.png&quot; width=&quot;50px&quot; alt=&quot;User avatar: dmmulroy&quot; /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://github.com/timcole&quot;&gt;&lt;img src=&quot;https:&amp;#x2F;&amp;#x2F;github.com&amp;#x2F;timcole.png&quot; width=&quot;50px&quot; alt=&quot;User avatar: timcole&quot; /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://github.com/VLZH&quot;&gt;&lt;img src=&quot;https:&amp;#x2F;&amp;#x2F;github.com&amp;#x2F;VLZH.png&quot; width=&quot;50px&quot; alt=&quot;User avatar: VLZH&quot; /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://github.com/terasaka2k&quot;&gt;&lt;img src=&quot;https:&amp;#x2F;&amp;#x2F;github.com&amp;#x2F;terasaka2k.png&quot; width=&quot;50px&quot; alt=&quot;User avatar: terasaka2k&quot; /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://github.com/majudhu&quot;&gt;&lt;img src=&quot;https:&amp;#x2F;&amp;#x2F;github.com&amp;#x2F;majudhu.png&quot; width=&quot;50px&quot; alt=&quot;User avatar: majudhu&quot; /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;!-- sponsors-base --&gt;
&lt;/p&gt;

![Yaak API Client](https://yaak.app/static/screenshot.png)


## Features

Yaak is an offline-first API client designed to stay out of your way while giving you everything you need when you need it. 
Built with [Tauri](https://tauri.app), Rust, and React, it’s fast, lightweight, and private. No telemetry, no VC funding, and no cloud lock-in.  


### 🌐 Work with any API

- Import collections from Postman, Insomnia, OpenAPI, Swagger, or Curl.
- Send requests via REST, GraphQL, gRPC, WebSocket, or Server-Sent Events.
- Filter and inspect responses with JSONPath or XPath.

### 🔐 Stay secure
- Use OAuth 2.0, JWT, Basic Auth, or custom plugins for authentication.
- Secure sensitive values with encrypted secrets. 
- Store secrets in your OS keychain.

### ☁️ Organize &amp; collaborate
- Group requests into workspaces and nested folders.
- Use environment variables to switch between dev, staging, and prod.
- Mirror workspaces to your filesystem for versioning in Git or syncing with Dropbox.

### 🧩 Extend &amp; customize
- Insert dynamic values like UUIDs or timestamps with template tags.
- Pick from built-in themes or build your own.
- Create plugins to extend authentication, template tags, or the UI.


## Contribution Policy

Yaak is open source but only accepting contributions for bug fixes. To get started, 
visit [`DEVELOPMENT.md`](DEVELOPMENT.md) for tips on setting up your environment.

## Useful Resources

- [Feedback and Bug Reports](https://feedback.yaak.app)
- [Documentation](https://feedback.yaak.app/help)
- [Yaak vs Postman](https://yaak.app/alternatives/postman)
- [Yaak vs Bruno](https://yaak.app/alternatives/bruno)
- [Yaak vs Insomnia](https://yaak.app/alternatives/insomnia)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[ThinkInAIXYZ/deepchat]]></title>
            <link>https://github.com/ThinkInAIXYZ/deepchat</link>
            <guid>https://github.com/ThinkInAIXYZ/deepchat</guid>
            <pubDate>Mon, 20 Oct 2025 00:05:14 GMT</pubDate>
            <description><![CDATA[🐬DeepChat - A smart assistant that connects powerful AI to your personal world]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/ThinkInAIXYZ/deepchat">ThinkInAIXYZ/deepchat</a></h1>
            <p>🐬DeepChat - A smart assistant that connects powerful AI to your personal world</p>
            <p>Language: TypeScript</p>
            <p>Stars: 4,523</p>
            <p>Forks: 545</p>
            <p>Stars today: 203 stars today</p>
            <h2>README</h2><pre>&lt;p align=&#039;center&#039;&gt;
&lt;img src=&#039;./build/icon.png&#039; width=&quot;150&quot; height=&quot;150&quot; alt=&quot;DeepChat AI Assistant Icon&quot; /&gt;
&lt;/p&gt;

&lt;h1 align=&quot;center&quot;&gt;DeepChat - Powerful Open-Source Multi-Model AI Chat Platform&lt;/h1&gt;

&lt;p align=&quot;center&quot;&gt;DeepChat is a feature-rich open-source AI chat platform supporting multiple cloud and local large language models with powerful search enhancement and tool calling capabilities.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/ThinkInAIXYZ/deepchat/stargazers&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/ThinkInAIXYZ/deepchat&quot; alt=&quot;Stars Badge&quot;/&gt;&lt;/a&gt;
  &lt;a href=&quot;https://github.com/ThinkInAIXYZ/deepchat/network/members&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/forks/ThinkInAIXYZ/deepchat&quot; alt=&quot;Forks Badge&quot;/&gt;&lt;/a&gt;
  &lt;a href=&quot;https://github.com/ThinkInAIXYZ/deepchat/pulls&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues-pr/ThinkInAIXYZ/deepchat&quot; alt=&quot;Pull Requests Badge&quot;/&gt;&lt;/a&gt;
  &lt;a href=&quot;https://github.com/ThinkInAIXYZ/deepchat/issues&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues/ThinkInAIXYZ/deepchat&quot; alt=&quot;Issues Badge&quot;/&gt;&lt;/a&gt;
  &lt;a href=&quot;https://github.com/ThinkInAIXYZ/deepchat/blob/main/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/ThinkInAIXYZ/deepchat&quot; alt=&quot;License Badge&quot;/&gt;&lt;/a&gt;
  &lt;a href=&quot;https://deepwiki.com/ThinkInAIXYZ/deepchat&quot;&gt;&lt;img src=&quot;https://deepwiki.com/badge.svg&quot; alt=&quot;Ask DeepWiki&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;./README.zh.md&quot;&gt;中文&lt;/a&gt; / &lt;a href=&quot;./README.md&quot;&gt;English&lt;/a&gt; / &lt;a href=&quot;./README.jp.md&quot;&gt;日本語&lt;/a&gt;
&lt;/div&gt;

## 📑 Table of Contents

- [📑 Table of Contents](#-table-of-contents)
- [🚀 Project Introduction](#-project-introduction)
- [💡 Why Choose DeepChat](#-why-choose-deepchat)
- [🔥 Main Features](#-main-features)
- [🤖 Supported Model Providers](#-supported-model-providers)
  - [Compatible with any model provider in OpenAI/Gemini/Anthropic API format](#compatible-with-any-model-provider-in-openaigeminianthropic-api-format)
- [🔍 Use Cases](#-use-cases)
- [📦 Quick Start](#-quick-start)
  - [Download and Install](#download-and-install)
  - [Configure Models](#configure-models)
  - [Start Conversations](#start-conversations)
- [💻 Development Guide](#-development-guide)
  - [Install Dependencies](#install-dependencies)
  - [Start Development](#start-development)
  - [Build](#build)
- [👥 Community \&amp; Contribution](#-community--contribution)
- [⭐ Star History](#-star-history)
- [👨‍💻 Contributors](#-contributors)
- [📃 License](#-license)

## 🚀 Project Introduction

DeepChat is a powerful open-source AI chat platform providing a unified interface for interacting with various large language models. Whether you&#039;re using cloud APIs like OpenAI, Gemini, Anthropic, or locally deployed Ollama models, DeepChat delivers a smooth user experience.

As a cross-platform AI assistant application, DeepChat not only supports basic chat functionality but also offers advanced features such as search enhancement, tool calling, and multimodal interaction, making AI capabilities more accessible and efficient.

&lt;table align=&quot;center&quot;&gt;
  &lt;tr&gt;
    &lt;td align=&quot;center&quot; style=&quot;padding: 10px;&quot;&gt;
      &lt;img src=&#039;https://github.com/user-attachments/assets/5df4ed93-e4b5-4430-a1e3-bd9beba79e64&#039; alt=&quot;DeepChat Light Mode&quot; width=&quot;400&quot;/&gt;
      &lt;br/&gt;
    &lt;/td&gt;
    &lt;td align=&quot;center&quot; style=&quot;padding: 10px;&quot;&gt;
      &lt;img src=&#039;https://github.com/user-attachments/assets/79be4873-f80e-43a9-bfac-e1efb246ea99&#039; alt=&quot;DeepChat Dark Mode&quot; width=&quot;400&quot;/&gt;
      &lt;br/&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

## 💡 Why Choose DeepChat

Compared to other AI tools, DeepChat offers the following unique advantages:

- **Unified Multi-Model Management**: One application supports almost all mainstream LLMs, eliminating the need to switch between multiple apps
- **Seamless Local Model Integration**: Built-in Ollama support allows you to manage and use local models without command-line operations
- **Advanced Tool Calling**: Built-in MCP support enables code execution, web access, and other tools without additional configuration
- **Powerful Search Enhancement**: Support for multiple search engines makes AI responses more accurate and timely, providing non-standard web search paradigms that can be quickly customized
- **Privacy-Focused**: Local data storage and network proxy support reduce the risk of information leakage
- **Business-Friendly**: Embraces open source under the Apache License 2.0, suitable for both commercial and personal use

## 🔥 Main Features

- 🌐 **Multiple Cloud LLM Provider Support**: DeepSeek, OpenAI, SiliconFlow, Grok, Gemini, Anthropic, and more
- 🏠 **Local Model Deployment Support**:
  - Integrated Ollama with comprehensive management capabilities
  - Control and manage Ollama model downloads, deployments, and runs without command-line operations
- 🚀 **Rich and Easy-to-Use Chat Capabilities**
  - Complete Markdown rendering with code block rendering based on industry-leading [CodeMirror](https://codemirror.net/)
  - Multi-window + multi-tab architecture supporting parallel multi-session operations across all dimensions, use large models like using a browser, non-blocking experience brings excellent efficiency
  - Supports Artifacts rendering for diverse result presentation, significantly saving token consumption after MCP integration
  - Messages support retry to generate multiple variations; conversations can be forked freely, ensuring there&#039;s always a suitable line of thought
  - Supports rendering images, Mermaid diagrams, and other multi-modal content; supports GPT-4o, Gemini, Grok text-to-image capabilities
  - Supports highlighting external information sources like search results within the content
- 🔍 **Robust Search Extension Capabilities**
  - Built-in integration with leading search APIs like BoSearch, Brave Search via MCP mode, allowing the model to intelligently decide when to search
  - Supports mainstream search engines like Google, Bing, Baidu, and Sogou Official Accounts search by simulating user web browsing, enabling the LLM to read search engines like a human
  - Supports reading any search engine; simply configure a search assistant model to connect various search sources, whether internal networks, API-less engines, or vertical domain search engines, as information sources for the model
- 🔧 **Excellent MCP (Model Context Protocol) Support**
  - Complete support for the three core capabilities of Resources/Prompts/Tools in the MCP protocol
  - Supports semantic workflows, enabling more complex and intelligent automation by understanding the meaning and context of tasks.
  - Extremely user-friendly configuration interface
  - Aesthetically pleasing and clear tool call display
  - Detailed tool call debugging window with automatic formatting of tool parameters and return data
  - Built-in Node.js runtime environment; npx/node-like services require no extra configuration and work out-of-the-box
  - Supports StreamableHTTP/SSE/Stdio protocol Transports
  - Supports inMemory services with built-in utilities like code execution, web information retrieval, and file operations; ready for most common use cases out-of-the-box without secondary installation
  - Converts visual model capabilities into universally usable functions for any model via the built-in MCP service
- 💻 **Multi-Platform Support**: Windows, macOS, Linux
- 🎨 **Beautiful and User-Friendly Interface**, user-oriented design, meticulously themed light and dark modes
- 🔗 **Rich DeepLink Support**: Initiate conversations via links for seamless integration with other applications. Also supports one-click installation of MCP services for simplicity and speed
- 🚑 **Security-First Design**: Chat data and configuration data have reserved encryption interfaces and code obfuscation capabilities
- 🛡️ **Privacy Protection**: Supports screen projection hiding, network proxies, and other privacy protection methods to reduce the risk of information leakage
- 💰 **Business-Friendly**:
  - Embraces open source, based on the Apache License 2.0 protocol, enterprise use without worry
  - Enterprise integration requires only minimal configuration code changes to use reserved encrypted obfuscation security capabilities
  - Clear code structure, both model providers and MCP services are highly decoupled, can be freely customized with minimal cost
  - Reasonable architecture, data interaction and UI behavior separation, fully utilizing Electron&#039;s capabilities, rejecting simple web wrappers, excellent performance

For more details on how to use these features, see the [User Guide](./docs/user-guide.md).

## 🤖 Supported Model Providers

&lt;table&gt;
  &lt;tr align=&quot;center&quot;&gt;
    &lt;td&gt;
      &lt;img src=&quot;./src/renderer/src/assets/llm-icons/ollama.svg&quot; width=&quot;50&quot; height=&quot;50&quot; alt=&quot;Ollama Icon&quot;&gt;&lt;br/&gt;
      &lt;a href=&quot;https://ollama.com&quot;&gt;Ollama&lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;img src=&quot;./src/renderer/src/assets/llm-icons/deepseek-color.svg&quot; width=&quot;50&quot; height=&quot;50&quot; alt=&quot;Deepseek Icon&quot;&gt;&lt;br/&gt;
      &lt;a href=&quot;https://deepseek.com/&quot;&gt;Deepseek&lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;img src=&quot;./src/renderer/src/assets/llm-icons/ppio-color.svg&quot; width=&quot;50&quot; height=&quot;50&quot; alt=&quot;PPIO Icon&quot;&gt;&lt;br/&gt;
      &lt;a href=&quot;https://ppinfra.com/&quot;&gt;PPIO&lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;img src=&quot;./src/renderer/src/assets/llm-icons/alibabacloud-color.svg&quot; width=&quot;50&quot; height=&quot;50&quot; alt=&quot;DashScope Icon&quot;&gt;&lt;br/&gt;
      &lt;a href=&quot;https://www.aliyun.com/product/bailian&quot;&gt;DashScope&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr align=&quot;center&quot;&gt;
    &lt;td&gt;
      &lt;img src=&quot;./src/renderer/src/assets/llm-icons/doubao-color.svg&quot; width=&quot;50&quot; height=&quot;50&quot; alt=&quot;Doubao Icon&quot;&gt;&lt;br/&gt;
      &lt;a href=&quot;https://console.volcengine.com/ark/&quot;&gt;Doubao&lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;img src=&quot;./src/renderer/src/assets/llm-icons/minimax-color.svg&quot; width=&quot;50&quot; height=&quot;50&quot; alt=&quot;MiniMax Icon&quot;&gt;&lt;br/&gt;
      &lt;a href=&quot;https://platform.minimaxi.com/&quot;&gt;MiniMax&lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;img src=&quot;./src/renderer/src/assets/llm-icons/fireworks-color.svg&quot; width=&quot;50&quot; height=&quot;50&quot; alt=&quot;Fireworks Icon&quot;&gt;&lt;br/&gt;
      &lt;a href=&quot;https://fireworks.ai/&quot;&gt;Fireworks&lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;img src=&quot;./src/renderer/src/assets/llm-icons/302ai.svg&quot; width=&quot;50&quot; height=&quot;50&quot; alt=&quot;302.AI Icon&quot;&gt;&lt;br/&gt;
      &lt;a href=&quot;https://302.ai/&quot;&gt;302.AI&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr align=&quot;center&quot;&gt;
    &lt;td&gt;
      &lt;img src=&quot;./src/renderer/src/assets/llm-icons/openai.svg&quot; width=&quot;50&quot; height=&quot;50&quot; alt=&quot;OpenAI Icon&quot;&gt;&lt;br/&gt;
      &lt;a href=&quot;https://openai.com/&quot;&gt;OpenAI&lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;img src=&quot;./src/renderer/src/assets/llm-icons/gemini-color.svg&quot; width=&quot;50&quot; height=&quot;50&quot; alt=&quot;Gemini Icon&quot;&gt;&lt;br/&gt;
      &lt;a href=&quot;https://gemini.google.com/&quot;&gt;Gemini&lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;img src=&quot;./src/renderer/src/assets/llm-icons/github.svg&quot; width=&quot;50&quot; height=&quot;50&quot; alt=&quot;GitHub Models Icon&quot;&gt;&lt;br/&gt;
      &lt;a href=&quot;https://github.com/marketplace/models&quot;&gt;GitHub Models&lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;img src=&quot;./src/renderer/src/assets/llm-icons/moonshot.svg&quot; width=&quot;50&quot; height=&quot;50&quot; alt=&quot;Moonshot Icon&quot;&gt;&lt;br/&gt;
      &lt;a href=&quot;https://moonshot.ai/&quot;&gt;Moonshot&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr align=&quot;center&quot;&gt;
    &lt;td&gt;
      &lt;img src=&quot;./src/renderer/src/assets/llm-icons/openrouter.svg&quot; width=&quot;50&quot; height=&quot;50&quot; alt=&quot;OpenRouter Icon&quot;&gt;&lt;br/&gt;
      &lt;a href=&quot;https://openrouter.ai/&quot;&gt;OpenRouter&lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;img src=&quot;./src/renderer/src/assets/llm-icons/azure-color.svg&quot; width=&quot;50&quot; height=&quot;50&quot; alt=&quot;Azure OpenAI Icon&quot;&gt;&lt;br/&gt;
      &lt;a href=&quot;https://azure.microsoft.com/en-us/products/ai-services/openai-service&quot;&gt;Azure OpenAI&lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;img src=&quot;./src/renderer/src/assets/llm-icons/qiniu.svg&quot; width=&quot;50&quot; height=&quot;50&quot; alt=&quot;Qiniu Icon&quot;&gt;&lt;br/&gt;
      &lt;a href=&quot;https://www.qiniu.com/products/ai-token-api&quot;&gt;Qiniu&lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;img src=&quot;./src/renderer/src/assets/llm-icons/grok.svg&quot; width=&quot;50&quot; height=&quot;50&quot; alt=&quot;Grok Icon&quot;&gt;&lt;br/&gt;
      &lt;a href=&quot;https://x.ai/&quot;&gt;Grok&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr align=&quot;center&quot;&gt;
    &lt;td&gt;
      &lt;img src=&quot;./src/renderer/src/assets/llm-icons/zhipu-color.svg&quot; width=&quot;50&quot; height=&quot;50&quot; alt=&quot;Zhipu Icon&quot;&gt;&lt;br/&gt;
      &lt;a href=&quot;https://open.bigmodel.cn/&quot;&gt;Zhipu&lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;img src=&quot;./src/renderer/src/assets/llm-icons/siliconcloud.svg&quot; width=&quot;50&quot; height=&quot;50&quot; alt=&quot;SiliconFlow Icon&quot;&gt;&lt;br/&gt;
      &lt;a href=&quot;https://www.siliconflow.cn/&quot;&gt;SiliconFlow&lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;img src=&quot;./src/renderer/src/assets/llm-icons/aihubmix.png&quot; width=&quot;50&quot; height=&quot;50&quot; alt=&quot;AIHubMix Icon&quot;&gt;&lt;br/&gt;
      &lt;a href=&quot;https://aihubmix.com/&quot;&gt;AIHubMix&lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;img src=&quot;./src/renderer/src/assets/llm-icons/hunyuan-color.svg&quot; width=&quot;50&quot; height=&quot;50&quot; alt=&quot;Hunyuan Icon&quot;&gt;&lt;br/&gt;
      &lt;a href=&quot;https://cloud.tencent.com/product/hunyuan&quot;&gt;Hunyuan&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr align=&quot;center&quot;&gt;
    &lt;td&gt;
      &lt;img src=&quot;./src/renderer/src/assets/llm-icons/lmstudio.svg&quot; width=&quot;50&quot; height=&quot;50&quot; alt=&quot;LM Studio Icon&quot;&gt;&lt;br/&gt;
      &lt;a href=&quot;https://lmstudio.ai/&quot;&gt;LM Studio&lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;img src=&quot;./src/renderer/src/assets/llm-icons/groq.svg&quot; width=&quot;50&quot; height=&quot;50&quot; alt=&quot;Groq Icon&quot;&gt;&lt;br/&gt;
      &lt;a href=&quot;https://groq.com/&quot;&gt;Groq&lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;&lt;/td&gt;
    &lt;td&gt;&lt;/td&gt;
  &lt;/tr&gt;

&lt;/table&gt;

### Compatible with any model provider in OpenAI/Gemini/Anthropic API format

## 🔍 Use Cases

DeepChat is suitable for various AI application scenarios:

- **Daily Assistant**: Answering questions, providing suggestions, assisting with writing and creation
- **Development Aid**: Code generation, debugging, technical problem solving
- **Learning Tool**: Concept explanation, knowledge exploration, learning guidance
- **Content Creation**: Copywriting, creative inspiration, content optimization
- **Data Analysis**: Data interpretation, chart generation, report writing

## 📦 Quick Start

### Download and Install

Download the latest version for your system from the [GitHub Releases](https://github.com/ThinkInAIXYZ/deepchat/releases) page:

- Windows: `.exe` installation file
- macOS: `.dmg` installation file
- Linux: `.AppImage` or `.deb` installation file

### Configure Models

1. Launch the DeepChat application
2. Click the settings icon
3. Select the &quot;Model Providers&quot; tab
4. Add your API keys or configure local Ollama

### Start Conversations

1. Click the &quot;+&quot; button to create a new conversation
2. Select the model you want to use
3. Start communicating with your AI assistant

For a comprehensive guide on getting started and using all features, please refer to the [User Guide](./docs/user-guide.md).

## 💻 Development Guide

Please read the [Contribution Guidelines](./CONTRIBUTING.md)

Windows and Linux are packaged by GitHub Action.
For Mac-related signing and packaging, please refer to the [Mac Release Guide](https://github.com/ThinkInAIXYZ/deepchat/wiki/Mac-Release-Guide).

### Install Dependencies

```bash
$ pnpm install
$ pnpm run installRuntime
# if got err: No module named &#039;distutils&#039;
$ pip install setuptools
```

* For Windows: To allow non-admin users to create symlinks and hardlinks, enable `Developer Mode` in Settings or use an administrator account. Otherwise `pnpm` ops will fail.

### Start Development

```bash
$ pnpm run dev
```

### Build

```bash
# For Windows
$ pnpm run build:win

# For macOS
$ pnpm run build:mac

# For Linux
$ pnpm run build:linux

# Specify architecture packaging
$ pnpm run build:win:x64
$ pnpm run build:win:arm64
$ pnpm run build:mac:x64
$ pnpm run build:mac:arm64
$ pnpm run build:linux:x64
$ pnpm run build:linux:arm64
```

For a more detailed guide on development, project structure, and architecture, please see the [Developer Guide](./docs/developer-guide.md).

## 👥 Community &amp; Contribution

DeepChat is an active open-source community project, and we welcome various forms of contribution:

- 🐛 [Report issues](https://github.com/ThinkInAIXYZ/deepchat/issues)
- 💡 [Submit feature suggestions](https://github.com/ThinkInAIXYZ/deepchat/issues)
- 🔧 [Submit code improvements](https://github.com/ThinkInAIXYZ/deepchat/pulls)
- 📚 [Improve documentation](https://github.com/ThinkInAIXYZ/deepchat/wiki)
- 🌍 [Help with translation](https://github.com/ThinkInAIXYZ/deepchat/tree/main/locales)

Check the [Contribution Guidelines](./CONTRIBUTING.md) to learn more about ways to participate in the project.

## ⭐ Star History

[![Star History Chart](https://api.star-history.com/svg?repos=ThinkInAIXYZ/deepchat&amp;type=Timeline)](https://www.star-history.com/#ThinkInAIXYZ/deepchat&amp;Timeline)

## 👨‍💻 Contributors

Thank you for considering contributing to deepchat! The contribution guide can be found in the [Contribution Guidelines](./CONTRIBUTING.md).

&lt;a href=&quot;https://openomy.com/thinkinaixyz/deepchat&quot; target=&quot;_blank&quot; style=&quot;display: block; width: 100%;&quot; align=&quot;center&quot;&gt;
  &lt;img src=&quot;https://openomy.com/svg?repo=thinkinaixyz/deepchat&amp;chart=bubble&amp;latestMonth=3&quot; target=&quot;_blank&quot; alt=&quot;Contribution Leaderboard&quot; style=&quot;display: block; width: 100%;&quot; /&gt;
&lt;/a&gt;

## 🙏🏻 Thanks

This project is built with the help of these awesome libraries:

- [Vue](https://vuejs.org/)
- [Electron](https://www.electronjs.org/)
- [Electron-Vite](https://electron-vite.org/)
- [oxlint](https://github.com/oxc-project/oxc)

## 📃 License

[LICENSE](./LICENSE)

</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[huggingface/chat-ui]]></title>
            <link>https://github.com/huggingface/chat-ui</link>
            <guid>https://github.com/huggingface/chat-ui</guid>
            <pubDate>Mon, 20 Oct 2025 00:05:13 GMT</pubDate>
            <description><![CDATA[Open source codebase powering the HuggingChat app]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/huggingface/chat-ui">huggingface/chat-ui</a></h1>
            <p>Open source codebase powering the HuggingChat app</p>
            <p>Language: TypeScript</p>
            <p>Stars: 9,398</p>
            <p>Forks: 1,446</p>
            <p>Stars today: 24 stars today</p>
            <h2>README</h2><pre># Chat UI

![Chat UI repository thumbnail](https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/chat-ui/chat-ui-2026.png)

A chat interface for LLMs. It is a SvelteKit app and it powers the [HuggingChat app on hf.co/chat](https://huggingface.co/chat).

0. [Quickstart](#quickstart)
1. [Database Options](#database-options)
2. [Launch](#launch)
3. [Optional Docker Image](#optional-docker-image)
4. [Extra parameters](#extra-parameters)
5. [Building](#building)

&gt; [!NOTE]
&gt; Chat UI only supports OpenAI-compatible APIs via `OPENAI_BASE_URL` and the `/models` endpoint. Provider-specific integrations (legacy `MODELS` env var, GGUF discovery, embeddings, web-search helpers, etc.) are removed, but any service that speaks the OpenAI protocol (llama.cpp server, Ollama, OpenRouter, etc. will work by default).

&gt; [!NOTE]
&gt; The old version is still available on the [legacy branch](https://github.com/huggingface/chat-ui/tree/legacy)

## Quickstart

Chat UI speaks to OpenAI-compatible APIs only. The fastest way to get running is with the Hugging Face Inference Providers router plus your personal Hugging Face access token.

**Step 1 – Create `.env.local`:**

```env
OPENAI_BASE_URL=https://router.huggingface.co/v1
OPENAI_API_KEY=hf_************************
# Fill in once you pick a database option below
MONGODB_URL=
```

`OPENAI_API_KEY` can come from any OpenAI-compatible endpoint you plan to call. Pick the combo that matches your setup and drop the values into `.env.local`:

| Provider                                      | Example `OPENAI_BASE_URL`          | Example key env                                                         |
| --------------------------------------------- | ---------------------------------- | ----------------------------------------------------------------------- |
| Hugging Face Inference Providers router       | `https://router.huggingface.co/v1` | `OPENAI_API_KEY=hf_xxx` (or `HF_TOKEN` legacy alias)                    |
| llama.cpp server (`llama.cpp --server --api`) | `http://127.0.0.1:8080/v1`         | `OPENAI_API_KEY=sk-local-demo` (any string works; llama.cpp ignores it) |
| Ollama (with OpenAI-compatible bridge)        | `http://127.0.0.1:11434/v1`        | `OPENAI_API_KEY=ollama`                                                 |
| OpenRouter                                    | `https://openrouter.ai/api/v1`     | `OPENAI_API_KEY=sk-or-v1-...`                                           |
| Poe                                           | `https://api.poe.com/v1`           | `OPENAI_API_KEY=pk_...`                                                 |

Check the root [`.env` template](./.env) for the full list of optional variables you can override.

**Step 2 – Choose where MongoDB lives:** Either provision a managed cluster (for example MongoDB Atlas) or run a local container. Both approaches are described in [Database Options](#database-options). After you have the URI, drop it into `MONGODB_URL` (and, if desired, set `MONGODB_DB_NAME`).

**Step 3 – Install and launch the dev server:**

```bash
git clone https://github.com/huggingface/chat-ui
cd chat-ui
npm install
npm run dev -- --open
```

You now have Chat UI running against the Hugging Face router without needing to host MongoDB yourself.

## Database Options

Chat history, users, settings, files, and stats all live in MongoDB. You can point Chat UI at any MongoDB 6/7 deployment.

### MongoDB Atlas (managed)

1. Create a free cluster at [mongodb.com](https://www.mongodb.com/pricing).
2. Add your IP (or `0.0.0.0/0` for development) to the network access list.
3. Create a database user and copy the connection string.
4. Paste that string into `MONGODB_URL` in `.env.local`. Keep the default `MONGODB_DB_NAME=chat-ui` or change it per environment.

Atlas keeps MongoDB off your laptop, which is ideal for teams or cloud deployments.

### Local MongoDB (container)

If you prefer to run MongoDB locally:

```bash
docker run -d -p 27017:27017 --name mongo-chatui mongo:latest
```

Then set `MONGODB_URL=mongodb://localhost:27017` in `.env.local`. You can also supply `MONGO_STORAGE_PATH` if you want Chat UI’s fallback in-memory server to persist under a specific folder.

## Launch

After configuring your environment variables, start Chat UI with:

```bash
npm install
npm run dev
```

The dev server listens on `http://localhost:5173` by default. Use `npm run build` / `npm run preview` for production builds.

## Optional Docker Image

Prefer containerized setup? You can run everything in one container as long as you supply a MongoDB URI (local or hosted):

```bash
docker run \
  -p 3000 \
  -e MONGODB_URL=mongodb://host.docker.internal:27017 \
  -e OPENAI_BASE_URL=https://router.huggingface.co/v1 \
  -e OPENAI_API_KEY=hf_*** \
  -v db:/data \
  ghcr.io/huggingface/chat-ui-db:latest
```

`host.docker.internal` lets the container reach a MongoDB instance on your host machine; swap it for your Atlas URI if you use the hosted option. All environment variables accepted in `.env.local` can be provided as `-e` flags.

## Extra parameters

### Theming

You can use a few environment variables to customize the look and feel of chat-ui. These are by default:

```env
PUBLIC_APP_NAME=ChatUI
PUBLIC_APP_ASSETS=chatui
PUBLIC_APP_DESCRIPTION=&quot;Making the community&#039;s best AI chat models available to everyone.&quot;
PUBLIC_APP_DATA_SHARING=
```

- `PUBLIC_APP_NAME` The name used as a title throughout the app.
- `PUBLIC_APP_ASSETS` Is used to find logos &amp; favicons in `static/$PUBLIC_APP_ASSETS`, current options are `chatui` and `huggingchat`.
- `PUBLIC_APP_DATA_SHARING` Can be set to 1 to add a toggle in the user settings that lets your users opt-in to data sharing with models creator.

### Models

This build does not use the `MODELS` env var or GGUF discovery. Configure models via `OPENAI_BASE_URL` only; Chat UI will fetch `${OPENAI_BASE_URL}/models` and populate the list automatically. Authorization uses `OPENAI_API_KEY` (preferred). `HF_TOKEN` remains a legacy alias.

### LLM Router (Optional)

Chat UI can perform client-side routing [katanemo/Arch-Router-1.5B](https://huggingface.co/katanemo/Arch-Router-1.5B) as the routing model without running a separate router service. The UI exposes a virtual model alias called &quot;Omni&quot; (configurable) that, when selected, chooses the best route/model for each message.

- Provide a routes policy JSON via `LLM_ROUTER_ROUTES_PATH`. No sample file ships with this branch, so you must point the variable to a JSON array you create yourself (for example, commit one in your project like `config/routes.chat.json`). Each route entry needs `name`, `description`, `primary_model`, and optional `fallback_models`.
- Configure the Arch router selection endpoint with `LLM_ROUTER_ARCH_BASE_URL` (OpenAI-compatible `/chat/completions`) and `LLM_ROUTER_ARCH_MODEL` (e.g. `router/omni`). The Arch call reuses `OPENAI_API_KEY` for auth.
- Map `other` to a concrete route via `LLM_ROUTER_OTHER_ROUTE` (default: `casual_conversation`). If Arch selection fails, calls fall back to `LLM_ROUTER_FALLBACK_MODEL`.
- Selection timeout can be tuned via `LLM_ROUTER_ARCH_TIMEOUT_MS` (default 10000).
- Omni alias configuration: `PUBLIC_LLM_ROUTER_ALIAS_ID` (default `omni`), `PUBLIC_LLM_ROUTER_DISPLAY_NAME` (default `Omni`), and optional `PUBLIC_LLM_ROUTER_LOGO_URL`.

When you select Omni in the UI, Chat UI will:

- Call the Arch endpoint once (non-streaming) to pick the best route for the last turns.
- Emit RouterMetadata immediately (route and actual model used) so the UI can display it.
- Stream from the selected model via your configured `OPENAI_BASE_URL`. On errors, it tries route fallbacks.

## Building

To create a production version of your app:

```bash
npm run build
```

You can preview the production build with `npm run preview`.

&gt; To deploy your app, you may need to install an [adapter](https://kit.svelte.dev/docs/adapters) for your target environment.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[twentyhq/twenty]]></title>
            <link>https://github.com/twentyhq/twenty</link>
            <guid>https://github.com/twentyhq/twenty</guid>
            <pubDate>Mon, 20 Oct 2025 00:05:12 GMT</pubDate>
            <description><![CDATA[Building a modern alternative to Salesforce, powered by the community.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/twentyhq/twenty">twentyhq/twenty</a></h1>
            <p>Building a modern alternative to Salesforce, powered by the community.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 36,147</p>
            <p>Forks: 4,376</p>
            <p>Stars today: 29 stars today</p>
            <h2>README</h2><pre>[![Hacktoberfest 2025](packages/twenty-website/public/images/readme/hacktoberfest2025.png)](https://twentycrm.notion.site/)

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.twenty.com&quot;&gt;
    &lt;img src=&quot;./packages/twenty-website/public/images/core/logo.svg&quot; width=&quot;100px&quot; alt=&quot;Twenty logo&quot; /&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;h2 align=&quot;center&quot; &gt;The #1 Open-Source CRM &lt;/h2&gt;

&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://twenty.com&quot;&gt;🌐 Website&lt;/a&gt; · &lt;a href=&quot;https://twenty.com/developers&quot;&gt;📚 Documentation&lt;/a&gt; · &lt;a href=&quot;https://github.com/orgs/twentyhq/projects/1&quot;&gt;&lt;img src=&quot;./packages/twenty-website/public/images/readme/planner-icon.svg&quot; width=&quot;12&quot; height=&quot;12&quot;/&gt; Roadmap &lt;/a&gt; · &lt;a href=&quot;https://discord.gg/cx5n4Jzs57&quot;&gt;&lt;img src=&quot;./packages/twenty-website/public/images/readme/discord-icon.svg&quot; width=&quot;12&quot; height=&quot;12&quot;/&gt; Discord&lt;/a&gt; · &lt;a href=&quot;https://www.figma.com/file/xt8O9mFeLl46C5InWwoMrN/Twenty&quot;&gt;&lt;img src=&quot;./packages/twenty-website/public/images/readme/figma-icon.png&quot;  width=&quot;12&quot; height=&quot;12&quot;/&gt;  Figma&lt;/a&gt;&lt;/p&gt; 
&lt;br /&gt;


&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.twenty.com&quot;&gt;
    &lt;picture&gt;
      &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://raw.githubusercontent.com/twentyhq/twenty/refs/heads/main/packages/twenty-website/public/images/readme/github-cover-dark.png&quot; /&gt;
      &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://raw.githubusercontent.com/twentyhq/twenty/refs/heads/main/packages/twenty-website/public/images/readme/github-cover-light.png&quot; /&gt;
      &lt;img src=&quot;./packages/twenty-website/public/images/readme/github-cover-light.png&quot; alt=&quot;Cover&quot; /&gt;
    &lt;/picture&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;br /&gt;

# Installation 

See:  
🚀 [Self-hosting](https://twenty.com/developers/section/self-hosting)  
🖥️ [Local Setup](https://twenty.com/developers/local-setup)  

# Does the world need another CRM?

We built Twenty for three reasons:

**CRMs are too expensive, and users are trapped.** Companies use locked-in customer data to hike prices. It shouldn&#039;t be that way.

**A fresh start is required to build a better experience.** We can learn from past mistakes and craft a cohesive experience inspired by new UX patterns from tools like Notion, Airtable or Linear.

**We believe in Open-source and community.** Hundreds of developers are already building Twenty together. Once we have plugin capabilities, a whole ecosystem will grow around it.

&lt;br /&gt;

# What You Can Do With Twenty

Please feel free to flag any specific needs you have by creating an issue.   

Below are a few features we have implemented to date:

+ [Personalize layouts with filters, sort, group by, kanban and table views](#personalize-layouts-with-filters-sort-group-by-kanban-and-table-views)
+ [Customize your objects and fields](#customize-your-objects-and-fields)
+ [Create and manage permissions with custom roles](#create-and-manage-permissions-with-custom-roles)
+ [Automate workflow with triggers and actions](#automate-workflow-with-triggers-and-actions)
+ [Emails, calendar events, files, and more](#emails-calendar-events-files-and-more)


## Personalize layouts with filters, sort, group by, kanban and table views

&lt;p align=&quot;center&quot;&gt;
    &lt;picture&gt;
      &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://raw.githubusercontent.com/twentyhq/twenty/refs/heads/main/packages/twenty-website/public/images/readme/views-dark.png&quot; /&gt;
      &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://raw.githubusercontent.com/twentyhq/twenty/refs/heads/main/packages/twenty-website/public/images/readme/views-light.png&quot; /&gt;
      &lt;img src=&quot;./packages/twenty-website/public/images/readme/views-light.png&quot; alt=&quot;Companies Kanban Views&quot; /&gt;
    &lt;/picture&gt;
&lt;/p&gt;

## Customize your objects and fields

&lt;p align=&quot;center&quot;&gt;
    &lt;picture&gt;
      &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://raw.githubusercontent.com/twentyhq/twenty/refs/heads/main/packages/twenty-website/public/images/readme/data-model-dark.png&quot; /&gt;
      &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://raw.githubusercontent.com/twentyhq/twenty/refs/heads/main/packages/twenty-website/public/images/readme/data-model-light.png&quot; /&gt;
      &lt;img src=&quot;./packages/twenty-website/public/images/readme/data-model-light.png&quot; alt=&quot;Setting Custom Objects&quot; /&gt;
    &lt;/picture&gt;
&lt;/p&gt;

## Create and manage permissions with custom roles

&lt;p align=&quot;center&quot;&gt;
    &lt;picture&gt;
      &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://raw.githubusercontent.com/twentyhq/twenty/refs/heads/main/packages/twenty-website/public/images/readme/permissions-dark.png&quot; /&gt;
      &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://raw.githubusercontent.com/twentyhq/twenty/refs/heads/main/packages/twenty-website/public/images/readme/permissions-light.png&quot; /&gt;
      &lt;img src=&quot;./packages/twenty-website/public/images/readme/permissions-light.png&quot; alt=&quot;Permissions&quot; /&gt;
    &lt;/picture&gt;
&lt;/p&gt;

## Automate workflow with triggers and actions

&lt;p align=&quot;center&quot;&gt;
    &lt;picture&gt;
      &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://raw.githubusercontent.com/twentyhq/twenty/refs/heads/main/packages/twenty-website/public/images/readme/workflows-dark.png&quot; /&gt;
      &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://raw.githubusercontent.com/twentyhq/twenty/refs/heads/main/packages/twenty-website/public/images/readme/workflows-light.png&quot; /&gt;
      &lt;img src=&quot;./packages/twenty-website/public/images/readme/workflows-light.png&quot; alt=&quot;Workflows&quot; /&gt;
    &lt;/picture&gt;
&lt;/p&gt;

## Emails, calendar events, files, and more

&lt;p align=&quot;center&quot;&gt;
    &lt;picture&gt;
      &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://raw.githubusercontent.com/twentyhq/twenty/refs/heads/main/packages/twenty-website/public/images/readme/plus-other-features-dark.png&quot; /&gt;
      &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://raw.githubusercontent.com/twentyhq/twenty/refs/heads/main/packages/twenty-website/public/images/readme/plus-other-features-light.png&quot; /&gt;
      &lt;img src=&quot;./packages/twenty-website/public/images/readme/plus-other-features-light.png&quot; alt=&quot;Other Features&quot; /&gt;
    &lt;/picture&gt;
&lt;/p&gt;

&lt;br /&gt;

# Stack
- [TypeScript](https://www.typescriptlang.org/)
- [Nx](https://nx.dev/)
- [NestJS](https://nestjs.com/), with [BullMQ](https://bullmq.io/), [PostgreSQL](https://www.postgresql.org/), [Redis](https://redis.io/)
- [React](https://reactjs.org/), with [Recoil](https://recoiljs.org/), [Emotion](https://emotion.sh/) and [Lingui](https://lingui.dev/)



# Thanks

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.chromatic.com/&quot;&gt;&lt;img src=&quot;./packages/twenty-website/public/images/readme/chromatic.png&quot; height=&quot;30&quot; alt=&quot;Chromatic&quot; /&gt;&lt;/a&gt;
  &lt;a href=&quot;https://greptile.com&quot;&gt;&lt;img src=&quot;./packages/twenty-website/public/images/readme/greptile.png&quot; height=&quot;30&quot; alt=&quot;Greptile&quot; /&gt;&lt;/a&gt;
  &lt;a href=&quot;https://sentry.io/&quot;&gt;&lt;img src=&quot;./packages/twenty-website/public/images/readme/sentry.png&quot; height=&quot;30&quot; alt=&quot;Sentry&quot; /&gt;&lt;/a&gt;
  &lt;a href=&quot;https://crowdin.com/&quot;&gt;&lt;img src=&quot;./packages/twenty-website/public/images/readme/crowdin.png&quot; height=&quot;30&quot; alt=&quot;Crowdin&quot; /&gt;&lt;/a&gt;
&lt;/p&gt;

  Thanks to these amazing services that we use and recommend for UI testing (Chromatic), code review (Greptile), catching bugs (Sentry) and translating (Crowdin).


# Join the Community

- Star the repo
- Subscribe to releases (watch -&gt; custom -&gt; releases)
- Follow us on [Twitter](https://twitter.com/twentycrm) or [LinkedIn](https://www.linkedin.com/company/twenty/) 
- Join our [Discord](https://discord.gg/cx5n4Jzs57)
- Improve translations on [Crowdin](https://twenty.crowdin.com/twenty) 
- [Contributions](https://github.com/twentyhq/twenty/contribute) are, of course, most welcome! 
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[kamranahmedse/developer-roadmap]]></title>
            <link>https://github.com/kamranahmedse/developer-roadmap</link>
            <guid>https://github.com/kamranahmedse/developer-roadmap</guid>
            <pubDate>Mon, 20 Oct 2025 00:05:11 GMT</pubDate>
            <description><![CDATA[Interactive roadmaps, guides and other educational content to help developers grow in their careers.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/kamranahmedse/developer-roadmap">kamranahmedse/developer-roadmap</a></h1>
            <p>Interactive roadmaps, guides and other educational content to help developers grow in their careers.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 341,371</p>
            <p>Forks: 43,164</p>
            <p>Stars today: 199 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[elie222/inbox-zero]]></title>
            <link>https://github.com/elie222/inbox-zero</link>
            <guid>https://github.com/elie222/inbox-zero</guid>
            <pubDate>Mon, 20 Oct 2025 00:05:10 GMT</pubDate>
            <description><![CDATA[The world's best AI personal assistant for email. Open source app to help you reach inbox zero fast.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/elie222/inbox-zero">elie222/inbox-zero</a></h1>
            <p>The world's best AI personal assistant for email. Open source app to help you reach inbox zero fast.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 9,064</p>
            <p>Forks: 1,047</p>
            <p>Stars today: 19 stars today</p>
            <h2>README</h2><pre>[![](apps/web/app/opengraph-image.png)](https://www.getinboxzero.com)

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.getinboxzero.com&quot;&gt;
    &lt;h1 align=&quot;center&quot;&gt;Inbox Zero - your 24/7 AI email assistant&lt;/h1&gt;
  &lt;/a&gt;
  &lt;p align=&quot;center&quot;&gt;
    Organizes your inbox, pre-drafts replies, and tracks follow‑ups - so you reach inbox zero faster. Open source alternative to Fyxer, but more customisable and secure.
    &lt;br /&gt;
    &lt;a href=&quot;https://www.getinboxzero.com&quot;&gt;Website&lt;/a&gt;
    ·
    &lt;a href=&quot;https://www.getinboxzero.com/discord&quot;&gt;Discord&lt;/a&gt;
    ·
    &lt;a href=&quot;https://github.com/elie222/inbox-zero/issues&quot;&gt;Issues&lt;/a&gt;
  &lt;/p&gt;
&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;

![Stars](https://img.shields.io/github/stars/elie222/inbox-zero?labelColor=black&amp;style=for-the-badge&amp;color=2563EB)
![Forks](https://img.shields.io/github/forks/elie222/inbox-zero?labelColor=black&amp;style=for-the-badge&amp;color=2563EB)

&lt;a href=&quot;https://trendshift.io/repositories/6400&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://trendshift.io/api/badge/repositories/6400&quot; alt=&quot;elie222%2Finbox-zero | Trendshift&quot; style=&quot;width: 250px; height: 55px;&quot; width=&quot;250&quot; height=&quot;55&quot;/&gt;&lt;/a&gt;

[![Vercel OSS Program](https://vercel.com/oss/program-badge.svg)](https://vercel.com/oss)

&lt;/div&gt;

## Mission

To help you spend less time in your inbox, so you can focus on what matters.

&lt;br /&gt;

[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/clone?repository-url=https%3A%2F%2Fgithub.com%2Felie222%2Finbox-zero&amp;env=AUTH_SECRET,GOOGLE_CLIENT_ID,GOOGLE_CLIENT_SECRET,MICROSOFT_CLIENT_ID,MICROSOFT_CLIENT_SECRET,EMAIL_ENCRYPT_SECRET,EMAIL_ENCRYPT_SALT,UPSTASH_REDIS_URL,UPSTASH_REDIS_TOKEN,GOOGLE_PUBSUB_TOPIC_NAME,DATABASE_URL,NEXT_PUBLIC_BASE_URL)

## Features

- **AI Personal Assistant:** Organizes your inbox and pre-drafts replies in your tone and style.
- **Cursor Rules for email:** Explain in plain English how your AI should handle your inbox.
- **Reply Zero:** Track emails to reply to and those awaiting responses.
- **Smart Categories:** Automatically categorize every sender.
- **Bulk Unsubscriber:** One-click unsubscribe and archive emails you never read.
- **Cold Email Blocker:** Auto‑block cold emails.
- **Email Analytics:** Track your activity and trends over time.

Learn more in our [docs](https://docs.getinboxzero.com).

## Feature Screenshots

| ![AI Assistant](.github/screenshots/email-assistant.png) |        ![Reply Zero](.github/screenshots/reply-zero.png)        |
| :------------------------------------------------------: | :-------------------------------------------------------------: |
|                      _AI Assistant_                      |                          _Reply Zero_                           |
|  ![Gmail Client](.github/screenshots/email-client.png)   | ![Bulk Unsubscriber](.github/screenshots/bulk-unsubscriber.png) |
|                      _Gmail client_                      |                       _Bulk Unsubscriber_                       |

## Demo Video

[![Inbox Zero demo](/video-thumbnail.png)](http://www.youtube.com/watch?v=hfvKvTHBjG0)

## Built with

- [Next.js](https://nextjs.org/)
- [Tailwind CSS](https://tailwindcss.com/)
- [shadcn/ui](https://ui.shadcn.com/)
- [Prisma](https://www.prisma.io/)
- [Upstash](https://upstash.com/)
- [Turborepo](https://turbo.build/)

## Star History

[![Star History Chart](https://api.star-history.com/svg?repos=elie222/inbox-zero&amp;type=Date)](https://www.star-history.com/#elie222/inbox-zero&amp;Date)

## Feature Requests

To request a feature open a [GitHub issue](https://github.com/elie222/inbox-zero/issues), or join our [Discord](https://www.getinboxzero.com/discord).

## Getting Started for Developers

We offer a hosted version of Inbox Zero at [https://getinboxzero.com](https://getinboxzero.com). To self-host follow the steps below.

### Self-Hosting with Docker on VPS

For a complete guide on deploying Inbox Zero to a VPS using Docker, see our [Docker Self-Hosting Guide](docs/hosting/docker.md).

### Setup

[Here&#039;s a video](https://youtu.be/hVQENQ4WT2Y) on how to set up the project. It covers the same steps mentioned in this document. But goes into greater detail on setting up the external services.

### Requirements

- [Node.js](https://nodejs.org/en/) &gt;= 18.0.0
- [pnpm](https://pnpm.io/) &gt;= 8.6.12
- [Docker desktop](https://www.docker.com/products/docker-desktop/) (recommended but optional)

Make sure you have the above installed before starting.

The external services that are required are (detailed setup instructions below):

- [Google OAuth](https://console.cloud.google.com/apis/credentials)
- [Google PubSub](https://console.cloud.google.com/cloudpubsub/topic/list)

### Updating .env file: secrets

Create your own `.env` file from the example supplied:

```bash
cp apps/web/.env.example apps/web/.env
cd apps/web
pnpm install
```

Set the environment variables in the newly created `.env`. You can see a list of required variables in: `apps/web/env.ts`.

The required environment variables:

- `AUTH_SECRET` -- can be any random string (try using `openssl rand -hex 32` for a quick secure random string)
- `EMAIL_ENCRYPT_SECRET` -- Secret key for encrypting OAuth tokens (try using `openssl rand -hex 32` for a secure key)
- `EMAIL_ENCRYPT_SALT` -- Salt for encrypting OAuth tokens (try using `openssl rand -hex 16` for a secure salt)


- `NEXT_PUBLIC_BASE_URL` -- The URL where your app is hosted (e.g., `http://localhost:3000` for local development or `https://yourdomain.com` for production).
- `INTERNAL_API_KEY` -- A secret key for internal API calls (try using `openssl rand -hex 32` for a secure key)

- `UPSTASH_REDIS_URL` -- Redis URL from Upstash. (can be empty if you are using Docker Compose)
- `UPSTASH_REDIS_TOKEN` -- Redis token from Upstash. (or specify your own random string if you are using Docker Compose)

When using Vercel with Fluid Compute turned off, you should set `MAX_DURATION=300` or lower. See Vercel limits for different plans [here](https://vercel.com/docs/functions/configuring-functions/duration#duration-limits).

### Updating .env file with Google OAuth credentials:

- `GOOGLE_CLIENT_ID` -- Google OAuth client ID. More info [here](https://next-auth.js.org/providers/google)
- `GOOGLE_CLIENT_SECRET` -- Google OAuth client secret. More info [here](https://next-auth.js.org/providers/google)

Go to [Google Cloud](https://console.cloud.google.com/). Create a new project if necessary.

Create [new credentials](https://console.cloud.google.com/apis/credentials):

1.  If the banner shows up, configure **consent screen** (if not, you can do this later)
    1. Click the banner, then Click `Get Started`.
    2. Choose a name for your app, and enter your email.
    3. In Audience, choose `External`
    4. Enter your contact information
    5. Agree to the User Data policy and then click `Create`.
    6. Return to APIs and Services using the left sidebar.
2.  Create new [credentials](https://console.cloud.google.com/apis/credentials):
    1. Click the `+Create Credentials` button. Choose OAuth Client ID.
    2. In `Application Type`, Choose `Web application`
    3. Choose a name for your web client
    4. In Authorized JavaScript origins, add a URI and enter `http://localhost:3000`
    5. In `Authorized redirect URIs` enter:
      - `http://localhost:3000/api/auth/callback/google`
      - `http://localhost:3000/api/google/linking/callback`
    6. Click `Create`.
    7. A popup will show up with the new credentials, including the Client ID and secret.
3.  Update .env file:
    1. Copy the Client ID to `GOOGLE_CLIENT_ID`
    2. Copy the Client secret to `GOOGLE_CLIENT_SECRET`
4.  Update [scopes](https://console.cloud.google.com/auth/scopes)

    1. Go to `Data Access` in the left sidebar (or click link above)
    2. Click `Add or remove scopes`
    3. Copy paste the below into the `Manually add scopes` box:

    ```plaintext
    https://www.googleapis.com/auth/userinfo.profile
    https://www.googleapis.com/auth/userinfo.email
    https://www.googleapis.com/auth/gmail.modify
    https://www.googleapis.com/auth/gmail.settings.basic
    https://www.googleapis.com/auth/contacts
    ```

    4. Click `Update`
    5. Click `Save` in the Data Access page.

5.  Add yourself as a test user
    1. Go to [Audience](https://console.cloud.google.com/auth/audience)
    2. In the `Test users` section, click `+Add users`
    3. Enter your email and press `Save`

6.  Enable Google People API in [Google Cloud Console](https://console.cloud.google.com/marketplace/product/google/people.googleapis.com)

### Updating .env file with Microsoft OAuth credentials:

- `MICROSOFT_CLIENT_ID` -- Microsoft OAuth client ID
- `MICROSOFT_CLIENT_SECRET` -- Microsoft OAuth client secret

Go to [Microsoft Azure Portal](https://portal.azure.com/). Create a new Azure Active Directory app registration:

1. Navigate to Azure Active Directory
2. Go to &quot;App registrations&quot; in the left sidebar or search it in the searchbar
3. Click &quot;New registration&quot;

   1. Choose a name for your application
   2. Under &quot;Supported account types&quot; select &quot;Accounts in any organizational directory (Any Azure AD directory - Multitenant) and personal Microsoft accounts (e.g. Skype, Xbox)&quot;
   3. Set the Redirect URI:
      - Platform: Web
      - URL: `http://localhost:3000/api/auth/callback/microsoft`
   4. Click &quot;Register&quot;
   5. In the &quot;Manage&quot; menu click &quot;Authentication (Preview)&quot;
   6. Add the Redirect URI: `http://localhost:3000/api/outlook/linking/callback`

4. Get your credentials:

   1. The &quot;Application (client) ID&quot; shown is your `MICROSOFT_CLIENT_ID`
   2. To get your client secret:
      - Click &quot;Certificates &amp; secrets&quot; in the left sidebar
      - Click &quot;New client secret&quot;
      - Add a description and choose an expiry
      - Click &quot;Add&quot;
      - Copy the secret Value (not the ID) - this is your `MICROSOFT_CLIENT_SECRET`

5. Configure API permissions:

   1. In the &quot;Manage&quot; menu click &quot;API permissions&quot; in the left sidebar
   2. Click &quot;Add a permission&quot;
   3. Select &quot;Microsoft Graph&quot;
   4. Select &quot;Delegated permissions&quot;
   5. Add the following permissions:

      - openid
      - profile
      - email
      - User.Read
      - offline_access
      - Mail.ReadWrite
      - Mail.Send
      - Mail.ReadBasic
      - Mail.Read
      - Mail.Read.Shared
      - MailboxSettings.ReadWrite
      - Contacts.ReadWrite

   6. Click &quot;Add permissions&quot;
   7. Click &quot;Grant admin consent&quot; if you&#039;re an admin

6. Update your .env file with the credentials:
   ```plaintext
   MICROSOFT_CLIENT_ID=your_client_id_here
   MICROSOFT_CLIENT_SECRET=your_client_secret_here
   ```

### Updating .env file with LLM parameters

You need to set an LLM, but you can use a local one too:

- [Anthropic](https://console.anthropic.com/settings/keys)
- [OpenAI](https://platform.openai.com/api-keys)
- AWS Bedrock Anthropic
- Google Gemini
- Groq Llama 3.3 70B
- Ollama (local)

For the LLM, you can use Anthropic, OpenAI, or Anthropic on AWS Bedrock. You
can also use Ollama by setting the following enviroment variables:

```sh
OLLAMA_BASE_URL=http://localhost:11434/api
NEXT_PUBLIC_OLLAMA_MODEL=phi3
```

Note: If you need to access Ollama hosted locally and the application is running on Docker setup, you can use `http://host.docker.internal:11434/api` as the base URL. You might also need to set `OLLAMA_HOST` to `0.0.0.0` in the Ollama configuration file.

You can select the model you wish to use in the app on the `/settings` page of the app.

If you are using local ollama, you can set it to be default:

```sh
DEFAULT_LLM_PROVIDER=ollama
```

If this is the case you must also set the `ECONOMY_LLM_PROVIDER` environment variable.

### Redis and Postgres

We use Postgres for the database.
For Redis, you can use [Upstash Redis](https://upstash.com/) or set up your own Redis instance.

You can run Postgres &amp; Redis locally using `docker-compose`

```bash
docker-compose up -d # -d will run the services in the background
```

### Running the app

To run the migrations:

```bash
pnpm prisma migrate dev
```

To run the app locally for development (slower):

```bash
pnpm run dev
```

Or from the project root:

```bash
turbo dev
```

To build and run the app locally in production mode (faster):

```bash
pnpm run build
pnpm start
```

Open [http://localhost:3000](http://localhost:3000) to view the app in your browser.

### Premium

Many features are available only to premium users. To upgrade yourself, make yourself an admin in the `.env`: `ADMINS=hello@gmail.com`
Then upgrade yourself at: [http://localhost:3000/admin](http://localhost:3000/admin).

### Set up push notifications via Google PubSub to handle emails in real time

Follow instructions [here](https://developers.google.com/gmail/api/guides/push).

1. [Create a topic](https://developers.google.com/gmail/api/guides/push#create_a_topic)
2. [Create a subscription](https://developers.google.com/gmail/api/guides/push#create_a_subscription)
3. [Grant publish rights on your topic](https://developers.google.com/gmail/api/guides/push#grant_publish_rights_on_your_topic)

Set env var `GOOGLE_PUBSUB_TOPIC_NAME`.
When creating the subscription select Push and the url should look something like: `https://www.getinboxzero.com/api/google/webhook?token=TOKEN` or `https://abc.ngrok-free.app/api/google/webhook?token=TOKEN` where the domain is your domain. Set `GOOGLE_PUBSUB_VERIFICATION_TOKEN` in your `.env` file to be the value of `TOKEN`.

To run in development ngrok can be helpful:

```sh
ngrok http 3000
# or with an ngrok domain to keep your endpoint stable (set `XYZ`):
ngrok http --domain=XYZ.ngrok-free.app 3000
```

And then update the webhook endpoint in the [Google PubSub subscriptions dashboard](https://console.cloud.google.com/cloudpubsub/subscription/list).

To start watching emails visit: `/api/watch/all`

### Watching for email updates

Set a cron job to run these:
The Google watch is necessary. Others are optional.

```json
  &quot;crons&quot;: [
    {
      &quot;path&quot;: &quot;/api/watch/all&quot;,
      &quot;schedule&quot;: &quot;0 1 * * *&quot;
    },
    {
      &quot;path&quot;: &quot;/api/resend/summary/all&quot;,
      &quot;schedule&quot;: &quot;0 16 * * 1&quot;
    },
    {
      &quot;path&quot;: &quot;/api/reply-tracker/disable-unused-auto-draft&quot;,
      &quot;schedule&quot;: &quot;0 3 * * *&quot;
    }
  ]
```

[Here](https://vercel.com/guides/how-to-setup-cron-jobs-on-vercel#alternative-cron-providers) are some easy ways to run cron jobs. Upstash is a free, easy option. I could never get the Vercel `vercel.json`. Open to PRs if you find a fix for that.

### Docker Build Instructions

When building the Docker image, you **must** specify your `NEXT_PUBLIC_BASE_URL` as a build argument. This is because Next.js embeds `NEXT_PUBLIC_*` variables at build time, not runtime.

### Building the Docker image

```bash
# For production with your custom domain
docker build \
  --build-arg NEXT_PUBLIC_BASE_URL=&quot;https://your-domain.com&quot; \
  -t inbox-zero \
  -f docker/Dockerfile.prod .

# For local development (default)
docker build -t inbox-zero -f docker/Dockerfile.prod .
```

### Running the container

After building, run the container with your runtime secrets:

```bash
docker run -p 3000:3000 \
  -e DATABASE_URL=&quot;your-database-url&quot; \
  -e AUTH_SECRET=&quot;your-auth-secret&quot; \
  -e GOOGLE_CLIENT_ID=&quot;your-google-client-id&quot; \
  -e GOOGLE_CLIENT_SECRET=&quot;your-google-client-secret&quot; \
  # ... other runtime environment variables
  inbox-zero
```

**Important:** If you need to change `NEXT_PUBLIC_BASE_URL`, you must rebuild the Docker image. It cannot be changed at runtime.

For more detailed Docker build instructions and security considerations, see [docker/DOCKER_BUILD_GUIDE.md](docker/DOCKER_BUILD_GUIDE.md).


### Calendar integrations

*Note:* The calendar integration feature is a work in progress.

#### Google Calendar

1. Visit: https://console.cloud.google.com/apis/library
2. Search for &quot;Google Calendar API&quot;
3. Click on it and then click &quot;Enable&quot;
4. Visit: [credentials](https://console.cloud.google.com/apis/credentials):
    1. Click on your project
    2. In `Authorized redirect URIs` add:
      - `http://localhost:3000/api/google/calendar/callback`

## Contributing to the project

You can view open tasks in our [GitHub Issues](https://github.com/elie222/inbox-zero/issues).
Join our [Discord](https://www.getinboxzero.com/discord) to discuss tasks and check what&#039;s being worked on.

[ARCHITECTURE.md](./ARCHITECTURE.md) explains the architecture of the project (LLM generated).
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[sst/opencode]]></title>
            <link>https://github.com/sst/opencode</link>
            <guid>https://github.com/sst/opencode</guid>
            <pubDate>Mon, 20 Oct 2025 00:05:09 GMT</pubDate>
            <description><![CDATA[The AI coding agent built for the terminal.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/sst/opencode">sst/opencode</a></h1>
            <p>The AI coding agent built for the terminal.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 28,380</p>
            <p>Forks: 2,124</p>
            <p>Stars today: 152 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://opencode.ai&quot;&gt;
    &lt;picture&gt;
      &lt;source srcset=&quot;packages/console/app/src/asset/logo-ornate-dark.svg&quot; media=&quot;(prefers-color-scheme: dark)&quot;&gt;
      &lt;source srcset=&quot;packages/console/app/src/asset/logo-ornate-light.svg&quot; media=&quot;(prefers-color-scheme: light)&quot;&gt;
      &lt;img src=&quot;packages/console/app/src/asset/logo-ornate-light.svg&quot; alt=&quot;OpenCode logo&quot;&gt;
    &lt;/picture&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;The AI coding agent built for the terminal.&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://opencode.ai/discord&quot;&gt;&lt;img alt=&quot;Discord&quot; src=&quot;https://img.shields.io/discord/1391832426048651334?style=flat-square&amp;label=discord&quot; /&gt;&lt;/a&gt;
  &lt;a href=&quot;https://www.npmjs.com/package/opencode-ai&quot;&gt;&lt;img alt=&quot;npm&quot; src=&quot;https://img.shields.io/npm/v/opencode-ai?style=flat-square&quot; /&gt;&lt;/a&gt;
  &lt;a href=&quot;https://github.com/sst/opencode/actions/workflows/publish.yml&quot;&gt;&lt;img alt=&quot;Build status&quot; src=&quot;https://img.shields.io/github/actions/workflow/status/sst/opencode/publish.yml?style=flat-square&amp;branch=dev&quot; /&gt;&lt;/a&gt;
&lt;/p&gt;

[![OpenCode Terminal UI](packages/web/src/assets/lander/screenshot.png)](https://opencode.ai)

---

### Installation

```bash
# YOLO
curl -fsSL https://opencode.ai/install | bash

# Package managers
npm i -g opencode-ai@latest        # or bun/pnpm/yarn
brew install sst/tap/opencode      # macOS and Linux
paru -S opencode-bin               # Arch Linux
```

&gt; [!TIP]
&gt; Remove versions older than 0.1.x before installing.

#### Installation Directory

The install script respects the following priority order for the installation path:

1. `$OPENCODE_INSTALL_DIR` - Custom installation directory
2. `$XDG_BIN_DIR` - XDG Base Directory Specification compliant path
3. `$HOME/bin` - Standard user binary directory (if exists or can be created)
4. `$HOME/.opencode/bin` - Default fallback

```bash
# Examples
OPENCODE_INSTALL_DIR=/usr/local/bin curl -fsSL https://opencode.ai/install | bash
XDG_BIN_DIR=$HOME/.local/bin curl -fsSL https://opencode.ai/install | bash
```

### Documentation

For more info on how to configure OpenCode [**head over to our docs**](https://opencode.ai/docs).

### Contributing

If you&#039;re interested in contributing to OpenCode, please read our [contributing docs](./CONTRIBUTING.md) before submitting a pull request.

### FAQ

#### How is this different than Claude Code?

It&#039;s very similar to Claude Code in terms of capability. Here are the key differences:

- 100% open source
- Not coupled to any provider. Although Anthropic is recommended, OpenCode can be used with OpenAI, Google or even local models. As models evolve the gaps between them will close and pricing will drop so being provider-agnostic is important.
- Out of the box LSP support
- A focus on TUI. OpenCode is built by neovim users and the creators of [terminal.shop](https://terminal.shop); we are going to push the limits of what&#039;s possible in the terminal.
- A client/server architecture. This for example can allow OpenCode to run on your computer, while you can drive it remotely from a mobile app. Meaning that the TUI frontend is just one of the possible clients.

#### What&#039;s the other repo?

The other confusingly named repo has no relation to this one. You can [read the story behind it here](https://x.com/thdxr/status/1933561254481666466).

---

**Join our community** [Discord](https://discord.gg/opencode) | [X.com](https://x.com/opencode)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[storybookjs/storybook]]></title>
            <link>https://github.com/storybookjs/storybook</link>
            <guid>https://github.com/storybookjs/storybook</guid>
            <pubDate>Mon, 20 Oct 2025 00:05:08 GMT</pubDate>
            <description><![CDATA[Storybook is the industry standard workshop for building, documenting, and testing UI components in isolation]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/storybookjs/storybook">storybookjs/storybook</a></h1>
            <p>Storybook is the industry standard workshop for building, documenting, and testing UI components in isolation</p>
            <p>Language: TypeScript</p>
            <p>Stars: 88,160</p>
            <p>Forks: 9,732</p>
            <p>Stars today: 165 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://storybook.js.org/?ref=readme&quot;&gt;
    &lt;picture&gt;
      &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://user-images.githubusercontent.com/263385/199832481-bbbf5961-6a26-481d-8224-51258cce9b33.png&quot;&gt;
      &lt;img src=&quot;https://user-images.githubusercontent.com/321738/63501763-88dbf600-c4cc-11e9-96cd-94adadc2fd72.png&quot; alt=&quot;Storybook&quot; width=&quot;400&quot; /&gt;
    &lt;/picture&gt;
    
  &lt;/a&gt;
  
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;Build bulletproof UI components faster&lt;/p&gt;

&lt;br/&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://circleci.com/gh/storybookjs/storybook&quot;&gt;
    &lt;img src=&quot;https://circleci.com/gh/storybookjs/storybook.svg?style=shield&quot; alt=&quot;Build Status on CircleCI&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://codecov.io/gh/storybookjs/storybook&quot;&gt;
    &lt;img src=&quot;https://codecov.io/gh/storybookjs/storybook/branch/main/graph/badge.svg&quot; alt=&quot;codecov&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/storybookjs/storybook/blob/main/LICENSE&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/license/storybookjs/storybook.svg&quot; alt=&quot;License&quot; /&gt;
  &lt;/a&gt;
  &lt;br/&gt;
  &lt;a href=&quot;https://discord.gg/storybook&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/discord-join-7289DA.svg?logo=discord&amp;longCache=true&amp;style=flat&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://storybook.js.org/community/?ref=readme&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/community-join-4BC424.svg&quot; alt=&quot;Storybook Community&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;#backers&quot;&gt;
    &lt;img src=&quot;https://opencollective.com/storybook/backers/badge.svg&quot; alt=&quot;Backers on Open Collective&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;#sponsors&quot;&gt;
    &lt;img src=&quot;https://opencollective.com/storybook/tiers/sponsors/badge.svg&quot; alt=&quot;Sponsors on Open Collective&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://x.com/intent/follow?screen_name=storybookjs&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/twitter/follow/storybookjs?color=blue&amp;logo=twitter&quot; alt=&quot;Official Twitter Handle&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://api.securityscorecards.dev/projects/github.com/storybookjs/storybook&quot;&gt;
    &lt;img src=&quot;https://api.securityscorecards.dev/projects/github.com/storybookjs/storybook/badge&quot; alt=&quot;OpenSSF Scorecard&quot;/&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. Find out more at &lt;a href=&quot;https://storybook.js.org/?ref=readme&quot;&gt;storybook.js.org&lt;/a&gt;!
&lt;/p&gt;

&lt;center&gt;
  &lt;img src=&quot;https://raw.githubusercontent.com/storybookjs/storybook/refs/heads/release-6-5/media/storybook-intro.gif&quot; width=&quot;100%&quot; /&gt;
&lt;/center&gt;

&lt;p align=&quot;center&quot;&gt;
  View README for:&lt;br/&gt;
  &lt;a href=&quot;https://github.com/storybookjs/storybook/blob/main/README.md&quot; title=&quot;latest&quot;&gt;&lt;img alt=&quot;latest&quot; src=&quot;https://img.shields.io/npm/v/@storybook/react/latest?style=for-the-badge&amp;logo=storybook&amp;logoColor=ffffff&amp;color=66BF3C&quot; /&gt;&lt;/a&gt;
  &lt;a href=&quot;https://github.com/storybookjs/storybook/blob/next/README.md&quot; title=&quot;next&quot;&gt;&lt;img alt=&quot;next&quot; src=&quot;https://img.shields.io/npm/v/@storybook/react/next?style=for-the-badge&amp;logo=storybook&amp;logoColor=ffffff&amp;color=1EA7FD&quot; /&gt;&lt;/a&gt;
&lt;/p&gt;

## Table of contents

- 🚀 [Getting Started](#getting-started)
- 📒 [Projects](#projects)
  - 🛠 [Supported Frameworks &amp; Examples](#supported-frameworks)
  - 🔗[Addons](#addons)
- 🏅 [Badges &amp; Presentation materials](#badges--presentation-materials)
- 👥 [Community](#community)
- 👏 [Contributing](#contributing)
  - 👨‍💻 [Development scripts](#development-scripts)
  - 💸 [Sponsors](#sponsors)
  - 💵 [Backers](#backers)
- :memo: [License](#license)

## Getting Started

Visit [Storybook&#039;s website](https://storybook.js.org/?ref=readme) to learn more about Storybook and to get started.

### Documentation

Documentation can be found on [Storybook&#039;s docs site](https://storybook.js.org/docs?ref=readme).

### Examples

View [Component Encyclopedia](https://storybook.js.org/showcase?ref=readme) to see how leading teams use Storybook.

Use [storybook.new](https://storybook.new) to quickly create an example project in Stackblitz.

Storybook comes with a lot of [addons](https://storybook.js.org/docs/configure/user-interface/storybook-addons?ref=readme) for component design, documentation, testing, interactivity, and so on. Storybook&#039;s API makes it possible to configure and extend in various ways. It has even been extended to support React Native, Android, iOS, and Flutter development for mobile.

### Community

For additional help, share your issue in [the repo&#039;s GitHub Discussions](https://github.com/storybookjs/storybook/discussions/new?category=help).

## Projects

### Supported Frameworks

| Renderer                                                       | Demo                                                                                                                                                                         |                                                                                                                                                       |
| -------------------------------------------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------- |
| [React](code/renderers/react)                                  | [![Storybook demo](https://img.shields.io/npm/v/@storybook/react/latest?style=flat-square&amp;color=blue&amp;label)](https://next--630511d655df72125520f051.chromatic.com/)          | [![React](https://img.shields.io/npm/dm/@storybook/react?style=flat-square&amp;color=eee)](code/renderers/react)                                          |
| [Angular](code/frameworks/angular/)                            | [![Storybook demo](https://img.shields.io/npm/v/@storybook/angular/latest?style=flat-square&amp;color=blue&amp;label)](https://next--6322ce6af69825592bbb28fc.chromatic.com/)        | [![Angular](https://img.shields.io/npm/dm/@storybook/angular?style=flat-square&amp;color=eee)](code/frameworks/angular/)                                  |
| [Vue 3](code/renderers/vue3)                                   | [![Storybook demo](https://img.shields.io/npm/v/@storybook/vue3/latest?style=flat-square&amp;color=blue&amp;label)](https://next--630513346a8e284ae244d415.chromatic.com/)           | [![Vue 3](https://img.shields.io/npm/dm/@storybook/vue3?style=flat-square&amp;color=eee)](code/renderers/vue3/)                                           |
| [Web components](code/renderers/web-components)                | [![Storybook demo](https://img.shields.io/npm/v/@storybook/web-components/latest?style=flat-square&amp;color=blue&amp;label)](https://next--638db5bf49adfdfe8cf545e0.chromatic.com/) | [![Svelte](https://img.shields.io/npm/dm/@storybook/web-components?style=flat-square&amp;color=eee)](code/renderers/web-components)                       |
| [React Native](https://github.com/storybookjs/react-native)    | [![](https://img.shields.io/npm/v/@storybook/react-native/latest?style=flat-square&amp;color=blue&amp;label)](/)                                                                     | [![React Native](https://img.shields.io/npm/dm/@storybook/react-native?style=flat-square&amp;color=eee)](https://github.com/storybookjs/react-native)     |
| [HTML](code/renderers/html)                                    | [![Storybook demo](https://img.shields.io/npm/v/@storybook/html/latest?style=flat-square&amp;color=blue&amp;label)](https://next--63dd39a158cf6fc05199b4bb.chromatic.com/)           | [![HTML](https://img.shields.io/npm/dm/@storybook/html?style=flat-square&amp;color=eee)](code/renderers/html)                                             |
| [Ember](code/frameworks/ember/)                                | [![](https://img.shields.io/npm/v/@storybook/ember/latest?style=flat-square&amp;color=blue&amp;label)](/)                                                                            | [![Ember](https://img.shields.io/npm/dm/@storybook/ember?style=flat-square&amp;color=eee)](code/frameworks/ember/)                                        |
| [Svelte](code/renderers/svelte)                                | [![Storybook demo](https://img.shields.io/npm/v/@storybook/svelte/latest?style=flat-square&amp;color=blue&amp;label)](https://next--630873996e4e3557791c069c.chromatic.com/)         | [![Svelte](https://img.shields.io/npm/dm/@storybook/svelte?style=flat-square&amp;color=eee)](code/renderers/svelte)                                       |
| [Preact](code/renderers/preact)                                | [![Storybook demo](https://img.shields.io/npm/v/@storybook/preact/latest?style=flat-square&amp;color=blue&amp;label)](https://next--63b588a512565bfaace15e7c.chromatic.com/)         | [![Preact](https://img.shields.io/npm/dm/@storybook/preact?style=flat-square&amp;color=eee)](code/renderers/preact)                                       |
| [Qwik](https://github.com/literalpie/storybook-framework-qwik) | [![](https://img.shields.io/npm/v/storybook-framework-qwik/latest?style=flat-square&amp;color=blue&amp;label)](/)                                                                    | [![Qwik](https://img.shields.io/npm/dm/storybook-framework-qwik?style=flat-square&amp;color=eee)](https://github.com/literalpie/storybook-framework-qwik) |
| [SolidJS](https://github.com/solidjs-community/storybook)      | [![](https://img.shields.io/npm/v/storybook-solidjs-vite/latest?style=flat-square&amp;color=blue&amp;label)](/)                                                                      | [![SolidJS](https://img.shields.io/npm/dm/storybook-solidjs-vite?style=flat-square&amp;color=eee)](https://github.com/solidjs-community/storybook)        |
| [Android, iOS, Flutter](https://github.com/storybookjs/native) | [![](https://img.shields.io/npm/v/@storybook/native/latest?style=flat-square&amp;color=blue&amp;label)](/)                                                                           | [![Native](https://img.shields.io/npm/dm/@storybook/native?style=flat-square&amp;color=eee)](https://github.com/storybookjs/native)                       |

### Addons

| Addons                                                                    |                                                                            |
| ------------------------------------------------------------------------- | -------------------------------------------------------------------------- |
| [a11y](code/addons/a11y/)                                                 | Test components for user accessibility in Storybook                        |
| [actions](code/core/src/actions/)                                         | Log actions as users interact with components in the Storybook UI          |
| [backgrounds](code/core/src/backgrounds)                                  | Let users choose backgrounds in the Storybook UI                           |
| [cssresources](https://github.com/storybookjs/addon-cssresources)         | Dynamically add/remove CSS resources to the component iframe               |
| [design assets](https://github.com/storybookjs/addon-design-assets)       | View images, videos, and weblinks alongside your story                     |
| [docs](code/addons/docs/)                                                 | Add high quality documentation to your components                          |
| [events](https://github.com/storybookjs/addon-events)                     | Interactively fire events to components that respond to EventEmitter       |
| [google-analytics](https://github.com/storybookjs/addon-google-analytics) | Reports google analytics on stories                                        |
| [graphql](https://github.com/storybookjs/addon-graphql)                   | Query a GraphQL server within Storybook stories                            |
| [jest](code/addons/jest/)                                                 | View the results of components&#039; unit tests in Storybook                    |
| [links](code/addons/links/)                                               | Create links between stories                                               |
| [measure](code/core/src/measure/)                                         | Visually inspect the layout and box model within the Storybook UI          |
| [outline](code/core/src/outline/)                                         | Visually debug the CSS layout and alignment within the Storybook UI        |
| [query params](https://github.com/storybookjs/addon-queryparams)          | Mock query params                                                          |
| [viewport](code/core/src/viewport/)                                       | Change display sizes and layouts for responsive components using Storybook |

See [Addon / Framework Support Table](https://storybook.js.org/docs/configure/integration/frameworks-feature-support?ref=readme)

To continue improving your experience, we have to eventually deprecate or remove certain addons in favor of new and better tools.

If you&#039;re using info/notes, we highly recommend you migrate to [docs](code/addons/docs/) instead, and [here is a guide](code/addons/docs/docs/recipes.md#migrating-from-notesinfo-addons) to help you.

If you&#039;re using contexts, we highly recommend you migrate to [toolbars](https://github.com/storybookjs/storybook/tree/next/code/addons/toolbars) and [here is a guide](https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#deprecated-addon-contexts) to help you.

If you&#039;re using addon-storyshots, we highly recommend you migrate to the Storybook [test-runner](https://github.com/storybookjs/test-runner) and [here is a guide](https://storybook.js.org/docs/writing-tests/storyshots-migration-guide?ref=readme) to help you.

## Badges &amp; Presentation materials

We have a badge! Link it to your live Storybook example.

![Storybook](https://cdn.jsdelivr.net/gh/storybookjs/brand@main/badge/badge-storybook.svg)

```md
[![Storybook](https://cdn.jsdelivr.net/gh/storybookjs/brand@main/badge/badge-storybook.svg)](link to site)
```

If you&#039;re looking for material to use in your Storybook presentation, such as logos, video material, and the colors we use, you can find it all on our [brand repo](https://github.com/storybookjs/brand).

## Community

- Tweeting via [@storybookjs](https://x.com/storybookjs)
- Blogging at [storybook.js.org](https://storybook.js.org/blog/?ref=readme) and [Medium](https://medium.com/storybookjs)
- Chatting on [Discord](https://discord.gg/storybook)
- Videos and streams at [YouTube](https://www.youtube.com/channel/UCr7Quur3eIyA_oe8FNYexfg)

## Contributing

Contributions to Storybook are always welcome!

- 📥 Pull requests and 🌟 Stars are always welcome.
- Read our [contributing guide](CONTRIBUTING.md) to get started,
  or find us on [Discord](https://discord.gg/storybook), we will take the time to guide you.

Looking for a first issue to tackle?

- We tag issues with [![Good First Issue](https://img.shields.io/github/issues/storybookjs/storybook/good%20first%20issue.svg)](https://github.com/storybookjs/storybook/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22) when we think they are well suited for people who are new to the codebase or OSS in general.
- [Talk to us](https://discord.gg/storybook), we&#039;ll find something that suits your skills and learning interest.

### Development scripts

Storybook is organized as a monorepo. Useful scripts include:

#### `yarn start`

&gt; Runs a sandbox template storybook with test stories

#### `yarn task`

&gt; As above, but gives you options to customize the sandbox (e.g. selecting other frameworks)

#### `yarn lint`

&gt; boolean check if code conforms to linting rules - uses remark &amp; eslint

- `yarn lint:js` - will check js
- `yarn lint:md` - will check markdown + code samples
- `yarn lint:js --fix` - will automatically fix js

#### `yarn test`

&gt; boolean check if unit tests all pass - uses jest

- `yarn run test --core --watch` - will run core tests in watch-mode

### Sponsors

Become a sponsor to have your logo and website URL on our README on Github. \[[Become a sponsor](https://opencollective.com/storybook#sponsor)]

&lt;a href=&quot;https://opencollective.com/storybook/tiers/sponsors/0/website?requireActive=true&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/storybook/tiers/sponsors/0/avatar.svg?requireActive=true&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/storybook/tiers/sponsors/1/website?requireActive=true&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/storybook/tiers/sponsors/1/avatar.svg?requireActive=true&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/storybook/tiers/sponsors/2/website?requireActive=true&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/storybook/tiers/sponsors/2/avatar.svg?requireActive=true&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/storybook/tiers/sponsors/3/website?requireActive=true&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/storybook/tiers/sponsors/3/avatar.svg?requireActive=true&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/storybook/tiers/sponsors/4/website?requireActive=true&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/storybook/tiers/sponsors/4/avatar.svg?requireActive=true&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/storybook/tiers/sponsors/5/website?requireActive=true&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/storybook/tiers/sponsors/5/avatar.svg?requireActive=true&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/storybook/tiers/sponsors/6/website?requireActive=true&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/storybook/tiers/sponsors/6/avatar.svg?requireActive=true&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/storybook/tiers/sponsors/7/website?requireActive=true&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/storybook/tiers/sponsors/7/avatar.svg?requireActive=true&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/storybook/tiers/sponsors/8/website?requireActive=true&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/storybook/tiers/sponsors/8/avatar.svg?requireActive=true&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/storybook/tiers/sponsors/9/website?requireActive=true&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/storybook/tiers/sponsors/9/avatar.svg?requireActive=true&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/storybook/tiers/sponsors/10/website?requireActive=true&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/storybook/tiers/sponsors/10/avatar.svg?requireActive=true&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/storybook/tiers/sponsors/11/website?requireActive=true&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/storybook/tiers/sponsors/11/avatar.svg?requireActive=true&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/storybook/tiers/sponsors/12/website?requireActive=true&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/storybook/tiers/sponsors/12/avatar.svg?requireActive=true&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/storybook/tiers/sponsors/13/website?requireActive=true&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/storybook/tiers/sponsors/13/avatar.svg?requireActive=true&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/storybook/tiers/sponsors/14/website?requireActive=true&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/storybook/tiers/sponsors/14/avatar.svg?requireActive=true&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/storybook/tiers/sponsors/15/website?requireActive=true&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/storybook/tiers/sponsors/15/avatar.svg?requireActive=true&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/storybook/tiers/sponsors/16/website?requireActive=true&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/storybook/tiers/sponsors/16/avatar.svg?requireActive=true&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/storybook/tiers/sponsors/17/website?requireActive=true&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/storybook/tiers/sponsors/17/avatar.svg?requireActive=true&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/storybook/tiers/sponsors/18/website?requireActive=true&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/storybook/tiers/sponsors/18/avatar.

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[desktop/desktop]]></title>
            <link>https://github.com/desktop/desktop</link>
            <guid>https://github.com/desktop/desktop</guid>
            <pubDate>Mon, 20 Oct 2025 00:05:07 GMT</pubDate>
            <description><![CDATA[Focus on what matters instead of fighting with Git.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/desktop/desktop">desktop/desktop</a></h1>
            <p>Focus on what matters instead of fighting with Git.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 20,867</p>
            <p>Forks: 9,918</p>
            <p>Stars today: 0 stars today</p>
            <h2>README</h2><pre># [GitHub Desktop](https://desktop.github.com)

[GitHub Desktop](https://desktop.github.com/) is an open-source [Electron](https://www.electronjs.org/)-based
GitHub app. It is written in [TypeScript](https://www.typescriptlang.org) and
uses [React](https://reactjs.org/).

&lt;picture&gt;
  &lt;source
    srcset=&quot;https://user-images.githubusercontent.com/634063/202742848-63fa1488-6254-49b5-af7c-96a6b50ea8af.png&quot;
    media=&quot;(prefers-color-scheme: dark)&quot;
  /&gt;
  &lt;img
    width=&quot;1072&quot;
    src=&quot;https://user-images.githubusercontent.com/634063/202742985-bb3b3b94-8aca-404a-8d8a-fd6a6f030672.png&quot;
    alt=&quot;A screenshot of the GitHub Desktop application showing changes being viewed and committed with two attributed co-authors&quot;
  /&gt;
&lt;/picture&gt;

## Where can I get it?

Download the official installer for your operating system:

 - [macOS](https://central.github.com/deployments/desktop/desktop/latest/darwin)
 - [macOS (Apple silicon)](https://central.github.com/deployments/desktop/desktop/latest/darwin-arm64)
 - [Windows](https://central.github.com/deployments/desktop/desktop/latest/win32)
 - [Windows machine-wide install](https://central.github.com/deployments/desktop/desktop/latest/win32?format=msi)

Linux is not officially supported; however, you can find installers created for Linux from a fork of GitHub Desktop in the [Community Releases](https://github.com/desktop/desktop#community-releases) section.

### Beta Channel

Want to test out new features and get fixes before everyone else? Install the
beta channel to get access to early builds of Desktop:

 - [macOS](https://central.github.com/deployments/desktop/desktop/latest/darwin?env=beta)
 - [macOS (Apple silicon)](https://central.github.com/deployments/desktop/desktop/latest/darwin-arm64?env=beta)
 - [Windows](https://central.github.com/deployments/desktop/desktop/latest/win32?env=beta)
 - [Windows (ARM64)](https://central.github.com/deployments/desktop/desktop/latest/win32-arm64?env=beta)

The release notes for the latest beta versions are available [here](https://desktop.github.com/release-notes/?env=beta).

### Past Releases
You can find past releases at https://desktop.githubusercontent.com. After installation of a past version, the auto update functionality will attempt to download the latest version. 

### Community Releases

There are several community-supported package managers that can be used to
install GitHub Desktop:
 - Windows users can install using [winget](https://docs.microsoft.com/en-us/windows/package-manager/winget/) `c:\&gt; winget install github-desktop` or [Chocolatey](https://chocolatey.org/) `c:\&gt; choco install github-desktop`
 - macOS users can install using [Homebrew](https://brew.sh/) package manager:
      `$ brew install --cask github`

Installers for various Linux distributions can be found on the
[`shiftkey/desktop`](https://github.com/shiftkey/desktop) fork.

## Is GitHub Desktop right for me? What are the primary areas of focus?

[This document](https://github.com/desktop/desktop/blob/development/docs/process/what-is-desktop.md) describes the focus of GitHub Desktop and who the product is most useful for.

## I have a problem with GitHub Desktop

Note: The [GitHub Desktop Code of Conduct](https://github.com/desktop/desktop/blob/development/CODE_OF_CONDUCT.md) applies in all interactions relating to the GitHub Desktop project.

First, please search the [open issues](https://github.com/desktop/desktop/issues?q=is%3Aopen)
and [closed issues](https://github.com/desktop/desktop/issues?q=is%3Aclosed)
to see if your issue hasn&#039;t already been reported (it may also be fixed).

There is also a list of [known issues](https://github.com/desktop/desktop/blob/development/docs/known-issues.md)
that are being tracked against Desktop, and some of these issues have workarounds.

If you can&#039;t find an issue that matches what you&#039;re seeing, open a [new issue](https://github.com/desktop/desktop/issues/new/choose),
choose the right template and provide us with enough information to investigate
further.

## The issue I reported isn&#039;t fixed yet. What can I do?

If nobody has responded to your issue in a few days, you&#039;re welcome to respond to it with a friendly ping in the issue. Please do not respond more than a second time if nobody has responded. The GitHub Desktop maintainers are constrained in time and resources, and diagnosing individual configurations can be difficult and time consuming. While we&#039;ll try to at least get you pointed in the right direction, we can&#039;t guarantee we&#039;ll be able to dig too deeply into any one person&#039;s issue.

## How can I contribute to GitHub Desktop?

The [CONTRIBUTING.md](./.github/CONTRIBUTING.md) document will help you get setup and
familiar with the source. The [documentation](docs/) folder also contains more
resources relevant to the project.

If you&#039;re looking for something to work on, check out the [help wanted](https://github.com/desktop/desktop/issues?q=is%3Aissue+is%3Aopen+label%3A%22help%20wanted%22) label.

## Building Desktop

To setup your development environment for building Desktop, check out: [`setup.md`](./docs/contributing/setup.md).

## More Resources

See [desktop.github.com](https://desktop.github.com) for more product-oriented
information about GitHub Desktop.

See our [getting started documentation](https://docs.github.com/en/desktop/overview/getting-started-with-github-desktop) for more information on how to set up, authenticate, and configure GitHub Desktop.

## License

**[MIT](LICENSE)**

The MIT license grant is not for GitHub&#039;s trademarks, which include the logo
designs. GitHub reserves all trademark and copyright rights in and to all
GitHub trademarks. GitHub&#039;s logos include, for instance, the stylized
Invertocat designs that include &quot;logo&quot; in the file title in the following
folder: [logos](app/static/logos).

GitHub® and its stylized versions and the Invertocat mark are GitHub&#039;s
Trademarks or registered Trademarks. When using GitHub&#039;s logos, be sure to
follow the GitHub [logo guidelines](https://github.com/logos).
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[github/codeql-action]]></title>
            <link>https://github.com/github/codeql-action</link>
            <guid>https://github.com/github/codeql-action</guid>
            <pubDate>Mon, 20 Oct 2025 00:05:06 GMT</pubDate>
            <description><![CDATA[Actions for running CodeQL analysis]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/github/codeql-action">github/codeql-action</a></h1>
            <p>Actions for running CodeQL analysis</p>
            <p>Language: TypeScript</p>
            <p>Stars: 1,391</p>
            <p>Forks: 404</p>
            <p>Stars today: 1 star today</p>
            <h2>README</h2><pre># CodeQL Action

This action runs GitHub&#039;s industry-leading semantic code analysis engine, [CodeQL](https://codeql.github.com/), against a repository&#039;s source code to find security vulnerabilities. It then automatically uploads the results to GitHub so they can be displayed on pull requests and in the repository&#039;s security tab. CodeQL runs an extensible set of [queries](https://github.com/github/codeql), which have been developed by the community and the [GitHub Security Lab](https://securitylab.github.com/) to find common vulnerabilities in your code.

For a list of recent changes, see the CodeQL Action&#039;s [changelog](CHANGELOG.md).

## License

This project is released under the [MIT License](LICENSE).

The underlying CodeQL CLI, used in this action, is licensed under the [GitHub CodeQL Terms and Conditions](https://securitylab.github.com/tools/codeql/license). As such, this action may be used on open source projects hosted on GitHub, and on private repositories that are owned by an organisation with GitHub Advanced Security enabled.

## Usage

We recommend using default setup to configure CodeQL analysis for your repository. For more information, see &quot;[Configuring default setup for code scanning](https://docs.github.com/en/code-security/code-scanning/enabling-code-scanning/configuring-default-setup-for-code-scanning).&quot;

You can also configure advanced setup for a repository to find security vulnerabilities in your code using a highly customizable code scanning configuration. For more information, see &quot;[Configuring advanced setup for code scanning](https://docs.github.com/en/code-security/code-scanning/creating-an-advanced-setup-for-code-scanning/configuring-advanced-setup-for-code-scanning)&quot; and &quot;[Customizing your advanced setup for code scanning](https://docs.github.com/en/code-security/code-scanning/creating-an-advanced-setup-for-code-scanning/customizing-your-advanced-setup-for-code-scanning).&quot;

### Actions

This repository contains several actions that enable you to analyze code in your repository using CodeQL and upload the analysis to GitHub Code Scanning. Actions in this repository also allow you to upload to GitHub analyses generated by any SARIF-producing SAST tool.

Actions for CodeQL analyses:

- `init`: Sets up CodeQL for analysis. For information about input parameters, see the [init action definition](https://github.com/github/codeql-action/blob/main/init/action.yml).
- `analyze`: Finalizes the CodeQL database, runs the analysis, and uploads the results to Code Scanning. For information about input parameters, see the [analyze action definition](https://github.com/github/codeql-action/blob/main/analyze/action.yml).

Actions for uploading analyses generated by third-party tools:

- `upload-sarif`: Uploads a SARIF file to Code Scanning. If you are using the `analyze` action, there is no reason to use this action as well. For information about input parameters, see the [upload-sarif action definition](https://github.com/github/codeql-action/blob/main/upload-sarif/action.yml).

Actions with special purposes and unlikely to be used directly:

- `autobuild`: Attempts to automatically build the code. Only used for analyzing languages that require a build. Use the `build-mode: autobuild` input in the `init` action instead. For information about input parameters, see the [autobuild action definition](https://github.com/github/codeql-action/blob/main/autobuild/action.yml).
- `resolve-environment`: [Experimental] Attempts to infer a build environment suitable for automatic builds. For information about input parameters, see the [resolve-environment action definition](https://github.com/github/codeql-action/blob/main/resolve-environment/action.yml).
- `start-proxy`: [Experimental] Start the HTTP proxy server. Internal use only and will change without notice. For information about input parameters, see the [start-proxy action definition](https://github.com/github/codeql-action/blob/main/start-proxy/action.yml).
- `setup-codeql`: [Experimental] Similar to `init`, except it only installs the CodeQL CLI and does not initialize a database.

### Workflow Permissions

All advanced setup code scanning workflows must have the `security-events: write` permission. Workflows in private repositories must additionally have the `contents: read` permission. For more information, see &quot;[Assigning permissions to jobs](https://docs.github.com/en/actions/using-jobs/assigning-permissions-to-jobs).&quot;

### Build Modes

The CodeQL Action supports different build modes for analyzing the source code. The available build modes are:

- `none`: The database will be created without building the source code. Available for all interpreted languages and some compiled languages.
- `autobuild`: The database will be created by attempting to automatically build the source code. Available for all compiled languages.
- `manual`: The database will be created by building the source code using a manually specified build command. To use this build mode, specify manual build steps in your workflow between the `init` and `analyze` steps. Available for all compiled languages.

#### Which build mode should I use?

Interpreted languages must use `none` for the build mode.

For compiled languages:

- `manual` build mode will typically produce the most precise results, but it is more difficult to set up and will cause the analysis to take slightly more time to run.
- `autobuild` build mode is simpler to set up, but will only work for projects with generic build steps that can be guessed by the heuristics of the autobuild scripts. If `autobuild` fails, then you must switch to `manual` or `none`. If `autobuild` succeeds, then the results and run time will be the same as `manual` mode.
- `none` build mode is also simpler to set up and is slightly faster to run, but there is a possibility that some alerts will be missed. This may happen if your repository does any code generation during compilation or if there are any dependencies downloaded from registries that the workflow does not have access to. `none` is not yet supported by Swift, Go, or Kotlin. It is in public preview for C/C++.


## Supported versions of the CodeQL Action

The following versions of the CodeQL Action are currently supported:

- v4 (latest)
- v3

## Supported versions of the CodeQL Bundle on GitHub Enterprise Server

We typically release new minor versions of the CodeQL Action and Bundle when a new minor version of GitHub Enterprise Server (GHES) is released. When a version of GHES is deprecated, the CodeQL Action and Bundle releases that shipped with it are deprecated as well.

| Minimum CodeQL Action | Minimum CodeQL Bundle Version | GitHub Environment | Notes |
|-----------------------|-------------------------------|--------------------|-------|
| `v3.28.21`  | `2.21.3` | Enterprise Server 3.18 | |
| `v3.28.12`  | `2.20.7` | Enterprise Server 3.17 | |
| `v3.28.6`  | `2.20.3` | Enterprise Server 3.16 | |
| `v3.28.6`  | `2.20.3` | Enterprise Server 3.15 | |
| `v3.28.6` | `2.20.3` | Enterprise Server 3.14 | |

See the full list of GHES release and deprecation dates at [GitHub Enterprise Server releases](https://docs.github.com/en/enterprise-server/admin/all-releases#releases-of-github-enterprise-server).

## Troubleshooting

Read about [troubleshooting code scanning](https://docs.github.com/en/code-security/code-scanning/troubleshooting-code-scanning).

## Contributing

This project welcomes contributions. See [CONTRIBUTING.md](CONTRIBUTING.md) for details on how to build, install, and contribute.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[payloadcms/payload]]></title>
            <link>https://github.com/payloadcms/payload</link>
            <guid>https://github.com/payloadcms/payload</guid>
            <pubDate>Mon, 20 Oct 2025 00:05:05 GMT</pubDate>
            <description><![CDATA[Payload is the open-source, fullstack Next.js framework, giving you instant backend superpowers. Get a full TypeScript backend and admin panel instantly. Use Payload as a headless CMS or for building powerful applications.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/payloadcms/payload">payloadcms/payload</a></h1>
            <p>Payload is the open-source, fullstack Next.js framework, giving you instant backend superpowers. Get a full TypeScript backend and admin panel instantly. Use Payload as a headless CMS or for building powerful applications.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 38,223</p>
            <p>Forks: 3,016</p>
            <p>Stars today: 20 stars today</p>
            <h2>README</h2><pre>&lt;a href=&quot;https://payloadcms.com&quot;&gt;&lt;img width=&quot;100%&quot; src=&quot;https://l4wlsi8vxy8hre4v.public.blob.vercel-storage.com/github-banner-new-logo.jpg&quot; alt=&quot;Payload headless CMS Admin panel built with React&quot; /&gt;&lt;/a&gt;
&lt;br /&gt;
&lt;br /&gt;

&lt;p align=&quot;left&quot;&gt;
  &lt;a href=&quot;https://github.com/payloadcms/payload/actions&quot;&gt;&lt;img alt=&quot;GitHub Workflow Status&quot; src=&quot;https://img.shields.io/github/actions/workflow/status/payloadcms/payload/main.yml?style=flat-square&quot;&gt;&lt;/a&gt;
  &amp;nbsp;
  &lt;a href=&quot;https://discord.gg/payload&quot;&gt;&lt;img alt=&quot;Discord&quot; src=&quot;https://img.shields.io/discord/967097582721572934?label=Discord&amp;color=7289da&amp;style=flat-square&quot; /&gt;&lt;/a&gt;
  &amp;nbsp;
  &lt;a href=&quot;https://www.npmjs.com/package/payload&quot;&gt;&lt;img alt=&quot;npm&quot; src=&quot;https://img.shields.io/npm/dw/payload?style=flat-square&quot; /&gt;&lt;/a&gt;
  &amp;nbsp;
  &lt;a href=&quot;https://github.com/payloadcms/payload/graphs/contributors&quot;&gt;&lt;img alt=&quot;npm&quot; src=&quot;https://img.shields.io/github/contributors-anon/payloadcms/payload?color=yellow&amp;style=flat-square&quot; /&gt;&lt;/a&gt;
  &amp;nbsp;
  &lt;a href=&quot;https://www.npmjs.com/package/payload&quot;&gt;&lt;img alt=&quot;npm&quot; src=&quot;https://img.shields.io/npm/v/payload?style=flat-square&quot; /&gt;&lt;/a&gt;
  &amp;nbsp;
  &lt;a href=&quot;https://twitter.com/payloadcms&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/follow-payloadcms-1DA1F2?logo=twitter&amp;style=flat-square&quot; alt=&quot;Payload Twitter&quot; /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;hr/&gt;
&lt;h4&gt;
&lt;a target=&quot;_blank&quot; href=&quot;https://payloadcms.com/docs/getting-started/what-is-payload&quot; rel=&quot;dofollow&quot;&gt;&lt;strong&gt;Explore the Docs&lt;/strong&gt;&lt;/a&gt;&amp;nbsp;·&amp;nbsp;&lt;a target=&quot;_blank&quot; href=&quot;https://payloadcms.com/community-help&quot; rel=&quot;dofollow&quot;&gt;&lt;strong&gt;Community Help&lt;/strong&gt;&lt;/a&gt;&amp;nbsp;·&amp;nbsp;&lt;a target=&quot;_blank&quot; href=&quot;https://github.com/payloadcms/payload/discussions/1539&quot; rel=&quot;dofollow&quot;&gt;&lt;strong&gt;Roadmap&lt;/strong&gt;&lt;/a&gt;&amp;nbsp;·&amp;nbsp;&lt;a target=&quot;_blank&quot; href=&quot;https://www.g2.com/products/payload-cms/reviews#reviews&quot; rel=&quot;dofollow&quot;&gt;&lt;strong&gt;View G2 Reviews&lt;/strong&gt;&lt;/a&gt;
&lt;/h4&gt;
&lt;hr/&gt;

&gt; [!IMPORTANT]
&gt; Star this repo or keep an eye on it to follow along.

Payload is the first-ever Next.js native CMS that can install directly in your existing `/app` folder. It&#039;s the start of a new era for headless CMS.

&lt;h3&gt;Benefits over a regular CMS&lt;/h3&gt;
&lt;ul&gt;
   &lt;li&gt;It&#039;s both an app framework &amp; headless CMS&lt;/li&gt;
  &lt;li&gt;Deploy anywhere, including serverless on Vercel for free&lt;/li&gt;
  &lt;li&gt;Combine your front+backend in the same &lt;code&gt;/app&lt;/code&gt; folder if you want&lt;/li&gt;
  &lt;li&gt;Don&#039;t sign up for yet another SaaS - Payload is open source&lt;/li&gt;
  &lt;li&gt;Query your database in React Server Components&lt;/li&gt;
  &lt;li&gt;Both admin and backend are 100% extensible&lt;/li&gt;
  &lt;li&gt;No vendor lock-in&lt;/li&gt;
  &lt;li&gt;Never touch ancient WP code again&lt;/li&gt;
  &lt;li&gt;Build faster, never hit a roadblock&lt;/li&gt;
&lt;/ul&gt;

## Quickstart

Before beginning to work with Payload, make sure you have all of the [required software](https://payloadcms.com/docs/getting-started/installation).

```text
pnpx create-payload-app@latest
```

**If you&#039;re new to Payload, you should start with the website template** (`pnpx create-payload-app@latest -t website`). It shows how to do _everything_ - including custom Rich Text blocks, on-demand revalidation, live preview, and more. It comes with a frontend built with Tailwind all in one `/app` folder.

## One-click deployment options

You can deploy Payload serverlessly in one-click via Vercel and Cloudflare—giving everything you need without the hassle of the plumbing.

### Deploy on Cloudflare

Fully self-contained — one click to deploy Payload with **Workers**, **R2** for uploads, and **D1** for a globally replicated database.

[![Deploy to Cloudflare](https://deploy.workers.cloudflare.com/button)](https://dub.sh/payload-cloudflare)

### Deploy on Vercel

All-in-one on Vercel — one click to deploy Payload with a **Next.js** front end, **Neon** database, and **Vercel Blob** for media storage.

[![Deploy with Vercel](https://vercel.com/button)](https://dub.sh/payload-vercel)

## One-click templates

Jumpstart your next project with a ready-to-go template. These are **production-ready, end-to-end solutions** designed to get you to market fast. Build any kind of **website**, **ecommerce store**, **blog**, or **portfolio** — complete with a modern front end built using **React Server Components** and **Tailwind**.

#### 🌐 [Website](https://github.com/payloadcms/payload/tree/main/templates/website)

#### 🛍️ [Ecommerce](https://github.com/payloadcms/payload/tree/main/templates/ecommerce) 🎉 _**NEW**_ 🎉

We&#039;re constantly adding more templates to our [**Templates Directory**](https://github.com/payloadcms/payload/tree/main/templates).  
If you maintain your own, add the `payload-template` topic to your GitHub repo so others can discover it.

**🔗 Explore more:**

- [Official Templates](https://github.com/payloadcms/payload/tree/main/templates)
- [Community Templates](https://github.com/topics/payload-template)

## ✨ Payload Features

- Completely free and open-source
- Next.js native, built to run inside _your_ `/app` folder
- Use server components to extend Payload UI
- Query your database directly in server components, no need for REST / GraphQL
- Fully TypeScript with automatic types for your data
- [Auth out of the box](https://payloadcms.com/docs/authentication/overview)
- [Versions and drafts](https://payloadcms.com/docs/versions/overview)
- [Localization](https://payloadcms.com/docs/configuration/localization)
- [Block-based layout builder](https://payloadcms.com/docs/fields/blocks)
- [Customizable React admin](https://payloadcms.com/docs/admin/overview)
- [Lexical rich text editor](https://payloadcms.com/docs/fields/rich-text)
- [Conditional field logic](https://payloadcms.com/docs/fields/overview#conditional-logic)
- Extremely granular [Access Control](https://payloadcms.com/docs/access-control/overview)
- [Document and field-level hooks](https://payloadcms.com/docs/hooks/overview) for every action Payload provides
- Intensely fast API
- Highly secure thanks to HTTP-only cookies, CSRF protection, and more

&lt;a target=&quot;_blank&quot; href=&quot;https://github.com/payloadcms/payload/discussions&quot;&gt;&lt;strong&gt;Request Feature&lt;/strong&gt;&lt;/a&gt;

## 🗒️ Documentation

Check out the [Payload website](https://payloadcms.com/docs/getting-started/what-is-payload) to find in-depth documentation for everything that Payload offers.

Migrating from v2 to v3? Check out the [3.0 Migration Guide](https://github.com/payloadcms/payload/blob/main/docs/migration-guide/overview.mdx) on how to do it.

## 🙋 Contributing

If you want to add contributions to this repository, please follow the instructions in [contributing.md](./CONTRIBUTING.md).

## 📚 Examples

The [Examples Directory](./examples) is a great resource for learning how to setup Payload in a variety of different ways, but you can also find great examples in our blog and throughout our social media.

If you&#039;d like to run the examples, you can use `create-payload-app` to create a project from one:

```sh
npx create-payload-app --example example_name
```

You can see more examples at:

- [Examples Directory](./examples)
- [Payload Blog](https://payloadcms.com/blog)
- [Payload YouTube](https://www.youtube.com/@payloadcms)

## 🔌 Plugins

Payload is highly extensible and allows you to install or distribute plugins that add or remove functionality. There are both officially-supported and community-supported plugins available. If you maintain your own plugin, consider adding the `payload-plugin` topic to your GitHub repository for others to find.

- [Official Plugins](https://github.com/orgs/payloadcms/repositories?q=topic%3Apayload-plugin)
- [Community Plugins](https://github.com/topics/payload-plugin)

## 🚨 Need help?

There are lots of good conversations and resources in our Github Discussions board and our Discord Server. If you&#039;re struggling with something, chances are, someone&#039;s already solved what you&#039;re up against. :point_down:

- [GitHub Discussions](https://github.com/payloadcms/payload/discussions)
- [GitHub Issues](https://github.com/payloadcms/payload/issues)
- [Discord](https://t.co/30APlsQUPB)
- [Community Help](https://payloadcms.com/community-help)

## ⭐ Like what we&#039;re doing? Give us a star

## 👏 Thanks to all our contributors

&lt;img align=&quot;left&quot; src=&quot;https://contributors-img.web.app/image?repo=payloadcms/payload&quot;/&gt;
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[idosal/mcp-ui]]></title>
            <link>https://github.com/idosal/mcp-ui</link>
            <guid>https://github.com/idosal/mcp-ui</guid>
            <pubDate>Mon, 20 Oct 2025 00:05:04 GMT</pubDate>
            <description><![CDATA[UI over MCP. Create next-gen UI experiences with the protocol and SDK!]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/idosal/mcp-ui">idosal/mcp-ui</a></h1>
            <p>UI over MCP. Create next-gen UI experiences with the protocol and SDK!</p>
            <p>Language: TypeScript</p>
            <p>Stars: 2,960</p>
            <p>Forks: 215</p>
            <p>Stars today: 6 stars today</p>
            <h2>README</h2><pre>## 📦 Model Context Protocol UI SDK

&lt;p align=&quot;center&quot;&gt;
  &lt;img width=&quot;250&quot; alt=&quot;image&quot; src=&quot;https://github.com/user-attachments/assets/65b9698f-990f-4846-9b2d-88de91d53d4d&quot; /&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.npmjs.com/package/@mcp-ui/server&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/@mcp-ui/server?label=server&amp;color=green&quot; alt=&quot;Server Version&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://www.npmjs.com/package/@mcp-ui/client&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/@mcp-ui/client?label=client&amp;color=blue&quot; alt=&quot;Client Version&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://rubygems.org/gems/mcp_ui_server&quot;&gt;&lt;img src=&quot;https://img.shields.io/gem/v/mcp_ui_server&quot; alt=&quot;Ruby Server SDK Version&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://pypi.org/project/mcp-ui-server/&quot;&gt;&lt;img src=&quot;https://img.shields.io/pypi/v/mcp-ui-server?label=python&amp;color=yellow&quot; alt=&quot;Python Server SDK Version&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://discord.gg/CEAG4KW7ZH&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/1401195140436983879?logo=discord&amp;label=discord&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://gitmcp.io/idosal/mcp-ui&quot;&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https://gitmcp.io/badge/idosal/mcp-ui&quot; alt=&quot;MCP Documentation&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;#-whats-mcp-ui&quot;&gt;What&#039;s mcp-ui?&lt;/a&gt; •
  &lt;a href=&quot;#-core-concepts&quot;&gt;Core Concepts&lt;/a&gt; •
  &lt;a href=&quot;#-installation&quot;&gt;Installation&lt;/a&gt; •
  &lt;a href=&quot;#-getting-started&quot;&gt;Getting Started&lt;/a&gt; •
  &lt;a href=&quot;#-walkthrough&quot;&gt;Walkthrough&lt;/a&gt; •
  &lt;a href=&quot;#-examples&quot;&gt;Examples&lt;/a&gt; •
  &lt;a href=&quot;#-supported-hosts&quot;&gt;Supported Hosts&lt;/a&gt; •
  &lt;a href=&quot;#-security&quot;&gt;Security&lt;/a&gt; •
  &lt;a href=&quot;#-roadmap&quot;&gt;Roadmap&lt;/a&gt; •
  &lt;a href=&quot;#-contributing&quot;&gt;Contributing&lt;/a&gt; •
  &lt;a href=&quot;#-license&quot;&gt;License&lt;/a&gt;
&lt;/p&gt;

----

**`mcp-ui`** brings interactive web components to the [Model Context Protocol](https://modelcontextprotocol.io/introduction) (MCP). Deliver rich, dynamic UI resources directly from your MCP server to be rendered by the client. Take AI interaction to the next level!

&gt; *This project is an experimental community playground for MCP UI ideas. Expect rapid iteration and enhancements!*

&lt;p align=&quot;center&quot;&gt;
  &lt;video src=&quot;https://github.com/user-attachments/assets/7180c822-2dd9-4f38-9d3e-b67679509483&quot;&gt;&lt;/video&gt;
&lt;/p&gt;

## 💡 What&#039;s `mcp-ui`?

`mcp-ui` is a playground for the open spec of UI over MCP. It offers a collection of community SDKs comprising:

* **`@mcp-ui/server` (TypeScript)**: Utilities to generate UI resources (`UIResource`) on your MCP server.
* **`@mcp-ui/client` (TypeScript)**: UI components (e.g., `&lt;UIResourceRenderer /&gt;`) to render the UI resources and handle their events.
* **`mcp_ui_server` (Ruby)**: Utilities to generate UI resources on your MCP server in a Ruby environment.
* **`mcp-ui-server` (Python)**: Utilities to generate UI resources on your MCP server in a Python environment.

Together, they let you define reusable UI snippets on the server side, seamlessly and securely render them in the client, and react to their actions in the MCP host environment.

## ✨ Core Concepts

In essence, by using `mcp-ui` SDKs, servers and hosts can agree on contracts that enable them to create and render interactive UI snippets (as a path to a standardized UI approach in MCP).

### UI Resource
The primary payload returned from the server to the client is the `UIResource`:

```ts
interface UIResource {
  type: &#039;resource&#039;;
  resource: {
    uri: string;       // e.g., ui://component/id
    mimeType: &#039;text/html&#039; | &#039;text/uri-list&#039; | &#039;application/vnd.mcp-ui.remote-dom&#039;; // text/html for HTML content, text/uri-list for URL content, application/vnd.mcp-ui.remote-dom for remote-dom content (Javascript)
    text?: string;      // Inline HTML, external URL, or remote-dom script
    blob?: string;      // Base64-encoded HTML, URL, or remote-dom script
  };
}
```

* **`uri`**: Unique identifier for caching and routing
  * `ui://…` — UI resources (rendering method determined by mimeType)
* **`mimeType`**: `text/html` for HTML content (iframe srcDoc), `text/uri-list` for URL content (iframe src), `application/vnd.mcp-ui.remote-dom` for remote-dom content (Javascript)
  * **MCP-UI requires a single URL**: While `text/uri-list` format supports multiple URLs, MCP-UI uses only the first valid `http/s` URL and warns if additional URLs are found
* **`text` vs. `blob`**: Choose `text` for simple strings; use `blob` for larger or encoded content.

### Resource Renderer

The UI Resource is rendered in the `&lt;UIResourceRenderer /&gt;` component. It automatically detects the resource type and renders the appropriate component.

It is available as a React component and as a Web Component.

**React Component**

It accepts the following props:
- **`resource`**: The resource object from an MCP Tool response. It must include `uri`, `mimeType`, and content (`text`, `blob`)
- **`onUIAction`**: Optional callback for handling UI actions from the resource:
  ```typescript
  { type: &#039;tool&#039;, payload: { toolName: string, params: Record&lt;string, unknown&gt; }, messageId?: string } |
  { type: &#039;intent&#039;, payload: { intent: string, params: Record&lt;string, unknown&gt; }, messageId?: string } |
  { type: &#039;prompt&#039;, payload: { prompt: string }, messageId?: string } |
  { type: &#039;notify&#039;, payload: { message: string }, messageId?: string } |
  { type: &#039;link&#039;, payload: { url: string }, messageId?: string }
  ```
  When actions include a `messageId`, the iframe automatically receives response messages for asynchronous handling.
- **`supportedContentTypes`**: Optional array to restrict which content types are allowed (`[&#039;rawHtml&#039;, &#039;externalUrl&#039;, &#039;remoteDom&#039;]`)
- **`htmlProps`**: Optional props for the internal `&lt;HTMLResourceRenderer&gt;`
  - **`style`**: Optional custom styles for the iframe
  - **`iframeProps`**: Optional props passed to the iframe element
  - **`iframeRenderData`**: Optional `Record&lt;string, unknown&gt;` to pass data to the iframe upon rendering. This enables advanced use cases where the parent application needs to provide initial state or configuration to the sandboxed iframe content.
  - **`autoResizeIframe`**: Optional `boolean | { width?: boolean; height?: boolean }` to automatically resize the iframe to the size of the content.
- **`remoteDomProps`**: Optional props for the internal `&lt;RemoteDOMResourceRenderer&gt;`
  - **`library`**: Optional component library for Remote DOM resources (defaults to `basicComponentLibrary`)
  - **`remoteElements`**: remote element definitions for Remote DOM resources.

**Web Component**

The Web Component is available as `&lt;ui-resource-renderer&gt;`. It accepts the same props as the React component, but they must be passed as strings.

Example:
```html
&lt;ui-resource-renderer
  resource=&#039;{ &quot;mimeType&quot;: &quot;text/html&quot;, &quot;text&quot;: &quot;&lt;h2&gt;Hello from the Web Component!&lt;/h2&gt;&quot; }&#039;
&gt;&lt;/ui-resource-renderer&gt;
```

The `onUIAction` prop can be handled by attaching an event listener to the component:
```javascript
const renderer = document.querySelector(&#039;ui-resource-renderer&#039;);
renderer.addEventListener(&#039;onUIAction&#039;, (event) =&gt; {
  console.log(&#039;Action:&#039;, event.detail);
});
```

The Web Component is available in the `@mcp-ui/client` package at `dist/ui-resource-renderer.wc.js`.

### Supported Resource Types

#### HTML (`text/html` and `text/uri-list`)

Rendered using the internal `&lt;HTMLResourceRenderer /&gt;` component, which displays content inside an `&lt;iframe&gt;`. This is suitable for self-contained HTML or embedding external apps.

*   **`mimeType`**:
    *   `text/html`: Renders inline HTML content.
    *   `text/uri-list`: Renders an external URL. MCP-UI uses the first valid `http/s` URL.

#### Remote DOM (`application/vnd.mcp-ui.remote-dom`)

Rendered using the internal `&lt;RemoteDOMResourceRenderer /&gt;` component, which utilizes Shopify&#039;s [`remote-dom`](https://github.com/Shopify/remote-dom). The server responds with a script that describes the UI and events. On the host, the script is securely rendered in a sandboxed iframe, and the UI changes are communicated to the host in JSON, where they&#039;re rendered using the host&#039;s component library. This is more flexible than iframes and allows for UIs that match the host&#039;s look-and-feel.

* **`mimeType`**: `application/vnd.mcp-ui.remote-dom+javascript; framework={react | webcomponents}`

### UI Action

UI snippets must be able to interact with the agent. In `mcp-ui`, this is done by hooking into events sent from the UI snippet and reacting to them in the host (see `onUIAction` prop). For example, an HTML may trigger a tool call when a button is clicked by sending an event which will be caught handled by the client.


### Platform Adapters

MCP-UI SDKs includes adapter support for host-specific implementations, enabling your open MCP-UI widgets to work seamlessly regardless of host. Adapters automatically translate between MCP-UI&#039;s `postMessage` protocol and host-specific APIs. Over time, as hosts become compatible with the open spec, these adapters wouldn&#039;t be needed.

#### Available Adapters

##### Apps SDK Adapter

For Apps SDK environments (e.g., ChatGPT), this adapter translates MCP-UI protocol to Apps SDK API calls (e.g., `window.openai`).

**How it Works:**
- Intercepts MCP-UI `postMessage` calls from your widgets
- Translates them to appropriate Apps SDK API calls
- Handles bidirectional communication (tools, prompts, state management)
- Works transparently - your existing MCP-UI code continues to work without changes

**Usage:**

```ts
import { createUIResource } from &#039;@mcp-ui/server&#039;;

const htmlResource = createUIResource({
  uri: &#039;ui://greeting/1&#039;,
  content: { 
    type: &#039;rawHtml&#039;, 
    htmlString: `
      &lt;button onclick=&quot;window.parent.postMessage({ type: &#039;tool&#039;, payload: { toolName: &#039;myTool&#039;, params: {} } }, &#039;*&#039;)&quot;&gt;
        Call Tool
      &lt;/button&gt;
    ` 
  },
  encoding: &#039;text&#039;,
  // Enable adapters
  adapters: {
    appsSdk: {
      enabled: true,
      config: ...
    }
    // Future adapters can be enabled here
  }
});
```

The adapter scripts are automatically injected into your HTML content and handle all protocol translation.

**Supported Actions:**
- ✅ **Tool calls** - `{ type: &#039;tool&#039;, payload: { toolName, params } }`
- ✅ **Prompts** - `{ type: &#039;prompt&#039;, payload: { prompt } }`
- ✅ **Intents** - `{ type: &#039;intent&#039;, payload: { intent, params } }` (converted to prompts)
- ✅ **Notifications** - `{ type: &#039;notify&#039;, payload: { message } }`
- ✅ **Render data** - Access to `toolInput`, `toolOutput`, `widgetState`, `theme`, `locale`
- ⚠️ **Links** - `{ type: &#039;link&#039;, payload: { url } }` (may not be supported, returns error in some environments)

#### Advanced Usage

You can manually wrap HTML with adapters or access adapter scripts directly:

```ts
import { wrapHtmlWithAdapters, getAppsSdkAdapterScript } from &#039;@mcp-ui/server&#039;;

// Manually wrap HTML with adapters
const wrappedHtml = wrapHtmlWithAdapters(
  &#039;&lt;button&gt;Click me&lt;/button&gt;&#039;,
  {
    appsSdk: {
      enabled: true,
      config: { intentHandling: &#039;ignore&#039; }
    }
  }
);

// Get a specific adapter script
const appsSdkScript = getAppsSdkAdapterScript({ timeout: 60000 });
```

## 🏗️ Installation

### TypeScript

```bash
# using npm
npm install @mcp-ui/server @mcp-ui/client

# or pnpm
pnpm add @mcp-ui/server @mcp-ui/client

# or yarn
yarn add @mcp-ui/server @mcp-ui/client
```

### Ruby

```bash
gem install mcp_ui_server
```

### Python

```bash
# using pip
pip install mcp-ui-server

# or uv
uv add mcp-ui-server
```

## 🚀 Getting Started

You can use [GitMCP](https://gitmcp.io/idosal/mcp-ui) to give your IDE access to `mcp-ui`&#039;s latest documentation! 

### TypeScript

1. **Server-side**: Build your UI resources

   ```ts
   import { createUIResource } from &#039;@mcp-ui/server&#039;;
   import {
    createRemoteComponent,
    createRemoteDocument,
    createRemoteText,
   } from &#039;@remote-dom/core&#039;;

   // Inline HTML
   const htmlResource = createUIResource({
     uri: &#039;ui://greeting/1&#039;,
     content: { type: &#039;rawHtml&#039;, htmlString: &#039;&lt;p&gt;Hello, MCP UI!&lt;/p&gt;&#039; },
     encoding: &#039;text&#039;,
   });

   // External URL
   const externalUrlResource = createUIResource({
     uri: &#039;ui://greeting/1&#039;,
     content: { type: &#039;externalUrl&#039;, iframeUrl: &#039;https://example.com&#039; },
     encoding: &#039;text&#039;,
   });

   // remote-dom
   const remoteDomResource = createUIResource({
     uri: &#039;ui://remote-component/action-button&#039;,
     content: {
       type: &#039;remoteDom&#039;,
       script: `
        const button = document.createElement(&#039;ui-button&#039;);
        button.setAttribute(&#039;label&#039;, &#039;Click me for a tool call!&#039;);
        button.addEventListener(&#039;press&#039;, () =&gt; {
          window.parent.postMessage({ type: &#039;tool&#039;, payload: { toolName: &#039;uiInteraction&#039;, params: { action: &#039;button-click&#039;, from: &#039;remote-dom&#039; } } }, &#039;*&#039;);
        });
        root.appendChild(button);
        `,
       framework: &#039;react&#039;, // or &#039;webcomponents&#039;
     },
     encoding: &#039;text&#039;,
   });
   ```

2. **Client-side**: Render in your MCP host

   ```tsx
   import React from &#039;react&#039;;
   import { UIResourceRenderer } from &#039;@mcp-ui/client&#039;;

   function App({ mcpResource }) {
     if (
       mcpResource.type === &#039;resource&#039; &amp;&amp;
       mcpResource.resource.uri?.startsWith(&#039;ui://&#039;)
     ) {
       return (
         &lt;UIResourceRenderer
           resource={mcpResource.resource}
           onUIAction={(result) =&gt; {
             console.log(&#039;Action:&#039;, result);
           }}
         /&gt;
       );
     }
     return &lt;p&gt;Unsupported resource&lt;/p&gt;;
   }
   ```

### Python

**Server-side**: Build your UI resources

   ```python
   from mcp_ui_server import create_ui_resource

   # Inline HTML
   html_resource = create_ui_resource({
     &quot;uri&quot;: &quot;ui://greeting/1&quot;,
     &quot;content&quot;: { &quot;type&quot;: &quot;rawHtml&quot;, &quot;htmlString&quot;: &quot;&lt;p&gt;Hello, from Python!&lt;/p&gt;&quot; },
     &quot;encoding&quot;: &quot;text&quot;,
   })

   # External URL
   external_url_resource = create_ui_resource({
     &quot;uri&quot;: &quot;ui://greeting/2&quot;,
     &quot;content&quot;: { &quot;type&quot;: &quot;externalUrl&quot;, &quot;iframeUrl&quot;: &quot;https://example.com&quot; },
     &quot;encoding&quot;: &quot;text&quot;,
   })
   ```

### Ruby

**Server-side**: Build your UI resources

   ```ruby
   require &#039;mcp_ui_server&#039;

   # Inline HTML
   html_resource = McpUiServer.create_ui_resource(
     uri: &#039;ui://greeting/1&#039;,
     content: { type: :raw_html, htmlString: &#039;&lt;p&gt;Hello, from Ruby!&lt;/p&gt;&#039; },
     encoding: :text
   )

   # External URL
   external_url_resource = McpUiServer.create_ui_resource(
     uri: &#039;ui://greeting/2&#039;,
     content: { type: :external_url, iframeUrl: &#039;https://example.com&#039; },
     encoding: :text
   )

   # remote-dom
   remote_dom_resource = McpUiServer.create_ui_resource(
     uri: &#039;ui://remote-component/action-button&#039;,
     content: {
       type: :remote_dom,
       script: &quot;
        const button = document.createElement(&#039;ui-button&#039;);
        button.setAttribute(&#039;label&#039;, &#039;Click me from Ruby!&#039;);
        button.addEventListener(&#039;press&#039;, () =&gt; {
          window.parent.postMessage({ type: &#039;tool&#039;, payload: { toolName: &#039;uiInteraction&#039;, params: { action: &#039;button-click&#039;, from: &#039;ruby-remote-dom&#039; } } }, &#039;*&#039;);
        });
        root.appendChild(button);
        &quot;,
       framework: :react,
     },
     encoding: :text
   )
   ```

## 🚶 Walkthrough

For a detailed, simple, step-by-step guide on how to integrate `mcp-ui` into your own server, check out the full server walkthroughs on the [mcp-ui documentation site](https://mcpui.dev):

- **[TypeScript Server Walkthrough](https://mcpui.dev/guide/server/typescript/walkthrough)**
- **[Ruby Server Walkthrough](https://mcpui.dev/guide/server/ruby/walkthrough)**
- **[Python Server Walkthrough](https://mcpui.dev/guide/server/python/walkthrough)**

These guides will show you how to add a `mcp-ui` endpoint to an existing server, create tools that return UI resources, and test your setup with the `ui-inspector`!

## 🌍 Examples

**Client Examples**
* [Goose](https://github.com/block/goose) - open source AI agent that supports `mcp-ui`.
* [LibreChat](https://github.com/danny-avila/LibreChat) - enhanced ChatGPT clone that supports `mcp-ui`.
* [ui-inspector](https://github.com/idosal/ui-inspector) - inspect local `mcp-ui`-enabled servers.
* [MCP-UI Chat](https://github.com/idosal/scira-mcp-ui-chat) - interactive chat built with the `mcp-ui` client. Check out the [hosted version](https://scira-mcp-chat-git-main-idosals-projects.vercel.app/)!
* MCP-UI RemoteDOM Playground (`examples/remote-dom-demo`) - local demo app to test RemoteDOM resources
* MCP-UI Web Component Demo (`examples/wc-demo`) - local demo app to test the Web Component integration in hosts

**Server Examples**
* **TypeScript**: A [full-featured server](examples/server) that is deployed to a hosted environment for easy testing.
  * **[`typescript-server-demo`](./examples/typescript-server-demo)**: A simple Typescript server that demonstrates how to generate UI resources.
  * **server**: A [full-featured Typescript server](examples/server) that is deployed to a hosted Cloudflare environment for easy testing.
    * **HTTP Streaming**: `https://remote-mcp-server-authless.idosalomon.workers.dev/mcp`
    * **SSE**: `https://remote-mcp-server-authless.idosalomon.workers.dev/sse`
* **Ruby**: A barebones [demo server](/examples/ruby-server-demo) that shows how to use `mcp_ui_server` and `mcp` gems together.
* **Python**: A simple [demo server](/examples/python-server-demo) that shows how to use the `mcp-ui-server` Python package.
* [XMCP](https://github.com/basementstudio/xmcp/tree/main/examples/mcp-ui) - Typescript MCP framework with `mcp-ui` starter example.

Drop those URLs into any MCP-compatible host to see `mcp-ui` in action. For a supported local inspector, see the [ui-inspector](https://github.com/idosal/ui-inspector).

## 💻 Supported Hosts

`mcp-ui` is supported by a growing number of MCP-compatible clients. Feature support varies by host:

| Host      | Rendering | UI Actions | Notes
| :-------- | :-------: | :--------: | :--------: |
| [Nanobot](https://www.nanobot.ai/)    |     ✅    |     ✅     |
| [ChatGPT](https://chatgpt.com/)    |     ✅    |     ⚠️     | [Guide](https://mcpui.dev/guide/apps-sdk)
| [Postman](https://www.postman.com/)   |     ✅    |     ⚠️      |
| [Goose](https://block.github.io/goose/)     |     ✅    |     ⚠️      |
| [LibreChat](https://www.librechat.ai/)    |     ✅    |     ⚠️     |
| [Smithery](https://smithery.ai/playground)  |     ✅    |     ❌     |
| [MCPJam](https://www.mcpjam.com/)    |     ✅    |     ❌     |
| [fast-agent](https://fast-agent.ai/mcp/mcp-ui/) | ✅ | ❌ |
| [VSCode](https://github.com/microsoft/vscode/issues/260218) (TBA)    |    ?    |    ?     |

**Legend:**
- ✅: Supported
- ⚠️: Partial Support
- ❌: Not Supported (yet)

## 🔒 Security
Host and user security is one of `mcp-ui`&#039;s primary concerns. In all content types, the remote code is executed in a sandboxed iframe.

## 🛣️ Roadmap

- [X] Add online playground
- [X] Expand UI Action API (beyond tool calls)
- [X] Support Web Components
- [X] Support Remote-DOM
- [ ] Add component libraries (in progress)
- [ ] Add SDKs for additional programming languages (in progress; Ruby, Python available)
- [ ] Support additional frontend frameworks
- [ ] Add declarative UI content type
- [ ] Support generative UI?
      
## Core Team
`mcp-ui` is a project by [Ido Salomon](https://x.com/idosal1), in collaboration with [Liad Yosef](https://x.com/liadyosef).

## 🤝 Contributing

Contributions, ideas, and bug reports are welcome! See the [contribution guidelines](https://github.com/idosal/mcp-ui/blob/main/.github/CONTRIBUTING.md) to get started.

## 📄 License

Apache License 2.0 © [The MCP-UI Authors](LICENSE)

## Disclaimer

This project is provided &quot;as is&quot;, without warranty of any kind. The `mcp-ui` authors and contributors shall not be held liable for any damages, losses, or issues arising from the use of this software. Use at your own risk.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[RocketChat/Rocket.Chat]]></title>
            <link>https://github.com/RocketChat/Rocket.Chat</link>
            <guid>https://github.com/RocketChat/Rocket.Chat</guid>
            <pubDate>Mon, 20 Oct 2025 00:05:03 GMT</pubDate>
            <description><![CDATA[The communications platform that puts data protection first.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/RocketChat/Rocket.Chat">RocketChat/Rocket.Chat</a></h1>
            <p>The communications platform that puts data protection first.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 43,671</p>
            <p>Forks: 12,277</p>
            <p>Stars today: 11 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt; 
  &lt;img  src=&quot;https://github.com/RocketChat/Rocket.Chat.Artwork/raw/master/Logos/2020/png/logo-horizontal-red.png&quot; data-canonical-src=&quot;https://github.com/RocketChat/Rocket.Chat.Artwork/raw/master/Logos/2020/png/logo-horizontal-red.png&quot; width=&quot;400&quot; /&gt;
&lt;/p&gt;

&lt;h1 align=&quot;center&quot;&gt;
  The ultimate secure open-source solution for team communications
&lt;/h1&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/github/v/release/RocketChat/Rocket.Chat?label=version&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/github/actions/workflow/status/RocketChat/Rocket.Chat/build_and_test.yml&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/badge/license-MIT-green&quot;&gt;
  &lt;img alt=&quot;Codecov branch&quot; src=&quot;https://img.shields.io/codecov/c/github/RocketChat/Rocket.Chat/develop&quot;&gt;
&lt;/p&gt;



[Rocket.Chat](https://rocket.chat) is an open-source, secure, fully customizable communications platform developed in TypeScript for organizations with high standards of data protection.

We are the ultimate solution for team communications, enabling real-time conversations between colleagues, with other companies, and with your customers or citizens, regardless of how they connect with you. The result is an increase in productivity and user satisfaction rates.

Every day, tens of millions of users in over 150 countries and in organizations such as Deutsche Bahn, The US Navy, and Credit Suisse trust Rocket.Chat to keep their communications completely private and secure.

# 🚀 Platform overview

Rocket.Chat provides endless possibilities. Here’s an overview of the features you benefit from:

💬 [**Team collaboration**](https://docs.rocket.chat/docs/collaborate-using-rocketchat): A single point for secure internal and cross-company collaboration with role-based access control.

🎯 [**Omnichannel citizen engagement**](https://docs.rocket.chat/docs/omnichannel): Seamless digital interactions with your citizens and customers across platforms like WhatsApp, SMS, and more.

🦾 [**Optimization**](https://docs.rocket.chat/docs/optimize-your-workspace): Enhance productivity with self-hosted AI and a customizable and accessible workspace.

🤖 [**Extend and integrate**](https://docs.rocket.chat/docs/extend-and-integrate-rocketchat-capabilities): Install and use public apps from the Rocket.Chat Marketplace, build your own apps, and embed the workspace into your platform.

&lt;img src=&quot;https://global-uploads.webflow.com/611a19b9853b7414a0f6b3f6/6319c72bbd8af5c8c22efab6_heroImage.webp&quot; data-canonical-src=&quot;https://global-uploads.webflow.com/611a19b9853b7414a0f6b3f6/6319c72bbd8af5c8c22efab6_heroImage.webp&quot;  /&gt;

# 💻 Deploy Rocket.Chat

We support different methods of deployment for different needs. Choose your method:

- Are you deploying Rocket.Chat on your own servers? You can deploy using one of the recommended methods: Docker, Podman, or Kubernetes. Refer to the [Deployment Guide](https://docs.rocket.chat/docs/deploy-rocketchat) for details. Before you deploy, make sure to check the [system requirements](https://docs.rocket.chat/docs/system-requirements) to deploy a workspace successfully.

- Do you need to run the workspace on an isolated network? Set up an [air-gapped workspace](https://docs.rocket.chat/docs/rocketchat-air-gapped-deployment) to use Rocket.Chat without internet access, suitable for high-security or regulated environments.

- Looking for a custom cloud-hosted solution without handling infrastructure? Check out our premium, dedicated [cloud hosting options](https://docs.rocket.chat/docs/rocketchat-cloud-hosting-service-level-agreement-sla) that adapt to your needs.

- Interested in decentralized communication? Deploy a [federated workspace](https://docs.rocket.chat/docs/rocketchat-federation) to securely communicate and share resources across a federated network.

# 📱 Desktop and mobile apps

In addition to the web app, you can also download the Rocket.Chat mobile app:

[![Rocket.Chat on Apple App Store](https://user-images.githubusercontent.com/551004/29770691-a2082ff4-8bc6-11e7-89a6-964cd405ea8e.png)](https://itunes.apple.com/us/app/rocket-chat/id1148741252?mt=8) [![Rocket.Chat on Google Play](https://user-images.githubusercontent.com/551004/29770692-a20975c6-8bc6-11e7-8ab0-1cde275496e0.png)](https://play.google.com/store/apps/details?id=chat.rocket.android)

Download the desktop app:
- [Download on the Mac App Store](https://apps.apple.com/us/app/rocket-chat/id1086818840?mt=12)
- [Install from the Windows Store](https://apps.microsoft.com/detail/9nblggh52jv6?hl=en-us&amp;gl=NG&amp;ocid=pdpshare)
- [Get from Snapcraft for Linux](https://snapcraft.io/rocketchat-desktop) or use the command `sudo snap install rocketchat-desktop`

Refer to the [Installation guide](https://docs.rocket.chat/docs/desktop-mobile-apps) for further details.

# 📖 Rocket.Chat documentation

- [User documentation](https://docs.rocket.chat/docs/rocketchat)
- [Administrator&#039;s guide](https://docs.rocket.chat/docs/administrators-guide)
- [Developer documentation](https://developer.rocket.chat/docs/rocketchat-developer)
- [API documentation](https://developer.rocket.chat/apidocs)
- [YouTube Rocket.Chat Learning Center](https://www.youtube.com/playlist?list=PLee3gqXJQrFVXnNs5GiuoTMy269ydvcOB)

# 🛠️ Additional resources for developers

You can set up a Rocket.Chat development environment by following the guides below:

- **[Server](https://developer.rocket.chat/docs/server)**: See how to set up a Rocket.Chat server development environment on Linux distributions, Windows, Mac, and Gitpod.

- **[Desktop](https://developer.rocket.chat/docs/desktop-app)**: Learn how to set up and customize a desktop development environment. You can follow and contribute to the [Rocket.Chat.Electron](https://github.com/RocketChat/Rocket.Chat.Electron) repository.

- **[Mobile](https://developer.rocket.chat/docs/mobile-app)**: Learn about mobile app development and configuring push notifications. You can follow and contribute to the [Rocket.Chat.ReactNative](https://github.com/RocketChat/Rocket.Chat.ReactNative) repository.

# 🧩 Apps-Engine

Develop your own apps that can be integrated with Rocket.Chat. We provide an [open-source Apps-Engine framework](https://developer.rocket.chat/docs/rocketchat-apps-engine) which expands the integration possibilities within the Rocket.Chat ecosystem.

# 🆕 Feature request

[Rocket.Chat/feature-requests](https://github.com/RocketChat/feature-requests) is used to track Rocket.Chat feature requests and discussions. Click [here](https://github.com/RocketChat/feature-requests/issues/new?template=feature_request.md) to open a new feature request. [Feature Request Forums](https://forums.rocket.chat/c/feature-requests/8) stores the historical archives of old feature requests (up to 2018).

# 🤝 Community

Join thousands of members worldwide in our [community server](https://open.rocket.chat).
Join [#support](https://open.rocket.chat/channel/support) and [#general](https://open.rocket.chat/channel/general) for help from the community.


# 👥 Contributions

Rocket.Chat is an open-source project, and we are very happy to accept community contributions. Refer to the [Contribution guide](https://developer.rocket.chat/docs/contribute-to-rocketchat) for more details.


# 💼 Become a Rocketeer

We&#039;re hiring developers, technical support, and product managers all the time. Check out our [jobs page](https://rocket.chat/jobs).

# 🗞️ Get the Latest News

- [Blog](https://rocket.chat/blog)
- [Twitter](https://twitter.com/RocketChat)
- [Facebook](https://www.facebook.com/RocketChatApp)
- [LinkedIn](https://www.linkedin.com/company/rocket-chat)
- [Youtube](https://www.youtube.com/channel/UCin9nv7mUjoqrRiwrzS5UVQ)

# 🗒️ Credits

- Emoji provided graciously by [JoyPixels](https://www.joypixels.com).
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[AykutSarac/jsoncrack.com]]></title>
            <link>https://github.com/AykutSarac/jsoncrack.com</link>
            <guid>https://github.com/AykutSarac/jsoncrack.com</guid>
            <pubDate>Mon, 20 Oct 2025 00:05:02 GMT</pubDate>
            <description><![CDATA[✨ Innovative and open-source visualization application that transforms various data formats, such as JSON, YAML, XML, CSV and more, into interactive graphs.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/AykutSarac/jsoncrack.com">AykutSarac/jsoncrack.com</a></h1>
            <p>✨ Innovative and open-source visualization application that transforms various data formats, such as JSON, YAML, XML, CSV and more, into interactive graphs.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 42,213</p>
            <p>Forks: 3,021</p>
            <p>Stars today: 32 stars today</p>
            <h2>README</h2><pre>&lt;!-- PROJECT LOGO --&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/AykutSarac/jsoncrack.com&quot;&gt;
   &lt;img src=&quot;./public/assets/192.png&quot; height=&quot;50&quot; alt=&quot;Logo&quot;&gt;
  &lt;/a&gt;

  &lt;h1 align=&quot;center&quot;&gt;JSON Crack&lt;/h1&gt;

  &lt;p align=&quot;center&quot;&gt;
    The open-source JSON Editor.
    &lt;br /&gt;
    &lt;a href=&quot;https://jsoncrack.com&quot;&gt;&lt;strong&gt;Learn more »&lt;/strong&gt;&lt;/a&gt;
    &lt;br /&gt;
    &lt;br /&gt;
    &lt;a href=&quot;https://todiagram.com&quot;&gt;ToDiagram&lt;/a&gt;
    ·
    &lt;a href=&quot;https://discord.gg/yVyTtCRueq&quot;&gt;Discord&lt;/a&gt;
    ·
    &lt;a href=&quot;https://jsoncrack.com&quot;&gt;Website&lt;/a&gt;
    ·
    &lt;a href=&quot;https://github.com/AykutSarac/jsoncrack.com/issues&quot;&gt;Issues&lt;/a&gt;
    ·
    &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=AykutSarac.jsoncrack-vscode&quot;&gt;VS Code&lt;/a&gt;
  &lt;/p&gt;
&lt;/p&gt;

&lt;!-- ABOUT THE PROJECT --&gt;

## About the Project

&lt;img width=&quot;100%&quot; alt=&quot;booking-screen&quot; src=&quot;./public/assets/editor.webp&quot;&gt;

## Visualize JSON into interactive graphs

JSON Crack is a tool for visualizing JSON data in a structured, interactive graphs, making it easier to explore, format, and validate JSON. It offers features like converting JSON to other formats (CSV, YAML), generating JSON Schema, executing queries, and exporting visualizations as images. Designed for both readability and usability.

* **Visualizer**: Instantly convert JSON, YAML, CSV, XML, and TOML into interactive graphs or trees in dark or light mode.
* **Convert**: Seamlessly transform data formats, like JSON to CSV or XML to JSON, for easy sharing.
* **Format &amp; Validate**: Beautify and validate JSON, YAML, and CSV for clear and accurate data.
* **Code Generation**: Generate TypeScript interfaces, Golang structs, and JSON Schema.
* **JSON Schema**: Create JSON Schema, mock data, and validate various data formats.
* **Advanced Tools**: Decode JWT, randomize data, and run jq or JSON path queries.
* **Export Image**: Download your visualization as PNG, JPEG, or SVG.
* **Privacy**: All data processing is local; nothing is stored on our servers.

## Recognition

&lt;a href=&quot;https://news.ycombinator.com/item?id=32626873&quot;&gt;
  &lt;img
    style=&quot;width: 250px; height: 54px;&quot; width=&quot;250&quot; height=&quot;54&quot;
    alt=&quot;Featured on Hacker News&quot;
    src=&quot;https://hackernews-badge.vercel.app/api?id=32626873&quot;
  /&gt;
&lt;/a&gt;

&lt;a href=&quot;https://producthunt.com/posts/JSON-Crack?utm_source=badge-featured&amp;utm_medium=badge&amp;utm_souce=badge-jsoncrack&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=332281&amp;theme=light&quot; alt=&quot;JSON Crack | Product Hunt&quot; style=&quot;width: 250px; height: 54px;&quot; width=&quot;250&quot; height=&quot;54&quot; /&gt;&lt;/a&gt;

### Built With

- [Next.js](https://nextjs.org/?ref=jsoncrack.com)
- [React.js](https://reactjs.org/?ref=jsoncrack.com)
- [Reaflow](https://reaflow.dev/?ref=jsoncrack.com)
- [Monaco Editor](https://github.com/suren-atoyan/monaco-react)

## Stay Up-to-Date

JSON Crack officially launched as v1.0 on the 17th of February 2022 and we&#039;ve come a long way so far. Watch **releases** of this repository to be notified of future updates:

&lt;a href=&quot;https://github.com/AykutSarac/jsoncrack.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/AykutSarac/jsoncrack.com&quot; alt=&quot;Star at GitHub&quot; /&gt;&lt;/a&gt;

&lt;!-- GETTING STARTED --&gt;

## Getting Started

To get a local copy up and running, please follow these simple steps.

### Prerequisites

Here is what you need to be able to run JSON Crack.

- Node.js (Version: &gt;=18.x)
- Pnpm _(recommended)_


## Development

### Setup

1. Clone the repo into a public GitHub repository (or fork https://github.com/AykutSarac/jsoncrack.com/fork). If you plan to distribute the code, read the [`LICENSE`](/LICENSE.md) for additional details.

   ```sh
   git clone https://github.com/AykutSarac/jsoncrack.com.git
   ```

2. Go to the project folder

   ```sh
   cd jsoncrack.com
   ```

3. Install packages

   ```sh
   pnpm install
   ```

4. Run the project

   ```sh
   pnpm dev

   # Running on http://localhost:3000/
   ```

### Docker

🐳 A [`Dockerfile`](Dockerfile) is provided in the root of the repository.
If you want to run JSON Crack locally:

```console
# Build a Docker image with:
docker compose build

# Run locally with `docker-compose`
docker compose up

# Go to http://localhost:8888
```

## Configuration

The supported node limit can be changed by editing the `NEXT_PUBLIC_NODE_LIMIT` value in the `.env` file at the project root.

&lt;!-- LICENSE --&gt;

## License

See [`LICENSE`](/LICENSE.md) for more information.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[laurent22/joplin]]></title>
            <link>https://github.com/laurent22/joplin</link>
            <guid>https://github.com/laurent22/joplin</guid>
            <pubDate>Mon, 20 Oct 2025 00:05:01 GMT</pubDate>
            <description><![CDATA[Joplin - the privacy-focused note taking app with sync capabilities for Windows, macOS, Linux, Android and iOS.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/laurent22/joplin">laurent22/joplin</a></h1>
            <p>Joplin - the privacy-focused note taking app with sync capabilities for Windows, macOS, Linux, Android and iOS.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 51,774</p>
            <p>Forks: 5,548</p>
            <p>Stars today: 19 stars today</p>
            <h2>README</h2><pre>[![Donate](https://joplinapp.org/images/badges/Donate-PayPal-green.svg)](https://www.paypal.com/cgi-bin/webscr?cmd=_donations&amp;business=E8JMYD2LQ8MMA&amp;lc=GB&amp;item_name=Joplin+Development&amp;currency_code=EUR&amp;bn=PP%2dDonationsBF%3abtn_donateCC_LG%2egif%3aNonHosted) [![Sponsor on GitHub](https://joplinapp.org/images/badges/GitHub-Badge.svg)](https://github.com/sponsors/laurent22/) [![Become a patron](https://joplinapp.org/images/badges/Patreon-Badge.svg)](https://www.patreon.com/joplin)

* * *

&lt;img width=&quot;64&quot; src=&quot;https://raw.githubusercontent.com/laurent22/joplin/master/Assets/LinuxIcons/256x256.png&quot; align=&quot;left&quot; /&gt; **Joplin** is a free, open source note taking and to-do application, which can handle a large number of notes organised into notebooks. The notes are searchable, can be copied, tagged and modified either from the applications directly or from your own text editor. The notes are in [Markdown format](#markdown).

Notes exported from Evernote via .enex files [can be imported](#importing) into Joplin, including the formatted content (which is converted to Markdown), resources (images, attachments, etc.) and complete metadata (geolocation, updated time, created time, etc.). Plain Markdown files can also be imported.

The notes can be [synchronised](#synchronisation) with various cloud services including [Nextcloud](https://nextcloud.com/), Dropbox, OneDrive, WebDAV or the file system (for example with a network directory). When synchronising the notes, notebooks, tags and other metadata are saved to plain text files which can be easily inspected, backed up and moved around.

The application is available for Windows, Linux, macOS, Android and iOS (the terminal app also works on FreeBSD). A [Web Clipper](https://github.com/laurent22/joplin/blob/master/readme/clipper.md), to save web pages and screenshots from your browser, is also available for [Firefox](https://addons.mozilla.org/firefox/addon/joplin-web-clipper/) and [Chrome](https://chrome.google.com/webstore/detail/joplin-web-clipper/alofnhikmmkdbbbgpnglcpdollgjjfek?hl=en-GB).

&lt;div class=&quot;top-screenshot&quot;&gt;&lt;img src=&quot;https://joplinapp.org/images/AllClients.jpg&quot; style=&quot;max-width: 100%; max-height: 35em;&quot;&gt;&lt;/div&gt;

# Installation

Three types of applications are available: for the **desktop** (Windows, macOS and Linux), for **mobile** (Android and iOS) and for **terminal** (Windows, macOS, Linux and FreeBSD). All applications have similar user interfaces and can synchronise with each other.

## Desktop applications

Operating System | Download | Alternative
-----------------|--------|-------------------
Windows (32 and 64-bit)         | &lt;a href=&#039;https://github.com/laurent22/joplin/releases/download/v1.0.241/Joplin-Setup-1.0.241.exe&#039;&gt;&lt;img alt=&#039;Get it on Windows&#039; width=&quot;134px&quot; src=&#039;https://joplinapp.org/images/BadgeWindows.png&#039;/&gt;&lt;/a&gt; | Or get the &lt;a href=&#039;https://github.com/laurent22/joplin/releases/download/v1.0.241/JoplinPortable.exe&#039;&gt;Portable version&lt;/a&gt;&lt;br&gt;&lt;br&gt;The [portable application](https://en.wikipedia.org/wiki/Portable_application) allows installing the software on a portable device such as a USB key. Simply copy the file JoplinPortable.exe in any directory on that USB key ; the application will then create a directory called &quot;JoplinProfile&quot; next to the executable file.
macOS          | &lt;a href=&#039;https://github.com/laurent22/joplin/releases/download/v1.0.241/Joplin-1.0.241.dmg&#039;&gt;&lt;img alt=&#039;Get it on macOS&#039; width=&quot;134px&quot; src=&#039;https://joplinapp.org/images/BadgeMacOS.png&#039;/&gt;&lt;/a&gt; | You can also use Homebrew (unsupported): `brew cask install joplin`
Linux          | &lt;a href=&#039;https://github.com/laurent22/joplin/releases/download/v1.0.241/Joplin-1.0.241.AppImage&#039;&gt;&lt;img alt=&#039;Get it on Linux&#039; width=&quot;134px&quot; src=&#039;https://joplinapp.org/images/BadgeLinux.png&#039;/&gt;&lt;/a&gt; | An Arch Linux package (unsupported) [is also available](#terminal-application).&lt;br&gt;&lt;br&gt;If it works with your distribution (it has been tested on Ubuntu, Fedora, and Mint; the desktop environments supported are GNOME, KDE, Xfce, MATE, LXQT, LXDE, Unity, Cinnamon, Deepin and Pantheon), the recommended way is to use this script as it will handle the desktop icon too:&lt;br&gt;&lt;br&gt; `wget -O - https://raw.githubusercontent.com/laurent22/joplin/master/Joplin_install_and_update.sh \| bash`

## Mobile applications

Operating System | Download | Alt. Download
-----------------|:--------:|----------------
Android          | &lt;a href=&#039;https://play.google.com/store/apps/details?id=net.cozic.joplin&amp;utm_source=GitHub&amp;utm_campaign=README&amp;pcampaignid=MKT-Other-global-all-co-prtnr-py-PartBadge-Mar2515-1&#039;&gt;&lt;img alt=&#039;Get it on Google Play&#039; height=&quot;40px&quot; src=&#039;https://joplinapp.org/images/BadgeAndroid.png&#039;/&gt;&lt;/a&gt; | or &lt;a href=&quot;https://f-droid.org/packages/net.cozic.joplin&quot;&gt;Get it on F-Droid&lt;/a&gt;&lt;br/&gt; or directly download the APK file: [64-bit](https://github.com/laurent22/joplin-android/releases/download/android-v1.0.340/joplin-v1.0.340.apk) [32-bit](https://github.com/laurent22/joplin-android/releases/download/android-v1.0.340/joplin-v1.0.340-32bit.apk)
iOS              | &lt;a href=&#039;https://itunes.apple.com/us/app/joplin/id1315599797&#039;&gt;&lt;img alt=&#039;Get it on the App Store&#039; height=&quot;40px&quot; src=&#039;https://joplinapp.org/images/BadgeIOS.png&#039;/&gt;&lt;/a&gt; | -

## Terminal application

Operating system | Method
-----------------|----------------
macOS, Linux, or Windows (via [WSL](https://msdn.microsoft.com/en-us/commandline/wsl/faq?f=255&amp;MSPPError=-2147217396)) | **Important:** First, [install Node 10+](https://nodejs.org/en/download/package-manager/).&lt;br/&gt;&lt;br/&gt;`NPM_CONFIG_PREFIX=~/.joplin-bin npm install -g joplin`&lt;br/&gt;`sudo ln -s ~/.joplin-bin/bin/joplin /usr/bin/joplin`&lt;br&gt;&lt;br&gt;By default, the application binary will be installed under `~/.joplin-bin`. You may change this directory if needed. Alternatively, if your npm permissions are setup as described [here](https://docs.npmjs.com/getting-started/fixing-npm-permissions#option-2-change-npms-default-directory-to-another-directory) (Option 2) then simply running `npm -g install joplin` would work.

To start it, type `joplin`.

For usage information, please refer to the full [Joplin Terminal Application Documentation](https://joplinapp.org/terminal/).

### Unsupported methods

There are other ways to install the terminal application. However, they are not supported and problems must be reported to the upstream projects.

Operating system | Method
-----------------|----------------
macOS            | `brew install joplin`
Arch Linux       | An Arch Linux package is available [here](https://aur.archlinux.org/packages/joplin/). To install it, use an AUR wrapper such as yay: `yay -S joplin`. Both the CLI tool (type `joplin`) and desktop app (type `joplin-desktop`) are packaged. You can also install a compiled version with the [chaotic-aur](https://wiki.archlinux.org/index.php/Unofficial_user_repositories#chaotic-aur) repository. For support, please go to the [GitHub repo](https://github.com/masterkorp/joplin-pkgbuild).

## Web Clipper

The Web Clipper is a browser extension that allows you to save web pages and screenshots from your browser. For more information on how to install and use it, see the [Web Clipper Help Page](https://github.com/laurent22/joplin/blob/master/readme/clipper.md).

# Sponsors

&lt;a href=&quot;https://seirei.ne.jp&quot;&gt;&lt;img title=&quot;Serei Network&quot; width=&quot;256&quot; src=&quot;https://joplinapp.org/images/sponsors/SeireiNetwork.png&quot;/&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://usrigging.com/&quot;&gt;&lt;img title=&quot;U.S. Ringing Supply&quot; width=&quot;256&quot; src=&quot;https://joplinapp.org/images/sponsors/RingingSupply.svg&quot;/&gt;&lt;/a&gt;

* * *

|     |     |     |
| :---: | :---: | :---: |
| &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/6979755?s=96&amp;v=4&quot;/&gt;&lt;/br&gt;[Devon Zuegel](https://github.com/devonzuegel) | &lt;img width=&quot;50&quot; src=&quot;https://avatars2.githubusercontent.com/u/24908652?s=96&amp;v=4&quot;/&gt;&lt;/br&gt;[小西　孝宗](https://github.com/konishi-t) | &lt;img width=&quot;50&quot; src=&quot;https://avatars2.githubusercontent.com/u/215668?s=96&amp;v=4&quot;/&gt;&lt;/br&gt;[Alexander van der Berg](https://github.com/avanderberg)
| &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/1168659?s=96&amp;v=4&quot;/&gt;&lt;/br&gt;[Nicholas Head](https://github.com/nicholashead) | &lt;img width=&quot;50&quot; src=&quot;https://avatars2.githubusercontent.com/u/1439535?s=96&amp;v=4&quot;/&gt;&lt;/br&gt;[Frank Bloise](https://github.com/fbloise) | &lt;img width=&quot;50&quot; src=&quot;https://avatars2.githubusercontent.com/u/15859362?s=96&amp;v=4&quot;/&gt;&lt;/br&gt;[Thomas Broussard](https://github.com/thomasbroussard)
| &lt;img width=&quot;50&quot; src=&quot;https://avatars2.githubusercontent.com/u/1307332?s=96&amp;v=4&quot;/&gt;&lt;/br&gt;[Brandon Johnson](https://github.com/dbrandonjohnson) |   |

&lt;!-- TOC --&gt;
# Table of contents

- Applications

	- [Desktop application](https://github.com/laurent22/joplin/blob/master/readme/desktop.md)
	- [Mobile applications](https://github.com/laurent22/joplin/blob/master/readme/mobile.md)
	- [Terminal application](https://github.com/laurent22/joplin/blob/master/readme/terminal.md)
	- [Web Clipper](https://github.com/laurent22/joplin/blob/master/readme/clipper.md)

- Support

	- [Joplin Forum](https://discourse.joplinapp.org)
	- [Markdown Guide](https://github.com/laurent22/joplin/blob/master/readme/markdown.md)
	- [How to enable end-to-end encryption](https://github.com/laurent22/joplin/blob/master/readme/e2ee.md)
	- [What is a conflict?](https://github.com/laurent22/joplin/blob/master/readme/conflict.md)
	- [How to enable debug mode](https://github.com/laurent22/joplin/blob/master/readme/debugging.md)
	- [API documentation](https://github.com/laurent22/joplin/blob/master/readme/api.md)
	- [FAQ](https://github.com/laurent22/joplin/blob/master/readme/faq.md)

- Development

	- [End-to-end encryption spec](https://github.com/laurent22/joplin/blob/master/readme/spec.md)
	- [Note History spec](https://github.com/laurent22/joplin/blob/master/readme/spec/history.md)
	- [Sync Lock spec](https://github.com/laurent22/joplin/blob/master/readme/spec/sync_lock.md)

- Google Summer of Code 2020

	- [Google Summer of Code 2020](https://github.com/laurent22/joplin/blob/master/readme/gsoc2020/index.md)
	- [Project Ideas](https://github.com/laurent22/joplin/blob/master/readme/gsoc2020/ideas.md)

- About

	- [Changelog (Desktop App)](https://github.com/laurent22/joplin/blob/master/readme/changelog.md)
	- [Changelog (CLI App)](https://github.com/laurent22/joplin/blob/master/readme/changelog_cli.md)
	- [Stats](https://github.com/laurent22/joplin/blob/master/readme/stats.md)
	- [Donate](https://github.com/laurent22/joplin/blob/master/readme/donate.md)
&lt;!-- TOC --&gt;

# Features

- Desktop, mobile and terminal applications.
- [Web Clipper](https://github.com/laurent22/joplin/blob/master/readme/clipper.md) for Firefox and Chrome.
- End To End Encryption (E2EE)
- Note history (revisions)
- Synchronisation with various services, including Nextcloud, Dropbox, WebDAV and OneDrive.
- Import Enex files (Evernote export format) and Markdown files.
- Export JEX files (Joplin Export format) and raw files.
- Support notes, to-dos, tags and notebooks.
- Goto Anything feature.
- Sort notes by multiple criteria - title, updated time, etc.
- Support for alarms (notifications) in mobile and desktop applications.
- Offline first, so the entire data is always available on the device even without an internet connection.
- Markdown notes, which are rendered with images and formatting in the desktop and mobile applications. Support for extra features such as math notation and checkboxes.
- File attachment support - images are displayed, and other files are linked and can be opened in the relevant application.
- Search functionality.
- Geo-location support.
- Supports multiple languages
- External editor support - open notes in your favorite external editor with one click in Joplin.

# Importing

## Importing from Evernote

Joplin was designed as a replacement for Evernote and so can import complete Evernote notebooks, as well as notes, tags, resources (attached files) and note metadata (such as author, geo-location, etc.) via ENEX files. In terms of data, the only two things that might slightly differ are:

- Recognition data - Evernote images, in particular scanned (or photographed) documents have [recognition data](https://en.wikipedia.org/wiki/Optical_character_recognition) associated with them. It is the text that Evernote has been able to recognise in the document. This data is not preserved when the note are imported into Joplin. However, should it become supported in the search tool or other parts of Joplin, it should be possible to regenerate this recognition data since the actual image would still be available.

- Colour, font sizes and faces - Evernote text is stored as HTML and this is converted to Markdown during the import process. For notes that are mostly plain text or with basic formatting (bold, italic, bullet points, links, etc.) this is a lossless conversion, and the note, once rendered back to HTML should be very similar. Tables are also imported and converted to Markdown tables. For very complex notes, some formatting data might be lost - in particular colours, font sizes and font faces will not be imported. The text itself however is always imported in full regardless of formatting.

To import Evernote data, first export your Evernote notebooks to ENEX files as described [here](https://help.evernote.com/hc/en-us/articles/209005557-How-to-back-up-export-and-restore-import-notes-and-notebooks). Then follow these steps:

In the **desktop application**, open File &gt; Import &gt; ENEX and select your file. The notes will be imported into a new separate notebook. If needed they can then be moved to a different notebook, or the notebook can be renamed, etc.

In the **terminal application**, in [command-line mode](https://github.com/laurent22/joplin/blob/master/readme/terminal.md#command-line-mode), type `import /path/to/file.enex`. This will import the notes into a new notebook named after the filename.

## Importing from Markdown files

Joplin can import notes from plain Markdown file. You can either import a complete directory of Markdown files or individual files.

In the **desktop application**, open File &gt; Import &gt; MD and select your Markdown file or directory.

In the **terminal application**, in [command-line mode](https://github.com/laurent22/joplin/blob/master/readme/terminal.md#command-line-mode), type `import --format md /path/to/file.md` or `import --format md /path/to/directory/`.

## Importing from other applications

In general the way to import notes from any application into Joplin is to convert the notes to ENEX files (Evernote format) and to import these ENEX files into Joplin using the method above. Most note-taking applications support ENEX files so it should be relatively straightforward. For help about specific applications, see below:

* Standard Notes: Please see [this tutorial](https://programadorwebvalencia.com/migrate-notes-from-standard-notes-to-joplin/)
* Tomboy Notes: Export the notes to ENEX files [as described here](https://askubuntu.com/questions/243691/how-can-i-export-my-tomboy-notes-into-evernote/608551) for example, and import these ENEX files into Joplin.
* OneNote: First [import the notes from OneNote into Evernote](https://discussion.evernote.com/topic/107736-is-there-a-way-to-import-from-onenote-into-evernote-on-the-mac/). Then export the ENEX file from Evernote and import it into Joplin.
* NixNote: Synchronise with Evernote, then export the ENEX files and import them into Joplin. More info [in this thread](https://discourse.joplinapp.org/t/import-from-nixnote/183/3).

# Exporting

Joplin can export to the JEX format (Joplin Export file), which is a tar file that can contain multiple notes, notebooks, etc. This is a lossless format in that all the notes, but also metadata such as geo-location, updated time, tags, etc. are preserved. This format is convenient for backup purposes and can be re-imported into Joplin. A &quot;raw&quot; format is also available. This is the same as the JEX format except that the data is saved to a directory and each item represented by a single file.

# Synchronisation

One of the goals of Joplin was to avoid being tied to any particular company or service, whether it is Evernote, Google or Microsoft. As such the synchronisation is designed without any hard dependency to any particular service. Most of the synchronisation process is done at an abstract level and access to external services, such as Nextcloud or Dropbox, is done via lightweight drivers. It is easy to support new services by creating simple drivers that provide a filesystem-like interface, i.e. the ability to read, write, delete and list items. It is also simple to switch from one service to another or to even sync to multiple services at once. Each note, notebook, tags, as well as the relation between items is transmitted as plain text files during synchronisation, which means the data can also be moved to a different application, can be easily backed up, inspected, etc.

Currently, synchronisation is possible with Nextcloud, Dropbox, OneDrive or the local filesystem. To enable synchronisation please follow the instructions below. After that, the application will synchronise in the background whenever it is running, or you can click on &quot;Synchronise&quot; to start a synchronisation manually.

## Nextcloud synchronisation

&lt;img src=&quot;https://joplinapp.org/images/nextcloud-logo-background.png&quot; width=&quot;100&quot; align=&quot;left&quot;&gt; &lt;a href=&quot;https://nextcloud.com/&quot;&gt;Nextcloud&lt;/a&gt; is a self-hosted, private cloud solution. It can store documents, images and videos but also calendars, passwords and countless other things and can sync them to your laptop or phone. As you can host your own Nextcloud server, you own both the data on your device and infrastructure used for synchronisation. As such it is a good fit for Joplin. The platform is also well supported and with a strong community, so it is likely to be around for a while - since it&#039;s open source anyway, it is not a service that can be closed, it can exist on a server for as long as one chooses.

In the **desktop application** or **mobile application**, go to the config screen and select Nextcloud as the synchronisation target. Then input the WebDAV URL (to get it, click on Settings in the bottom left corner of the page, in Nextcloud), this is normally `https://example.com/nextcloud/remote.php/webdav/Joplin` (**make sure to create the &quot;Joplin&quot; directory in Nextcloud**), and set the username and password. If it does not work, please [see this explanation](https://github.com/laurent22/joplin/issues/61#issuecomment-373282608) for more details.

In the **terminal application**, you will need to set the `sync.target` config variable and all the `sync.5.path`, `sync.5.username` and `sync.5.password` config variables to, respectively the Nextcloud WebDAV URL, your username and your password. This can be done from the command line mode using:

	:config sync.5.path https://example.com/nextcloud/remote.php/webdav/Joplin
	:config sync.5.username YOUR_USERNAME
	:config sync.5.password YOUR_PASSWORD
	:config sync.target 5

If synchronisation does not work, please consult the logs in the app profile directory - it is often due to a misconfigured URL or password. The log should indicate what the exact issue is.

## Dropbox synchronisation

When syncing with Dropbox, Joplin creates a sub-directory in Dropbox, in `/Apps/Joplin` and read/write the notes and notebooks from it. The application does not have access to anything outside this directory.

In the **desktop application** or **mobile application**, select &quot;Dropbox&quot; as the synchronisation target in the config screen (it is selected by default). Then, to initiate the synchronisation process, click on the &quot;Synchronise&quot; button in the sidebar and follow the instructions.

In the **terminal application**, to initiate the synchronisation process, type `:sync`. You will be asked to follow a link to authorise the application. It is possible to also synchronise outside of the user interface by typing `j

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[github/docs]]></title>
            <link>https://github.com/github/docs</link>
            <guid>https://github.com/github/docs</guid>
            <pubDate>Mon, 20 Oct 2025 00:05:00 GMT</pubDate>
            <description><![CDATA[The open-source repo for docs.github.com]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/github/docs">github/docs</a></h1>
            <p>The open-source repo for docs.github.com</p>
            <p>Language: TypeScript</p>
            <p>Stars: 18,054</p>
            <p>Forks: 63,786</p>
            <p>Stars today: 6 stars today</p>
            <h2>README</h2><pre># GitHub Docs &lt;!-- omit in toc --&gt;

Welcome to GitHub Docs! GitHub’s documentation is open source, meaning anyone from inside or outside the company can contribute. For full contributing guidelines, visit our [contributing guide](https://docs.github.com/en/contributing)

## Quick links by contributor type

* **Hubbers (GitHub employees):** See [CONTRIBUTING.md](https://github.com/github/docs-content/blob/main/CONTRIBUTING.md) in the `docs-content` repository for GitHub-specific processes.

* **Open source contributors:** See [CONTRIBUTING.md](https://github.com/github/docs/blob/main/.github/CONTRIBUTING.md) in the `docs` repository for a quick-start summary.

## How we sync changes across Docs repositories

There are two GitHub Docs repositories: 

- **`github/docs`** (public): Open to external contributions

- **`github/docs-internal`** (private): For GitHub employee contributions. 

The two repositories sync frequently. Content changes in one are reflected in the other.  Hubbers might prefer to post in `docs` when working with a customer, but `docs` has limitations on the types of contributions it accepts to safeguard the site and our workflows. Internal contributions should usually go to `docs-internal`.

**Important:** The `docs` repository accepts contributions to content files (`.md` files in `/content` and select `/data` sections like reusables only). Infrastructure files, workflows, and site-building code are not open for external modification.

## New to contributing

Here are some resources to help you get started with open source contributions:

* [Finding ways to contribute to open source on GitHub](https://docs.github.com/en/get-started/exploring-projects-on-github/finding-ways-to-contribute-to-open-source-on-github)
* [Set up Git](https://docs.github.com/en/get-started/git-basics/set-up-git)
* [GitHub flow](https://docs.github.com/en/get-started/using-github/github-flow)
* [Collaborating with pull requests](https://docs.github.com/en/github/collaborating-with-pull-requests)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[fuma-nama/fumadocs]]></title>
            <link>https://github.com/fuma-nama/fumadocs</link>
            <guid>https://github.com/fuma-nama/fumadocs</guid>
            <pubDate>Mon, 20 Oct 2025 00:04:59 GMT</pubDate>
            <description><![CDATA[The beautiful & flexible React.js docs framework.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/fuma-nama/fumadocs">fuma-nama/fumadocs</a></h1>
            <p>The beautiful & flexible React.js docs framework.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 8,742</p>
            <p>Forks: 479</p>
            <p>Stars today: 10 stars today</p>
            <h2>README</h2><pre>![banner](./apps/docs/public/banner.png)

The framework for building documentation websites in any React.js frameworks.

**Officially Supported:**

- Next.js
- Vite: Tanstack Start, Waku, React Router

📘 Learn More: [Documentation](https://fumadocs.dev).

## Compatibility

All packages are **ESM only**.

## Sticker

![logo](./documents/logo.png)

Welcome to print it out :D

## Contributions

Make sure to read the [Contributing Guide](/.github/contributing.md) before submitting a pull request.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[mifi/lossless-cut]]></title>
            <link>https://github.com/mifi/lossless-cut</link>
            <guid>https://github.com/mifi/lossless-cut</guid>
            <pubDate>Mon, 20 Oct 2025 00:04:58 GMT</pubDate>
            <description><![CDATA[The swiss army knife of lossless video/audio editing]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/mifi/lossless-cut">mifi/lossless-cut</a></h1>
            <p>The swiss army knife of lossless video/audio editing</p>
            <p>Language: TypeScript</p>
            <p>Stars: 34,025</p>
            <p>Forks: 1,599</p>
            <p>Stars today: 17 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
	&lt;br&gt;
  &lt;p&gt;&lt;a href=&quot;https://mifi.no/losslesscut/&quot;&gt;&lt;img src=&quot;src/renderer/src/icon.svg&quot; width=&quot;120&quot; alt=&quot;LosslessCut&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
  &lt;p&gt;&lt;b&gt;LosslessCut&lt;/b&gt;&lt;/p&gt;
  The swiss army knife of lossless video/audio editing
	&lt;br&gt;
  &lt;img src=&quot;https://github.com/mifi/lossless-cut/workflows/Build/release/badge.svg&quot; /&gt;
  &lt;a href=&quot;https://paypal.me/mifino/usd&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Donate-PayPal-green.svg&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/mifi/lossless-cut#download&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/mifi/lossless-cut&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.gg/fhnEREfUJ3&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/986051448385183804&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/losslesscut&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/losslesscut?label=Twitter&amp;style=social&quot; alt=&quot;Twitter&quot;&gt;&lt;/a&gt;
	&lt;br&gt;
	&lt;br&gt;
  &lt;a href=&quot;https://mifi.no/thanks/&quot;&gt;Thanks to my supporters&lt;/a&gt; and everyone who purchased LosslessCut!
	&lt;br&gt;
	&lt;br&gt;
  &lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;main_screenshot.jpg&quot; width=&quot;600&quot; alt=&quot;screenshot&quot; /&gt;&lt;/p&gt;
	&lt;br&gt;
	&lt;br&gt;
&lt;/div&gt;

LosslessCut aims to be the ultimate cross platform FFmpeg GUI for extremely fast and lossless operations on video, audio, subtitle and other related media files.
The main feature is lossless trimming and cutting of video and audio files, which is great for saving space by rough-cutting your large video files taken from a video camera, GoPro, drone, etc. It lets you quickly extract the good parts from your videos and discard many gigabytes of data without doing a slow re-encode and thereby losing quality. There are also many more [use cases](#typical-workflow). Everything is extremely fast because it does an almost direct data copy, fueled by the awesome FFmpeg which does all the grunt work.

## Table of contents

- [Features](#features)
- [Example lossless use cases](#example-lossless-use-cases)
- [Download](#download)
- [Supported formats](#supported-formats)
- [Documentation &amp; getting started](#documentation)
- [Video demos](#video-demos)
- [Featured](#featured)
- [Attributions](#attributions)

## Features

- Lossless cutting of most video and audio formats
- [Smart cut](https://github.com/mifi/lossless-cut/issues/126) (experimental)
- Losslessly cut out parts of video/audio (for cutting away commercials etc.)
- Losslessly rearrange the order of video/audio segments
- Lossless merge/concatenation of arbitrary files (with identical codecs parameters, e.g. from the same camera)
- Lossless multi track/stream editing
  - Combine arbitrary tracks from multiple files (ex. add music or subtitle track to a video file)
  - Remove unneeded tracks
  - Replace or re-encode only some tracks
  - Extract all tracks from a file (extract video, audio, subtitle, attachments and other tracks from one file into separate files)
- View technical data about all tracks. Edit file metadata, per-track metadata and per-track disposition
- Select video/audio tracks for playback. Playback multiple audio tracks simultaneously.
- Fast multi-file workflow (note: no mass/batch export yet)
- Keyboard shortcut workflow
- Losslessly remux video/audio into a different container (file) format
- Take full-resolution snapshots from videos in JPEG/PNG format (low or high quality)
- Export ranges of video frames to images (every nth frame, second, by scene change, best thumbnails)
  - Export only from a selected time range (segment)
  - Optionally include original timestamps in image file names
- Manual input of cutpoint times
- Apply a per-file timecode offset (and auto load timecode from file)
- Change rotation/orientation metadata in videos
- Timeline zoom and frame/keyframe jumping for cutting around keyframes
- Video thumbnails and audio waveform
- Saves per project cut segments to project file
- View FFmpeg last command log so you can modify and re-run recent commands on the command line
- Undo/redo
- Advanced segment query and mutation JS-based expression language.
- Give labels to cut segments, annotate with tags
- [Import/export](docs.md#import--export-projects) segments: MP4/MKV chapter marks, Text file, YouTube, CSV, CUE, XML (DaVinci, Final Cut Pro) and more
- MKV/MP4 embedded chapters marks editor
- View subtitles
- Customizable keyboard hotkeys
- Black scene detection, silent audio detection, and scene change detection
- Divide timeline into segments of length L, size (X MB), N number of segments or even randomized segments!
- Speed up / slow down video or audio file ([changing FPS](https://github.com/mifi/lossless-cut/issues/1712))
- Basic [CLI](cli.md) and [HTTP API](api.md)
- Show (DJI) embedded GPS track on a map
- Losslessly Download videos over HTTP (e.g. HLS `.m3u8`)

## Example lossless use cases

- Cut out commercials from a recorded TV show (and re-format from TS to MP4)
- Remove audio tracks from a file
- Extract music track from a video and cut it to your needs
- Add music to a video (or replace existing audio track)
- Combine audio and video tracks from separate recordings
- Include an external subtitle into a video
- Quickly change a H264/H265 MKV video to MOV or MP4 for playback on iPhone
- Import a list of cut times from other tool as a EDL (edit decision list, CSV) and run these cuts with LosslessCut
- Export a list of cut times as a CSV EDL and process these in another tool
- Quickly cut a file by its MP4/MKV chapters
- Quickly cut a [YouTube video](https://youtube-dl.org/) by its chapters (or music times from a comment)
- Change the language of a file&#039;s audio/subtitle tracks
- Attach cover art / thumbnail to videos / audio from an external JPEG file or from a frame on the timeline
- Change author, title, GPS position, recording time of a video
- Fix rotation of a video that has the wrong orientation flag set
  - Great for rotating phone videos that come out the wrong way without actually re-encoding the video.
- Loop a video / audio clip X times quickly without re-encoding
  - See [#284](https://github.com/mifi/lossless-cut/issues/284)
- Convert a video or parts of it into X image files (not lossless)
- Losslessly split a video into one file per scene (note you probably have to shift segments, see [#330](https://github.com/mifi/lossless-cut/issues/330).)
- Cut away silent parts of an audio/video
- Split video into segments to for example respect Twitter&#039;s 140 second limit
- Annotate each segment with one or more tags, then use those tags to organize your segments or use it to create an output folder structure or hierarchy for your segments.

### Export cut times as YouTube Chapters
1. Export with Merge and &quot;Create chapters from merged segments&quot; enabled
2. Open the exported file and select &quot;Import chapters&quot; in the dialog
3. File -&gt; Export project -&gt; YouTube Chapters

### Re-encode only the audio track, keeping the lossless video track

First export each track as individual files. Then use Handbrake or similar to re-encode the audio file (if mp4 file, encode as AAC.) Then open the extracted video stream in LosslessCut. The open your encoded audio file and select &quot;Include all tracks from the new file&quot;. Then export.

### Advanced multi-step workflows

**Tip:** you can use LosslessCut in multiple passes in order to achieve separate trimming of individual tracks:
1. Open a file an export all tracks as individual files
2. Open the exported track files independently and cut them as desired
3. Add the track back to the video and combine them to one output video

## Download

If you want to support my continued work on LosslessCut, and you want the advantage of a secure and simple installation process with automatic, stable updates, consider getting it from your favorite store:

&lt;a href=&quot;https://apps.apple.com/app/id1505323402&quot;&gt;&lt;img src=&quot;mac-app-store-badge.svg&quot; alt=&quot;Mac App Store&quot; height=&quot;50&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://www.microsoft.com/store/apps/9P30LSR4705L?cid=storebadge&amp;ocid=badge&quot;&gt;&lt;img src=&quot;ms-store-badge.svg&quot; alt=&quot;MS badge&quot; height=&quot;50&quot;/&gt;&lt;/a&gt;

For Linux these are some alternatives:

&lt;a href=&quot;https://snapcraft.io/losslesscut&quot;&gt;&lt;img src=&quot;https://github.com/mifi/lossless-cut/raw/master/snap-store-black.svg?sanitize=true&quot; alt=&quot;Snapcraft&quot; height=&quot;50&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://flathub.org/apps/details/no.mifi.losslesscut&quot;&gt;&lt;img src=&quot;https://github.com/mifi/lossless-cut/raw/master/flathub-badge.svg?sanitize=true&quot; alt=&quot;Flathub&quot; height=&quot;50&quot;/&gt;&lt;/a&gt;

If you prefer to download the executables manually, this will of course always be free (see also [supported operating systems](./requirements.md)):

- macOS: [Intel](https://github.com/mifi/lossless-cut/releases/latest/download/LosslessCut-mac-x64.dmg) / [Apple Silicon](https://github.com/mifi/lossless-cut/releases/latest/download/LosslessCut-mac-arm64.dmg) DMG (note that PKG does **not** work)
- Windows: [7zip](https://github.com/mifi/lossless-cut/releases/latest/download/LosslessCut-win-x64.7z) (Windows 7, 8 and 8.1 is [no longer supported](https://github.com/mifi/lossless-cut/discussions/1476) after [v3.50.0](https://github.com/mifi/lossless-cut/releases/tag/v3.50.0))
- Linux: [x64 tar.bz2](https://github.com/mifi/lossless-cut/releases/latest/download/LosslessCut-linux-x64.tar.bz2) / [x64 AppImage](https://github.com/mifi/lossless-cut/releases/latest/download/LosslessCut-linux-x86_64.AppImage) / [arm64 tar.bz2](https://github.com/mifi/lossless-cut/releases/latest/download/LosslessCut-linux-arm64.tar.bz2) / [Raspberry Pi armv7l](https://github.com/mifi/lossless-cut/releases/latest/download/LosslessCut-linux-armv7l.tar.bz2)
- [More releases](https://github.com/mifi/lossless-cut/releases) - Note that APPX (Windows) and PKG (macOS) do **not** work)
- [Latest nightly builds 🧪](https://mifi.no/llc/nightly/)

Difference between App Stores and GitHub download? [Please see FAQ](issues.md#app-stores-and-github-difference).

[![](./donate.svg)](https://mifi.no/thanks)

LosslessCut is maintained by me alone and will always remain free and open source. If it&#039;s useful to you, consider supporting my work. Alternatively [donate to FFmpeg](https://www.ffmpeg.org/donations.html) because they are doing the world a huge favor.

[Paypal](https://paypal.me/mifino/usd) | [crypto](https://mifi.no/thanks) | [more](https://mifi.no/thanks)

## Supported formats

LosslessCut uses the Chromium browser&#039;s HTML5 video player, and not all formats/codecs are [natively supported](https://www.chromium.org/audio-video). Generally, the following file formats work: `MP4`, `MOV`, `WebM`, `Matroska`, `OGG` and `WAV`. Audio codecs: `FLAC`, `MP3`, `Opus`, `PCM`, `Vorbis` and `AAC`. Video codecs: `H264`, `AV1`, `Theora`, `VP8`, `VP9` and `H265` (with hardware decoder). Learn the [difference between a codec and a format](docs.md#primer-video--audio-formats-vs-codecs). Codecs and formats not listed above can still be converted to a supported format/codec from the `File` menu (try the option *Fastest: FFmpeg-assisted playback* first). A low quality version of the file will then be created and opened in the player. Note that the actual cut/export operation will still be performed on the original file, so it will be lossless. This allows for potentially opening any file that FFmpeg is able to decode.

## Documentation

- **[Getting started and documentation](docs.md)**
- [FAQ, known issues, limitations and troubleshooting](issues.md)
- [Contributing](CONTRIBUTING.md)

### Video demos

- [Common features](https://www.youtube.com/watch?v=pYHMxXy05Jg)
- [How to add a thumbnail / cover art to an MP4](https://www.youtube.com/watch?v=4pYJ93cn80E)
- [How to add multi-language audio to a video](https://www.youtube.com/watch?v=MRBGDsuw_WU)
- Your video here?

## Featured

- [Console newsletter](https://console.substack.com/p/console-93)
- Hacker News [2024](https://news.ycombinator.com/item?id=40829494) [2022](https://news.ycombinator.com/item?id=33969490) [2020-10](https://news.ycombinator.com/item?id=24883030) [2020-01](https://news.ycombinator.com/item?id=22026412) [2016](https://news.ycombinator.com/item?id=12885585)
- [Wikipedia](https://en.m.wikipedia.org/wiki/LosslessCut)
- Your link here?

&lt;img src=&quot;https://api.star-history.com/svg?repos=mifi/lossless-cut&amp;type=Date&quot; alt=&quot;Star History Chart&quot; width=&quot;400px&quot; /&gt;

## Attributions
- App icon made by [Dimi Kazak](http://www.flaticon.com/authors/dimi-kazak &quot;Dimi Kazak&quot;) from [www.flaticon.com](http://www.flaticon.com &quot;Flaticon&quot;) is licensed by [CC 3.0 BY](http://creativecommons.org/licenses/by/3.0/ &quot;Creative Commons BY 3.0&quot;).
- [Lottie animation by Chris Gannon](https://lottiefiles.com/7077-magic-flow).
- Thanks to Adi Abinun for UI work.
- Thanks to translators who helped translate the app. [You can too!](translation.md)
- [Thanks to everyone for supporting](https://mifi.no/thanks/) my open source work 🙌

---

Made with ❤️ in [🇳🇴](https://www.youtube.com/watch?v=uQIv8Vo9_Jc)

[More apps by mifi.no](https://mifi.no/)

Follow me on [GitHub](https://github.com/mifi/), [YouTube](https://www.youtube.com/channel/UC6XlvVH63g0H54HSJubURQA), [IG](https://www.instagram.com/mifi.no/), [Twitter](https://twitter.com/mifi_no) for more awesome content!
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
    </channel>
</rss>