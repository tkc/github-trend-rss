<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for typescript - TypeScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for typescript.</description>
        <lastBuildDate>Sun, 06 Apr 2025 00:05:06 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[freeCodeCamp/freeCodeCamp]]></title>
            <link>https://github.com/freeCodeCamp/freeCodeCamp</link>
            <guid>https://github.com/freeCodeCamp/freeCodeCamp</guid>
            <pubDate>Sun, 06 Apr 2025 00:05:06 GMT</pubDate>
            <description><![CDATA[freeCodeCamp.org's open-source codebase and curriculum. Learn to code for free.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/freeCodeCamp/freeCodeCamp">freeCodeCamp/freeCodeCamp</a></h1>
            <p>freeCodeCamp.org's open-source codebase and curriculum. Learn to code for free.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 415,356</p>
            <p>Forks: 39,660</p>
            <p>Stars today: 136 stars today</p>
            <h2>README</h2><pre>[![freeCodeCamp Social Banner](https://cdn.freecodecamp.org/platform/universal/fcc_banner_new.png)](https://www.freecodecamp.org/)

[![Pull Requests Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat)](https://makeapullrequest.com)
[![first-timers-only Friendly](https://img.shields.io/badge/first--timers--only-friendly-blue.svg)](https://www.firsttimersonly.com/)
[![Open Source Helpers](https://www.codetriage.com/freecodecamp/freecodecamp/badges/users.svg)](https://www.codetriage.com/freecodecamp/freecodecamp)
[![Setup Automated](https://img.shields.io/badge/setup-automated-blue?logo=gitpod)](https://gitpod.io/from-referrer/)
[![Discord](https://img.shields.io/discord/692816967895220344?logo=discord&amp;label=Discord&amp;color=5865F2)](https://discord.gg/PRyKn3Vbay)

## freeCodeCamp.org&#039;s open-source codebase and curriculum

[freeCodeCamp.org](https://www.freecodecamp.org) is a friendly community where you can learn to code for free. It is run by a [donor-supported 501(c)(3) charity](https://www.freecodecamp.org/donate) to help millions of busy adults transition into tech. Our community has already helped more than 40,000 people get their first developer job.

Our full-stack web development and machine learning curriculum is completely free and self-paced. We have thousands of interactive coding challenges to help you expand your skills.

## Table of Contents

- [Certifications](#certifications)
- [The Learning Platform](#the-learning-platform)
- [Reporting Bugs and Issues](#reporting-bugs-and-issues)
- [Reporting Security Issues and Responsible Disclosure](#reporting-security-issues-and-responsible-disclosure)
- [Contributing](#contributing)
- [Platform, Build and Deployment Status](#platform-build-and-deployment-status)
- [License](#license)

### Certifications

freeCodeCamp.org offers several free developer certifications. Each of these certifications involves building 5 required web app projects, along with hundreds of optional coding challenges to help you prepare for those projects. We estimate that each certification will take a beginner programmer around 300 hours to earn.

Each of these 50 projects in the freeCodeCamp.org curriculum has its own agile user stories and automated tests. These help you build up your project incrementally and ensure you&#039;ve fulfilled all the user stories before you submit it.

You can pull in these test suites through [freeCodeCamp&#039;s CDN](https://cdn.freecodecamp.org/testable-projects-fcc/v1/bundle.js). This means you can build these projects on websites like CodePen and Replit - or even on your local computer&#039;s development environment.

Once you&#039;ve earned a certification, you will always have it. You will always be able to link to it from your LinkedIn or resume. And when your prospective employers or freelance clients click that link, they&#039;ll see a verified certification specific to you.

The one exception to this is if we discover violations of our [Academic Honesty Policy](https://www.freecodecamp.org/news/academic-honesty-policy/). When we catch people unambiguously plagiarizing (submitting other people&#039;s code or projects as their own without citation), we do what all rigorous institutions of learning should do - we revoke their certifications and ban those people.

Here are our twelve core certifications:

#### 1. [Responsive Web Design Certification](https://www.freecodecamp.org/learn/2022/responsive-web-design/)

- [Learn HTML by Building a Cat Photo App](https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-html-by-building-a-cat-photo-app)
- [Learn Basic CSS by Building a Cafe Menu](https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-basic-css-by-building-a-cafe-menu)
- [Learn CSS Colors by Building a Set of Colored Markers](https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-css-colors-by-building-a-set-of-colored-markers)
- [Learn HTML Forms by Building a Registration Form](https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-html-forms-by-building-a-registration-form)
- [Learn the CSS Box Model by Building a Rothko Painting](https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-the-css-box-model-by-building-a-rothko-painting)
- [Learn CSS Flexbox by Building a Photo Gallery](https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-css-flexbox-by-building-a-photo-gallery)
- [Learn Typography by Building a Nutrition Label](https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-typography-by-building-a-nutrition-label)
- [Learn Accessibility by Building a Quiz](https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-accessibility-by-building-a-quiz)
- [Learn More About CSS Pseudo Selectors by Building A Balance Sheet](https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-more-about-css-pseudo-selectors-by-building-a-balance-sheet)
- [Learn Intermediate CSS by Building a Picasso Painting](https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-intermediate-css-by-building-a-picasso-painting)
- [Learn Responsive Web Design by Building a Piano](https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-responsive-web-design-by-building-a-piano)
- [Learn CSS Variables by Building a City Skyline](https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-css-variables-by-building-a-city-skyline)
- [Learn CSS Grid by Building a Magazine](https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-css-grid-by-building-a-magazine)
- [Learn CSS Transforms by Building a Penguin](https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-css-transforms-by-building-a-penguin)
- [Learn CSS Animations by Building a Ferris Wheel](https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-css-animation-by-building-a-ferris-wheel)
  &lt;br /&gt;
  &lt;br /&gt;
  **Projects**: [Survey Form](https://www.freecodecamp.org/learn/2022/responsive-web-design/build-a-survey-form-project/build-a-survey-form), [Tribute Page](https://www.freecodecamp.org/learn/2022/responsive-web-design/build-a-tribute-page-project/build-a-tribute-page), [Technical Documentation Page](https://www.freecodecamp.org/learn/2022/responsive-web-design/build-a-technical-documentation-page-project/build-a-technical-documentation-page), [Product Landing Page](https://www.freecodecamp.org/learn/2022/responsive-web-design/build-a-product-landing-page-project/build-a-product-landing-page), [Personal Portfolio Webpage](https://www.freecodecamp.org/learn/2022/responsive-web-design/build-a-personal-portfolio-webpage-project/build-a-personal-portfolio-webpage)

#### 2. [JavaScript Algorithms and Data Structures Certification](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/)

- [Learn Introductory JavaScript by Building a Pyramid Generator](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-introductory-javascript-by-building-a-pyramid-generator)
- [Learn Basic JavaScript by Building a Role Playing Game](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-basic-javascript-by-building-a-role-playing-game)
- [Learn Form Validation by Building a Calorie Counter](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-form-validation-by-building-a-calorie-counter)
- [Learn Basic String and Array Methods by Building a Music Player](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-basic-string-and-array-methods-by-building-a-music-player)
- [Learn the Date Object by Building a Date Formatter](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-the-date-object-by-building-a-date-formatter)
- [Learn Modern JavaScript Methods By Building Football Team Cards](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-modern-javascript-methods-by-building-football-team-cards)
- [Learn localStorage by Building a Todo App](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-localstorage-by-building-a-todo-app)
- [Learn Recursion by Building a Decimal to Binary Converter](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-recursion-by-building-a-decimal-to-binary-converter)
- [Learn Basic Algorithmic Thinking by Building a Number Sorter](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-basic-algorithmic-thinking-by-building-a-number-sorter)
- [Learn Advanced Array Methods by Building a Statistics Calculator](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-advanced-array-methods-by-building-a-statistics-calculator)
- [Learn Functional Programming by Building a Spreadsheet](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-functional-programming-by-building-a-spreadsheet)
- [Learn Regular Expressions by Building a Spam Filter](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-regular-expressions-by-building-a-spam-filter)
- [Learn Basic OOP by Building a Shopping Cart](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-basic-oop-by-building-a-shopping-cart)
- [Learn Intermediate OOP by Building a Platformer Game](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-intermediate-oop-by-building-a-platformer-game)
- [Learn Intermediate Algorithmic Thinking by Building a Dice Game](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#review-algorithmic-thinking-by-building-a-dice-game)
- [Learn Fetch and Promises By Building an fCC Authors Page](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-fetch-and-promises-by-building-an-fcc-authors-page)
- [Learn Asynchronous Programming by Building an fCC Forum Leaderboard](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-asynchronous-programming-by-building-an-fcc-forum-leaderboard)
  &lt;br /&gt;
  &lt;br /&gt;
  **Projects**: [Palindrome Checker](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/build-a-palindrome-checker-project/build-a-palindrome-checker), [Roman Numeral Converter](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/build-a-roman-numeral-converter-project/build-a-roman-numeral-converter), [Telephone Number Validator](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/build-a-telephone-number-validator-project/build-a-telephone-number-validator), [Cash Register](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/build-a-cash-register-project/build-a-cash-register), [Pokémon Search App](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/build-a-pokemon-search-app-project/build-a-pokemon-search-app)

#### 3. [Front End Libraries Certification](https://www.freecodecamp.org/learn/front-end-development-libraries/)

- [Bootstrap](https://www.freecodecamp.org/learn/front-end-development-libraries/#bootstrap)
- [jQuery](https://www.freecodecamp.org/learn/front-end-development-libraries/#jquery)
- [Sass](https://www.freecodecamp.org/learn/front-end-development-libraries/#sass)
- [React](https://www.freecodecamp.org/learn/front-end-development-libraries/#react)
- [Redux](https://www.freecodecamp.org/learn/front-end-development-libraries/#redux)
- [React and Redux](https://www.freecodecamp.org/learn/front-end-development-libraries/#react-and-redux)
  &lt;br /&gt;
  &lt;br /&gt;
  **Projects**: [Random Quote Machine](https://www.freecodecamp.org/learn/front-end-development-libraries/front-end-development-libraries-projects/build-a-random-quote-machine), [Markdown Previewer](https://www.freecodecamp.org/learn/front-end-development-libraries/front-end-development-libraries-projects/build-a-markdown-previewer), [Drum Machine](https://www.freecodecamp.org/learn/front-end-development-libraries/front-end-development-libraries-projects/build-a-drum-machine), [JavaScript Calculator](https://www.freecodecamp.org/learn/front-end-development-libraries/front-end-development-libraries-projects/build-a-javascript-calculator), [25 + 5 Clock](https://www.freecodecamp.org/learn/front-end-development-libraries/front-end-development-libraries-projects/build-a-25--5-clock)

#### 4. [Data Visualization Certification](https://www.freecodecamp.org/learn/data-visualization/)

- [Data Visualization with D3](https://www.freecodecamp.org/learn/data-visualization/#data-visualization-with-d3)
- [JSON APIs and Ajax](https://www.freecodecamp.org/learn/data-visualization/#json-apis-and-ajax)
  &lt;br /&gt;
  &lt;br /&gt;
  **Projects**: [Bar Chart](https://www.freecodecamp.org/learn/data-visualization/data-visualization-projects/visualize-data-with-a-bar-chart), [Scatterplot Graph](https://www.freecodecamp.org/learn/data-visualization/data-visualization-projects/visualize-data-with-a-scatterplot-graph), [Heat Map](https://www.freecodecamp.org/learn/data-visualization/data-visualization-projects/visualize-data-with-a-heat-map), [Choropleth Map](https://www.freecodecamp.org/learn/data-visualization/data-visualization-projects/visualize-data-with-a-choropleth-map), [Treemap Diagram](https://www.freecodecamp.org/learn/data-visualization/data-visualization-projects/visualize-data-with-a-treemap-diagram)

#### 5. [Relational Database](https://www.freecodecamp.org/learn/relational-database/)

- [Learn Bash by Building a Boilerplate](https://www.freecodecamp.org/learn/relational-database/#learn-bash-by-building-a-boilerplate)
- [Learn Relational Databases by Building a Mario Database](https://www.freecodecamp.org/learn/relational-database/#learn-relational-databases-by-building-a-mario-database)
- [Learn Bash Scripting by Building Five Programs](https://www.freecodecamp.org/learn/relational-database/#learn-bash-scripting-by-building-five-programs)
- [Learn SQL by Building a Student Database: Part 1](https://www.freecodecamp.org/learn/relational-database/#learn-sql-by-building-a-student-database-part-1)
- [Learn SQL by Building a Student Database: Part 2](https://www.freecodecamp.org/learn/relational-database/#learn-sql-by-building-a-student-database-part-2)
- [Learn Advanced Bash by Building a Kitty Ipsum Translator](https://www.freecodecamp.org/learn/relational-database/#learn-advanced-bash-by-building-a-kitty-ipsum-translator)
- [Learn Bash and SQL by Building a Bike Rental Shop](https://www.freecodecamp.org/learn/relational-database/#learn-bash-and-sql-by-building-a-bike-rental-shop)
- [Learn Nano by Building a Castle](https://www.freecodecamp.org/learn/relational-database/#learn-nano-by-building-a-castle)
- [Learn Git by Building an SQL Reference Object](https://www.freecodecamp.org/learn/relational-database/#learn-git-by-building-an-sql-reference-object)
  &lt;br /&gt;
  &lt;br /&gt;
  **Projects**: [Salon Appointment Scheduler](https://www.freecodecamp.org/learn/relational-database/#build-a-salon-appointment-scheduler-project), [Celestial Bodies Database](https://www.freecodecamp.org/learn/relational-database/#build-a-celestial-bodies-database-project), [Periodic Table Database](https://www.freecodecamp.org/learn/relational-database/#build-a-periodic-table-database-project), [Number Guessing Game](https://www.freecodecamp.org/learn/relational-database/#build-a-number-guessing-game-project), [World Cup Database](https://www.freecodecamp.org/learn/relational-database/#build-a-world-cup-database-project)

#### 6. [Back End Development and APIs Certification](https://www.freecodecamp.org/learn/back-end-development-and-apis/)

- [Managing Packages with Npm](https://www.freecodecamp.org/learn/back-end-development-and-apis/#managing-packages-with-npm)
- [Basic Node and Express](https://www.freecodecamp.org/learn/back-end-development-and-apis/#basic-node-and-express)
- [MongoDB and Mongoose](https://www.freecodecamp.org/learn/back-end-development-and-apis/#mongodb-and-mongoose)
  &lt;br /&gt;
  &lt;br /&gt;
  **Projects**: [Timestamp Microservice](https://www.freecodecamp.org/learn/back-end-development-and-apis/back-end-development-and-apis-projects/timestamp-microservice), [Request Header Parser](https://www.freecodecamp.org/learn/back-end-development-and-apis/back-end-development-and-apis-projects/request-header-parser-microservice), [URL Shortener](https://www.freecodecamp.org/learn/back-end-development-and-apis/back-end-development-and-apis-projects/url-shortener-microservice), [Exercise Tracker](https://www.freecodecamp.org/learn/back-end-development-and-apis/back-end-development-and-apis-projects/exercise-tracker), [File Metadata Microservice](https://www.freecodecamp.org/learn/back-end-development-and-apis/back-end-development-and-apis-projects/file-metadata-microservice)

#### 7. [Quality Assurance Certification](https://www.freecodecamp.org/learn/quality-assurance/)

- [Quality Assurance and Testing with Chai](https://www.freecodecamp.org/learn/quality-assurance/#quality-assurance-and-testing-with-chai)
- [Advanced Node and Express](https://www.freecodecamp.org/learn/quality-assurance/#advanced-node-and-express)
  &lt;br /&gt;
  &lt;br /&gt;
  **Projects**: [Metric-Imperial Converter](https://www.freecodecamp.org/learn/quality-assurance/quality-assurance-projects/metric-imperial-converter), [Issue Tracker](https://www.freecodecamp.org/learn/quality-assurance/quality-assurance-projects/issue-tracker), [Personal Library](https://www.freecodecamp.org/learn/quality-assurance/quality-assurance-projects/personal-library), [Sudoku Solver](https://www.freecodecamp.org/learn/quality-assurance/quality-assurance-projects/sudoku-solver), [American British Translator](https://www.freecodecamp.org/learn/quality-assurance/quality-assurance-projects/american-british-translator)

#### 8. [Scientific Computing with Python Certification](https://www.freecodecamp.org/learn/scientific-computing-with-python/)

- [Learn String Manipulation by Building a Cipher](https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-string-manipulation-by-building-a-cipher)
- [Learn How to Work with Numbers and Strings by Implementing the Luhn Algorithm](https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-how-to-work-with-numbers-and-strings-by-implementing-the-luhn-algorithm)
- [Learn Lambda Functions by Building an Expense Tracker](https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-lambda-functions-by-building-an-expense-tracker)
- [Learn List Comprehension by Building a Case Converter Program](https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-list-comprehension-by-building-a-case-converter-program)
- [Learn the Bisection Method by Finding the Square Root of a Number](https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-the-bisection-method-by-finding-the-square-root-of-a-number)
- [Learn Regular Expressions by Building a Password Generator](https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-regular-expressions-by-building-a-password-generator)
- [Learn Algorithm Design by Building a Shortest Path Algorithm](https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-algorithm-design-by-building-a-shortest-path-algorithm)
- [Learn Recursion by Solving the Tower of Hanoi Puzzle](https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-recursion-by-solving-the-tower-of-hanoi-puzzle)
- [Learn Data Structures by Building the Merge Sort Algorithm](https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-data-structures-by-building-the-merge-sort-algorithm)
- [Learn Classes and Objects by Building a Sudoku Solver](https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-classes-and

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[liam-hq/liam]]></title>
            <link>https://github.com/liam-hq/liam</link>
            <guid>https://github.com/liam-hq/liam</guid>
            <pubDate>Sun, 06 Apr 2025 00:05:05 GMT</pubDate>
            <description><![CDATA[Automatically generates beautiful and easy-to-read ER diagrams from your database.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/liam-hq/liam">liam-hq/liam</a></h1>
            <p>Automatically generates beautiful and easy-to-read ER diagrams from your database.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 2,084</p>
            <p>Forks: 86</p>
            <p>Stars today: 480 stars today</p>
            <h2>README</h2><pre>&lt;h1 align=&quot;center&quot;&gt;
  &lt;img src=&quot;./assets/logo-light.png#gh-light-mode-only&quot; alt=&quot;Liam ERD&quot; width=&quot;445&quot;&gt;
  &lt;img src=&quot;./assets/logo-dark.png#gh-dark-mode-only&quot; alt=&quot;Liam ERD&quot; width=&quot;445&quot;&gt;
&lt;/h1&gt;

&lt;h2 align=&quot;center&quot;&gt;
  Automatically generates beautiful and easy-to-read ER diagrams from your database.
&lt;/h2&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.npmjs.com/package/@liam-hq/cli&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/%40liam-hq%2Fcli&quot; /&gt;&lt;/a&gt;
  &lt;a href=&quot;https://github.com/liam-hq/liam/blob/main/CONTRIBUTING.md&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg&quot; /&gt;&lt;/a&gt;
  &lt;a href=&quot;https://github.com/liam-hq/liam/blob/main/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-Apache%202-blue&quot; /&gt;&lt;/a&gt;
  &lt;a href=&quot;https://x.com/liam_app&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/liam_app?style=social&quot; alt=&quot;Follow us on X, formerly Twitter&quot; /&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://trendshift.io/repositories/12939&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://trendshift.io/api/badge/repositories/12939&quot; alt=&quot;liam-hq%2Fliam | Trendshift&quot; style=&quot;width: 250px; height: 55px;&quot; width=&quot;250&quot; height=&quot;55&quot;/&gt;&lt;/a&gt;
&lt;/p&gt;

![demo](./assets/demo.gif)

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://liambx.com&quot;&gt;Website&lt;/a&gt; •
  &lt;a href=&quot;https://liambx.com/docs&quot;&gt;Documentation&lt;/a&gt; •
  &lt;a href=&quot;https://github.com/orgs/liam-hq/projects/1/views/1&quot;&gt;Roadmap&lt;/a&gt;
&lt;/p&gt;

## What&#039;s Liam ERD?

Liam ERD generates beautiful, interactive ER diagrams from your database. Whether you&#039;re working on public or private repositories, Liam ERD helps you visualize complex schemas with ease.

- **Beautiful UI &amp; Interactive**: A clean design and intuitive features (like panning, zooming, and filtering) make it easy to understand even the most complex databases.
- **Simple Reverse Engineering**: Seamlessly turn your existing database schemas into clear, readable diagrams.
- **Effortless Setup**: Get started with zero configuration—just provide your schema, and you&#039;re good to go.
- **High Performance**: Optimized for both small and large projects, easily handling 100+ tables.
- **Fully Open-Source**: Contribute to the project and shape Liam ERD to fit your needs.

## Quick Start

### For Public Repositories

Insert `liambx.com/erd/p/` into your schema file&#039;s URL:

```
# Original: https://github.com/user/repo/blob/master/db/schema.rb
# Modified: https://liambx.com/erd/p/github.com/user/repo/blob/master/db/schema.rb
                  👾^^^^^^^^^^^^^^^^👾
```

### For Private Repositories

Run the interactive setup:

```bash
npx @liam-hq/cli init
```

&lt;img src=&quot;./assets/jack.gif&quot; alt=&quot;Jack&quot; width=&quot;40&quot;&gt; **If you find this project helpful, please give it a star! ⭐**  
Your support helps us reach a wider audience and continue development.

## Documentation

Check out the full documentation on [the website](https://liambx.com/docs).

## Roadmap

See what we&#039;re working on and what&#039;s coming next on [our roadmap](https://github.com/orgs/liam-hq/projects/1/views/1).

## Contributing

Refer to our [contribution guidelines](./CONTRIBUTING.md) and [Code of Conduct for contributors](./CODE_OF_CONDUCT.md).

## Contributors

&lt;a href=&quot;https://github.com/liam-hq/liam/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=liam-hq/liam&quot; /&gt;
&lt;/a&gt;

## License

Liam ERD is licensed under the [Apache License Version 2.0](LICENSE).

Licenses for third-party packages can be found in [docs/packages-license.md](docs/packages-license.md).
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[kubernetes-sigs/headlamp]]></title>
            <link>https://github.com/kubernetes-sigs/headlamp</link>
            <guid>https://github.com/kubernetes-sigs/headlamp</guid>
            <pubDate>Sun, 06 Apr 2025 00:05:04 GMT</pubDate>
            <description><![CDATA[A Kubernetes web UI that is fully-featured, user-friendly and extensible]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/kubernetes-sigs/headlamp">kubernetes-sigs/headlamp</a></h1>
            <p>A Kubernetes web UI that is fully-featured, user-friendly and extensible</p>
            <p>Language: TypeScript</p>
            <p>Stars: 3,322</p>
            <p>Forks: 264</p>
            <p>Stars today: 55 stars today</p>
            <h2>README</h2><pre>&lt;h1&gt;
  &lt;picture&gt;
    &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;frontend/src/resources/logo-light.svg&quot;&gt;
    &lt;img src=&quot;frontend/src/resources/logo-dark.svg&quot; alt=&quot;Headlamp&quot;&gt;
  &lt;/picture&gt;
&lt;/h1&gt;

&gt; **NOTICE:** We have recently moved the project under the Kubernetes SIG UI (and the repo under the _kubernetes-sigs_ org). Container images are still at [ghcr.io](https://github.com/orgs/headlamp-k8s/packages). Please bear with us while we may experience some broken links.

[![OpenSSF Best Practices](https://www.bestpractices.dev/projects/7551/badge)](https://www.bestpractices.dev/projects/7551)
[![OpenSSF Scorecard](https://api.scorecard.dev/projects/github.com/headlamp-k8s/headlamp/badge)](https://scorecard.dev/viewer/?uri=github.com/headlamp-k8s/headlamp)
[![FOSSA Status](https://app.fossa.com/api/projects/git%2Bgithub.com%2Fheadlamp-k8s%2Fheadlamp.svg?type=shield)](https://app.fossa.com/projects/git%2Bgithub.com%2Fheadlamp-k8s%2Fheadlamp?ref=badge_shield)

Headlamp is an easy-to-use and extensible Kubernetes web UI.

Headlamp was created to blend the traditional feature set of other web UIs/dashboards
(i.e., to list and view resources) with added functionality.

&lt;div align=&quot;center&quot;&gt;
  &lt;img src=&quot;https://raw.githubusercontent.com/headlamp-k8s/headlamp/screenshots/videos/headlamp_quick_run.gif&quot; width=&quot;80%&quot;&gt;
&lt;/div&gt;

## Features

- Vendor-independent / generic Kubernetes UI
- Works in-cluster, or locally as a desktop app
- Multi-cluster
- Extensible through plugins
- UI controls reflecting user roles (no deletion/update if not allowed)
- Clean &amp; modern UI
- Cancellable creation/update/deletion operations
- Logs, exec, and resource editor with documentation
- Read-write / interactive (actions based on permissions)

## Screenshots

&lt;table&gt;
    &lt;tr&gt;
        &lt;td width=&quot;33%&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/headlamp-k8s/headlamp/screenshots/screenshots/home.png&quot;&gt;&lt;/td&gt;
        &lt;td width=&quot;33%&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/headlamp-k8s/headlamp/screenshots/screenshots/cluster_chooser.png&quot;&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td width=&quot;33%&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/headlamp-k8s/headlamp/screenshots/screenshots/workloads.png&quot;&gt;&lt;/td&gt;
        &lt;td width=&quot;33%&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/headlamp-k8s/headlamp/screenshots/screenshots/resource_edition.png&quot;&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td width=&quot;33%&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/headlamp-k8s/headlamp/screenshots/screenshots/logs.png&quot;&gt;&lt;/td&gt;
        &lt;td width=&quot;33%&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/headlamp-k8s/headlamp/screenshots/screenshots/terminal.png&quot;&gt;&lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;

## Quickstart

If you want to deploy Headlamp in your cluster, check out the instructions on running it [in-cluster](https://headlamp.dev/docs/latest/installation/in-cluster/).

If you have a kubeconfig already, you can quickly try Headlamp locally as a
[desktop application](https://headlamp.dev/docs/latest/installation/desktop/)
for [Linux](https://headlamp.dev/docs/latest/installation/desktop/linux-installation),
[Mac](https://headlamp.dev/docs/latest/installation/desktop/mac-installation),
or [Windows](https://headlamp.dev/docs/latest/installation/desktop/win-installation).
**Make sure** you have a kubeconfig file set up with your favorite clusters and
in the default path so Headlamp can use it.

### Accessing

Headlamp uses [RBAC](https://kubernetes.io/docs/reference/access-authn-authz/rbac) for checking
users&#039; access to resources. If you try Headlamp with a token that has very limited
permissions, you may not be able to view your cluster resources correctly.

See the documentation on [how to easily get a Service Account token](https://headlamp.dev/docs/latest/installation#create-a-service-account-token) for your cluster.

## Tested platforms

We maintain a list of the [Kubernetes platforms](./docs/platforms.md) we have
tested Headlamp with. We invite you to add any missing platforms you have
tested, or comment if there are any regressions in the existing ones.

## Extensions / Plugins

If you are interested in tweaking Headlamp to fit your use-cases, you can check out
our [plugin development guide](https://headlamp.dev/docs/latest/development/plugins/).

## Get involved

Check out our: 
- [Guidelines](https://headlamp.dev/docs/latest/contributing/)
- [Code of Conduct](./code-of-conduct.md),
- [#headlamp](https://kubernetes.slack.com/messages/headlamp) slack channel in the Kubernetes Slack 
- [Monthly Community Meeting](https://zoom-lfx.platform.linuxfoundation.org/meetings/headlamp)

## Roadmap / Release Planning

If you are interested in the direction of the project, we maintain a
[Roadmap](https://github.com/orgs/headlamp-k8s/projects/1/views/1). It has the
biggest changes planned so far, as well as a [board](https://github.com/orgs/headlamp-k8s/projects/1/) tracking each release.

## License

Headlamp is released under the terms of the [Apache 2.0](./LICENSE) license.

## Frequently Asked Questions

For more information about Headlamp, see the [Headlamp FAQ](https://headlamp.dev/docs/latest/faq/).
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[maotoumao/MusicFree]]></title>
            <link>https://github.com/maotoumao/MusicFree</link>
            <guid>https://github.com/maotoumao/MusicFree</guid>
            <pubDate>Sun, 06 Apr 2025 00:05:03 GMT</pubDate>
            <description><![CDATA[插件化、定制化、无广告的免费音乐播放器]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/maotoumao/MusicFree">maotoumao/MusicFree</a></h1>
            <p>插件化、定制化、无广告的免费音乐播放器</p>
            <p>Language: TypeScript</p>
            <p>Stars: 12,347</p>
            <p>Forks: 836</p>
            <p>Stars today: 354 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[firebase/genkit]]></title>
            <link>https://github.com/firebase/genkit</link>
            <guid>https://github.com/firebase/genkit</guid>
            <pubDate>Sun, 06 Apr 2025 00:05:02 GMT</pubDate>
            <description><![CDATA[An open source framework for building AI-powered apps with familiar code-centric patterns. Genkit makes it easy to develop, integrate, and test AI features with observability and evaluations. Genkit works with various models and platforms.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/firebase/genkit">firebase/genkit</a></h1>
            <p>An open source framework for building AI-powered apps with familiar code-centric patterns. Genkit makes it easy to develop, integrate, and test AI features with observability and evaluations. Genkit works with various models and platforms.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 1,312</p>
            <p>Forks: 193</p>
            <p>Stars today: 8 stars today</p>
            <h2>README</h2><pre>[![Run e2e tests](https://github.com/firebase/genkit/actions/workflows/e2e-tests.yml/badge.svg)](https://github.com/firebase/genkit/actions/workflows/e2e-tests.yml)

![Genkit logo](docs/resources/genkit-logo-dark.png#gh-dark-mode-only &#039;Genkit&#039;)
![Genkit logo](docs/resources/genkit-logo.png#gh-light-mode-only &#039;Genkit&#039;)

Genkit is a framework for building AI-powered applications. It provides open source libraries for Node.js and Go, along with tools to help you debug and iterate quickly.

Learn more in our documentation for [Node.js](https://firebase.google.com/docs/genkit) and [Go](https://firebase.google.com/docs/genkit-go/get-started-go).

## What can you build with Genkit?

Genkit is a versatile framework, which you can use to build many different types of AI applications. Common use cases include:

- **Intelligent agents:** Create agents that understand user requests and perform tasks autonomously, such as personalized travel planning or itinerary generation.

  - Example: [Compass Travel Planning App](https://developers.google.com/solutions/compass)

- **Data transformation:** Convert unstructured data, like natural language, into structured formats (e.g., objects, SQL queries, tables) for integration into your app or data pipeline.

  - Example: [Add Natural Language AI Data Filters with Genkit](https://medium.com/firebase-developers/how-to-add-natural-language-ai-data-filters-to-your-app-71d64a79624d)

- **Retrieval-augmented generation:** Create apps that provide accurate and contextually relevant responses by grounding generation with your own data sources, such as chatbots or question answering systems.
  - Example: [Build AI features powered by your data](https://firebase.google.com/codelabs/ai-genkit-rag#0)

## Who should use Genkit?

Genkit is built for developers seeking to add generative AI to their apps with Node.js or Go, and can run anywhere these runtimes are supported. It&#039;s designed around a plugin architecture that can work with any generative model API or vector database, with many integrations [already available](#plugin-ecosystem).

While developed by the [Firebase](https://firebase.google.com) team, Genkit can be used independently of Firebase or Google Cloud services.

## Get started

- [Node.js quickstart](https://firebase.google.com/docs/genkit/get-started)
- [Next.js quickstart](https://firebase.google.com/docs/genkit/nextjs)
- [Go quickstart](https://firebase.google.com/docs/genkit-go/get-started-go)

&gt; [!NOTE]
&gt; Genkit for Go is in alpha, so we only recommend it for prototyping.

## Library key features

- **Unified generation API:** Generate text, media, structured objects, and tool calls from any generative model using a single, adaptable API.

- **Vector database support:** Add retrieval-augmented generation (RAG) to your apps with simple indexing and retrieval APIs that work across vector database providers.

- **Enhanced prompt engineering:** Define rich prompt templates, model configurations, input/output schemas, and tools all within a single, runnable [.prompt](https://firebase.google.com/docs/genkit/dotprompt) file.

- **AI workflows:** Organize your AI app logic into [Flows](https://firebase.google.com/docs/genkit/flows) - functions designed for observability, streaming, integration with Genkit devtools, and easy deployment as API endpoints.

- **Built-in streaming:** Stream content from your Genkit API endpoints to your client app to create snappy user experiences.

## Development tools

Genkit provides a CLI and a local UI to streamline your AI development workflow.

### CLI

The Genkit CLI includes commands for running and evaluating your Genkit functions (flows) and collecting telemetry and logs.

- **Install:** `npm i -g genkit`
- **Run a command, wrapped with telemetry, a interactive developer UI, etc:** `genkit start -- &lt;command to run your code&gt;`

### Developer UI

The Genkit developer UI is a local interface for testing, debugging, and iterating on your AI application.

Key features:

- **Run:** Execute and experiment with Genkit flows, prompts, queries, and more in dedicated playgrounds.
- **Inspect:** Analyze detailed traces of past executions, including step-by-step breakdowns of complex flows.
- **Evaluate:** Review the results of evaluations run against your flows, including performance metrics and links to relevant traces.

&lt;img src=&quot;docs/resources/readme-ui-traces-screenshot.png&quot; width=&quot;700&quot; alt=&quot;Screenshot of Genkit Developer UI showing traces&quot;&gt;

## Plugin ecosystem

Extend Genkit with plugins for specific AI models, vector databases, and platform integrations from providers like Google and OpenAI.

- **Node.js plugins:** [Explore on npm](https://www.npmjs.com/search?q=keywords:genkit-plugin)
- **Go plugins:** [Explore on pkg.go.dev](https://pkg.go.dev/github.com/firebase/genkit/go#section-directories)

Create and share your own plugins:

- **Write Node.js plugins:** [Plugin Authoring Guide](https://firebase.google.com/docs/genkit/plugin-authoring)
- **Write Go plugins:** [Plugin Authoring Guide](https://firebase.google.com/docs/genkit-go/plugin-authoring)

Find excellent examples of community-built plugins for OpenAI, Anthropic, Cohere, and more in this [repository](https://github.com/TheFireCo/genkit-plugins).

## Try Genkit on IDX

Want to skip the local setup? Click below to try out Genkit using [Project IDX](https://idx.dev), Google&#039;s AI-assisted workspace for full-stack app development in the cloud.

&lt;a href=&quot;https://idx.google.com/new/genkit&quot;&gt;
  &lt;img
    height=&quot;32&quot;
    alt=&quot;Try in IDX&quot;
    src=&quot;https://cdn.idx.dev/btn/try_purple_32.svg&quot;&gt;
&lt;/a&gt;

## Sample apps

Take a look at some samples of Genkit in use:

- [&quot;AI barista&quot;](https://github.com/firebase/genkit/blob/main/samples/js-coffee-shop) -- demonstrates simple LLM usage
- [A simple chatbot with a JavaScript frontend](https://github.com/firebase/genkit/blob/main/samples/chatbot) -- add history to LLM sessions
- [Restaurant menu Q&amp;A app](https://github.com/firebase/genkit/blob/main/samples/js-menu) -- this sample shows progressively
  more sophisticated versions of a menu understanding app.
- [Streaming to an Angular frontend](https://github.com/firebase/genkit/blob/main/samples/js-angular)
- [js-schoolAgent](https://github.com/firebase/genkit/blob/main/samples/js-schoolAgent/): A simple school assistant system with a routing agent and specialized agents
- [Prompts](https://github.com/firebase/genkit/blob/main/samples/prompts/): Shows off several prompting techniques

## Connect with us

- **Join the community:** Stay updated, ask questions, and share your work with other Genkit users on our [Discord server](https://discord.gg/qXt5zzQKpc).

- **Provide feedback:** Report issues or suggest new features using our GitHub [issue tracker](https://github.com/firebase/genkit/issues).

## Contributing

Contributions to Genkit are welcome and highly appreciated! See our [Contribution Guide](CONTRIBUTING.md) to get started.

## Authors

Genkit is built by [Firebase](https://firebase.google.com/products/genkit) with contributions from the [Open Source Community](https://github.com/firebase/genkit/graphs/contributors).
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[iptv-org/iptv]]></title>
            <link>https://github.com/iptv-org/iptv</link>
            <guid>https://github.com/iptv-org/iptv</guid>
            <pubDate>Sun, 06 Apr 2025 00:05:01 GMT</pubDate>
            <description><![CDATA[Collection of publicly available IPTV channels from all over the world]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/iptv-org/iptv">iptv-org/iptv</a></h1>
            <p>Collection of publicly available IPTV channels from all over the world</p>
            <p>Language: TypeScript</p>
            <p>Stars: 91,899</p>
            <p>Forks: 3,332</p>
            <p>Stars today: 55 stars today</p>
            <h2>README</h2><pre># IPTV [![update](https://github.com/iptv-org/iptv/actions/workflows/update.yml/badge.svg)](https://github.com/iptv-org/iptv/actions/workflows/update.yml)

Collection of publicly available IPTV (Internet Protocol television) channels from all over the world.

## Table of contents

- 🚀 [How to use?](#how-to-use)
- 📺 [Playlists](#playlists)
- 🗓 [EPG](#epg)
- 🗄 [Database](#database)
- 👨‍💻 [API](#api)
- 📚 [Resources](#resources)
- 💬 [Discussions](#discussions)
- ❓ [FAQ](#faq)
- 🛠 [Contribution](#contribution)
- ⚖ [Legal](#legal)
- © [License](#license)

## How to use?

Simply insert one of the links below into [any video player](https://github.com/iptv-org/awesome-iptv#apps) that supports live streaming and press _Open_.

![VLC Network Panel](https://github.com/iptv-org/iptv/raw/master/.readme/preview.png)

## Playlists

There are several versions of playlists that differ in the way they are grouped. As of January 30th, 2024, we have stopped distributing NSFW channels. For more information, please look at [this issue](https://github.com/iptv-org/iptv/issues/15723).

### Main playlist

This playlist includes all known channels available in this repository.

```
https://iptv-org.github.io/iptv/index.m3u
```

### Grouped by category

&lt;details&gt;
&lt;summary&gt;Expand&lt;/summary&gt;
&lt;br&gt;

Playlist in which each channel has its _category_ as a group title:

```
https://iptv-org.github.io/iptv/index.category.m3u
```

Same thing, but split up into separate files:

&lt;!-- prettier-ignore --&gt;
&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;&lt;th align=&quot;left&quot;&gt;Category&lt;/th&gt;&lt;th align=&quot;left&quot;&gt;Channels&lt;/th&gt;&lt;th align=&quot;left&quot;&gt;Playlist&lt;/th&gt;&lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;&lt;td&gt;Animation&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;45&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/animation.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Auto&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;14&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/auto.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Business&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;61&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/business.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Classic&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;44&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/classic.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Comedy&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;60&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/comedy.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Cooking&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;24&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/cooking.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Culture&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;171&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/culture.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Documentary&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;80&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/documentary.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Education&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;153&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/education.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Entertainment&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;546&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/entertainment.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Family&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;35&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/family.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;General&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;2340&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/general.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Kids&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;182&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/kids.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Legislative&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;191&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/legislative.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Lifestyle&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;79&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/lifestyle.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Movies&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;236&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/movies.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Music&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;657&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/music.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;News&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;766&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/news.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Outdoor&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;41&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/outdoor.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Relax&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/relax.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Religious&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;694&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/religious.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Science&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;21&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/science.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Series&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;149&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/series.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Shop&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;86&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/shop.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Sports&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;270&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/sports.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Travel&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;40&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/travel.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Weather&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;13&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/weather.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;XXX&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;0&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/xxx.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Undefined&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;4728&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/undefined.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;/details&gt;

### Grouped by language

&lt;details&gt;
&lt;summary&gt;Expand&lt;/summary&gt;
&lt;br&gt;

Playlist in which each channel has its _language_ as a group title:

```
https://iptv-org.github.io/iptv/index.language.m3u
```

Same thing, but split up into separate files:

&lt;!-- prettier-ignore --&gt;
&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;&lt;th align=&quot;left&quot;&gt;Language&lt;/th&gt;&lt;th align=&quot;left&quot;&gt;Channels&lt;/th&gt;&lt;th align=&quot;left&quot;&gt;Playlist&lt;/th&gt;&lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Acoli&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ach.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Adhola&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/adh.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Afghan Persian&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;7&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/prs.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Afrikaans&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/afr.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Albanian&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;37&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/sqi.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Alur&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/alz.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Amharic&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;7&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/amh.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Arabic&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;394&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ara.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Armenian&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;25&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/hye.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Assamese&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;7&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/asm.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Assyrian Neo-Aramaic&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/aii.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Ayizo Gbe&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ayb.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Aymara&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/aym.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Azerbaijani&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;17&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/aze.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Baatonum&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/bba.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Bambara&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/bam.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Bashkir&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/bak.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Basque&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;8&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/eus.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Belarusian&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;7&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/bel.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Bengali&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;30&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ben.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Bhojpuri&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/bho.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Bosnian&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;13&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/bos.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Bulgarian&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;34&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/bul.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Burmese&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;9&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/mya.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Catalan&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;51&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/cat.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Central Kurdish&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ckb.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Chenoua&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/cnu.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Chewa&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/nya.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Chhattisgarhi&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/hne.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Chiga&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/cgg.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Chinese&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;194&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/zho.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Croatian&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;22&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/hrv.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Czech&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;35&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ces.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Danish&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;19&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/dan.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Dendi (Benin)&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ddn.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Dhanwar (Nepal)&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/dhw.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Dhivehi&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;10&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/div.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Dholuo&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/luo.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Dimili&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/zza.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Dutch&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;188&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/nld.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Dyula&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/dyu.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Egyptian Arabic&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/arz.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;English&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;2112&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/eng.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Estonian&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;9&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/est.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Ewe&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ewe.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Faroese&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/fao.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Fataleka&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/far.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Filipino&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/fil.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Finnish&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;23&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/fin.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Fon&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/fon.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;French&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;420&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/fra.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Fulah&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ful.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Gaelic&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/gla.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Galician&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;13&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/glg.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Ganda&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/lug.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Gen&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/gej.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Georgian&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;9&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/kat.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;German&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;256&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/deu.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Gikuyu&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/kik.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Goan Konkani&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/gom.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Greek&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;125&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ell.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Guadeloupean Creole French&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/gcf.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Gujarati&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;6&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/guj.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Gulf Arabic&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/afb.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Gun&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/guw.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Haitian&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;4&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/hat.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Hausa&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/hau.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Hebrew&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;13&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/heb.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Hindi&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;120&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/hin.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Hmong&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/hmn.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Hungarian&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;104&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/hun.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Icelandic&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/isl.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Indonesian&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;127&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ind.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Inuktitut&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/iku.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Iranian Persian&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/pes.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Irish&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;7&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/gle.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Isekiri&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/its.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Italian&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;285&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ita.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Japanese&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;70&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/jpn.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Javanese&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/jav.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Kabiyè&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/kbp.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Kabyle&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/kab.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Kannada&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;11&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/kan.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Kapampangan&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/pam.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Kazakh&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;29&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/kaz.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Khmer&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;22&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/khm.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Khorasani Turkish&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/kmz.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Kinyarwan

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[Effect-TS/effect]]></title>
            <link>https://github.com/Effect-TS/effect</link>
            <guid>https://github.com/Effect-TS/effect</guid>
            <pubDate>Sun, 06 Apr 2025 00:05:00 GMT</pubDate>
            <description><![CDATA[An ecosystem of tools to build robust applications in TypeScript]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/Effect-TS/effect">Effect-TS/effect</a></h1>
            <p>An ecosystem of tools to build robust applications in TypeScript</p>
            <p>Language: TypeScript</p>
            <p>Stars: 8,714</p>
            <p>Forks: 292</p>
            <p>Stars today: 10 stars today</p>
            <h2>README</h2><pre># Effect Monorepo

&gt; An ecosystem of tools to build robust applications in TypeScript

## Introduction

Welcome to Effect, a powerful TypeScript framework that provides a fully-fledged functional effect system with a rich standard library.

Effect consists of several packages that work together to help build robust TypeScript applications. The core package, `effect`, serves as the foundation of the framework, offering primitives for managing side effects, ensuring type safety, and supporting concurrency.

## Monorepo Structure

The Effect monorepo is organized into multiple packages, each extending the core functionality. Below is an overview of the packages included:

| Package                           | Description                                                                                 |                                                                                                    |
| --------------------------------- | ------------------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------------- |
| `effect`                          | Core package                                                                                | [README](https://github.com/Effect-TS/effect/blob/main/packages/effect/README.md)                  |
| `@effect/ai`                      | AI utilities                                                                                | [README](https://github.com/Effect-TS/effect/blob/main/packages/ai/ai/README.md)                   |
| `@effect/ai-openai`               | OpenAI utilities                                                                            | [README](https://github.com/Effect-TS/effect/blob/main/packages/ai/openai/README.md)               |
| `@effect/ai-anthropic`            | Anthropic utilities                                                                         | [README](https://github.com/Effect-TS/effect/blob/main/packages/ai/anthropic/README.md)            |
| `@effect/cli`                     | CLI utilities                                                                               | [README](https://github.com/Effect-TS/effect/blob/main/packages/cli/README.md)                     |
| `@effect/cluster`                 | Distributed computing tools                                                                 | [README](https://github.com/Effect-TS/effect/blob/main/packages/cluster/README.md)                 |
| `@effect/cluster-browser`         | Cluster utilities for the browser                                                           | [README](https://github.com/Effect-TS/effect/blob/main/packages/cluster-browser/README.md)         |
| `@effect/cluster-node`            | Cluster utilities for [Node.js](https://nodejs.org)                                         | [README](https://github.com/Effect-TS/effect/blob/main/packages/cluster-node/README.md)            |
| `@effect/cluster-workflow`        | Workflow management for clusters                                                            | [README](https://github.com/Effect-TS/effect/blob/main/packages/cluster-worflow/README.md)         |
| `@effect/experimental`            | Experimental features and APIs                                                              | [README](https://github.com/Effect-TS/effect/blob/main/packages/experimental/README.md)            |
| `@effect/opentelemetry`           | [OpenTelemetry](https://opentelemetry.io/) integration                                      | [README](https://github.com/Effect-TS/effect/blob/main/packages/opentelemetry/README.md)           |
| `@effect/platform`                | Cross-platform runtime utilities                                                            | [README](https://github.com/Effect-TS/effect/blob/main/packages/platform/README.md)                |
| `@effect/platform-browser`        | Platform utilities for the browser                                                          | [README](https://github.com/Effect-TS/effect/blob/main/packages/platform-browser/README.md)        |
| `@effect/platform-bun`            | Platform utilities for [Bun](https://bun.sh/)                                               | [README](https://github.com/Effect-TS/effect/blob/main/packages/platform-bun/README.md)            |
| `@effect/platform-node`           | Platform utilities for [Node.js](https://nodejs.org)                                        | [README](https://github.com/Effect-TS/effect/blob/main/packages/platform-node/README.md)           |
| `@effect/platform-node-shared`    | Shared utilities for [Node.js](https://nodejs.org)                                          | [README](https://github.com/Effect-TS/effect/blob/main/packages/platform-node-shared/README.md)    |
| `@effect/printer`                 | General-purpose printing utilities                                                          | [README](https://github.com/Effect-TS/effect/blob/main/packages/printer/README.md)                 |
| `@effect/printer-ansi`            | ANSI-compatible printing utilities                                                          | [README](https://github.com/Effect-TS/effect/blob/main/packages/printer-ansi/README.md)            |
| `@effect/rpc`                     | Remote procedure call (RPC) utilities                                                       | [README](https://github.com/Effect-TS/effect/blob/main/packages/rpc/README.md)                     |
| `@effect/rpc-http`                | HTTP-based RPC utilities                                                                    | [README](https://github.com/Effect-TS/effect/blob/main/packages/rpc-http/README.md)                |
| `@effect/sql`                     | SQL database utilities                                                                      | [README](https://github.com/Effect-TS/effect/blob/main/packages/sql/README.md)                     |
| `@effect/sql-clickhouse`          | An `@effect/sql` implementation for [ClickHouse](https://clickhouse.com/).                  | [README](https://github.com/Effect-TS/effect/blob/main/packages/sql-clickhouse/README.md)          |
| `@effect/sql-d1`                  | An `@effect/sql` implementation for [Cloudflare D1](https://developers.cloudflare.com/d1/). | [README](https://github.com/Effect-TS/effect/blob/main/packages/sql-d1/README.md)                  |
| `@effect/sql-drizzle`             | An `@effect/sql` implementation for [Drizzle](https://orm.drizzle.team/).                   | [README](https://github.com/Effect-TS/effect/blob/main/packages/sql-drizzle/README.md)             |
| `@effect/sql-kysely`              | An `@effect/sql` implementation for [Kysely](https://kysely.dev/).                          | [README](https://github.com/Effect-TS/effect/blob/main/packages/sql-kysely/README.md)              |
| `@effect/sql-libsql`              | An `@effect/sql` implementation using the `@libsql/client` library.                         | [README](https://github.com/Effect-TS/effect/blob/main/packages/sql-libsql/README.md)              |
| `@effect/sql-mssql`               | An `@effect/sql` implementation using the mssql `tedious` library.                          | [README](https://github.com/Effect-TS/effect/blob/main/packages/sql-mssql/README.md)               |
| `@effect/sql-mysql2`              | An `@effect/sql` implementation using the `mysql2` library.                                 | [README](https://github.com/Effect-TS/effect/blob/main/packages/sql-mysql2/README.md)              |
| `@effect/sql-pg`                  | An `@effect/sql` implementation using the `postgres.js` library.                            | [README](https://github.com/Effect-TS/effect/blob/main/packages/sql-pg/README.md)                  |
| `@effect/sql-sqlite-bun`          | An `@effect/sql` implementation using the `bun:sqlite` library.                             | [README](https://github.com/Effect-TS/effect/blob/main/packages/sql-sqlite-bun/README.md)          |
| `@effect/sql-sqlite-do`           | An `@effect/sql` implementation for Cloudflare Durable Objects sqlite storage.              | [README](https://github.com/Effect-TS/effect/blob/main/packages/sql-sqlite-do/README.md)           |
| `@effect/sql-sqlite-node`         | An `@effect/sql` implementation using the `better-sqlite3` library.                         | [README](https://github.com/Effect-TS/effect/blob/main/packages/sql-sqlite-node/README.md)         |
| `@effect/sql-sqlite-react-native` | An `@effect/sql` implementation using the `react-native-quick-sqlite` library.              | [README](https://github.com/Effect-TS/effect/blob/main/packages/sql-sqlite-react-native/README.md) |
| `@effect/sql-sqlite-wasm`         | An `@effect/sql` implementation using the `@sqlite.org/sqlite-wasm` library.                | [README](https://github.com/Effect-TS/effect/blob/main/packages/sql-sqlite-wasm/README.md)         |
| `@effect/typeclass`               | Functional programming type classes                                                         | [README](https://github.com/Effect-TS/effect/blob/main/packages/typeclass/README.md)               |
| `@effect/vitest`                  | Testing utilities for [Vitest](https://vitest.dev/)                                         | [README](https://github.com/Effect-TS/effect/blob/main/packages/vitest/README.md)                  |

# Documentation

## Website

For detailed information and usage examples, visit the [Effect website](https://www.effect.website/).

## API Reference

For a complete API reference of the core package `effect`, see the [Effect API documentation](https://effect-ts.github.io/effect/).

## Introduction to Effect

Get started with Effect by watching our introductory video on YouTube. This video provides an overview of Effect and its key features:

[![Introduction to Effect](https://img.youtube.com/vi/ViSiXfBKElQ/maxresdefault.jpg)](https://youtu.be/ViSiXfBKElQ)

# Connect with Our Community

Join the Effect community on Discord to connect with other developers, ask questions, and share insights: [Join Effect&#039;s Discord Community](https://discord.gg/hdt7t7jpvn).

# Contributing via Pull Requests

We welcome contributions via pull requests! Here are some guidelines to help you get started:

## Setting Up Your Environment

Begin by forking the repository and clone it to your local machine.

Navigate into the cloned repository and create a new branch for your changes:

```bash
git checkout -b my-branch
```

Ensure all required dependencies are installed by running:

```bash
pnpm install  # Requires pnpm version 10.4.0
```

## Making Changes

### Implement Your Changes

Make the changes you propose to the codebase. If your changes impact functionality, please **add corresponding tests** to validate your updates.

### Validate Your Changes

Run the following commands to ensure your changes do not introduce any issues:

- `pnpm codegen` (optional): Re-generate the package entrypoints in case you have changed the structure of a package or introduced a new module.
- `pnpm check`: Confirm that the code compiles without errors.
- `pnpm test`: Execute all unit tests to ensure your changes haven&#039;t broken existing functionality.
- `pnpm circular`: Check for any circular dependencies in imports.
- `pnpm lint`: Ensure the code adheres to our coding standards.
  - If you encounter style issues, use `pnpm lint-fix` to automatically correct some of these.
- `pnpm test-types`: Run type-level tests. Tests are written using [tstyche](https://tstyche.org/).
- `pnpm docgen`: Ensure the documentation generates correctly and reflects any changes made.

### Document Your Changes

#### JSDoc Comments

When adding a new feature, it&#039;s important to document your code using JSDoc comments. This helps other developers understand the purpose and usage of your changes. Include at least the following in your JSDoc comments:

- **A Short Description**: Summarize the purpose and functionality of the feature.
- **Example**: Provide a usage example under the `@example` tag to demonstrate how to use the feature.
- **Since Version**: Use the `@since` tag to indicate the version in which the feature was introduced. If you&#039;re unsure about the version, please consult with a project maintainer.
- **Category (Optional)**: You can categorize the feature with the `@category` tag to help organize the documentation. If you&#039;re unsure about what category to assign, ask a project maintainer.

**Note**: A HTML utility file, [`code2jsdoc-example.html`](/scripts/jsdocs/code2jsdoc-example.html), has been added to assist with creating JSDoc `@example` comments. This web-based interface includes two text areas:

1. An input textarea for pasting example code.
2. An output textarea that dynamically generates formatted JSDoc `@example` comments.

This utility helps ensure consistent formatting and streamlines the process of documenting examples. See the following example of its usage:

Example Input:

```ts
import { Effect } from &quot;effect&quot;

console.log(Effect.runSyncExit(Effect.succeed(1)))
/*
Output:
{
  _id: &quot;Exit&quot;,
  _tag: &quot;Success&quot;,
  value: 1
}
*/
```

Output:

````
*
* @example
* ```ts
* import { Effect } from &quot;effect&quot;
*
* console.log(Effect.runSyncExit(Effect.succeed(1)))
* // Output:
* // {
* //   _id: &quot;Exit&quot;,
* //   _tag: &quot;Success&quot;,
* //   value: 1
* // }
* ```
*
````

By using this utility, you can save time and maintain consistency in your JSDoc comments, especially for complex examples.

#### Changeset Documentation

Before committing your changes, document them with a changeset. This process helps in tracking modifications and effectively communicating them to the project team and users:

```bash
pnpm changeset
```

During the changeset creation process, you will be prompted to select the appropriate level for your changes:

- **patch**: Opt for this if you are making small fixes or minor changes that do not affect the library&#039;s overall functionality.
- **minor**: Choose this for new features that enhance functionality but do not disrupt existing features.
- **major**: Select this for any changes that result in backward-incompatible modifications to the library.

## Finalizing Your Contribution

### Commit Your Changes

Once you have documented your changes with a changeset, it’s time to commit them to the repository. Use a clear and descriptive commit message, which could be the same message you used in your changeset:

```bash
git commit -am &#039;Add some feature&#039;
```

#### Linking to Issues

If your commit addresses an open issue, reference the issue number directly in your commit message. This helps to link your contribution clearly to specific tasks or bug reports. Additionally, if your commit resolves the issue, you can indicate this by adding a phrase like `&quot;, closes #&lt;issue-number&gt;&quot;`. For example:

```bash
git commit -am &#039;Add some feature, closes #123&#039;
```

This practice not only helps in tracking the progress of issues but also automatically closes the issue when the commit is merged, streamlining project management.

### Push to Your Fork

Push the changes up to your GitHub fork:

```bash
git push origin my-branch
```

### Create a Pull Request

Open a pull request against the appropriate branch on the original repository:

- `main` branch: For minor patches or bug fixes.
- `next-minor` branch: For new features that are non-breaking.
- `next-major` branch: For changes that introduce breaking modifications.

Please be patient! We will do our best to review your pull request as soon as possible.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[directus/directus]]></title>
            <link>https://github.com/directus/directus</link>
            <guid>https://github.com/directus/directus</guid>
            <pubDate>Sun, 06 Apr 2025 00:04:59 GMT</pubDate>
            <description><![CDATA[The flexible backend for all your projects 🐰 Turn your DB into a headless CMS, admin panels, or apps with a custom UI, instant APIs, auth & more.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/directus/directus">directus/directus</a></h1>
            <p>The flexible backend for all your projects 🐰 Turn your DB into a headless CMS, admin panels, or apps with a custom UI, instant APIs, auth & more.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 29,809</p>
            <p>Forks: 4,135</p>
            <p>Stars today: 17 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[elie222/inbox-zero]]></title>
            <link>https://github.com/elie222/inbox-zero</link>
            <guid>https://github.com/elie222/inbox-zero</guid>
            <pubDate>Sun, 06 Apr 2025 00:04:58 GMT</pubDate>
            <description><![CDATA[Open source email app to reach inbox zero fast.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/elie222/inbox-zero">elie222/inbox-zero</a></h1>
            <p>Open source email app to reach inbox zero fast.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 5,062</p>
            <p>Forks: 545</p>
            <p>Stars today: 196 stars today</p>
            <h2>README</h2><pre>[![](apps/web/app/opengraph-image.png)](https://www.getinboxzero.com)

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.getinboxzero.com&quot;&gt;
    &lt;h1 align=&quot;center&quot;&gt;Inbox Zero - Your AI Email Assistant&lt;/h1&gt;
  &lt;/a&gt;
  &lt;p align=&quot;center&quot;&gt;
    Open source email app to reach inbox zero fast.
    &lt;br /&gt;
    &lt;a href=&quot;https://www.getinboxzero.com&quot;&gt;Website&lt;/a&gt;
    ·
    &lt;a href=&quot;https://www.getinboxzero.com/discord&quot;&gt;Discord&lt;/a&gt;
    ·
    &lt;a href=&quot;https://github.com/elie222/inbox-zero/issues&quot;&gt;Issues&lt;/a&gt;
  &lt;/p&gt;
&lt;/p&gt;

## About

There are two parts to Inbox Zero:

1. An AI email assistant that helps you spend less time on email.
2. Open source AI email client.

If you&#039;re looking to contribue to the project, the email client is the best place to do this.

[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/clone?repository-url=https%3A%2F%2Fgithub.com%2Felie222%2Finbox-zero&amp;env=NEXTAUTH_SECRET,GOOGLE_CLIENT_ID,GOOGLE_CLIENT_SECRET,GOOGLE_ENCRYPT_SECRET,GOOGLE_ENCRYPT_SALT,UPSTASH_REDIS_URL,UPSTASH_REDIS_TOKEN,GOOGLE_PUBSUB_TOPIC_NAME,DATABASE_URL)

Thanks to Vercel for sponsoring Inbox Zero in support of open-source software.

## Features

- **AI Personal Assistant:** Manages your email for you based on a plain text prompt file. It can take any action a human assistant can take on your behalf (Draft reply, Label, Archive, Reply, Forward, Mark Spam, and even call a webhook).
- **Reply Zero:** Track emails that need your reply and those awaiting responses.
- **Smart Categories:** Categorize everyone that&#039;s ever emailed you.
- **Bulk Unsubscriber:** Quickly unsubscribe from emails you never read in one-click.
- **Cold Email Blocker:** Automatically block cold emails.
- **Email Analytics:** Track your email activity with daily, weekly, and monthly stats.

Learn more in our [docs](https://docs.getinboxzero.com).

## Feature Screenshots

| ![AI Assistant](.github/screenshots/email-assistant.png) |        ![Reply Zero](.github/screenshots/reply-zero.png)        |
| :------------------------------------------------------: | :-------------------------------------------------------------: |
|                      _AI Assistant_                      |                          _Reply Zero_                           |
|  ![Gmail Client](.github/screenshots/email-client.png)   | ![Bulk Unsubscriber](.github/screenshots/bulk-unsubscriber.png) |
|                      _Gmail client_                      |                       _Bulk Unsubscriber_                       |

## Demo Video

[![Inbox Zero demo](/video-thumbnail.png)](http://www.youtube.com/watch?v=hfvKvTHBjG0)

## Built with

- [Next.js](https://nextjs.org/)
- [Tailwind CSS](https://tailwindcss.com/)
- [shadcn/ui](https://ui.shadcn.com/)
- [Prisma](https://www.prisma.io/)
- [Upstash](https://upstash.com/)
- [Turborepo](https://turbo.build/)

## Feature Requests

To request a feature open a [GitHub issue](https://github.com/elie222/inbox-zero/issues). If you don&#039;t have a GitHub account you can request features [here](https://www.getinboxzero.com/feature-requests). Or join our [Discord](https://www.getinboxzero.com/discord).

## Getting Started for Developers

We offer a hosted version of Inbox Zero at [https://getinboxzero.com](https://getinboxzero.com). To self-host follow the steps below.

### Contributing to the project

You can view open tasks in our [GitHub Issues](https://github.com/elie222/inbox-zero/issues).
Join our [Discord](https://www.getinboxzero.com/discord) to discuss tasks and check what&#039;s being worked on.

[ARCHITECTURE.md](./ARCHITECTURE.md) explains the architecture of the project (LLM generated).

### Requirements

- [Node.js](https://nodejs.org/en/) &gt;= 18.0.0
- [pnpm](https://pnpm.io/) &gt;= 8.6.12
- [Docker desktop](https://www.docker.com/products/docker-desktop/) (optional)

### Setup

[Here&#039;s a video](https://youtu.be/hVQENQ4WT2Y) on how to set up the project. It covers the same steps mentioned in this document. But goes into greater detail on setting up the external services.

The external services that are required are:

- [Google OAuth](https://console.cloud.google.com/apis/credentials)
- [Google PubSub](https://console.cloud.google.com/cloudpubsub/topic/list) - see set up instructions below

You also need to set an LLM, but you can use a local one too:

- [Anthropic](https://console.anthropic.com/settings/keys)
- [OpenAI](https://platform.openai.com/api-keys)
- AWS Bedrock Anthropic
- Google Gemini
- Groq Llama 3.3 70B
- Ollama (local)

We use Postgres for the database.
For Redis, you can use [Upstash Redis](https://upstash.com/) or set up your own Redis instance.

You can run Postgres &amp; Redis locally using `docker-compose`

```bash
docker-compose up -d # -d will run the services in the background
```

Create your own `.env` file:

```bash
cp apps/web/.env.example apps/web/.env
cd apps/web
pnpm install
```

Set the environment variables in the newly created `.env`. You can see a list of required variables in: `apps/web/env.ts`.

The required environment variables:

- `NEXTAUTH_SECRET` -- can be any random string (try using `openssl rand -hex 32` for a quick secure random string)
- `GOOGLE_CLIENT_ID` -- Google OAuth client ID. More info [here](https://next-auth.js.org/providers/google)
- `GOOGLE_CLIENT_SECRET` -- Google OAuth client secret. More info [here](https://next-auth.js.org/providers/google)
- `GOOGLE_ENCRYPT_SECRET` -- Secret key for encrypting OAuth tokens (try using `openssl rand -hex 32` for a secure key)
- `GOOGLE_ENCRYPT_SALT` -- Salt for encrypting OAuth tokens (try using `openssl rand -hex 16` for a secure salt)
- `UPSTASH_REDIS_URL` -- Redis URL from Upstash. (can be empty if you are using Docker Compose)
- `UPSTASH_REDIS_TOKEN` -- Redis token from Upstash. (or specify your own random string if you are using Docker Compose)

When using Vercel with Fluid Compute turned off, you should set `MAX_DURATION=300` or lower. See Vercel limits for different plans [here](https://vercel.com/docs/functions/configuring-functions/duration#duration-limits).

To run the migrations:

```bash
pnpm prisma migrate dev
```

To run the app locally for development (slower):

```bash
pnpm run dev
```

Or from the project root:

```bash
turbo dev
```

To build and run the app locally in production mode (faster):

```bash
pnpm run build
pnpm start
```

Open [http://localhost:3000](http://localhost:3000) to view the app in your browser.

To upgrade yourself, make yourself an admin in the `.env`: `ADMINS=hello@gmail.com`
Then upgrade yourself at: [http://localhost:3000/admin](http://localhost:3000/admin).

### Supported LLMs

For the LLM, you can use Anthropic, OpenAI, or Anthropic on AWS Bedrock. You can also use Ollama by setting the following enviroment variables:

```sh
OLLAMA_BASE_URL=http://localhost:11434/api
NEXT_PUBLIC_OLLAMA_MODEL=phi3
```

Note: If you need to access Ollama hosted locally and the application is running on Docker setup, you can use `http://host.docker.internal:11434/api` as the base URL. You might also need to set `OLLAMA_HOST` to `0.0.0.0` in the Ollama configuration file.

You can select the model you wish to use in the app on the `/settings` page of the app.

### Setting up Google OAuth and Gmail API

You need to enable these scopes in the Google Cloud Console:

```plaintext
https://www.googleapis.com/auth/userinfo.profile
https://www.googleapis.com/auth/userinfo.email
https://www.googleapis.com/auth/gmail.modify
https://www.googleapis.com/auth/gmail.settings.basic
https://www.googleapis.com/auth/contacts
```

### Set up push notifications via Google PubSub to handle emails in real time

Follow instructions [here](https://developers.google.com/gmail/api/guides/push).

1. [Create a topic](https://developers.google.com/gmail/api/guides/push#create_a_topic)
2. [Create a subscription](https://developers.google.com/gmail/api/guides/push#create_a_subscription)
3. [Grant publish rights on your topic](https://developers.google.com/gmail/api/guides/push#grant_publish_rights_on_your_topic)

Set env var `GOOGLE_PUBSUB_TOPIC_NAME`.
When creating the subscription select Push and the url should look something like: `https://www.getinboxzero.com/api/google/webhook?token=TOKEN` or `https://abc.ngrok-free.app/api/google/webhook?token=TOKEN` where the domain is your domain. Set `GOOGLE_PUBSUB_VERIFICATION_TOKEN` in your `.env` file to be the value of `TOKEN`.

To run in development ngrok can be helpful:

```sh
ngrok http 3000
# or with an ngrok domain to keep your endpoint stable (set `XYZ`):
ngrok http --domain=XYZ.ngrok-free.app 3000
```

And then update the webhook endpoint in the [Google PubSub subscriptions dashboard](https://console.cloud.google.com/cloudpubsub/subscription/list).

To start watching emails visit: `/api/google/watch/all`

### Watching for email updates

Set a cron job to run these:
The Google watch is necessary. The Resend one is optional.

```json
  &quot;crons&quot;: [
    {
      &quot;path&quot;: &quot;/api/google/watch/all&quot;,
      &quot;schedule&quot;: &quot;0 1 * * *&quot;
    },
    {
      &quot;path&quot;: &quot;/api/resend/summary/all&quot;,
      &quot;schedule&quot;: &quot;0 16 * * 1&quot;
    }
  ]
```

[Here](https://vercel.com/guides/how-to-setup-cron-jobs-on-vercel#alternative-cron-providers) are some easy ways to run cron jobs. Upstash is a free, easy option. I could never get the Vercel `vercel.json`. Open to PRs if you find a fix for that.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[supabase-community/supabase-mcp]]></title>
            <link>https://github.com/supabase-community/supabase-mcp</link>
            <guid>https://github.com/supabase-community/supabase-mcp</guid>
            <pubDate>Sun, 06 Apr 2025 00:04:57 GMT</pubDate>
            <description><![CDATA[Connect Supabase to your AI assistants]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/supabase-community/supabase-mcp">supabase-community/supabase-mcp</a></h1>
            <p>Connect Supabase to your AI assistants</p>
            <p>Language: TypeScript</p>
            <p>Stars: 205</p>
            <p>Forks: 19</p>
            <p>Stars today: 61 stars today</p>
            <h2>README</h2><pre># Supabase MCP Server

&gt; Connect your Supabase projects to Cursor, Claude, Windsurf, and other AI assistants.

![supabase-mcp-demo](https://github.com/user-attachments/assets/3fce101a-b7d4-482f-9182-0be70ed1ad56)

The [Model Context Protocol](https://modelcontextprotocol.io/introduction) (MCP) standardizes how Large Language Models (LLMs) talk to external services like Supabase. It connects AI assistants directly with your Supabase project and allows them to perform tasks like managing tables, fetching config, and querying data. See the [full list of tools](#tools).

## Prerequisites

You will need Node.js installed on your machine. You can check this by running:

```shell
node -v
```

If you don&#039;t have Node.js installed, you can download it from [nodejs.org](https://nodejs.org/).

## Setup

### 1. Personal access token (PAT)

First, go to your [Supabase settings](https://supabase.com/dashboard/account/tokens) and create a personal access token. Give it a name that describes its purpose, like &quot;Cursor MCP Server&quot;.

This will be used to authenticate the MCP server with your Supabase account. Make sure to copy the token, as you won&#039;t be able to see it again.

### 2. Configure MCP client

Next, configure your MCP client (such as Cursor) to use this server. Most MCP clients store the configuration as JSON in the following format:

```json
{
  &quot;mcpServers&quot;: {
    &quot;supabase&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [
        &quot;-y&quot;,
        &quot;@supabase/mcp-server-supabase@latest&quot;,
        &quot;--access-token&quot;,
        &quot;&lt;personal-access-token&gt;&quot;
      ]
    }
  }
}
```

Replace `&lt;personal-access-token&gt;` with the token you created in step 1. If you are on Windows, you will need to [prefix this command](#windows).

If your MCP client doesn&#039;t accept JSON, the direct CLI command is:

```shell
npx -y @supabase/mcp-server-supabase@latest --access-token=&lt;personal-access-token&gt;
```

&gt; Note: Do not run this command directly - this is meant to be executed by your MCP client in order to start the server. `npx` automatically downloads the latest version of the MCP server from `npm` and runs it in a single command.

#### Windows

On Windows, you will need to prefix the command with `cmd /c`:

```json
{
  &quot;mcpServers&quot;: {
    &quot;supabase&quot;: {
      &quot;command&quot;: &quot;cmd&quot;,
      &quot;args&quot;: [
        &quot;/c&quot;,
        &quot;npx&quot;,
        &quot;-y&quot;,
        &quot;@supabase/mcp-server-supabase@latest&quot;,
        &quot;--access-token&quot;,
        &quot;&lt;personal-access-token&gt;&quot;
      ]
    }
  }
}
```

or with `wsl` if you are running Node.js inside WSL:

```json
{
  &quot;mcpServers&quot;: {
    &quot;supabase&quot;: {
      &quot;command&quot;: &quot;wsl&quot;,
      &quot;args&quot;: [
        &quot;npx&quot;,
        &quot;-y&quot;,
        &quot;@supabase/mcp-server-supabase@latest&quot;,
        &quot;--access-token&quot;,
        &quot;&lt;personal-access-token&gt;&quot;
      ]
    }
  }
}
```

Make sure Node.js is available in your system `PATH` environment variable. If you are running Node.js natively on Windows, you can set this by running the following commands in your terminal.

1. Get the path to `npm`:

   ```shell
   npm config get prefix
   ```

2. Add the directory to your PATH:

   ```shell
   setx PATH &quot;%PATH%;&lt;path-to-dir&gt;&quot;
   ```

3. Restart your MCP client.

## Tools

_**Note:** This server is pre-1.0, so expect some breaking changes between versions. Since LLMs will automatically adapt to the tools available, this shouldn&#039;t affect most users._

The following Supabase tools are available to the LLM:

#### Project Management

- `list_projects`: Lists all Supabase projects for the user.
- `get_project`: Gets details for a project.
- `create_project`: Creates a new Supabase project.
- `pause_project`: Pauses a project.
- `restore_project`: Restores a project.
- `list_organizations`: Lists all organizations that the user is a member of.
- `get_organization`: Gets details for an organization.

#### Database Operations

- `list_tables`: Lists all tables within the specified schemas.
- `list_extensions`: Lists all extensions in the database.
- `list_migrations`: Lists all migrations in the database.
- `apply_migration`: Applies a SQL migration to the database. SQL passed to this tool will be tracked within the database, so LLMs should use this for DDL operations (schema changes).
- `execute_sql`: Executes raw SQL in the database. LLMs should use this for regular queries that don&#039;t change the schema.
- `get_logs`: Gets logs for a Supabase project by service type (api, postgres, edge functions, auth, storage, realtime). LLMs can use this to help with debugging and monitoring service performance.

#### Project Configuration

- `get_project_url`: Gets the API URL for a project.
- `get_anon_key`: Gets the anonymous API key for a project.

#### Branching (Experimental, requires a paid plan)

- `create_branch`: Creates a development branch with migrations from production branch.
- `list_branches`: Lists all development branches.
- `delete_branch`: Deletes a development branch.
- `merge_branch`: Merges migrations and edge functions from a development branch to production.
- `reset_branch`: Resets migrations of a development branch to a prior version.
- `rebase_branch`: Rebases development branch on production to handle migration drift.

#### Development Tools

- `generate_typescript_types`: Generates TypeScript types based on the database schema. LLMs can save this to a file and use it in their code.

## Other MCP servers

### `@supabase/mcp-server-postgrest`

The PostgREST MCP server allows you to connect your own users to your app via REST API. See more details on its [project README](./packages/mcp-server-postgrest).

## Resources

- [**Model Context Protocol**](https://modelcontextprotocol.io/introduction): Learn more about MCP and its capabilities.

## License

This project is licensed under Apache 2.0. See the [LICENSE](./LICENSE) file for details.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[aws-samples/generative-ai-use-cases]]></title>
            <link>https://github.com/aws-samples/generative-ai-use-cases</link>
            <guid>https://github.com/aws-samples/generative-ai-use-cases</guid>
            <pubDate>Sun, 06 Apr 2025 00:04:56 GMT</pubDate>
            <description><![CDATA[Application implementation with business use cases for safely utilizing generative AI in business operations]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/aws-samples/generative-ai-use-cases">aws-samples/generative-ai-use-cases</a></h1>
            <p>Application implementation with business use cases for safely utilizing generative AI in business operations</p>
            <p>Language: TypeScript</p>
            <p>Stars: 908</p>
            <p>Forks: 216</p>
            <p>Stars today: 4 stars today</p>
            <h2>README</h2><pre>&lt;div markdown=&quot;1&quot; align=&quot;center&quot;&gt;
  &lt;h1&gt;Generative AI Use Cases (GenU)&lt;/h1&gt;

[![](https://img.shields.io/badge/Documentation-Latest-blue)](https://aws-samples.github.io/generative-ai-use-cases/index.html) [![](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/aws-samples/generative-ai-use-cases/blob/main/LICENSE) [![](https://github.com/aws-samples/generative-ai-use-cases/actions/workflows/node.js.yml/badge.svg)](https://github.com/aws-samples/generative-ai-use-cases/actions/workflows/node.js.yml) [![](https://github.com/aws-samples/generative-ai-use-cases/actions/workflows/browser-extension.yml/badge.svg)](https://github.com/aws-samples/generative-ai-use-cases/actions/workflows/browser-extension.yml)

English | [日本語](./README_ja.md)

Application implementation with business use cases for safely utilizing generative AI in business operations

  &lt;img src=&quot;./docs/assets/images/sc_lp_en.png&quot; alt=&quot;Application implementation with business use cases for safely utilizing generative AI in business operations&quot; width=&quot;68%&quot;&gt;
&lt;/div&gt;

&gt; [!IMPORTANT]
&gt; GenU has supported multiple languages since v4.
&gt;
&gt; GenU は v4 から多言語対応しました。日本語ドキュメントは[こちら](./README_ja.md)

## GenU Usage Patterns

Here we introduce GenU&#039;s features and options by usage pattern. For comprehensive deployment options, please refer to [this document](docs/en/DEPLOY_OPTION.md).

&gt; [!TIP]
&gt; Click on a usage pattern to see details

&lt;details markdown=&quot;1&quot;&gt;
  &lt;summary&gt;&lt;strong&gt;&lt;ins&gt;I want to experience generative AI use cases&lt;/ins&gt;&lt;/strong&gt;&lt;/summary&gt;

GenU provides a variety of standard use cases leveraging generative AI. These use cases can serve as seeds for ideas on how to utilize generative AI in business operations, or they can be directly applied to business as-is. We plan to continuously add more refined use cases in the future. If unnecessary, you can also [hide specific use cases](docs/en/DEPLOY_OPTION.md#hiding-specific-use-cases) with an option. Here are the use cases provided by default.

  &lt;br/&gt;
  &lt;br/&gt;
  &lt;table width=&quot;100%&quot;&gt;
    &lt;thead&gt;
      &lt;tr&gt;
        &lt;td width=&quot;20%&quot;&gt;Use Case&lt;/td&gt;
        &lt;td width=&quot;80%&quot;&gt;Description&lt;/td&gt;
      &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td&gt;Chat&lt;/td&gt;
        &lt;td&gt;You can interact with large language models (LLMs) in a chat format. The existence of platforms that allow direct dialogue with LLMs enables quick responses to specific and new use cases. It&#039;s also effective as a testing environment for prompt engineering.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;Text Generation&lt;/td&gt;
        &lt;td&gt;Generating text in any context is one of the tasks LLMs excel at. It generates all kinds of text including articles, reports, and emails.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;Summarization&lt;/td&gt;
        &lt;td&gt;LLMs are good at summarizing large amounts of text. Beyond simple summarization, they can also extract necessary information in a conversational format after being given text as context. For example, after reading a contract, you can ask questions like &quot;What are the conditions for XXX?&quot; or &quot;What is the amount for YYY?&quot;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;Writing&lt;/td&gt;
        &lt;td&gt;LLMs can suggest improvements from a more objective perspective, considering not only typos but also the flow and content of the text. You can expect to improve quality by having the LLM objectively check points you might have missed before showing your work to others.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;Translation&lt;/td&gt;
        &lt;td&gt;LLMs trained in multiple languages can perform translations. Beyond simple translation, they can incorporate various specified contextual information such as casualness and target audience into the translation.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;Web Content Extraction&lt;/td&gt;
        &lt;td&gt;Extracts necessary information from web content such as blogs and documents. The LLM removes unnecessary information and formats it into well-structured text. Extracted content can be used in other use cases such as summarization and translation.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;Image Generation&lt;/td&gt;
        &lt;td&gt;Image generation AI can create new images based on text or existing images. It allows for immediate visualization of ideas, potentially improving efficiency in design work. In this feature, LLMs can assist in creating prompts.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;Video Generation&lt;/td&gt;
        &lt;td&gt;Video generation AI creates short videos from text. The generated videos can be used as materials in various scenarios.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;Video Analysis&lt;/td&gt;
        &lt;td&gt;With multimodal models, it&#039;s now possible to input not only text but also images. In this feature, you can ask the LLM to analyze video frames and text inputs.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;Diagram Generation&lt;/td&gt;
        &lt;td&gt;Diagram generation visualizes text and content on any topic using optimal diagrams. It allows for easy text-based diagram creation, enabling efficient creation of flowcharts and other diagrams even for non-programmers and non-designers.&lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
  &lt;/table&gt;
&lt;/details&gt;

&lt;details markdown=&quot;1&quot;&gt;
  &lt;summary&gt;&lt;strong&gt;&lt;ins&gt;I want to do RAG&lt;/ins&gt;&lt;/strong&gt;&lt;/summary&gt;

RAG is a technique that allows LLMs to answer questions they normally couldn&#039;t by providing external up-to-date information or domain knowledge that LLMs typically struggle with.
PDF, Word, Excel, and other files accumulated within your organization can serve as information sources.
RAG also has the effect of preventing LLMs from providing &quot;plausible but incorrect information&quot; by only allowing answers based on evidence.

GenU provides a RAG Chat use case.
Two types of information sources are available for RAG Chat: [Amazon Kendra](docs/en/DEPLOY_OPTION.md) and [Knowledge Base](docs/en/DEPLOY_OPTION.md#enabling-rag-chat-knowledge-base-use-case).
When using Amazon Kendra, you can [use manually created S3 Buckets or Kendra Indexes as they are](docs/en/DEPLOY_OPTION.md#using-an-existing-amazon-kendra-index).
When using Knowledge Base, advanced RAG features such as [Advanced Parsing](docs/en/DEPLOY_OPTION.md#enabling-advanced-parsing), [Chunk Strategy Selection](docs/en/DEPLOY_OPTION.md#changing-chunking-strategy), [Query Decomposition](docs/en/DEPLOY_OPTION.md#enabling-rag-chat-knowledge-base-use-case), and [Reranking](docs/en/DEPLOY_OPTION.md#enabling-rag-chat-knowledge-base-use-case) are available.
Knowledge Base also allows for [Metadata Filter Settings](docs/en/DEPLOY_OPTION.md#metadata-filter-configuration).
For example, you can meet requirements such as &quot;switching accessible data sources by organization&quot; or &quot;allowing users to set filters from the UI.&quot;

&lt;/details&gt;

&lt;details markdown=&quot;1&quot;&gt;
  &lt;summary&gt;&lt;strong&gt;&lt;ins&gt;I want to use custom AI agents or Bedrock Flows within my organization&lt;/ins&gt;&lt;/strong&gt;&lt;/summary&gt;

When you [enable agents](docs/en/DEPLOY_OPTION.md#enabling-agent-chat-use-case) in GenU, Web Search Agent and Code Interpreter Agent are created.
The Web Search Agent searches the web for information to answer user questions. For example, it can answer &quot;What is AWS GenU?&quot;
The Code Interpreter Agent can execute code to respond to user requests. For example, it can respond to requests like &quot;Draw a scatter plot with some dummy data.&quot;

While Web Search Agent and Code Interpreter Agent are basic agents, you might want to use more practical agents tailored to your business needs.
GenU provides a feature to [import agents](docs/en/DEPLOY_OPTION.md#adding-manually-created-agents) that you&#039;ve created manually or with other assets.

By using GenU as a platform for agent utilization, you can leverage GenU&#039;s [rich security options](docs/en/DEPLOY_OPTION.md#security-related-settings) and [SAML authentication](docs/en/DEPLOY_OPTION.md#saml-authentication) to spread practical agents within your organization.
Additionally, you can [hide unnecessary standard use cases](docs/en/DEPLOY_OPTION.md#hiding-specific-use-cases) or [display agents inline](docs/en/DEPLOY_OPTION.md#displaying-agents-inline) to use GenU as a more agent-focused platform.

Similarly, there is an [import feature](docs/en/DEPLOY_OPTION.md#enabling-flow-chat-use-case) for Bedrock Flows, so please make use of it.

&lt;/details&gt;

&lt;details markdown=&quot;1&quot;&gt;
  &lt;summary&gt;&lt;strong&gt;&lt;ins&gt;I want to create custom use cases&lt;/ins&gt;&lt;/strong&gt;&lt;/summary&gt;

GenU provides a feature called &quot;Use Case Builder&quot; that allows you to create custom use cases by describing prompt templates in natural language.
Custom use case screens are automatically generated just from prompt templates, so no code changes to GenU itself are required.
Created use cases can be shared with all users who can log into the application, not just for personal use.
Use Case Builder can be [disabled](docs/en/DEPLOY_OPTION.md#use-case-builder-configuration) if not needed.
For more details about Use Case Builder, please check &lt;a href=&quot;https://aws.amazon.com/jp/blogs/news/genu-use-cases-builder/&quot;&gt;this blog&lt;/a&gt;.
&lt;br/&gt;
&lt;br/&gt;
While Use Case Builder can create use cases where you input text into forms or attach files, depending on your requirements, a chat UI might be more suitable.
In such cases, please utilize the system prompt saving feature of the &quot;Chat&quot; use case.
By saving system prompts, you can create business-necessary &quot;bots&quot; with just one click.
For example, you can create &quot;a bot that thoroughly reviews source code when input&quot; or &quot;a bot that extracts email addresses from input content.&quot;
Additionally, chat conversation histories can be shared with logged-in users, and system prompts can be imported from shared conversation histories.
&lt;br/&gt;
&lt;br/&gt;
Since GenU is OSS, you can also customize it to add your own use cases.
In that case, please be careful about conflicts with GenU&#039;s main branch.

&lt;/details&gt;

## Deployment

&gt; [!IMPORTANT]
&gt; Please enable the `modelIds` (text generation), `imageGenerationModelIds` (image generation), and `videoGenerationModelIds` (video generation) in the `modelRegion` region listed in [`/packages/cdk/cdk.json`](/packages/cdk/cdk.json). ([Amazon Bedrock Model access screen](https://us-east-1.console.aws.amazon.com/bedrock/home?region=us-east-1#/modelaccess))

GenU deployment uses [AWS Cloud Development Kit](https://aws.amazon.com/jp/cdk/) (CDK). If you cannot prepare a CDK execution environment, refer to the following deployment methods:

- [Deployment method using AWS CloudShell (if preparing your own environment is difficult)](docs/en/DEPLOY_ON_CLOUDSHELL.md)
- [Workshop](https://catalog.workshops.aws/generative-ai-use-cases-jp)

First, run the following command. All commands should be executed at the repository root.

```bash
npm ci
```

If you&#039;ve never used CDK before, you need to [Bootstrap](https://docs.aws.amazon.com/ja_jp/cdk/v2/guide/bootstrapping.html) for the first time only. The following command is unnecessary if your environment is already bootstrapped.

```bash
npx -w packages/cdk cdk bootstrap
```

Next, deploy AWS resources with the following command. Please wait for the deployment to complete (it may take about 20 minutes).

```bash
# Normal deployment
npm run cdk:deploy

# Fast deployment (quickly deploy without pre-checking created resources)
npm run cdk:deploy:quick
```

## Architecture

![arch.drawio.png](./docs/assets/images/arch.drawio.png)

## Other Information

- [Deployment Options](docs/en/DEPLOY_OPTION.md)
- [Update Method](docs/en/UPDATE.md)
- [Local Development Environment Setup](docs/en/DEVELOPMENT.md)
- [Resource Deletion Method](docs/en/DESTROY.md)
- [How to Use as a Native App](docs/en/PWA.md)
- [Using Browser Extensions](docs/en/EXTENSION.md)

## Cost Estimation

We have published configuration and cost estimation examples for using GenU. (The service is pay-as-you-go, and actual costs will vary depending on your usage.)

- [Simple Version (without RAG) Estimation](https://aws.amazon.com/jp/cdp/ai-chatbot/)
- [With RAG (Amazon Kendra) Estimation](https://aws.amazon.com/jp/cdp/ai-chatapp/)
- [With RAG (Knowledge Base) Estimation](https://aws.amazon.com/jp/cdp/genai-chat-app/)

## Customer Case Studies

| Customer                                                                                                                          | Quote                                                                                                                                                                                                                                                                                                                                                                                                                                                               |
| :-------------------------------------------------------------------------------------------------------------------------------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |
| &lt;a href=&quot;https://www.yasashiite.com/&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;./docs/assets/images/cases/yasashiite_logo.png&quot;&gt;&lt;/a&gt;              | **Yasashiite Co., Ltd.** &lt;br/&gt; _Thanks to GenU, we were able to provide added value to users and improve employee work efficiency. We continue to evolve from &quot;smooth operation&quot; to &quot;exciting work&quot; as employees&#039; &quot;previous work&quot; transforms into enjoyable work!_ &lt;br/&gt; ・[See case details](./docs/assets/images/cases/yasashiite_case.png) &lt;br/&gt; ・[See case page](https://aws.amazon.com/jp/solutions/case-studies/yasashii-te/)                                |
| &lt;a href=&quot;https://www.takihyo.co.jp/&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;./docs/assets/images/cases/TAKIHYO_logo.png&quot;&gt;&lt;/a&gt;                  | **TAKIHYO Co., Ltd.** &lt;br/&gt; _Achieved internal business efficiency and reduced over 450 hours of work by utilizing generative AI. Applied Amazon Bedrock to clothing design, etc., and promoted digital talent development._ &lt;br/&gt; ・[See case page](https://aws.amazon.com/jp/solutions/case-studies/takihyo/)                                                                                                                                                     |
| &lt;a href=&quot;https://salsonido.com/&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;./docs/assets/images/cases/salsonido_logo.png&quot;&gt;&lt;/a&gt;                    | **Salsonido Inc.** &lt;br/&gt; _By utilizing GenU, which is provided as a solution, we were able to quickly start improving business processes with generative AI._ &lt;br/&gt; ・[See case details](./docs/assets/images/cases/salsonido_case.png) &lt;br/&gt; ・[Applied service](https://kirei.ai/)                                                                                                                                                                                |
| &lt;a href=&quot;https://www.tamura-ss.co.jp/jp/index.html&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;./docs/assets/images/cases/tamura-ss_logo.png&quot;&gt;&lt;/a&gt; | **TAMURA CORPORATION** &lt;br/&gt; _The application samples that AWS publishes on Github have a wealth of immediately testable functions, and by using them as they are, we were able to easily select functions that suited us and shorten the development time of the final system._&lt;br/&gt; ・[See case details](./docs/assets/images/cases/tamura-ss_case.png)&lt;br/&gt;                                                                                                      |
| &lt;a href=&quot;https://jdsc.ai/&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;./docs/assets/images/cases/jdsc_logo.png&quot;&gt;&lt;/a&gt;                               | **JDSC Inc.** &lt;br/&gt; _Amazon Bedrock allows us to securely use LLMs with our data. Also, we can switch to the optimal model depending on the purpose, allowing us to improve speed and accuracy while keeping costs down._ &lt;br/&gt; ・[See case details](./docs/assets/images/cases/jdsc_case.png)                                                                                                                                                                      |
| &lt;a href=&quot;https://www.iret.co.jp/&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;./docs/assets/images/cases/iret_logo.png&quot;&gt;&lt;/a&gt;                        | **iret, Inc.** &lt;br/&gt; _To accumulate and systematize internal knowledge for BANDAI NAMCO Amusement Inc.&#039;s generative AI utilization, we developed a use case site using Generative AI Use Cases JP provided by AWS. iret, Inc. supported the design, construction, and development of this project._ &lt;br/&gt; ・[BANDAI NAMCO Amusement Inc.&#039;s cloud utilization case study](https://cloudpack.jp/casestudy/302.html?_gl=1*17hkazh*_gcl_au*ODA5MDk3NzI0LjE3MTM0MTQ2MDU) |
| &lt;a href=&quot;https://idealog.co.jp&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;./docs/assets/images/cases/idealog_logo.jpg&quot;&gt;&lt;/a&gt;                       | **IDEALOG Inc.** &lt;br/&gt; _I feel that we can achieve even greater work efficiency than with conventional generative AI tools. Using Amazon Bedrock, which doesn&#039;t use input/output data for model training, gives us peace of mind regarding security._ &lt;br/&gt; ・[See case details](./docs/assets/images/cases/idealog_case.png) &lt;br/&gt; ・[Applied service](https://kaijosearch.com/)                                                                                   |
| &lt;a href=&quot;https://estyle.co.jp/&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;./docs/assets/images/cases/estyle_logo.png&quot;&gt;&lt;/a&gt;                        | **eStyle Inc.** &lt;br/&gt; _By utilizing GenU, we were able to build a generative AI environment in a short period and promote knowledge sharing within the company._ &lt;br/&gt; ・[See case details](./docs/assets/images/cases/estyle_case.png)                                                                                                                                                                                                                             |
| &lt;a href=&quot;https://meidensha.co.jp/&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;./docs/assets/images/cases/meidensha_logo.svg&quot;&gt;&lt;/a&gt;                  | **Meidensha Corporation** &lt;br/&gt; _By using AWS services such as Amazon Bedrock and Amazon Kendra, we were able to quickly and securely build a generative AI usage environment. It contributes to employee work efficiency through automatic generation of meeting minutes and searching internal information._ &lt;br/&gt; ・[See case details](./docs/assets/images/cases/meidensha_case.png)                                                                            |
| &lt;a href=&quot;https://www.st-grp.co.jp/&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;./docs/assets/images/cases/st-grp_logo.jpg&quot;&gt;&lt;/a&gt;                    | **Sankyo Tateyama, Inc.** &lt;br/&gt; _Information buried within the company became quickly searchable with Amazon Kendra. By referring to GenU, we were able to promptly provide the functions we needed, such as meeting minutes generation._ &lt;br/&gt; ・[See case details](./docs/assets/images/cases/st-grp_case.png)                                                                                                                                                    |
| &lt;a href=&quot;https://www.oisixradaichi.co.jp/&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;./docs/assets/images/cases/oisixradaichi_logo.png&quot;&gt;&lt;/a&gt;      | **Oisix ra daichi Inc.** &lt;br/&gt; _Through the use case development project using GenU, we were able to grasp the necessary resources, project structure, external support, and talent development, which helped us clarify our image for the internal deployment of generative AI._ &lt;br/&gt; ・[See case page](https://aws.amazon.com/jp/solutions/case-studies/oisix/)                                                                                                  |
| &lt;a href=&quot;https://www.san-a.co.jp/&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;./docs/assets/images/cases/san-a_logo.png&quot;&gt;&lt;/a&gt;                      | **SAN-A CO., LTD.** &lt;br/&gt; _By utilizing Amazon Bedrock, our engineers&#039; productivity has dramatically improved, accelerating the migration of our comp

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[t3-oss/create-t3-app]]></title>
            <link>https://github.com/t3-oss/create-t3-app</link>
            <guid>https://github.com/t3-oss/create-t3-app</guid>
            <pubDate>Sun, 06 Apr 2025 00:04:55 GMT</pubDate>
            <description><![CDATA[The best way to start a full-stack, typesafe Next.js app]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/t3-oss/create-t3-app">t3-oss/create-t3-app</a></h1>
            <p>The best way to start a full-stack, typesafe Next.js app</p>
            <p>Language: TypeScript</p>
            <p>Stars: 26,777</p>
            <p>Forks: 1,277</p>
            <p>Stars today: 20 stars today</p>
            <h2>README</h2><pre>./cli/README.md</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[softprops/action-gh-release]]></title>
            <link>https://github.com/softprops/action-gh-release</link>
            <guid>https://github.com/softprops/action-gh-release</guid>
            <pubDate>Sun, 06 Apr 2025 00:04:54 GMT</pubDate>
            <description><![CDATA[📦  GitHub Action for creating GitHub Releases]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/softprops/action-gh-release">softprops/action-gh-release</a></h1>
            <p>📦  GitHub Action for creating GitHub Releases</p>
            <p>Language: TypeScript</p>
            <p>Stars: 4,629</p>
            <p>Forks: 505</p>
            <p>Stars today: 7 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
  📦 :octocat:
&lt;/div&gt;
&lt;h1 align=&quot;center&quot;&gt;
  action gh-release
&lt;/h1&gt;

&lt;p align=&quot;center&quot;&gt;
   A GitHub Action for creating GitHub Releases on Linux, Windows, and macOS virtual environments
&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
  &lt;img src=&quot;demo.png&quot;/&gt;
&lt;/div&gt;

&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/softprops/action-gh-release/actions&quot;&gt;
		&lt;img src=&quot;https://github.com/softprops/action-gh-release/workflows/Main/badge.svg&quot;/&gt;
	&lt;/a&gt;
&lt;/div&gt;

&lt;br /&gt;

- [🤸 Usage](#-usage)
  - [🚥 Limit releases to pushes to tags](#-limit-releases-to-pushes-to-tags)
  - [⬆️ Uploading release assets](#️-uploading-release-assets)
  - [📝 External release notes](#-external-release-notes)
  - [💅 Customizing](#-customizing)
    - [inputs](#inputs)
    - [outputs](#outputs)
    - [environment variables](#environment-variables)
  - [Permissions](#permissions)

## 🤸 Usage

### 🚥 Limit releases to pushes to tags

Typically usage of this action involves adding a step to a build that
is gated pushes to git tags. You may find `step.if` field helpful in accomplishing this
as it maximizes the reuse value of your workflow for non-tag pushes.

Below is a simple example of `step.if` tag gating

```yaml
name: Main

on: push

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, &#039;refs/tags/&#039;)
```

You can also use push config tag filter

```yaml
name: Main

on:
  push:
    tags:
      - &quot;v*.*.*&quot;

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Release
        uses: softprops/action-gh-release@v2
```

### ⬆️ Uploading release assets

You can configure a number of options for your
GitHub release and all are optional.

A common case for GitHub releases is to upload your binary after its been validated and packaged.
Use the `with.files` input to declare a newline-delimited list of glob expressions matching the files
you wish to upload to GitHub releases. If you&#039;d like you can just list the files by name directly.
If a tag already has a GitHub release, the existing release will be updated with the release assets.

Below is an example of uploading a single asset named `Release.txt`

```yaml
name: Main

on: push

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build
        run: echo ${{ github.sha }} &gt; Release.txt
      - name: Test
        run: cat Release.txt
      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, &#039;refs/tags/&#039;)
        with:
          files: Release.txt
```

Below is an example of uploading more than one asset with a GitHub release

```yaml
name: Main

on: push

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build
        run: echo ${{ github.sha }} &gt; Release.txt
      - name: Test
        run: cat Release.txt
      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, &#039;refs/tags/&#039;)
        with:
          files: |
            Release.txt
            LICENSE
```

&gt; **⚠️ Note:** Notice the `|` in the yaml syntax above ☝️. That lets you effectively declare a multi-line yaml string. You can learn more about multi-line yaml syntax [here](https://yaml-multiline.info)

&gt; **⚠️ Note for Windows:** Paths must use `/` as a separator, not `\`, as `\` is used to escape characters with special meaning in the pattern; for example, instead of specifying `D:\Foo.txt`, you must specify `D:/Foo.txt`. If you&#039;re using PowerShell, you can do this with `$Path = $Path -replace &#039;\\&#039;,&#039;/&#039;`

### 📝 External release notes

Many systems exist that can help generate release notes for you. This action supports
loading release notes from a path in your repository&#039;s build to allow for the flexibility
of using any changelog generator for your releases, including a human 👩‍💻

```yaml
name: Main

on: push

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Generate Changelog
        run: echo &quot;# Good things have arrived&quot; &gt; ${{ github.workspace }}-CHANGELOG.txt
      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, &#039;refs/tags/&#039;)
        with:
          body_path: ${{ github.workspace }}-CHANGELOG.txt
          repository: my_gh_org/my_gh_repo
          # note you&#039;ll typically need to create a personal access token
          # with permissions to create releases in the other repo
          token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
```

### 💅 Customizing

#### inputs

The following are optional as `step.with` keys

| Name                       | Type    | Description                                                                                                                                                                                                                                                                                                                                                                                                                                     |
| -------------------------- | ------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| `body`                     | String  | Text communicating notable changes in this release                                                                                                                                                                                                                                                                                                                                                                                              |
| `body_path`                | String  | Path to load text communicating notable changes in this release                                                                                                                                                                                                                                                                                                                                                                                 |
| `draft`                    | Boolean | Indicator of whether or not this release is a draft                                                                                                                                                                                                                                                                                                                                                                                             |
| `prerelease`               | Boolean | Indicator of whether or not is a prerelease                                                                                                                                                                                                                                                                                                                                                                                                     |
| `preserve_order`           | Boolean | Indicator of whether order of files should be preserved when uploading assets                                                                                                                                                                                                                                                                                                                                                                   |
| `files`                    | String  | Newline-delimited globs of paths to assets to upload for release                                                                                                                                                                                                                                                                                                                                                                                |
| `name`                     | String  | Name of the release. defaults to tag name                                                                                                                                                                                                                                                                                                                                                                                                       |
| `tag_name`                 | String  | Name of a tag. defaults to `github.ref_name`                                                                                                                                                                                                                                                                                                                                                                                                         |
| `fail_on_unmatched_files`  | Boolean | Indicator of whether to fail if any of the `files` globs match nothing                                                                                                                                                                                                                                                                                                                                                                          |
| `repository`               | String  | Name of a target repository in `&lt;owner&gt;/&lt;repo&gt;` format. Defaults to GITHUB_REPOSITORY env variable                                                                                                                                                                                                                                                                                                                                              |
| `target_commitish`         | String  | Commitish value that determines where the Git tag is created from. Can be any branch or commit SHA. Defaults to repository default branch.                                                                                                                                                                                                                                                                                                      |
| `token`                    | String  | Secret GitHub Personal Access Token. Defaults to `${{ github.token }}`                                                                                                                                                                                                                                                                                                                                                                          |
| `discussion_category_name` | String  | If specified, a discussion of the specified category is created and linked to the release. The value must be a category that already exists in the repository. For more information, see [&quot;Managing categories for discussions in your repository.&quot;](https://docs.github.com/en/discussions/managing-discussions-for-your-community/managing-categories-for-discussions-in-your-repository)                                                     |
| `generate_release_notes`   | Boolean | Whether to automatically generate the name and body for this release. If name is specified, the specified name will be used; otherwise, a name will be automatically generated. If body is specified, the body will be pre-pended to the automatically generated notes. See the [GitHub docs for this feature](https://docs.github.com/en/repositories/releasing-projects-on-github/automatically-generated-release-notes) for more information |
| `append_body`              | Boolean | Append to existing body instead of overwriting it                                                                                                                                                                                                                                                                                                                                                                                               |
| `make_latest`              | String  | Specifies whether this release should be set as the latest release for the repository. Drafts and prereleases cannot be set as latest. Can be `true`, `false`, or `legacy`. Uses GitHub api defaults if not provided                                                                                                                                                                                                                            |

💡 When providing a `body` and `body_path` at the same time, `body_path` will be
attempted first, then falling back on `body` if the path can not be read from.

💡 When the release info keys (such as `name`, `body`, `draft`, `prerelease`, etc.)
are not explicitly set and there is already an existing release for the tag, the
release will retain its original info.

#### outputs

The following outputs can be accessed via `${{ steps.&lt;step-id&gt;.outputs }}` from this action

| Name         | Type   | Description                                                                                                                                                                               |
| ------------ | ------ | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| `url`        | String | Github.com URL for the release                                                                                                                                                            |
| `id`         | String | Release ID                                                                                                                                                                                |
| `upload_url` | String | URL for uploading assets to the release                                                                                                                                                   |
| `assets`     | String | JSON array containing information about each uploaded asset, in the format given [here](https://docs.github.com/en/rest/releases/assets#get-a-release-asset) (minus the `uploader` field) |

As an example, you can use `${{ fromJSON(steps.&lt;step-id&gt;.outputs.assets)[0].browser_download_url }}` to get the download URL of the first asset.

#### environment variables

The following `step.env` keys are allowed as a fallback but deprecated in favor of using inputs.

| Name                | Description                                                                                |
| ------------------- | ------------------------------------------------------------------------------------------ |
| `GITHUB_TOKEN`      | GITHUB_TOKEN as provided by `secrets`                                                      |
| `GITHUB_REPOSITORY` | Name of a target repository in `&lt;owner&gt;/&lt;repo&gt;` format. defaults to the current repository |

&gt; **⚠️ Note:** This action was previously implemented as a Docker container, limiting its use to GitHub Actions Linux virtual environments only. With recent releases, we now support cross platform usage. You&#039;ll need to remove the `docker://` prefix in these versions

### Permissions

This Action requires the following permissions on the GitHub integration token:

```yaml
permissions:
  contents: write
```

When used with `discussion_category_name`, additional permission is needed:

```yaml
permissions:
  contents: write
  discussions: write
```

[GitHub token permissions](https://docs.github.com/en/actions/security-guides/automatic-token-authentication#permissions-for-the-github_token) can be set for an individual job, workflow, or for Actions as a whole.

Note that if you intend to run workflows on the release event (`on: { release: { types: [published] } }`), you need to use
a personal access token for this action, as the [default `secrets.GITHUB_TOKEN` does not trigger another workflow](https://github.com/actions/create-release/issues/71).

Doug Tangren (softprops) 2019
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[bitwarden/clients]]></title>
            <link>https://github.com/bitwarden/clients</link>
            <guid>https://github.com/bitwarden/clients</guid>
            <pubDate>Sun, 06 Apr 2025 00:04:53 GMT</pubDate>
            <description><![CDATA[Bitwarden client apps (web, browser extension, desktop, and cli).]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/bitwarden/clients">bitwarden/clients</a></h1>
            <p>Bitwarden client apps (web, browser extension, desktop, and cli).</p>
            <p>Language: TypeScript</p>
            <p>Stars: 9,989</p>
            <p>Forks: 1,350</p>
            <p>Stars today: 10 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;https://raw.githubusercontent.com/bitwarden/brand/main/screenshots/apps-combo-logo.png&quot; alt=&quot;Bitwarden&quot; /&gt;
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/bitwarden/clients/actions/workflows/build-browser.yml?query=branch:main&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://github.com/bitwarden/clients/actions/workflows/build-browser.yml/badge.svg?branch=main&quot; alt=&quot;GitHub Workflow browser build on main&quot; /&gt;&lt;/a&gt;
  &lt;a href=&quot;https://github.com/bitwarden/clients/actions/workflows/build-cli.yml?query=branch:main&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://github.com/bitwarden/clients/actions/workflows/build-cli.yml/badge.svg?branch=main&quot; alt=&quot;GitHub Workflow CLI build on main&quot; /&gt;&lt;/a&gt;
  &lt;a href=&quot;https://github.com/bitwarden/clients/actions/workflows/build-desktop.yml?query=branch:main&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://github.com/bitwarden/clients/actions/workflows/build-desktop.yml/badge.svg?branch=main&quot; alt=&quot;GitHub Workflow desktop build on main&quot; /&gt;&lt;/a&gt;
  &lt;a href=&quot;https://github.com/bitwarden/clients/actions/workflows/build-web.yml?query=branch:main&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://github.com/bitwarden/clients/actions/workflows/build-web.yml/badge.svg?branch=main&quot; alt=&quot;GitHub Workflow web build on main&quot; /&gt;&lt;/a&gt;
  &lt;a href=&quot;https://gitter.im/bitwarden/Lobby&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://badges.gitter.im/bitwarden/Lobby.svg&quot; alt=&quot;gitter chat&quot; /&gt;&lt;/a&gt;
&lt;/p&gt;

---

# Bitwarden Client Applications

This repository houses all Bitwarden client applications except the mobile applications ([iOS](https://github.com/bitwarden/ios) | [android](https://github.com/bitwarden/android)).

Please refer to the [Clients section](https://contributing.bitwarden.com/getting-started/clients/) of the [Contributing Documentation](https://contributing.bitwarden.com/) for build instructions, recommended tooling, code style tips, and lots of other great information to get you started.

## Related projects:

- [bitwarden/server](https://github.com/bitwarden/server): The core infrastructure backend (API, database, Docker, etc).
- [bitwarden/ios](https://github.com/bitwarden/ios): Bitwarden iOS Password Manager &amp; Authenticator apps.
- [bitwarden/android](https://github.com/bitwarden/android): Bitwarden Android Password Manager &amp; Authenticator apps.
- [bitwarden/directory-connector](https://github.com/bitwarden/directory-connector): A tool for syncing a directory (AD, LDAP, Azure, G Suite, Okta) to an organization.

# We&#039;re Hiring!

Interested in contributing in a big way? Consider joining our team! We&#039;re hiring for many positions. Please take a look at our [Careers page](https://bitwarden.com/careers/) to see what opportunities are [currently open](https://bitwarden.com/careers/#open-positions) as well as what it&#039;s like to work at Bitwarden.

# Contribute

Code contributions are welcome! Please commit any pull requests against the `main` branch. Learn more about how to contribute by reading the [Contributing Guidelines](https://contributing.bitwarden.com/contributing/). Check out the [Contributing Documentation](https://contributing.bitwarden.com/) for how to get started with your first contribution.

Security audits and feedback are welcome. Please open an issue or email us privately if the report is sensitive in nature. You can read our security policy in the [`SECURITY.md`](SECURITY.md) file.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[open-metadata/OpenMetadata]]></title>
            <link>https://github.com/open-metadata/OpenMetadata</link>
            <guid>https://github.com/open-metadata/OpenMetadata</guid>
            <pubDate>Sun, 06 Apr 2025 00:04:52 GMT</pubDate>
            <description><![CDATA[OpenMetadata is a unified metadata platform for data discovery, data observability, and data governance powered by a central metadata repository, in-depth column level lineage, and seamless team collaboration.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/open-metadata/OpenMetadata">open-metadata/OpenMetadata</a></h1>
            <p>OpenMetadata is a unified metadata platform for data discovery, data observability, and data governance powered by a central metadata repository, in-depth column level lineage, and seamless team collaboration.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 6,397</p>
            <p>Forks: 1,187</p>
            <p>Stars today: 6 stars today</p>
            <h2>README</h2><pre>&lt;br /&gt;&lt;br /&gt;
&lt;p align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://open-metadata.org&quot;&gt;
        &lt;img alt=&quot;Logo&quot; src=&quot;https://github.com/open-metadata/OpenMetadata/assets/40225091/e794ced8-7220-4393-8efc-3faf93bfb503&quot; width=&quot;49%&quot;&gt;
    &lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;&lt;b&gt;Empower your Data Journey with OpenMetadata&lt;/b&gt;&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
    
![Commit Activity](https://img.shields.io/github/commit-activity/m/open-metadata/OpenMetadata?style=for-the-badge)
[![Release](https://img.shields.io/github/release/open-metadata/OpenMetadata/all.svg?style=for-the-badge)](https://github.com/open-metadata/OpenMetadata/releases)

&lt;/div&gt;

## What is OpenMetadata?
[OpenMetadata](https://open-metadata.org/)  is a unified metadata platform for data discovery, data observability, and data governance powered by a central metadata repository, in-depth column level lineage, and seamless team collaboration. It is one of the fastest-growing open-source projects with a vibrant community and adoption by a diverse set of companies in a variety of industry verticals. Based on Open Metadata Standards and APIs, supporting connectors to a wide range of data services, OpenMetadata enables end-to-end metadata management, giving you the freedom to unlock the value of your data assets.
&lt;div align=&quot;center&quot;&gt;
    &lt;img src=&quot;https://github.com/open-metadata/OpenMetadata/assets/40225091/ebfb4ec5-f0a2-4d58-8ce5-a082b5cf0f76&quot; width=800&gt;
&lt;/div&gt;

&lt;br /&gt;
Contents:

- [Features](#key-features-of-openmetadata)
- [Try our Sandbox](#try-our-sandbox)
- [Install &amp; Run](#install-and-run-openmetadata)
- [Roadmap](https://docs.open-metadata.org/latest/roadmap)
- [Documentation and Support](#documentation-and-support)
- [Contributors](#contributors)

OpenMetadata Consists of Four Main Components:
- **Metadata Schemas**: These are the core definitions and vocabulary for metadata based on common abstractions and types. They also allow for custom extensions and properties to suit different use cases and domains.
- **Metadata Store**: This is the central repository for storing and managing the metadata graph, which connects data assets, users, and tool-generated metadata in a unified way.
- **Metadata APIs**: These are the interfaces for producing and consuming metadata, built on top of the metadata schemas. They enable seamless integration of user interfaces and tools, systems, and services with the metadata store.
- **Ingestion Framework**: This is a pluggable framework for ingesting metadata from various sources and tools to the metadata store. It supports about 75+ connectors for data warehouses, databases, dashboard services, messaging services, pipeline services, and more.

## Key Features of OpenMetadata
**Data Discovery**: Find and explore all your data assets in a single place using various strategies, such as keyword search, data associations, and advanced queries. You can search across tables, topics, dashboards, pipelines, and services.

![12](https://github.com/open-metadata/OpenMetadata/assets/40225091/0dbd2746-c93d-4a47-8d3e-ceb3ae01436f)
&lt;br&gt;&lt;br&gt;&lt;br&gt;
**Data Collaboration**: Communicate, converse, and cooperate with other users and teams on data assets. You can get event notifications, send alerts, add announcements, create tasks, and use conversation threads.

![11](https://github.com/open-metadata/OpenMetadata/assets/40225091/7df29e12-8a29-44b7-9466-42474823783f)
&lt;br&gt;&lt;br&gt;&lt;br&gt;
**Data Quality and Profiler**: Measure and monitor the quality with **no-code** to build trust in your data. You can define and run data quality tests, group them into test suites, and view the results in an interactive dashboard. With powerful collaboration, make data quality a shared responsibility in your organization.

![8](https://github.com/open-metadata/OpenMetadata/assets/40225091/6b330827-cc2d-4d06-abf0-a4d42ce532ba)
&lt;br&gt;&lt;br&gt;&lt;br&gt;
**Data Governance**: Enforce data policies and standards across your organization. You can define data domains and data products, assign owners and stakeholders, and classify data assets using tags and terms. Use powerful automation features to auto-classify your data.

![10](https://github.com/open-metadata/OpenMetadata/assets/40225091/f7384a71-6b58-44ad-983f-e302718ee3f1)
&lt;br&gt;&lt;br&gt;&lt;br&gt;
**Data Insights and KPIs**: Use reports and platform analytics to understand how your organization&#039;s data is doing. Data Insights provides a single-pane view of all the key metrics to reflect the state of your data best. Define the Key Performance Indicators (KPIs) and set goals within OpenMetadata to work towards better documentation, ownership, and tiering. Alerts can be set against the KPIs to be received on a specified schedule.

![9](https://github.com/open-metadata/OpenMetadata/assets/40225091/61fc2f65-2436-4fc9-9434-c27ee9b25183)
&lt;br&gt;&lt;br&gt;&lt;br&gt;
**Data Lineage**: Track and visualize the origin and transformation of your data assets end-to-end. You can view column-level lineage, filter queries, and edit lineage manually using a no-code editor.
  
**Data Documentation**: Document your data assets and metadata entities using rich text, images, and links. You can also add comments and annotations and generate data dictionaries and data catalogs.
  
**Data Observability**: Monitor the health and performance of your data assets and pipelines. You can view metrics such as data freshness, data volume, data quality, and data latency. You can also set up alerts and notifications for any anomalies or failures.
  
**Data Security**: Secure your data and metadata using various authentication and authorization mechanisms. You can integrate with different identity providers for single sign-on and define roles and policies for access control.
  
**Webhooks**: Integrate with external applications and services using webhooks. You can register URLs to receive metadata event notifications and integrate with Slack, Microsoft Teams, and Google Chat.
  
**Connectors**: Ingest metadata from various sources and tools using connectors. OpenMetadata supports about 75+ connectors for data warehouses, databases, dashboard services, messaging services, pipeline services, and more.

## Try our Sandbox

Take a look and play with sample data at [http://sandbox.open-metadata.org](http://sandbox.open-metadata.org)

## Install and Run OpenMetadata
Get up and running in a few minutes. See the OpenMetadata documentation for [installation instructions](https://docs.open-metadata.org/quick-start/local-docker-deployment).

## Documentation and Support

We&#039;re here to help and make OpenMetadata even better! Check out [OpenMetadata documentation](https://docs.open-metadata.org/) for a complete description of OpenMetadata&#039;s features. Join our [Slack Community](https://slack.open-metadata.org/) to get in touch with us if you want to chat, need help, or discuss new feature requirements.


## Contributors

We ❤️ all contributions, big and small! Check out our [CONTRIBUTING](./CONTRIBUTING.md) guide to get started, and let us know how we can help.

Don&#039;t want to miss anything? Give the project a ⭐ 🚀 

A HUGE THANK YOU to all our supporters!

&lt;a href=&quot;https://github.com/open-metadata/OpenMetadata/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=open-metadata/OpenMetadata&amp;max=4000&amp;columns=30&quot; /&gt;
&lt;/a&gt;

## Stargazers

[![Stargazers of @open-metadata/OpenMetadata repo](http://reporoster.com/stars/open-metadata/OpenMetadata)](https://github.com/open-metadata/OpenMetadata/stargazers)

## License
OpenMetadata is released under [Apache License, Version 2.0](http://www.apache.org/licenses/LICENSE-2.0)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[MetaMask/metamask-extension]]></title>
            <link>https://github.com/MetaMask/metamask-extension</link>
            <guid>https://github.com/MetaMask/metamask-extension</guid>
            <pubDate>Sun, 06 Apr 2025 00:04:51 GMT</pubDate>
            <description><![CDATA[🌐 🔌 The MetaMask browser extension enables browsing Ethereum blockchain enabled websites]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/MetaMask/metamask-extension">MetaMask/metamask-extension</a></h1>
            <p>🌐 🔌 The MetaMask browser extension enables browsing Ethereum blockchain enabled websites</p>
            <p>Language: TypeScript</p>
            <p>Stars: 12,471</p>
            <p>Forks: 5,133</p>
            <p>Stars today: 10 stars today</p>
            <h2>README</h2><pre># MetaMask Browser Extension

You can find the latest version of MetaMask on [our official website](https://metamask.io/). For help using MetaMask, visit our [User Support Site](https://support.metamask.io/).

For [general questions](https://community.metamask.io/c/learn/26), [feature requests](https://community.metamask.io/c/feature-requests-ideas/13), or [developer questions](https://community.metamask.io/c/developer-questions/11), visit our [Community Forum](https://community.metamask.io/).

MetaMask supports Firefox, Google Chrome, and Chromium-based browsers. We recommend using the latest available browser version.

For up to the minute news, follow us on [X](https://x.com/MetaMask).

To learn how to develop MetaMask-compatible applications, visit our [Developer Docs](https://docs.metamask.io/).

To learn how to contribute to the MetaMask codebase, visit our [Contributor Docs](https://github.com/MetaMask/contributor-docs).

To learn how to contribute to the MetaMask Extension project itself, visit our [Extension Docs](https://github.com/MetaMask/metamask-extension/tree/main/docs).

## GitHub Codespaces quickstart

As an alternative to building on your local machine, there is a new option to get a development environment up and running in less than 5 minutes by using GitHub Codespaces. Please note that there is a [Limited Free Monthly Quota](https://docs.github.com/en/billing/managing-billing-for-github-codespaces/about-billing-for-github-codespaces), and after that GitHub will start charging you.

_Note: You are billed for both time spent running, and for storage used_

[![Open in GitHub Codespaces](https://github.com/codespaces/badge.svg)](https://codespaces.new/MetaMask/metamask-extension?quickstart=1)

1. Start by clicking the button above
2. A new browser tab will open with a remote version of Visual Studio Code (this will take a few minutes to load)
3. A &quot;Simple Browser&quot; will open inside the browser with noVNC -- click Connect
   - Optional steps:
     - Click the button at the upper-right of the Simple Browser tab to open the noVNC window in its own tab
     - Open the noVNC sidebar on the left, click the gear icon, change the Scaling Mode to Remote Resizing
4. Wait about 20 extra seconds on the first launch, for the scripts to finish
5. Right-click on the noVNC desktop to launch Chrome or Firefox with MetaMask pre-installed
6. Change some code, then run `yarn start` to build in dev mode
7. After a minute or two, it will finish building, and you can see your changes in the noVNC desktop

### Tips to keep your Codespaces usage lower

- You are billed for both time spent running, and for storage used
- Codespaces pause after 30 minutes of inactivity, and auto-delete after 30 days of inactivity
- You can manage your Codespaces here: https://github.com/codespaces
  - You may want to manually pause them before the 30 minute timeout
  - If you have several idle Codespaces hanging around for several days, you can quickly run out of storage quota. You should delete the ones you do not plan to use anymore, and probably keep only 1 or 2 in the long-term. It&#039;s also possible to re-use old Codespaces and switch the branch, instead of creating new ones and deleting the old ones.

### Codespaces on a fork

If you are not a MetaMask Internal Developer, or are otherwise developing on a fork, the default Infura key will be on the Free Plan and have very limited requests per second. If you want to use your own Infura key, follow the `.metamaskrc` and `INFURA_PROJECT_ID` instructions in the section [Building on your local machine](#building-on-your-local-machine).

## Building on your local machine

- Install [Node.js](https://nodejs.org) version 20
  - If you are using [nvm](https://github.com/nvm-sh/nvm#installing-and-updating) (recommended) running `nvm use` will automatically choose the right node version for you.
- Enable Corepack by executing the command `corepack enable` within the metamask-extension project. Corepack is a utility included with Node.js by default. It manages Yarn on a per-project basis, using the version specified by the `packageManager` property in the project&#039;s package.json file. Please note that modern releases of [Yarn](https://yarnpkg.com/getting-started/install) are not intended to be installed globally or via npm.
- Duplicate `.metamaskrc.dist` within the root and rename it to `.metamaskrc` by running `cp .metamaskrc{.dist,}`.

  - Replace the `INFURA_PROJECT_ID` value with your own personal [Infura API Key](https://docs.infura.io/networks/ethereum/how-to/secure-a-project/project-id).
    - If you don&#039;t have an Infura account, you can create one for free on the [Infura website](https://app.infura.io/register).
  - If debugging MetaMetrics, you&#039;ll need to add a value for `SEGMENT_WRITE_KEY` [Segment write key](https://segment.com/docs/connections/find-writekey/), see [Developing on MetaMask - Segment](./development/README.md#segment).
  - If debugging unhandled exceptions, you&#039;ll need to add a value for `SENTRY_DSN` [Sentry Dsn](https://docs.sentry.io/product/sentry-basics/dsn-explainer/), see [Developing on MetaMask - Sentry](./development/README.md#sentry).
  - Optionally, replace the `PASSWORD` value with your development wallet password to avoid entering it each time you open the app.
  - If developing with remote feature flags, and you want to override the flags in the build process, you can add a `.manifest-overrides.json` file to the root of the project and set `MANIFEST_OVERRIDES=.manifest-overrides.json` in `.metamaskrc` to the path of the file.
    This file is used to add flags to `manifest.json` build files for the extension. You can also modify the `_flags.remoteFeatureFlags` in the built version of `manifest.json` in the `dist/browser` folder to tweak the flags after the build process (these changes will get overwritten when you build again).
    An example of this remote feature flag overwrite could be:

  ```json
  {
    &quot;_flags&quot;: {
      &quot;remoteFeatureFlags&quot;: { &quot;testBooleanFlag&quot;: false }
    }
  }
  ```

- Run `yarn install` to install the dependencies.
- Build the project to the `./dist/` folder with `yarn dist` (for Chromium-based browsers) or `yarn dist:mv2` (for Firefox)

  - Optionally, to create a development build you can instead run `yarn start` (for Chromium-based browsers) or `yarn start:mv2` (for Firefox)
  - Uncompressed builds can be found in `/dist`, compressed builds can be found in `/builds` once they&#039;re built.
  - See the [build system readme](./development/build/README.md) for build system usage information.

- Follow these instructions to verify that your local build runs correctly:
  - [How to add custom build to Chrome](./docs/add-to-chrome.md)
  - [How to add custom build to Firefox](./docs/add-to-firefox.md)

## Git Hooks

To get quick feedback from our shared code quality fitness functions before committing the code, you can install our git hooks with Husky.

`$ yarn githooks:install`

You can read more about them in our [testing documentation](./docs/testing.md#fitness-functions-measuring-progress-in-code-quality-and-preventing-regressions-using-custom-git-hooks).

If you are using VS Code and are unable to make commits from the source control sidebar due to a &quot;command not found&quot; error, try these steps from the [Husky docs](https://typicode.github.io/husky/troubleshooting.html#command-not-found).

## Contributing

### Development builds

To start a development build (e.g. with logging and file watching) run `yarn start`.

#### Development build with wallet state

You can start a development build with a preloaded wallet state, by adding `TEST_SRP=&#039;&lt;insert SRP here&gt;&#039;` and `PASSWORD=&#039;&lt;insert wallet password here&gt;&#039;` to the `.metamaskrc` file. Then you have the following options:

1. Start the wallet with the default fixture flags, by running `yarn start:with-state`.
2. Check the list of available fixture flags, by running `yarn start:with-state --help`.
3. Start the wallet with custom fixture flags, by running `yarn start:with-state --FIXTURE_NAME=VALUE` for example `yarn start:with-state --withAccounts=100`. You can pass as many flags as you want. The rest of the fixtures will take the default values.

#### Development build with Webpack

You can also start a development build using the `yarn webpack` command, or `yarn webpack --watch`. This uses an alternative build system that is much faster, but not yet production ready. See the [Webpack README](./development/webpack/README.md) for more information.

#### React and Redux DevTools

To start the [React DevTools](https://github.com/facebook/react-devtools), run `yarn devtools:react` with a development build installed in a browser. This will open in a separate window; no browser extension is required.

To start the [Redux DevTools Extension](https://github.com/reduxjs/redux-devtools/tree/main/extension):

- Install the package `remotedev-server` globally (e.g. `yarn global add remotedev-server`)
- Install the Redux Devtools extension.
- Open the Redux DevTools extension and check the &quot;Use custom (local) server&quot; checkbox in the Remote DevTools Settings, using the default server configuration (host `localhost`, port `8000`, secure connection checkbox unchecked).

Then run the command `yarn devtools:redux` with a development build installed in a browser. This will enable you to use the Redux DevTools extension to inspect MetaMask.

To create a development build and run both of these tools simultaneously, run `yarn start:dev`.

#### Test Dapp

[This test site](https://metamask.github.io/test-dapp/) can be used to execute different user flows.

### Running Unit Tests and Linting

Run unit tests and the linter with `yarn test`. To run just unit tests, run `yarn test:unit`.

You can run the linter by itself with `yarn lint`, and you can automatically fix some lint problems with `yarn lint:fix`. You can also run these two commands just on your local changes to save time with `yarn lint:changed` and `yarn lint:changed:fix` respectively.

For Jest debugging guide using Node.js, see [docs/tests/jest.md](docs/tests/jest.md).

### Running E2E Tests

Our e2e test suite can be run on either Firefox or Chrome. Here&#039;s how to get started with e2e testing:

#### Preparing a Test Build

Before running e2e tests, ensure you&#039;ve run `yarn install` to download dependencies. Next, you&#039;ll need a test build. You have 3 options:

1. Use `yarn download-builds:test` to quickly download and unzip test builds for Chrome and Firefox into the `./dist/` folder. This method is fast and convenient for standard testing.
2. Create a custom test build: for testing against different build types, use `yarn build:test`. This command allows you to generate test builds for various types, including:
   - `yarn build:test` for main build
   - `yarn build:test:flask` for flask build
   - `yarn build:test:mv2` for mv2 build
   - `yarn build:test:mmi` for mmi build
3. Start a test build with live changes: `yarn start:test` is particularly useful for development. It starts a test build that automatically recompiles application code upon changes. This option is ideal for iterative testing and development. This command also allows you to generate test builds for various types, including:
   - `yarn start:test` for main build
   - `yarn start:test:flask` for flask build
   - `yarn start:test:mv2` for mv2 build

Note: The `yarn start:test` command (which initiates the testDev build type) has LavaMoat disabled for both the build system and the application, offering a streamlined testing experience during development. On the other hand, `yarn build:test` enables LavaMoat for enhanced security in both the build system and application, mirroring production environments more closely.

#### Running Tests

Once you have your test build ready, choose the browser for your e2e tests:

- For Firefox, run `yarn test:e2e:firefox`.
  - Note: If you are running Firefox as a snap package on Linux, ensure you enable the appropriate environment variable: `FIREFOX_SNAP=true yarn test:e2e:firefox`
- For Chrome, run `yarn test:e2e:chrome`.

These scripts support additional options for debugging. Use `--help`to see all available options.

#### Running a single e2e test

Single e2e tests can be run with `yarn test:e2e:single test/e2e/tests/TEST_NAME.spec.js` along with the options below.

```console
  --browser           Set the browser to be used; specify &#039;chrome&#039;, &#039;firefox&#039;, &#039;all&#039;
                      or leave unset to run on &#039;all&#039; by default.
                                                          [string] [default: &#039;all&#039;]
  --debug             Run tests in debug mode, logging each driver interaction
                                                         [boolean] [default: true]
  --retries           Set how many times the test should be retried upon failure.
                                                              [number] [default: 0]
  --leave-running     Leaves the browser running after a test fails, along with
                      anything else that the test used (ganache, the test dapp,
                      etc.)                              [boolean] [default: false]
  --update-snapshot   Update E2E test snapshots
                                             [alias: -u] [boolean] [default: false]
```

For example, to run the `account-details` tests using Chrome, with debug logging and with the browser set to remain open upon failure, you would use:
`yarn test:e2e:single test/e2e/tests/account-menu/account-details.spec.js --browser=chrome --leave-running`

#### Running e2e tests against specific feature flag

While developing new features, we often use feature flags. As we prepare to make these features generally available (GA), we remove the feature flags. Existing feature flags are listed in the `.metamaskrc.dist` file. To execute e2e tests with a particular feature flag enabled, it&#039;s necessary to first generate a test build with that feature flag activated. There are two ways to achieve this:

- To enable a feature flag in your local configuration, you should first ensure you have a `.metamaskrc` file copied from `.metamaskrc.dist`. Then, within your local `.metamaskrc` file, you can set the desired feature flag to true. Following this, a test build with the feature flag enabled can be created by executing `yarn build:test`.

- Alternatively, for enabling a feature flag directly during the test build creation, you can pass the parameter as true via the command line. For instance, activating the MULTICHAIN feature flag can be done by running `MULTICHAIN=1 yarn build:test` or `MULTICHAIN=1 yarn start:test` . This method allows for quick adjustments to feature flags without altering the `.metamaskrc` file.

Once you&#039;ve created a test build with the desired feature flag enabled, proceed to run your tests as usual. Your tests will now run against the version of the extension with the specific feature flag activated. For example:
`yarn test:e2e:single test/e2e/tests/account-menu/account-details.spec.js --browser=chrome`

This approach ensures that your e2e tests accurately reflect the user experience for the upcoming GA features.

#### Running specific builds types e2e test

Different build types have different e2e tests sets. In order to run them look in the `package.json` file. You will find:

```console
    &quot;test:e2e:chrome:snaps&quot;: &quot;SELENIUM_BROWSER=chrome node test/e2e/run-all.js --snaps&quot;,
    &quot;test:e2e:firefox&quot;: &quot;SELENIUM_BROWSER=firefox node test/e2e/run-all.js&quot;,
```

### Changing dependencies

Whenever you change dependencies (adding, removing, or updating, either in `package.json` or `yarn.lock`), there are various files that must be kept up-to-date.

- `yarn.lock`:
  - Run `yarn` again after your changes to ensure `yarn.lock` has been properly updated.
  - Run `yarn lint:lockfile:dedupe:fix` to remove duplicate dependencies from the lockfile.
- The `allow-scripts` configuration in `package.json`
  - Run `yarn allow-scripts auto` to update the `allow-scripts` configuration automatically. This config determines whether the package&#039;s install/postinstall scripts are allowed to run. Review each new package to determine whether the install script needs to run or not, testing if necessary.
  - Unfortunately, `yarn allow-scripts auto` will behave inconsistently on different platforms. macOS and Windows users may see extraneous changes relating to optional dependencies.
- The LavaMoat policy files
  - If you are a MetaMask team member and your PR is on a repository branch, you can use the bot command `@metamaskbot update-policies` to ask the MetaMask bot to automatically update the policies for you.
  - If your PR is from a fork, you can ask a MetaMask team member to help with updating the policy files.
  - Manual update instructions: The _tl;dr_ is to run `yarn lavamoat:auto` to update these files, but there can be devils in the details:
    - There are two sets of LavaMoat policy files:
      - The production LavaMoat policy files (`lavamoat/browserify/*/policy.json`), which are re-generated using `yarn lavamoat:webapp:auto`. Add `--help` for usage.
        - These should be regenerated whenever the production dependencies for the webapp change.
      - The build system LavaMoat policy file (`lavamoat/build-system/policy.json`), which is re-generated using `yarn lavamoat:build:auto`.
        - This should be regenerated whenever the dependencies used by the build system itself change.
    - Whenever you regenerate a policy file, review the changes to determine whether the access granted to each package seems appropriate.
    - Unfortunately, `yarn lavamoat:auto` will behave inconsistently on different platforms.
      macOS and Windows users may see extraneous changes relating to optional dependencies.
    - If you keep getting policy failures even after regenerating the policy files, try regenerating the policies after a clean install by doing:
      - `rm -rf node_modules/ &amp;&amp; yarn &amp;&amp; yarn lavamoat:auto`
    - Keep in mind that any kind of dynamic import or dynamic use of globals may elude LavaMoat&#039;s static analysis.
      Refer to the LavaMoat documentation or ask for help if you run into any issues.
- The Attributions file
  - If you are a MetaMask team member and your PR is on a repository branch, you can use the bot command `@metamaskbot update-attributions` to ask the MetaMask bot to automatically update the attributions file for you.
  - Manual update: run `yarn attributions:generate`.

## Architecture

- [Visual of the controller hierarchy and dependencies as of summer 2022.](https://gist.github.com/rekmarks/8dba6306695dcd44967cce4b6a94ae33)
- [Visual of the entire codebase.](https://mango-dune-07a8b7110.1.azurestaticapps.net/?repo=metamask%2Fmetamask-extension)

[![Architecture Diagram](./docs/architecture.png)][1]

## Other Docs

- [How to add a new translation to MetaMask](./docs/translating-guide.md)
- [Publishing Guide](./docs/publishing.md)
- [How to use the TREZOR emulator](./docs/trezor-emulator.md)
- [Developing on MetaMask](./development/README.md)
- [How to generate a visualization of this repository&#039;s development](./development/gource-viz.sh)
- [How to add new confirmations](./docs/confirmations.md)
- [Browser support guidelines](./docs/browser-support.md)

## Dapp Developer Resources

- [Extend MetaMask&#039;s features w/ MetaMask Snaps.](https://docs.metamask.io/snaps/)
- [Prompt your users to add and switch to a new network.](https://docs.metamask.io/wallet/how-to/add-network/)
- [Change the logo that appears when your dapp connects to MetaMask.](https://docs.metamask.io/wallet/how-to/display/icon/)

[1]: http://www.nomnoml.com/#view/%5B%3Cactor%3Euser%5D%0A%0A%5Bmetamask-ui%7C%0A%20%20%20%5Btools%7C%0A%20%20%20%20%20react%0A%20%20%20%20%20redux%0A%20%20%20%20%20thunk%0A%20%20%20%20%20ethUtils%0A%20%20%20%20%20jazzicon%0A%20%20%20%5D%0A%20%20%20%5Bcomponents%7C%0A%20%20%20%20%20app%0A%20%20%20%20%20account-detail%0A%20%20%20%20%20accounts%0A%

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[baptisteArno/typebot.io]]></title>
            <link>https://github.com/baptisteArno/typebot.io</link>
            <guid>https://github.com/baptisteArno/typebot.io</guid>
            <pubDate>Sun, 06 Apr 2025 00:04:50 GMT</pubDate>
            <description><![CDATA[💬 Typebot is a powerful chatbot builder that you can self-host.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/baptisteArno/typebot.io">baptisteArno/typebot.io</a></h1>
            <p>💬 Typebot is a powerful chatbot builder that you can self-host.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 8,423</p>
            <p>Forks: 2,424</p>
            <p>Stars today: 6 stars today</p>
            <h2>README</h2><pre>&lt;br /&gt;
&lt;p align=&quot;center&quot;&gt;
&lt;a href=&quot;https://typebot.io&quot; target=&quot;_blank&quot;&gt;
  &lt;img src=&quot;./.github/images/banner.png&quot; alt=&quot;Typebot banner&quot;&gt;
&lt;/a&gt;
&lt;/p&gt;
&lt;br /&gt;

&lt;p align=&quot;center&quot;&gt;
Typebot is an Fair Source chatbot builder. It allows you to create advanced chatbots visually, embed them anywhere on your web/mobile apps, and collect results in real-time
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;a href=&quot;https://github.com/baptistearno/typebot.io/stargazers&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/baptistearno/typebot.io&quot; alt=&quot;Github Stars&quot;&gt;&lt;/a&gt;
&lt;/a&gt;
&lt;a href=&quot;https://github.com/baptistearno/typebot.io/pulse&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/commit-activity/m/baptistearno/typebot.io&quot; alt=&quot;Commits per month&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://docs.typebot.io/self-hosting/guides/docker&quot;&gt;
&lt;img src=&quot;https://img.shields.io/docker/pulls/baptistearno/typebot-builder&quot;&gt;
&lt;/a&gt;
&lt;a href=&quot;https://github.com/baptistearno/typebot.io/blob/main/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-AGPLv3-purple&quot; alt=&quot;License&quot;&gt;
&lt;a href=&quot;https://status.typebot.io&quot;&gt;&lt;img height=&quot;20px&quot; src=&quot;https://betteruptime.com/status-badges/v1/monitor/a9kf.svg&quot; alt=&quot;Uptime&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/baptisteArno/typebot.io/issues/new?template=bug_report.md&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Report a bug-Github-%231F80C0&quot; alt=&quot;Report a bug&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://typebot.io/discord&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Join community-Discord-%23404EED&quot; alt=&quot;Ask a question&quot;&gt;&lt;/a&gt;

&lt;/p&gt;

&lt;h3 align=&quot;center&quot;&gt;
  &lt;b&gt;&lt;a href=&quot;https://app.typebot.io/register&quot;&gt;Try Typebot&lt;/a&gt;&lt;/b&gt;
  •
  &lt;b&gt;&lt;a href=&quot;https://docs.typebot.io/&quot;&gt;Docs&lt;/a&gt;&lt;/b&gt;

---

## Builder demo

https://user-images.githubusercontent.com/16015833/168876388-0310678d-080b-4eca-8633-e5cc4d7bd5d1.mp4

## Features

Typebot makes it easy to create advanced chatbots. It provides the building block that are adaptable to any business use case. I improve Typebot regularly with bug fixes, new features, and performance improvements regularly.

**Chat builder** with 34+ building blocks such as:

- 💬 Bubbles: Text, Image / GIF, video, audio, embed.
- 🔤 Inputs: Text, email, phone number, buttons, picture choice, date picker, payment (Stripe), file picker... inputs
- 🧠 Logic: Conditional branching, URL redirections, scripting (Javascript), A/B testing
- 🔌 Integrations: Webhook / HTTP requests, OpenAI, Google Sheets, Google Analytics, Meta Pixel, Zapier, Make.com, Chatwoot, More to come...

**Theme** your chatbot to match your brand identity:

- 🎨 Customize the fonts, background, colors, roundness, shadows, and more
- 💪 Advanced theming with custom CSS.
- 💾 Reusable theme templates

**Share** your typebot anywhere:

- 🔗 Custom domain
- 👨‍💻 Embed as a container, popup, or chat bubble easily with the native JS library.
- ⚡ Blazing fast embed lib. No iframe, no external dependencies, no performance impact.
- 💻 Executable with HTTP requests

Collect your **Results** and get insights:

- 📊 In-depth analytics with drop-off rates, completion rates, and more
- 📥 Export results to CSV

Built for **developers**:

- 🔓 No vendor-locking. Features built with flexibility in mind.
- 💻 Easy-to-use [APIs](https://docs.typebot.io/api-reference).

## Getting started with Typebot

The easiest way to get started with Typebot is with [the official managed service in the Cloud](https://app.typebot.io). You&#039;ll have high availability, backups, security, and maintenance all managed for you by me, [Baptiste, Typebot&#039;s founder](https://twitter.com/baptisteArno).

The cloud version can save a substantial amount of developer time and resources. For most sites this ends up being the best value option and the revenue goes to funding the maintenance and further development of Typebot.
So you’ll be supporting fair source software and getting a great service! 💙

## Support &amp; Community

You&#039;ll find a lot of resources to help you get started with Typebot in the [documentation](https://docs.typebot.io/).

- Have a question? Join the [Discord server](https://typebot.io/discord) and get instant help.
- Found a bug? [Create an issue](https://github.com/baptisteArno/typebot.io/issues/new)

## Self-hosting

Interested in self-hosting Typebot on your server? Take a look at the [self-hosting installation instructions](https://docs.typebot.io/self-hosting/get-started).

## How to Contribute

You are awesome, lets build great software together. Head over to the [Contribute docs](https://docs.typebot.io/contribute/overview) to get started. 💪

## Run the project locally

Follow the [Local installation](https://docs.typebot.io/contribute/guides/local-installation) section of in the Contributing docs.

### Top contributors

&lt;a href=&quot;https://github.com/baptistearno/typebot.io/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=baptistearno/typebot.io&quot; /&gt;
&lt;/a&gt;

Made with [contrib.rocks](https://contrib.rocks).

## License

Typebot&#039;s code is protected under a Functional Source License. You will find more information about the license and how to comply with it [here](https://docs.typebot.io/self-hosting#license-requirements).
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[stonith404/pingvin-share]]></title>
            <link>https://github.com/stonith404/pingvin-share</link>
            <guid>https://github.com/stonith404/pingvin-share</guid>
            <pubDate>Sun, 06 Apr 2025 00:04:49 GMT</pubDate>
            <description><![CDATA[A self-hosted file sharing platform that combines lightness and beauty, perfect for seamless and efficient file sharing.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/stonith404/pingvin-share">stonith404/pingvin-share</a></h1>
            <p>A self-hosted file sharing platform that combines lightness and beauty, perfect for seamless and efficient file sharing.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 4,041</p>
            <p>Forks: 282</p>
            <p>Stars today: 7 stars today</p>
            <h2>README</h2><pre># &lt;div align=&quot;center&quot;&gt;&lt;img  src=&quot;https://user-images.githubusercontent.com/58886915/166198400-c2134044-1198-4647-a8b6-da9c4a204c68.svg&quot; width=&quot;40&quot;/&gt; &lt;/br&gt;Pingvin Share&lt;/div&gt;

[![](https://dcbadge.limes.pink/api/server/wHRQ9nFRcK)](https://discord.gg/wHRQ9nFRcK) [![](https://img.shields.io/badge/Crowdin-2E3340.svg?style=for-the-badge&amp;logo=Crowdin&amp;logoColor=white)](https://crowdin.com/project/pingvin-share) [![](https://img.shields.io/badge/sponsor-30363D?style=for-the-badge&amp;logo=GitHub-Sponsors&amp;logoColor=#white)](https://github.com/sponsors/stonith404)

---

Pingvin Share is a self-hosted file sharing platform and an alternative for WeTransfer.

## ✨ Features

- Share files using a link
- Unlimited file size (restricted only by disk space)
- Set an expiration date for shares
- Secure shares with visitor limits and passwords
- Email recipients
- Reverse shares
- OIDC and LDAP authentication
- Integration with ClamAV for security scans
- Different file providers: local storage and S3

## 🐧 Get to know Pingvin Share

- [Demo](https://pingvin-share.dev.eliasschneider.com)
- [Review by DB Tech](https://www.youtube.com/watch?v=rWwNeZCOPJA)

&lt;img src=&quot;https://user-images.githubusercontent.com/58886915/225038319-b2ef742c-3a74-4eb6-9689-4207a36842a4.png&quot; width=&quot;700&quot;/&gt;

## ⌨️ Setup

### Installation with Docker (recommended)

1. Download the `docker-compose.yml` file
2. Run `docker compose up -d`

The website is now listening on `http://localhost:3000`, have fun with Pingvin Share 🐧!

&gt; [!TIP]
&gt; Checkout [Pocket ID](https://github.com/stonith404/pocket-id), a user-friendly OIDC provider that lets you easily log in to services like Pingvin Share using Passkeys.

## 📚 Documentation

For more installation options and advanced configurations, please refer to the [documentation](https://stonith404.github.io/pingvin-share).

## 🖤 Contribute

We would love it if you want to help make Pingvin Share better! You can either [help to translate](https://stonith404.github.io/pingvin-share/help-out/translate) Pingvin Share or [contribute to the codebase](https://stonith404.github.io/pingvin-share/help-out/contribute).

## ❤️ Sponsors

Thank you for supporting Pingvin Share 🙏

- [@COMPLEXWASTAKEN](https://github.com/COMPLEXWASTAKEN)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
    </channel>
</rss>