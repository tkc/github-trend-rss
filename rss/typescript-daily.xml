<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for typescript - TypeScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for typescript.</description>
        <lastBuildDate>Fri, 31 Oct 2025 00:48:01 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[storybookjs/storybook]]></title>
            <link>https://github.com/storybookjs/storybook</link>
            <guid>https://github.com/storybookjs/storybook</guid>
            <pubDate>Fri, 31 Oct 2025 00:48:01 GMT</pubDate>
            <description><![CDATA[Storybook is the industry standard workshop for building, documenting, and testing UI components in isolation]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/storybookjs/storybook">storybookjs/storybook</a></h1>
            <p>Storybook is the industry standard workshop for building, documenting, and testing UI components in isolation</p>
            <p>Language: TypeScript</p>
            <p>Stars: 88,368</p>
            <p>Forks: 9,746</p>
            <p>Stars today: 18 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://storybook.js.org/?ref=readme&quot;&gt;
    &lt;picture&gt;
      &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://user-images.githubusercontent.com/263385/199832481-bbbf5961-6a26-481d-8224-51258cce9b33.png&quot;&gt;
      &lt;img src=&quot;https://user-images.githubusercontent.com/321738/63501763-88dbf600-c4cc-11e9-96cd-94adadc2fd72.png&quot; alt=&quot;Storybook&quot; width=&quot;400&quot; /&gt;
    &lt;/picture&gt;
    
  &lt;/a&gt;
  
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;Build bulletproof UI components faster&lt;/p&gt;

&lt;br/&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://circleci.com/gh/storybookjs/storybook&quot;&gt;
    &lt;img src=&quot;https://circleci.com/gh/storybookjs/storybook.svg?style=shield&quot; alt=&quot;Build Status on CircleCI&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://codecov.io/gh/storybookjs/storybook&quot;&gt;
    &lt;img src=&quot;https://codecov.io/gh/storybookjs/storybook/branch/main/graph/badge.svg&quot; alt=&quot;codecov&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/storybookjs/storybook/blob/main/LICENSE&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/license/storybookjs/storybook.svg&quot; alt=&quot;License&quot; /&gt;
  &lt;/a&gt;
  &lt;br/&gt;
  &lt;a href=&quot;https://discord.gg/storybook&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/discord-join-7289DA.svg?logo=discord&amp;longCache=true&amp;style=flat&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://storybook.js.org/community/?ref=readme&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/community-join-4BC424.svg&quot; alt=&quot;Storybook Community&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;#backers&quot;&gt;
    &lt;img src=&quot;https://opencollective.com/storybook/backers/badge.svg&quot; alt=&quot;Backers on Open Collective&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;#sponsors&quot;&gt;
    &lt;img src=&quot;https://opencollective.com/storybook/tiers/sponsors/badge.svg&quot; alt=&quot;Sponsors on Open Collective&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://x.com/intent/follow?screen_name=storybookjs&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/twitter/follow/storybookjs?color=blue&amp;logo=twitter&quot; alt=&quot;Official Twitter Handle&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://api.securityscorecards.dev/projects/github.com/storybookjs/storybook&quot;&gt;
    &lt;img src=&quot;https://api.securityscorecards.dev/projects/github.com/storybookjs/storybook/badge&quot; alt=&quot;OpenSSF Scorecard&quot;/&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. Find out more at &lt;a href=&quot;https://storybook.js.org/?ref=readme&quot;&gt;storybook.js.org&lt;/a&gt;!
&lt;/p&gt;

&lt;center&gt;
  &lt;img src=&quot;https://raw.githubusercontent.com/storybookjs/storybook/refs/heads/release-6-5/media/storybook-intro.gif&quot; width=&quot;100%&quot; /&gt;
&lt;/center&gt;

&lt;p align=&quot;center&quot;&gt;
  View README for:&lt;br/&gt;
  &lt;a href=&quot;https://github.com/storybookjs/storybook/blob/main/README.md&quot; title=&quot;latest&quot;&gt;&lt;img alt=&quot;latest&quot; src=&quot;https://img.shields.io/npm/v/@storybook/react/latest?style=for-the-badge&amp;logo=storybook&amp;logoColor=ffffff&amp;color=66BF3C&quot; /&gt;&lt;/a&gt;
  &lt;a href=&quot;https://github.com/storybookjs/storybook/blob/next/README.md&quot; title=&quot;next&quot;&gt;&lt;img alt=&quot;next&quot; src=&quot;https://img.shields.io/npm/v/@storybook/react/next?style=for-the-badge&amp;logo=storybook&amp;logoColor=ffffff&amp;color=1EA7FD&quot; /&gt;&lt;/a&gt;
&lt;/p&gt;

## Table of contents

- üöÄ [Getting Started](#getting-started)
- üìí [Projects](#projects)
  - üõ† [Supported Frameworks &amp; Examples](#supported-frameworks)
  - üîó[Addons](#addons)
- üèÖ [Badges &amp; Presentation materials](#badges--presentation-materials)
- üë• [Community](#community)
- üëè [Contributing](#contributing)
  - üë®‚Äçüíª [Development scripts](#development-scripts)
  - üí∏ [Sponsors](#sponsors)
  - üíµ [Backers](#backers)
- :memo: [License](#license)

## Getting Started

Visit [Storybook&#039;s website](https://storybook.js.org/?ref=readme) to learn more about Storybook and to get started.

### Documentation

Documentation can be found on [Storybook&#039;s docs site](https://storybook.js.org/docs?ref=readme).

### Examples

View [Component Encyclopedia](https://storybook.js.org/showcase?ref=readme) to see how leading teams use Storybook.

Use [storybook.new](https://storybook.new) to quickly create an example project in Stackblitz.

Storybook comes with a lot of [addons](https://storybook.js.org/docs/configure/user-interface/storybook-addons?ref=readme) for component design, documentation, testing, interactivity, and so on. Storybook&#039;s API makes it possible to configure and extend in various ways. It has even been extended to support React Native, Android, iOS, and Flutter development for mobile.

### Community

For additional help, share your issue in [the repo&#039;s GitHub Discussions](https://github.com/storybookjs/storybook/discussions/new?category=help).

## Projects

### Supported Frameworks

| Renderer                                                       | Demo                                                                                                                                                                         |                                                                                                                                                       |
| -------------------------------------------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------- |
| [React](code/renderers/react)                                  | [![Storybook demo](https://img.shields.io/npm/v/@storybook/react/latest?style=flat-square&amp;color=blue&amp;label)](https://next--630511d655df72125520f051.chromatic.com/)          | [![React](https://img.shields.io/npm/dm/@storybook/react?style=flat-square&amp;color=eee)](code/renderers/react)                                          |
| [Angular](code/frameworks/angular/)                            | [![Storybook demo](https://img.shields.io/npm/v/@storybook/angular/latest?style=flat-square&amp;color=blue&amp;label)](https://next--6322ce6af69825592bbb28fc.chromatic.com/)        | [![Angular](https://img.shields.io/npm/dm/@storybook/angular?style=flat-square&amp;color=eee)](code/frameworks/angular/)                                  |
| [Vue 3](code/renderers/vue3)                                   | [![Storybook demo](https://img.shields.io/npm/v/@storybook/vue3/latest?style=flat-square&amp;color=blue&amp;label)](https://next--630513346a8e284ae244d415.chromatic.com/)           | [![Vue 3](https://img.shields.io/npm/dm/@storybook/vue3?style=flat-square&amp;color=eee)](code/renderers/vue3/)                                           |
| [Web components](code/renderers/web-components)                | [![Storybook demo](https://img.shields.io/npm/v/@storybook/web-components/latest?style=flat-square&amp;color=blue&amp;label)](https://next--638db5bf49adfdfe8cf545e0.chromatic.com/) | [![Svelte](https://img.shields.io/npm/dm/@storybook/web-components?style=flat-square&amp;color=eee)](code/renderers/web-components)                       |
| [React Native](https://github.com/storybookjs/react-native)    | [![](https://img.shields.io/npm/v/@storybook/react-native/latest?style=flat-square&amp;color=blue&amp;label)](/)                                                                     | [![React Native](https://img.shields.io/npm/dm/@storybook/react-native?style=flat-square&amp;color=eee)](https://github.com/storybookjs/react-native)     |
| [HTML](code/renderers/html)                                    | [![Storybook demo](https://img.shields.io/npm/v/@storybook/html/latest?style=flat-square&amp;color=blue&amp;label)](https://next--63dd39a158cf6fc05199b4bb.chromatic.com/)           | [![HTML](https://img.shields.io/npm/dm/@storybook/html?style=flat-square&amp;color=eee)](code/renderers/html)                                             |
| [Ember](code/frameworks/ember/)                                | [![](https://img.shields.io/npm/v/@storybook/ember/latest?style=flat-square&amp;color=blue&amp;label)](/)                                                                            | [![Ember](https://img.shields.io/npm/dm/@storybook/ember?style=flat-square&amp;color=eee)](code/frameworks/ember/)                                        |
| [Svelte](code/renderers/svelte)                                | [![Storybook demo](https://img.shields.io/npm/v/@storybook/svelte/latest?style=flat-square&amp;color=blue&amp;label)](https://next--630873996e4e3557791c069c.chromatic.com/)         | [![Svelte](https://img.shields.io/npm/dm/@storybook/svelte?style=flat-square&amp;color=eee)](code/renderers/svelte)                                       |
| [Preact](code/renderers/preact)                                | [![Storybook demo](https://img.shields.io/npm/v/@storybook/preact/latest?style=flat-square&amp;color=blue&amp;label)](https://next--63b588a512565bfaace15e7c.chromatic.com/)         | [![Preact](https://img.shields.io/npm/dm/@storybook/preact?style=flat-square&amp;color=eee)](code/renderers/preact)                                       |
| [Qwik](https://github.com/literalpie/storybook-framework-qwik) | [![](https://img.shields.io/npm/v/storybook-framework-qwik/latest?style=flat-square&amp;color=blue&amp;label)](/)                                                                    | [![Qwik](https://img.shields.io/npm/dm/storybook-framework-qwik?style=flat-square&amp;color=eee)](https://github.com/literalpie/storybook-framework-qwik) |
| [SolidJS](https://github.com/solidjs-community/storybook)      | [![](https://img.shields.io/npm/v/storybook-solidjs-vite/latest?style=flat-square&amp;color=blue&amp;label)](/)                                                                      | [![SolidJS](https://img.shields.io/npm/dm/storybook-solidjs-vite?style=flat-square&amp;color=eee)](https://github.com/solidjs-community/storybook)        |
| [Android, iOS, Flutter](https://github.com/storybookjs/native) | [![](https://img.shields.io/npm/v/@storybook/native/latest?style=flat-square&amp;color=blue&amp;label)](/)                                                                           | [![Native](https://img.shields.io/npm/dm/@storybook/native?style=flat-square&amp;color=eee)](https://github.com/storybookjs/native)                       |

### Addons

| Addons                                                                    |                                                                            |
| ------------------------------------------------------------------------- | -------------------------------------------------------------------------- |
| [a11y](code/addons/a11y/)                                                 | Test components for user accessibility in Storybook                        |
| [actions](code/core/src/actions/)                                         | Log actions as users interact with components in the Storybook UI          |
| [backgrounds](code/core/src/backgrounds)                                  | Let users choose backgrounds in the Storybook UI                           |
| [cssresources](https://github.com/storybookjs/addon-cssresources)         | Dynamically add/remove CSS resources to the component iframe               |
| [design assets](https://github.com/storybookjs/addon-design-assets)       | View images, videos, and weblinks alongside your story                     |
| [docs](code/addons/docs/)                                                 | Add high quality documentation to your components                          |
| [events](https://github.com/storybookjs/addon-events)                     | Interactively fire events to components that respond to EventEmitter       |
| [google-analytics](https://github.com/storybookjs/addon-google-analytics) | Reports google analytics on stories                                        |
| [graphql](https://github.com/storybookjs/addon-graphql)                   | Query a GraphQL server within Storybook stories                            |
| [jest](https://github.com/storybookjs/addon-jest)                         | View the results of components&#039; unit tests in Storybook                    |
| [links](code/addons/links/)                                               | Create links between stories                                               |
| [measure](code/core/src/measure/)                                         | Visually inspect the layout and box model within the Storybook UI          |
| [outline](code/core/src/outline/)                                         | Visually debug the CSS layout and alignment within the Storybook UI        |
| [query params](https://github.com/storybookjs/addon-queryparams)          | Mock query params                                                          |
| [viewport](code/core/src/viewport/)                                       | Change display sizes and layouts for responsive components using Storybook |

See [Addon / Framework Support Table](https://storybook.js.org/docs/configure/integration/frameworks-feature-support?ref=readme)

To continue improving your experience, we have to eventually deprecate or remove certain addons in favor of new and better tools.

If you&#039;re using info/notes, we highly recommend you migrate to [docs](code/addons/docs/) instead, and [here is a guide](code/addons/docs/docs/recipes.md#migrating-from-notesinfo-addons) to help you.

If you&#039;re using contexts, we highly recommend you migrate to [toolbars](https://github.com/storybookjs/storybook/tree/next/code/addons/toolbars) and [here is a guide](https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#deprecated-addon-contexts) to help you.

If you&#039;re using addon-storyshots, we highly recommend you migrate to the Storybook [test-runner](https://github.com/storybookjs/test-runner) and [here is a guide](https://storybook.js.org/docs/writing-tests/storyshots-migration-guide?ref=readme) to help you.

## Badges &amp; Presentation materials

We have a badge! Link it to your live Storybook example.

![Storybook](https://cdn.jsdelivr.net/gh/storybookjs/brand@main/badge/badge-storybook.svg)

```md
[![Storybook](https://cdn.jsdelivr.net/gh/storybookjs/brand@main/badge/badge-storybook.svg)](link to site)
```

If you&#039;re looking for material to use in your Storybook presentation, such as logos, video material, and the colors we use, you can find it all on our [brand repo](https://github.com/storybookjs/brand).

## Community

- Tweeting via [@storybookjs](https://x.com/storybookjs)
- Blogging at [storybook.js.org](https://storybook.js.org/blog/?ref=readme) and [Medium](https://medium.com/storybookjs)
- Chatting on [Discord](https://discord.gg/storybook)
- Videos and streams at [YouTube](https://www.youtube.com/channel/UCr7Quur3eIyA_oe8FNYexfg)

## Contributing

Contributions to Storybook are always welcome!

- üì• Pull requests and üåü Stars are always welcome.
- Read our [contributing guide](CONTRIBUTING.md) to get started,
  or find us on [Discord](https://discord.gg/storybook), we will take the time to guide you.

Looking for a first issue to tackle?

- We tag issues with [![Good First Issue](https://img.shields.io/github/issues/storybookjs/storybook/good%20first%20issue.svg)](https://github.com/storybookjs/storybook/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22) when we think they are well suited for people who are new to the codebase or OSS in general.
- [Talk to us](https://discord.gg/storybook), we&#039;ll find something that suits your skills and learning interest.

### Development scripts

Storybook is organized as a monorepo. Useful scripts include:

#### `yarn start`

&gt; Runs a sandbox template storybook with test stories

#### `yarn task`

&gt; As above, but gives you options to customize the sandbox (e.g. selecting other frameworks)

#### `yarn lint`

&gt; boolean check if code conforms to linting rules - uses remark &amp; eslint

- `yarn lint:js` - will check js
- `yarn lint:md` - will check markdown + code samples
- `yarn lint:js --fix` - will automatically fix js

#### `yarn test`

&gt; boolean check if unit tests all pass - uses jest

- `yarn run test --core --watch` - will run core tests in watch-mode

### Sponsors

Become a sponsor to have your logo and website URL on our README on Github. \[[Become a sponsor](https://opencollective.com/storybook#sponsor)]

&lt;a href=&quot;https://opencollective.com/storybook/tiers/sponsors/0/website?requireActive=true&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/storybook/tiers/sponsors/0/avatar.svg?requireActive=true&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/storybook/tiers/sponsors/1/website?requireActive=true&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/storybook/tiers/sponsors/1/avatar.svg?requireActive=true&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/storybook/tiers/sponsors/2/website?requireActive=true&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/storybook/tiers/sponsors/2/avatar.svg?requireActive=true&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/storybook/tiers/sponsors/3/website?requireActive=true&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/storybook/tiers/sponsors/3/avatar.svg?requireActive=true&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/storybook/tiers/sponsors/4/website?requireActive=true&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/storybook/tiers/sponsors/4/avatar.svg?requireActive=true&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/storybook/tiers/sponsors/5/website?requireActive=true&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/storybook/tiers/sponsors/5/avatar.svg?requireActive=true&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/storybook/tiers/sponsors/6/website?requireActive=true&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/storybook/tiers/sponsors/6/avatar.svg?requireActive=true&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/storybook/tiers/sponsors/7/website?requireActive=true&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/storybook/tiers/sponsors/7/avatar.svg?requireActive=true&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/storybook/tiers/sponsors/8/website?requireActive=true&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/storybook/tiers/sponsors/8/avatar.svg?requireActive=true&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/storybook/tiers/sponsors/9/website?requireActive=true&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/storybook/tiers/sponsors/9/avatar.svg?requireActive=true&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/storybook/tiers/sponsors/10/website?requireActive=true&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/storybook/tiers/sponsors/10/avatar.svg?requireActive=true&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/storybook/tiers/sponsors/11/website?requireActive=true&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/storybook/tiers/sponsors/11/avatar.svg?requireActive=true&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/storybook/tiers/sponsors/12/website?requireActive=true&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/storybook/tiers/sponsors/12/avatar.svg?requireActive=true&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/storybook/tiers/sponsors/13/website?requireActive=true&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/storybook/tiers/sponsors/13/avatar.svg?requireActive=true&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/storybook/tiers/sponsors/14/website?requireActive=true&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/storybook/tiers/sponsors/14/avatar.svg?requireActive=true&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/storybook/tiers/sponsors/15/website?requireActive=true&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/storybook/tiers/sponsors/15/avatar.svg?requireActive=true&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/storybook/tiers/sponsors/16/website?requireActive=true&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/storybook/tiers/sponsors/16/avatar.svg?requireActive=true&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/storybook/tiers/sponsors/17/website?requireActive=true&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/storybook/tiers/sponsors/17/avatar.svg?requireActive=true&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/storybook/tiers/sponsors/18/website?requireActive=true&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/storybook/tiers/sponsors/18/avatar.

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[janhq/jan]]></title>
            <link>https://github.com/janhq/jan</link>
            <guid>https://github.com/janhq/jan</guid>
            <pubDate>Fri, 31 Oct 2025 00:48:00 GMT</pubDate>
            <description><![CDATA[Jan is an open source alternative to ChatGPT that runs 100% offline on your computer.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/janhq/jan">janhq/jan</a></h1>
            <p>Jan is an open source alternative to ChatGPT that runs 100% offline on your computer.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 38,588</p>
            <p>Forks: 2,332</p>
            <p>Stars today: 27 stars today</p>
            <h2>README</h2><pre># Jan - Local AI Assistant

![Jan banner](./JanBanner.png)

&lt;p align=&quot;center&quot;&gt;
  &lt;!-- ALL-CONTRIBUTORS-BADGE:START - Do not remove or modify this section --&gt;
  &lt;img alt=&quot;GitHub commit activity&quot; src=&quot;https://img.shields.io/github/commit-activity/m/janhq/jan&quot;/&gt;
  &lt;img alt=&quot;Github Last Commit&quot; src=&quot;https://img.shields.io/github/last-commit/janhq/jan&quot;/&gt;
  &lt;img alt=&quot;Github Contributors&quot; src=&quot;https://img.shields.io/github/contributors/janhq/jan&quot;/&gt;
  &lt;img alt=&quot;GitHub closed issues&quot; src=&quot;https://img.shields.io/github/issues-closed/janhq/jan&quot;/&gt;
  &lt;img alt=&quot;Discord&quot; src=&quot;https://img.shields.io/discord/1107178041848909847?label=discord&quot;/&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://jan.ai/docs/quickstart&quot;&gt;Getting Started&lt;/a&gt; 
  - &lt;a href=&quot;https://jan.ai/docs&quot;&gt;Docs&lt;/a&gt; 
  - &lt;a href=&quot;https://github.com/janhq/jan/releases&quot;&gt;Changelog&lt;/a&gt; 
  - &lt;a href=&quot;https://github.com/janhq/jan/issues&quot;&gt;Bug reports&lt;/a&gt; 
  - &lt;a href=&quot;https://discord.gg/AsJ8krTT3N&quot;&gt;Discord&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
‚ö†Ô∏è &lt;b&gt; Jan is currently in Development&lt;/b&gt;: Expect breaking changes and bugs!
&lt;/p&gt;


Jan is a ChatGPT-alternative that runs 100% offline on your device. Our goal is to make it easy for a layperson to download and run LLMs and use AI with **full control** and **privacy**.

Jan is powered by [Cortex](https://github.com/janhq/cortex.cpp), our embeddable local AI engine that runs on any hardware.
From PCs to multi-GPU clusters, Jan &amp; Cortex supports universal architectures:

- [x] NVIDIA GPUs (fast)
- [x] Apple M-series (fast)
- [x] Apple Intel
- [x] Linux Debian
- [x] Windows x64

#### Features:
- [Model Library](https://jan.ai/docs/models/manage-models#add-models) with popular LLMs like Llama, Gemma, Mistral, or Qwen 
- Connect to [Remote AI APIs](https://jan.ai/docs/remote-models/openai) like Groq and OpenRouter
- Local API Server with OpenAI-equivalent API
- [Extensions](https://jan.ai/docs/extensions) for customizing Jan

## Download

&lt;table&gt;
  &lt;tr style=&quot;text-align:center&quot;&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;&lt;b&gt;Version Type&lt;/b&gt;&lt;/td&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;&lt;b&gt;Windows&lt;/b&gt;&lt;/td&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;&lt;b&gt;MacOS Universal&lt;/b&gt;&lt;/td&gt;
    &lt;td colspan=&quot;2&quot; style=&quot;text-align:center&quot;&gt;&lt;b&gt;Linux&lt;/b&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr style=&quot;text-align:center&quot;&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;&lt;b&gt;Stable (Recommended)&lt;/b&gt;&lt;/td&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;
      &lt;a href=&#039;https://app.jan.ai/download/latest/win-x64&#039;&gt;
        &lt;img src=&#039;https://github.com/janhq/jan/blob/dev/docs/static/img/windows.png&#039; style=&quot;height:14px; width: 14px&quot; /&gt;
        &lt;b&gt;jan.exe&lt;/b&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;
      &lt;a href=&#039;https://app.jan.ai/download/latest/mac-universal&#039;&gt;
        &lt;img src=&#039;https://github.com/janhq/jan/blob/dev/docs/static/img/mac.png&#039; style=&quot;height:15px; width: 15px&quot; /&gt;
        &lt;b&gt;jan.dmg&lt;/b&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;
      &lt;a href=&#039;https://app.jan.ai/download/latest/linux-amd64-deb&#039;&gt;
        &lt;img src=&#039;https://github.com/janhq/jan/blob/dev/docs/static/img/linux.png&#039; style=&quot;height:14px; width: 14px&quot; /&gt;
        &lt;b&gt;jan.deb&lt;/b&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;
      &lt;a href=&#039;https://app.jan.ai/download/latest/linux-amd64-appimage&#039;&gt;
        &lt;img src=&#039;https://github.com/janhq/jan/blob/dev/docs/static/img/linux.png&#039; style=&quot;height:14px; width: 14px&quot; /&gt;
        &lt;b&gt;jan.AppImage&lt;/b&gt;
      &lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr style=&quot;text-align:center&quot;&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;&lt;b&gt;Beta (Preview)&lt;/b&gt;&lt;/td&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;
      &lt;a href=&#039;https://app.jan.ai/download/beta/win-x64&#039;&gt;
        &lt;img src=&#039;https://github.com/janhq/jan/blob/dev/docs/static/img/windows.png&#039; style=&quot;height:14px; width: 14px&quot; /&gt;
        &lt;b&gt;jan.exe&lt;/b&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;
      &lt;a href=&#039;https://app.jan.ai/download/beta/mac-universal&#039;&gt;
        &lt;img src=&#039;https://github.com/janhq/jan/blob/dev/docs/static/img/mac.png&#039; style=&quot;height:15px; width: 15px&quot; /&gt;
        &lt;b&gt;jan.dmg&lt;/b&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;
      &lt;a href=&#039;https://app.jan.ai/download/beta/linux-amd64-deb&#039;&gt;
        &lt;img src=&#039;https://github.com/janhq/jan/blob/dev/docs/static/img/linux.png&#039; style=&quot;height:14px; width: 14px&quot; /&gt;
        &lt;b&gt;jan.deb&lt;/b&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;
      &lt;a href=&#039;https://app.jan.ai/download/beta/linux-amd64-appimage&#039;&gt;
        &lt;img src=&#039;https://github.com/janhq/jan/blob/dev/docs/static/img/linux.png&#039; style=&quot;height:14px; width: 14px&quot; /&gt;
        &lt;b&gt;jan.AppImage&lt;/b&gt;
      &lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr style=&quot;text-align:center&quot;&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;&lt;b&gt;Nightly Build (Experimental)&lt;/b&gt;&lt;/td&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;
      &lt;a href=&#039;https://app.jan.ai/download/nightly/win-x64&#039;&gt;
        &lt;img src=&#039;https://github.com/janhq/jan/blob/dev/docs/static/img/windows.png&#039; style=&quot;height:14px; width: 14px&quot; /&gt;
        &lt;b&gt;jan.exe&lt;/b&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;
      &lt;a href=&#039;https://app.jan.ai/download/nightly/mac-universal&#039;&gt;
        &lt;img src=&#039;https://github.com/janhq/jan/blob/dev/docs/static/img/mac.png&#039; style=&quot;height:15px; width: 15px&quot; /&gt;
        &lt;b&gt;jan.dmg&lt;/b&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;
      &lt;a href=&#039;https://app.jan.ai/download/nightly/linux-amd64-deb&#039;&gt;
        &lt;img src=&#039;https://github.com/janhq/jan/blob/dev/docs/static/img/linux.png&#039; style=&quot;height:14px; width: 14px&quot; /&gt;
        &lt;b&gt;jan.deb&lt;/b&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;
      &lt;a href=&#039;https://app.jan.ai/download/nightly/linux-amd64-appimage&#039;&gt;
        &lt;img src=&#039;https://github.com/janhq/jan/blob/dev/docs/static/img/linux.png&#039; style=&quot;height:14px; width: 14px&quot; /&gt;
        &lt;b&gt;jan.AppImage&lt;/b&gt;
      &lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

Download the latest version of Jan at https://jan.ai/ or visit the [GitHub Releases](https://github.com/janhq/jan/releases) to download any previous release.

## Demo

https://github.com/user-attachments/assets/c3592fa2-c504-4d9d-a885-7e00122a50f3

*Real-time Video: Jan v0.5.7 on a Mac M2, 16GB Sonoma 14.2*

## Quicklinks

### Jan

- [Jan Website](https://jan.ai/)
- [Jan GitHub](https://github.com/janhq/jan)
- [Documentation](https://jan.ai/docs)
- [Jan Changelog](https://jan.ai/changelog)
- [Jan Blog](https://jan.ai/blog)

### Cortex.cpp
Jan is powered by **Cortex.cpp**. It is a C++ command-line interface (CLI) designed as an alternative to [Ollama](https://ollama.com/). By default, it runs on the llama.cpp engine but also supports other engines, including ONNX and TensorRT-LLM, making it a multi-engine platform.


- [Cortex Website](https://cortex.so/)
- [Cortex GitHub](https://github.com/janhq/cortex.cpp)
- [Documentation](https://cortex.so/docs/)
- [Models Library](https://cortex.so/models)
- API Reference: *Under development*
  
## Requirements for running Jan

- **MacOS**: 13 or higher
- **Windows**:
  - Windows 10 or higher
  - To enable GPU support:
    - Nvidia GPU with CUDA Toolkit 11.7 or higher
    - Nvidia driver 470.63.01 or higher
- **Linux**:
  - glibc 2.27 or higher (check with `ldd --version`)
  - gcc 11, g++ 11, cpp 11 or higher, refer to this [link](https://jan.ai/guides/troubleshooting/gpu-not-used/#specific-requirements-for-linux) for more information
  - To enable GPU support:
    - Nvidia GPU with CUDA Toolkit 11.7 or higher
    - Nvidia driver 470.63.01 or higher

## Troubleshooting

As Jan is in development mode, you might get stuck on a some common issues:
- [Troubleshooting a broken build](https://jan.ai/docs/troubleshooting#broken-build)
- [Troubleshooting NVIDIA GPU](https://jan.ai/docs/troubleshooting#troubleshooting-nvidia-gpu)
- [Troubleshooting Something&#039;s Amiss](https://jan.ai/docs/troubleshooting#somethings-amiss)


If you can&#039;t find what you need in our troubleshooting guide, feel free reach out to us for extra help:
1. Copy your [error logs &amp; device specifications](https://jan.ai/docs/troubleshooting#how-to-get-error-logs).
2. Go to our [Discord](https://discord.com/invite/FTk2MvZwJH) &amp; send it to **#üÜò|get-help** channel for further support.

*Check the logs to ensure the information is what you intend to send. Note that we retain your logs for only 24 hours, so report any issues promptly.*
  

## Contributing

Contributions are welcome! Please read the [CONTRIBUTING.md](CONTRIBUTING.md) file

### Pre-requisites

- node &gt;= 20.0.0
- yarn &gt;= 1.22.0
- make &gt;= 3.81

### Instructions

1. **Clone the repository and prepare:**

   ```bash
   git clone https://github.com/janhq/jan
   cd jan
   git checkout -b DESIRED_BRANCH
   ```

2. **Run development and use Jan Desktop**

   ```bash
   make dev
   ```

This will start the development server and open the desktop app.



### For production build

```bash
# Do steps 1 and 2 in the previous section
# Build the app
make build
```

This will build the app MacOS m1/m2 for production (with code signing already done) and put the result in `dist` folder.

## Acknowledgements

Jan builds on top of other open-source projects:

- [llama.cpp](https://github.com/ggerganov/llama.cpp)
- [LangChain](https://github.com/langchain-ai)
- [TensorRT](https://github.com/NVIDIA/TensorRT)
- [TensorRT-LLM](https://github.com/NVIDIA/TensorRT-LLM)

## Contact

- Bugs &amp; requests: file a GitHub ticket
- For discussion: join our Discord [here](https://discord.gg/FTk2MvZwJH)
- For business inquiries: email hello@jan.ai 
- For jobs: please email hr@jan.ai

## Trust &amp; Safety

Beware of scams!

- We will never request your personal information.
- Our product is completely free; no paid version exists.
- We do not have a token or ICO.
- We are a [bootstrapped company](https://en.wikipedia.org/wiki/Bootstrapping), and don&#039;t have any external investors (*yet*). We&#039;re open to exploring opportunities with strategic partners want to tackle [our mission](https://jan.ai/about#mission) together.

## License

Jan is free and open source, under the **AGPLv3** license.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[MetaMask/metamask-extension]]></title>
            <link>https://github.com/MetaMask/metamask-extension</link>
            <guid>https://github.com/MetaMask/metamask-extension</guid>
            <pubDate>Fri, 31 Oct 2025 00:47:59 GMT</pubDate>
            <description><![CDATA[üåê üîå The MetaMask browser extension enables browsing Ethereum blockchain enabled websites]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/MetaMask/metamask-extension">MetaMask/metamask-extension</a></h1>
            <p>üåê üîå The MetaMask browser extension enables browsing Ethereum blockchain enabled websites</p>
            <p>Language: TypeScript</p>
            <p>Stars: 12,889</p>
            <p>Forks: 5,379</p>
            <p>Stars today: 8 stars today</p>
            <h2>README</h2><pre># MetaMask Browser Extension

You can find the latest version of MetaMask on [our official website](https://metamask.io/). For help using MetaMask, visit our [User Support Site](https://support.metamask.io/).

For [general questions](https://community.metamask.io/c/learn/26), [feature requests](https://community.metamask.io/c/feature-requests-ideas/13), or [developer questions](https://community.metamask.io/c/developer-questions/11), visit our [Community Forum](https://community.metamask.io/).

MetaMask supports Firefox, Google Chrome, and Chromium-based browsers. We recommend using the latest available browser version.

For up to the minute news, follow us on [X](https://x.com/MetaMask).

To learn how to develop MetaMask-compatible applications, visit our [Developer Docs](https://docs.metamask.io/).

To learn how to contribute to the MetaMask codebase, visit our [Contributor Docs](https://github.com/MetaMask/contributor-docs).

To learn how to contribute to the MetaMask Extension project itself, visit our [Extension Docs](https://github.com/MetaMask/metamask-extension/tree/main/docs).

## GitHub Codespaces quickstart

As an alternative to building on your local machine, there is a new option to get a development environment up and running in less than 5 minutes by using GitHub Codespaces. Please note that there is a [Limited Free Monthly Quota](https://docs.github.com/en/billing/managing-billing-for-github-codespaces/about-billing-for-github-codespaces), and after that GitHub will start charging you.

_Note: You are billed for both time spent running, and for storage used_

[![Open in GitHub Codespaces](https://github.com/codespaces/badge.svg)](https://codespaces.new/MetaMask/metamask-extension?quickstart=1)

1. Start by clicking the button above
2. A new browser tab will open with a remote version of Visual Studio Code (this will take a few minutes to load)
3. A &quot;Simple Browser&quot; will open inside the browser with noVNC -- click Connect
   - Optional steps:
     - Click the button at the upper-right of the Simple Browser tab to open the noVNC window in its own tab
     - Open the noVNC sidebar on the left, click the gear icon, change the Scaling Mode to Remote Resizing
4. Wait about 20 extra seconds on the first launch, for the scripts to finish
5. Right-click on the noVNC desktop to launch Chrome or Firefox with MetaMask pre-installed
6. Change some code, then run `yarn start` to build in dev mode
7. After a minute or two, it will finish building, and you can see your changes in the noVNC desktop

### Tips to keep your Codespaces usage lower

- You are billed for both time spent running, and for storage used
- Codespaces pause after 30 minutes of inactivity, and auto-delete after 30 days of inactivity
- You can manage your Codespaces here: https://github.com/codespaces
  - You may want to manually pause them before the 30 minute timeout
  - If you have several idle Codespaces hanging around for several days, you can quickly run out of storage quota. You should delete the ones you do not plan to use anymore, and probably keep only 1 or 2 in the long-term. It&#039;s also possible to re-use old Codespaces and switch the branch, instead of creating new ones and deleting the old ones.

### Codespaces on a fork

If you are not a MetaMask Internal Developer, or are otherwise developing on a fork, the default Infura key will be on the Free Plan and have very limited requests per second. If you want to use your own Infura key, follow the `.metamaskrc` and `INFURA_PROJECT_ID` instructions in the section [Building on your local machine](#building-on-your-local-machine).

## Building on your local machine

- Install [Node.js](https://nodejs.org) version 22
  - If you are using [nvm](https://github.com/nvm-sh/nvm#installing-and-updating) (recommended) running `nvm use` will automatically choose the right node version for you.
- Enable Corepack by executing the command `corepack enable` within the metamask-extension project. Corepack is a utility included with Node.js by default. It manages Yarn on a per-project basis, using the version specified by the `packageManager` property in the project&#039;s package.json file. Please note that modern releases of [Yarn](https://yarnpkg.com/getting-started/install) are not intended to be installed globally or via npm.
- Duplicate `.metamaskrc.dist` within the root and rename it to `.metamaskrc` by running `cp .metamaskrc{.dist,}`.
  - Replace the `INFURA_PROJECT_ID` value with your own personal [Infura API Key](https://docs.infura.io/networks/ethereum/how-to/secure-a-project/project-id).
    - If you don&#039;t have an Infura account, you can create one for free on the [Infura website](https://app.infura.io/register).
  - If debugging MetaMetrics, you&#039;ll need to add a value for `SEGMENT_WRITE_KEY` [Segment write key](https://segment.com/docs/connections/find-writekey/), see [Developing on MetaMask - Segment](./development/README.md#segment).
  - If debugging unhandled exceptions, you&#039;ll need to add a value for `SENTRY_DSN` [Sentry Dsn](https://docs.sentry.io/product/sentry-basics/dsn-explainer/), see [Developing on MetaMask - Sentry](./development/README.md#sentry).
  - Optionally, replace the `PASSWORD` value with your development wallet password to avoid entering it each time you open the app.
  - If developing with remote feature flags, and you want to override the flags in the build process, you can add a `.manifest-overrides.json` file to the root of the project and set `MANIFEST_OVERRIDES=.manifest-overrides.json` in `.metamaskrc` to the path of the file.
    This file is used to add flags to `manifest.json` build files for the extension. You can also modify the `_flags.remoteFeatureFlags` in the built version of `manifest.json` in the `dist/browser` folder to tweak the flags after the build process (these changes will get overwritten when you build again).
    An example of this remote feature flag overwrite could be:

  ```json
  {
    &quot;_flags&quot;: {
      &quot;remoteFeatureFlags&quot;: { &quot;testBooleanFlag&quot;: false }
    }
  }
  ```

- Run `yarn install` to install the dependencies.
- Build the project to the `./dist/` folder with `yarn dist` (for Chromium-based browsers) or `yarn dist:mv2` (for Firefox)
  - Optionally, to create a development build you can instead run `yarn start` (for Chromium-based browsers) or `yarn start:mv2` (for Firefox)
  - Uncompressed builds can be found in `/dist`, compressed builds can be found in `/builds` once they&#039;re built.
  - See the [build system readme](./development/build/README.md) for build system usage information.

- Follow these instructions to verify that your local build runs correctly:
  - [How to add custom build to Chrome](./docs/add-to-chrome.md)
  - [How to add custom build to Firefox](./docs/add-to-firefox.md)

## Git Hooks

To get quick feedback from our shared code quality fitness functions before committing the code, you can install our git hooks with Husky.

`$ yarn githooks:install`

You can read more about them in our [testing documentation](./docs/testing.md#fitness-functions-measuring-progress-in-code-quality-and-preventing-regressions-using-custom-git-hooks).

If you are using VS Code and are unable to make commits from the source control sidebar due to a &quot;command not found&quot; error, try these steps from the [Husky docs](https://typicode.github.io/husky/troubleshooting.html#command-not-found).

## Contributing

### Development builds

To start a development build (e.g. with logging and file watching) run `yarn start`.

#### Development build with wallet state

You can start a development build with a preloaded wallet state, by adding `TEST_SRP=&#039;&lt;insert SRP here&gt;&#039;` and `PASSWORD=&#039;&lt;insert wallet password here&gt;&#039;` to the `.metamaskrc` file. Then you have the following options:

1. Start the wallet with the default fixture flags, by running `yarn start:with-state`.
2. Check the list of available fixture flags, by running `yarn start:with-state --help`.
3. Start the wallet with custom fixture flags, by running `yarn start:with-state --FIXTURE_NAME=VALUE` for example `yarn start:with-state --withAccounts=100`. You can pass as many flags as you want. The rest of the fixtures will take the default values.

#### Development build with Webpack

You can also start a development build using the `yarn webpack` command, or `yarn webpack --watch`. This uses an alternative build system that is much faster, but not yet production ready. See the [Webpack README](./development/webpack/README.md) for more information.

#### React and Redux DevTools

To use React or Redux DevTools you&#039;ll first need to set `METAMASK_REACT_REDUX_DEVTOOLS` to `true` in `.metamaskrc`.

To start the [React DevTools](https://github.com/facebook/react-devtools), run `yarn devtools:react` with a development build installed in a browser. This will open in a separate window; no browser extension is required.

To start the [Redux DevTools Extension](https://github.com/reduxjs/redux-devtools/tree/main/extension):

- Install the package `remotedev-server` globally (e.g. `yarn global add remotedev-server`)
- Install the Redux Devtools extension.
- Open the Redux DevTools extension and check the &quot;Use custom (local) server&quot; checkbox in the Remote DevTools Settings, using the default server configuration (host `localhost`, port `8000`, secure connection checkbox unchecked).

Then run the command `yarn devtools:redux` with a development build installed in a browser. This will enable you to use the Redux DevTools extension to inspect MetaMask.

To create a development build and run both of these tools simultaneously, run `yarn start:dev`.

#### Test Dapp

[This test site](https://metamask.github.io/test-dapp/) can be used to execute different user flows.

### Running Unit Tests and Linting

Run unit tests and the linter with `yarn test`. To run just unit tests, run `yarn test:unit`.

You can run the linter by itself with `yarn lint`, and you can automatically fix some lint problems with `yarn lint:fix`. You can also run these two commands just on your local changes to save time with `yarn lint:changed` and `yarn lint:changed:fix` respectively.

For Jest debugging guide using Node.js, see [docs/tests/jest.md](docs/tests/jest.md).

### Running E2E Tests

Our e2e test suite can be run on either Firefox or Chrome. Here&#039;s how to get started with e2e testing:

#### Preparing a Test Build

Before running e2e tests, ensure you&#039;ve run `yarn install` to download dependencies. Next, you&#039;ll need a test build. You have 3 options:

1. Use `yarn download-builds --build-type test` to quickly download and unzip test builds for Chrome and Firefox into the `./dist/` folder. This method is fast and convenient for standard testing.
2. Create a custom test build: for testing against different build types, use `yarn build:test`. This command allows you to generate test builds for various types, including:
   - `yarn build:test` for main build
   - `yarn build:test:flask` for flask build
   - `yarn build:test:mv2` for mv2 build
3. Start a test build with live changes: `yarn start:test` is particularly useful for development. It starts a test build that automatically recompiles application code upon changes. This option is ideal for iterative testing and development. This command also allows you to generate test builds for various types, including:
   - `yarn start:test` for main build
   - `yarn start:test:flask` for flask build
   - `yarn start:test:mv2` for mv2 build

Note: The `yarn start:test` command (which initiates the testDev build type) has LavaMoat disabled for both the build system and the application, offering a streamlined testing experience during development. On the other hand, `yarn build:test` enables LavaMoat for enhanced security in both the build system and application, mirroring production environments more closely.

#### Running Tests

Once you have your test build ready, choose the browser for your e2e tests:

- For Firefox, run `yarn test:e2e:firefox`.
  - Note: If you are running Firefox as a snap package on Linux, ensure you enable the appropriate environment variable: `FIREFOX_SNAP=true yarn test:e2e:firefox`
- For Chrome, run `yarn test:e2e:chrome`.

These scripts support additional options for debugging. Use `--help`to see all available options.

#### Running a single e2e test

Single e2e tests can be run with `yarn test:e2e:single test/e2e/tests/TEST_NAME.spec.js` along with the options below.

```console
  --browser           Set the browser to be used; specify &#039;chrome&#039;, &#039;firefox&#039;, &#039;all&#039;
                      or leave unset to run on &#039;all&#039; by default.
                                                          [string] [default: &#039;all&#039;]
  --debug             Run tests in debug mode, logging each driver interaction
                                                         [boolean] [default: true]
  --retries           Set how many times the test should be retried upon failure.
                                                              [number] [default: 0]
  --leave-running     Leaves the browser running after a test fails, along with
                      anything else that the test used (ganache, the test dapp,
                      etc.)                              [boolean] [default: false]
  --update-snapshot   Update E2E test snapshots
                                             [alias: -u] [boolean] [default: false]
```

For example, to run the `account-details` tests using Chrome, with debug logging and with the browser set to remain open upon failure, you would use:
`yarn test:e2e:single test/e2e/tests/account-menu/account-details.spec.js --browser=chrome --leave-running`

#### Running e2e tests against specific feature flag

While developing new features, we often use feature flags. As we prepare to make these features generally available (GA), we remove the feature flags. Existing feature flags are listed in the `.metamaskrc.dist` file. To execute e2e tests with a particular feature flag enabled, it&#039;s necessary to first generate a test build with that feature flag activated. There are two ways to achieve this:

- To enable a feature flag in your local configuration, you should first ensure you have a `.metamaskrc` file copied from `.metamaskrc.dist`. Then, within your local `.metamaskrc` file, you can set the desired feature flag to true. Following this, a test build with the feature flag enabled can be created by executing `yarn build:test`.

- Alternatively, for enabling a feature flag directly during the test build creation, you can pass the parameter as true via the command line. For instance, activating the MULTICHAIN feature flag can be done by running `MULTICHAIN=1 yarn build:test` or `MULTICHAIN=1 yarn start:test` . This method allows for quick adjustments to feature flags without altering the `.metamaskrc` file.

Once you&#039;ve created a test build with the desired feature flag enabled, proceed to run your tests as usual. Your tests will now run against the version of the extension with the specific feature flag activated. For example:
`yarn test:e2e:single test/e2e/tests/account-menu/account-details.spec.js --browser=chrome`

This approach ensures that your e2e tests accurately reflect the user experience for the upcoming GA features.

#### Running specific builds types e2e test

Different build types have different e2e tests sets. In order to run them look in the `package.json` file. You will find:

```console
    &quot;test:e2e:chrome:snaps&quot;: &quot;SELENIUM_BROWSER=chrome node test/e2e/run-all.js --snaps&quot;,
    &quot;test:e2e:firefox&quot;: &quot;SELENIUM_BROWSER=firefox node test/e2e/run-all.js&quot;,
```

### Changing dependencies

Whenever you change dependencies (adding, removing, or updating, either in `package.json` or `yarn.lock`), there are various files that must be kept up-to-date.

- `yarn.lock`:
  - Run `yarn` again after your changes to ensure `yarn.lock` has been properly updated.
  - Run `yarn lint:lockfile:dedupe:fix` to remove duplicate dependencies from the lockfile.
- The `allow-scripts` configuration in `package.json`
  - Run `yarn allow-scripts auto` to update the `allow-scripts` configuration automatically. This config determines whether the package&#039;s install/postinstall scripts are allowed to run. Review each new package to determine whether the install script needs to run or not, testing if necessary.
  - Unfortunately, `yarn allow-scripts auto` will behave inconsistently on different platforms. macOS and Windows users may see extraneous changes relating to optional dependencies.
- The LavaMoat policy files
  - If you are a MetaMask team member and your PR is on a repository branch, you can use the bot command `@metamaskbot update-policies` to ask the MetaMask bot to automatically update the policies for you.
  - If your PR is from a fork, you can ask a MetaMask team member to help with updating the policy files.
  - Manual update instructions: The _tl;dr_ is to run `yarn lavamoat:auto` to update these files, but there can be devils in the details:
    - There are two sets of LavaMoat policy files:
      - The production LavaMoat policy files (`lavamoat/browserify/*/policy.json`), which are re-generated using `yarn lavamoat:webapp:auto`. Add `--help` for usage.
        - These should be regenerated whenever the production dependencies for the webapp change.
      - The build system LavaMoat policy file (`lavamoat/build-system/policy.json`), which is re-generated using `yarn lavamoat:build:auto`.
        - This should be regenerated whenever the dependencies used by the build system itself change.
    - Whenever you regenerate a policy file, review the changes to determine whether the access granted to each package seems appropriate.
    - Unfortunately, `yarn lavamoat:auto` will behave inconsistently on different platforms.
      macOS and Windows users may see extraneous changes relating to optional dependencies.
    - If you keep getting policy failures even after regenerating the policy files, try regenerating the policies after a clean install by doing:
      - `rm -rf node_modules/ &amp;&amp; yarn &amp;&amp; yarn lavamoat:auto`
    - Keep in mind that any kind of dynamic import or dynamic use of globals may elude LavaMoat&#039;s static analysis.
      Refer to the LavaMoat documentation or ask for help if you run into any issues.
- The Attributions file
  - If you are a MetaMask team member and your PR is on a repository branch, you can use the bot command `@metamaskbot update-attributions` to ask the MetaMask bot to automatically update the attributions file for you.
  - Manual update: run `yarn attributions:generate`.

## Architecture

- [Visual of the controller hierarchy and dependencies as of summer 2022.](https://gist.github.com/rekmarks/8dba6306695dcd44967cce4b6a94ae33)
- [Visual of the entire codebase.](https://mango-dune-07a8b7110.1.azurestaticapps.net/?repo=metamask%2Fmetamask-extension)

[![Architecture Diagram](./docs/architecture.png)][1]

## Other Docs

- [How to add a new translation to MetaMask](./docs/translating-guide.md)
- [Publishing Guide](./docs/publishing.md)
- [How to use the TREZOR emulator](./docs/trezor-emulator.md)
- [Developing on MetaMask](./development/README.md)
- [How to generate a visualization of this repository&#039;s development](./development/gource-viz.sh)
- [How to add new confirmations](./docs/confirmations.md)
- [Browser support guidelines](./docs/browser-support.md)

## Dapp Developer Resources

- [Extend MetaMask&#039;s features w/ MetaMask Snaps.](https://docs.metamask.io/snaps/)
- [Prompt your users to add and switch to a new network.](https://docs.metamask.io/wallet/how-to/add-network/)
- [Change the logo that appears when your dapp connects to MetaMask.](https://docs.metamask.io/wallet/how-to/display/icon/)

[1]: http://www.nomnoml.com/#view/%5B%3Cactor%3Euser%5D%0A%0A%5Bmetamask-ui%7C%0A%20%20%20%5Btools%7C%0A%20%20%20%20%20react%0A%20%20%20%20%20redux%0A%20%20%20%20%20thunk%0A%20%20%20%20%20ethUtils%0A%20%20%20%20%20jazzicon%0A%20%20%20%5D%0A%20%20%20%5Bcomponent

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[firebase/firebase-tools]]></title>
            <link>https://github.com/firebase/firebase-tools</link>
            <guid>https://github.com/firebase/firebase-tools</guid>
            <pubDate>Fri, 31 Oct 2025 00:47:58 GMT</pubDate>
            <description><![CDATA[The Firebase Command Line Tools]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/firebase/firebase-tools">firebase/firebase-tools</a></h1>
            <p>The Firebase Command Line Tools</p>
            <p>Language: TypeScript</p>
            <p>Stars: 4,260</p>
            <p>Forks: 1,084</p>
            <p>Stars today: 2 stars today</p>
            <h2>README</h2><pre># Firebase CLI and MCP Server [![Actions Status][gh-actions-badge]][gh-actions] [![Node Version][node-badge]][npm] [![NPM version][npm-badge]][npm] [![Install MCP Server](https://cursor.com/deeplink/mcp-install-dark.svg)](https://cursor.com/en/install-mcp?name=firebase&amp;config=eyJjb21tYW5kIjoibnB4IiwiYXJncyI6WyIteSIsImZpcmViYXNlLXRvb2xzIiwiZXhwZXBpbWVudGFsOm1jcCIsIi0tZGlyIiwiLiJdfQ==)

The Firebase Command Line Interface (CLI) Tools can be used to test, manage, and deploy your Firebase project from the command line. This repository is also the home of the official Firebase MCP Server. For more information, please see the [Firebase MCP Server documentation](./src/mcp).

- Deploy code and assets to your Firebase projects
- Run a local web server for your Firebase Hosting site
- Interact with data in your Firebase database
- Import/Export users into/from Firebase Auth

To get started with the Firebase CLI, read the full list of commands below or check out the [documentation](https://firebase.google.com/docs/cli).

## Installation

### Node Package

You can install the Firebase CLI using npm (the Node Package Manager). Note that you will need to install
[Node.js](http://nodejs.org/) and [npm](https://npmjs.org/). Installing Node.js should install npm as well.

To download and install the Firebase CLI run the following command:

```bash
npm install -g firebase-tools
```

This will provide you with the globally accessible `firebase` command.

### Standalone Binary

The standalone binary distribution of the Firebase CLI allows you to download a `firebase` executable
without any dependencies.

To download and install the CLI run the following command:

```bash
curl -sL firebase.tools | bash
```

## Commands

**The command `firebase --help` lists the available commands and `firebase &lt;command&gt; --help` shows more details for an individual command.**

If a command is project-specific, you must either be inside a project directory with an
active project alias or specify the Firebase project id with the `-P &lt;project_id&gt;` flag.

Below is a brief list of the available commands and their function:

### Configuration Commands

| Command        | Description                                                                                                                                     |
| -------------- | ----------------------------------------------------------------------------------------------------------------------------------------------- |
| **login**      | Authenticate to your Firebase account. Requires access to a web browser.                                                                        |
| **logout**     | Sign out of the Firebase CLI.                                                                                                                   |
| **login:ci**   | Generate an authentication token for use in non-interactive environments.                                                                       |
| **login:add**  | Authorize the CLI for an additional account.                                                                                                    |
| **login:list** | List authorized CLI accounts.                                                                                                                   |
| **login:use**  | Set the default account to use for this project                                                                                                 |
| **use**        | Set active Firebase project, manage project aliases.                                                                                            |
| **open**       | Quickly open a browser to relevant project resources.                                                                                           |
| **init**       | Setup a new Firebase project in the current directory. This command will create a `firebase.json` configuration file in your current directory. |
| **help**       | Display help information about the CLI or specific commands.                                                                                    |

Append `--no-localhost` to login (i.e., `firebase login --no-localhost`) to copy and paste code instead of starting a local server for authentication. A use case might be if you SSH into an instance somewhere and you need to authenticate to Firebase on that machine.

### Project Management Commands

| Command                  | Description                                                |
| ------------------------ | ---------------------------------------------------------- |
| **apps:create**          | Create a new Firebase app in a project.                    |
| **apps:list**            | List the registered apps of a Firebase project.            |
| **apps:sdkconfig**       | Print the configuration of a Firebase app.                 |
| **projects:addfirebase** | Add Firebase resources to a Google Cloud Platform project. |
| **projects:create**      | Create a new Firebase project.                             |
| **projects:list**        | Print a list of all of your Firebase projects.             |

### Deployment and Local Emulation

These commands let you deploy and interact with your Firebase services.

| Command                       | Description                                                                                                                   |
| ----------------------------- | ----------------------------------------------------------------------------------------------------------------------------- |
| **emulators:exec**            | Start the local Firebase emulators, run a test script, then shut down the emulators.                                          |
| **emulators:start**           | Start the local Firebase emulators.                                                                                           |
| **deploy**                    | Deploys your Firebase project. Relies on `firebase.json` configuration and your local project folder.                         |
| **serve**                     | Start a local server with your Firebase Hosting configuration and HTTPS-triggered Cloud Functions. Relies on `firebase.json`. |
| **setup:emulators:database**  | Downloads the database emulator.                                                                                              |
| **setup:emulators:firestore** | Downloads the firestore emulator.                                                                                             |

### App Distribution Commands

| Command                              | Description                                                                              |
| ------------------------------------ | ---------------------------------------------------------------------------------------- |
| **appdistribution:distribute**       | Upload a release binary and optionally distribute it to testers and run automated tests. |
| **appdistribution:testers:list**     | List testers in project.                                                                 |
| **appdistribution:testers:add**      | Add testers to project (and group, if specified via flag).                               |
| **appdistribution:testers:remove**   | Remove testers from a project (or group, if specified via flag).                         |
| **appdistribution:groups:list**      | List groups (of testers).                                                                |
| **appdistribution:groups:create**    | Create a group (of testers).                                                             |
| **appdistribution:groups:delete**    | Delete a group (of testers).                                                             |
| **appdistribution:testcases:export** | Export test cases as a YAML file.                                                        |
| **appdistribution:testcases:import** | Import test cases from YAML file.                                                        |

### Auth Commands

| Command         | Description                                            |
| --------------- | ------------------------------------------------------ |
| **auth:import** | Batch importing accounts into Firebase from data file. |
| **auth:export** | Batch exporting accounts from Firebase into data file. |

Detailed doc is [here](https://firebase.google.com/docs/cli/auth).

### Realtime Database Commands

| Command                       | Description                                                                                                                                 |
| ----------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------- |
| **database:get**              | Fetch data from the current project&#039;s database and display it as JSON. Supports querying on indexed data.                                   |
| **database:set**              | Replace all data at a specified location in the current project&#039;s database. Takes input from file, STDIN, or command-line argument.         |
| **database:push**             | Push new data to a list at a specified location in the current project&#039;s database. Takes input from file, STDIN, or command-line argument.  |
| **database:remove**           | Delete all data at a specified location in the current project&#039;s database.                                                                  |
| **database:update**           | Perform a partial update at a specified location in the current project&#039;s database. Takes input from file, STDIN, or command-line argument. |
| **database:profile**          | Profile database usage and generate a report.                                                                                               |
| **database:instances:create** | Create a realtime database instance.                                                                                                        |
| **database:instances:list**   | List realtime database instances.                                                                                                           |
| **database:settings:get**     | Read the realtime database setting at path                                                                                                  |
| **database:settings:set**     | Set the realtime database setting at path.                                                                                                  |

### Extensions Commands

| Command             | Description                                                                                 |
| ------------------- | ------------------------------------------------------------------------------------------- |
| **ext**             | Display information on how to use ext commands and extensions installed to your project.    |
| **ext:configure**   | Configure an existing extension instance.                                                   |
| **ext:info**        | Display information about an extension by name (extensionName@x.y.z for a specific version) |
| **ext:install**     | Install an extension.                                                                       |
| **ext:sdk:install** | Install and SDK for an extension so you can define the extension in a functions codebase.   |
| **ext:list**        | List all the extensions that are installed in your Firebase project.                        |
| **ext:uninstall**   | Uninstall an extension that is installed in your Firebase project by Instance ID.           |
| **ext:update**      | Update an existing extension instance to the latest version.                                |

### Cloud Firestore Commands

| Command               | Description                                                                                                         |
| --------------------- | ------------------------------------------------------------------------------------------------------------------- |
| **firestore:delete**  | Delete documents or collections from the current project&#039;s database. Supports recursive deletion of subcollections. |
| **firestore:indexes** | List all deployed indexes from the current project.                                                                 |

### Cloud Functions Commands

| Command                       | Description                                                                                                  |
| ----------------------------- | ------------------------------------------------------------------------------------------------------------ |
| **functions:log**             | Read logs from deployed Cloud Functions.                                                                     |
| **functions:list**            | List all deployed functions in your Firebase project.                                                        |
| **functions:config:set**      | Store runtime configuration values for the current project&#039;s Cloud Functions.                                |
| **functions:config:get**      | Retrieve existing configuration values for the current project&#039;s Cloud Functions.                            |
| **functions:config:unset**    | Remove values from the current project&#039;s runtime configuration.                                              |
| **functions:config:clone**    | Copy runtime configuration from one project environment to another.                                          |
| **functions:secrets:set**     | Create or update a secret for use in Cloud Functions for Firebase.                                           |
| **functions:secrets:get**     | Get metadata for secret and its versions.                                                                    |
| **functions:secrets:access**  | Access secret value given secret and its version. Defaults to accessing the latest version.                  |
| **functions:secrets:prune**   | Destroys unused secrets.                                                                                     |
| **functions:secrets:destroy** | Destroy a secret. Defaults to destroying the latest version.                                                 |
| **functions:delete**          | Delete one or more Cloud Functions by name or group name.                                                    |
| **functions:shell**           | Locally emulate functions and start Node.js shell where these local functions can be invoked with test data. |

### Hosting Commands

| Command             | Description                                                                                                                                                          |
| ------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| **hosting:disable** | Stop serving Firebase Hosting traffic for the active project. A &quot;Site Not Found&quot; message will be displayed at your project&#039;s Hosting URL after running this command. |

### Remote Config Commands

| Command                             | Description                                                                                                |
| ----------------------------------- | ---------------------------------------------------------------------------------------------------------- |
| **remoteconfig:get**                | Get a Firebase project&#039;s Remote Config template.                                                           |
| **remoteconfig:versions:list**      | Get a list of the most recent Firebase Remote Config template versions that have been published.           |
| **remoteconfig:rollback**           | Roll back a project&#039;s published Remote Config template to the version provided by `--version_number` flag. |
| **remoteconfig:experiments:get**    | Get a Remote Config experiment.                                                                            |
| **remoteconfig:experiments:list**   | Get a list of Remote Config experiments                                                                    |
| **remoteconfig:experiments:delete** | Delete a Remote Config experiment.                                                                         |
| **remoteconfig:rollouts:get**       | Get a Remote Config rollout.                                                                               |
| **remoteconfig:rollouts:list**      | Get a list of Remote Config rollouts.                                                                      |
| **remoteconfig:rollouts:delete**    | Delete a Remote Config rollout.                                                                            |

Use `firebase:deploy --only remoteconfig` to update and publish a project&#039;s Firebase Remote Config template.

## Authentication

### General

The Firebase CLI can use one of four authentication methods listed in descending priority:

- **User Token** - **DEPRECATED: this authentication method will be removed in a future major version of `firebase-tools`; use a service account to authenticate instead** - provide an explicit long-lived Firebase user token generated from `firebase login:ci`. Note that these tokens are extremely sensitive long-lived credentials and are not the right option for most cases. Consider using service account authorization instead. The token can be set in one of two ways:
  - Set the `--token` flag on any command, for example `firebase --token=&quot;&lt;token&gt;&quot; projects:list`.
  - Set the `FIREBASE_TOKEN` environment variable.
- **Local Login** - run `firebase login` to log in to the CLI directly as yourself. The CLI will cache an authorized user credential on your machine.
- **Service Account** - set the `GOOGLE_APPLICATION_CREDENTIALS` environment variable to point to the path of a JSON service account key file. For more details, see Google Cloud&#039;s [Getting started with authentication](https://cloud.google.com/docs/authentication/getting-started) guide.
- **Application Default Credentials** - if you use the `gcloud` CLI and log in with `gcloud auth application-default login`, the Firebase CLI will use them if none of the above credentials are present.

### Multiple Accounts

By default `firebase login` sets a single global account for use on all projects.
If you have multiple Google accounts which you use for Firebase projects you can
authorize multiple accounts and use them on a per-project or per-command basis.

To authorize an additonal account for use with the CLI, run `firebase login:add`.
You can view the list of authorized accounts with `firebase login:list`.

To set the default account for a specific Firebase project directory, run
`firebase login:use` from within the directory and select the desired account.
To check the default account for a directory, run `firebase login:list` and the
default account for the current context will be listed first.

To set the account for a specific command invocation, use the `--account` flag
with any command. For example `firebase --account=user@domain.com deploy`. The
specified account must have already been added to the Firebase CLI using
`firebase login:add`.

### Cloud Functions Emulator

The Cloud Functions emulator is exposed through commands like `emulators:start`,
`serve` and `functions:shell`. Emulated Cloud Functions run as independent `node` processes
on your development machine which means they have their own credential discovery mechanism.

By default these `node` processes are not able to discover credentials from `firebase login`.
In order to provide a better development experience, when you are logged in to the CLI
through `firebase login` we take the user credentials and construct a temporary credential
that we pass into the emulator through `GOOGLE_APPLICATION_CREDENTIALS`. We **only** do this
if you ha

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[toeverything/AFFiNE]]></title>
            <link>https://github.com/toeverything/AFFiNE</link>
            <guid>https://github.com/toeverything/AFFiNE</guid>
            <pubDate>Fri, 31 Oct 2025 00:47:57 GMT</pubDate>
            <description><![CDATA[There can be more than Notion and Miro. AFFiNE(pronounced […ô‚Äòfain]) is a next-gen knowledge base that brings planning, sorting and creating all together. Privacy first, open-source, customizable and ready to use.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/toeverything/AFFiNE">toeverything/AFFiNE</a></h1>
            <p>There can be more than Notion and Miro. AFFiNE(pronounced […ô‚Äòfain]) is a next-gen knowledge base that brings planning, sorting and creating all together. Privacy first, open-source, customizable and ready to use.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 58,728</p>
            <p>Forks: 3,992</p>
            <p>Stars today: 420 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;

&lt;h1 style=&quot;border-bottom: none&quot;&gt;
    &lt;b&gt;&lt;a href=&quot;https://affine.pro&quot;&gt;AFFiNE.Pro&lt;/a&gt;&lt;/b&gt;&lt;br /&gt;
    Write, Draw and Plan All at Once
    &lt;br&gt;
&lt;/h1&gt;
&lt;a href=&quot;https://affine.pro/download&quot;&gt;
    &lt;img alt=&quot;affine logo&quot; src=&quot;https://cdn.affine.pro/Github_hero_image2.png&quot; style=&quot;width: 100%&quot;&gt;
&lt;/a&gt;
&lt;br/&gt;
&lt;p align=&quot;center&quot;&gt;
  A privacy-focused, local-first, open-source, and ready-to-use alternative for Notion &amp; Miro. &lt;br /&gt;
  One hyper-fused platform for wildly creative minds.
&lt;/p&gt;

&lt;br/&gt;

&lt;br/&gt;
&lt;a href=&quot;https://www.producthunt.com/posts/affine-3?utm_source=badge-featured&amp;utm_medium=badge&amp;utm_souce=badge-affine&amp;#0045;3&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=440671&amp;theme=light&quot; alt=&quot;AFFiNE - One&amp;#0032;app&amp;#0032;for&amp;#0032;all&amp;#0032;&amp;#0045;&amp;#0032;Where&amp;#0032;Notion&amp;#0032;meets&amp;#0032;Miro | Product Hunt&quot; style=&quot;width: 250px; height: 54px;&quot; width=&quot;250&quot; height=&quot;54&quot; /&gt;&lt;/a&gt;
&lt;br/&gt;
&lt;br/&gt;

&lt;div align=&quot;left&quot; valign=&quot;middle&quot;&gt;
&lt;a href=&quot;https://runblaze.dev&quot;&gt;
 &lt;picture&gt;
   &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://www.runblaze.dev/logo_dark.png&quot;&gt;
   &lt;img align=&quot;right&quot; src=&quot;https://www.runblaze.dev/logo_light.png&quot; height=&quot;102px&quot;/&gt;
 &lt;/picture&gt;
&lt;/a&gt;

&lt;br style=&quot;display: none;&quot;/&gt;

_Special thanks to [Blaze](https://runblaze.dev) for their support of this project. They provide high-performance Apple Silicon macOS and Linux (AMD64 &amp; ARM64) runners for GitHub Actions, greatly reducing our automated build times._

&lt;/div&gt;

&lt;br/&gt;
&lt;br/&gt;

&lt;div align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://affine.pro&quot;&gt;Home Page&lt;/a&gt; |
    &lt;a href=&quot;https://affine.pro/redirect/discord&quot;&gt;Discord&lt;/a&gt; |
    &lt;a href=&quot;https://app.affine.pro&quot;&gt;Live Demo&lt;/a&gt; |
    &lt;a href=&quot;https://affine.pro/blog/&quot;&gt;Blog&lt;/a&gt; |
    &lt;a href=&quot;https://docs.affine.pro/&quot;&gt;Documentation&lt;/a&gt;
&lt;/div&gt;
&lt;br/&gt;

[![Releases](https://img.shields.io/github/downloads/toeverything/AFFiNE/total)](https://github.com/toeverything/AFFiNE/releases/latest)
[![All Contributors][all-contributors-badge]](#contributors)
[![TypeScript-version-icon]](https://www.typescriptlang.org/)

&lt;/div&gt;

&lt;br /&gt;
&lt;div align=&quot;center&quot;&gt;
&lt;em&gt;Docs, canvas and tables are hyper-merged with AFFiNE - just like the word affine (…ôÀàf å…™n | a-fine).&lt;/em&gt;
&lt;/div&gt;
&lt;br /&gt;

&lt;div align=&quot;center&quot;&gt;
&lt;img src=&quot;https://github.com/toeverything/AFFiNE/assets/79301703/49a426bb-8d2b-4216-891a-fa5993642253&quot; style=&quot;width: 100%&quot;/&gt;
&lt;/div&gt;

## Getting started &amp; staying tuned with us.

Star us, and you will receive all release notifications from GitHub without any delay!

&lt;img src=&quot;https://user-images.githubusercontent.com/79301703/230891830-0110681e-8c7e-483b-b6d9-9e42b291b9ef.gif&quot; style=&quot;width: 100%&quot;/&gt;

## What is AFFiNE

[AFFiNE](https://affine.pro) is an open-source, all-in-one workspace and an operating system for all the building blocks that assemble your knowledge base and much more -- wiki, knowledge management, presentation and digital assets. It&#039;s a better alternative to Notion and Miro.

## Features

**A true canvas for blocks in any form. Docs and whiteboard are now fully merged.**

- Many editor apps claim to be a canvas for productivity, but AFFiNE is one of the very few which allows you to put any building block on an edgeless canvas -- rich text, sticky notes, any embedded web pages, multi-view databases, linked pages, shapes and even slides. We have it all.

**Multimodal AI partner ready to kick in any work**

- Write up professional work report? Turn an outline into expressive and presentable slides? Summary an article into a well-structured mindmap? Sorting your job plan and backlog for tasks? Or... draw and code prototype apps and web pages directly all with one prompt? With you, [AFFiNE AI](https://affine.pro/ai) pushes your creativity to the edge of your imagination, just like [Canvas AI](https://affine.pro/blog/best-canvas-ai) to generate mind map for brainstorming.

**Local-first &amp; Real-time collaborative**

- We love the idea of local-first that you always own your data on your disk, in spite of the cloud. Furthermore, AFFiNE supports real-time sync and collaborations on web and cross-platform clients.

**Self-host &amp; Shape your own AFFiNE**

- You have the freedom to manage, self-host, fork and build your own AFFiNE. Plugin community and third-party blocks are coming soon. More tractions on [Blocksuite](https://blocksuite.io). Check there to learn how to [self-host AFFiNE](https://docs.affine.pro/self-host-affine).

## Acknowledgement

‚ÄúWe shape our tools and thereafter our tools shape us‚Äù. A lot of pioneers have inspired us along the way, e.g.:

- Quip &amp; Notion with their great concept of ‚Äúeverything is a block‚Äù
- Trello with their Kanban
- Airtable &amp; Miro with their no-code programmable datasheets
- Miro &amp; Whimiscal with their edgeless visual whiteboard
- Remote &amp; Capacities with their object-based tag system

There is a large overlap of their atomic ‚Äúbuilding blocks‚Äù between these apps. They are not open source, nor do they have a plugin system like Vscode for contributors to customize. We want to have something that contains all the features we love and also goes one step even further.

Thanks for checking us out, we appreciate your interest and sincerely hope that AFFiNE resonates with you! üéµ Checking https://affine.pro/ for more details ions.

## Contributing

| Bug Reports                                                                                                                                         | Feature Requests                                                                                                                                               | Questions/Discussions                                                         | AFFiNE Community                                          |
| --------------------------------------------------------------------------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------- | --------------------------------------------------------- |
| [Create a bug report](https://github.com/toeverything/AFFiNE/issues/new?assignees=&amp;labels=bug%2Cproduct-review&amp;template=BUG-REPORT.yml&amp;title=TITLE) | [Submit a feature request](https://github.com/toeverything/AFFiNE/issues/new?assignees=&amp;labels=feat%2Cproduct-review&amp;template=FEATURE-REQUEST.yml&amp;title=TITLE) | [Check GitHub Discussion](https://github.com/toeverything/AFFiNE/discussions) | [Vist the AFFiNE Community](https://community.affine.pro) |
| Something isn&#039;t working as expected                                                                                                                 | An idea for a new feature, or improvements                                                                                                                     | Discuss and ask questions                                                     | A place to ask, learn and engage with others              |

Calling all developers, testers, tech writers and more! Contributions of all types are more than welcome, you can read more in [docs/types-of-contributions.md](docs/types-of-contributions.md). If you are interested in contributing code, read our [docs/CONTRIBUTING.md](docs/CONTRIBUTING.md) and feel free to check out our GitHub issues to get stuck in to show us what you‚Äôre made of.

**Before you start contributing, please make sure you have read and accepted our [Contributor License Agreement]. To indicate your agreement, simply edit this file and submit a pull request.**

For **bug reports**, **feature requests** and other **suggestions** you can also [create a new issue](https://github.com/toeverything/AFFiNE/issues/new/choose) and choose the most appropriate template for your feedback.

For **translation** and **language support** you can visit our [i18n General Space](https://community.affine.pro/c/i18n-general).

Looking for **other ways to contribute** and wondering where to start? Check out the [AFFiNE Ambassador program](https://community.affine.pro/c/start-here/affine-ambassador), we work closely with passionate community members and provide them with a wide range of support and resources.

If you have questions, you are welcome to contact us. One of the best places to get more info and learn more is in the [AFFiNE Community](https://community.affine.pro) where you can engage with other like-minded individuals.

## Templates

AFFiNE now provides pre-built [templates](https://affine.pro/templates) from our team. Following are the Top 10 most popular templates among AFFiNE users,if you want to contribute, you can contribute your own template so other people can use it too.

- [vision board template](https://affine.pro/templates/category-vision-board-template)
- [one pager template](https://affine.pro/templates/category-one-pager-template-free)
- [sample lesson plan math template](https://affine.pro/templates/sample-lesson-plan-math-template)
- [grr lesson plan template free](https://affine.pro/templates/grr-lesson-plan-template-free)
- [free editable lesson plan template for pre k](https://affine.pro/templates/free-editable-lesson-plan-template-for-pre-k)
- [high note collection planners](https://affine.pro/templates/high-note-collection-planners)
- [digital planner](https://affine.pro/templates/category-digital-planner)
- [ADHD Planner](https://affine.pro/templates/adhd-planner)
- [Reading Log](https://affine.pro/templates/reading-log)
- [Cornell Notes Template](https://affine.pro/templates/category-cornell-notes-template)

## Blog

Welcome to the AFFiNE blog section! Here, you‚Äôll find the latest insights, tips, and guides on how to maximize your experience with AFFiNE and AFFiNE AI, the leading Canvas AI tool for flexible note-taking and creative organization.

- [vision board template](https://affine.pro/blog/8-free-printable-vision-board-templates-examples-2023)
- [ai homework helper](https://affine.pro/blog/ai-homework-helper)
- [vision board maker](https://affine.pro/blog/vision-board-maker)
- [itinerary template](https://affine.pro/blog/free-customized-travel-itinerary-planner-templates)
- [one pager template](https://affine.pro/blog/top-12-one-pager-examples-how-to-create-your-own)
- [cornell notes template](https://affine.pro/blog/the-cornell-notes-template-and-system-learning-tips)
- [swot chart template](https://affine.pro/blog/top-10-free-editable-swot-analysis-template-examples)
- [apps like luna task](https://affine.pro/blog/apps-like-luna-task)
- [note taking ai from rough notes to mind map](https://affine.pro/blog/dynamic-AI-notes)
- [canvas ai](https://affine.pro/blog/best-canvas-ai)
- [one pager](https://affine.pro/blog/top-12-one-pager-examples-how-to-create-your-own)
- [SOP Template](https://affine.pro/blog/how-to-write-sop-step-by-step-guide-5-best-free-tools-templates)
- [Chore Chart](https://affine.pro/blog/10-best-free-chore-chart-templates-kids-adults)

## Ecosystem

| Name                                             |                            |                                                                                                                                         |
| ------------------------------------------------ | -------------------------- | --------------------------------------------------------------------------------------------------------------------------------------- |
| [@affine/component](packages/frontend/component) | AFFiNE Component Resources | ![](https://img.shields.io/codecov/c/github/toeverything/affine?style=flat-square)                                                      |
| [@toeverything/theme](packages/common/theme)     | AFFiNE theme               | [![](https://img.shields.io/npm/dm/@toeverything/theme?style=flat-square&amp;color=eee)](https://www.npmjs.com/package/@toeverything/theme) |

## Upstreams

We would also like to give thanks to open-source projects that make AFFiNE possible:

- [Blocksuite](https://github.com/toeverything/BlockSuite) - üí† BlockSuite is the open-source collaborative editor project behind AFFiNE.
- [OctoBase](https://github.com/toeverything/OctoBase) - üêô OctoBase is the open-source database behind AFFiNE, local-first, yet collaborative. A light-weight, scalable, data engine written in Rust.
- [yjs](https://github.com/yjs/yjs) - Fundamental support of CRDTs for our implementation on state management and data sync.
- [electron](https://github.com/electron/electron) - Build cross-platform desktop apps with JavaScript, HTML, and CSS.
- [React](https://github.com/facebook/react) - The library for web and native user interfaces.
- [napi-rs](https://github.com/napi-rs/napi-rs) - A framework for building compiled Node.js add-ons in Rust via Node-API.
- [Jotai](https://github.com/pmndrs/jotai) - Primitive and flexible state management for React.
- [async-call-rpc](https://github.com/Jack-Works/async-call-rpc) - A lightweight JSON RPC client &amp; server.
- [Vite](https://github.com/vitejs/vite) - Next generation frontend tooling.
- Other upstream [dependencies](https://github.com/toeverything/AFFiNE/network/dependencies).

Thanks a lot to the community for providing such powerful and simple libraries, so that we can focus more on the implementation of the product logic, and we hope that in the future our projects will also provide a more easy-to-use knowledge base for everyone.

## Contributors

We would like to express our gratitude to all the individuals who have already contributed to AFFiNE! If you have any AFFiNE-related project, documentation, tool or template, please feel free to contribute it by submitting a pull request to our curated list on GitHub: [awesome-affine](https://github.com/toeverything/awesome-affine).

&lt;a href=&quot;https://github.com/toeverything/affine/graphs/contributors&quot;&gt;
  &lt;img alt=&quot;contributors&quot; src=&quot;https://opencollective.com/affine/contributors.svg?width=890&amp;button=false&quot; /&gt;
&lt;/a&gt;

## Self-Host

Begin with Docker to deploy your own feature-rich, unrestricted version of AFFiNE. Our team is diligently updating to the latest version. For more information on how to self-host AFFiNE, please refer to our [documentation](https://docs.affine.pro/self-host-affine).

[![Run on ClawCloud](https://raw.githubusercontent.com/ClawCloud/Run-Template/refs/heads/main/Run-on-ClawCloud.svg)](https://template.run.claw.cloud/?openapp=system-fastdeploy%3FtemplateName%3Daffine)

## Hiring

Some amazing companies, including AFFiNE, are looking for developers! Are you interested in joining AFFiNE or its partners? Check out our [Discord channel](https://affine.pro/redirect/discord) for some of the latest jobs available.

## Feature Request

For feature requests, please see [community.affine.pro](https://community.affine.pro/c/feature-requests/).

## Building

### Codespaces

From the GitHub repo main page, click the green &quot;Code&quot; button and select &quot;Create codespace on master&quot;. This will open a new Codespace with the (supposedly auto-forked
AFFiNE repo cloned, built, and ready to go.

### Local

See [BUILDING.md] for instructions on how to build AFFiNE from source code.

## Contributing

We welcome contributions from everyone.
See [docs/contributing/tutorial.md](./docs/contributing/tutorial.md) for details.

## Thanks

&lt;a href=&quot;https://www.chromatic.com/&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/321738/84662277-e3db4f80-af1b-11ea-88f5-91d67a5e59f6.png&quot; width=&quot;153&quot; height=&quot;30&quot; alt=&quot;Chromatic&quot; /&gt;&lt;/a&gt;

Thanks to [Chromatic](https://www.chromatic.com/) for providing the visual testing platform that helps us review UI changes and catch visual regressions.

## License

### Editions

- AFFiNE Community Edition (CE) is the current available version, it&#039;s free for self-host under the MIT license.

- AFFiNE Enterprise Edition (EE) is yet to be published, it will have more advanced features and enterprise-oriented offerings, including but not exclusive to rebranding and SSO, advanced admin and audit, etc., you may refer to https://affine.pro/pricing for more information

See [LICENSE] for details.

[all-contributors-badge]: https://img.shields.io/github/contributors/toeverything/AFFiNE
[license]: ./LICENSE
[building.md]: ./docs/BUILDING.md
[update page]: https://affine.pro/blog?tag=Release%20Note
[jobs available]: ./docs/jobs.md
[latest packages]: https://github.com/toeverything/AFFiNE/pkgs/container/affine-self-hosted
[contributor license agreement]: https://github.com/toeverything/affine/edit/canary/.github/CLA.md
[stars-icon]: https://img.shields.io/github/stars/toeverything/AFFiNE.svg?style=flat&amp;logo=github&amp;colorB=red&amp;label=stars
[codecov]: https://codecov.io/gh/toeverything/affine/branch/canary/graphs/badge.svg?branch=canary
[node-version-icon]: https://img.shields.io/badge/node-%3E=18.16.1-success
[typescript-version-icon]: https://img.shields.io/github/package-json/dependency-version/toeverything/affine/dev/typescript
[react-version-icon]: https://img.shields.io/github/package-json/dependency-version/toeverything/AFFiNE/react?filename=packages%2Ffrontend%2Fcore%2Fpackage.json&amp;color=rgb(97%2C228%2C251)
[blocksuite-icon]: https://img.shields.io/github/package-json/dependency-version/toeverything/AFFiNE/@blocksuite/store?color=6880ff&amp;filename=packages%2Ffrontend%2Fcore%2Fpackage.json&amp;label=blocksuite
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[chatboxai/chatbox]]></title>
            <link>https://github.com/chatboxai/chatbox</link>
            <guid>https://github.com/chatboxai/chatbox</guid>
            <pubDate>Fri, 31 Oct 2025 00:47:56 GMT</pubDate>
            <description><![CDATA[User-friendly Desktop Client App for AI Models/LLMs (GPT, Claude, Gemini, Ollama...)]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/chatboxai/chatbox">chatboxai/chatbox</a></h1>
            <p>User-friendly Desktop Client App for AI Models/LLMs (GPT, Claude, Gemini, Ollama...)</p>
            <p>Language: TypeScript</p>
            <p>Stars: 37,168</p>
            <p>Forks: 3,767</p>
            <p>Stars today: 61 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;right&quot;&gt;
  &lt;a href=&quot;README.md&quot;&gt;English&lt;/a&gt; |
  &lt;a href=&quot;./doc/README-CN.md&quot;&gt;ÁÆÄ‰Ωì‰∏≠Êñá&lt;/a&gt;
&lt;/p&gt;

This is the repository for the Chatbox Community Edition, open-sourced under the GPLv3 license.

[Chatbox is going open-source Again!](https://github.com/chatboxai/chatbox/issues/2266)

We regularly sync code from the pro repo to this repo, and vice versa.

### Download for Desktop

&lt;table style=&quot;width: 100%&quot;&gt;
  &lt;tr&gt;
    &lt;td width=&quot;25%&quot; align=&quot;center&quot;&gt;
      &lt;b&gt;Windows&lt;/b&gt;
    &lt;/td&gt;
    &lt;td width=&quot;25%&quot; align=&quot;center&quot; colspan=&quot;2&quot;&gt;
      &lt;b&gt;MacOS&lt;/b&gt;
    &lt;/td&gt;
    &lt;td width=&quot;25%&quot; align=&quot;center&quot;&gt;
      &lt;b&gt;Linux&lt;/b&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr style=&quot;text-align: center&quot;&gt;
    &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;
      &lt;a href=&#039;https://chatboxai.app/?c=download-windows&#039;&gt;
        &lt;img src=&#039;./doc/statics/windows.png&#039; style=&quot;height:24px; width: 24px&quot; /&gt;
        &lt;br /&gt;
        &lt;b&gt;Setup.exe&lt;/b&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;
      &lt;a href=&#039;https://chatboxai.app/?c=download-mac-intel&#039;&gt;
        &lt;img src=&#039;./doc/statics/mac.png&#039; style=&quot;height:24px; width: 24px&quot; /&gt;
        &lt;br /&gt;
        &lt;b&gt;Intel&lt;/b&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;
      &lt;a href=&#039;https://chatboxai.app/?c=download-mac-aarch&#039;&gt;
        &lt;img src=&#039;./doc/statics/mac.png&#039; style=&quot;height:24px; width: 24px&quot; /&gt;
        &lt;br /&gt;
        &lt;b style=&quot;white-space: nowrap;&quot;&gt;Apple Silicon&lt;/b&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;
      &lt;a href=&#039;https://chatboxai.app/?c=download-linux&#039;&gt;
        &lt;img src=&#039;./doc/statics/linux.png&#039; style=&quot;height:24px; width: 24px&quot; /&gt;
        &lt;br /&gt;
        &lt;b&gt;AppImage&lt;/b&gt;
      &lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

### Download for iOS/Android

&lt;a href=&#039;https://apps.apple.com/app/chatbox-ai/id6471368056&#039; style=&#039;margin-right: 4px&#039;&gt;
&lt;img src=&#039;./doc/statics/app_store.webp&#039; style=&quot;height:38px;&quot; /&gt;
&lt;/a&gt;
&lt;a href=&#039;https://play.google.com/store/apps/details?id=xyz.chatboxapp.chatbox&#039; style=&#039;margin-right: 4px&#039;&gt;
&lt;img src=&#039;./doc/statics/google_play.png&#039; style=&quot;height:38px;&quot; /&gt;
&lt;/a&gt;
&lt;a href=&#039;https://chatboxai.app/install?download=android_apk&#039; style=&#039;margin-right: 4px; display: inline-flex; justify-content: center&#039;&gt;
&lt;img src=&#039;./doc/statics/android.png&#039; style=&quot;height:28px; display: inline-block&quot; /&gt;
.APK
&lt;/a&gt;

For more information: [chatboxai.app](https://chatboxai.app/)

---

&lt;h1 align=&quot;center&quot;&gt;
&lt;img src=&#039;./doc/statics/icon.png&#039; width=&#039;30&#039;&gt;
&lt;span&gt;
    Chatbox
    &lt;span style=&quot;font-size:8px; font-weight: normal;&quot;&gt;(Community Edition)&lt;/span&gt;
&lt;/span&gt;
&lt;/h1&gt;
&lt;p align=&quot;center&quot;&gt;
    &lt;em&gt;Your Ultimate AI Copilot on the Desktop. &lt;br /&gt;Chatbox is a desktop client for ChatGPT, Claude and other LLMs, available on Windows, Mac, Linux&lt;/em&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;a href=&quot;https://github.com/chatboxai/chatbox/releases&quot; target=&quot;_blank&quot;&gt;
&lt;img alt=&quot;macOS&quot; src=&quot;https://img.shields.io/badge/-macOS-black?style=flat-square&amp;logo=apple&amp;logoColor=white&quot; /&gt;
&lt;/a&gt;
&lt;a href=&quot;https://github.com/chatboxai/chatbox/releases&quot; target=&quot;_blank&quot;&gt;
&lt;img alt=&quot;Windows&quot; src=&quot;https://img.shields.io/badge/-Windows-blue?style=flat-square&amp;logo=windows&amp;logoColor=white&quot; /&gt;
&lt;/a&gt;
&lt;a href=&quot;https://github.com/chatboxai/chatbox/releases&quot; target=&quot;_blank&quot;&gt;
&lt;img alt=&quot;Linux&quot; src=&quot;https://img.shields.io/badge/-Linux-yellow?style=flat-square&amp;logo=linux&amp;logoColor=white&quot; /&gt;
&lt;/a&gt;
&lt;a href=&quot;https://github.com/chatboxai/chatbox/releases&quot; target=&quot;_blank&quot;&gt;
&lt;img alt=&quot;Downloads&quot; src=&quot;https://img.shields.io/github/downloads/chatboxai/chatbox/total.svg?style=flat&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;a href=&quot;https://www.producthunt.com/posts/chatbox?utm_source=badge-featured&amp;utm_medium=badge&amp;utm_souce=badge-chatbox&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=429547&amp;theme=light&quot; alt=&quot;Chatbox - Better&amp;#0032;UI&amp;#0032;&amp;#0038;&amp;#0032;Desktop&amp;#0032;App&amp;#0032;for&amp;#0032;ChatGPT&amp;#0044;&amp;#0032;Claude&amp;#0032;and&amp;#0032;other&amp;#0032;LLMs&amp;#0046; | Product Hunt&quot; style=&quot;width: 150px; height: 30px;&quot; width=&quot;100&quot; height=&quot;40&quot; /&gt;&lt;/a&gt;

&lt;a href=&quot;./doc/statics/snapshot_light.png&quot;&gt;
&lt;img src=&quot;./doc/statics/snapshot_light.png&quot; width=&quot;400&quot;/&gt;
&lt;/a&gt;
&lt;a href=&quot;./doc/statics/snapshot_dark.png&quot;&gt;
&lt;img src=&quot;./doc/statics/snapshot_dark.png&quot; width=&quot;400&quot;/&gt;
&lt;/a&gt;

&lt;!-- &lt;table&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;img src=&quot;./dec/../doc/demo_mobile_1.png&quot; alt=&quot;App Screenshot&quot; style=&quot;box-shadow: 2px 2px 10px rgba(0,0,0,0.1); border: 1px solid #ddd; border-radius: 8px; height: 300px&quot; /&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;img src=&quot;./dec/../doc/demo_mobile_2.png&quot; alt=&quot;App Screenshot&quot; style=&quot;box-shadow: 2px 2px 10px rgba(0,0,0,0.1); border: 1px solid #ddd; border-radius: 8px; height: 300px&quot; /&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt; --&gt;

## Features

-   **Local Data Storage**  
    :floppy_disk: Your data remains on your device, ensuring it never gets lost and maintains your privacy.

-   **No-Deployment Installation Packages**  
    :package: Get started quickly with downloadable installation packages. No complex setup necessary!

-   **Support for Multiple LLM Providers**  
    :gear: Seamlessly integrate with a variety of cutting-edge language models:

    -   OpenAI (ChatGPT)
    -   Azure OpenAI
    -   Claude
    -   Google Gemini Pro
    -   Ollama (enable access to local models like llama2, Mistral, Mixtral, codellama, vicuna, yi, and solar)
    -   ChatGLM-6B

-   **Image Generation with Dall-E-3**  
    :art: Create the images of your imagination with Dall-E-3.

-   **Enhanced Prompting**  
    :speech_balloon: Advanced prompting features to refine and focus your queries for better responses.

-   **Keyboard Shortcuts**  
    :keyboard: Stay productive with shortcuts that speed up your workflow.

-   **Markdown, Latex &amp; Code Highlighting**  
    :scroll: Generate messages with the full power of Markdown and Latex formatting, coupled with syntax highlighting for various programming languages, enhancing readability and presentation.

-   **Prompt Library &amp; Message Quoting**  
    :books: Save and organize prompts for reuse, and quote messages for context in discussions.

-   **Streaming Reply**  
    :arrow_forward: Provide rapid responses to your interactions with immediate, progressive replies.

-   **Ergonomic UI &amp; Dark Theme**  
    :new_moon: A user-friendly interface with a night mode option for reduced eye strain during extended use.

-   **Team Collaboration**  
    :busts_in_silhouette: Collaborate with ease and share OpenAI API resources among your team. [Learn More](./team-sharing/README.md)

-   **Cross-Platform Availability**  
    :computer: Chatbox is ready for Windows, Mac, Linux users.

-   **Access Anywhere with the Web Version**  
    :globe_with_meridians: Use the web application on any device with a browser, anywhere.

-   **iOS &amp; Android**  
    :phone: Use the mobile applications that will bring this power to your fingertips on the go.

-   **Multilingual Support**  
    :earth_americas: Catering to a global audience by offering support in multiple languages:

    -   English
    -   ÁÆÄ‰Ωì‰∏≠Êñá (Simplified Chinese)
    -   ÁπÅÈ´î‰∏≠Êñá (Traditional Chinese)
    -   Êó•Êú¨Ë™û (Japanese)
    -   ÌïúÍµ≠Ïñ¥ (Korean)
    -   Fran√ßais (French)
    -   Deutsch (German)
    -   –†—É—Å—Å–∫–∏–π (Russian)
    -   Espa√±ol (Spanish)

-   **And More...**  
    :sparkles: Constantly enhancing the experience with new features!

## FAQ

-   [Frequently Asked Questions](./doc/FAQ.md)

## Why I made Chatbox?

I developed Chatbox initially because I was debugging some prompts and found myself in need of a simple and easy-to-use prompt and API debugging tool. I thought there might be more people who needed such a tool, so I open-sourced it.

At first, I didn&#039;t know that it would be so popular. I listened to the feedback from the open-source community and continued to develop and improve it. Now, it has become a very useful AI desktop application. There are many users who love Chatbox, and they not only use it for developing and debugging prompts, but also for daily chatting, and even to do some more interesting things like using well-designed prompts to make AI play various professional roles to assist them in everyday work...

## How to Contribute

Any form of contribution is welcome, including but not limited to:

-   Submitting issues
-   Submitting pull requests
-   Submitting feature requests
-   Submitting bug reports
-   Submitting documentation revisions
-   Submitting translations
-   Submitting any other forms of contribution

## Prerequisites

- Node.js (v20.x ‚Äì v22.x)
- npm (required ‚Äì pnpm is not supported)

## Build Instructions

1. Clone the repository from Github

```bash
git clone https://github.com/chatboxai/chatbox.git
```

2. Install the required dependencies

```bash
npm install
```

3. Start the application (in development mode)

```bash
npm run dev
```

4. Build the application, package the installer for current platform

```bash
npm run package
```

5. Build the application, package the installer for all platforms

```bash
npm run package:all
```

## Star History

[![Star History Chart](https://api.star-history.com/svg?repos=chatboxai/chatbox&amp;type=Date)](https://star-history.com/#chatboxai/chatbox&amp;Date)

## Contact

[Twitter](https://x.com/ChatboxAI_HQ) | [Email](mailto:hi@chatboxai.com)

## License

[LICENSE](./LICENSE)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[chaitin/PandaWiki]]></title>
            <link>https://github.com/chaitin/PandaWiki</link>
            <guid>https://github.com/chaitin/PandaWiki</guid>
            <pubDate>Fri, 31 Oct 2025 00:47:55 GMT</pubDate>
            <description><![CDATA[PandaWiki ÊòØ‰∏ÄÊ¨æ AI Â§ßÊ®°ÂûãÈ©±Âä®ÁöÑÂºÄÊ∫êÁü•ËØÜÂ∫ìÊê≠Âª∫Á≥ªÁªüÔºåÂ∏ÆÂä©‰Ω†Âø´ÈÄüÊûÑÂª∫Êô∫ËÉΩÂåñÁöÑ ‰∫ßÂìÅÊñáÊ°£„ÄÅÊäÄÊúØÊñáÊ°£„ÄÅFAQ„ÄÅÂçöÂÆ¢Á≥ªÁªüÔºåÂÄüÂä©Â§ßÊ®°ÂûãÁöÑÂäõÈáè‰∏∫‰Ω†Êèê‰æõ AI Âàõ‰Ωú„ÄÅAI ÈóÆÁ≠î„ÄÅAI ÊêúÁ¥¢Á≠âËÉΩÂäõ„ÄÇ]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/chaitin/PandaWiki">chaitin/PandaWiki</a></h1>
            <p>PandaWiki ÊòØ‰∏ÄÊ¨æ AI Â§ßÊ®°ÂûãÈ©±Âä®ÁöÑÂºÄÊ∫êÁü•ËØÜÂ∫ìÊê≠Âª∫Á≥ªÁªüÔºåÂ∏ÆÂä©‰Ω†Âø´ÈÄüÊûÑÂª∫Êô∫ËÉΩÂåñÁöÑ ‰∫ßÂìÅÊñáÊ°£„ÄÅÊäÄÊúØÊñáÊ°£„ÄÅFAQ„ÄÅÂçöÂÆ¢Á≥ªÁªüÔºåÂÄüÂä©Â§ßÊ®°ÂûãÁöÑÂäõÈáè‰∏∫‰Ω†Êèê‰æõ AI Âàõ‰Ωú„ÄÅAI ÈóÆÁ≠î„ÄÅAI ÊêúÁ¥¢Á≠âËÉΩÂäõ„ÄÇ</p>
            <p>Language: TypeScript</p>
            <p>Stars: 6,860</p>
            <p>Forks: 631</p>
            <p>Stars today: 31 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;/images/banner.png&quot; width=&quot;400&quot; /&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a target=&quot;_blank&quot; href=&quot;https://ly.safepoint.cloud/Br48PoX&quot;&gt;üìñ ÂÆòÊñπÁΩëÁ´ô&lt;/a&gt; &amp;nbsp; | &amp;nbsp;
  &lt;a target=&quot;_blank&quot; href=&quot;/images/wechat.png&quot;&gt;üôã‚Äç‚ôÇÔ∏è ÂæÆ‰ø°‰∫§ÊµÅÁæ§&lt;/a&gt;
&lt;/p&gt;

## üëã È°πÁõÆ‰ªãÁªç

PandaWiki ÊòØ‰∏ÄÊ¨æ AI Â§ßÊ®°ÂûãÈ©±Âä®ÁöÑ**ÂºÄÊ∫êÁü•ËØÜÂ∫ìÊê≠Âª∫Á≥ªÁªü**ÔºåÂ∏ÆÂä©‰Ω†Âø´ÈÄüÊûÑÂª∫Êô∫ËÉΩÂåñÁöÑ **‰∫ßÂìÅÊñáÊ°£„ÄÅÊäÄÊúØÊñáÊ°£„ÄÅFAQ„ÄÅÂçöÂÆ¢Á≥ªÁªü**ÔºåÂÄüÂä©Â§ßÊ®°ÂûãÁöÑÂäõÈáè‰∏∫‰Ω†Êèê‰æõ **AI Âàõ‰Ωú„ÄÅAI ÈóÆÁ≠î„ÄÅAI ÊêúÁ¥¢** Á≠âËÉΩÂäõ„ÄÇ

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;/images/setup.png&quot; width=&quot;800&quot; /&gt;
&lt;/p&gt;

## ‚ö°Ô∏è ÁïåÈù¢Â±ïÁ§∫

| PandaWiki ÊéßÂà∂Âè∞                                 | Wiki ÁΩëÁ´ôÂâçÂè∞                                    |
| ------------------------------------------------ | ------------------------------------------------ |
| &lt;img src=&quot;/images/screenshot-1.png&quot; width=370 /&gt; | &lt;img src=&quot;/images/screenshot-2.png&quot; width=370 /&gt; |
| &lt;img src=&quot;/images/screenshot-3.png&quot; width=370 /&gt; | &lt;img src=&quot;/images/screenshot-4.png&quot; width=370 /&gt; |

## üî• ÂäüËÉΩ‰∏éÁâπËâ≤

- AI È©±Âä®Êô∫ËÉΩÂåñÔºöAI ËæÖÂä©Âàõ‰Ωú„ÄÅAI ËæÖÂä©ÈóÆÁ≠î„ÄÅAI ËæÖÂä©ÊêúÁ¥¢„ÄÇ
- Âº∫Â§ßÁöÑÂØåÊñáÊú¨ÁºñËæëËÉΩÂäõÔºöÂÖºÂÆπ Markdown Âíå HTMLÔºåÊîØÊåÅÂØºÂá∫‰∏∫ word„ÄÅpdf„ÄÅmarkdown Á≠âÂ§öÁßçÊ†ºÂºè„ÄÇ
- ËΩªÊùæ‰∏éÁ¨¨‰∏âÊñπÂ∫îÁî®ËøõË°åÈõÜÊàêÔºöÊîØÊåÅÂÅöÊàêÁΩëÈ°µÊåÇ‰ª∂ÊåÇÂú®ÂÖ∂‰ªñÁΩëÁ´ô‰∏äÔºåÊîØÊåÅÂÅöÊàêÈíâÈíâ„ÄÅÈ£û‰π¶„ÄÅ‰ºÅ‰∏öÂæÆ‰ø°Á≠âËÅäÂ§©Êú∫Âô®‰∫∫„ÄÇ
- ÈÄöËøáÁ¨¨‰∏âÊñπÊù•Ê∫êÂØºÂÖ•ÂÜÖÂÆπÔºöÊ†πÊçÆÁΩëÈ°µ URL ÂØºÂÖ•„ÄÅÈÄöËøáÁΩëÁ´ô Sitemap ÂØºÂÖ•„ÄÅÈÄöËøá RSS ËÆ¢ÈòÖ„ÄÅÈÄöËøáÁ¶ªÁ∫øÊñá‰ª∂ÂØºÂÖ•Á≠â„ÄÇ

## üöÄ ‰∏äÊâãÊåáÂçó

### ÂÆâË£Ö PandaWiki

‰Ω†ÈúÄË¶Å‰∏ÄÂè∞ÊîØÊåÅ Docker 20.x ‰ª•‰∏äÁâàÊú¨ÁöÑ Linux Á≥ªÁªüÊù•ÂÆâË£Ö PandaWiki„ÄÇ

‰ΩøÁî® root ÊùÉÈôêÁôªÂΩï‰Ω†ÁöÑÊúçÂä°Âô®ÔºåÁÑ∂ÂêéÊâßË°å‰ª•‰∏ãÂëΩ‰ª§„ÄÇ

```bash
bash -c &quot;$(curl -fsSLk https://release.baizhi.cloud/panda-wiki/manager.sh)&quot;
```

Ê†πÊçÆÂëΩ‰ª§ÊèêÁ§∫ÁöÑÈÄâÈ°πËøõË°åÂÆâË£ÖÔºåÂëΩ‰ª§ÊâßË°åËøáÁ®ãÂ∞Ü‰ºöÊåÅÁª≠Âá†ÂàÜÈíüÔºåËØ∑ËÄêÂøÉÁ≠âÂæÖ„ÄÇ

&gt; ÂÖ≥‰∫éÂÆâË£Ö‰∏éÈÉ®ÁΩ≤ÁöÑÊõ¥Â§öÁªÜËäÇËØ∑ÂèÇËÄÉ [ÂÆâË£Ö PandaWiki](https://pandawiki.docs.baizhi.cloud/node/01971602-bb4e-7c90-99df-6d3c38cfd6d5)„ÄÇ

### ÁôªÂΩï PandaWiki

Âú®‰∏ä‰∏ÄÊ≠•‰∏≠ÔºåÂÆâË£ÖÂëΩ‰ª§ÊâßË°åÁªìÊùüÂêéÔºå‰Ω†ÁöÑÁªàÁ´Ø‰ºöËæìÂá∫‰ª•‰∏ãÂÜÖÂÆπ„ÄÇ

```
SUCCESS  ÊéßÂà∂Âè∞‰ø°ÊÅØ:
SUCCESS    ËÆøÈóÆÂú∞ÂùÄ(ÂÜÖÁΩë): http://*.*.*.*:2443
SUCCESS    ËÆøÈóÆÂú∞ÂùÄ(Â§ñÁΩë): http://*.*.*.*:2443
SUCCESS    Áî®Êà∑Âêç: admin
SUCCESS    ÂØÜÁ†Å: **********************
```

‰ΩøÁî®ÊµèËßàÂô®ÊâìÂºÄ‰∏äËø∞ÂÜÖÂÆπ‰∏≠ÁöÑ ‚ÄúËÆøÈóÆÂú∞ÂùÄ‚ÄùÔºå‰Ω†Â∞ÜÁúãÂà∞ PandaWiki ÁöÑÊéßÂà∂Âè∞ÁôªÂΩïÂÖ•Âè£Ôºå‰ΩøÁî®‰∏äËø∞ÂÜÖÂÆπ‰∏≠ÁöÑ ‚ÄúÁî®Êà∑Âêç‚Äù Âíå ‚ÄúÂØÜÁ†Å‚Äù ÁôªÂΩïÂç≥ÂèØ„ÄÇ

### ÈÖçÁΩÆ AI Ê®°Âûã

&gt; PandaWiki ÊòØÁî± AI Â§ßÊ®°ÂûãÈ©±Âä®ÁöÑ Wiki Á≥ªÁªüÔºåÂú®Êú™ÈÖçÁΩÆÂ§ßÊ®°ÂûãÁöÑÊÉÖÂÜµ‰∏ã AI Âàõ‰Ωú„ÄÅAI ÈóÆÁ≠î„ÄÅAI ÊêúÁ¥¢ Á≠âÂäüËÉΩÊó†Ê≥ïÊ≠£Â∏∏‰ΩøÁî®„ÄÇ
&gt; 
È¶ñÊ¨°ÁôªÂΩïÊó∂‰ºöÊèêÁ§∫ÈúÄË¶ÅÂÖàÈÖçÁΩÆ AI Ê®°ÂûãÔºåÊ†πÊçÆ‰∏ãÊñπÂõæÁâáÈÖçÁΩÆ ‚ÄúChat Ê®°Âûã‚Äù„ÄÇ

&lt;img src=&quot;/images/modelconfig.png&quot; width=&quot;800&quot; /&gt;

&gt; Êé®Ëçê‰ΩøÁî® [ÁôæÊô∫‰∫ëÊ®°ÂûãÂπøÂú∫](https://baizhi.cloud/) Âø´ÈÄüÊé•ÂÖ• AI Ê®°ÂûãÔºåÊ≥®ÂÜåÂç≥ÂèØËé∑Ëµ† 5 ÂÖÉÁöÑÊ®°Âûã‰ΩøÁî®È¢ùÂ∫¶„ÄÇ
&gt; ÂÖ≥‰∫éÂ§ßÊ®°ÂûãÁöÑÊõ¥Â§öÈÖçÁΩÆÁªÜËäÇËØ∑ÂèÇËÄÉ [Êé•ÂÖ• AI Ê®°Âûã](https://pandawiki.docs.baizhi.cloud/node/01971616-811c-70e1-82d9-706a202b8498)„ÄÇ

### ÂàõÂª∫Áü•ËØÜÂ∫ì

‰∏ÄÂàáÈÖçÁΩÆÂ∞±Áª™ÂêéÔºå‰Ω†ÈúÄË¶ÅÂÖàÂàõÂª∫‰∏Ä‰∏™ ‚ÄúÁü•ËØÜÂ∫ì‚Äù„ÄÇ

‚ÄúÁü•ËØÜÂ∫ì‚Äù ÊòØ‰∏ÄÁªÑÊñáÊ°£ÁöÑÈõÜÂêàÔºåPandaWiki Â∞Ü‰ºöÊ†πÊçÆÁü•ËØÜÂ∫ì‰∏≠ÁöÑÊñáÊ°£Ôºå‰∏∫‰∏çÂêåÁöÑÁü•ËØÜÂ∫ìÂàÜÂà´ÂàõÂª∫ ‚ÄúWiki ÁΩëÁ´ô‚Äù„ÄÇ

&lt;img src=&quot;/images/createkb.png&quot; width=&quot;800&quot; /&gt;

&gt; ÂÖ≥‰∫éÁü•ËØÜÂ∫ìÁöÑÊõ¥Â§öÈÖçÁΩÆÁªÜËäÇËØ∑ÂèÇËÄÉ [Áü•ËØÜÂ∫ìËÆæÁΩÆ](https://pandawiki.docs.baizhi.cloud/node/01971b5e-5bea-76d2-9f89-a95f98347bb0)„ÄÇ

### üí™ ÂºÄÂßã‰ΩøÁî®

Â¶ÇÊûú‰Ω†È°∫Âà©ÂÆåÊàê‰∫Ü‰ª•‰∏äÊ≠•È™§ÔºåÈÇ£‰πàÊÅ≠Âñú‰Ω†ÔºåÂ±û‰∫é‰Ω†ÁöÑ PandaWiki Êê≠Âª∫ÊàêÂäüÔºå‰Ω†ÂèØ‰ª•Ôºö

- ËÆøÈóÆ **ÊéßÂà∂Âè∞** Êù•ÁÆ°ÁêÜ‰Ω†ÁöÑÁü•ËØÜÂ∫ìÂÜÖÂÆπ
- ËÆøÈóÆ **Wiki ÁΩëÁ´ô** ËÆ©‰Ω†ÁöÑÁî®Êà∑‰ΩøÁî®Áü•ËØÜÂ∫ì

## Á§æÂå∫‰∫§ÊµÅ

Ê¨¢ËøéÂä†ÂÖ•Êàë‰ª¨ÁöÑÂæÆ‰ø°Áæ§ËøõË°å‰∫§ÊµÅ„ÄÇ

&lt;img src=&quot;/images/wechat.png&quot; width=&quot;300&quot; /&gt;

## üôã‚Äç‚ôÇÔ∏è Ë¥°ÁåÆ

Ê¨¢ËøéÊèê‰∫§ [Pull Request](https://github.com/chaitin/PandaWiki/pulls) ÊàñÂàõÂª∫ [Issue](https://github.com/chaitin/PandaWiki/issues) Êù•Â∏ÆÂä©ÊîπËøõÈ°πÁõÆ„ÄÇ

## üìù ËÆ∏ÂèØËØÅ

Êú¨È°πÁõÆÈááÁî® GNU Affero General Public License v3.0 (AGPL-3.0) ËÆ∏ÂèØËØÅ„ÄÇËøôÊÑèÂë≥ÁùÄÔºö

- ‰Ω†ÂèØ‰ª•Ëá™Áî±‰ΩøÁî®„ÄÅ‰øÆÊîπÂíåÂàÜÂèëÊú¨ËΩØ‰ª∂
- ‰Ω†ÂøÖÈ°ª‰ª•Áõ∏ÂêåÁöÑËÆ∏ÂèØËØÅÂºÄÊ∫ê‰Ω†ÁöÑ‰øÆÊîπ
- Â¶ÇÊûú‰Ω†ÈÄöËøáÁΩëÁªúÊèê‰æõÊúçÂä°Ôºå‰πüÂøÖÈ°ªÂºÄÊ∫ê‰Ω†ÁöÑ‰ª£Á†Å
- ÂïÜ‰∏ö‰ΩøÁî®ÈúÄË¶ÅÈÅµÂÆàÁõ∏ÂêåÁöÑÂºÄÊ∫êË¶ÅÊ±Ç


## Star History

[![Star History Chart](https://api.star-history.com/svg?repos=chaitin/PandaWiki&amp;type=Date)](https://www.star-history.com/#chaitin/PandaWiki&amp;Date)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[kamranahmedse/developer-roadmap]]></title>
            <link>https://github.com/kamranahmedse/developer-roadmap</link>
            <guid>https://github.com/kamranahmedse/developer-roadmap</guid>
            <pubDate>Fri, 31 Oct 2025 00:47:54 GMT</pubDate>
            <description><![CDATA[Interactive roadmaps, guides and other educational content to help developers grow in their careers.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/kamranahmedse/developer-roadmap">kamranahmedse/developer-roadmap</a></h1>
            <p>Interactive roadmaps, guides and other educational content to help developers grow in their careers.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 342,375</p>
            <p>Forks: 43,255</p>
            <p>Stars today: 111 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[UfoMiao/zcf]]></title>
            <link>https://github.com/UfoMiao/zcf</link>
            <guid>https://github.com/UfoMiao/zcf</guid>
            <pubDate>Fri, 31 Oct 2025 00:47:53 GMT</pubDate>
            <description><![CDATA[Zero-Config Code Flow for Claude code & Codex]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/UfoMiao/zcf">UfoMiao/zcf</a></h1>
            <p>Zero-Config Code Flow for Claude code & Codex</p>
            <p>Language: TypeScript</p>
            <p>Stars: 3,252</p>
            <p>Forks: 243</p>
            <p>Stars today: 55 stars today</p>
            <h2>README</h2><pre>[![npm version][npm-version-src]][npm-version-href]
[![npm downloads][npm-downloads-src]][npm-downloads-href]
[![License][license-src]][license-href]
[![Claude Code][claude-code-src]][claude-code-href]
[![codecov][codecov-src]][codecov-href]
[![JSDocs][jsdocs-src]][jsdocs-href]
[![Ask DeepWiki][deepwiki-src]][deepwiki-href]

&lt;div align=&quot;center&quot;&gt;
  &lt;img src=&quot;./src/assets/banner.webp&quot; alt=&quot;Banner&quot;/&gt;

  &lt;h1&gt;
    ZCF - Zero-Config Code Flow
  &lt;/h1&gt;

  &lt;p align=&quot;center&quot;&gt;
  &lt;b&gt;English&lt;/b&gt; | &lt;a href=&quot;README_zh-CN.md&quot;&gt;‰∏≠Êñá&lt;/a&gt; | &lt;a href=&quot;README_ja-JP.md&quot;&gt;Êó•Êú¨Ë™û&lt;/a&gt; | &lt;a href=&quot;CHANGELOG.md&quot;&gt;Changelog&lt;/a&gt;

**‚ú® Quick Links**: [Codex Support](#-codex-support-v300-new) | [BMad Workflow](#-bmad-workflow-v27-new-feature) | [Spec Workflow](#-spec-workflow-v2124-new-feature) | [Open Web Search](#-open-web-search-v2129-new-feature) | [CCR Router](#-ccr-claude-code-router-support-v28-enhanced) | [CCometixLine](#-ccometixline-support-status-bar-tool-v299-new) | [Output Styles](#-ai-output-styles-v212-new-feature) | [Multi-Configuration Management](#-multi-configuration-management-v320-new)

&gt; Zero-config, one-click setup for Claude Code &amp; Codex with bilingual support, intelligent agent system and personalized AI assistant
&lt;/p&gt;
&lt;/div&gt;

## ‚ô•Ô∏è Sponsor AI API

[![Sponsor AI API](./src/assets/302.ai-en.jpg)](https://share.302.ai/gAT9VG)
[302.AI](https://share.302.ai/gAT9VG) is a pay-as-you-go enterprise AI resource hub that offers the latest and most comprehensive AI models and APIs on the market, along with a variety of ready-to-use online AI applications.

## üöÄ Quick Start

### üéØ Recommended: Use Interactive Menu (v2.0 New)

```bash
npx zcf          # Open interactive menu and choose operations based on your needs
```

Menu options include:

- `1` Full initialization (equivalent to `zcf i`)
- `2` Import workflows (equivalent to `zcf u`)
- `3` Configure API or CCR - API configuration or CCR proxy setup
- `4` Configure MCP - MCP service configuration and management
- `5` Configure default model - Set default model (opus/sonnet/sonnet 1m/custom)
- `6` Configure AI memory - Configure AI output language and global output style
- `7` Configure environment permissions - Import environment variables and permissions
- `R` Claude Code Router management (enhanced in v2.8.1)
- `U` ccusage - Claude Code usage analysis
- `L` CCometixLine - High-performance statusline tool with Git integration and real-time usage tracking (v2.9.9+ new)
- `+` Check updates - Check and update Claude Code, CCR and CCometixLine versions (v2.9.9+ enhanced)
- More features...

#### üéØ Key Configuration Features

**Model Configuration (Option 5)**: Configure your default Claude model with flexible options:
- **Default**: Let Claude Code automatically choose the best model for each task
- **Opus**: Use Claude-4.1-Opus exclusively (high token consumption, use with caution)
- **Sonnet 1M**: Use Sonnet with 1M context window for larger context tasks
- **Custom**: Specify your own model names for both primary and fast tasks (supports any custom model)

**AI Memory Configuration (Option 6)**: Personalize your AI assistant:
- **AI Output Language**: Set the language for AI responses (Chinese, English, or custom)
- **Global Output Style**: Configure AI personality and response style

### Or, use direct commands:

#### üÜï First time using Claude Code

```bash
npx zcf i        # Execute full initialization directly: Install Claude Code + Import workflows + Configure API + Set up MCP services
# or
npx zcf ‚Üí select 1  # Execute full initialization via menu
```

#### üîÑ Already have Claude Code installed

```bash
npx zcf u        # Update workflows only: Quick add AI workflows and command system
# or
npx zcf ‚Üí select 2  # Execute workflow update via menu
```

&gt; **Note**:
&gt;
&gt; - Since v2.0, `zcf` opens the interactive menu by default, providing a visual operation interface
&gt; - You can choose operations through the menu or use commands directly for quick execution
&gt; - `zcf i` = full initialization, `zcf u` = update workflows only

#### üåê Language Support

ZCF supports bilingual operation with automatic language switching for all commands:

```bash
# Use Chinese for all operations
npx zcf --lang zh-CN          # Interactive menu in Chinese
npx zcf init --lang zh-CN      # Initialize with Chinese interface  
npx zcf ccr --all-lang zh-CN    # Configure CCR in Chinese

# Language parameter priority (highest to lowest):
# --all-lang &gt; --lang &gt; saved user preference &gt; interactive prompt
```

**Language Parameters:**
- `--lang, -l`: ZCF interface language (applies to all commands)
- `--all-lang, -g`: Set all language parameters at once (most convenient)
- `--config-lang, -c`: Template files language (init/update commands only)
- `--ai-output-lang, -a`: AI assistant output language (init command only)

#### ü§ñ Non-interactive Mode

For CI/CD and automated setups, use `--skip-prompt` with parameters:

```bash
# Using API provider preset (v3.3.0+ New - Simplified)
npx zcf i -s -p 302ai -k &quot;sk-xxx&quot;

# Shorthand version (traditional)
npx zcf i -s -g zh-CN -t api_key -k &quot;sk-xxx&quot; -u &quot;https://xxx.xxx&quot;

# Complete version (traditional)
npx zcf i --skip-prompt --all-lang zh-CN --api-type api_key --api-key &quot;sk-xxx&quot; --api-url &quot;https://xxx.xxx&quot;

# Using provider preset with custom models
npx zcf i -s -p 302ai -k &quot;sk-xxx&quot; -M &quot;claude-sonnet-4-5&quot; -F &quot;claude-haiku-4-5&quot;

# Complete version (with custom models)
npx zcf i --skip-prompt \
  --api-type api_key \
  --api-key &quot;sk-xxx&quot; \
  --api-url &quot;https://xxx.xxx&quot; \
  --api-model &quot;claude-sonnet-4-5&quot; \
  --api-fast-model &quot;claude-haiku-4-5&quot;

# Multiple API configurations (JSON string)
npx zcf i -s --api-configs &#039;[
  {&quot;provider&quot;:&quot;302ai&quot;,&quot;key&quot;:&quot;sk-xxx&quot;},
  {&quot;provider&quot;:&quot;glm&quot;,&quot;key&quot;:&quot;sk-yyy&quot;},
  {&quot;name&quot;:&quot;custom&quot;,&quot;type&quot;:&quot;api_key&quot;,&quot;key&quot;:&quot;sk-zzz&quot;,&quot;url&quot;:&quot;https://custom.api.com&quot;,&quot;primaryModel&quot;:&quot;claude-sonnet-4-5&quot;,&quot;fastModel&quot;:&quot;claude-haiku-4-5&quot;,&quot;default&quot;:true}
]&#039;

# Multiple API configurations (JSON file)
npx zcf i -s --api-configs-file ./api-configs.json

# For Codex with multiple providers
npx zcf i -s -T cx --api-configs &#039;[
  {&quot;provider&quot;:&quot;302ai&quot;,&quot;key&quot;:&quot;sk-xxx&quot;},
  {&quot;name&quot;:&quot;custom&quot;,&quot;type&quot;:&quot;api_key&quot;,&quot;key&quot;:&quot;sk-yyy&quot;,&quot;url&quot;:&quot;https://custom.api.com&quot;,&quot;primaryModel&quot;:&quot;gpt-5&quot;,&quot;default&quot;:true}
]&#039;
```

#### üéØ API Provider Presets (v3.3.0+ New)

ZCF now supports API provider presets that automatically configure baseUrl and models, simplifying configuration from 5+ parameters to just 2:

**Supported Providers:**
- `302ai` - [302.AI](https://share.302.ai/gAT9VG) API Service
- `glm` - GLM (z.ai)
- `minimax` - MiniMax API Service
- `kimi` - Kimi (Moonshot AI)
- `custom` - Custom API endpoint (requires manual URL configuration)

**Usage Examples:**

```bash
# Using 302.AI provider
npx zcf i --skip-prompt --provider 302ai --api-key &quot;sk-xxx&quot;
# or shorthand
npx zcf i -s -p 302ai -k &quot;sk-xxx&quot;

# Using GLM provider
npx zcf i -s -p glm -k &quot;sk-xxx&quot;

# Using MiniMax provider
npx zcf i -s -p minimax -k &quot;sk-xxx&quot;

# Using Kimi provider
npx zcf i -s -p kimi -k &quot;sk-xxx&quot;

# Using custom provider (requires URL)
npx zcf i -s -p custom -k &quot;sk-xxx&quot; -u &quot;https://api.example.com&quot;

# For Codex
npx zcf i -s -T cx -p 302ai -k &quot;sk-xxx&quot;
```

**Benefits:**
- ‚úÖ Automatic baseUrl configuration
- ‚úÖ Automatic authType selection
- ‚úÖ Automatic model configuration (if available)
- ‚úÖ Reduces configuration from 5+ parameters to 2
- ‚úÖ Supports both Claude Code and Codex

#### Non-interactive Mode Parameters

When using `--skip-prompt`, the following parameters are available:

| Parameter                    | Description                                              | Values                                                                                             | Required                               | Default                                                                                                                          |
| ---------------------------- | -------------------------------------------------------- | -------------------------------------------------------------------------------------------------- | -------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------- |
| `--skip-prompt, -s`          | Skip all interactive prompts                             | -                                                                                                  | Yes (for non-interactive mode)         | -                                                                                                                                |
| `--provider, -p`             | API provider preset (v3.3.0+ New)                        | `302ai`, `glm`, `minimax`, `kimi`, `custom`                                                        | No                                     | - (Simplifies configuration by auto-filling baseUrl and models)                                                                  |
| `--lang, -l`                 | ZCF display language (applies to all commands)           | `zh-CN`, `en`                                                                                      | No                                     | `en` or user&#039;s saved preference                                                                                                  |
| `--config-lang, -c`          | Configuration language (template files language)         | `zh-CN`, `en`                                                                                      | No                                     | `en`                                                                                                                             |
| `--ai-output-lang, -a`       | AI output language                                       | `zh-CN`, `en`, custom string                                                                       | No                                     | `en`                                                                                                                             |
| `--all-lang, -g`             | Set all language parameters (applies to all commands)    | `zh-CN`, `en`, custom string                                                                       | No                                     | - (Priority: `--all-lang` &gt; `--lang` &gt; saved user preference &gt; interactive prompt. Custom string sets AI output language to custom while interaction and config languages remain &#039;en&#039;) |
| `--config-action, -r`        | Config handling                                          | `new`, `backup`, `merge`, `docs-only`, `skip`                                                      | No                                     | `backup`                                                                                                                         |
| `--api-type, -t`             | API configuration type                                   | `auth_token`, `api_key`, `ccr_proxy`, `skip`                                                       | No                                     | `skip` (auto-set to `api_key` when `--provider` is specified)                                                                   |
| `--api-key, -k`              | API key (for both API key and auth token types)          | string                                                                                             | Required when `api-type` is not `skip` | -                                                                                                                                |
| `--api-url, -u`              | Custom API URL                                           | URL string                                                                                         | No                                     | official API (auto-filled when using `--provider`)                                                                               |
| `--api-model, -M`            | Primary API model                                        | string (e.g., `claude-sonnet-4-5`)                                                                 | No                                     | - (auto-filled when using `--provider` if available)                                                                             |
| `--api-fast-model, -F`       | Fast API model (Claude Code only)                        | string (e.g., `claude-haiku-4-5`)                                                                  | No                                     | - (auto-filled when using `--provider` if available)                                                                             |
| `--mcp-services, -m`         | MCP services to install (multi-select, comma-separated)  | `context7`, `open-websearch`, `spec-workflow`, `mcp-deepwiki`, `Playwright`, `exa`, `serena`, or `skip` for none | No                                     | `all`                                                                                                                            |
| `--workflows, -w`            | Workflows to install (multi-select, comma-separated)     | `commonTools`, `sixStepsWorkflow`, `featPlanUx`, `gitWorkflow`, `bmadWorkflow`, or `skip` for none | No                                     | `all`                                                                                                                            |
| `--output-styles, -o`        | Output styles to install (multi-select, comma-separated) | `engineer-professional`, `nekomata-engineer`, `laowang-engineer`, `ojousama-engineer`, or `skip` for none               | No                                     | `all`                                                                                                                            |
| `--default-output-style, -d` | Default output style                                     | Same as output styles plus built-in: `default`, `explanatory`, `learning`                          | No                                     | `engineer-professional`                                                                                                          |
| `--install-cometix-line, -x` | Install CCometixLine statusline tool                     | `true`, `false`                                                                                    | No                                     | `true`                                                                                                                           |
| `--code-type, -T`            | Target code tool type                                    | `claude-code`, `codex`, `cc`, `cx`                                                                 | No                                     | Current active tool type from ZCF config                                                                                         |
| `--api-configs`              | Multiple API configurations (JSON string)                | JSON array string of API configuration objects                                                     | No                                     | - (Mutually exclusive with `--api-configs-file`)                                                                                 |
| `--api-configs-file`         | Multiple API configurations (JSON file path)             | Path to JSON file containing API configuration array                                               | No                                     | - (Mutually exclusive with `--api-configs`)                                                                                      |

#### ü§ñ Codex Support (v3.0.0+ New)

[Codex](https://www.npmjs.com/package/@openai/codex) is OpenAI&#039;s official code generation CLI tool. ZCF now supports complete Codex integration with the same configuration convenience as Claude Code.

**Key Features:**

- **Unified Tool Management**: Switch between Claude Code and Codex seamlessly through ZCF menu
- **Intelligent Configuration**: Automatic Codex CLI installation, API provider setup, and MCP service integration
- **Comprehensive Backup System**: All configuration changes include timestamped backups with recovery capabilities
- **Multi-Provider Support**: Configure multiple API providers (OpenAI, custom endpoints) with easy switching
- **System Prompt Integration**: Install professional AI personalities (Engineer, Nekomata Engineer, Laowang Engineer)
- **Workflow Templates**: Import structured development workflows optimized for code generation tasks
- **Advanced Uninstaller**: Selective removal of Codex components with conflict resolution

**Getting Started with Codex:**

Switch to Codex mode in ZCF main menu:
```bash
npx zcf ‚Üí Select S  # Switch between Claude Code and Codex
```

Or access Codex features directly:
```bash
# Full Codex initialization
npx zcf ‚Üí Select 1 (after switching to Codex mode)

# Individual Codex configuration
npx zcf ‚Üí Select 3  # Configure Codex API providers
npx zcf ‚Üí Select 4  # Configure Codex MCP services
```

**Configuration Options:**

1. **API Provider Configuration**:
   - **Official Login**: Use OpenAI&#039;s official authentication system
   - **Custom Providers**: Configure multiple API endpoints with provider switching
   - **Incremental Management**: Add, edit, or remove providers without affecting existing configuration

2. **System Prompt Styles**:
   - **Engineer Professional**: SOLID, KISS, DRY, YAGNI principles for robust code
   - **Nekomata Engineer**: Cute catgirl engineer with rigorous technical standards
   - **Laowang Engineer**: Grumpy tech style that never tolerates substandard code

3. **Workflow Integration**:
   - **Six-Step Workflow**: Structured development process from research to optimization
   - **Custom Workflows**: Import and configure task-specific development templates
   - **‚ö†Ô∏è Important**: Due to Codex prompt limitations, `/workflow` commands cannot pass parameters directly. Use `/workflow` first, then provide task description in follow-up message

4. **MCP Services**: Full compatibility with existing MCP services including:
   - Context7, Open WebSearch, Spec Workflow
   - DeepWiki, Playwright, EXA search
   - Serena Assistant for semantic code retrieval and editing
   - Automatic service configuration with API key management

**File Locations:**

- Configuration: `~/.codex/config.toml`
- Authentication: `~/.codex/auth.json`
- System Prompts: `~/.codex/AGENTS.md`
- Workflows: `~/.codex/prompts/`
- Backups: `~/.codex/backup/`

**Migration Between Tools:**

ZCF allows seamless switching between Claude Code and Codex while preserving your preferences and workflow configurations. Both tools share the same MCP services and workflow templates for consistent development experience.

#### üé® AI Output Styles (v2.12+ New Feature)

ZCF now supports customizable AI output styles to personalize your Claude Code experience:

&lt;p align=&quot;center&quot;&gt;
&lt;a href=&quot;https://github.com/Haleclipse&quot;&gt;
&lt;img src=&quot;./src/assets/Haleclipse.gif&quot; alt=&quot;Halley-chan&quot; width=&quot;200&quot;/&gt;
&lt;/a&gt;
&lt;div align=&quot;center&quot;&gt;Tsundere &lt;a href=&quot;https://github.com/Haleclipse&quot;&gt;Halley-chan&lt;/a&gt; Ojou-sama (Ôø£‚ñΩÔø£)„Çû&lt;/div&gt;
&lt;/p&gt;

**Available Output Styles:**

- `engineer-professional`: Professional software engineer following SOLID, KISS, DRY, YAGNI principles
- `nekomata-engineer`: Professional catgirl engineer UFO Nya, combining rigorous engineering with cute catgirl traits
- `laowang-engineer`: Laowang grumpy tech style, never tolerates code errors and non-standard code
- `ojousama-engineer`: Tsundere blonde ojou-sama programmer Halley-chan, combining rigorous engineering excellence with tsundere ojou-sama traits
- Built-in styles: `default`, `explanatory`, `learning` (always available)

**Features:**

- Install multiple styles and switch between them
- Set global default style for all projects
- Automatic cleanup of legacy personality files
- Template-based customization system

**Usage Tips:**

- Use `/output-style` command to switch project-level output sty

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[cjpais/Handy]]></title>
            <link>https://github.com/cjpais/Handy</link>
            <guid>https://github.com/cjpais/Handy</guid>
            <pubDate>Fri, 31 Oct 2025 00:47:52 GMT</pubDate>
            <description><![CDATA[A free, open source, and extensible speech-to-text application that works completely offline.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/cjpais/Handy">cjpais/Handy</a></h1>
            <p>A free, open source, and extensible speech-to-text application that works completely offline.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 4,866</p>
            <p>Forks: 301</p>
            <p>Stars today: 545 stars today</p>
            <h2>README</h2><pre># Handy

[![Discord](https://img.shields.io/badge/Discord-%235865F2.svg?style=for-the-badge&amp;logo=discord&amp;logoColor=white)](https://discord.com/invite/WVBeWsNXK4)

**A free, open source, and extensible speech-to-text application that works completely offline.**

Handy is a cross-platform desktop application built with Tauri (Rust + React/TypeScript) that provides simple, privacy-focused speech transcription. Press a shortcut, speak, and have your words appear in any text field‚Äîall without sending your voice to the cloud.

## Why Handy?

Handy was created to fill the gap for a truly open source, extensible speech-to-text tool. As stated on [handy.computer](https://handy.computer):

- **Free**: Accessibility tooling belongs in everyone&#039;s hands, not behind a paywall
- **Open Source**: Together we can build further. Extend Handy for yourself and contribute to something bigger
- **Private**: Your voice stays on your computer. Get transcriptions without sending audio to the cloud
- **Simple**: One tool, one job. Transcribe what you say and put it into a text box

Handy isn&#039;t trying to be the best speech-to-text app‚Äîit&#039;s trying to be the most forkable one.

## How It Works

1. **Press** a configurable keyboard shortcut to start/stop recording (or use push-to-talk mode)
2. **Speak** your words while the shortcut is active
3. **Release** and Handy processes your speech using Whisper
4. **Get** your transcribed text pasted directly into whatever app you&#039;re using

The process is entirely local:
- Silence is filtered using VAD (Voice Activity Detection) with Silero
- Transcription uses your choice of models:
  - **Whisper models** (Small/Medium/Turbo/Large) with GPU acceleration when available
  - **Parakeet V3** - CPU-optimized model with excellent performance and automatic language detection
- Works on Windows, macOS, and Linux

## Quick Start

### Installation

1. Download the latest release from the [releases page](https://github.com/cjpais/Handy/releases) or the [website](https://handy.computer)
2. Install the application following platform-specific instructions
3. Launch Handy and grant necessary system permissions (microphone, accessibility)
4. Configure your preferred keyboard shortcuts in Settings
5. Start transcribing!

### Development Setup

For detailed build instructions including platform-specific requirements, see [BUILD.md](BUILD.md).

## Architecture

Handy is built as a Tauri application combining:

- **Frontend**: React + TypeScript with Tailwind CSS for the settings UI
- **Backend**: Rust for system integration, audio processing, and ML inference
- **Core Libraries**:
  - `whisper-rs`: Local speech recognition with Whisper models
  - `transcription-rs`: CPU-optimized speech recognition with Parakeet models
  - `cpal`: Cross-platform audio I/O
  - `vad-rs`: Voice Activity Detection
  - `rdev`: Global keyboard shortcuts and system events
  - `rubato`: Audio resampling

### Debug Mode

Handy includes an advanced debug mode for development and troubleshooting. Access it by pressing:
- **macOS**: `Cmd+Shift+D`
- **Windows/Linux**: `Ctrl+Shift+D`

## Known Issues &amp; Current Limitations

This project is actively being developed and has some [known issues](https://github.com/cjpais/Handy/issues). We believe in transparency about the current state:

### Platform Support
- **macOS (both Intel and Apple Silicon)**
- **x64 Windows**
- **x64 Linux**

### System Requirements/Recommendations

The following are recommendations for running Handy on your own machine. If you don&#039;t meet the system requirements, the performance of the application may be degraded. We are working on improving the performance across all kinds of computers and hardware.

**For Whisper Models:**
- **macOS**: M series Mac, Intel Mac
- **Windows**: Intel, AMD, or NVIDIA GPU
- **Linux**: Intel, AMD, or NVIDIA GPU
  * Ubuntu 22.04, 24.04

**For Parakeet V3 Model:**
- **CPU-only operation** - runs on a wide variety of hardware
- **Minimum**: Intel Skylake (6th gen) or equivalent AMD processors
- **Performance**: ~5x real-time speed on mid-range hardware (tested on i5)
- **Automatic language detection** - no manual language selection required

### How to Contribute

1. **Check existing issues** at [github.com/cjpais/Handy/issues](https://github.com/cjpais/Handy/issues)
2. **Fork the repository** and create a feature branch
3. **Test thoroughly** on your target platform
4. **Submit a pull request** with clear description of changes
5. **Join the discussion** - reach out at [contact@handy.computer](mailto:contact@handy.computer)

The goal is to create both a useful tool and a foundation for others to build upon‚Äîa well-patterned, simple codebase that serves the community.

## Sponsors

&lt;div align=&quot;center&quot;&gt;
  We&#039;re grateful for the support of our sponsors who help make Handy possible:
  &lt;br&gt;&lt;br&gt;
  &lt;a href=&quot;https://wordcab.com&quot;&gt;
    &lt;img src=&quot;sponsor-images/wordcab.png&quot; alt=&quot;Wordcab&quot; width=&quot;120&quot; height=&quot;120&quot;&gt;
  &lt;/a&gt;
  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
  &lt;a href=&quot;https://github.com/epicenter-so/epicenter&quot;&gt;
    &lt;img src=&quot;sponsor-images/epicenter.png&quot; alt=&quot;Epicenter&quot; width=&quot;120&quot; height=&quot;120&quot;&gt;
  &lt;/a&gt;
&lt;/div&gt;

## Related Projects

- **[Handy CLI](https://github.com/cjpais/handy-cli)** - The original Python command-line version
- **[handy.computer](https://handy.computer)** - Project website with demos and documentation

## License

MIT License - see [LICENSE](LICENSE) file for details.

## Acknowledgments

- **Whisper** by OpenAI for the speech recognition model
- **whisper.cpp and ggml** for amazing cross-platform whisper inference/acceleration
- **Silero** for great lightweight VAD
- **Tauri** team for the excellent Rust-based app framework
- **Community contributors** helping make Handy better

---

*&quot;Your search for the right speech-to-text tool can end here‚Äînot because Handy is perfect, but because you can make it perfect for you.&quot;*
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[nashaofu/shell360]]></title>
            <link>https://github.com/nashaofu/shell360</link>
            <guid>https://github.com/nashaofu/shell360</guid>
            <pubDate>Fri, 31 Oct 2025 00:47:51 GMT</pubDate>
            <description><![CDATA[Shell360 is a cross-platform SSH and SFTP client.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/nashaofu/shell360">nashaofu/shell360</a></h1>
            <p>Shell360 is a cross-platform SSH and SFTP client.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 679</p>
            <p>Forks: 42</p>
            <p>Stars today: 73 stars today</p>
            <h2>README</h2><pre># Shell360

![gallary](./resources/screenshots/gallary.jpg)

&lt;p align=&quot;center&quot;&gt;
  &lt;span&gt;English&lt;/span&gt; | &lt;a href=&quot;./README-zh_cn.md&quot;&gt;ÁÆÄ‰Ωì‰∏≠Êñá&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  Shell360 is a cross-platform SSH &amp; SFTP client supporting Windows, macOS, Linux, Android, and iOS.
Whether it&#039;s remote development, server management, or secure file transfer, Shell360 provides you with a consistent, smooth, and secure user experience.
&lt;/p&gt;

## Download

Download the latest version of Shell360 for your platform:

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://apps.apple.com/app/shell360/id6502880351&quot;&gt;
    &lt;img src=&quot;./resources/app-store.svg&quot; width=&quot;123&quot; alt=&quot;Download on the App Store&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://play.google.com/store/apps/details?id=com.nashaofu.shell360&quot;&gt;
    &lt;img src=&quot;./resources/GooglePlay.png&quot; width=&quot;140&quot; alt=&quot;Download on Google Play&quot; /&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/nashaofu/shell360/releases&quot;&gt;
    &lt;img
      src=&quot;https://img.shields.io/badge/Download%20for%20Windows-blue?style=for-the-badge&quot;
      alt=&quot;Download for Windows&quot;
    /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/nashaofu/shell360/releases&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/Download%20for%20macOS-blue?style=for-the-badge&quot; alt=&quot;Download for macOS&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/nashaofu/shell360/releases&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/Download%20for%20Linux-blue?style=for-the-badge&quot; alt=&quot;Download for Linux&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/nashaofu/shell360/releases&quot;&gt;
    &lt;img
      src=&quot;https://img.shields.io/badge/Download%20for%20Android-blue?style=for-the-badge&quot;
      alt=&quot;Download for Android&quot;
    /&gt;
  &lt;/a&gt;
&lt;/p&gt;

Join our [TestFlight](https://testflight.apple.com/join/teqJZCRm) Or [Google Play](https://play.google.com/apps/testing/com.nashaofu.shell360) testing program for early access to new features.

## Features

### üîê Secure Connection

- Advanced SSH client with support for password, public key, and certificate authentication methods
- Support for ED25519, RSA, and ECDSA SSH keys
- Application data encryption for enhanced security
- Support for jump host connection, convenient cross-server management

### üìÅ File Management

- Powerful SFTP client for file transfer

### üîÑ Port Forwarding

- Local port forwarding
- Remote port forwarding
- Dynamic port forwarding (SOCKS proxy)

### üé® Customizable Themes

- Light and dark theme support
- 6 built-in terminal themes
- Support for custom terminal fonts

### üíª Cross-Platform Compatibility

- Consistent experience across Windows, macOS, Linux, Android, and iOS
- Support for importing/exporting app configurations for easy synchronization between devices

## Technology Stack

Shell360 is built with modern technologies:

- **Frontend**: TypeScript, React
- **Backend**: Rust
- **Framework**: Tauri (for cross-platform support)
- **SSH Implementation**: Custom Rust SSH plugin
- **Data Storage**: Encrypted local storage

## Screenshots

![Mobile Gallery](./resources/screenshots/mobile-gallary.jpg)

![Pad Gallery](./resources/screenshots/pad-gallary.jpg)

### Terminal Themes

![Terminal Themes](./resources/screenshots/terminal-themes.jpg)

## Privacy Policy

Your privacy is important to us. Please review our [Privacy Policy](./docs/Privacy-Policy.md) to understand how we handle your data.

## Contributing

We welcome contributions from the community! Please read our [Contribution Guidelines](./docs/CONTRIBUTING.md) to get started.

## License

This project is licensed under the terms of the GNU General Public License v3.0 (GPLv3).
See the [LICENSE](./LICENSE) file for details.

SPDX-License-Identifier: GPL-3.0-or-later
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[google-gemini/gemini-cli]]></title>
            <link>https://github.com/google-gemini/gemini-cli</link>
            <guid>https://github.com/google-gemini/gemini-cli</guid>
            <pubDate>Fri, 31 Oct 2025 00:47:50 GMT</pubDate>
            <description><![CDATA[An open-source AI agent that brings the power of Gemini directly into your terminal.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/google-gemini/gemini-cli">google-gemini/gemini-cli</a></h1>
            <p>An open-source AI agent that brings the power of Gemini directly into your terminal.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 80,990</p>
            <p>Forks: 8,988</p>
            <p>Stars today: 143 stars today</p>
            <h2>README</h2><pre># Gemini CLI

[![Gemini CLI CI](https://github.com/google-gemini/gemini-cli/actions/workflows/ci.yml/badge.svg)](https://github.com/google-gemini/gemini-cli/actions/workflows/ci.yml)
[![Gemini CLI E2E](https://github.com/google-gemini/gemini-cli/actions/workflows/e2e.yml/badge.svg)](https://github.com/google-gemini/gemini-cli/actions/workflows/e2e.yml)
[![Version](https://img.shields.io/npm/v/@google/gemini-cli)](https://www.npmjs.com/package/@google/gemini-cli)
[![License](https://img.shields.io/github/license/google-gemini/gemini-cli)](https://github.com/google-gemini/gemini-cli/blob/main/LICENSE)

![Gemini CLI Screenshot](./docs/assets/gemini-screenshot.png)

Gemini CLI is an open-source AI agent that brings the power of Gemini directly
into your terminal. It provides lightweight access to Gemini, giving you the
most direct path from your prompt to our model.

Learn all about Gemini CLI in our [documentation](https://geminicli.com/docs/).

## üöÄ Why Gemini CLI?

- **üéØ Free tier**: 60 requests/min and 1,000 requests/day with personal Google
  account.
- **üß† Powerful Gemini 2.5 Pro**: Access to 1M token context window.
- **üîß Built-in tools**: Google Search grounding, file operations, shell
  commands, web fetching.
- **üîå Extensible**: MCP (Model Context Protocol) support for custom
  integrations.
- **üíª Terminal-first**: Designed for developers who live in the command line.
- **üõ°Ô∏è Open source**: Apache 2.0 licensed.

## üì¶ Installation

### Pre-requisites before installation

- Node.js version 20 or higher
- macOS, Linux, or Windows

### Quick Install

#### Run instantly with npx

```bash
# Using npx (no installation required)
npx https://github.com/google-gemini/gemini-cli
```

#### Install globally with npm

```bash
npm install -g @google/gemini-cli
```

#### Install globally with Homebrew (macOS/Linux)

```bash
brew install gemini-cli
```

## Release Cadence and Tags

See [Releases](./docs/releases.md) for more details.

### Preview

New preview releases will be published each week at UTC 2359 on Tuesdays. These
releases will not have been fully vetted and may contain regressions or other
outstanding issues. Please help us test and install with `preview` tag.

```bash
npm install -g @google/gemini-cli@preview
```

### Stable

- New stable releases will be published each week at UTC 2000 on Tuesdays, this
  will be the full promotion of last week&#039;s `preview` release + any bug fixes
  and validations. Use `latest` tag.

```bash
npm install -g @google/gemini-cli@latest
```

### Nightly

- New releases will be published each week at UTC 0000 each day, This will be
  all changes from the main branch as represented at time of release. It should
  be assumed there are pending validations and issues. Use `nightly` tag.

```bash
npm install -g @google/gemini-cli@nightly
```

## üìã Key Features

### Code Understanding &amp; Generation

- Query and edit large codebases
- Generate new apps from PDFs, images, or sketches using multimodal capabilities
- Debug issues and troubleshoot with natural language

### Automation &amp; Integration

- Automate operational tasks like querying pull requests or handling complex
  rebases
- Use MCP servers to connect new capabilities, including
  [media generation with Imagen, Veo or Lyria](https://github.com/GoogleCloudPlatform/vertex-ai-creative-studio/tree/main/experiments/mcp-genmedia)
- Run non-interactively in scripts for workflow automation

### Advanced Capabilities

- Ground your queries with built-in
  [Google Search](https://ai.google.dev/gemini-api/docs/grounding) for real-time
  information
- Conversation checkpointing to save and resume complex sessions
- Custom context files (GEMINI.md) to tailor behavior for your projects

### GitHub Integration

Integrate Gemini CLI directly into your GitHub workflows with
[**Gemini CLI GitHub Action**](https://github.com/google-github-actions/run-gemini-cli):

- **Pull Request Reviews**: Automated code review with contextual feedback and
  suggestions
- **Issue Triage**: Automated labeling and prioritization of GitHub issues based
  on content analysis
- **On-demand Assistance**: Mention `@gemini-cli` in issues and pull requests
  for help with debugging, explanations, or task delegation
- **Custom Workflows**: Build automated, scheduled and on-demand workflows
  tailored to your team&#039;s needs

## üîê Authentication Options

Choose the authentication method that best fits your needs:

### Option 1: Login with Google (OAuth login using your Google Account)

**‚ú® Best for:** Individual developers as well as anyone who has a Gemini Code
Assist License. (see
[quota limits and terms of service](https://cloud.google.com/gemini/docs/quotas)
for details)

**Benefits:**

- **Free tier**: 60 requests/min and 1,000 requests/day
- **Gemini 2.5 Pro** with 1M token context window
- **No API key management** - just sign in with your Google account
- **Automatic updates** to latest models

#### Start Gemini CLI, then choose _Login with Google_ and follow the browser authentication flow when prompted

```bash
gemini
```

#### If you are using a paid Code Assist License from your organization, remember to set the Google Cloud Project

```bash
# Set your Google Cloud Project
export GOOGLE_CLOUD_PROJECT=&quot;YOUR_PROJECT_ID&quot;
gemini
```

### Option 2: Gemini API Key

**‚ú® Best for:** Developers who need specific model control or paid tier access

**Benefits:**

- **Free tier**: 100 requests/day with Gemini 2.5 Pro
- **Model selection**: Choose specific Gemini models
- **Usage-based billing**: Upgrade for higher limits when needed

```bash
# Get your key from https://aistudio.google.com/apikey
export GEMINI_API_KEY=&quot;YOUR_API_KEY&quot;
gemini
```

### Option 3: Vertex AI

**‚ú® Best for:** Enterprise teams and production workloads

**Benefits:**

- **Enterprise features**: Advanced security and compliance
- **Scalable**: Higher rate limits with billing account
- **Integration**: Works with existing Google Cloud infrastructure

```bash
# Get your key from Google Cloud Console
export GOOGLE_API_KEY=&quot;YOUR_API_KEY&quot;
export GOOGLE_GENAI_USE_VERTEXAI=true
gemini
```

For Google Workspace accounts and other authentication methods, see the
[authentication guide](./docs/get-started/authentication.md).

## üöÄ Getting Started

### Basic Usage

#### Start in current directory

```bash
gemini
```

#### Include multiple directories

```bash
gemini --include-directories ../lib,../docs
```

#### Use specific model

```bash
gemini -m gemini-2.5-flash
```

#### Non-interactive mode for scripts

Get a simple text response:

```bash
gemini -p &quot;Explain the architecture of this codebase&quot;
```

For more advanced scripting, including how to parse JSON and handle errors, use
the `--output-format json` flag to get structured output:

```bash
gemini -p &quot;Explain the architecture of this codebase&quot; --output-format json
```

For real-time event streaming (useful for monitoring long-running operations),
use `--output-format stream-json` to get newline-delimited JSON events:

```bash
gemini -p &quot;Run tests and deploy&quot; --output-format stream-json
```

### Quick Examples

#### Start a new project

```bash
cd new-project/
gemini
&gt; Write me a Discord bot that answers questions using a FAQ.md file I will provide
```

#### Analyze existing code

```bash
git clone https://github.com/google-gemini/gemini-cli
cd gemini-cli
gemini
&gt; Give me a summary of all of the changes that went in yesterday
```

## üìö Documentation

### Getting Started

- [**Quickstart Guide**](./docs/get-started/index.md) - Get up and running
  quickly.
- [**Authentication Setup**](./docs/get-started/authentication.md) - Detailed
  auth configuration.
- [**Configuration Guide**](./docs/get-started/configuration.md) - Settings and
  customization.
- [**Keyboard Shortcuts**](./docs/cli/keyboard-shortcuts.md) - Productivity
  tips.

### Core Features

- [**Commands Reference**](./docs/cli/commands.md) - All slash commands
  (`/help`, `/chat`, etc).
- [**Custom Commands**](./docs/cli/custom-commands.md) - Create your own
  reusable commands.
- [**Context Files (GEMINI.md)**](./docs/cli/gemini-md.md) - Provide persistent
  context to Gemini CLI.
- [**Checkpointing**](./docs/cli/checkpointing.md) - Save and resume
  conversations.
- [**Token Caching**](./docs/cli/token-caching.md) - Optimize token usage.

### Tools &amp; Extensions

- [**Built-in Tools Overview**](./docs/tools/index.md)
  - [File System Operations](./docs/tools/file-system.md)
  - [Shell Commands](./docs/tools/shell.md)
  - [Web Fetch &amp; Search](./docs/tools/web-fetch.md)
- [**MCP Server Integration**](./docs/tools/mcp-server.md) - Extend with custom
  tools.
- [**Custom Extensions**](./docs/extensions/index.md) - Build and share your own
  commands.

### Advanced Topics

- [**Headless Mode (Scripting)**](./docs/cli/headless.md) - Use Gemini CLI in
  automated workflows.
- [**Architecture Overview**](./docs/architecture.md) - How Gemini CLI works.
- [**IDE Integration**](./docs/ide-integration/index.md) - VS Code companion.
- [**Sandboxing &amp; Security**](./docs/cli/sandbox.md) - Safe execution
  environments.
- [**Trusted Folders**](./docs/cli/trusted-folders.md) - Control execution
  policies by folder.
- [**Enterprise Guide**](./docs/cli/enterprise.md) - Deploy and manage in a
  corporate environment.
- [**Telemetry &amp; Monitoring**](./docs/cli/telemetry.md) - Usage tracking.
- [**Tools API Development**](./docs/core/tools-api.md) - Create custom tools.
- [**Local development**](./docs/local-development.md) - Local development
  tooling.

### Troubleshooting &amp; Support

- [**Troubleshooting Guide**](./docs/troubleshooting.md) - Common issues and
  solutions.
- [**FAQ**](./docs/faq.md) - Frequently asked questions.
- Use `/bug` command to report issues directly from the CLI.

### Using MCP Servers

Configure MCP servers in `~/.gemini/settings.json` to extend Gemini CLI with
custom tools:

```text
&gt; @github List my open pull requests
&gt; @slack Send a summary of today&#039;s commits to #dev channel
&gt; @database Run a query to find inactive users
```

See the [MCP Server Integration guide](./docs/tools/mcp-server.md) for setup
instructions.

## ü§ù Contributing

We welcome contributions! Gemini CLI is fully open source (Apache 2.0), and we
encourage the community to:

- Report bugs and suggest features.
- Improve documentation.
- Submit code improvements.
- Share your MCP servers and extensions.

See our [Contributing Guide](./CONTRIBUTING.md) for development setup, coding
standards, and how to submit pull requests.

Check our [Official Roadmap](https://github.com/orgs/google-gemini/projects/11)
for planned features and priorities.

## üìñ Resources

- **[Official Roadmap](./ROADMAP.md)** - See what&#039;s coming next.
- **[Changelog](./docs/changelogs/index.md)** - See recent notable updates.
- **[NPM Package](https://www.npmjs.com/package/@google/gemini-cli)** - Package
  registry.
- **[GitHub Issues](https://github.com/google-gemini/gemini-cli/issues)** -
  Report bugs or request features.
- **[Security Advisories](https://github.com/google-gemini/gemini-cli/security/advisories)** -
  Security updates.

### Uninstall

See the [Uninstall Guide](docs/cli/uninstall.md) for removal instructions.

## üìÑ Legal

- **License**: [Apache License 2.0](LICENSE)
- **Terms of Service**: [Terms &amp; Privacy](./docs/tos-privacy.md)
- **Security**: [Security Policy](SECURITY.md)

---

&lt;p align=&quot;center&quot;&gt;
  Built with ‚ù§Ô∏è by Google and the open source community
&lt;/p&gt;
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[plasmicapp/plasmic]]></title>
            <link>https://github.com/plasmicapp/plasmic</link>
            <guid>https://github.com/plasmicapp/plasmic</guid>
            <pubDate>Fri, 31 Oct 2025 00:47:49 GMT</pubDate>
            <description><![CDATA[Visual builder for React. Build apps, websites, and content. Integrate with your codebase.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/plasmicapp/plasmic">plasmicapp/plasmic</a></h1>
            <p>Visual builder for React. Build apps, websites, and content. Integrate with your codebase.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 6,457</p>
            <p>Forks: 622</p>
            <p>Stars today: 10 stars today</p>
            <h2>README</h2><pre>&lt;!-- AUTO-GENERATED-CONTENT:START (STARTER) --&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.plasmic.app&quot;&gt;
    &lt;img alt=&quot;Plasmic&quot; role=&quot;img&quot; src=&quot;https://static1.plasmic.app/brand/2023/logo-cropped.png&quot; width=&quot;120&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;h1 align=&quot;center&quot;&gt;
  Plasmic
&lt;/h1&gt;
&lt;h3 align=&quot;center&quot;&gt;
  The open-source visual builder for your codebase.
&lt;/h3&gt;
&lt;p align=&quot;center&quot;&gt;
  Build beautiful apps and websites incredibly fast.
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
  Drag and drop your own components, integrate with your codebase.
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
  Break through the low-code ceiling.
&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.plasmic.app&quot;&gt;
    &lt;img src=&quot;https://user-images.githubusercontent.com/7129/146098801-0691ff13-e302-40fb-827e-90488a7a28b4.gif&quot;/&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://docs.plasmic.app/learn/quickstart&quot;&gt;
    &lt;img src=&quot;https://user-images.githubusercontent.com/7129/139351025-8acd6f6d-8e32-4486-982e-a6f26a53d865.png&quot;/&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/plasmicapp/plasmic&quot;&gt;&lt;img alt=&quot;License&quot; src=&quot;https://img.shields.io/github/license/plasmicapp/plasmic&quot; /&gt;&lt;/a&gt;
  &lt;a href=&quot;https://www.npmjs.com/package/@plasmicapp/loader-react&quot;&gt;&lt;img alt=&quot;Types&quot; src=&quot;https://img.shields.io/npm/types/@plasmicapp/loader-react&quot; /&gt;&lt;/a&gt;
  &lt;a href=&quot;https://github.com/prettier/prettier&quot;&gt;&lt;img alt=&quot;code style: prettier&quot; src=&quot;https://img.shields.io/badge/code_style-prettier-ff69b4.svg&quot; /&gt;&lt;/a&gt;
  &lt;a href=&quot;https://github.com/plasmicapp/plasmic/pulls&quot;&gt;&lt;img alt=&quot;PRs Welcome&quot; src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg&quot; /&gt;&lt;/a&gt;
&lt;/p&gt;

## Quick links

- [Website](https://www.plasmic.app/)
- [Documentation][docs]
- [Quickstart][quickstart]
- [Plasmic Forum][forum]
- [Slack Community][slack]

[docs]: https://www.plasmic.app/learn/
[quickstart]: https://www.plasmic.app/learn/quickstart/
[forum]: https://forum.plasmic.app/
[slack]: https://www.plasmic.app/slack

## See Plasmic in action

- Vercel marketing page: https://youtu.be/itvbmgLZvcM (live app: https://vercel-workflow.vercel.app)

- Apple.com: https://apple.plasmic.run

- Shopify headless storefront: https://commerce.plasmic.run

- Twitter clone: https://youtu.be/rpdjrFuVMog (live app: https://twitter.plasmic.run)

- Service desk app: https://youtu.be/rYqSpUEJSTw (live app: https://tickets.plasmic.run)

- Interview with Lee Robinson, Plasmic as a visual CMS: https://www.youtube.com/watch?v=pcVzNR6FBAQ

- Emails with React.Email: coming soon

## What is Plasmic?

Plasmic is a visual builder for the web.

It enables rapidly designing and building applications and websites--code optional.

Main use cases:

- Content management: let marketing drag/drop your React components to build landing pages in your Next.js website, with design guardrails

- Applications: let developers and technical users quickly build internal tools, client portals, and business software

- Website builder and design tool that doesn‚Äôt limit you to some built-in ecommerce platform, CMS, or hosting

Plasmic is powerful, with a deep feature set that scales to complex projects.
And with codebase integration, it removes the ceiling typically associated with low-code tools.

## What makes Plasmic special?

Plasmic combines some seemingly disparate genres:

- Webflow, Wordpress and other site builders
- Retool and other tool builders
- Glide and no-code app builders
- Contentful and other CMSes

Today these are different tools to specialize in, but the line between, say, a website and an application is blurry (consider an ecommerce storefront with user logins). With the right foundations, we think these can be unified‚ÄîPlasmic‚Äôs UI can adapt to different levels of control for different personas/tasks.

But more importantly, unlike existing tools, Plasmic integrates with codebases. This is critical to making low-code scale past the complexity ceiling that all such tools (including Plasmic) have. You can drag and drop existing complex React components, and you can visually create new UIs/components within traditionally-coded applications, seamlessly weaving code and no-code.

Some feature highlights:

- **Full design freedom** and speedy modern design tool UX.
- **Integrate with codebases** to drag/drop existing React components, publish screens into existing applications, and extend/customize Plasmic Studio.
- Create **rich stateful interactions and behavior**.
- Connect with **arbitrary data source and backend integrations**.
- **Powerful abstractions** like components, variants, slots, composable state management, and more that promote composition and let you build and maintain at scale.
- **Customizable headless design system components** powered by [react-aria](https://react-spectrum.adobe.com/react-aria/).
- **Content creator mode**: give specific collaborators a more simplified editing experience with design guardrails.
- **Open integrations**: choose your own CMS, ecommerce platform, hosting provider, and more.
- Deep collaboration with multiplayer, branching, cross-project imports, and multi-workspace organizations.
- **Import designs from Figma**, translating its proprietary vector document format into DOM/CSS.
- **Page performance and high-quality codegen**. Supports static site generation, automatic image optimization, layout shift reduction, and more.
- **Deploy/host/export anywhere**, including Vercel, Netlify, or any hosting provider.
- **End-user auth and permissions**, including RBAC and user-scoped permissions.
- **Open-source platform** that you can always fork and control.

Learn more on [our website][website] and [our docs][docs]. Or check out [comparisons of Plasmic vs other tools][comparisons].

[website]: https://www.plasmic.app
[comparisons]: https://docs.plasmic.app/learn/comparisons/

## How do I integrate Plasmic as a CMS?

This is one popular use case of Plasmic.

**Step 1.** Install Plasmic into your codebase (exact package [depends on your framework][quickstart]).

```
npm install @plasmicapp/loader-nextjs
```

**Step 2 (optional).** Make components from your app or design system available for drag-and-drop in the visual editor:

```tsx
// Take any component from your app or design system...
export default function HeroSection({ children }) {
  return &lt;div className=&quot;hero-section&quot;&gt;{children}&lt;/div&gt;;
}

// ...and make it available for drag-and-drop, along with any props you want to
// expose.
PLASMIC.registerComponent(HeroSection, {
  props: {
    children: &quot;slot&quot;,
  },
});
```

**Step 3.** Add placeholders that render pages/components made in the visual editor anywhere in your app:

```tsx
// pages/index.tsx

import {
  PlasmicComponent,
  PlasmicRootProvider,
} from &quot;@plasmicapp/loader-nextjs&quot;;
import { PLASMIC } from &quot;../plasmic-init&quot;;

// Here we fetch dynamically on the client, but you can also fetch and render
// components server-side in SSG/SSR frameworks, such as via getStaticProps
// in Next.js.
export default function IndexPage() {
  return (
    &lt;PlasmicRootProvider plasmic={PLASMIC}&gt;
      &lt;PlasmicComponent component=&quot;Summer22LandingPage&quot; /&gt;
    &lt;/PlasmicRootProvider&gt;
  );
}
```

**Step 4.** Non-developers (or developers!) can now create new pages, sections, or components that ship directly into the app/website.

**Step 5.** When you hit Publish, changes get picked up via webhooks that trigger rebuilds,
or more specific mechanisms such as incremental static revalidation or dynamic fetching from the Plasmic CDN.

## Who uses Plasmic?

Plasmic is used by companies ranging from Fortune 500s to boutique brands to solo makers.
It&#039;s used for websites ranging from headless commerce storefronts to marketing websites to logged-in app content.

Check out the [Case Studies and Community Showcase][customers].

[customers]: https://www.plasmic.app/casestudies

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.plasmic.app/casestudies&quot;&gt;
    &lt;img alt=&quot;Customer logos&quot; width=&quot;1106&quot;  src=&quot;https://github.com/plasmicapp/plasmic/assets/7129/2c682d45-6b72-4571-895a-e48b0c588647&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.plasmic.app/casestudies&quot;&gt;
    &lt;img alt=&quot;Showcase&quot; src=&quot;https://user-images.githubusercontent.com/7129/139349675-a807ad9d-aaaf-411b-ab4b-8247a09be676.png&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;

## How does Plasmic work?

### How codebase integration works

Note: you do not need to integrate Plasmic with a codebase.
This is core to using Plasmic as a CMS, but you can build complete apps and websites without this, entirely within Plasmic.

Read [the full technical overview](https://docs.plasmic.app/learn/technical-overview/).

### Bring your own React components

You can register your own arbitrary custom React components for use as building blocks within Plasmic Studio.
[Learn more about code components](https://code-components.plasmic.site).

### Codegen

Besides the Headless API, you can also [generate React code](https://docs.plasmic.app/learn/codegen-guide) into your codebase.
This is a powerful way to use Plasmic as a UI builder for creating rich interactive web applications‚Äîone example of this is Plasmic Studio itself.
See the [application development tutorials](https://docs.plasmic.app/learn/minitwitter-tutorial) to learn more.

## Note on versioning

One common issue we see is mismatched or duplicate versions of packages.

`@plasmicapp` packages can depend on each other.
Each package always has an _exact_ version of its @plasmicapp dependencies.
This is because we want to ensure that all packages are always in sync, and that we don&#039;t end up with a mismatched set of packages.

Packages like `@plasmicapp/host` must also be deduped, since functionality such as `registerComponent` make use of globals and side effects, so with multiple versions you could end up using the wrong &quot;instance&quot; of this package.
Additionally, types can be tightly coupled across multiple packages.

Unfortunately, npm and yarn make it easy for you to end up with mismatched versions and duplicate versions of packages.
Use the `npm list` command to ensure that you have unique deduped versions of packages.
Furthermore, issues can be &quot;sticky,&quot; since npm/yarn are stateful.
At times, you may need to rely on `npm dedupe`, or removing and reinstalling Plasmic packages (including `@plasmicpkgs` packages), resetting package-lock.json/yarn.lock, in order to unwedge npm/yarn.

`@plasmicpkgs` (the built-in code component packages) have `@plasmicapp` packages as peer dependencies,
and these specify ranges rather than exact versions--this is to offer some flexibility for developers to use the core package versions they need, while still using `@plasmicpkgs`.

Note: exact versioning does not imply that every package increments versions for every release.
Packages are only incremented if they or their dependencies have changed.
Incrementing versions, including those referenced in `dependencies` and `devDependencies`, is done automatically when our deployment scripts run `lerna version patch --exact...`,
which detects whether a package has changed since its last git-tagged release.

## Contributing üöÄ

Please see [CONTRIBUTING.md](CONTRIBUTING.md).

## Get help and join our community

Our [docs][docs] and our community [forum] and [Slack] with 3000+ members are the best places to get help with Plasmic.

For support from the Plasmic team, please use the forum.
The forum is also easily searchable for all previously asked questions and discussions.

Both the docs and forum are indexed by search engines!
Search both by including ‚Äúplasmic‚Äù in your query.

## License

All content outside of `platform/` is licensed under the MIT license--see LICENSE.md.

`platform/` is licensed under the AGPL--see LICENSE.platform.md.

## Contributors ‚ù§Ô∏è

Thanks to all the people who make Plasmic!

&lt;a href=&quot;https://github.com/plasmicapp/plasmic/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=plasmicapp/plasmic&quot; /&gt;
&lt;/a&gt;
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[sst/opencode]]></title>
            <link>https://github.com/sst/opencode</link>
            <guid>https://github.com/sst/opencode</guid>
            <pubDate>Fri, 31 Oct 2025 00:47:48 GMT</pubDate>
            <description><![CDATA[The AI coding agent built for the terminal.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/sst/opencode">sst/opencode</a></h1>
            <p>The AI coding agent built for the terminal.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 29,809</p>
            <p>Forks: 2,290</p>
            <p>Stars today: 190 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://opencode.ai&quot;&gt;
    &lt;picture&gt;
      &lt;source srcset=&quot;packages/console/app/src/asset/logo-ornate-dark.svg&quot; media=&quot;(prefers-color-scheme: dark)&quot;&gt;
      &lt;source srcset=&quot;packages/console/app/src/asset/logo-ornate-light.svg&quot; media=&quot;(prefers-color-scheme: light)&quot;&gt;
      &lt;img src=&quot;packages/console/app/src/asset/logo-ornate-light.svg&quot; alt=&quot;OpenCode logo&quot;&gt;
    &lt;/picture&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;The AI coding agent built for the terminal.&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://opencode.ai/discord&quot;&gt;&lt;img alt=&quot;Discord&quot; src=&quot;https://img.shields.io/discord/1391832426048651334?style=flat-square&amp;label=discord&quot; /&gt;&lt;/a&gt;
  &lt;a href=&quot;https://www.npmjs.com/package/opencode-ai&quot;&gt;&lt;img alt=&quot;npm&quot; src=&quot;https://img.shields.io/npm/v/opencode-ai?style=flat-square&quot; /&gt;&lt;/a&gt;
  &lt;a href=&quot;https://github.com/sst/opencode/actions/workflows/publish.yml&quot;&gt;&lt;img alt=&quot;Build status&quot; src=&quot;https://img.shields.io/github/actions/workflow/status/sst/opencode/publish.yml?style=flat-square&amp;branch=dev&quot; /&gt;&lt;/a&gt;
&lt;/p&gt;

[![OpenCode Terminal UI](packages/web/src/assets/lander/screenshot.png)](https://opencode.ai)

---

### Installation

```bash
# YOLO
curl -fsSL https://opencode.ai/install | bash

# Package managers
npm i -g opencode-ai@latest        # or bun/pnpm/yarn
scoop bucket add extras; scoop install extras/opencode  # Windows
choco install opencode             # Windows
brew install sst/tap/opencode      # macOS and Linux
paru -S opencode-bin               # Arch Linux
```

&gt; [!TIP]
&gt; Remove versions older than 0.1.x before installing.

#### Installation Directory

The install script respects the following priority order for the installation path:

1. `$OPENCODE_INSTALL_DIR` - Custom installation directory
2. `$XDG_BIN_DIR` - XDG Base Directory Specification compliant path
3. `$HOME/bin` - Standard user binary directory (if exists or can be created)
4. `$HOME/.opencode/bin` - Default fallback

```bash
# Examples
OPENCODE_INSTALL_DIR=/usr/local/bin curl -fsSL https://opencode.ai/install | bash
XDG_BIN_DIR=$HOME/.local/bin curl -fsSL https://opencode.ai/install | bash
```

### Documentation

For more info on how to configure OpenCode [**head over to our docs**](https://opencode.ai/docs).

### Contributing

If you&#039;re interested in contributing to OpenCode, please read our [contributing docs](./CONTRIBUTING.md) before submitting a pull request.

### FAQ

#### How is this different than Claude Code?

It&#039;s very similar to Claude Code in terms of capability. Here are the key differences:

- 100% open source
- Not coupled to any provider. Although Anthropic is recommended, OpenCode can be used with OpenAI, Google or even local models. As models evolve the gaps between them will close and pricing will drop so being provider-agnostic is important.
- Out of the box LSP support
- A focus on TUI. OpenCode is built by neovim users and the creators of [terminal.shop](https://terminal.shop); we are going to push the limits of what&#039;s possible in the terminal.
- A client/server architecture. This for example can allow OpenCode to run on your computer, while you can drive it remotely from a mobile app. Meaning that the TUI frontend is just one of the possible clients.

#### What&#039;s the other repo?

The other confusingly named repo has no relation to this one. You can [read the story behind it here](https://x.com/thdxr/status/1933561254481666466).

---

**Join our community** [Discord](https://discord.gg/opencode) | [X.com](https://x.com/opencode)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[truffle-ai/dexto]]></title>
            <link>https://github.com/truffle-ai/dexto</link>
            <guid>https://github.com/truffle-ai/dexto</guid>
            <pubDate>Fri, 31 Oct 2025 00:47:47 GMT</pubDate>
            <description><![CDATA[The Intelligence Layer for AI agents. Connect your models, tools, and data to create agentic apps that can think, act and talk to you.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/truffle-ai/dexto">truffle-ai/dexto</a></h1>
            <p>The Intelligence Layer for AI agents. Connect your models, tools, and data to create agentic apps that can think, act and talk to you.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 412</p>
            <p>Forks: 46</p>
            <p>Stars today: 29 stars today</p>
            <h2>README</h2><pre>&lt;a href=&quot;https://dexto.ai&quot;&gt;
  &lt;img src=&quot;https://raw.githubusercontent.com/truffle-ai/dexto/main/.github/assets/dexto-logo.svg&quot; alt=&quot;Dexto&quot; width=&quot;100%&quot; style=&quot;max-width: 1000px&quot; /&gt;
&lt;/a&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/badge/Status-Beta-yellow&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/badge/License-Elastic%202.0-blue.svg&quot;&gt;
  &lt;a href=&quot;https://discord.gg/GFzWFAAZcm&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Discord-Join%20Chat-7289da?logo=discord&amp;logoColor=white&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://deepwiki.com/truffle-ai/dexto&quot;&gt;&lt;img src=&quot;https://deepwiki.com/badge.svg&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

**An all-in-one toolkit to build agentic applications that turn natural language into real-world actions.**

&lt;div align=&quot;center&quot;&gt;
  &lt;img src=&quot;https://github.com/user-attachments/assets/89d30349-0cb1-4160-85db-d99a80a71d7a&quot; alt=&quot;Dexto Demo&quot; width=&quot;700&quot; /&gt;
&lt;/div&gt;

## What is Dexto?

Dexto is a universal intelligence layer for building collaborative, context-aware AI Agents &amp; agentic apps. It orchestrates LLMs, tools, and data into persistent, stateful systems with memory, so you can rapidly create AI assistants, digital companions &amp; copilots that think, act and feel alive.

Dexto combines a configuration-driven framework, robust runtime, and seamless developer experience so you can build, deploy, and iterate on your agents easily.

- **Framework** ‚Äì Define agent behavior in YAML. Instantly swap models and tools without touching code.
- **Runtime** ‚Äì Execution with orchestration, session management, conversation memory, and multimodal support.
- **Interfaces &amp; Tooling** ‚Äì Native support for CLI, Web, APIs, and a TypeScript SDK.

#### With Dexto, you can build:

- **Autonomous Agents**  - Agents that plan, execute, and adapt to user goals.
- **Digital Companions** - AI assistants &amp; copilots that remember context and anticipate needs.
- **MCP Clients** - Connect multiple tools, files, APIs, and data via MCP Servers.
- **MCP Servers** - Dexto Web UI and MCP playground help you to easily test your own MCP servers.
- **Multi-Agent Systems**  - Architect agents that collaborate, delegate, and solve complex tasks together.
- **Agent-as-a-Service** ‚Äì Transform your existing SaaS products and APIs into dynamic, conversational experiences.
- **Agentic Applications** ‚Äì Integrate Dexto as a reasoning engine to power interactive, multimodal, AI-native applications.

#### What You Get

- **Batteries Included** ‚Äì Session management, tool orchestration, multimodal support, and production-ready observability.
- **50+ LLMs** ‚Äì Instantly switch between OpenAI, Anthropic, Google, Groq, local models or bring your own.
- **Run Anywhere** ‚Äì Local for privacy, cloud for reach, or hybrid. *Same agent, any deployment.*
- **Native Multimodal** ‚Äì Text, images, files, and tools in a single conversation. *Upload screenshots, ask questions, take actions.*
- **Persistent Sessions** ‚Äì Conversations, context, and memory are saved and can be exported, imported, or shared across environments.
- **Flexible Interfaces** ‚Äì One agent, endless ways to interact: Ready-to-use CLI, WebUI, APIs, or integrate with your own UI.
- **30+ Tools &amp; MCP** ‚Äì Integrate tools and connect to external servers via the Model Context Protocol (MCP) or use our internal tools.
- **Pluggable Storage** ‚Äì Use Redis, PostgreSQL, SQLite, in-memory, S3 and more for cache, database &amp; blob backends.
- **Human in the loop** - Configure approval policies for tool execution, agents can also remember which tools are safe per session. 
- **Observability** ‚Äì Built-in OpenTelemetry distributed tracing, token usage monitoring, and error handling.

---

## Installation

```bash
# NPM global
npm install -g dexto

# ‚Äîor‚Äî build from source
# this sets up dexto CLI from the cloned code
git clone https://github.com/truffle-ai/dexto.git
cd dexto &amp;&amp; pnpm install &amp;&amp; pnpm install-cli

```

## Quick Start

```bash
# 1. Run setup workflow - this prompts for your preferred LLM and API keys and opens the Web UI
dexto

# 2. Try a multi-step task in the web UI:
&quot;create a snake game in HTML/CSS/JS, then open it in the browser&quot;

# 3. Start interactive CLI mode instead of web UI
dexto --mode cli
```

In 2 -&gt; Dexto will use filesystem tools to write code and browser tools to open it ‚Äî all from a single prompt. The Web UI (default mode) allows you to navigate previous conversations and experiment with different models, tools and more. 

The interactive CLI (3) allows you to interact with agents in the terminal.

See the [CLI Guide](https://docs.dexto.ai/docs/guides/cli/overview) for full details.

### Skip Tool Prompts While Prototyping

```bash
dexto --auto-approve &quot;refactor my project using the filesystem and browser tools&quot;
```

Use the `--auto-approve` flag to bypass confirmation prompts when you trust the tools being invoked‚Äîperfect for fast local iteration. Remove the flag when you want explicit approval again.

### Logs

Logs are stored in `~/.dexto/logs` directory by default.

Use `DEXTO_LOG_TO_CONSOLE=true` to log to console when running dexto.

Use `DEXTO_LOG_LEVEL=debug` for debug logs.

## Agent Recipes

Dexto comes with pre-built agent recipes for common use cases. Install and use them instantly:

```bash
# List available agents
dexto list-agents

# Install specific agents
dexto install nano-banana-agent podcast-agent coding-agent

# Use an agent with one shot prompt
dexto --agent nano-banana-agent --mode cli &quot;create a futuristic cityscape with flying cars&quot;
dexto --agent podcast-agent --mode cli &quot;generate a podcast intro with two hosts discussing AI&quot;
dexto --agent coding-agent --mode cli &quot;create a landing page for a coffee brand inspired by star wars&quot;

# Alternatively, start the agent in web UI and put in the prompt yourself
dexto --agent nano-banana-agent
```

**Available Agents:**
- **Coding Agent** ‚Äì Code generation, refactoring, debugging
- **Nano Banana Agent** ‚Äì Advanced image generation and editing using Google&#039;s Nano Banana (Gemini 2.5 Flash Image)
- **Podcast Agent** ‚Äì Advanced podcast generation using Google Gemini TTS for multi-speaker audio content
- **Sora Video Agent** ‚Äì AI video generation using OpenAI&#039;s Sora with custom settings, remixing, and reference support
- **Database Agent** ‚Äì Demo agent for SQL queries and database operations
- **GitHub Agent** ‚Äì GitHub operations, PR analysis, and repository management
- **Image Editor Agent** ‚Äì Image editing and manipulation
- **Music Agent** ‚Äì Music creation and audio processing
- **Talk2PDF Agent** ‚Äì Document analysis and conversation
- **Product Researcher** ‚Äì Product naming and branding research
- **Triage Agent** ‚Äì Demo multi-agent customer support routing system

Each agent is pre-configured with the right tools, prompts, and LLM settings for its domain. No setup required‚Äîjust install and start building.

**üìö See the full [Agent Registry](https://docs.dexto.ai/docs/guides/agent-registry) for detailed information about all agents, their capabilities, use cases, and requirements.**

More ready-to-run recipes live in [`agents/`](agents/).

## Examples &amp; Demos

### üéôÔ∏è Podcast Agent: Generate AI Podcasts
**Task:** `Generate an intro for a podcast about the latest in AI.`
```bash
dexto --agent podcast-agent
```

&lt;img src=&quot;https://github.com/user-attachments/assets/cfd59751-3daa-4ccd-97b2-1b2862c96af1&quot; alt=&quot;Podcast Agent Demo&quot; width=&quot;600&quot;/&gt;

### üëÅÔ∏è Computer Vision Agent: Face Detection &amp; Annotation Using OpenCV
**Task:** `Detect all faces in this image and draw bounding boxes around them.`
```bash
dexto --agent image-editor-agent
```

&lt;img src=&quot;https://github.com/user-attachments/assets/7e4b2043-c39a-47c7-a403-a9665ee762ce&quot; alt=&quot;Face Detection Demo&quot; width=&quot;600&quot;&gt;

### üéÆ Coding Agents: Create apps on demand

Build full-stack applications, websites, and interactive games with AI-powered coding agents. Customize them to create your own coding agents.

**Task:** `Can you create a snake game in a new folder and open it when done?`
```bash
dexto --agent coding-agent
```

&lt;img src=&quot;.github/assets/coding_agent_demo.gif&quot; alt=&quot;Snake Game Development Demo&quot; width=&quot;600&quot;/&gt;


### üìß Portable Agents: Use your agents from Cursor

Dexto agents are designed to be modular, composable and portable, allowing you to run them from anywhere. In this example, we connect to dexto as an MCP server via Cursor to use our podcast agent from above.

&lt;img src=&quot;https://github.com/user-attachments/assets/fd75a63f-4d29-447a-be24-6943e34c387f&quot; alt=&quot;Email to Slack Demo&quot; width=&quot;600&quot;&gt;



### üéØ Triage Agent: Multi-Agent Customer Support

Create multi-agent systems that can intelligently coordinate and delegate tasks among themselves based on the user query.

```bash
dexto --agent triage-agent
```
&lt;img src=&quot;.github/assets/triage_agent_demo.gif&quot; alt=&quot;Triage Agent Demo&quot; width=&quot;600&quot;&gt;

### üõ†Ô∏è Adding Custom MCP Servers

You can add your own Model Context Protocol (MCP) servers to extend Dexto&#039;s capabilities with new tools or data sources. Just edit your agent YAML or add it directly in the WebUI.

&lt;img src=&quot;https://github.com/user-attachments/assets/1a3ca1fd-31a0-4e1d-ba93-23e1772b1e79&quot; alt=&quot;Add MCP Server Example&quot; width=&quot;600&quot;/&gt;

### üß† Memory: Persistent Context &amp; Learning

Create and save memories. Your agent automatically uses it to create personalized experiences.

&lt;img src=&quot;.github/assets/memory_demo.gif&quot; alt=&quot;Memory Demo&quot; width=&quot;600&quot;&gt;

### üõí MCP Store: Tool Discovery &amp; Integration

Equip your agents from 20+ MCP Servers and start using them via chat - instantly.
- Bring your own keys
- Can&#039;t find an MCP? [Contribute here!](https://github.com/truffle-ai/dexto/blob/main/CONTRIBUTING.md)  

&lt;img src=&quot;.github/assets/mcp_store_demo.gif&quot; alt=&quot;MCP Store Demo&quot; width=&quot;600&quot;&gt;

### üìù Human In The Loop: Dynamic Form Generation

Agents can generate structured forms when they need additional data to make it easier to collect extra info &amp; approvals from users.

&lt;img src=&quot;.github/assets/user_form_demo.gif&quot; alt=&quot;User Form Demo&quot; width=&quot;600&quot;&gt;



#### More Examples:

&lt;details&gt;
&lt;summary&gt;&lt;strong&gt;üõí Browser Agent: Amazon Shopping Assistant&lt;/strong&gt;&lt;/summary&gt;

**Task:** `Can you go to amazon and add some snacks to my cart? I like trail mix, cheetos and maybe surprise me with something else?`
```bash
# Default agent has browser tools
dexto
```
&lt;a href=&quot;https://youtu.be/C-Z0aVbl4Ik&quot;&gt;
  &lt;img src=&quot;https://github.com/user-attachments/assets/3f5be5e2-7a55-4093-a071-8c52f1a83ba3&quot; alt=&quot;Dexto: Amazon shopping agent demo&quot; width=&quot;600&quot;/&gt;
&lt;/a&gt;

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;strong&gt;üéÆ Playground: Interactive Development Environment&lt;/strong&gt;&lt;/summary&gt;

A testing playground to view the tools in your MCP servers before connecting them to LLMs to see the detailed response structures.

&lt;img src=&quot;.github/assets/playground_demo.gif&quot; alt=&quot;Playground Demo&quot; width=&quot;600&quot;&gt;

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;strong&gt;üìß Email to Slack: Automated Email Summaries&lt;/strong&gt;&lt;/summary&gt;

**Task:** `Summarize emails and send highlights to Slack`
```bash
dexto --agent ./agents/examples/email_slack.yml
```
&lt;img src=&quot;assets/email_slack_demo.gif&quot; alt=&quot;Email to Slack Demo&quot; width=&quot;600&quot;&gt;

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;strong&gt;üñºÔ∏è Hugging Face: Image Generation&lt;/strong&gt;&lt;/summary&gt;

**Task:** `Generate a photo of a baby panda.`

&lt;img src=&quot;https://github.com/user-attachments/assets/570cbd3a-6990-43c5-b355-2b549a4ee6b3&quot; alt=&quot;Hugging Face Image Generation Demo&quot; width=&quot;600&quot;/&gt;

&lt;/details&gt;

---

## Run Modes

| Mode | Command | Best for |
|------|---------|----------|
| **Web UI** | `dexto` | Friendly chat interface w/ image support (default) |
| **Interactive CLI** | `dexto --mode cli` | Everyday automation &amp; quick tasks |
| **Headless Server** | `dexto --mode server` | REST &amp; WebSocket APIs for agent interaction |
| **MCP Server (Agent)** | `dexto --mode mcp` | Exposing your agent as a tool for others via stdio |
| **MCP Server (Aggregator)** | `dexto mcp --group-servers` | Re-exposing tools from multiple MCP servers via stdio |
| **Discord Bot** | `dexto --mode discord` | Community servers &amp; channels ([Requires Setup](packages/cli/src/discord/README.md)) |
| **Telegram Bot** | `dexto --mode telegram` | Mobile chat ([Requires Setup](packages/cli/src/telegram/README.md)) |

Run `dexto --help` for **all flags, sub-commands, and environment variables**.

## Configuration

### Agent Configuration

Dexto treats each configuration as a unique agent allowing you to define and save combinations of LLMs, servers, storage options, etc. based on your needs for easy portability. Define agents in version-controlled YAML. Change the file, reload, and chat‚Äîstate, memory, and tools update automatically.

Example configuration:

```yaml
# agents/my-agent.yml
llm:
  provider: openai
  model: gpt-5-mini
  apiKey: $OPENAI_API_KEY

mcpServers:
  filesystem:
    type: stdio
    command: npx
    args: [&#039;-y&#039;, &#039;@modelcontextprotocol/server-filesystem&#039;, &#039;.&#039;]
  web:
    type: stdio
    command: npx
    args: [&#039;-y&#039;, &#039;@modelcontextprotocol/server-brave-search&#039;]

systemPrompt: |
  You are a helpful AI assistant with access to files and web search.
```

### LLM Providers

Switch between providers instantly‚Äîno code changes required.

| Provider | Models | Setup |
|----------|--------|-------|
| **OpenAI** | `gpt-5`, `gpt-5-mini`, `gpt-5-nano`, `gpt-4.1`, `gpt-4.1-mini`, `gpt-4.1-nano`, `gpt-4o`, `gpt-4o-mini`, `gpt-4o-audio-preview`, `o4-mini`, `o3`, `o3-mini`, `o1` | `change model in UI and add api key` |
| **Anthropic** | `claude-haiku-4-5-20251001`, `claude-sonnet-4-5-20250929`, `claude-opus-4-1-20250805`, `claude-4-opus-20250514`, `claude-4-sonnet-20250514`, `claude-3-7-sonnet-20250219`, `claude-3-5-sonnet-20240620`, `claude-3-5-haiku-20241022` | `change model in UI and add api key` |
| **Google** | `gemini-2.5-pro`, `gemini-2.5-flash`, `gemini-2.5-flash-lite`, `gemini-2.0-flash`, `gemini-2.0-flash-lite` | `change model in UI and add api key` |
| **Groq** | `llama-3.3-70b-versatile`, `meta-llama/llama-4-scout-17b-16e-instruct`, `meta-llama/llama-4-maverick-17b-128e-instruct`, `qwen/qwen3-32b`, `gemma-2-9b-it`, `openai/gpt-oss-20b`, `openai/gpt-oss-120b`, `moonshotai/kimi-k2-instruct`, `deepseek-r1-distill-llama-70b` | `change model in UI and add api key` |
| **xAI** | `grok-4`, `grok-3`, `grok-3-mini`, `grok-code-fast-1` | `change model in UI and add api key` |
| **Cohere** | `command-a-03-2025`, `command-r-plus`, `command-r`, `command-r7b` | `change model in UI and add api key` |

```bash
# Switch models via CLI
dexto -m claude-sonnet-4-5-20250929
dexto -m gemini-2.5-pro
```

You can configure things like LLM, system prompt, MCP servers, storage, sessions, human-in-the loop, telemetry and more!

See our [Configuration Guide](https://docs.dexto.ai/docs/category/agent-configuration-guide) for complete setup instructions.


## Programmatic API

Install the `@dexto/core` library, and build applications with the `DextoAgent` class. Everything the CLI can do, your code can too.

```bash
npm install @dexto/core
```

```ts
import { DextoAgent } from &#039;@dexto/core&#039;;

// Create and start agent
const agent = new DextoAgent({
  llm: {
    provider: &#039;openai&#039;,
    model: &#039;gpt-5-mini&#039;,
    apiKey: process.env.OPENAI_API_KEY
  }
});
await agent.start();

// Run tasks
const response = await agent.run(&#039;List the 5 largest files in this repo&#039;);
console.log(response);

// Hold conversations
await agent.run(&#039;Write a haiku about TypeScript&#039;);
await agent.run(&#039;Make it funnier&#039;);

await agent.stop();
```

See our [TypeScript SDK docs](https://docs.dexto.ai/api/category/dexto-sdk/) for complete examples with MCP tools, sessions, and advanced features.

---

## Advanced Usage

### Session Management

Create and manage multiple conversation sessions with persistent storage.

```typescript
const agent = new DextoAgent(config);
await agent.start();

// Create and manage sessions
const session = await agent.createSession(&#039;user-123&#039;);
await agent.run(&#039;Hello, how can you help me?&#039;, undefined, &#039;user-123&#039;);

// List and manage sessions
const sessions = await agent.listSessions();
const sessionHistory = await agent.getSessionHistory(&#039;user-123&#039;);
await agent.deleteSession(&#039;user-123&#039;);

// Search across conversations
const results = await agent.searchMessages(&#039;bug fix&#039;, { limit: 10 });
```

### LLM Management

Switch between models and providers dynamically.

```typescript
// Get current configuration
const currentLLM = agent.getCurrentLLMConfig();

// Switch models (provider inferred automatically)
await agent.switchLLM({ model: &#039;gpt-5-mini&#039; });
await agent.switchLLM({ model: &#039;claude-sonnet-4-5-20250929&#039; });

// Switch model for a specific session id 1234
await agent.switchLLM({ model: &#039;gpt-5-mini&#039; }, &#039;1234&#039;)

// Get supported providers and models
const providers = agent.getSupportedProviders();
const models = agent.getSupportedModels();
const openaiModels = agent.getSupportedModelsForProvider(&#039;openai&#039;);
```

### MCP Manager

For advanced MCP server management, use the MCPManager directly. See the [MCP Manager SDK docs](https://docs.dexto.ai/api/sdk/mcp-manager) for full details.

```typescript
import { MCPManager } from &#039;@dexto/core&#039;;

const manager = new MCPManager();

// Connect to MCP servers
await manager.connectServer(&#039;filesystem&#039;, {
  type: &#039;stdio&#039;,
  command: &#039;npx&#039;,
  args: [&#039;-y&#039;, &#039;@modelcontextprotocol/server-filesystem&#039;, &#039;.&#039;]
});

// Access tools, prompts, and resources
const tools = await manager.getAllTools();
const prompts = await manager.getAllPrompts();
const resources = await manager.getAllResources();

// Execute tools
const result = await manager.executeTool(&#039;readFile&#039;, { path: &#039;./README.md&#039; });

await manager.disconnectAll();
```

### Storage &amp; Persistence

Configure storage backends for production-ready persistence and caching. See the [Storage Configuration guide](https://docs.dexto.ai/docs/guides/configuring-dexto/storage) for full details.

```yaml
# agents/production-agent.yml
storage:
  cache:
    type: redis
    url: $REDIS_URL
    maxConnections: 100
  database:
    type: postgres
    connectionString: $POSTGRES_CONNECTION_STRING
    maxConnections: 25

sessions:
  maxSessions: 1000
  sessionTTL: 86400000 # 24 hours
```

**Supported Backends:**
- **Cache**: Redis, In-Memory (fast, ephemeral)
- **Database**: PostgreSQL, SQLite, In-Memory (persistent, reliable)

**Use Cases:**
- **Development**: In-memory for quick testing
- **Production**: Redis + PostgreSQL for scale
- **Simple**: SQLite for single-instance persistence

See the [DextoAgent API Documentation](https://docs.dexto.ai/api/sdk/dexto-agent) for complete method references.

---

## CLI Reference

&lt;details&gt;
&lt;summary&gt;Click to expand for full CLI reference (`dexto --help`)&lt;/summary&gt;

```
Usage: dexto [options] [command] [prompt...]

Dexto CLI - AI-powered assistant with session management

Basic Usage:
  dexto                    Start web UI (default)
  dexto &quot;query&quot;            Run one-shot query (auto-uses CLI mode)
  dexto -p &quot;query&quot;         Run one-shot query, then exit
  cat file | dexto -p &quot;query&quot;  Process piped content

CLI Mode:
  dexto --mode cli         Start interactive CLI REPL

Session Management:
  dexto -c                 Continue most recent conversation
  dexto -c -p &quot;query&quot;      Continue with one-shot query, then exit
  dexto -r &quot;&lt;session-id&gt;&quot; &quot;query&quot;  Resume with one-shot query

Tool Confirmation:
  dexto --auto-approve     Auto-approve all tool executions

Agent Selection:
  dexto --agent coding-agent       Use installed agent by name
  dexto --agent ./my-agent.yml     Use agent from file path
  dexto -a agents/custom.yml       Short form with relative path

Advanced Modes:
  dexto --mode server      Run as API server
  dexto --mode discord     Run as Discord bot
  dexto --mode telegram    Run as Telegram bot
  dexto --mode mcp         Run as MCP server

Session Commands: dexto session list|history|delete ‚Ä¢ search
Search: dexto search &lt;query&gt; [--session &lt;id&gt;] [--role &lt;role&gt;]

See https://docs.dexto.ai for documentation and examples

Arguments:
  prompt                           Natural-language prompt to run once. If not
                 

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
    </channel>
</rss>