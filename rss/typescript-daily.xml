<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for typescript - TypeScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for typescript.</description>
        <lastBuildDate>Thu, 10 Jul 2025 00:05:15 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[strapi/strapi]]></title>
            <link>https://github.com/strapi/strapi</link>
            <guid>https://github.com/strapi/strapi</guid>
            <pubDate>Thu, 10 Jul 2025 00:05:15 GMT</pubDate>
            <description><![CDATA[üöÄ Strapi is the leading open-source headless CMS. It‚Äôs 100% JavaScript/TypeScript, fully customizable, and developer-first.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/strapi/strapi">strapi/strapi</a></h1>
            <p>üöÄ Strapi is the leading open-source headless CMS. It‚Äôs 100% JavaScript/TypeScript, fully customizable, and developer-first.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 67,464</p>
            <p>Forks: 8,701</p>
            <p>Stars today: 35 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://strapi.io/#gh-light-mode-only&quot;&gt;
    &lt;img src=&quot;https://strapi.io/assets/strapi-logo-dark.svg&quot; width=&quot;318px&quot; alt=&quot;Strapi logo&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://strapi.io/#gh-dark-mode-only&quot;&gt;
    &lt;img src=&quot;https://strapi.io/assets/strapi-logo-light.svg&quot; width=&quot;318px&quot; alt=&quot;Strapi logo&quot; /&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;h3 align=&quot;center&quot;&gt;Open-source headless CMS, self-hosted or Cloud you‚Äôre in control.&lt;/h3&gt;
&lt;p align=&quot;center&quot;&gt;The leading open-source headless CMS, 100% JavaScript/TypeScript, flexible and fully customizable.&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://cloud.strapi.io/signups?source=github1&quot;&gt;Cloud&lt;/a&gt; ¬∑ &lt;a href=&quot;https://strapi.io/demo?utm_campaign=Growth-Experiments&amp;utm_source=strapi%2Fstrapi%20README.md&quot;&gt;Try live demo&lt;/a&gt;&lt;/p&gt;
&lt;br /&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.npmjs.org/package/@strapi/strapi&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/npm/v/@strapi/strapi/latest.svg&quot; alt=&quot;NPM Version&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/strapi/strapi/actions/workflows/tests.yml&quot;&gt;
    &lt;img src=&quot;https://github.com/strapi/strapi/actions/workflows/tests.yml/badge.svg?branch=main&quot; alt=&quot;Tests&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://discord.strapi.io&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/discord/811989166782021633?label=Discord&quot; alt=&quot;Strapi on Discord&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/strapi/strapi/actions/workflows/nightly.yml&quot;&gt;
    &lt;img src=&quot;https://github.com/strapi/strapi/actions/workflows/nightly.yml/badge.svg&quot; alt=&quot;Strapi Nightly Release Build Status&quot; /&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;br&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://strapi.io&quot;&gt;
    &lt;img src=&quot;https://raw.githubusercontent.com/strapi/strapi/main/public/assets/admin-demo.gif&quot; alt=&quot;Administration panel&quot; /&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;br&gt;

Strapi Community Edition is a free and open-source headless CMS enabling you to manage any content, anywhere.

- **Self-hosted or Cloud**: You can host and scale Strapi projects the way you want. You can save time by deploying to [Strapi Cloud](https://cloud.strapi.io/signups?source=github1) or deploy to the hosting platform you want\*\*: AWS, Azure, Google Cloud, DigitalOcean.
- **Modern Admin Panel**: Elegant, entirely customizable and a fully extensible admin panel.
- **Multi-database support**: You can choose the database you prefer: PostgreSQL, MySQL, MariaDB, and SQLite.
- **Customizable**: You can quickly build your logic by fully customizing APIs, routes, or plugins to fit your needs perfectly.
- **Blazing Fast and Robust**: Built on top of Node.js and TypeScript, Strapi delivers reliable and solid performance.
- **Front-end Agnostic**: Use any front-end framework (React, Next.js, Vue, Angular, etc.), mobile apps or even IoT.
- **Secure by default**: Reusable policies, CORS, CSP, P3P, Xframe, XSS, and more.
- **Powerful CLI**: Scaffold projects and APIs on the fly.

## Getting Started

&lt;a href=&quot;https://docs.strapi.io/developer-docs/latest/getting-started/quick-start.html&quot; target=&quot;_blank&quot;&gt;Read the Getting Started tutorial&lt;/a&gt; or follow the steps below:

### ‚è≥ Installation

Install Strapi with this **Quickstart** command to create a Strapi project instantly:

- (Use **yarn** to install the Strapi project (recommended). [Install yarn with these docs](https://yarnpkg.com/lang/en/docs/install/).)

```bash
yarn create strapi
```

**or**

- (Using npx to install the Strapi project.)

```bash
npx create-strapi@latest
```

This command generates a brand new project with the default features (authentication, permissions, content management, content type builder &amp; file upload).

Enjoy üéâ

### üñê Requirements

Complete installation requirements can be found in the documentation under &lt;a href=&quot;https://docs.strapi.io/developer-docs/latest/setup-deployment-guides/deployment.html&quot;&gt;Installation Requirements&lt;/a&gt;.

**Supported operating systems**:

| OS              | Recommended | Minimum    |
| --------------- | ----------- | ---------- |
| Ubuntu          | 24.04       | LTS        |
| Debian          | 11          | LTS        |
| RHEL            | 9           | LTS        |
| macOS           | 14          | 12         |
| Windows Desktop | 11          | 10         |
| Windows Server  | No Support  | No Support |
| Docker          | N/A         | N/A        |

(Please note that Strapi may work on other operating systems, but these are not tested nor officially supported at this time.)

**Node:**

Strapi only supports maintenance and LTS versions of Node.js. Please refer to the &lt;a href=&quot;https://nodejs.org/en/about/releases/&quot;&gt;Node.js release schedule&lt;/a&gt; for more information. NPM versions installed by default with Node.js are supported. Generally it&#039;s recommended to use yarn over npm where possible.

| Strapi Version  | Recommended | Minimum |
| --------------- | ----------- | ------- |
| 5.0.0 and up    | 20.x        | 18.x    |
| 4.14.5 and up   | 20.x        | 18.x    |
| 4.11.0 and up   | 18.x        | 16.x    |
| 4.3.9 to 4.10.x | 18.x        | 14.x    |
| 4.0.x to 4.3.8  | 16.x        | 14.x    |

**Database:**

| Database   | Recommended | Minimum |
| ---------- | ----------- | ------- |
| MySQL      | 8.0         | 8.0     |
| MariaDB    | 11.2        | 10.3    |
| PostgreSQL | 16.0        | 14.0    |
| SQLite     | 3           | 3       |

**We recommend always using the latest version of Strapi stable to start your new projects**.

## Features

- **Content Types Builder**: Build the most flexible publishing experience for your content managers, by giving them the freedom to create any page on the go with [fields](https://docs.strapi.io/user-docs/content-manager/writing-content#filling-up-fields), components and [Dynamic Zones](https://docs.strapi.io/user-docs/content-manager/writing-content#dynamic-zones).
- **Media Library**: Upload your images, videos, audio or documents to the media library. Easily find the right asset, edit and reuse it.
- **Internationalization**: The Internationalization (i18n) plugin allows Strapi users to create, manage and distribute localized content in different languages, called &quot;locales&quot;
- **Role Based Access Control**: Create an unlimited number of custom roles and permissions for admin and end users.
- **GraphQL or REST**: Consume the API using REST or GraphQL

You can unlock additional features such as SSO, Audit Logs, Review Workflows in [Strapi Cloud](https://cloud.strapi.io/login?source=github1) or [Strapi Enterprise](https://strapi.io/enterprise?source=github1).

**[See more on our website](https://strapi.io/overview)**.

## Contributing

Please read our [Contributing Guide](./CONTRIBUTING.md) before submitting a Pull Request to the project.

## Community support

For general help using Strapi, please refer to [the official Strapi documentation](https://docs.strapi.io). For additional help, you can use one of these channels to ask a question:

- [Discord](https://discord.strapi.io) (For live discussion with the Community and Strapi team)
- [GitHub](https://github.com/strapi/strapi) (Bug reports, Contributions)
- [Community Forum](https://forum.strapi.io) (Questions and Discussions)
- [Feedback section](https://feedback.strapi.io) (Roadmap, Feature requests)
- [Twitter](https://twitter.com/strapijs) (Get the news fast)
- [Facebook](https://www.facebook.com/Strapi-616063331867161)
- [YouTube Channel](https://www.youtube.com/strapi) (Learn from Video Tutorials)

## Migration

Follow our [migration guides](https://docs.strapi.io/developer-docs/latest/update-migration-guides/migration-guides.html) on the documentation to keep your projects up-to-date.

## Roadmap

Check out our [roadmap](https://feedback.strapi.io) to get informed of the latest features released and the upcoming ones. You may also give us insights and vote for a specific feature.

## Documentation

See our dedicated [repository](https://github.com/strapi/documentation) for the Strapi documentation, or view our documentation live:

- [Developer docs](https://docs.strapi.io/developer-docs/latest/getting-started/introduction.html)
- [User guide](https://docs.strapi.io/user-docs/latest/getting-started/introduction.html)
- [Cloud guide](https://docs.strapi.io/cloud/intro)

## Try live demo

See for yourself what&#039;s under the hood by getting access to a [hosted Strapi project](https://strapi.io/demo) with sample data.

## License

See the [LICENSE](./LICENSE) file for licensing information.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[n8n-io/n8n]]></title>
            <link>https://github.com/n8n-io/n8n</link>
            <guid>https://github.com/n8n-io/n8n</guid>
            <pubDate>Thu, 10 Jul 2025 00:05:14 GMT</pubDate>
            <description><![CDATA[Fair-code workflow automation platform with native AI capabilities. Combine visual building with custom code, self-host or cloud, 400+ integrations.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/n8n-io/n8n">n8n-io/n8n</a></h1>
            <p>Fair-code workflow automation platform with native AI capabilities. Combine visual building with custom code, self-host or cloud, 400+ integrations.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 116,562</p>
            <p>Forks: 34,733</p>
            <p>Stars today: 377 stars today</p>
            <h2>README</h2><pre>![Banner image](https://user-images.githubusercontent.com/10284570/173569848-c624317f-42b1-45a6-ab09-f0ea3c247648.png)

# n8n - Secure Workflow Automation for Technical Teams

n8n is a workflow automation platform that gives technical teams the flexibility of code with the speed of no-code. With 400+ integrations, native AI capabilities, and a fair-code license, n8n lets you build powerful automations while maintaining full control over your data and deployments.

![n8n.io - Screenshot](https://raw.githubusercontent.com/n8n-io/n8n/master/assets/n8n-screenshot-readme.png)

## Key Capabilities

- **Code When You Need It**: Write JavaScript/Python, add npm packages, or use the visual interface
- **AI-Native Platform**: Build AI agent workflows based on LangChain with your own data and models
- **Full Control**: Self-host with our fair-code license or use our [cloud offering](https://app.n8n.cloud/login)
- **Enterprise-Ready**: Advanced permissions, SSO, and air-gapped deployments
- **Active Community**: 400+ integrations and 900+ ready-to-use [templates](https://n8n.io/workflows)

## Quick Start

Try n8n instantly with [npx](https://docs.n8n.io/hosting/installation/npm/) (requires [Node.js](https://nodejs.org/en/)):

```
npx n8n
```

Or deploy with [Docker](https://docs.n8n.io/hosting/installation/docker/):

```
docker volume create n8n_data
docker run -it --rm --name n8n -p 5678:5678 -v n8n_data:/home/node/.n8n docker.n8n.io/n8nio/n8n
```

Access the editor at http://localhost:5678

## Resources

- üìö [Documentation](https://docs.n8n.io)
- üîß [400+ Integrations](https://n8n.io/integrations)
- üí° [Example Workflows](https://n8n.io/workflows)
- ü§ñ [AI &amp; LangChain Guide](https://docs.n8n.io/langchain/)
- üë• [Community Forum](https://community.n8n.io)
- üìñ [Community Tutorials](https://community.n8n.io/c/tutorials/28)

## Support

Need help? Our community forum is the place to get support and connect with other users:
[community.n8n.io](https://community.n8n.io)

## License

n8n is [fair-code](https://faircode.io) distributed under the [Sustainable Use License](https://github.com/n8n-io/n8n/blob/master/LICENSE.md) and [n8n Enterprise License](https://github.com/n8n-io/n8n/blob/master/LICENSE_EE.md).

- **Source Available**: Always visible source code
- **Self-Hostable**: Deploy anywhere
- **Extensible**: Add your own nodes and functionality

[Enterprise licenses](mailto:license@n8n.io) available for additional features and support.

Additional information about the license model can be found in the [docs](https://docs.n8n.io/reference/license/).

## Contributing

Found a bug üêõ or have a feature idea ‚ú®? Check our [Contributing Guide](https://github.com/n8n-io/n8n/blob/master/CONTRIBUTING.md) to get started.

## Join the Team

Want to shape the future of automation? Check out our [job posts](https://n8n.io/careers) and join our team!

## What does n8n mean?

**Short answer:** It means &quot;nodemation&quot; and is pronounced as n-eight-n.

**Long answer:** &quot;I get that question quite often (more often than I expected) so I decided it is probably best to answer it here. While looking for a good name for the project with a free domain I realized very quickly that all the good ones I could think of were already taken. So, in the end, I chose nodemation. &#039;node-&#039; in the sense that it uses a Node-View and that it uses Node.js and &#039;-mation&#039; for &#039;automation&#039; which is what the project is supposed to help with. However, I did not like how long the name was and I could not imagine writing something that long every time in the CLI. That is when I then ended up on &#039;n8n&#039;.&quot; - **Jan Oberhauser, Founder and CEO, n8n.io**
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[humanlayer/12-factor-agents]]></title>
            <link>https://github.com/humanlayer/12-factor-agents</link>
            <guid>https://github.com/humanlayer/12-factor-agents</guid>
            <pubDate>Thu, 10 Jul 2025 00:05:13 GMT</pubDate>
            <description><![CDATA[What are the principles we can use to build LLM-powered software that is actually good enough to put in the hands of production customers?]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/humanlayer/12-factor-agents">humanlayer/12-factor-agents</a></h1>
            <p>What are the principles we can use to build LLM-powered software that is actually good enough to put in the hands of production customers?</p>
            <p>Language: TypeScript</p>
            <p>Stars: 7,957</p>
            <p>Forks: 498</p>
            <p>Stars today: 709 stars today</p>
            <h2>README</h2><pre># 12-Factor Agents - Principles for building reliable LLM applications

&lt;div align=&quot;center&quot;&gt;
&lt;a href=&quot;https://www.apache.org/licenses/LICENSE-2.0&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/badge/Code-Apache%202.0-blue.svg&quot; alt=&quot;Code License: Apache 2.0&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://creativecommons.org/licenses/by-sa/4.0/&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/badge/Content-CC%20BY--SA%204.0-lightgrey.svg&quot; alt=&quot;Content License: CC BY-SA 4.0&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://humanlayer.dev/discord&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/chat-discord-5865F2&quot; alt=&quot;Discord Server&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://www.youtube.com/watch?v=8kMaTybvDUw&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/aidotengineer-conf_talk_(17m)-white&quot; alt=&quot;YouTube
Deep Dive&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://www.youtube.com/watch?v=yxJDyQ8v6P0&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/youtube-deep_dive-crimson&quot; alt=&quot;YouTube
Deep Dive&quot;&gt;&lt;/a&gt;
    
&lt;/div&gt;

&lt;p&gt;&lt;/p&gt;

*In the spirit of [12 Factor Apps](https://12factor.net/)*.  *The source for this project is public at https://github.com/humanlayer/12-factor-agents, and I welcome your feedback and contributions. Let&#039;s figure this out together!*

&gt; [!TIP]
&gt; Missed the AI Engineer World&#039;s Fair? [Catch the talk here](https://www.youtube.com/watch?v=8kMaTybvDUw)
&gt;
&gt; Looking for Context Engineering? [Jump straight to factor 3](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-03-own-your-context-window.md)


&lt;img referrerpolicy=&quot;no-referrer-when-downgrade&quot; src=&quot;https://static.scarf.sh/a.png?x-pxid=2acad99a-c2d9-48df-86f5-9ca8061b7bf9&quot; /&gt;

&lt;a href=&quot;#visual-nav&quot;&gt;&lt;img width=&quot;907&quot; alt=&quot;Screenshot 2025-04-03 at 2 49 07‚ÄØPM&quot; src=&quot;https://github.com/user-attachments/assets/23286ad8-7bef-4902-b371-88ff6a22e998&quot; /&gt;&lt;/a&gt;


Hi, I&#039;m Dex. I&#039;ve been [hacking](https://youtu.be/8bIHcttkOTE) on [AI agents](https://theouterloop.substack.com) for [a while](https://humanlayer.dev). 


**I&#039;ve tried every agent framework out there**, from the plug-and-play crew/langchains to the &quot;minimalist&quot; smolagents of the world to the &quot;production grade&quot; langraph, griptape, etc. 

**I&#039;ve talked to a lot of really strong founders**, in and out of YC, who are all building really impressive things with AI. Most of them are rolling the stack themselves. I don&#039;t see a lot of frameworks in production customer-facing agents.

**I&#039;ve been surprised to find** that most of the products out there billing themselves as &quot;AI Agents&quot; are not all that agentic. A lot of them are mostly deterministic code, with LLM steps sprinkled in at just the right points to make the experience truly magical.

Agents, at least the good ones, don&#039;t follow the [&quot;here&#039;s your prompt, here&#039;s a bag of tools, loop until you hit the goal&quot;](https://www.anthropic.com/engineering/building-effective-agents#agents) pattern. Rather, they are comprised of mostly just software. 

So, I set out to answer:

&gt; ### **What are the principles we can use to build LLM-powered software that is actually good enough to put in the hands of production customers?**

Welcome to 12-factor agents. As every Chicago mayor since Daley has consistently plastered all over the city&#039;s major airports, we&#039;re glad you&#039;re here.

*Special thanks to [@iantbutler01](https://github.com/iantbutler01), [@tnm](https://github.com/tnm), [@hellovai](https://www.github.com/hellovai), [@stantonk](https://www.github.com/stantonk), [@balanceiskey](https://www.github.com/balanceiskey), [@AdjectiveAllison](https://www.github.com/AdjectiveAllison), [@pfbyjy](https://www.github.com/pfbyjy), [@a-churchill](https://www.github.com/a-churchill), and the SF MLOps community for early feedback on this guide.*

## The Short Version: The 12 Factors

Even if LLMs [continue to get exponentially more powerful](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-10-small-focused-agents.md#what-if-llms-get-smarter), there will be core engineering techniques that make LLM-powered software more reliable, more scalable, and easier to maintain.

- [How We Got Here: A Brief History of Software](https://github.com/humanlayer/12-factor-agents/blob/main/content/brief-history-of-software.md)
- [Factor 1: Natural Language to Tool Calls](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-01-natural-language-to-tool-calls.md)
- [Factor 2: Own your prompts](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-02-own-your-prompts.md)
- [Factor 3: Own your context window](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-03-own-your-context-window.md)
- [Factor 4: Tools are just structured outputs](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-04-tools-are-structured-outputs.md)
- [Factor 5: Unify execution state and business state](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-05-unify-execution-state.md)
- [Factor 6: Launch/Pause/Resume with simple APIs](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-06-launch-pause-resume.md)
- [Factor 7: Contact humans with tool calls](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-07-contact-humans-with-tools.md)
- [Factor 8: Own your control flow](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-08-own-your-control-flow.md)
- [Factor 9: Compact Errors into Context Window](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-09-compact-errors.md)
- [Factor 10: Small, Focused Agents](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-10-small-focused-agents.md)
- [Factor 11: Trigger from anywhere, meet users where they are](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-11-trigger-from-anywhere.md)
- [Factor 12: Make your agent a stateless reducer](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-12-stateless-reducer.md)

### Visual Nav

|    |    |    |
|----|----|-----|
|[![factor 1](https://github.com/humanlayer/12-factor-agents/blob/main/img/110-natural-language-tool-calls.png)](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-01-natural-language-to-tool-calls.md) | [![factor 2](https://github.com/humanlayer/12-factor-agents/blob/main/img/120-own-your-prompts.png)](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-02-own-your-prompts.md) | [![factor 3](https://github.com/humanlayer/12-factor-agents/blob/main/img/130-own-your-context-building.png)](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-03-own-your-context-window.md) |
|[![factor 4](https://github.com/humanlayer/12-factor-agents/blob/main/img/140-tools-are-just-structured-outputs.png)](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-04-tools-are-structured-outputs.md) | [![factor 5](https://github.com/humanlayer/12-factor-agents/blob/main/img/150-unify-state.png)](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-05-unify-execution-state.md) | [![factor 6](https://github.com/humanlayer/12-factor-agents/blob/main/img/160-pause-resume-with-simple-apis.png)](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-06-launch-pause-resume.md) |
| [![factor 7](https://github.com/humanlayer/12-factor-agents/blob/main/img/170-contact-humans-with-tools.png)](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-07-contact-humans-with-tools.md) | [![factor 8](https://github.com/humanlayer/12-factor-agents/blob/main/img/180-control-flow.png)](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-08-own-your-control-flow.md) | [![factor 9](https://github.com/humanlayer/12-factor-agents/blob/main/img/190-factor-9-errors-static.png)](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-09-compact-errors.md) |
| [![factor 10](https://github.com/humanlayer/12-factor-agents/blob/main/img/1a0-small-focused-agents.png)](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-10-small-focused-agents.md) | [![factor 11](https://github.com/humanlayer/12-factor-agents/blob/main/img/1b0-trigger-from-anywhere.png)](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-11-trigger-from-anywhere.md) | [![factor 12](https://github.com/humanlayer/12-factor-agents/blob/main/img/1c0-stateless-reducer.png)](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-12-stateless-reducer.md) |

## How we got here

For a deeper dive on my agent journey and what led us here, check out [A Brief History of Software](https://github.com/humanlayer/12-factor-agents/blob/main/content/brief-history-of-software.md) - a quick summary here:

### The promise of agents

We&#039;re gonna talk a lot about Directed Graphs (DGs) and their Acyclic friends, DAGs. I&#039;ll start by pointing out that...well...software is a directed graph. There&#039;s a reason we used to represent programs as flow charts.

![010-software-dag](https://github.com/humanlayer/12-factor-agents/blob/main/img/010-software-dag.png)

### From code to DAGs

Around 20 years ago, we started to see DAG orchestrators become popular. We&#039;re talking classics like [Airflow](https://airflow.apache.org/), [Prefect](https://www.prefect.io/), some predecessors, and some newer ones like ([dagster](https://dagster.io/), [inggest](https://www.inngest.com/), [windmill](https://www.windmill.dev/)). These followed the same graph pattern, with the added benefit of observability, modularity, retries, administration, etc.

![015-dag-orchestrators](https://github.com/humanlayer/12-factor-agents/blob/main/img/015-dag-orchestrators.png)

### The promise of agents

I&#039;m not the first [person to say this](https://youtu.be/Dc99-zTMyMg?si=bcT0hIwWij2mR-40&amp;t=73), but my biggest takeaway when I started learning about agents, was that you get to throw the DAG away. Instead of software engineers coding each step and edge case, you can give the agent a goal and a set of transitions:

![025-agent-dag](https://github.com/humanlayer/12-factor-agents/blob/main/img/025-agent-dag.png)

And let the LLM make decisions in real time to figure out the path

![026-agent-dag-lines](https://github.com/humanlayer/12-factor-agents/blob/main/img/026-agent-dag-lines.png)

The promise here is that you write less software, you just give the LLM the &quot;edges&quot; of the graph and let it figure out the nodes. You can recover from errors, you can write less code, and you may find that LLMs find novel solutions to problems.


### Agents as loops

As we&#039;ll see later, it turns out this doesn&#039;t quite work.

Let&#039;s dive one step deeper - with agents you&#039;ve got this loop consisting of 3 steps:

1. LLM determines the next step in the workflow, outputting structured json (&quot;tool calling&quot;)
2. Deterministic code executes the tool call
3. The result is appended to the context window 
4. Repeat until the next step is determined to be &quot;done&quot;

```python
initial_event = {&quot;message&quot;: &quot;...&quot;}
context = [initial_event]
while True:
  next_step = await llm.determine_next_step(context)
  context.append(next_step)

  if (next_step.intent === &quot;done&quot;):
    return next_step.final_answer

  result = await execute_step(next_step)
  context.append(result)
```

Our initial context is just the starting event (maybe a user message, maybe a cron fired, maybe a webhook, etc), and we ask the llm to choose the next step (tool) or to determine that we&#039;re done.

Here&#039;s a multi-step example:

[![027-agent-loop-animation](https://github.com/humanlayer/12-factor-agents/blob/main/img/027-agent-loop-animation.gif)](https://github.com/user-attachments/assets/3beb0966-fdb1-4c12-a47f-ed4e8240f8fd)

&lt;details&gt;
&lt;summary&gt;&lt;a href=&quot;https://github.com/humanlayer/12-factor-agents/blob/main/img/027-agent-loop-animation.gif&quot;&gt;GIF Version&lt;/a&gt;&lt;/summary&gt;

![027-agent-loop-animation](https://github.com/humanlayer/12-factor-agents/blob/main/img/027-agent-loop-animation.gif)]

&lt;/details&gt;

## Why 12-factor agents?

At the end of the day, this approach just doesn&#039;t work as well as we want it to.

In building HumanLayer, I&#039;ve talked to at least 100 SaaS builders (mostly technical founders) looking to make their existing product more agentic. The journey usually goes something like:

1. Decide you want to build an agent
2. Product design, UX mapping, what problems to solve
3. Want to move fast, so grab $FRAMEWORK and *get to building*
4. Get to 70-80% quality bar 
5. Realize that 80% isn&#039;t good enough for most customer-facing features
6. Realize that getting past 80% requires reverse-engineering the framework, prompts, flow, etc.
7. Start over from scratch

&lt;details&gt;
&lt;summary&gt;Random Disclaimers&lt;/summary&gt;

**DISCLAIMER**: I&#039;m not sure the exact right place to say this, but here seems as good as any: **this in BY NO MEANS meant to be a dig on either the many frameworks out there, or the pretty dang smart people who work on them**. They enable incredible things and have accelerated the AI ecosystem. 

I hope that one outcome of this post is that agent framework builders can learn from the journeys of myself and others, and make frameworks even better. 

Especially for builders who want to move fast but need deep control.

**DISCLAIMER 2**: I&#039;m not going to talk about MCP. I&#039;m sure you can see where it fits in.

**DISCLAIMER 3**: I&#039;m using mostly typescript, for [reasons](https://www.linkedin.com/posts/dexterihorthy_llms-typescript-aiagents-activity-7290858296679313408-Lh9e?utm_source=share&amp;utm_medium=member_desktop&amp;rcm=ACoAAA4oHTkByAiD-wZjnGsMBUL_JT6nyyhOh30) but all this stuff works in python or any other language you prefer. 


Anyways back to the thing...

&lt;/details&gt;

### Design Patterns for great LLM applications

After digging through hundreds of AI libriaries and working with dozens of founders, my instinct is this:

1. There are some core things that make agents great
2. Going all in on a framework and building what is essentially a greenfield rewrite may be counter-productive
3. There are some core principles that make agents great, and you will get most/all of them if you pull in a framework
4. BUT, the fastest way I&#039;ve seen for builders to get high-quality AI software in the hands of customers is to take small, modular concepts from agent building, and incorporate them into their existing product
5. These modular concepts from agents can be defined and applied by most skilled software engineers, even if they don&#039;t have an AI background

&gt; #### The fastest way I&#039;ve seen for builders to get good AI software in the hands of customers is to take small, modular concepts from agent building, and incorporate them into their existing product


## The 12 Factors (again)


- [How We Got Here: A Brief History of Software](https://github.com/humanlayer/12-factor-agents/blob/main/content/brief-history-of-software.md)
- [Factor 1: Natural Language to Tool Calls](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-01-natural-language-to-tool-calls.md)
- [Factor 2: Own your prompts](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-02-own-your-prompts.md)
- [Factor 3: Own your context window](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-03-own-your-context-window.md)
- [Factor 4: Tools are just structured outputs](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-04-tools-are-structured-outputs.md)
- [Factor 5: Unify execution state and business state](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-05-unify-execution-state.md)
- [Factor 6: Launch/Pause/Resume with simple APIs](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-06-launch-pause-resume.md)
- [Factor 7: Contact humans with tool calls](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-07-contact-humans-with-tools.md)
- [Factor 8: Own your control flow](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-08-own-your-control-flow.md)
- [Factor 9: Compact Errors into Context Window](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-09-compact-errors.md)
- [Factor 10: Small, Focused Agents](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-10-small-focused-agents.md)
- [Factor 11: Trigger from anywhere, meet users where they are](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-11-trigger-from-anywhere.md)
- [Factor 12: Make your agent a stateless reducer](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-12-stateless-reducer.md)

## Honorable Mentions / other advice

- [Factor 13: Pre-fetch all the context you might need](https://github.com/humanlayer/12-factor-agents/blob/main/content/appendix-13-pre-fetch.md)

## Related Resources

- Contribute to this guide [here](https://github.com/humanlayer/12-factor-agents)
- [I talked about a lot of this on an episode of the Tool Use podcast](https://youtu.be/8bIHcttkOTE) in March 2025
- I write about some of this stuff at [The Outer Loop](https://theouterloop.substack.com)
- I do [webinars about Maximizing LLM Performance](https://github.com/hellovai/ai-that-works/tree/main) with [@hellovai](https://github.com/hellovai)
- We build OSS agents with this methodology under [got-agents/agents](https://github.com/got-agents/agents)
- We ignored all our own advice and built a [framework for running distributed agents in kubernetes](https://github.com/humanlayer/kubechain)
- Other links from this guide:
  - [12 Factor Apps](https://12factor.net)
  - [Building Effective Agents (Anthropic)](https://www.anthropic.com/engineering/building-effective-agents#agents)
  - [Prompts are Functions](https://thedataexchange.media/baml-revolution-in-ai-engineering/ )
  - [Library patterns: Why frameworks are evil](https://tomasp.net/blog/2015/library-frameworks/)
  - [The Wrong Abstraction](https://sandimetz.com/blog/2016/1/20/the-wrong-abstraction)
  - [Mailcrew Agent](https://github.com/dexhorthy/mailcrew)
  - [Mailcrew Demo Video](https://www.youtube.com/watch?v=f_cKnoPC_Oo)
  - [Chainlit Demo](https://x.com/chainlit_io/status/1858613325921480922)
  - [TypeScript for LLMs](https://www.linkedin.com/posts/dexterihorthy_llms-typescript-aiagents-activity-7290858296679313408-Lh9e)
  - [Schema Aligned Parsing](https://www.boundaryml.com/blog/schema-aligned-parsing)
  - [Function Calling vs Structured Outputs vs JSON Mode](https://www.vellum.ai/blog/when-should-i-use-function-calling-structured-outputs-or-json-mode)
  - [BAML on GitHub](https://github.com/boundaryml/baml)
  - [OpenAI JSON vs Function Calling](https://docs.llamaindex.ai/en/stable/examples/llm/openai_json_vs_function_calling/)
  - [Outer Loop Agents](https://theouterloop.substack.com/p/openais-realtime-api-is-a-step-towards)
  - [Airflow](https://airflow.apache.org/)
  - [Prefect](https://www.prefect.io/)
  - [Dagster](https://dagster.io/)
  - [Inngest](https://www.inngest.com/)
  - [Windmill](https://www.windmill.dev/)
  - [The AI Agent Index (MIT)](https://aiagentindex.mit.edu/)
  - [NotebookLM on Finding Model Capability Boundaries](https://open.substack.com/pub/swyx/p/notebooklm?selection=08e1187c-cfee-4c63-93c9-71216640a5f8)

## Contributors

Thanks to everyone who has contributed to 12-factor agents!

[&lt;img src=&quot;https://avatars.githubusercontent.com/u/3730605?v=4&amp;s=80&quot; width=&quot;80px&quot; alt=&quot;dexhorthy&quot; /&gt;](https://github.com/dexhorthy) [&lt;img src=&quot;https://avatars.githubusercontent.com/u/50557586?v=4&amp;s=80&quot; width=&quot;80px&quot; alt=&quot;Sypherd&quot; /&gt;](https://github.com/Sypherd) [&lt;img src=&quot;https://avatars.githubusercontent.com/u/66259401?v=4&amp;s=80&quot; width=&quot;80px&quot; alt=&quot;tofaramususa&quot; /&gt;](https://github.com/tofaramususa) [&lt;img src=&quot;https://avatars.githubusercontent.com/u/18105223?v=4&amp;s=80&quot; width=&quot;80px&quot; alt=&quot;a-churchill&quot; /&gt;](https://github.com/a-churchill) [&lt;img src=&quot;https://avatars.githubusercontent.com/u/4084885?v=4&amp;s=80&quot; width=&quot;80px&quot; alt=&quot;Elijas&quot; /&gt;](https://github.com/Elijas) [&lt;img src=&quot;https://avatars.

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[microsoft/playwright-mcp]]></title>
            <link>https://github.com/microsoft/playwright-mcp</link>
            <guid>https://github.com/microsoft/playwright-mcp</guid>
            <pubDate>Thu, 10 Jul 2025 00:05:12 GMT</pubDate>
            <description><![CDATA[Playwright MCP server]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/microsoft/playwright-mcp">microsoft/playwright-mcp</a></h1>
            <p>Playwright MCP server</p>
            <p>Language: TypeScript</p>
            <p>Stars: 14,304</p>
            <p>Forks: 1,013</p>
            <p>Stars today: 78 stars today</p>
            <h2>README</h2><pre>## Playwright MCP

A Model Context Protocol (MCP) server that provides browser automation capabilities using [Playwright](https://playwright.dev). This server enables LLMs to interact with web pages through structured accessibility snapshots, bypassing the need for screenshots or visually-tuned models.

### Key Features

- **Fast and lightweight**. Uses Playwright&#039;s accessibility tree, not pixel-based input.
- **LLM-friendly**. No vision models needed, operates purely on structured data.
- **Deterministic tool application**. Avoids ambiguity common with screenshot-based approaches.

### Requirements
- Node.js 18 or newer
- VS Code, Cursor, Windsurf, Claude Desktop or any other MCP client

&lt;!--
// Generate using:
node utils/generate-links.js
--&gt;

### Getting started

First, install the Playwright MCP server with your client. A typical configuration looks like this:

```js
{
  &quot;mcpServers&quot;: {
    &quot;playwright&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [
        &quot;@playwright/mcp@latest&quot;
      ]
    }
  }
}
```

[&lt;img src=&quot;https://img.shields.io/badge/VS_Code-VS_Code?style=flat-square&amp;label=Install%20Server&amp;color=0098FF&quot; alt=&quot;Install in VS Code&quot;&gt;](https://insiders.vscode.dev/redirect?url=vscode%3Amcp%2Finstall%3F%257B%2522name%2522%253A%2522playwright%2522%252C%2522command%2522%253A%2522npx%2522%252C%2522args%2522%253A%255B%2522%2540playwright%252Fmcp%2540latest%2522%255D%257D) [&lt;img alt=&quot;Install in VS Code Insiders&quot; src=&quot;https://img.shields.io/badge/VS_Code_Insiders-VS_Code_Insiders?style=flat-square&amp;label=Install%20Server&amp;color=24bfa5&quot;&gt;](https://insiders.vscode.dev/redirect?url=vscode-insiders%3Amcp%2Finstall%3F%257B%2522name%2522%253A%2522playwright%2522%252C%2522command%2522%253A%2522npx%2522%252C%2522args%2522%253A%255B%2522%2540playwright%252Fmcp%2540latest%2522%255D%257D)


&lt;details&gt;&lt;summary&gt;&lt;b&gt;Install in VS Code&lt;/b&gt;&lt;/summary&gt;

You can also install the Playwright MCP server using the VS Code CLI:

```bash
# For VS Code
code --add-mcp &#039;{&quot;name&quot;:&quot;playwright&quot;,&quot;command&quot;:&quot;npx&quot;,&quot;args&quot;:[&quot;@playwright/mcp@latest&quot;]}&#039;
```

After installation, the Playwright MCP server will be available for use with your GitHub Copilot agent in VS Code.
&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Cursor&lt;/b&gt;&lt;/summary&gt;

#### Click the button to install:

[![Install MCP Server](https://cursor.com/deeplink/mcp-install-dark.svg)](https://cursor.com/install-mcp?name=playwright&amp;config=eyJjb21tYW5kIjoibnB4IEBwbGF5d3JpZ2h0L21jcEBsYXRlc3QifQ%3D%3D)

#### Or install manually:

Go to `Cursor Settings` -&gt; `MCP` -&gt; `Add new MCP Server`. Name to your liking, use `command` type with the command `npx @playwright/mcp`. You can also verify config or add command like arguments via clicking `Edit`.

```js
{
  &quot;mcpServers&quot;: {
    &quot;playwright&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [
        &quot;@playwright/mcp@latest&quot;
      ]
    }
  }
}
```
&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Windsurf&lt;/b&gt;&lt;/summary&gt;

Follow Windsurf MCP [documentation](https://docs.windsurf.com/windsurf/cascade/mcp). Use following configuration:

```js
{
  &quot;mcpServers&quot;: {
    &quot;playwright&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [
        &quot;@playwright/mcp@latest&quot;
      ]
    }
  }
}
```
&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Claude Desktop&lt;/b&gt;&lt;/summary&gt;

Follow the MCP install [guide](https://modelcontextprotocol.io/quickstart/user), use following configuration:

```js
{
  &quot;mcpServers&quot;: {
    &quot;playwright&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [
        &quot;@playwright/mcp@latest&quot;
      ]
    }
  }
}
```
&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Claude Code&lt;/b&gt;&lt;/summary&gt;

Use the Claude Code CLI to add the Playwright MCP server:

```bash
claude mcp add playwright npx @playwright/mcp@latest
```
&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Qodo Gen&lt;/b&gt;&lt;/summary&gt;

Open [Qodo Gen](https://docs.qodo.ai/qodo-documentation/qodo-gen) chat panel in VSCode or IntelliJ ‚Üí Connect more tools ‚Üí + Add new MCP ‚Üí Paste the following configuration:

```js
{
  &quot;mcpServers&quot;: {
    &quot;playwright&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [
        &quot;@playwright/mcp@latest&quot;
      ]
    }
  }
}
```

Click &lt;code&gt;Save&lt;/code&gt;.
&lt;/details&gt;

### Configuration

Playwright MCP server supports following arguments. They can be provided in the JSON configuration above, as a part of the `&quot;args&quot;` list:

&lt;!--- Options generated by update-readme.js --&gt;

```
&gt; npx @playwright/mcp@latest --help
  --allowed-origins &lt;origins&gt;  semicolon-separated list of origins to allow the
                               browser to request. Default is to allow all.
  --blocked-origins &lt;origins&gt;  semicolon-separated list of origins to block the
                               browser from requesting. Blocklist is evaluated
                               before allowlist. If used without the allowlist,
                               requests not matching the blocklist are still
                               allowed.
  --block-service-workers      block service workers
  --browser &lt;browser&gt;          browser or chrome channel to use, possible
                               values: chrome, firefox, webkit, msedge.
  --browser-agent &lt;endpoint&gt;   Use browser agent (experimental).
  --caps &lt;caps&gt;                comma-separated list of capabilities to enable,
                               possible values: tabs, pdf, history, wait, files,
                               install. Default is all.
  --cdp-endpoint &lt;endpoint&gt;    CDP endpoint to connect to.
  --config &lt;path&gt;              path to the configuration file.
  --device &lt;device&gt;            device to emulate, for example: &quot;iPhone 15&quot;
  --executable-path &lt;path&gt;     path to the browser executable.
  --headless                   run browser in headless mode, headed by default
  --host &lt;host&gt;                host to bind server to. Default is localhost. Use
                               0.0.0.0 to bind to all interfaces.
  --ignore-https-errors        ignore https errors
  --isolated                   keep the browser profile in memory, do not save
                               it to disk.
  --image-responses &lt;mode&gt;     whether to send image responses to the client.
                               Can be &quot;allow&quot;, &quot;omit&quot;, or &quot;auto&quot;. Defaults to
                               &quot;auto&quot;, which sends images if the client can
                               display them.
  --no-sandbox                 disable the sandbox for all process types that
                               are normally sandboxed.
  --output-dir &lt;path&gt;          path to the directory for output files.
  --port &lt;port&gt;                port to listen on for SSE transport.
  --proxy-bypass &lt;bypass&gt;      comma-separated domains to bypass proxy, for
                               example &quot;.com,chromium.org,.domain.com&quot;
  --proxy-server &lt;proxy&gt;       specify proxy server, for example
                               &quot;http://myproxy:3128&quot; or &quot;socks5://myproxy:8080&quot;
  --save-trace                 Whether to save the Playwright Trace of the
                               session into the output directory.
  --storage-state &lt;path&gt;       path to the storage state file for isolated
                               sessions.
  --user-agent &lt;ua string&gt;     specify user agent string
  --user-data-dir &lt;path&gt;       path to the user data directory. If not
                               specified, a temporary directory will be created.
  --viewport-size &lt;size&gt;       specify browser viewport size in pixels, for
                               example &quot;1280, 720&quot;
  --vision                     Run server that uses screenshots (Aria snapshots
                               are used by default)
```

&lt;!--- End of options generated section --&gt;

### User profile

You can run Playwright MCP with persistent profile like a regular browser (default), or in the isolated contexts for the testing sessions.

**Persistent profile**

All the logged in information will be stored in the persistent profile, you can delete it between sessions if you&#039;d like to clear the offline state.
Persistent profile is located at the following locations and you can override it with the `--user-data-dir` argument.

```bash
# Windows
%USERPROFILE%\AppData\Local\ms-playwright\mcp-{channel}-profile

# macOS
- ~/Library/Caches/ms-playwright/mcp-{channel}-profile

# Linux
- ~/.cache/ms-playwright/mcp-{channel}-profile
```

**Isolated**

In the isolated mode, each session is started in the isolated profile. Every time you ask MCP to close the browser,
the session is closed and all the storage state for this session is lost. You can provide initial storage state
to the browser via the config&#039;s `contextOptions` or via the `--storage-state` argument. Learn more about the storage
state [here](https://playwright.dev/docs/auth).

```js
{
  &quot;mcpServers&quot;: {
    &quot;playwright&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [
        &quot;@playwright/mcp@latest&quot;,
        &quot;--isolated&quot;,
        &quot;--storage-state={path/to/storage.json}&quot;
      ]
    }
  }
}
```

### Configuration file

The Playwright MCP server can be configured using a JSON configuration file. You can specify the configuration file
using the `--config` command line option:

```bash
npx @playwright/mcp@latest --config path/to/config.json
```

&lt;details&gt;
&lt;summary&gt;Configuration file schema&lt;/summary&gt;

```typescript
{
  // Browser configuration
  browser?: {
    // Browser type to use (chromium, firefox, or webkit)
    browserName?: &#039;chromium&#039; | &#039;firefox&#039; | &#039;webkit&#039;;

    // Keep the browser profile in memory, do not save it to disk.
    isolated?: boolean;

    // Path to user data directory for browser profile persistence
    userDataDir?: string;

    // Browser launch options (see Playwright docs)
    // @see https://playwright.dev/docs/api/class-browsertype#browser-type-launch
    launchOptions?: {
      channel?: string;        // Browser channel (e.g. &#039;chrome&#039;)
      headless?: boolean;      // Run in headless mode
      executablePath?: string; // Path to browser executable
      // ... other Playwright launch options
    };

    // Browser context options
    // @see https://playwright.dev/docs/api/class-browser#browser-new-context
    contextOptions?: {
      viewport?: { width: number, height: number };
      // ... other Playwright context options
    };

    // CDP endpoint for connecting to existing browser
    cdpEndpoint?: string;

    // Remote Playwright server endpoint
    remoteEndpoint?: string;
  },

  // Server configuration
  server?: {
    port?: number;  // Port to listen on
    host?: string;  // Host to bind to (default: localhost)
  },

  // List of enabled capabilities
  capabilities?: Array&lt;
    &#039;core&#039; |    // Core browser automation
    &#039;tabs&#039; |    // Tab management
    &#039;pdf&#039; |     // PDF generation
    &#039;history&#039; | // Browser history
    &#039;wait&#039; |    // Wait utilities
    &#039;files&#039; |   // File handling
    &#039;install&#039; | // Browser installation
    &#039;testing&#039;   // Testing
  &gt;;

  // Enable vision mode (screenshots instead of accessibility snapshots)
  vision?: boolean;

  // Directory for output files
  outputDir?: string;

  // Network configuration
  network?: {
    // List of origins to allow the browser to request. Default is to allow all. Origins matching both `allowedOrigins` and `blockedOrigins` will be blocked.
    allowedOrigins?: string[];

    // List of origins to block the browser to request. Origins matching both `allowedOrigins` and `blockedOrigins` will be blocked.
    blockedOrigins?: string[];
  };
 
  /**
   * Do not send image responses to the client.
   */
  noImageResponses?: boolean;
}
```
&lt;/details&gt;

### Standalone MCP server

When running headed browser on system w/o display or from worker processes of the IDEs,
run the MCP server from environment with the DISPLAY and pass the `--port` flag to enable SSE transport.

```bash
npx @playwright/mcp@latest --port 8931
```

And then in MCP client config, set the `url` to the SSE endpoint:

```js
{
  &quot;mcpServers&quot;: {
    &quot;playwright&quot;: {
      &quot;url&quot;: &quot;http://localhost:8931/sse&quot;
    }
  }
}
```

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Docker&lt;/b&gt;&lt;/summary&gt;

**NOTE:** The Docker implementation only supports headless chromium at the moment.

```js
{
  &quot;mcpServers&quot;: {
    &quot;playwright&quot;: {
      &quot;command&quot;: &quot;docker&quot;,
      &quot;args&quot;: [&quot;run&quot;, &quot;-i&quot;, &quot;--rm&quot;, &quot;--init&quot;, &quot;--pull=always&quot;, &quot;mcr.microsoft.com/playwright/mcp&quot;]
    }
  }
}
```

You can build the Docker image yourself.

```
docker build -t mcr.microsoft.com/playwright/mcp .
```
&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Programmatic usage&lt;/b&gt;&lt;/summary&gt;

```js
import http from &#039;http&#039;;

import { createConnection } from &#039;@playwright/mcp&#039;;
import { SSEServerTransport } from &#039;@modelcontextprotocol/sdk/server/sse.js&#039;;

http.createServer(async (req, res) =&gt; {
  // ...

  // Creates a headless Playwright MCP server with SSE transport
  const connection = await createConnection({ browser: { launchOptions: { headless: true } } });
  const transport = new SSEServerTransport(&#039;/messages&#039;, res);
  await connection.sever.connect(transport);

  // ...
});
```
&lt;/details&gt;

### Tools

The tools are available in two modes:

1. **Snapshot Mode** (default): Uses accessibility snapshots for better performance and reliability
2. **Vision Mode**: Uses screenshots for visual-based interactions

To use Vision Mode, add the `--vision` flag when starting the server:

```js
{
  &quot;mcpServers&quot;: {
    &quot;playwright&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [
        &quot;@playwright/mcp@latest&quot;,
        &quot;--vision&quot;
      ]
    }
  }
}
```

Vision Mode works best with the computer use models that are able to interact with elements using
X Y coordinate space, based on the provided screenshot.

&lt;!--- Tools generated by update-readme.js --&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Interactions&lt;/b&gt;&lt;/summary&gt;

&lt;!-- NOTE: This has been generated via update-readme.js --&gt;

- **browser_snapshot**
  - Title: Page snapshot
  - Description: Capture accessibility snapshot of the current page, this is better than screenshot
  - Parameters: None
  - Read-only: **true**

&lt;!-- NOTE: This has been generated via update-readme.js --&gt;

- **browser_click**
  - Title: Click
  - Description: Perform click on a web page
  - Parameters:
    - `element` (string): Human-readable element description used to obtain permission to interact with the element
    - `ref` (string): Exact target element reference from the page snapshot
  - Read-only: **false**

&lt;!-- NOTE: This has been generated via update-readme.js --&gt;

- **browser_drag**
  - Title: Drag mouse
  - Description: Perform drag and drop between two elements
  - Parameters:
    - `startElement` (string): Human-readable source element description used to obtain the permission to interact with the element
    - `startRef` (string): Exact source element reference from the page snapshot
    - `endElement` (string): Human-readable target element description used to obtain the permission to interact with the element
    - `endRef` (string): Exact target element reference from the page snapshot
  - Read-only: **false**

&lt;!-- NOTE: This has been generated via update-readme.js --&gt;

- **browser_hover**
  - Title: Hover mouse
  - Description: Hover over element on page
  - Parameters:
    - `element` (string): Human-readable element description used to obtain permission to interact with the element
    - `ref` (string): Exact target element reference from the page snapshot
  - Read-only: **true**

&lt;!-- NOTE: This has been generated via update-readme.js --&gt;

- **browser_type**
  - Title: Type text
  - Description: Type text into editable element
  - Parameters:
    - `element` (string): Human-readable element description used to obtain permission to interact with the element
    - `ref` (string): Exact target element reference from the page snapshot
    - `text` (string): Text to type into the element
    - `submit` (boolean, optional): Whether to submit entered text (press Enter after)
    - `slowly` (boolean, optional): Whether to type one character at a time. Useful for triggering key handlers in the page. By default entire text is filled in at once.
  - Read-only: **false**

&lt;!-- NOTE: This has been generated via update-readme.js --&gt;

- **browser_select_option**
  - Title: Select option
  - Description: Select an option in a dropdown
  - Parameters:
    - `element` (string): Human-readable element description used to obtain permission to interact with the element
    - `ref` (string): Exact target element reference from the page snapshot
    - `values` (array): Array of values to select in the dropdown. This can be a single value or multiple values.
  - Read-only: **false**

&lt;!-- NOTE: This has been generated via update-readme.js --&gt;

- **browser_press_key**
  - Title: Press a key
  - Description: Press a key on the keyboard
  - Parameters:
    - `key` (string): Name of the key to press or a character to generate, such as `ArrowLeft` or `a`
  - Read-only: **false**

&lt;!-- NOTE: This has been generated via update-readme.js --&gt;

- **browser_wait_for**
  - Title: Wait for
  - Description: Wait for text to appear or disappear or a specified time to pass
  - Parameters:
    - `time` (number, optional): The time to wait in seconds
    - `text` (string, optional): The text to wait for
    - `textGone` (string, optional): The text to wait for to disappear
  - Read-only: **true**

&lt;!-- NOTE: This has been generated via update-readme.js --&gt;

- **browser_file_upload**
  - Title: Upload files
  - Description: Upload one or multiple files
  - Parameters:
    - `paths` (array): The absolute paths to the files to upload. Can be a single file or multiple files.
  - Read-only: **false**

&lt;!-- NOTE: This has been generated via update-readme.js --&gt;

- **browser_handle_dialog**
  - Title: Handle a dialog
  - Description: Handle a dialog
  - Parameters:
    - `accept` (boolean): Whether to accept the dialog.
    - `promptText` (string, optional): The text of the prompt in case of a prompt dialog.
  - Read-only: **false**

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Navigation&lt;/b&gt;&lt;/summary&gt;

&lt;!-- NOTE: This has been generated via update-readme.js --&gt;

- **browser_navigate**
  - Title: Navigate to a URL
  - Description: Navigate to a URL
  - Parameters:
    - `url` (string): The URL to navigate to
  - Read-only: **false**

&lt;!-- NOTE: This has been generated via update-readme.js --&gt;

- **browser_navigate_back**
  - Title: Go back
  - Description: Go back to the previous page
  - Parameters: None
  - Read-only: **true**

&lt;!-- NOTE: This has been generated via update-readme.js --&gt;

- **browser_navigate_forward**
  - Title: Go forward
  - Description: Go forward to the next page
  - Parameters: None
  - Read-only: **true**

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Resources&lt;/b&gt;&lt;/summary&gt;

&lt;!-- NOTE: This has been generated via update-readme.js --&gt;

- **browser_take_screenshot**
  - Title: Take a screenshot
  - Description: Take a screenshot of the current page. You can&#039;t perform actions based on the screenshot, use browser_snapshot for actions.
  - Parameters:
    - `raw` (boolean, optional): Whether to return without compression (in PNG format). Default is false, which returns a JPEG image.
    - `filename` (string, optional): File name to save the screenshot to. Defaults to `page-{timestamp}.{png|jpeg}` if not specified.
    - `element` (string, optional): Human-readable element description used to obtain permission to screenshot the element. If not provided, the screenshot will be taken of viewport. If element is provided, ref must be provided too.
    - `ref` (string, optional): Exact target element reference from the page snapshot. If not provided, the screenshot will be taken of viewport. If ref is provided, element must be provided too.
  - Read-only: **true**

&lt;!-- NOTE: This has been generated via update-readme.js --&gt;

- **browser_pdf_save**
  - Title: Save as PDF
  - Description: Save page as PDF
  - Parameters:
    - `filename` (string, optional): File name to save the pdf to. Defaults to `page-{timestamp}.pdf` if not specified.
  - Read-only: **true**

&lt;!-- NOTE: This has been generated via update-readme.js --&gt;

- **browser_network_reque

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[menloresearch/jan]]></title>
            <link>https://github.com/menloresearch/jan</link>
            <guid>https://github.com/menloresearch/jan</guid>
            <pubDate>Thu, 10 Jul 2025 00:05:11 GMT</pubDate>
            <description><![CDATA[Jan is an open source alternative to ChatGPT that runs 100% offline on your computer]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/menloresearch/jan">menloresearch/jan</a></h1>
            <p>Jan is an open source alternative to ChatGPT that runs 100% offline on your computer</p>
            <p>Language: TypeScript</p>
            <p>Stars: 34,486</p>
            <p>Forks: 2,012</p>
            <p>Stars today: 119 stars today</p>
            <h2>README</h2><pre># Jan - Local AI Assistant

![Jan banner](./JanBanner.png)

&lt;p align=&quot;center&quot;&gt;
  &lt;!-- ALL-CONTRIBUTORS-BADGE:START - Do not remove or modify this section --&gt;
  &lt;img alt=&quot;GitHub commit activity&quot; src=&quot;https://img.shields.io/github/commit-activity/m/janhq/jan&quot;/&gt;
  &lt;img alt=&quot;Github Last Commit&quot; src=&quot;https://img.shields.io/github/last-commit/janhq/jan&quot;/&gt;
  &lt;img alt=&quot;Github Contributors&quot; src=&quot;https://img.shields.io/github/contributors/janhq/jan&quot;/&gt;
  &lt;img alt=&quot;GitHub closed issues&quot; src=&quot;https://img.shields.io/github/issues-closed/janhq/jan&quot;/&gt;
  &lt;img alt=&quot;Discord&quot; src=&quot;https://img.shields.io/discord/1107178041848909847?label=discord&quot;/&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://jan.ai/docs/quickstart&quot;&gt;Getting Started&lt;/a&gt; 
  - &lt;a href=&quot;https://jan.ai/docs&quot;&gt;Docs&lt;/a&gt; 
  - &lt;a href=&quot;https://github.com/janhq/jan/releases&quot;&gt;Changelog&lt;/a&gt; 
  - &lt;a href=&quot;https://github.com/janhq/jan/issues&quot;&gt;Bug reports&lt;/a&gt; 
  - &lt;a href=&quot;https://discord.gg/AsJ8krTT3N&quot;&gt;Discord&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
‚ö†Ô∏è &lt;b&gt; Jan is currently in Development&lt;/b&gt;: Expect breaking changes and bugs!
&lt;/p&gt;


Jan is a ChatGPT-alternative that runs 100% offline on your device. Our goal is to make it easy for a layperson to download and run LLMs and use AI with **full control** and **privacy**.

Jan is powered by [Cortex](https://github.com/janhq/cortex.cpp), our embeddable local AI engine that runs on any hardware.
From PCs to multi-GPU clusters, Jan &amp; Cortex supports universal architectures:

- [x] NVIDIA GPUs (fast)
- [x] Apple M-series (fast)
- [x] Apple Intel
- [x] Linux Debian
- [x] Windows x64

#### Features:
- [Model Library](https://jan.ai/docs/models/manage-models#add-models) with popular LLMs like Llama, Gemma, Mistral, or Qwen 
- Connect to [Remote AI APIs](https://jan.ai/docs/remote-models/openai) like Groq and OpenRouter
- Local API Server with OpenAI-equivalent API
- [Extensions](https://jan.ai/docs/extensions) for customizing Jan

## Download

&lt;table&gt;
  &lt;tr style=&quot;text-align:center&quot;&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;&lt;b&gt;Version Type&lt;/b&gt;&lt;/td&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;&lt;b&gt;Windows&lt;/b&gt;&lt;/td&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;&lt;b&gt;MacOS Universal&lt;/b&gt;&lt;/td&gt;
    &lt;td colspan=&quot;2&quot; style=&quot;text-align:center&quot;&gt;&lt;b&gt;Linux&lt;/b&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr style=&quot;text-align:center&quot;&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;&lt;b&gt;Stable (Recommended)&lt;/b&gt;&lt;/td&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;
      &lt;a href=&#039;https://app.jan.ai/download/latest/win-x64&#039;&gt;
        &lt;img src=&#039;https://github.com/janhq/jan/blob/dev/docs/static/img/windows.png&#039; style=&quot;height:14px; width: 14px&quot; /&gt;
        &lt;b&gt;jan.exe&lt;/b&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;
      &lt;a href=&#039;https://app.jan.ai/download/latest/mac-universal&#039;&gt;
        &lt;img src=&#039;https://github.com/janhq/jan/blob/dev/docs/static/img/mac.png&#039; style=&quot;height:15px; width: 15px&quot; /&gt;
        &lt;b&gt;jan.dmg&lt;/b&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;
      &lt;a href=&#039;https://app.jan.ai/download/latest/linux-amd64-deb&#039;&gt;
        &lt;img src=&#039;https://github.com/janhq/jan/blob/dev/docs/static/img/linux.png&#039; style=&quot;height:14px; width: 14px&quot; /&gt;
        &lt;b&gt;jan.deb&lt;/b&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;
      &lt;a href=&#039;https://app.jan.ai/download/latest/linux-amd64-appimage&#039;&gt;
        &lt;img src=&#039;https://github.com/janhq/jan/blob/dev/docs/static/img/linux.png&#039; style=&quot;height:14px; width: 14px&quot; /&gt;
        &lt;b&gt;jan.AppImage&lt;/b&gt;
      &lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr style=&quot;text-align:center&quot;&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;&lt;b&gt;Beta (Preview)&lt;/b&gt;&lt;/td&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;
      &lt;a href=&#039;https://app.jan.ai/download/beta/win-x64&#039;&gt;
        &lt;img src=&#039;https://github.com/janhq/jan/blob/dev/docs/static/img/windows.png&#039; style=&quot;height:14px; width: 14px&quot; /&gt;
        &lt;b&gt;jan.exe&lt;/b&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;
      &lt;a href=&#039;https://app.jan.ai/download/beta/mac-universal&#039;&gt;
        &lt;img src=&#039;https://github.com/janhq/jan/blob/dev/docs/static/img/mac.png&#039; style=&quot;height:15px; width: 15px&quot; /&gt;
        &lt;b&gt;jan.dmg&lt;/b&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;
      &lt;a href=&#039;https://app.jan.ai/download/beta/linux-amd64-deb&#039;&gt;
        &lt;img src=&#039;https://github.com/janhq/jan/blob/dev/docs/static/img/linux.png&#039; style=&quot;height:14px; width: 14px&quot; /&gt;
        &lt;b&gt;jan.deb&lt;/b&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;
      &lt;a href=&#039;https://app.jan.ai/download/beta/linux-amd64-appimage&#039;&gt;
        &lt;img src=&#039;https://github.com/janhq/jan/blob/dev/docs/static/img/linux.png&#039; style=&quot;height:14px; width: 14px&quot; /&gt;
        &lt;b&gt;jan.AppImage&lt;/b&gt;
      &lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr style=&quot;text-align:center&quot;&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;&lt;b&gt;Nightly Build (Experimental)&lt;/b&gt;&lt;/td&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;
      &lt;a href=&#039;https://app.jan.ai/download/nightly/win-x64&#039;&gt;
        &lt;img src=&#039;https://github.com/janhq/jan/blob/dev/docs/static/img/windows.png&#039; style=&quot;height:14px; width: 14px&quot; /&gt;
        &lt;b&gt;jan.exe&lt;/b&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;
      &lt;a href=&#039;https://app.jan.ai/download/nightly/mac-universal&#039;&gt;
        &lt;img src=&#039;https://github.com/janhq/jan/blob/dev/docs/static/img/mac.png&#039; style=&quot;height:15px; width: 15px&quot; /&gt;
        &lt;b&gt;jan.dmg&lt;/b&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;
      &lt;a href=&#039;https://app.jan.ai/download/nightly/linux-amd64-deb&#039;&gt;
        &lt;img src=&#039;https://github.com/janhq/jan/blob/dev/docs/static/img/linux.png&#039; style=&quot;height:14px; width: 14px&quot; /&gt;
        &lt;b&gt;jan.deb&lt;/b&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;
      &lt;a href=&#039;https://app.jan.ai/download/nightly/linux-amd64-appimage&#039;&gt;
        &lt;img src=&#039;https://github.com/janhq/jan/blob/dev/docs/static/img/linux.png&#039; style=&quot;height:14px; width: 14px&quot; /&gt;
        &lt;b&gt;jan.AppImage&lt;/b&gt;
      &lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

Download the latest version of Jan at https://jan.ai/ or visit the [GitHub Releases](https://github.com/janhq/jan/releases) to download any previous release.

## Demo

https://github.com/user-attachments/assets/c3592fa2-c504-4d9d-a885-7e00122a50f3

*Real-time Video: Jan v0.5.7 on a Mac M2, 16GB Sonoma 14.2*

## Quicklinks

### Jan

- [Jan Website](https://jan.ai/)
- [Jan GitHub](https://github.com/janhq/jan)
- [Documentation](https://jan.ai/docs)
- [Jan Changelog](https://jan.ai/changelog)
- [Jan Blog](https://jan.ai/blog)

### Cortex.cpp
Jan is powered by **Cortex.cpp**. It is a C++ command-line interface (CLI) designed as an alternative to [Ollama](https://ollama.com/). By default, it runs on the llama.cpp engine but also supports other engines, including ONNX and TensorRT-LLM, making it a multi-engine platform.


- [Cortex Website](https://cortex.so/)
- [Cortex GitHub](https://github.com/janhq/cortex.cpp)
- [Documentation](https://cortex.so/docs/)
- [Models Library](https://cortex.so/models)
- API Reference: *Under development*
  
## Requirements for running Jan

- **MacOS**: 13 or higher
- **Windows**:
  - Windows 10 or higher
  - To enable GPU support:
    - Nvidia GPU with CUDA Toolkit 11.7 or higher
    - Nvidia driver 470.63.01 or higher
- **Linux**:
  - glibc 2.27 or higher (check with `ldd --version`)
  - gcc 11, g++ 11, cpp 11 or higher, refer to this [link](https://jan.ai/guides/troubleshooting/gpu-not-used/#specific-requirements-for-linux) for more information
  - To enable GPU support:
    - Nvidia GPU with CUDA Toolkit 11.7 or higher
    - Nvidia driver 470.63.01 or higher

## Troubleshooting

As Jan is in development mode, you might get stuck on a some common issues:
- [Troubleshooting a broken build](https://jan.ai/docs/troubleshooting#broken-build)
- [Troubleshooting NVIDIA GPU](https://jan.ai/docs/troubleshooting#troubleshooting-nvidia-gpu)
- [Troubleshooting Something&#039;s Amiss](https://jan.ai/docs/troubleshooting#somethings-amiss)


If you can&#039;t find what you need in our troubleshooting guide, feel free reach out to us for extra help:
1. Copy your [error logs &amp; device specifications](https://jan.ai/docs/troubleshooting#how-to-get-error-logs).
2. Go to our [Discord](https://discord.com/invite/FTk2MvZwJH) &amp; send it to **#üÜò|get-help** channel for further support.

*Check the logs to ensure the information is what you intend to send. Note that we retain your logs for only 24 hours, so report any issues promptly.*
  

## Contributing

Contributions are welcome! Please read the [CONTRIBUTING.md](CONTRIBUTING.md) file

### Pre-requisites

- node &gt;= 20.0.0
- yarn &gt;= 1.22.0
- make &gt;= 3.81

### Instructions

1. **Clone the repository and prepare:**

   ```bash
   git clone https://github.com/janhq/jan
   cd jan
   git checkout -b DESIRED_BRANCH
   ```

2. **Run development and use Jan Desktop**

   ```bash
   make dev
   ```

This will start the development server and open the desktop app.



### For production build

```bash
# Do steps 1 and 2 in the previous section
# Build the app
make build
```

This will build the app MacOS m1/m2 for production (with code signing already done) and put the result in `dist` folder.

## Acknowledgements

Jan builds on top of other open-source projects:

- [llama.cpp](https://github.com/ggerganov/llama.cpp)
- [LangChain](https://github.com/langchain-ai)
- [TensorRT](https://github.com/NVIDIA/TensorRT)
- [TensorRT-LLM](https://github.com/NVIDIA/TensorRT-LLM)

## Contact

- Bugs &amp; requests: file a GitHub ticket
- For discussion: join our Discord [here](https://discord.gg/FTk2MvZwJH)
- For business inquiries: email hello@jan.ai 
- For jobs: please email hr@jan.ai

## Trust &amp; Safety

Beware of scams!

- We will never request your personal information.
- Our product is completely free; no paid version exists.
- We do not have a token or ICO.
- We are a [bootstrapped company](https://en.wikipedia.org/wiki/Bootstrapping), and don&#039;t have any external investors (*yet*). We&#039;re open to exploring opportunities with strategic partners want to tackle [our mission](https://jan.ai/about#mission) together.

## License

Jan is free and open source, under the **AGPLv3** license.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[th-ch/youtube-music]]></title>
            <link>https://github.com/th-ch/youtube-music</link>
            <guid>https://github.com/th-ch/youtube-music</guid>
            <pubDate>Thu, 10 Jul 2025 00:05:10 GMT</pubDate>
            <description><![CDATA[YouTube Music Desktop App bundled with custom plugins]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/th-ch/youtube-music">th-ch/youtube-music</a></h1>
            <p>YouTube Music Desktop App bundled with custom plugins</p>
            <p>Language: TypeScript</p>
            <p>Stars: 25,542</p>
            <p>Forks: 1,381</p>
            <p>Stars today: 267 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;

# YouTube Music

[![GitHub release](https://img.shields.io/github/release/th-ch/youtube-music.svg?style=for-the-badge&amp;logo=youtube-music)](https://github.com/th-ch/youtube-music/releases/)
[![GitHub license](https://img.shields.io/github/license/th-ch/youtube-music.svg?style=for-the-badge)](https://github.com/th-ch/youtube-music/blob/master/license)
[![eslint code style](https://img.shields.io/badge/code_style-eslint-5ed9c7.svg?style=for-the-badge)](https://github.com/th-ch/youtube-music/blob/master/eslint.config.mjs)
[![Build status](https://img.shields.io/github/actions/workflow/status/th-ch/youtube-music/build.yml?branch=master&amp;style=for-the-badge&amp;logo=youtube-music)](https://GitHub.com/th-ch/youtube-music/releases/)
[![GitHub All Releases](https://img.shields.io/github/downloads/th-ch/youtube-music/total?style=for-the-badge&amp;logo=youtube-music)](https://GitHub.com/th-ch/youtube-music/releases/)
[![AUR](https://img.shields.io/aur/version/youtube-music-bin?color=blueviolet&amp;style=for-the-badge&amp;logo=youtube-music)](https://aur.archlinux.org/packages/youtube-music-bin)
[![Known Vulnerabilities](https://snyk.io/test/github/th-ch/youtube-music/badge.svg)](https://snyk.io/test/github/th-ch/youtube-music)

&lt;/div&gt;

![Screenshot](web/screenshot.png &quot;Screenshot&quot;)


&lt;div align=&quot;center&quot;&gt;
	&lt;a href=&quot;https://github.com/th-ch/youtube-music/releases/latest&quot;&gt;
		&lt;img src=&quot;web/youtube-music.svg&quot; width=&quot;400&quot; height=&quot;100&quot; alt=&quot;YouTube Music SVG&quot;&gt;
	&lt;/a&gt;
&lt;/div&gt;

Read this in other languages: [ÌïúÍµ≠Ïñ¥](./docs/readme/README-ko.md), [Fran√ßaise](./docs/readme/README-fr.md), [√çslenska](./docs/readme/README-is.md), [Espa√±ol](./docs/readme/README-es.md), [P—É—Å—Å–∫–∏–π](./docs/readme/README-ru.md), [–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞](./docs/readme/README-uk.md), [Magyar](./docs/readme/README-hu.md), [Portugu√™s](./docs/readme/README-pt.md), [Êó•Êú¨Ë™û](./docs/readme/README-ja.md)

**Electron wrapper around YouTube Music featuring:**

- Native look &amp; feel, aims at keeping the original interface
- Framework for custom plugins: change YouTube Music to your needs (style, content, features), enable/disable plugins in
  one click

## Demo Image

|                          Player Screen (album color theme &amp; ambient light)                                |
|:---------------------------------------------------------------------------------------------------------:|
|![Screenshot1](https://github.com/th-ch/youtube-music/assets/16558115/53efdf73-b8fa-4d7b-a235-b96b91ea77fc)|

## Content

- [Features](#features)
- [Available plugins](#available-plugins)
- [Translation](#translation)
- [Download](#download)
  - [Arch Linux](#arch-linux)
  - [MacOS](#macos)
  - [Windows](#windows)
    - [How to install without a network connection? (in Windows)](#how-to-install-without-a-network-connection-in-windows)
- [Themes](#themes)
- [Dev](#dev)
- [Build your own plugins](#build-your-own-plugins)
  - [Creating a plugin](#creating-a-plugin)
  - [Common use cases](#common-use-cases)
- [Build](#build)
- [Production Preview](#production-preview)
- [Tests](#tests)
- [License](#license)
- [FAQ](#faq)

## Features:

- **Auto confirm when paused** (Always Enabled): disable
  the [&quot;Continue Watching?&quot;](https://user-images.githubusercontent.com/61631665/129977894-01c60740-7ec6-4bf0-9a2c-25da24491b0e.png)
  popup that pause music after a certain time

 - And more ...

## Available plugins:

- **Ad Blocker**: Block all ads and tracking out of the box

- **Album Actions**: Adds Undislike, Dislike, Like, and Unlike buttons to apply this to all songs in a playlist or album

- **Album Color Theme**: Applies a dynamic theme and visual effects based on the album color palette

- **Ambient Mode**: Applies a lighting effect by casting gentle colors from the video, into your screen‚Äôs background

- **Audio Compressor**: Apply compression to audio (lowers the volume of the loudest parts of the signal and raises the
  volume of the softest parts)

- **Blur Navigation Bar**: makes navigation bar transparent and blurry

- **Bypass Age Restrictions**: bypass YouTube&#039;s age verification

- **Captions Selector**: Enable captions

- **Compact Sidebar**: Always set the sidebar in compact mode

- **Crossfade**: Crossfade between songs

- **Disable Autoplay**: Makes every song start in &quot;paused&quot; mode

- **[Discord](https://discord.com/) Rich Presence**: Show your friends what you listen to
  with [Rich Presence](https://user-images.githubusercontent.com/28219076/104362104-a7a0b980-5513-11eb-9744-bb89eabe0016.png)

- **Downloader**: downloads
  MP3 [directly from the interface](https://user-images.githubusercontent.com/61631665/129977677-83a7d067-c192-45e1-98ae-b5a4927393be.png) [(youtube-dl)](https://github.com/ytdl-org/youtube-dl)

- **Equalizer**: add filters to boost or cut specific range of frequencies (e.g. bass booster)

- **Exponential Volume**: Makes the volume
  slider [exponential](https://greasyfork.org/en/scripts/397686-youtube-music-fix-volume-ratio/) so it&#039;s easier to
  select lower volumes

- **In-App Menu**: [gives bars a fancy, dark look](https://user-images.githubusercontent.com/78568641/112215894-923dbf00-8c29-11eb-95c3-3ce15db27eca.png)

  &gt; (see [this post](https://github.com/th-ch/youtube-music/issues/410#issuecomment-952060709) if you have problem
  accessing the menu after enabling this plugin and hide-menu option)

- **Scrobbler**: Adds scrobbling support for [Last.fm](https://www.last.fm/) and [ListenBrainz](https://listenbrainz.org/)

- **Lumia Stream**: Adds [Lumia Stream](https://lumiastream.com/) support

- **Lyrics Genius**: Adds lyrics support for most songs

- **Music Together**: Share a playlist with others. When the host plays a song, everyone else will hear the same song

- **Navigation**: Next/Back navigation arrows directly integrated in the interface, like in your favorite browser

- **No Google Login**: Remove Google login buttons and links from the interface

- **Notifications**: Display a notification when a song starts
  playing ([interactive notifications](https://user-images.githubusercontent.com/78568641/114102651-63ce0e00-98d0-11eb-9dfe-c5a02bb54f9c.png)
  are available on windows)

- **Picture-in-picture**: allows to switch the app to picture-in-picture mode

- **Playback Speed**: Listen fast, listen
  slow! [Adds a slider that controls song speed](https://user-images.githubusercontent.com/61631665/129976003-e55db5ba-bf42-448c-a059-26a009775e68.png)

- **Precise Volume**: Control the volume precisely using mousewheel/hotkeys, with a custom hud and customizable volume
  steps

- **Shortcuts (&amp; MPRIS)**: Allows setting global hotkeys for playback (play/pause/next/previous) +
  disable [media osd](https://user-images.githubusercontent.com/84923831/128601225-afa38c1f-dea8-4209-9f72-0f84c1dd8b54.png)
  by overriding media keys + enable Ctrl/CMD + F to search + enable linux mpris support for
  mediakeys + [custom hotkeys](https://github.com/Araxeus/youtube-music/blob/1e591d6a3df98449bcda6e63baab249b28026148/providers/song-controls.js#L13-L50)
  for [advanced users](https://github.com/th-ch/youtube-music/issues/106#issuecomment-952156902)

- **Skip Disliked Song**: Skips disliked songs

- **Skip Silences**: Automatically skip silenced sections

- [**SponsorBlock**](https://github.com/ajayyy/SponsorBlock): Automatically Skips non-music parts like intro/outro or
  parts of music videos where the song isn&#039;t playing

- **Synced Lyrics**: Provides synced lyrics to songs, using providers like [LRClib](https://lrclib.net).

- **Taskbar Media Control**: Control playback from
  your [Windows taskbar](https://user-images.githubusercontent.com/78568641/111916130-24a35e80-8a82-11eb-80c8-5021c1aa27f4.png)

- **TouchBar**: Custom TouchBar layout for macOS

- **Tuna OBS**: Integration with [OBS](https://obsproject.com/)&#039;s
  plugin [Tuna](https://obsproject.com/forum/resources/tuna.843/)

- **Unobtrusive Player**: Prevents the player from popping up when playing a song

- **Video Quality Changer**: Allows changing the video quality with
  a [button](https://user-images.githubusercontent.com/78568641/138574366-70324a5e-2d64-4f6a-acdd-dc2a2b9cecc5.png) on
  the video overlay

- **Video Toggle**: Adds
  a [button](https://user-images.githubusercontent.com/28893833/173663950-63e6610e-a532-49b7-9afa-54cb57ddfc15.png) to
  switch between Video/Song mode. can also optionally remove the whole video tab

- **Visualizer**: Different music visualizers


## Translation

You can help with translation on [Hosted Weblate](https://hosted.weblate.org/projects/youtube-music/).

&lt;a href=&quot;https://hosted.weblate.org/engage/youtube-music/&quot;&gt;
  &lt;img src=&quot;https://hosted.weblate.org/widget/youtube-music/i18n/multi-auto.svg&quot; alt=&quot;translation status&quot; /&gt;
  &lt;img src=&quot;https://hosted.weblate.org/widget/youtube-music/i18n/287x66-black.png&quot; alt=&quot;translation status 2&quot; /&gt;
&lt;/a&gt;

## Download

You can check out the [latest release](https://github.com/th-ch/youtube-music/releases/latest) to quickly find the
latest version.

### Arch Linux

Install the [`youtube-music-bin`](https://aur.archlinux.org/packages/youtube-music-bin) package from the AUR. For AUR installation instructions, take a look at
this [wiki page](https://wiki.archlinux.org/index.php/Arch_User_Repository#Installing_packages).

### macOS

You can install the app using Homebrew (see the [cask definition](https://github.com/th-ch/homebrew-youtube-music)):

```bash
brew install th-ch/youtube-music/youtube-music
```

If you install the app manually and get an error &quot;is damaged and can‚Äôt be opened.&quot; when launching the app, run the following in the Terminal:

```bash
/usr/bin/xattr -cr /Applications/YouTube\ Music.app
```

### Windows

You can use the [Scoop package manager](https://scoop.sh) to install the `youtube-music` package from
the [`extras` bucket](https://github.com/ScoopInstaller/Extras).

```bash
scoop bucket add extras
scoop install extras/youtube-music
```

Alternately you can use [Winget](https://learn.microsoft.com/en-us/windows/package-manager/winget/), Windows 11s
official CLI package manager to install the `th-ch.YouTubeMusic` package.

*Note: Microsoft Defender SmartScreen might block the installation since it is from an &quot;unknown publisher&quot;. This is also
true for the manual installation when trying to run the executable(.exe) after a manual download here on github (same
file).*

```bash
winget install th-ch.YouTubeMusic
```

#### How to install without a network connection? (in Windows)

- Download the `*.nsis.7z` file for _your device architecture_ in [release page](https://github.com/th-ch/youtube-music/releases/latest).
  - `x64` for 64-bit Windows
  - `ia32` for 32-bit Windows
  - `arm64` for ARM64 Windows
- Download installer in release page. (`*-Setup.exe`)
- Place them in the **same directory**.
- Run the installer.

## Themes

You can load CSS files to change the look of the application (Options &gt; Visual Tweaks &gt; Themes).

Some predefined themes are available in https://github.com/kerichdev/themes-for-ytmdesktop-player.

## Dev

```bash
git clone https://github.com/th-ch/youtube-music
cd youtube-music
pnpm install --frozen-lockfile
pnpm dev
```

## Build your own plugins

Using plugins, you can:

- manipulate the app - the `BrowserWindow` from electron is passed to the plugin handler
- change the front by manipulating the HTML/CSS

### Creating a plugin

Create a folder in `src/plugins/YOUR-PLUGIN-NAME`:

- `index.ts`: the main file of the plugin
```typescript
import style from &#039;./style.css?inline&#039;; // import style as inline

import { createPlugin } from &#039;@/utils&#039;;

export default createPlugin({
  name: &#039;Plugin Label&#039;,
  restartNeeded: true, // if value is true, ytmusic show restart dialog
  config: {
    enabled: false,
  }, // your custom config
  stylesheets: [style], // your custom style,
  menu: async ({ getConfig, setConfig }) =&gt; {
    // All *Config methods are wrapped Promise&lt;T&gt;
    const config = await getConfig();
    return [
      {
        label: &#039;menu&#039;,
        submenu: [1, 2, 3].map((value) =&gt; ({
          label: `value ${value}`,
          type: &#039;radio&#039;,
          checked: config.value === value,
          click() {
            setConfig({ value });
          },
        })),
      },
    ];
  },
  backend: {
    start({ window, ipc }) {
      window.maximize();

      // you can communicate with renderer plugin
      ipc.handle(&#039;some-event&#039;, () =&gt; {
        return &#039;hello&#039;;
      });
    },
    // it fired when config changed
    onConfigChange(newConfig) { /* ... */ },
    // it fired when plugin disabled
    stop(context) { /* ... */ },
  },
  renderer: {
    async start(context) {
      console.log(await context.ipc.invoke(&#039;some-event&#039;));
    },
    // Only renderer available hook
    onPlayerApiReady(api: YoutubePlayer, context: RendererContext) {
      // set plugin config easily
      context.setConfig({ myConfig: api.getVolume() });
    },
    onConfigChange(newConfig) { /* ... */ },
    stop(_context) { /* ... */ },
  },
  preload: {
    async start({ getConfig }) {
      const config = await getConfig();
    },
    onConfigChange(newConfig) {},
    stop(_context) {},
  },
});
```

### Common use cases

- injecting custom CSS: create a `style.css` file in the same folder then:

```typescript
// index.ts
import style from &#039;./style.css?inline&#039;; // import style as inline

import { createPlugin } from &#039;@/utils&#039;;

export default createPlugin({
  name: &#039;Plugin Label&#039;,
  restartNeeded: true, // if value is true, ytmusic will show a restart dialog
  config: {
    enabled: false,
  }, // your custom config
  stylesheets: [style], // your custom style
  renderer() {} // define renderer hook
});
```

- If you want to change the HTML:

```typescript
import { createPlugin } from &#039;@/utils&#039;;

export default createPlugin({
  name: &#039;Plugin Label&#039;,
  restartNeeded: true, // if value is true, ytmusic will show the restart dialog
  config: {
    enabled: false,
  }, // your custom config
  renderer() {
    // Remove the login button
    document.querySelector(&quot;.sign-in-link.ytmusic-nav-bar&quot;).remove();
  } // define renderer hook
});
```

- communicating between the front and back: can be done using the ipcMain module from electron. See `index.ts` file and
  example in `sponsorblock` plugin.

## Build

1. Clone the repo
2. Follow [this guide](https://pnpm.io/installation) to install `pnpm`
3. Run `pnpm install --frozen-lockfile` to install dependencies
4. Run `pnpm build:OS`

- `pnpm dist:win` - Windows
- `pnpm dist:linux` - Linux (amd64)
- `pnpm dist:linux:deb-arm64` - Linux (arm64 for Debian)
- `pnpm dist:linux:rpm-arm64` - Linux (arm64 for Fedora)
- `pnpm dist:mac` - macOS (amd64)
- `pnpm dist:mac:arm64` - macOS (arm64)

Builds the app for macOS, Linux, and Windows,
using [electron-builder](https://github.com/electron-userland/electron-builder).

## Production Preview

```bash
pnpm start
```

## Tests

```bash
pnpm test
```

Uses [Playwright](https://playwright.dev/) to test the app.

## License

MIT ¬© [th-ch](https://github.com/th-ch/youtube-music)

## FAQ

### Why apps menu isn&#039;t showing up?

If `Hide Menu` option is on - you can show the menu with the &lt;kbd&gt;alt&lt;/kbd&gt; key (or &lt;kbd&gt;\`&lt;/kbd&gt; [backtick] if using
the in-app-menu plugin)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[angular/angular]]></title>
            <link>https://github.com/angular/angular</link>
            <guid>https://github.com/angular/angular</guid>
            <pubDate>Thu, 10 Jul 2025 00:05:09 GMT</pubDate>
            <description><![CDATA[Deliver web apps with confidence üöÄ]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/angular/angular">angular/angular</a></h1>
            <p>Deliver web apps with confidence üöÄ</p>
            <p>Language: TypeScript</p>
            <p>Stars: 98,269</p>
            <p>Forks: 26,384</p>
            <p>Stars today: 7 stars today</p>
            <h2>README</h2><pre>&lt;h1 align=&quot;center&quot;&gt;Angular - The modern web developer&#039;s platform&lt;/h1&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;adev/src/assets/images/press-kit/angular_icon_gradient.gif&quot; alt=&quot;angular-logo&quot; width=&quot;120px&quot; height=&quot;120px&quot;/&gt;
  &lt;br&gt;
  &lt;em&gt;Angular is a development platform for building mobile and desktop web applications
    &lt;br&gt; using TypeScript/JavaScript and other languages.&lt;/em&gt;
  &lt;br&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://angular.dev/&quot;&gt;&lt;strong&gt;angular.dev&lt;/strong&gt;&lt;/a&gt;
  &lt;br&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;CONTRIBUTING.md&quot;&gt;Contributing Guidelines&lt;/a&gt;
  ¬∑
  &lt;a href=&quot;https://github.com/angular/angular/issues&quot;&gt;Submit an Issue&lt;/a&gt;
  ¬∑
  &lt;a href=&quot;https://blog.angular.dev/&quot;&gt;Blog&lt;/a&gt;
  &lt;br&gt;
  &lt;br&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.npmjs.com/@angular/core&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/npm/v/@angular/core.svg?logo=npm&amp;logoColor=fff&amp;label=NPM+package&amp;color=limegreen&quot; alt=&quot;Angular on npm&quot; /&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;hr&gt;

## Documentation

Get started with Angular, learn the fundamentals and explore advanced topics on our documentation website.

- [Getting Started][quickstart]
- [Architecture][architecture]
- [Components and Templates][componentstemplates]
- [Forms][forms]
- [API][api]

### Advanced

- [Angular Elements][angularelements]
- [Server Side Rendering][ssr]
- [Schematics][schematics]
- [Lazy Loading][lazyloading]
- [Animations][animations]

### Local Development

To contribute to the Angular Docs, check out the [Angular.dev README](adev/README.md)

## Development Setup

### Prerequisites

- Install [Node.js] which includes [Node Package Manager][npm]

### Setting Up a Project

Install the Angular CLI globally:

```
npm install -g @angular/cli
```

Create workspace:

```
ng new [PROJECT NAME]
```

Run the application:

```
cd [PROJECT NAME]
ng serve
```

Angular is cross-platform, fast, scalable, has incredible tooling, and is loved by millions.

## Quickstart

[Get started in 5 minutes][quickstart].

## Ecosystem

&lt;p&gt;
  &lt;img src=&quot;/contributing-docs/images/angular-ecosystem-logos.png&quot; alt=&quot;angular ecosystem logos&quot; width=&quot;500px&quot; height=&quot;auto&quot;&gt;
&lt;/p&gt;

- [Angular Command Line (CLI)][cli]
- [Angular Material][angularmaterial]

## Changelog

[Learn about the latest improvements][changelog].

## Upgrading

Check out our [upgrade guide](https://angular.dev/update-guide/) to find out the best way to upgrade your project.

## Contributing

### Contributing Guidelines

Read through our [contributing guidelines][contributing] to learn about our submission process, coding rules, and more.

### Want to Help?

Want to report a bug, contribute some code, or improve the documentation? Excellent! Read up on our guidelines for [contributing][contributing] and then check out one of our issues labeled as &lt;kbd&gt;[help wanted](https://github.com/angular/angular/labels/help%20wanted)&lt;/kbd&gt; or &lt;kbd&gt;[good first issue](https://github.com/angular/angular/labels/good%20first%20issue)&lt;/kbd&gt;.

### Code of Conduct

Help us keep Angular open and inclusive. Please read and follow our [Code of Conduct][codeofconduct].

## Community

Join the conversation and help the community.

- [X (formerly Twitter)][X (formerly Twitter)]
- [Bluesky][bluesky]
- [Discord][discord]
- [YouTube][youtube]
- [StackOverflow][stackoverflow]
- Find a Local [Meetup][meetup]

[![Love Angular badge](https://img.shields.io/badge/angular-love-blue?logo=angular&amp;angular=love)](https://www.github.com/angular/angular)

**Love Angular? Give our repo a star :star: :arrow_up:.**

[contributing]: CONTRIBUTING.md
[quickstart]: https://angular.dev/tutorials/learn-angular
[changelog]: CHANGELOG.md
[ng]: https://angular.dev
[documentation]: https://angular.dev/overview
[angularmaterial]: https://material.angular.dev/
[cli]: https://angular.dev/tools/cli
[architecture]: https://angular.dev/essentials
[componentstemplates]: https://angular.dev/tutorials/learn-angular/1-components-in-angular
[forms]: https://angular.dev/tutorials/learn-angular/15-forms
[api]: https://angular.dev/api
[angularelements]: https://angular.dev/guide/elements
[ssr]: https://angular.dev/guide/ssr
[schematics]: https://angular.dev/tools/cli/schematics
[lazyloading]: https://angular.dev/guide/ngmodules/lazy-loading
[node.js]: https://nodejs.org/
[npm]: https://www.npmjs.com/get-npm
[codeofconduct]: CODE_OF_CONDUCT.md
[X (formerly Twitter)]: https://www.twitter.com/angular
[bluesky]: https://bsky.app/profile/angular.dev
[discord]: https://discord.gg/angular
[stackoverflow]: https://stackoverflow.com/questions/tagged/angular
[youtube]: https://youtube.com/angular
[meetup]: https://www.meetup.com/find/?keywords=angular
[animations]: https://angular.dev/guide/animations
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[apache/superset]]></title>
            <link>https://github.com/apache/superset</link>
            <guid>https://github.com/apache/superset</guid>
            <pubDate>Thu, 10 Jul 2025 00:05:08 GMT</pubDate>
            <description><![CDATA[Apache Superset is a Data Visualization and Data Exploration Platform]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/apache/superset">apache/superset</a></h1>
            <p>Apache Superset is a Data Visualization and Data Exploration Platform</p>
            <p>Language: TypeScript</p>
            <p>Stars: 67,018</p>
            <p>Forks: 15,292</p>
            <p>Stars today: 55 stars today</p>
            <h2>README</h2><pre>&lt;!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
&quot;License&quot;); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
&quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
--&gt;

# Superset

[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://opensource.org/license/apache-2-0)
[![Latest Release on Github](https://img.shields.io/github/v/release/apache/superset?sort=semver)](https://github.com/apache/superset/releases/latest)
[![Build Status](https://github.com/apache/superset/actions/workflows/superset-python-unittest.yml/badge.svg)](https://github.com/apache/superset/actions)
[![PyPI version](https://badge.fury.io/py/apache_superset.svg)](https://badge.fury.io/py/apache_superset)
[![Coverage Status](https://codecov.io/github/apache/superset/coverage.svg?branch=master)](https://codecov.io/github/apache/superset)
[![PyPI](https://img.shields.io/pypi/pyversions/apache_superset.svg?maxAge=2592000)](https://pypi.python.org/pypi/apache_superset)
[![Get on Slack](https://img.shields.io/badge/slack-join-orange.svg)](http://bit.ly/join-superset-slack)
[![Documentation](https://img.shields.io/badge/docs-apache.org-blue.svg)](https://superset.apache.org)

&lt;picture width=&quot;500&quot;&gt;
  &lt;source
    width=&quot;600&quot;
    media=&quot;(prefers-color-scheme: dark)&quot;
    src=&quot;https://superset.apache.org/img/superset-logo-horiz-dark.svg&quot;
    alt=&quot;Superset logo (dark)&quot;
  /&gt;
  &lt;img
    width=&quot;600&quot;
    src=&quot;https://superset.apache.org/img/superset-logo-horiz-apache.svg&quot;
    alt=&quot;Superset logo (light)&quot;
  /&gt;
&lt;/picture&gt;

A modern, enterprise-ready business intelligence web application.

[**Why Superset?**](#why-superset) |
[**Supported Databases**](#supported-databases) |
[**Installation and Configuration**](#installation-and-configuration) |
[**Release Notes**](https://github.com/apache/superset/blob/master/RELEASING/README.md#release-notes-for-recent-releases) |
[**Get Involved**](#get-involved) |
[**Contributor Guide**](#contributor-guide) |
[**Resources**](#resources) |
[**Organizations Using Superset**](https://github.com/apache/superset/blob/master/RESOURCES/INTHEWILD.md)

## Why Superset?

Superset is a modern data exploration and data visualization platform. Superset can replace or augment proprietary business intelligence tools for many teams. Superset integrates well with a variety of data sources.

Superset provides:

- A **no-code interface** for building charts quickly
- A powerful, web-based **SQL Editor** for advanced querying
- A **lightweight semantic layer** for quickly defining custom dimensions and metrics
- Out of the box support for **nearly any SQL** database or data engine
- A wide array of **beautiful visualizations** to showcase your data, ranging from simple bar charts to geospatial visualizations
- Lightweight, configurable **caching layer** to help ease database load
- Highly extensible **security roles and authentication** options
- An **API** for programmatic customization
- A **cloud-native architecture** designed from the ground up for scale

## Screenshots &amp; Gifs

**Video Overview**

&lt;!-- File hosted here https://github.com/apache/superset-site/raw/lfs/superset-video-4k.mp4 --&gt;

[superset-video-1080p.webm](https://github.com/user-attachments/assets/b37388f7-a971-409c-96a7-90c4e31322e6)

&lt;br/&gt;

**Large Gallery of Visualizations**

&lt;kbd&gt;&lt;img title=&quot;Gallery&quot; src=&quot;https://superset.apache.org/img/screenshots/gallery.jpg&quot;/&gt;&lt;/kbd&gt;&lt;br/&gt;

**Craft Beautiful, Dynamic Dashboards**

&lt;kbd&gt;&lt;img title=&quot;View Dashboards&quot; src=&quot;https://superset.apache.org/img/screenshots/slack_dash.jpg&quot;/&gt;&lt;/kbd&gt;&lt;br/&gt;

**No-Code Chart Builder**

&lt;kbd&gt;&lt;img title=&quot;Slice &amp; dice your data&quot; src=&quot;https://superset.apache.org/img/screenshots/explore.jpg&quot;/&gt;&lt;/kbd&gt;&lt;br/&gt;

**Powerful SQL Editor**

&lt;kbd&gt;&lt;img title=&quot;SQL Lab&quot; src=&quot;https://superset.apache.org/img/screenshots/sql_lab.jpg&quot;/&gt;&lt;/kbd&gt;&lt;br/&gt;

## Supported Databases

Superset can query data from any SQL-speaking datastore or data engine (Presto, Trino, Athena, [and more](https://superset.apache.org/docs/configuration/databases)) that has a Python DB-API driver and a SQLAlchemy dialect.

Here are some of the major database solutions that are supported:

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/redshift.png&quot; alt=&quot;redshift&quot; border=&quot;0&quot; width=&quot;200&quot;/&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/google-biquery.png&quot; alt=&quot;google-bigquery&quot; border=&quot;0&quot; width=&quot;200&quot;/&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/snowflake.png&quot; alt=&quot;snowflake&quot; border=&quot;0&quot; width=&quot;200&quot;/&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/trino.png&quot; alt=&quot;trino&quot; border=&quot;0&quot; width=&quot;150&quot; /&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/presto.png&quot; alt=&quot;presto&quot; border=&quot;0&quot; width=&quot;200&quot;/&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/databricks.png&quot; alt=&quot;databricks&quot; border=&quot;0&quot; width=&quot;160&quot; /&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/druid.png&quot; alt=&quot;druid&quot; border=&quot;0&quot; width=&quot;200&quot; /&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/firebolt.png&quot; alt=&quot;firebolt&quot; border=&quot;0&quot; width=&quot;200&quot; /&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/timescale.png&quot; alt=&quot;timescale&quot; border=&quot;0&quot; width=&quot;200&quot; /&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/postgresql.png&quot; alt=&quot;postgresql&quot; border=&quot;0&quot; width=&quot;200&quot; /&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/mysql.png&quot; alt=&quot;mysql&quot; border=&quot;0&quot; width=&quot;200&quot; /&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/mssql-server.png&quot; alt=&quot;mssql-server&quot; border=&quot;0&quot; width=&quot;200&quot; /&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/ibm-db2.svg&quot; alt=&quot;db2&quot; border=&quot;0&quot; width=&quot;220&quot; /&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/sqlite.png&quot; alt=&quot;sqlite&quot; border=&quot;0&quot; width=&quot;200&quot; /&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/sybase.png&quot; alt=&quot;sybase&quot; border=&quot;0&quot; width=&quot;200&quot; /&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/mariadb.png&quot; alt=&quot;mariadb&quot; border=&quot;0&quot; width=&quot;200&quot; /&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/vertica.png&quot; alt=&quot;vertica&quot; border=&quot;0&quot; width=&quot;200&quot; /&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/oracle.png&quot; alt=&quot;oracle&quot; border=&quot;0&quot; width=&quot;200&quot; /&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/firebird.png&quot; alt=&quot;firebird&quot; border=&quot;0&quot; width=&quot;200&quot; /&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/greenplum.png&quot; alt=&quot;greenplum&quot; border=&quot;0&quot; width=&quot;200&quot;  /&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/clickhouse.png&quot; alt=&quot;clickhouse&quot; border=&quot;0&quot; width=&quot;200&quot; /&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/exasol.png&quot; alt=&quot;exasol&quot; border=&quot;0&quot; width=&quot;160&quot; /&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/monet-db.png&quot; alt=&quot;monet-db&quot; border=&quot;0&quot; width=&quot;200&quot;  /&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/apache-kylin.png&quot; alt=&quot;apache-kylin&quot; border=&quot;0&quot; width=&quot;80&quot;/&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/hologres.png&quot; alt=&quot;hologres&quot; border=&quot;0&quot; width=&quot;80&quot;/&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/netezza.png&quot; alt=&quot;netezza&quot; border=&quot;0&quot; width=&quot;80&quot;/&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/pinot.png&quot; alt=&quot;pinot&quot; border=&quot;0&quot; width=&quot;200&quot; /&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/teradata.png&quot; alt=&quot;teradata&quot; border=&quot;0&quot; width=&quot;200&quot; /&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/yugabyte.png&quot; alt=&quot;yugabyte&quot; border=&quot;0&quot; width=&quot;200&quot; /&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/databend.png&quot; alt=&quot;databend&quot; border=&quot;0&quot; width=&quot;200&quot; /&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/starrocks.png&quot; alt=&quot;starrocks&quot; border=&quot;0&quot; width=&quot;200&quot; /&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/doris.png&quot; alt=&quot;doris&quot; border=&quot;0&quot; width=&quot;200&quot; /&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/oceanbase.svg&quot; alt=&quot;oceanbase&quot; border=&quot;0&quot; width=&quot;220&quot; /&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/sap-hana.png&quot; alt=&quot;sap-hana&quot; border=&quot;0&quot; width=&quot;220&quot; /&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/denodo.png&quot; alt=&quot;denodo&quot; border=&quot;0&quot; width=&quot;200&quot; /&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/ydb.svg&quot; alt=&quot;ydb&quot; border=&quot;0&quot; width=&quot;200&quot; /&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/tdengine.png&quot; alt=&quot;TDengine&quot; border=&quot;0&quot; width=&quot;200&quot; /&gt;
&lt;/p&gt;

**A more comprehensive list of supported databases** along with the configuration instructions can be found [here](https://superset.apache.org/docs/configuration/databases).

Want to add support for your datastore or data engine? Read more [here](https://superset.apache.org/docs/frequently-asked-questions#does-superset-work-with-insert-database-engine-here) about the technical requirements.

## Installation and Configuration

Try out Superset&#039;s [quickstart](https://superset.apache.org/docs/quickstart/) guide or learn about [the options for production deployments](https://superset.apache.org/docs/installation/architecture/).

## Get Involved

- Ask and answer questions on [StackOverflow](https://stackoverflow.com/questions/tagged/apache-superset) using the **apache-superset** tag
- [Join our community&#039;s Slack](http://bit.ly/join-superset-slack)
  and please read our [Slack Community Guidelines](https://github.com/apache/superset/blob/master/CODE_OF_CONDUCT.md#slack-community-guidelines)
- [Join our dev@superset.apache.org Mailing list](https://lists.apache.org/list.html?dev@superset.apache.org). To join, simply send an email to [dev-subscribe@superset.apache.org](mailto:dev-subscribe@superset.apache.org)
- If you want to help troubleshoot GitHub Issues involving the numerous database drivers that Superset supports, please consider adding your name and the databases you have access to on the [Superset Database Familiarity Rolodex](https://docs.google.com/spreadsheets/d/1U1qxiLvOX0kBTUGME1AHHi6Ywel6ECF8xk_Qy-V9R8c/edit#gid=0)
- Join Superset&#039;s Town Hall and [Operational Model](https://preset.io/blog/the-superset-operational-model-wants-you/) recurring meetings. Meeting info is available on the [Superset Community Calendar](https://superset.apache.org/community)

## Contributor Guide

Interested in contributing? Check out our
[CONTRIBUTING.md](https://github.com/apache/superset/blob/master/CONTRIBUTING.md)
to find resources around contributing along with a detailed guide on
how to set up a development environment.

## Resources

- [Superset &quot;In the Wild&quot;](https://github.com/apache/superset/blob/master/RESOURCES/INTHEWILD.md) - open a PR to add your org to the list!
- [Feature Flags](https://github.com/apache/superset/blob/master/RESOURCES/FEATURE_FLAGS.md) - the status of Superset&#039;s Feature Flags.
- [Standard Roles](https://github.com/apache/superset/blob/master/RESOURCES/STANDARD_ROLES.md) - How RBAC permissions map to roles.
- [Superset Wiki](https://github.com/apache/superset/wiki) - Tons of additional community resources: best practices, community content and other information.
- [Superset SIPs](https://github.com/orgs/apache/projects/170) - The status of Superset&#039;s SIPs (Superset Improvement Proposals) for both consensus and implementation status.

Understanding the Superset Points of View

- [The Case for Dataset-Centric Visualization](https://preset.io/blog/dataset-centric-visualization/)
- [Understanding the Superset Semantic Layer](https://preset.io/blog/understanding-superset-semantic-layer/)

- Getting Started with Superset
  - [Superset in 2 Minutes using Docker Compose](https://superset.apache.org/docs/installation/docker-compose#installing-superset-locally-using-docker-compose)
  - [Installing Database Drivers](https://superset.apache.org/docs/configuration/databases#installing-database-drivers)
  - [Building New Database Connectors](https://preset.io/blog/building-database-connector/)
  - [Create Your First Dashboard](https://superset.apache.org/docs/using-superset/creating-your-first-dashboard/)
  - [Comprehensive Tutorial for Contributing Code to Apache Superset
    ](https://preset.io/blog/tutorial-contributing-code-to-apache-superset/)
- [Resources to master Superset by Preset](https://preset.io/resources/)

- Deploying Superset

  - [Official Docker image](https://hub.docker.com/r/apache/superset)
  - [Helm Chart](https://github.com/apache/superset/tree/master/helm/superset)

- Recordings of Past [Superset Community Events](https://preset.io/events)

  - [Mixed Time Series Charts](https://preset.io/events/mixed-time-series-visualization-in-superset-workshop/)
  - [How the Bing Team Customized Superset for the Internal Self-Serve Data &amp; Analytics Platform](https://preset.io/events/how-the-bing-team-heavily-customized-superset-for-their-internal-data/)
  - [Live Demo: Visualizing MongoDB and Pinot Data using Trino](https://preset.io/events/2021-04-13-visualizing-mongodb-and-pinot-data-using-trino/)
  - [Introduction to the Superset API](https://preset.io/events/introduction-to-the-superset-api/)
  - [Building a Database Connector for Superset](https://preset.io/events/2021-02-16-building-a-database-connector-for-superset/)

- Visualizations

  - [Creating Viz Plugins](https://superset.apache.org/docs/contributing/creating-viz-plugins/)
  - [Managing and Deploying Custom Viz Plugins](https://medium.com/nmc-techblog/apache-superset-manage-custom-viz-plugins-in-production-9fde1a708e55)
  - [Why Apache Superset is Betting on Apache ECharts](https://preset.io/blog/2021-4-1-why-echarts/)

- [Superset API](https://superset.apache.org/docs/rest-api)

## Repo Activity

&lt;a href=&quot;https://next.ossinsight.io/widgets/official/compose-last-28-days-stats?repo_id=39464018&quot; target=&quot;_blank&quot; align=&quot;center&quot;&gt;
  &lt;picture&gt;
    &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://next.ossinsight.io/widgets/official/compose-last-28-days-stats/thumbnail.png?repo_id=39464018&amp;image_size=auto&amp;color_scheme=dark&quot; width=&quot;655&quot; height=&quot;auto&quot; /&gt;
    &lt;img alt=&quot;Performance Stats of apache/superset - Last 28 days&quot; src=&quot;https://next.ossinsight.io/widgets/official/compose-last-28-days-stats/thumbnail.png?repo_id=39464018&amp;image_size=auto&amp;color_scheme=light&quot; width=&quot;655&quot; height=&quot;auto&quot; /&gt;
  &lt;/picture&gt;
&lt;/a&gt;

&lt;!-- Made with [OSS Insight](https://ossinsight.io/) --&gt;

&lt;!-- telemetry/analytics pixel: --&gt;
&lt;img referrerpolicy=&quot;no-referrer-when-downgrade&quot; src=&quot;https://static.scarf.sh/a.png?x-pxid=bc1c90cd-bc04-4e11-8c7b-289fb2839492&quot; /&gt;
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[elizaOS/eliza]]></title>
            <link>https://github.com/elizaOS/eliza</link>
            <guid>https://github.com/elizaOS/eliza</guid>
            <pubDate>Thu, 10 Jul 2025 00:05:07 GMT</pubDate>
            <description><![CDATA[Autonomous agents for everyone]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/elizaOS/eliza">elizaOS/eliza</a></h1>
            <p>Autonomous agents for everyone</p>
            <p>Language: TypeScript</p>
            <p>Stars: 16,323</p>
            <p>Forks: 5,264</p>
            <p>Stars today: 29 stars today</p>
            <h2>README</h2><pre># Eliza

A framework for multi-agent development and deployment

## ‚ú® Features

- üõ†Ô∏è Full-featured Discord, Telegram, and Farcaster connectors (and many more!)
- üîó Support for every model (Llama, Grok, OpenAI, Anthropic, Gemini, etc.)
- üé® Modern and professional UI with a redesigned dashboard for managing agents and groups.
- üí¨ Robust real-time communication with enhanced channel and message handling.
- üë• Multi-agent and group support with intuitive management.
- üìö Easily ingest and interact with your documents.
- üíæ Retrievable memory and document store.
- üöÄ Highly extensible - create your own actions and clients.
- üì¶ Just works!

## üéØ Use Cases

- ü§ñ Chatbots
- üïµÔ∏è Autonomous Agents
- üìà Business Process Handling
- üéÆ Video Game NPCs
- üß† Trading

## üöÄ Quick Start

### Prerequisites

- [Node.js](https://nodejs.org/) (v23 or higher recommended)
- [bun](https://bun.sh/docs/installation)

&gt; **Note for Windows Users:** [WSL 2](https://learn.microsoft.com/en-us/windows/wsl/install-manual) is required.

### Use the CLI (Recommended)

The ElizaOS CLI provides the fastest and most reliable way to create, configure, and run agents. It handles all the complex setup automatically.

#### 1. Install the CLI

```bash
# Install the ElizaOS CLI globally
bun install -g @elizaos/cli

# Verify installation
elizaos --version

# Get help with available commands
elizaos --help
```

#### 2. Create Your First Project

```bash
# Create a new project with interactive setup
elizaos create my-agent

# Or create with specific options (skips prompts)
elizaos create my-agent --yes --type project
```

**Recommended Options for Beginners:**

- **Database**: `pglite` (lightweight, no setup required)
- **Model Provider**: `openai` (most reliable and well-tested)
- **Project Type**: `project` (full ElizaOS application with runtime and agents)

#### 3. Configure Your Agent

```bash
cd my-agent

# Edit your agent&#039;s character file
elizaos env edit-local

# Or manually edit the .env file with your preferred editor
nano .env
```

**Essential Environment Variables:**

```bash
# Required: Your model API key
OPENAI_API_KEY=your_api_key_here

# Optional: Logging level (info, debug, error)
LOG_LEVEL=info

# Optional: Discord bot token (if using Discord)
DISCORD_APPLICATION_ID=your_discord_app_id
DISCORD_API_TOKEN=your_discord_bot_token
```

#### 4. Start Your Agent

```bash
# Build and start your agent
elizaos start

# Or start with debug logging for development
LOG_LEVEL=debug elizaos start
```

After starting, your agent will be available at:

- **Web Interface**: http://localhost:3000
- **API Endpoint**: http://localhost:3000/api

#### 5. Development Workflow

```bash
# Make changes to your agent code
# Then rebuild and restart
bun run build
elizaos start

# Run tests to verify your changes
elizaos test
```

#### Advanced CLI Commands

```bash
# Create specific components
elizaos create my-plugin --type plugin    # Create a new plugin
elizaos create my-agent --type agent      # Create a new agent character
elizaos create my-tee --type tee          # Create a TEE project

# Environment management
elizaos env list            # Show all environment variables
elizaos env reset           # Reset to default .env.example

# Testing options
elizaos test --name &quot;my-test&quot;    # Run specific tests
elizaos test e2e                 # Run end-to-end tests only
elizaos test component           # Run component tests only

# Agent management
elizaos agent list                      # List all available agents
elizaos agent start --name &quot;Agent&quot;     # Start a specific agent by name
elizaos agent stop --name &quot;Agent&quot;      # Stop a running agent
elizaos agent get --name &quot;Agent&quot;       # Get agent details
elizaos agent set --name &quot;Agent&quot; --file config.json  # Update agent configuration
```

#### Debugging and Logging

ElizaOS uses comprehensive logging to help you understand what your agent is doing:

```bash
# Different log levels
LOG_LEVEL=error elizaos start    # Only errors
LOG_LEVEL=info elizaos start     # General information (default)
LOG_LEVEL=debug elizaos start    # Detailed debugging info
LOG_LEVEL=verbose elizaos start  # Everything (very detailed)

# Advanced debugging (combine with LOG_LEVEL=debug)
ELIZA_DEBUG=true elizaos start          # Enable ElizaOS debug output
NODE_ENV=development elizaos start      # Development mode with extra logging
```

**Pro Tips:**

- Use `elizaos --help` to see all available commands and global options
- Use `elizaos &lt;command&gt; --help` for detailed help on any specific command
- Use `LOG_LEVEL=debug` during development to see detailed execution flow
- Check the web interface at http://localhost:3000 for real-time agent status
- Use `elizaos test` frequently to catch issues early
- Keep your `.env` file secure and never commit it to version control

#### Available Commands Reference

**All CLI Commands:**

```bash
elizaos create     # Create new projects, plugins, agents, or TEE projects
elizaos start      # Start the agent server with character profiles
elizaos agent      # Manage agents (list, start, stop, get, set)
elizaos test       # Run tests (component, e2e, or all)
elizaos env        # Manage environment variables and configuration
elizaos dev        # Start in development mode with auto-rebuild
elizaos update     # Update CLI and project dependencies
# To stop agents, use Ctrl+C in the terminal where elizaos start is running
elizaos publish    # Publish plugins to registry
elizaos plugins    # Manage and discover plugins
elizaos monorepo   # Monorepo development utilities
elizaos tee        # Trusted Execution Environment commands

# Get help for any specific command
elizaos &lt;command&gt; --help    # e.g., elizaos create --help, elizaos agent --help
```

### Manually Start Eliza (Only recommended if you know what you are doing)

#### Prerequisites

- **Node.js** (v18+ recommended)
- **bun** (for CLI and dependencies)
- **git** (for project/plugin tests)

#### Checkout the latest release

```bash
# Clone the repository
git clone https://github.com/elizaos/eliza.git

# This project iterates fast, so we recommend checking out the latest release
git checkout $(git describe --tags --abbrev=0)
# If the above doesn&#039;t checkout the latest release, this should work:
# git checkout $(git describe --tags `git rev-list --tags --max-count=1`)
```

#### Edit the .env file

Copy .env.example to .env and fill in the appropriate values.

```
cp .env.example .env
```

Note: .env is optional. If you&#039;re planning to run multiple distinct agents, you can pass secrets through the character JSON

#### Start Eliza

Important! We now use Bun. If you are using npm, you will need to install Bun:
https://bun.sh/docs/installation

```bash
bun install
bun run build
bun start
```

### Interact via Browser

Once Eliza is running, access the modern web interface at http://localhost:3000. It has been professionally redesigned and features:

- A welcoming dashboard with a gradient hero section and clear calls-to-action for creating agents and groups.
- Visually enhanced cards for managing agents and groups, including status indicators and member counts.
- Real-time chat capabilities with your agents.
- Character configuration options.
- Plugin management.
- Comprehensive memory and conversation history.
- Responsive design for an optimal experience on various screen sizes.

## Citation

We now have a [paper](https://arxiv.org/pdf/2501.06781) you can cite for the Eliza OS:

```bibtex
@article{walters2025eliza,
  title={Eliza: A Web3 friendly AI Agent Operating System},
  author={Walters, Shaw and Gao, Sam and Nerd, Shakker and Da, Feng and Williams, Warren and Meng, Ting-Chien and Han, Hunter and He, Frank and Zhang, Allen and Wu, Ming and others},
  journal={arXiv preprint arXiv:2501.06781},
  year={2025}
}
```

## Contributors

&lt;a href=&quot;https://github.com/elizaos/eliza/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=elizaos/eliza&quot; alt=&quot;Eliza project contributors&quot; /&gt;
&lt;/a&gt;

## Star History

[![Star History Chart](https://api.star-history.com/svg?repos=elizaos/eliza&amp;type=Date)](https://star-history.com/#elizaos/eliza&amp;Date)

## Git Hooks

This project uses git hooks to ensure code quality:

- **pre-commit**: Automatically formats staged files using Prettier before committing

To run the pre-commit hook manually:

```bash
bun run pre-commit
```

## üìÇ Repository Structure

Eliza is organized as a monorepo using Bun, Lerna, and Turbo for efficient package management and build orchestration. Here&#039;s a detailed overview of the project structure:

- **`/` (Root)**:

  - `.github/`: GitHub Actions workflows for CI/CD pipelines and issue templates
  - `.husky/`: Git hooks configuration, including pre-commit formatting
  - `.devcontainer/`: Development container configurations for consistent environments
  - `packages/`: Core packages and modules (detailed below)
  - `scripts/`: Build, development, and utility scripts
  - `data/`: Application and user data storage
  - `AGENTS.md`: Comprehensive agent documentation and specifications
  - `CHANGELOG.md`: Detailed version history and changes
  - `Dockerfile`, `docker-compose.yaml`: Container configurations for deployment
  - `lerna.json`, `package.json`, `turbo.json`: Monorepo configuration and workspace definitions

- **`/packages/`**: Core components of the Eliza framework:
  - `core/`: The foundational package (@elizaos/core) implementing:
    - LangChain integration for AI model interactions
    - PDF processing capabilities
    - Logging and error handling infrastructure
  - `app/`: Tauri-based cross-platform application (@elizaos/app)
    - React-based UI implementation
    - Tauri plugins for system integration
    - Desktop and mobile builds support
  - `autodoc/`: Documentation automation tool (@elizaos/autodoc)
    - LangChain-powered documentation generation
    - TypeScript parsing and analysis
    - GitHub integration via Octokit
  - `cli/`: Command-line interface for Eliza management
  - `client/`: Client libraries for web interfaces
  - `create-eliza/`: Project scaffolding tool
  - `docs/`: Official documentation source files
  - `plugin-bootstrap/`: **Essential communication core** (@elizaos/plugin-bootstrap)
    - **Required for basic agent functionality** - handles all message processing
    - Provides critical event handlers (MESSAGE_RECEIVED, VOICE_MESSAGE_RECEIVED, etc.)
    - Implements fundamental agent actions (reply, follow/unfollow, mute/unmute)
    - Contains core evaluators and providers for agent cognition
    - Manages message processing pipeline and response generation
    - **Mandatory unless building custom event handling system**
  - `plugin-sql/`: Database integration (@elizaos/plugin-sql)
    - PostgreSQL integration with PGLite support
    - Drizzle ORM for type-safe queries
    - Migration management tools
    - Integration testing support
  - `plugin-starter/`: Template for creating new plugins
  - `project-starter/`, `project-tee-starter/`: Project templates

This architecture enables modular development, clear separation of concerns, and scalable feature implementation across the Eliza ecosystem.

## Tauri Application CI/CD and Signing

The Eliza application, built with Tauri and located in `packages/app`, is configured for cross-platform continuous integration and deployment. This setup automates the building and releasing of the application for various operating systems.

### Overview

The Tauri application is designed to be built for:

- Desktop: Linux, macOS, and Windows.
- Mobile: Android and iOS.

### CI/CD Workflows

Two main GitHub Actions workflows handle the CI/CD process for the Tauri application:

- **`tauri-ci.yml`**:

  - Triggered on pushes to `main` and `develop` branches.
  - Performs debug builds of the desktop application (Linux, macOS, Windows) to ensure code integrity and catch build issues early.

- **`tauri-release.yml`**:
  - Triggered when new tags (e.g., `v*`) are pushed or when a new release is created/published on GitHub.
  - Builds release-ready versions of the application for all supported desktop platforms (Linux AppImage &amp; .deb, macOS .dmg, Windows .exe NSIS installer).
  - Builds release versions for mobile platforms (Android .apk, iOS .ipa).
  - Uploads all generated binaries and installers as artifacts to the corresponding GitHub Release.

### Mobile Application Backend

The mobile versions of the Eliza Tauri application (Android and iOS) are configured to connect to an external backend service hosted at `https://api.eliza.how`. This connection is essential for certain functionalities of the mobile app.

The Content Security Policy (CSP) in `packages/app/src-tauri/tauri.conf.json` has been updated to allow `connect-src` directives to this specific domain, ensuring that the mobile app can securely communicate with its backend.

### Application Signing (Important for Releases)

For the `tauri-release.yml` workflow to produce _signed_ and deployable mobile applications suitable for app stores or distribution, specific secrets must be configured in the GitHub repository settings (`Settings &gt; Secrets and variables &gt; Actions`).

**Android Signing Secrets:**

- `ANDROID_KEYSTORE_BASE64`: Base64 encoded content of your Java Keystore file (`.jks` or `.keystore`).
- `ANDROID_KEYSTORE_ALIAS`: The alias of your key within the keystore.
- `ANDROID_KEYSTORE_PRIVATE_KEY_PASSWORD`: The password for the private key associated with the alias.
- `ANDROID_KEYSTORE_PASSWORD`: The password for the keystore file itself.

&gt; **Note**: The CI workflow currently includes a step to generate a dummy, unsigned keystore for Android if these secrets are not provided. This allows the release build to complete and produce an unsigned APK, but this APK cannot be published to app stores. For official releases, providing the actual signing credentials via these secrets is crucial.

**iOS Signing Secrets:**

- `APPLE_DEVELOPMENT_CERTIFICATE_P12_BASE64`: Base64 encoded content of your Apple Distribution Certificate (`.p12` file).
- `APPLE_CERTIFICATE_PASSWORD`: The password used to encrypt the `.p12` certificate file.
- `APPLE_PROVISIONING_PROFILE_BASE64`: Base64 encoded content of your Distribution Provisioning Profile (`.mobileprovision` file).
- `APPLE_DEVELOPMENT_TEAM`: Your Apple Developer Team ID (e.g., `A1B2C3D4E5`).

&gt; **Note**: The CI workflow currently includes placeholder steps for setting up the Apple development environment and signing for iOS. These steps will require the above secrets to be populated. If these secrets are not provided and the signing steps are made active (by uncommenting them in the workflow), the iOS build will likely fail.

### Artifacts

Upon successful completion of the `tauri-release.yml` workflow (triggered by a new tag/release), all compiled application installers and mobile packages will be available as downloadable artifacts on the GitHub Releases page for that specific tag. This includes:

- Linux: `.AppImage` and `.deb` files.
- macOS: `.dmg` file.
- Windows: `.exe` NSIS installer.
- Android: `.apk` file.
- iOS: `.ipa` file.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[RSSNext/Folo]]></title>
            <link>https://github.com/RSSNext/Folo</link>
            <guid>https://github.com/RSSNext/Folo</guid>
            <pubDate>Thu, 10 Jul 2025 00:05:06 GMT</pubDate>
            <description><![CDATA[üß° Follow everything in one place]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/RSSNext/Folo">RSSNext/Folo</a></h1>
            <p>üß° Follow everything in one place</p>
            <p>Language: TypeScript</p>
            <p>Stars: 28,237</p>
            <p>Forks: 1,248</p>
            <p>Stars today: 289 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/RSSNext/Folo&quot;&gt;
    &lt;img src=&quot;https://github.com/RSSNext/follow/assets/41265413/c6c02ad5-cddc-46f5-8420-a47afe1c82fe&quot; alt=&quot;Logo&quot; width=&quot;80&quot; height=&quot;80&quot;&gt;
  &lt;/a&gt;

  &lt;h3&gt;Folo&lt;/h3&gt;
  &lt;p&gt;
    &lt;img src=&quot;https://github.com/user-attachments/assets/cbe924f2-d8b0-48b0-814e-7c06ccb1911c&quot; height=&quot;60&quot; /&gt;
    &amp;nbsp;&amp;nbsp;&amp;nbsp;
    &lt;img src=&quot;https://github.com/user-attachments/assets/6997a236-3df3-49d5-98a4-514f6d1a02c4&quot; height=&quot;60&quot; /&gt;
    &lt;br /&gt;
    &lt;br /&gt;
    &lt;a href=&quot;https://github.com/RSSNext/Folo/stargazers&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/RSSNext/Follow?color=ffcb47&amp;labelColor=black&amp;style=flat-square&amp;logo=github&amp;label=Stars&quot; /&gt;&lt;/a&gt;
    &lt;a href=&quot;https://github.com/RSSNext/Folo/graphs/contributors&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/contributors/RSSNext/Folo?style=flat-square&amp;logo=github&amp;label=Contributors&amp;labelColor=black&quot; /&gt;&lt;/a&gt;
    &lt;a href=&quot;https://status.follow.is/&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://status.follow.is/api/badge/18/uptime?color=%2344CC10&amp;labelColor=black&amp;style=flat-square&quot;/&gt;&lt;/a&gt;
    &lt;a href=&quot;https://github.com/RSSNext/Folo/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/RSSNext/Folo/total?color=369eff&amp;labelColor=black&amp;logo=github&amp;style=flat-square&amp;label=Downloads&quot; /&gt;&lt;/a&gt;
    &lt;a href=&quot;https://x.com/intent/follow?screen_name=follow_app_&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Follow-blue?color=1d9bf0&amp;logo=x&amp;labelColor=black&amp;style=flat-square&quot; /&gt;&lt;/a&gt;
    &lt;a href=&quot;https://discord.gg/followapp&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fdiscord.com%2Fapi%2Finvites%2Ffollowapp%3Fwith_counts%3Dtrue&amp;query=approximate_member_count&amp;color=5865F2&amp;label=Discord&amp;labelColor=black&amp;logo=discord&amp;logoColor=white&amp;style=flat-square&quot;/&gt;&lt;/a&gt;
    &lt;br /&gt;
    &lt;a href=&quot;https://github.com/RSSNext/Folo/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/package-json/v/RSSNext/Folo?filename=%2Fapps%2Fmobile%2Fpackage.json&amp;style=flat-square&amp;logo=data%3Aimage%2Fsvg%2Bxml%3Bbase64%2CPHN2ZyB3aWR0aD0iNTUiIGhlaWdodD0iNTUiIHZpZXdCb3g9IjAgMCA1NSA1NSIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KPHBhdGggZD0iTTQxLjc5NDQgMTBIMTguNjc4NkMxNS44ODMzIDEwIDEzLjYxNzIgMTIuMTk2NSAxMy42MTcyIDE0LjkwNTlDMTMuNjE3MiAxNy42MTU0IDE1Ljg4MzMgMTkuODExOSAxOC42Nzg2IDE5LjgxMTlINDEuNzk0NEM0NC41ODk5IDE5LjgxMTkgNDYuODU1OSAxNy42MTU0IDQ2Ljg1NTkgMTQuOTA1OUM0Ni44NTU5IDEyLjE5NjUgNDQuNTg5OSAxMCA0MS43OTQ0IDEwWiIgZmlsbD0id2hpdGUiLz4KPHBhdGggZD0iTTI5LjQ2ODMgMjIuNzU1OUgxNC4wNjE1QzExLjI2NjEgMjIuNzU1OSA5IDI0Ljk1MjMgOSAyNy42NjE4QzkgMzAuMzcxMyAxMS4yNjYxIDMyLjU2NzcgMTQuMDYxNSAzMi41Njc3SDI5LjQ2ODNDMzIuMjYzNyAzMi41Njc3IDM0LjUyOTggMzAuMzcxMyAzNC41Mjk4IDI3LjY2MThDMzQuNTI5OCAyNC45NTIzIDMyLjI2MzcgMjIuNzU1OSAyOS40NjgzIDIyLjc1NTlaIiBmaWxsPSJ3aGl0ZSIvPgo8cGF0aCBkPSJNMzAuOTU4OSA0MC40MjcyQzMwLjk1ODkgMzcuNzE3OSAyOC42OTI4IDM1LjUyMTUgMjUuODk3NCAzNS41MjE1QzIzLjEwMjEgMzUuNTIxNSAyMC44MzU5IDM3LjcxNzkgMjAuODM1OSA0MC40MjcyQzIwLjgzNTkgNDMuMTM3MSAyMy4xMDIxIDQ1LjMzMzIgMjUuODk3NCA0NS4zMzMyQzI4LjY5MjggNDUuMzMzMiAzMC45NTg5IDQzLjEzNzEgMzAuOTU4OSA0MC40MjcyWiIgZmlsbD0id2hpdGUiLz4KPC9zdmc%2BCg%3D%3D&amp;label=Mobile&amp;labelColor=black&amp;color=FF5E01&quot; /&gt;&lt;/a&gt;
    &lt;a href=&quot;https://apps.apple.com/us/app/folo-follow-everything/id6739802604&quot;&gt;&lt;img src=&quot;https://img.shields.io/itunes/v/6739802604?style=flat-square&amp;logo=apple&amp;label=App%20Store&amp;color=FF5C00&amp;labelColor=black&quot; /&gt;&lt;/a&gt;
    &lt;a href=&quot;https://play.google.com/store/apps/details?id=is.follow&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/package-json/v/RSSNext/Folo?filename=%2Fapps%2Fmobile%2Fpackage.json&amp;style=flat-square&amp;logo=google-play&amp;label=Google%20Play&amp;labelColor=black&amp;color=FF5E01&quot;/&gt;&lt;/a&gt;
    &lt;a href=&quot;https://github.com/RSSNext/Folo/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/package-json/v/RSSNext/Folo?filename=%2Fapps%2Fdesktop%2Fpackage.json&amp;style=flat-square&amp;logo=data%3Aimage%2Fsvg%2Bxml%3Bbase64%2CPHN2ZyB3aWR0aD0iNTUiIGhlaWdodD0iNTUiIHZpZXdCb3g9IjAgMCA1NSA1NSIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KPHBhdGggZD0iTTQxLjc5NDQgMTBIMTguNjc4NkMxNS44ODMzIDEwIDEzLjYxNzIgMTIuMTk2NSAxMy42MTcyIDE0LjkwNTlDMTMuNjE3MiAxNy42MTU0IDE1Ljg4MzMgMTkuODExOSAxOC42Nzg2IDE5LjgxMTlINDEuNzk0NEM0NC41ODk5IDE5LjgxMTkgNDYuODU1OSAxNy42MTU0IDQ2Ljg1NTkgMTQuOTA1OUM0Ni44NTU5IDEyLjE5NjUgNDQuNTg5OSAxMCA0MS43OTQ0IDEwWiIgZmlsbD0id2hpdGUiLz4KPHBhdGggZD0iTTI5LjQ2ODMgMjIuNzU1OUgxNC4wNjE1QzExLjI2NjEgMjIuNzU1OSA5IDI0Ljk1MjMgOSAyNy42NjE4QzkgMzAuMzcxMyAxMS4yNjYxIDMyLjU2NzcgMTQuMDYxNSAzMi41Njc3SDI5LjQ2ODNDMzIuMjYzNyAzMi41Njc3IDM0LjUyOTggMzAuMzcxMyAzNC41Mjk4IDI3LjY2MThDMzQuNTI5OCAyNC45NTIzIDMyLjI2MzcgMjIuNzU1OSAyOS40NjgzIDIyLjc1NTlaIiBmaWxsPSJ3aGl0ZSIvPgo8cGF0aCBkPSJNMzAuOTU4OSA0MC40MjcyQzMwLjk1ODkgMzcuNzE3OSAyOC42OTI4IDM1LjUyMTUgMjUuODk3NCAzNS41MjE1QzIzLjEwMjEgMzUuNTIxNSAyMC44MzU5IDM3LjcxNzkgMjAuODM1OSA0MC40MjcyQzIwLjgzNTkgNDMuMTM3MSAyMy4xMDIxIDQ1LjMzMzIgMjUuODk3NCA0NS4zMzMyQzI4LjY5MjggNDUuMzMzMiAzMC45NTg5IDQzLjEzNzEgMzAuOTU4OSA0MC40MjcyWiIgZmlsbD0id2hpdGUiLz4KPC9zdmc%2BCg%3D%3D&amp;label=Desktop&amp;labelColor=black&amp;color=FF5E01&quot; /&gt;&lt;/a&gt;
    &lt;a href=&quot;https://apps.apple.com/us/app/folo-follow-everything/id6739802604&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Ffolo-mac-app-store-version.rss3.workers.dev%2F&amp;query=version&amp;prefix=v&amp;style=flat-square&amp;logo=apple&amp;label=Mac%20App%20Store&amp;labelColor=black&amp;color=FF5E01&amp;cacheSeconds=3600&quot; /&gt;&lt;/a&gt;
    &lt;a href=&quot;https://apps.microsoft.com/detail/9nvfzpv0v0ht?mode=direct&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Ffolo-microsoft-store-version.rss3.workers.dev%2F&amp;query=version&amp;style=flat-square&amp;logo=data%3Aimage%2Fsvg%2Bxml%3Bbase64%2CPHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyNCIgaGVpZ2h0PSIyNCIgdmlld0JveD0iMCAwIDI0IDI0IiBmaWxsPSJub25lIj48cGF0aCBmaWxsPSIjZmZmIiBkPSJNMyAzaDguNTN2OC41M0gzek0xMi40NjkgM2g4LjUzdjguNTNoLTguNTN6TTMgMTIuNDdoOC41M1YyMUgzek0xMi40NjkgMTIuNDdoOC41M1YyMWgtOC41M3oiLz48L3N2Zz4%3D&amp;logoColor=white&amp;label=Microsoft%20Store&amp;labelColor=black&amp;color=FF5E01&amp;cacheSeconds=3600&amp;prefix=v&quot; /&gt;&lt;/a&gt;
    &lt;br /&gt;
    &lt;br /&gt;
    &lt;!-- &lt;a href=&quot;https://github.com/RSSNext/Folo&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/59b957fb-59ed-4ef0-994e-f6a402a6fe2b&quot; alt=&quot;GitHub Trending&quot; height=&quot;55&quot;/&gt;&lt;/a&gt;
    &lt;br /&gt;
    &lt;br /&gt; --&gt;
    &lt;a href=&quot;https://apps.apple.com/us/app/folo-follow-everything/id6739802604&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/83168d47-b9b1-4f28-abec-4e37075c7f1b&quot; alt=&quot;App Store&quot; width=&quot;52%&quot;/&gt;&lt;/a&gt;
    &lt;a href=&quot;https://apps.apple.com/us/app/folo-follow-everything/id6739802604&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/7b4f27f1-c345-400f-a307-9c61c43263ac&quot; alt=&quot;GitHub Trending&quot; width=&quot;46%&quot;/&gt;&lt;/a&gt;
    &lt;br /&gt;
    &lt;br /&gt;
  &lt;/p&gt;
&lt;/div&gt;

As they say, your thoughts are what you read‚Äîand we‚Äôve been consuming noisy feeds for too long! Folo organizes content into one timeline, keeping you updated on what matters, noise-free. Share lists, explore collections, and enjoy distraction-free browsing.

## üëãüèª Getting Started &amp; Join Our Community

Whether for users or professional developers, Folo will be your open information playground. Please be aware that Folo is currently under active development, and feedback is welcome for any [issue](https://github.com/RSSNext/Folo/issues) encountered.

Feel free to try it using the following methods:

| Operating System | Source                                                                                                                                                                                                                                                                                                                                                                                                                                |
| :--------------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |
| Any              | &lt;a href=&quot;https://app.follow.is&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/51ef7800-b683-4493-83e8-eb4752366997&quot; alt=&quot;Browser&quot; height=&quot;55&quot;/&gt;&lt;/a&gt;                                                                                                                                                                                                                                                            |
| iOS              | &lt;a href=&quot;https://apps.apple.com/us/app/folo-follow-everything/id6739802604&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/a94d8698-2a11-4f43-9b0a-b756b17b61f7&quot; alt=&quot;App Store&quot; height=&quot;55&quot;/&gt;&lt;/a&gt;                                                                                                                                                                                                              |
| Android          | &lt;a href=&quot;https://play.google.com/store/apps/details?id=is.follow&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/0d178e0b-3ace-4f75-bbde-ab3c0a416ce8&quot; alt=&quot;Google Play&quot; height=&quot;55&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/RSSNext/Folo/releases/latest&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/cf61e197-d756-4606-a8ad-fb591f79fdfc&quot; alt=&quot;App Store&quot; height=&quot;55&quot;/&gt;&lt;/a&gt;               |
| macOS            | &lt;a href=&quot;https://apps.apple.com/us/app/folo-follow-everything/id6739802604&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/0d47f902-7fa3-494e-ad28-9ab11af5e6d4&quot; alt=&quot;Microsoft Store&quot; height=&quot;55&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/RSSNext/Folo/releases/latest&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/cf61e197-d756-4606-a8ad-fb591f79fdfc&quot; alt=&quot;App Store&quot; height=&quot;55&quot;/&gt;&lt;/a&gt; |
| Windows          | &lt;a href=&quot;https://apps.microsoft.com/detail/9nvfzpv0v0ht?mode=direct&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/b3112bab-9dd0-4893-9488-890dcb368f70&quot; alt=&quot;Microsoft Store&quot; height=&quot;55&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/RSSNext/Folo/releases/latest&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/cf61e197-d756-4606-a8ad-fb591f79fdfc&quot; alt=&quot;App Store&quot; height=&quot;55&quot;/&gt;&lt;/a&gt;        |
| Linux            | &lt;a href=&quot;https://github.com/RSSNext/Folo/releases/latest&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/cf61e197-d756-4606-a8ad-fb591f79fdfc&quot; alt=&quot;App Store&quot; height=&quot;55&quot;/&gt;&lt;/a&gt;                                                                                                                                                                                                                                |

You can also install using the following methods maintained by our community:

- If you are using Arch Linux, you can install package [folo-appimage](https://aur.archlinux.org/packages/folo-appimage) that maintained by [timochan](https://github.com/ttimochan) and [grtsinry43](https://github.com/grtsinry43).
- If you are using Nix, you can install package [follow](https://github.com/NixOS/nixpkgs/blob/master/pkgs/by-name/fo/follow/package.nix) that maintained by [iosmanthus](https://github.com/iosmanthus).
- If you are using macOS with [Homebrew](https://brew.sh), you can install cask [folo](https://formulae.brew.sh/cask/folo) that maintained by [realSunyz](https://github.com/realSunyz).
- If you are using Windows with [Scoop](https://scoop.sh), you can install manifest [folo](https://github.com/cscnk52/cetacea/blob/master/bucket/folo.json) that maintained by [cscnk52](https://github.com/cscnk52).

| [![Discord](https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fdiscord.com%2Fapi%2Finvites%2Ffollowapp%3Fwith_counts%3Dtrue&amp;query=approximate_member_count&amp;color=5865F2&amp;label=Discord&amp;labelColor=black&amp;logo=discord&amp;logoColor=white&amp;style=flat-square)](https://discord.gg/followapp) | Join our Discord server to connect with developers, request features, and receive support. |
| :--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | :----------------------------------------------------------------------------------------- |
| [![](https://img.shields.io/badge/any_text-Follow-blue?color=2CA5E0&amp;label=_&amp;logo=x&amp;labelColor=black&amp;style=flat-square)](https://x.com/intent/follow?screen_name=follow_app_)                                                                                                                   | Follow us on X/Twitter for product updates and to join in on reward activities.            |

&gt; \[!IMPORTANT]
&gt;
&gt; **Star Us**, You will receive all release notifications from GitHub without any delay \~

![Image](https://github.com/user-attachments/assets/a08f9437-b24c-4388-8f01-2826e09eeaf2)

&lt;a href=&quot;https://next.ossinsight.io/widgets/official/compose-last-28-days-stats?repo_id=783512367&quot; target=&quot;_blank&quot; style=&quot;display: block&quot; align=&quot;center&quot;&gt;
  &lt;picture&gt;
    &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://next.ossinsight.io/widgets/official/compose-last-28-days-stats/thumbnail.png?repo_id=783512367&amp;image_size=auto&amp;color_scheme=dark&quot; width=&quot;655&quot; height=&quot;auto&quot;&gt;
    &lt;img alt=&quot;Performance Stats of RSSNext/Folo - Last 28 days&quot; src=&quot;https://next.ossinsight.io/widgets/official/compose-last-28-days-stats/thumbnail.png?repo_id=783512367&amp;image_size=auto&amp;color_scheme=light&quot; width=&quot;655&quot; height=&quot;auto&quot;&gt;
  &lt;/picture&gt;
&lt;/a&gt;

## ‚ú® Features

### Customized Information Hub

Subscribe to a vast range of feeds and curated lists. Curate your favorites and keep track of what matters most to you.

![](https://github.com/user-attachments/assets/11dc7d21-f5d8-4e41-9269-24fc352aa02b)

### AI At Your Fingertips

A smarter and more efficient browsing with AI-powered features like translation, summary, and more.

![](https://github.com/user-attachments/assets/37cf4f2f-4c5e-4775-86e8-2fa1a1b2ecf5)

### Dynamic Content Support

Because we know content is more than just text. From articles to videos, images to audio ‚Äî Folo gets it all covered.

![](https://github.com/user-attachments/assets/d1379fd6-8767-476e-b0dc-d61753715e26)

### $POWER An Ownership Economy

Tip creators across instantly with $POWER, support content you love, and unlock value in your own work. Your content, your power.

![](https://github.com/user-attachments/assets/23bbcd63-45ca-40c8-83ef-96bd1100b701)

### More Than Just An App

This isn‚Äôt just another app. Folo is a community ‚Äî introducing a new era of openness and community-driven experience.

![](https://github.com/user-attachments/assets/62004a04-eaea-4f5d-bfbf-4e68b6b90286)

## ü§ù Contributing

You are welcome to join the open source community to build together, please check our [Contributing Guide](./CONTRIBUTING.md) for more details.

## üîè Code signing policy

Folo for Windows uses free code signing provided by [SignPath.io](https://about.signpath.io/), certificate by [SignPath Foundation](https://signpath.org/).

Folo for macOS and iOS are signed and notarized by [Apple Developer Program](https://developer.apple.com/programs/).

All released files are verified with [GitHub artifact attestations](https://github.com/RSSNext/Folo/attestations) to ensure their provenance and integrity.

## üìù License

Folo is licensed under the GNU General Public License version 3 with the addition of the following special exception:

All content in the `icons/mgc` directory is copyrighted by https://mgc.mingcute.com/ and cannot be redistributed.

All content in the `lottie` directory is distributed under the [Lottie Simple License](https://lottiefiles.com/page/license).
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[braden-w/whispering]]></title>
            <link>https://github.com/braden-w/whispering</link>
            <guid>https://github.com/braden-w/whispering</guid>
            <pubDate>Thu, 10 Jul 2025 00:05:05 GMT</pubDate>
            <description><![CDATA[Press shortcut ‚Üí speak ‚Üí get text. Free and open source ‚ù§Ô∏è]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/braden-w/whispering">braden-w/whispering</a></h1>
            <p>Press shortcut ‚Üí speak ‚Üí get text. Free and open source ‚ù§Ô∏è</p>
            <p>Language: TypeScript</p>
            <p>Stars: 887</p>
            <p>Forks: 77</p>
            <p>Stars today: 50 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://whispering.bradenwong.com&quot;&gt;
    &lt;img width=&quot;180&quot; src=&quot;./apps/app/src-tauri/recorder-state-icons/studio_microphone.png&quot; alt=&quot;Whispering&quot;&gt;
  &lt;/a&gt;
  &lt;h1 align=&quot;center&quot;&gt;Whispering&lt;/h1&gt;
  &lt;p align=&quot;center&quot;&gt;Press shortcut ‚Üí speak ‚Üí get text. Free and open source ‚ù§Ô∏è&lt;/p&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;!-- Latest Version Badge --&gt;
  &lt;img src=&quot;https://img.shields.io/github/v/release/braden-w/whispering?style=flat-square&amp;label=Latest%20Version&amp;color=brightgreen&quot; /&gt;
  &lt;!-- License Badge --&gt;
  &lt;a href=&quot;LICENSE&quot; target=&quot;_blank&quot;&gt;
    &lt;img alt=&quot;MIT License&quot; src=&quot;https://img.shields.io/github/license/braden-w/whispering.svg?style=flat-square&quot; /&gt;
  &lt;/a&gt;
  &lt;!-- Platform Support Badges --&gt;
  &lt;a href=&quot;https://github.com/braden-w/whispering/releases&quot; target=&quot;_blank&quot;&gt;
    &lt;img alt=&quot;macOS&quot; src=&quot;https://img.shields.io/badge/-macOS-black?style=flat-square&amp;logo=apple&amp;logoColor=white&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/braden-w/whispering/releases&quot; target=&quot;_blank&quot;&gt;
    &lt;img alt=&quot;Windows&quot; src=&quot;https://img.shields.io/badge/-Windows-blue?style=flat-square&amp;logo=windows&amp;logoColor=white&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/braden-w/whispering/releases&quot; target=&quot;_blank&quot;&gt;
    &lt;img alt=&quot;Linux&quot; src=&quot;https://img.shields.io/badge/-Linux-yellow?style=flat-square&amp;logo=linux&amp;logoColor=white&quot; /&gt;
  &lt;/a&gt;
  &lt;!-- Tech Stack Badges --&gt;
  &lt;img alt=&quot;Svelte 5&quot; src=&quot;https://img.shields.io/badge/-Svelte%205-orange?style=flat-square&amp;logo=svelte&amp;logoColor=white&quot; /&gt;
  &lt;img alt=&quot;Tauri&quot; src=&quot;https://img.shields.io/badge/-Tauri-blue?style=flat-square&amp;logo=tauri&amp;logoColor=white&quot; /&gt;
  &lt;img alt=&quot;TypeScript&quot; src=&quot;https://img.shields.io/badge/-TypeScript-blue?style=flat-square&amp;logo=typescript&amp;logoColor=white&quot; /&gt;
  &lt;img alt=&quot;Rust&quot; src=&quot;https://img.shields.io/badge/-Rust-orange?style=flat-square&amp;logo=rust&amp;logoColor=white&quot; /&gt;
&lt;/p&gt;

## What is Whispering?

Whispering turns your speech into text with a single keyboard shortcut. Press the shortcut, speak, and your words appear wherever you&#039;re typing. No window switching, no clicking around.

I built this because I was tired of paying $30/month for transcription apps that are basically API wrappers. With Whispering, you bring your own API key and pay cents directly to providers. I use it 3-4 hours daily and pay about $3/month.

The math is simple: transcription APIs cost $0.02-0.36/hour. Subscription apps charge $30/month. That&#039;s a 10-100x markup for a middleman you don&#039;t need.

&gt; **Note**: Whispering is designed for quick transcriptions, not long recordings. For extended recording sessions, use a dedicated recording app.

## Demo

&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.youtube.com/watch?v=1jYgBMrfVZs&quot;&gt;
    &lt;img src=&quot;https://img.youtube.com/vi/1jYgBMrfVZs/maxresdefault.jpg&quot; alt=&quot;Whispering Complete Setup Guide&quot; width=&quot;600&quot;&gt;
  &lt;/a&gt;
  &lt;p&gt;&lt;em&gt;Click to watch: Complete setup and usage guide (5 min)&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;

&gt; **Want to see the voice coding workflow?** Check out this [3-minute demo](https://youtube.com/shorts/tP1fuFpJt7g) showing how I use Whispering with Claude Code for faster development.

## Key Features

Choose from multiple transcription providers (Groq at $0.02/hour is my favorite). The app supports voice-activated mode for hands-free operation; just talk and it transcribes. You can set up AI transformations to automatically format your text, fix grammar, or translate languages.

Everything is stored locally on your device. Your audio goes directly from your machine to your chosen API provider. No middleman servers, no data collection, no tracking.

Built with Svelte 5 and Tauri, so it&#039;s tiny (~22MB) and starts instantly. The codebase is clean and well-documented if you want to contribute or learn.

## Installation

Takes about 2 minutes to get running.

### 1Ô∏è‚É£ Download Whispering

Choose your operating system below and click the download link:

&lt;details&gt;
&lt;summary&gt;&lt;strong&gt;üçé macOS&lt;/strong&gt;&lt;/summary&gt;

#### Download Options

| Architecture | Download | Requirements |
|-------------|----------|--------------|
| **Apple Silicon** | [Whispering_7.0.1_aarch64.dmg](https://github.com/braden-w/whispering/releases/latest/download/Whispering_7.0.1_aarch64.dmg) | M1/M2/M3 Macs |
| **Intel** | [Whispering_7.0.1_x64.dmg](https://github.com/braden-w/whispering/releases/latest/download/Whispering_7.0.1_x64.dmg) | Intel-based Macs |

&gt; **Not sure which Mac you have?** Click the Apple menu ‚Üí About This Mac. Look for &quot;Chip&quot; or &quot;Processor&quot;:
&gt; - Apple M1/M2/M3 ‚Üí Use Apple Silicon version
&gt; - Intel Core ‚Üí Use Intel version

#### Installation steps:
1. Download the `.dmg` file for your architecture
2. Open the downloaded file
3. Drag Whispering to your Applications folder
4. Open Whispering from Applications

### Troubleshooting:
- **&quot;Unverified developer&quot; warning:** Right-click the app ‚Üí Open ‚Üí Open
- **&quot;App is damaged&quot; error (Apple Silicon):** Run `xattr -cr /Applications/Whispering.app` in Terminal

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;strong&gt;ü™ü Windows&lt;/strong&gt;&lt;/summary&gt;

#### Download Options

| Installer Type | Download | Description |
|---------------|----------|-------------|
| **MSI Installer** | [Whispering_7.0.1_x64_en-US.msi](https://github.com/braden-w/whispering/releases/latest/download/Whispering_7.0.1_x64_en-US.msi) | Recommended Standard Windows installer |
| **EXE Installer** | [Whispering_7.0.1_x64-setup.exe](https://github.com/braden-w/whispering/releases/latest/download/Whispering_7.0.1_x64-setup.exe) | Alternative installer option |

#### Installation

1. Download the `.msi` installer (recommended)
2. Double-click to run the installer
3. If Windows Defender appears: Click &quot;More Info&quot; ‚Üí &quot;Run Anyway&quot;
4. Follow the installation wizard

Whispering will appear in your Start Menu when complete.

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;strong&gt;üêß Linux&lt;/strong&gt;&lt;/summary&gt;

#### Download Options

| Package Format | Download | Compatible With |
|---------------|----------|-----------------|
| **AppImage** | [Whispering_7.0.1_amd64.AppImage](https://github.com/braden-w/whispering/releases/latest/download/Whispering_7.0.1_amd64.AppImage) | All Linux distributions |
| **DEB Package** | [Whispering_7.0.1_amd64.deb](https://github.com/braden-w/whispering/releases/latest/download/Whispering_7.0.1_amd64.deb) | Debian, Ubuntu, Pop!_OS |
| **RPM Package** | [Whispering-7.0.1-1.x86_64.rpm](https://github.com/braden-w/whispering/releases/latest/download/Whispering-7.0.1-1.x86_64.rpm) | Fedora, RHEL, openSUSE |

#### Quick Install Commands

**AppImage** (Universal)
```bash
wget https://github.com/braden-w/whispering/releases/latest/download/Whispering_7.0.1_amd64.AppImage
chmod +x Whispering_7.0.1_amd64.AppImage
./Whispering_7.0.1_amd64.AppImage
```

**Debian/Ubuntu**
```bash
wget https://github.com/braden-w/whispering/releases/latest/download/Whispering_7.0.1_amd64.deb
sudo dpkg -i Whispering_7.0.1_amd64.deb
```

**Fedora/RHEL**
```bash
wget https://github.com/braden-w/whispering/releases/latest/download/Whispering-7.0.1-1.x86_64.rpm
sudo rpm -i Whispering-7.0.1-1.x86_64.rpm
```

&lt;/details&gt;

&gt; **Links not working?** Find all downloads at [GitHub Releases](https://github.com/braden-w/whispering/releases/latest)

&lt;details&gt;
&lt;summary&gt;&lt;strong&gt;Try in Browser (No Download)&lt;/strong&gt;&lt;/summary&gt;

&lt;br&gt;

**[üöÄ Open Whispering Web App ‚Üí](https://whispering.bradenwong.com)**

No installation needed! Works in any modern browser.

&gt; **Note:** The web version doesn&#039;t have global keyboard shortcuts, but otherwise works great for trying out Whispering before installing.

&lt;/details&gt;

### 2Ô∏è‚É£ Get Your API Key

Right now, I personally use **Groq** for almost all my transcriptions.

&gt; üí° **Why Groq?** The fastest models, super accurate, generous free tier, and unbeatable price (as cheap as $0.02/hour using `distil-whisper-large-v3-en`)

1. Visit [console.groq.com/keys](https://console.groq.com/keys)
2. Sign up ‚Üí Create API key ‚Üí Copy it

**üôå That&#039;s it!** No credit card required for the free tier. You can start transcribing immediately.

### 3Ô∏è‚É£ Connect &amp; Test

1. Open Whispering
2. Click **Settings** (‚öôÔ∏è) ‚Üí **Transcription**
3. Select **Groq** ‚Üí Paste your API key where it says `Groq API Key`
4. Click the recording button (or press `Cmd+Shift+;` anywhere) and say &quot;Testing Whispering&quot;

**üéâ Success!** Your words are now in your clipboard. Paste anywhere!

&lt;details&gt;
&lt;summary&gt;&lt;strong&gt;Having trouble? Common issues &amp; fixes&lt;/strong&gt;&lt;/summary&gt;

### Quick Fixes
- **No transcription?** ‚Üí Double-check API key in Settings
- **Shortcut not working?** ‚Üí Bring Whispering to foreground (see macOS section below)
- **Wrong provider selected?** ‚Üí Check Settings ‚Üí Transcription

### Platform-Specific Issues

&lt;details&gt;
&lt;summary&gt;&lt;strong&gt;macOS: Global shortcut stops working?&lt;/strong&gt;&lt;/summary&gt;

This happens due to macOS App Nap, which suspends background apps to save battery.

**Quick fixes:**
1. Use Voice Activated mode for hands-free operation (recommended)
2. Bring Whispering to the foreground briefly to restore shortcuts
3. Keep the app window in the foreground (even as a smaller window)

**Best practice:** Keep Whispering in the foreground in front of other apps. You can resize it to a smaller window or use Voice Activated mode for minimal disruption.

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;strong&gt;Accidentally rejected microphone permissions?&lt;/strong&gt;&lt;/summary&gt;

If you accidentally clicked &quot;Don&#039;t Allow&quot; when Whispering asked for microphone access, here&#039;s how to fix it:

#### üçé macOS
1. Open **System Settings** ‚Üí **Privacy &amp; Security** ‚Üí **Privacy** ‚Üí **Microphone**
2. Find **Whispering** in the list
3. Toggle the switch to enable microphone access
4. If Whispering isn&#039;t in the list, reinstall the app to trigger the permission prompt again

#### ü™ü Windows
If you accidentally blocked microphone permissions, use the Registry solution:

**Registry Cleanup (Recommended)**
1. Close Whispering
2. Open Registry Editor (Win+R, type `regedit`)
3. Use Find (Ctrl+F) to search for &quot;Whispering&quot;
4. Delete all registry folders containing &quot;Whispering&quot;
5. Press F3 to find next, repeat until all instances are removed
6. Uninstall and reinstall Whispering
7. Accept permissions when prompted

&lt;details&gt;
&lt;summary&gt;Alternative solutions&lt;/summary&gt;

**Delete App Data:** Navigate to `%APPDATA%\..\Local\com.bradenwong.whispering` and delete this folder, then reinstall.

**Windows Settings:** Settings ‚Üí Privacy &amp; security ‚Üí Microphone ‚Üí Enable &quot;Let desktop apps access your microphone&quot;

&lt;/details&gt;

See [Issue #526](https://github.com/braden-w/whispering/issues/526) for more details.

&lt;/details&gt;

&lt;/details&gt;

### 4Ô∏è‚É£ Next Steps: Power User Features

Take your transcription experience to the next level with these advanced features:

&lt;details&gt;
&lt;summary&gt;&lt;strong&gt;üéØ Custom Transcription Services&lt;/strong&gt;&lt;/summary&gt;

Choose from multiple transcription providers based on your needs for speed, accuracy, and privacy:

#### üöÄ Groq (Recommended)
- **API Key:** [console.groq.com/keys](https://console.groq.com/keys)
- **Models:** `distil-whisper-large-v3-en` ($0.02/hr), `whisper-large-v3-turbo` ($0.04/hr), `whisper-large-v3` ($0.06/hr)
- **Why:** Fastest, cheapest, generous free tier

#### üéØ OpenAI
- **API Key:** [platform.openai.com/api-keys](https://platform.openai.com/api-keys) ([Enable billing](https://platform.openai.com/settings/organization/billing/overview))
- **Models:** `whisper-1` ($0.36/hr), `gpt-4o-transcribe` ($0.36/hr), `gpt-4o-mini-transcribe` ($0.18/hr)
- **Why:** Industry standard

#### üéôÔ∏è ElevenLabs
- **API Key:** [elevenlabs.io/app/settings/api-keys](https://elevenlabs.io/app/settings/api-keys)
- **Models:** `scribe_v1`, `scribe_v1_experimental`
- **Why:** High-quality voice AI

#### üè† Speaches (Local)
- **API Key:** None needed!
- **Why:** Complete privacy, offline use, free forever

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;strong&gt;ü§ñ AI-Powered Transformations&lt;/strong&gt;&lt;/summary&gt;

Transform your transcriptions automatically with custom AI workflows:

**Quick Example: Format Text**
1. Go to **Transformations** (üìö) in the top bar
2. Click &quot;Create Transformation&quot; ‚Üí Name it &quot;Format Text&quot;
3. Add a **Prompt Transform** step:
   - Model: `Claude Sonnet 3.5` (or your preferred AI)
   - System prompt: `You are an intelligent text formatter specializing in cleaning up transcribed speech. Your task is to transform raw transcribed text into well-formatted, readable content while maintaining the speaker&#039;s original intent and voice.

Core Principles:

1. Preserve authenticity: Keep the original wording and phrasing as much as possible
2. Add clarity: Make intelligent corrections only where needed for comprehension
3. Enhance readability: Apply proper formatting, punctuation, and structure

Formatting Guidelines:

Punctuation &amp; Grammar:
- Add appropriate punctuation (periods, commas, question marks)
- Correct obvious transcription errors while preserving speaking style
- Fix run-on sentences by adding natural breaks
- Maintain conversational tone and personal speaking patterns

Structure &amp; Organization:
- Create paragraph breaks at natural topic transitions
- Use bullet points or numbered lists when the speaker is listing items
- Add headings if the content has clear sections
- Preserve emphasis through italics or bold when the speaker stresses words

Intelligent Corrections:
- Fix homophones (e.g., &quot;there/their/they&#039;re&quot;)
- Complete interrupted thoughts when the intention is clear
- Remove excessive filler words (um, uh) unless they add meaning
- Correct obvious misspeaks while noting significant ones in [brackets]

Special Handling:
- Technical terms: Research and correct spelling if unclear
- Names/places: Make best guess and mark uncertain ones with [?]
- Numbers: Convert spoken numbers to digits when appropriate
- Time references: Standardize format (e.g., &quot;3 PM&quot; not &quot;three in the afternoon&quot;)

Preserve Original Intent:
- Keep colloquialisms and regional expressions
- Maintain the speaker&#039;s level of formality
- Don&#039;t &quot;upgrade&quot; simple language to sound more sophisticated
- Preserve humor, sarcasm, and emotional tone

Output Format:
Return the formatted text with:
- Clear paragraph breaks
- Proper punctuation and capitalization
- Any structural elements (lists, headings) that improve clarity
- [Bracketed notes] for unclear sections or editorial decisions
- Original meaning and voice intact

Remember: You&#039;re a translator from spoken to written form, not an editor trying to improve the content. Make it readable while keeping it real.`
   - User prompt: `Here is the text to format:

&lt;text&gt;{{input}}&lt;/text&gt;`
4. Save and select it in your recording settings

**What can transformations do?**
- Fix grammar and punctuation automatically
- Translate to other languages
- Convert casual speech to professional writing
- Create summaries or bullet points
- Remove filler words (&quot;um&quot;, &quot;uh&quot;)
- Chain multiple steps together

**Example workflow:** Speech ‚Üí Transcribe ‚Üí Fix Grammar ‚Üí Translate to Spanish ‚Üí Copy to clipboard

&lt;details&gt;
&lt;summary&gt;Setting up AI providers for transformations&lt;/summary&gt;

You&#039;ll need additional API keys for AI transformations. Choose from these providers based on your needs:

#### üß† OpenAI
- **API Key:** [platform.openai.com/api-keys](https://platform.openai.com/api-keys)
- **Models:** `gpt-4o`, `gpt-4o-mini`, `o3-mini` and more
- **Why:** Most capable, best for complex text transformations

#### ü§ñ Anthropic
- **API Key:** [console.anthropic.com/settings/keys](https://console.anthropic.com/settings/keys)
- **Models:** `claude-opus-4-0`, `claude-sonnet-4-0`, `claude-3-7-sonnet-latest`
- **Why:** Excellent writing quality, nuanced understanding

#### ‚ú® Google Gemini
- **API Key:** [aistudio.google.com/app/apikey](https://aistudio.google.com/app/apikey)
- **Models:** `gemini-2.5-pro`, `gemini-2.5-flash`, `gemini-2.5-flash-lite`
- **Why:** Free tier available, fast response times

#### ‚ö° Groq
- **API Key:** [console.groq.com/keys](https://console.groq.com/keys)
- **Models:** `llama-3.3-70b-versatile`, `llama-3.1-8b-instant`, `gemma2-9b-it`, and more
- **Why:** Lightning fast inference, great for real-time transformations

&lt;/details&gt;

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;strong&gt;üéôÔ∏è Voice Activity Detection (VAD)&lt;/strong&gt;&lt;/summary&gt;

Hands-free recording that starts when you speak and stops when you&#039;re done.

**Two ways to enable VAD:**

**Option 1: Quick toggle on homepage**
- On the homepage, click the **Voice Activated** tab (next to Manual)

**Option 2: Through settings**
1. Go to **Settings** ‚Üí **Recording**
2. Find the **Recording Mode** dropdown
3. Select **Voice Activated** instead of Manual

**How it works:**
- Press shortcut once ‚Üí VAD starts listening
- Speak ‚Üí Recording begins automatically
- Stop speaking ‚Üí Recording stops after a brief pause
- Your transcription appears instantly

Perfect for dictation without holding keys!

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;strong&gt;‚å®Ô∏è Custom Shortcuts&lt;/strong&gt;&lt;/summary&gt;

Change the recording shortcut to whatever feels natural:

1. Go to **Settings** ‚Üí **Recording**
2. Click on the shortcut field
3. Press your desired key combination
4. Popular choices: `F1`, `Cmd+Space+R`, `Ctrl+Shift+V`

&lt;/details&gt;

## Why Whispering Exists

I was paying $30/month for a transcription app. Then I did the math: the actual API calls cost about $0.36/hour. At my usage (3-4 hours/day), I was paying $30 for what should cost $3.

That&#039;s when I realized these apps are just middlemen. They take your audio, send it to OpenAI&#039;s Whisper API, and charge you 10x markup. Plus your recordings go through their servers, get stored who knows where, and you&#039;re locked into their ecosystem.

So I built Whispering to cut out the middleman. You bring your own API key, your audio goes directly to the provider, and you pay actual costs. No subscription, no data collection, no lock-in. Just transcription at cost.

The code is open source because I believe tools this fundamental should be free. Companies pivot, get acquired, or shut down. But open source is forever.

### Cost Comparison

With Whispering, you pay providers directly instead of marked-up subscription prices:

| Service | Cost per Hour | Light Use (20 min/day) | Moderate Use (1 hr/day) | Heavy Use (3 hr/day) | Traditional Tools |
|---------|---------------|------------------------|-------------------------|----------------------|-------------------|
| `distil-whisper-large-v3-en` (Groq) | $0.02 | $0.20/month | $0.60/month | $1.80/month | $15-30/month |
| `whisper-large-v3-turbo` (Groq) | $0.04 | $0.40/month | $1.20/month | $3.60/month | $15-30/month |
| `gpt-4o-mini-transcribe` (OpenAI) | $0.18 | $1.80/month | $5.40/month | $16.20/month | $15-30/month |
| Local (Speaches) | $0.00 | $0.00/month | $0.00/month | $0.00/month | $15-30/month |

## How is my data stored?

Whispering stores as much data as possible locally on your device, including recordings and text transcriptions. This approach ensures maximum privacy and data security. Here&#039;s an overview of how data is handled:

1. **Local Storage**: Voice recordings and transcriptions are stored in IndexedDB, which is used as blob storage and a place to store all of your data like text and transcriptions.

2. **Transcription Service**: The only data sent elsewhere is your recording to an external transcription service‚Äîif you choose one. You have the following options:
   - External services like OpenAI, Groq, or ElevenLabs (with your own API keys)
   - A local transcription service such as Speaches, which keeps everything on-device

3. **Transformation Service (Optional)**: Whispering includes configurable transformation settings that allow you to pipe transcription output into custom transformation flows. These flows can leverage:
   - External Large Language Models (LLMs) like OpenAI&#039;s GPT-4, Anthropic&#039;s Claude, Google&#039;s Gemini, or Groq&#039;s Llama models
   - Hosted LLMs within your custom workflows for advanced text processing
   - Simple find-and-replace operations for basic text modifications
   
   When using AI-powered transformations, your transcribed text is sent to your chosen LLM prov

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[actions/checkout]]></title>
            <link>https://github.com/actions/checkout</link>
            <guid>https://github.com/actions/checkout</guid>
            <pubDate>Thu, 10 Jul 2025 00:05:04 GMT</pubDate>
            <description><![CDATA[Action for checking out a repo]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/actions/checkout">actions/checkout</a></h1>
            <p>Action for checking out a repo</p>
            <p>Language: TypeScript</p>
            <p>Stars: 6,693</p>
            <p>Forks: 2,051</p>
            <p>Stars today: 7 stars today</p>
            <h2>README</h2><pre>[![Build and Test](https://github.com/actions/checkout/actions/workflows/test.yml/badge.svg)](https://github.com/actions/checkout/actions/workflows/test.yml)

# Checkout V4

This action checks-out your repository under `$GITHUB_WORKSPACE`, so your workflow can access it.

Only a single commit is fetched by default, for the ref/SHA that triggered the workflow. Set `fetch-depth: 0` to fetch all history for all branches and tags. Refer [here](https://docs.github.com/actions/using-workflows/events-that-trigger-workflows) to learn which commit `$GITHUB_SHA` points to for different events.

The auth token is persisted in the local git config. This enables your scripts to run authenticated git commands. The token is removed during post-job cleanup. Set `persist-credentials: false` to opt-out.

When Git 2.18 or higher is not in your PATH, falls back to the REST API to download the files.

### Note

Thank you for your interest in this GitHub action, however, right now we are not taking contributions. 

We continue to focus our resources on strategic areas that help our customers be successful while making developers&#039; lives easier. While GitHub Actions remains a key part of this vision, we are allocating resources towards other areas of Actions and are not taking contributions to this repository at this time. The GitHub public roadmap is the best place to follow along for any updates on features we‚Äôre working on and what stage they‚Äôre in.

We are taking the following steps to better direct requests related to GitHub Actions, including:

1. We will be directing questions and support requests to our [Community Discussions area](https://github.com/orgs/community/discussions/categories/actions)

2. High Priority bugs can be reported through Community Discussions or you can report these to our support team https://support.github.com/contact/bug-report.

3. Security Issues should be handled as per our [security.md](security.md)

We will still provide security updates for this project and fix major breaking changes during this time.

You are welcome to still raise bugs in this repo.

# What&#039;s new

Please refer to the [release page](https://github.com/actions/checkout/releases/latest) for the latest release notes.

# Usage

&lt;!-- start usage --&gt;
```yaml
- uses: actions/checkout@v4
  with:
    # Repository name with owner. For example, actions/checkout
    # Default: ${{ github.repository }}
    repository: &#039;&#039;

    # The branch, tag or SHA to checkout. When checking out the repository that
    # triggered a workflow, this defaults to the reference or SHA for that event.
    # Otherwise, uses the default branch.
    ref: &#039;&#039;

    # Personal access token (PAT) used to fetch the repository. The PAT is configured
    # with the local git config, which enables your scripts to run authenticated git
    # commands. The post-job step removes the PAT.
    #
    # We recommend using a service account with the least permissions necessary. Also
    # when generating a new PAT, select the least scopes necessary.
    #
    # [Learn more about creating and using encrypted secrets](https://help.github.com/en/actions/automating-your-workflow-with-github-actions/creating-and-using-encrypted-secrets)
    #
    # Default: ${{ github.token }}
    token: &#039;&#039;

    # SSH key used to fetch the repository. The SSH key is configured with the local
    # git config, which enables your scripts to run authenticated git commands. The
    # post-job step removes the SSH key.
    #
    # We recommend using a service account with the least permissions necessary.
    #
    # [Learn more about creating and using encrypted secrets](https://help.github.com/en/actions/automating-your-workflow-with-github-actions/creating-and-using-encrypted-secrets)
    ssh-key: &#039;&#039;

    # Known hosts in addition to the user and global host key database. The public SSH
    # keys for a host may be obtained using the utility `ssh-keyscan`. For example,
    # `ssh-keyscan github.com`. The public key for github.com is always implicitly
    # added.
    ssh-known-hosts: &#039;&#039;

    # Whether to perform strict host key checking. When true, adds the options
    # `StrictHostKeyChecking=yes` and `CheckHostIP=no` to the SSH command line. Use
    # the input `ssh-known-hosts` to configure additional hosts.
    # Default: true
    ssh-strict: &#039;&#039;

    # The user to use when connecting to the remote SSH host. By default &#039;git&#039; is
    # used.
    # Default: git
    ssh-user: &#039;&#039;

    # Whether to configure the token or SSH key with the local git config
    # Default: true
    persist-credentials: &#039;&#039;

    # Relative path under $GITHUB_WORKSPACE to place the repository
    path: &#039;&#039;

    # Whether to execute `git clean -ffdx &amp;&amp; git reset --hard HEAD` before fetching
    # Default: true
    clean: &#039;&#039;

    # Partially clone against a given filter. Overrides sparse-checkout if set.
    # Default: null
    filter: &#039;&#039;

    # Do a sparse checkout on given patterns. Each pattern should be separated with
    # new lines.
    # Default: null
    sparse-checkout: &#039;&#039;

    # Specifies whether to use cone-mode when doing a sparse checkout.
    # Default: true
    sparse-checkout-cone-mode: &#039;&#039;

    # Number of commits to fetch. 0 indicates all history for all branches and tags.
    # Default: 1
    fetch-depth: &#039;&#039;

    # Whether to fetch tags, even if fetch-depth &gt; 0.
    # Default: false
    fetch-tags: &#039;&#039;

    # Whether to show progress status output when fetching.
    # Default: true
    show-progress: &#039;&#039;

    # Whether to download Git-LFS files
    # Default: false
    lfs: &#039;&#039;

    # Whether to checkout submodules: `true` to checkout submodules or `recursive` to
    # recursively checkout submodules.
    #
    # When the `ssh-key` input is not provided, SSH URLs beginning with
    # `git@github.com:` are converted to HTTPS.
    #
    # Default: false
    submodules: &#039;&#039;

    # Add repository path as safe.directory for Git global config by running `git
    # config --global --add safe.directory &lt;path&gt;`
    # Default: true
    set-safe-directory: &#039;&#039;

    # The base URL for the GitHub instance that you are trying to clone from, will use
    # environment defaults to fetch from the same instance that the workflow is
    # running from unless specified. Example URLs are https://github.com or
    # https://my-ghes-server.example.com
    github-server-url: &#039;&#039;
```
&lt;!-- end usage --&gt;

# Scenarios

- [Fetch only the root files](#Fetch-only-the-root-files)
- [Fetch only the root files and `.github` and `src` folder](#Fetch-only-the-root-files-and-github-and-src-folder)
- [Fetch only a single file](#Fetch-only-a-single-file)
- [Fetch all history for all tags and branches](#Fetch-all-history-for-all-tags-and-branches)
- [Checkout a different branch](#Checkout-a-different-branch)
- [Checkout HEAD^](#Checkout-HEAD)
- [Checkout multiple repos (side by side)](#Checkout-multiple-repos-side-by-side)
- [Checkout multiple repos (nested)](#Checkout-multiple-repos-nested)
- [Checkout multiple repos (private)](#Checkout-multiple-repos-private)
- [Checkout pull request HEAD commit instead of merge commit](#Checkout-pull-request-HEAD-commit-instead-of-merge-commit)
- [Checkout pull request on closed event](#Checkout-pull-request-on-closed-event)
- [Push a commit using the built-in token](#Push-a-commit-using-the-built-in-token)
- [Push a commit to a PR using the built-in token](#Push-a-commit-to-a-PR-using-the-built-in-token)

## Fetch only the root files

```yaml
- uses: actions/checkout@v4
  with:
    sparse-checkout: .
```

## Fetch only the root files and `.github` and `src` folder

```yaml
- uses: actions/checkout@v4
  with:
    sparse-checkout: |
      .github
      src
```

## Fetch only a single file

```yaml
- uses: actions/checkout@v4
  with:
    sparse-checkout: |
      README.md
    sparse-checkout-cone-mode: false
```

## Fetch all history for all tags and branches

```yaml
- uses: actions/checkout@v4
  with:
    fetch-depth: 0
```

## Checkout a different branch

```yaml
- uses: actions/checkout@v4
  with:
    ref: my-branch
```

## Checkout HEAD^

```yaml
- uses: actions/checkout@v4
  with:
    fetch-depth: 2
- run: git checkout HEAD^
```

## Checkout multiple repos (side by side)

```yaml
- name: Checkout
  uses: actions/checkout@v4
  with:
    path: main

- name: Checkout tools repo
  uses: actions/checkout@v4
  with:
    repository: my-org/my-tools
    path: my-tools
```
&gt; - If your secondary repository is private or internal you will need to add the option noted in [Checkout multiple repos (private)](#Checkout-multiple-repos-private)

## Checkout multiple repos (nested)

```yaml
- name: Checkout
  uses: actions/checkout@v4

- name: Checkout tools repo
  uses: actions/checkout@v4
  with:
    repository: my-org/my-tools
    path: my-tools
```
&gt; - If your secondary repository is private or internal you will need to add the option noted in [Checkout multiple repos (private)](#Checkout-multiple-repos-private)

## Checkout multiple repos (private)

```yaml
- name: Checkout
  uses: actions/checkout@v4
  with:
    path: main

- name: Checkout private tools
  uses: actions/checkout@v4
  with:
    repository: my-org/my-private-tools
    token: ${{ secrets.GH_PAT }} # `GH_PAT` is a secret that contains your PAT
    path: my-tools
```

&gt; - `${{ github.token }}` is scoped to the current repository, so if you want to checkout a different repository that is private you will need to provide your own [PAT](https://help.github.com/en/github/authenticating-to-github/creating-a-personal-access-token-for-the-command-line).


## Checkout pull request HEAD commit instead of merge commit

```yaml
- uses: actions/checkout@v4
  with:
    ref: ${{ github.event.pull_request.head.sha }}
```

## Checkout pull request on closed event

```yaml
on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, closed]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
```

## Push a commit using the built-in token

```yaml
on: push
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          date &gt; generated.txt
          # Note: the following account information will not work on GHES
          git config user.name &quot;github-actions[bot]&quot;
          git config user.email &quot;41898282+github-actions[bot]@users.noreply.github.com&quot;
          git add .
          git commit -m &quot;generated&quot;
          git push
```
*NOTE:* The user email is `{user.id}+{user.login}@users.noreply.github.com`. See users API: https://api.github.com/users/github-actions%5Bbot%5D

## Push a commit to a PR using the built-in token

In a pull request trigger, `ref` is required as GitHub Actions checks out in detached HEAD mode, meaning it doesn‚Äôt check out your branch by default.

```yaml
on: pull_request
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
      - run: |
          date &gt; generated.txt
          # Note: the following account information will not work on GHES
          git config user.name &quot;github-actions[bot]&quot;
          git config user.email &quot;41898282+github-actions[bot]@users.noreply.github.com&quot;
          git add .
          git commit -m &quot;generated&quot;
          git push
```

*NOTE:* The user email is `{user.id}+{user.login}@users.noreply.github.com`. See users API: https://api.github.com/users/github-actions%5Bbot%5D

# Recommended permissions

When using the `checkout` action in your GitHub Actions workflow, it is recommended to set the following `GITHUB_TOKEN` permissions to ensure proper functionality, unless alternative auth is provided via the `token` or `ssh-key` inputs:

```yaml
permissions:
  contents: read
```

# License

The scripts and documentation in this project are released under the [MIT License](LICENSE)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[btjawa/BiliTools]]></title>
            <link>https://github.com/btjawa/BiliTools</link>
            <guid>https://github.com/btjawa/BiliTools</guid>
            <pubDate>Thu, 10 Jul 2025 00:05:03 GMT</pubDate>
            <description><![CDATA[A cross-platform bilibili toolbox. Ë∑®Âπ≥Âè∞ÂìîÂì©ÂìîÂì©Â∑•ÂÖ∑ÁÆ±ÔºåÊîØÊåÅ‰∏ãËΩΩËßÜÈ¢ë„ÄÅÁï™ÂâßÁ≠âÁ≠âÂêÑÁ±ªËµÑÊ∫ê]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/btjawa/BiliTools">btjawa/BiliTools</a></h1>
            <p>A cross-platform bilibili toolbox. Ë∑®Âπ≥Âè∞ÂìîÂì©ÂìîÂì©Â∑•ÂÖ∑ÁÆ±ÔºåÊîØÊåÅ‰∏ãËΩΩËßÜÈ¢ë„ÄÅÁï™ÂâßÁ≠âÁ≠âÂêÑÁ±ªËµÑÊ∫ê</p>
            <p>Language: TypeScript</p>
            <p>Stars: 2,436</p>
            <p>Forks: 160</p>
            <p>Stars today: 171 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
    &lt;img src=&quot;./assets/logo.svg&quot; width=500 /&gt;
&lt;/p&gt;

&lt;h1 align=&quot;center&quot;&gt;BiliTools - ÂìîÂì©ÂìîÂì©Â∑•ÂÖ∑ÁÆ±&lt;/h1&gt;
&lt;p align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://github.com/btjawa/BiliTools/stargazers&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/github/stars/btjawa/BiliTools&quot; /&gt;
    &lt;/a&gt;
    &lt;a href=&quot;https://github.com/btjawa/BiliTools/forks&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/github/forks/btjawa/BiliTools&quot; /&gt;
    &lt;/a&gt;
    &lt;img src=&quot;https://img.shields.io/github/last-commit/btjawa/BiliTools&quot; /&gt;
    &lt;a href=&quot;https://github.com/btjawa/BiliTools/blob/master/LICENSE&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/github/license/btjawa/BiliTools&quot; /&gt;
    &lt;/a&gt;
    &lt;a href=&quot;https://github.com/btjawa/BiliTools/releases/latest&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/github/v/release/btjawa/BiliTools&quot; /&gt;
    &lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://trendshift.io/repositories/13286&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https://trendshift.io/api/badge/repositories/13286&quot; alt=&quot;btjawa%2FBiliTools | Trendshift&quot; style=&quot;width: 250px; height: 55px;&quot; width=&quot;250&quot; height=&quot;55&quot;/&gt;
    &lt;/a&gt;
&lt;/p&gt;


&lt;br&gt;

üí° Âü∫‰∫é [Tauri v2](https://github.com/tauri-apps/tauri) ÊûÑÂª∫ÔºåÊîØÊåÅ‰∏ãËΩΩËß£ÊûêÂìîÂì©ÂìîÂì©ÂêÑÁ±ªËµÑÊ∫êÔºåÂ∞Ü‰ºöÈôÜÁª≠ÊîØÊåÅ [Êõ¥Â§öÂäüËÉΩ](https://github.com/users/btjawa/projects/4)

üìñ ÊñáÊ°£ / ÂÖ∂‰ªñ‰ø°ÊÅØÔºö[https://www.btjawa.top/bilitools](https://www.btjawa.top/bilitools) 

&gt; [!IMPORTANT] 
&gt; Êú¨È°πÁõÆÁöÑÊâÄÊúâ [Â£∞Êòé](#Â£∞Êòé)Ôºå‰ªÖÈÄÇÁî®‰∫éÂèëÂ∏ÉÂú® [Release](https://github.com/btjawa/BiliTools/releases/latest) È°µÁöÑÁâàÊú¨&lt;br&gt;
&gt; Êú¨È°πÁõÆÊ∂âÂèäË¥¶Âè∑Áõ∏ÂÖ≥ÂäüËÉΩÔºåÂõ†‰ΩøÁî® **‰ªª‰ΩïÁ¨¨‰∏âÊñπÁâàÊú¨** ÊâÄÈÄ†ÊàêÁöÑ‰ªª‰ΩïÂêéÊûúÔºå**Êú¨È°πÁõÆÊ¶Ç‰∏çË¥üË¥£**&lt;br&gt;
&gt; **Â§ß‰ºöÂëò / ‰ªòË¥π** ‰ªÖÊîØÊåÅÂ∑≤ÂºÄÈÄöÂØπÂ∫îÊúçÂä°ÁöÑË¥¶Âè∑ÔºåÊôÆÈÄöË¥¶Âè∑Êó†Ê≥ïËß£ÊûêÊ≠§Á±ªÂÜÖÂÆπ

## üíæ ÂÆâË£ÖÊåáÂçó

Ë¶ÅÊ±Ç Windows ÁâàÊú¨ &gt;= **8.1**ÔºåmacOS ÁâàÊú¨ &gt;= **11.0**

ÂØπ‰∫é‰Ωé‰∫é‰∏äËø∞ÁâàÊú¨ÁöÑÁ≥ªÁªüÁéØÂ¢ÉÔºå‰∏ç‰ºöÊèê‰æõ‰ªª‰ΩïÊîØÊåÅ

Windows ‰∏ãËΩΩ `BiliTools_xxx_x64-setup.exe` ËøõË°åÂÆâË£ÖÔºåËã•Âç°Âú®ÂÆâË£Ö `WebView2`ÔºåÂèØÂâçÂæÄ [Microsoft](https://developer.microsoft.com/en-us/microsoft-edge/webview2) ÊâãÂä®ÂÆâË£Ö

macOS ‰∏ãËΩΩ `BiliTools_xxx_universal.dmg` ËøõË°åÂÆâË£ÖÔºå**‰∏ÄËà¨**‰∏çÂª∫ËÆÆÂçïÁã¨‰∏ãËΩΩÂØπÂ∫îÊû∂ÊûÑÁöÑÈïúÂÉèÔºåÂèÇËÄÉ [#26](https://github.com/btjawa/BiliTools/issues/26#issuecomment-2785410137)

## üöÄ ÂèÇ‰∏éË¥°ÁåÆ / Contributing

Êú¨È°πÁõÆÂΩìÂâçÁî± [Êàë](https://github.com/btjawa) ‰∏Ä‰∫∫Áª¥Êä§Ôºö
- **ÊàëÊú¨‰∫∫ÊòØÂàù‰∏≠ÁîüÔºåÊó∂Èó¥Âπ∂‰∏çÂ§ö**
- ‰∏™‰∫∫ËÉΩÂäõÊúâÈôêÔºåÊàë‰πüÊ∏ÖÊ•öÊúâÂæàÂ§öÊºèÊ¥ûÂ∞öÊú™‰øÆÂ§ç

Ê¨¢ËøéÂêÑ‰Ωç‰∏∫Êú¨È°πÁõÆÂÅöÂá∫Ë¥°ÁåÆÔºåËÆ©Êú¨È°πÁõÆÂèòÂæóÊõ¥Â•ΩÔºÅ*Ë¥°ÁåÆÊåáÂçóÊ≠£Âú®ÁºñÂÜô‰∏≠*

Â¶ÇÊûú‰Ω†ÊòØ‰ΩøÁî®ËÄÖÔºö
- ‰ªÖÂú® [Issues](https://github.com/btjawa/BiliTools/issues) Êèê‰∫§ÈóÆÈ¢òÔºå‰æø‰∫é Issue tracking
- ÊåâÁÖßÊ®°ÊùøÂ°´ÂÜôÂ•Ω **ÊâÄÊúâÈúÄË¶ÅÁöÑ‰ø°ÊÅØ**ÔºåÊèê‰∫§Ë∂≥Â§üÁöÑÊó•ÂøóÊàñÈîôËØØÈ°µÈù¢Êà™Âõæ
- **Â∞äÈáç‰ªñ‰∫∫ÁöÑÂä≥Âä®ÊàêÊûú**

## üß™ ÂäüËÉΩ

### ËµÑÊ∫êËß£Êûê

| ÂäüËÉΩ    | Áä∂ÊÄÅ    | Â§áÊ≥®                      |
|---------|---------|---------------------------|
| ËßÜÈ¢ë    | ‚úÖ Â∑≤ÂÆåÊàê | &lt;ul&gt;&lt;li&gt;ÊîØÊåÅÂêàÈõÜ / ÂàÜP / ‰∫íÂä®„ÄÅÁï™Ââß / ËØæÁ®ã / ÁîµÂΩ±&lt;/li&gt;&lt;li&gt;ÊîØÊåÅ DASH„ÄÅMP4„ÄÅFLV&lt;/li&gt;&lt;li&gt;ÊîØÊåÅ 4K„ÄÅ8K„ÄÅHDR„ÄÅÊùúÊØîËßÜÁïå&lt;/li&gt;&lt;/ul&gt; |
| Èü≥È¢ë    | ‚úÖ Â∑≤ÂÆåÊàê | &lt;ul&gt;&lt;li&gt;ÊîØÊåÅ AVC„ÄÅHEVC„ÄÅAV1&lt;/li&gt;&lt;li&gt;ÊîØÊåÅ ÊùúÊØî„ÄÅHi-Res&lt;/li&gt;&lt;/ul&gt; |
| Èü≥‰πê    | ‚úÖ Â∑≤ÂÆåÊàê | &lt;ul&gt;&lt;li&gt;ÊîØÊåÅÊó†Êçü FLAC„ÄÅ320Kbps Èü≥‰πê / Ê≠åÂçï&lt;/li&gt;&lt;/ul&gt; |
| ÂéÜÂè≤ÂºπÂπï | ‚úÖ Â∑≤ÂÆåÊàê | &lt;ul&gt;&lt;li&gt;ASS Â≠óÂπïÊ†ºÂºè&lt;/li&gt;&lt;li&gt;ProtoBuf Ëß£ÊûêÊñπÂºè&lt;/li&gt;&lt;/ul&gt; |
| ÂÆûÊó∂ÂºπÂπï | ‚úÖ Â∑≤ÂÆåÊàê | &lt;ul&gt;&lt;li&gt;ASS Â≠óÂπïÊ†ºÂºè&lt;/li&gt;&lt;li&gt;XML„ÄÅProtoBuf Ëß£ÊûêÊñπÂºè&lt;/li&gt;&lt;/ul&gt; |
| Â∞ÅÈù¢    | ‚úÖ Â∑≤ÂÆåÊàê | ÊîØÊåÅÁï™Ââß / ÁîµÂΩ±Êµ∑Êä•Á≠âÁ≠â |
| Â≠óÂπï    | ‚úÖ Â∑≤ÂÆåÊàê | SRT Ê†ºÂºè |
| AIÊÄªÁªì  | ‚úÖ Â∑≤ÂÆåÊàê | MarkdownÊ†ºÂºèÔºå**Êù•Ëá™ÂìîÂì©ÂìîÂì© `AI Â∞èÂä©Êâã`**&lt;br&gt;*Áî±Shanghai-Bilibili index-20231207Â§ßÊ®°ÂûãÊèê‰æõÊäÄÊúØÊîØÊåÅ* |
| Êî∂ËóèÂ§π  | ‚úÖ Â∑≤ÂÆåÊàê | FID Âè∑Ëß£Êûê |
| ÂÖÉÊï∞ÊçÆ  | ‚úÖ Â∑≤ÂÆåÊàê | Â∞ÅÈù¢„ÄÅÊ†áÈ¢ò„ÄÅÁÆÄ‰ªã„ÄÅUP‰∏ª„ÄÅ‰∏ä‰º†Êó∂Èó¥„ÄÅTAGS |
| NFO    | ‚ö†Ô∏è ËøõË°å‰∏≠ | ‰ºòÂÖàÈÄÇÈÖç `Emby` |

### ÁôªÂΩï &amp; È™åËØÅÁõ∏ÂÖ≥

| ÂäüËÉΩ           | Áä∂ÊÄÅ       |
|----------------|------------|
| Êâ´Á†ÅÁôªÂΩï        | ‚úÖ Â∑≤ÂÆåÊàê |
| ÂØÜÁ†ÅÁôªÂΩï        | ‚úÖ Â∑≤ÂÆåÊàê |
| Áü≠‰ø°ÁôªÂΩï        | ‚úÖ Â∑≤ÂÆåÊàê |
| Ëá™Âä®Âà∑Êñ∞ÁôªÂΩïÁä∂ÊÄÅ | ‚úÖ Â∑≤ÂÆåÊàê |
| ÂèÇÊï∞Á≠æÂêç        | ‚úÖ Â∑≤ÂÆåÊàê |
| È£éÊéßÈ™åËØÅ        | ‚úÖ Â∑≤ÂÆåÊàê |
| ÊåáÁ∫πÈ™åËØÅ        | ‚úÖ Â∑≤ÂÆåÊàê |

## üåé ÂõΩÈôÖÂåñ / Internationalization

I work on translations primarily to improve my expression in these languages.

**Simplified Chinese (zh-CN)** is the primary language maintained, and acts as the source for other translations.

| Code           | Status      |
|----------------|-------------|
| zh-CN          | ‚úÖ Complete |
| zh-HK          | ‚úÖ Complete |
| ja-JP          | ‚úÖ Complete |
| en-US          | ‚úÖ Complete |

## üíª Êú¨Âú∞ÂºÄÂèë &amp; ÊûÑÂª∫

&gt; Rust &gt;= **1.70**&lt;br&gt;
&gt; Node.js &gt;= **20**

- ÂÖãÈöÜÈ°πÁõÆÂπ∂ÂÆâË£Ö‰æùËµñ
```bash
git clone https://github.com/btjawa/BiliTools.git
cd BiliTools
```

- ÂêØÂä®ÂºÄÂèëÊúçÂä°Âô®
```bash
npm run tauri dev
```

- ÊûÑÂª∫ÂèëË°åÁâà
```bash
npm run tauri build
```

## ‚ö° ËµûÂä©

È°πÁõÆÂ∑≤ËææÂà∞ 1k StarsÔºåÂ∏åÊúõÂ§ßÂÆ∂Â§öÂ§öÊîØÊåÅÔºÅ

ÁõÆÂâçÊ≠£Âú®ÂºÄÂèë `v1.3.8` ~ `v1.4.0`ÔºåÂ±äÊó∂‰ºöÊúâÂ§ßÈáèÊõ¥Êñ∞

Â¶ÇÊûú‰Ω†ÂñúÊ¨¢ÔºåÂπ∂ÊÉ≥Âä©ÂäõËøô‰∏™È°πÁõÆÔºåÂèØ‰ª•ËÄÉËôëËØ∑ÊàëÂñùÊùØÂíñÂï°~

- [Áà±ÂèëÁîµ](https://afdian.com/a/BTJ_Shiroi)
- *ÂæÆ‰ø°ÊîØ‰ªò (ÂáÜÂ§á‰∏≠)*

‰Ω†ÁöÑÊîØÊåÅÂ∞ÜÊòØÊàëÊåÅÁª≠Áª¥Êä§ÁöÑ‰∏ÄÂ§ßÂä®ÂäõÔºÅ

## üí´ È∏£Ë∞¢

Waiting for another contributor...

- [bilibili-API-collect](https://github.com/SocialSisterYi/bilibili-API-collect) ÈÉ®ÂàÜÊé•Âè£ËØ∑Ê±ÇËßÑËåÉÂèÇËÄÉ

- [aria2](https://github.com/aria2/aria2) Áî®‰∫éÂ§öÁ∫øÁ®ãÈ´òÊïà‰∏ãËΩΩÊï∞ÊçÆ

- [ffmpeg](https://git.ffmpeg.org/ffmpeg.git) Áî®‰∫éÊ∑∑ÊµÅ‰∏éÂÖ∂‰ªñÂ™í‰ΩìÂ§ÑÁêÜ

- [DanmakuFactory](https://github.com/hihkm/DanmakuFactory) Áî®‰∫éÂ∞Ü XML ËΩ¨Êç¢‰∏∫ ASS Â≠óÂπï

&lt;picture&gt;
&lt;source
    media=&quot;(prefers-color-scheme: dark)&quot;
    srcset=&quot;https://api.star-history.com/svg?repos=btjawa/BiliTools&amp;type=Date&amp;theme=dark&quot;
/&gt;
&lt;source
    media=&quot;(prefers-color-scheme: light)&quot;
    srcset=&quot;https://api.star-history.com/svg?repos=btjawa/BiliTools&amp;type=Date&quot;
/&gt;
&lt;img
    alt=&quot;Star History Chart&quot;
    src=&quot;https://api.star-history.com/svg?repos=btjawa/BiliTools&amp;type=Date&quot;
/&gt;
&lt;/picture&gt;

## Â£∞Êòé

Êú¨È°πÁõÆÈÅµÂæ™ [GPL-3.0-or-later](/LICENSE) ÂºÄÊ∫êËÆ∏ÂèØËØÅ„ÄÇ

- Êú¨È°πÁõÆÂÖçË¥πÂºÄÊ∫êÔºåÊó®Âú®Â≠¶‰π†ÊäÄÊúØ‰∏éÁ†îÁ©∂ÔºõËØ∑ÈÅµÂÆàÁõ∏ÂÖ≥Ê≥ïÂæãÊ≥ïËßÑÔºåÂàáÂãøÊª•Áî®Ôºå‰ΩúËÄÖ‰∏çÂØπÂõ†‰∏çÂΩì‰ΩøÁî®ËÄåÂØºËá¥ÁöÑ‰ªª‰ΩïÂêéÊûúË¥üË¥£„ÄÇ
- Êú¨È°πÁõÆÊâÄÊúâËØ∑Ê±ÇË∞ÉÁî®Âùá‰∏∫ **ËØ∑Ê±ÇÁî®Êà∑Â∑≤Ëé∑ËÆøÈóÆÊùÉÈôêÁöÑÂú®Á∫øËµÑÊ∫ê**Ôºå‰∏çÂåÖÂê´‰ªª‰ΩïÂΩ¢ÂºèÁöÑÁªïËøáÊ†°È™å„ÄÅÁ†¥Ëß£‰ªòËµÑÊ∫êÁ≠âÁ≠âË°å‰∏∫„ÄÇ
- Êú¨È°πÁõÆ‰∫ßÁîü‰∏éËé∑ÂèñÁöÑÊâÄÊúâÊï∞ÊçÆÂ∞Ü‰ΩøÁî® `SQLite` Ê†ºÂºèÊòéÊñáÂ≠òÂÇ®‰∫é‰ª•‰∏ãË∑ØÂæÑÔºö

&gt; Windows: `%AppData%\com.btjawa.bilitools\Storage`&lt;br&gt;
&gt; macOS: `$HOME/Library/Application Support/com.btjawa.bilitools/Storage`&lt;br&gt;
&gt; Linux: `$HOME/.local/share/com.btjawa.bilitools/Storage`

- Áî±‰∫éÊú¨È°πÁõÆÁöÑÁâπÊÆäÊÄßÔºå‰ΩøÁî®ËÄÖÂ∫îËá™Ë°åÊâøÊãÖË¥¶Âè∑Áõ∏ÂÖ≥È£éÈô©„ÄÇ
- Â¶ÇÊúâ‰æµÊùÉÔºåÂèØÈöèÊó∂ËÅîÁ≥ªÂ§ÑÁêÜ„ÄÇ</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[grafana/grafana]]></title>
            <link>https://github.com/grafana/grafana</link>
            <guid>https://github.com/grafana/grafana</guid>
            <pubDate>Thu, 10 Jul 2025 00:05:02 GMT</pubDate>
            <description><![CDATA[The open and composable observability and data visualization platform. Visualize metrics, logs, and traces from multiple sources like Prometheus, Loki, Elasticsearch, InfluxDB, Postgres and many more.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/grafana/grafana">grafana/grafana</a></h1>
            <p>The open and composable observability and data visualization platform. Visualize metrics, logs, and traces from multiple sources like Prometheus, Loki, Elasticsearch, InfluxDB, Postgres and many more.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 68,892</p>
            <p>Forks: 12,760</p>
            <p>Stars today: 23 stars today</p>
            <h2>README</h2><pre>![Grafana Logo (Light)](docs/logo-horizontal.png#gh-light-mode-only)
![Grafana Logo (Dark)](docs/logo-horizontal-dark.png#gh-dark-mode-only)

The open-source platform for monitoring and observability

[![License](https://img.shields.io/github/license/grafana/grafana)](LICENSE)
[![Drone](https://drone.grafana.net/api/badges/grafana/grafana/status.svg)](https://drone.grafana.net/grafana/grafana)
[![Go Report Card](https://goreportcard.com/badge/github.com/grafana/grafana)](https://goreportcard.com/report/github.com/grafana/grafana)

Grafana allows you to query, visualize, alert on and understand your metrics no matter where they are stored. Create, explore, and share dashboards with your team and foster a data-driven culture:

- **Visualizations:** Fast and flexible client side graphs with a multitude of options. Panel plugins offer many different ways to visualize metrics and logs.
- **Dynamic Dashboards:** Create dynamic &amp; reusable dashboards with template variables that appear as dropdowns at the top of the dashboard.
- **Explore Metrics:** Explore your data through ad-hoc queries and dynamic drilldown. Split view and compare different time ranges, queries and data sources side by side.
- **Explore Logs:** Experience the magic of switching from metrics to logs with preserved label filters. Quickly search through all your logs or streaming them live.
- **Alerting:** Visually define alert rules for your most important metrics. Grafana will continuously evaluate and send notifications to systems like Slack, PagerDuty, VictorOps, OpsGenie.
- **Mixed Data Sources:** Mix different data sources in the same graph! You can specify a data source on a per-query basis. This works for even custom datasources.

## Get started

- [Get Grafana](https://grafana.com/get)
- [Installation guides](https://grafana.com/docs/grafana/latest/setup-grafana/installation/)

Unsure if Grafana is for you? Watch Grafana in action on [play.grafana.org](https://play.grafana.org/)!

## Documentation

The Grafana documentation is available at [grafana.com/docs](https://grafana.com/docs/).

## Contributing

If you&#039;re interested in contributing to the Grafana project:

- Start by reading the [Contributing guide](https://github.com/grafana/grafana/blob/HEAD/CONTRIBUTING.md).
- Learn how to set up your local environment, in our [Developer guide](https://github.com/grafana/grafana/blob/HEAD/contribute/developer-guide.md).
- Explore our [beginner-friendly issues](https://github.com/grafana/grafana/issues?q=is%3Aopen+is%3Aissue+label%3A%22beginner+friendly%22).
- Look through our [style guide and Storybook](https://developers.grafana.com/ui/latest/index.html).

## Get involved

- Follow [@grafana on X (formerly Twitter)](https://x.com/grafana/).
- Read and subscribe to the [Grafana blog](https://grafana.com/blog/).
- If you have a specific question, check out our [discussion forums](https://community.grafana.com/).
- For general discussions, join us on the [official Slack](https://slack.grafana.com) team.

This project is tested with [BrowserStack](https://www.browserstack.com/).

## License

Grafana is distributed under [AGPL-3.0-only](LICENSE). For Apache-2.0 exceptions, see [LICENSING.md](https://github.com/grafana/grafana/blob/HEAD/LICENSING.md).
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[webstudio-is/webstudio]]></title>
            <link>https://github.com/webstudio-is/webstudio</link>
            <guid>https://github.com/webstudio-is/webstudio</guid>
            <pubDate>Thu, 10 Jul 2025 00:05:01 GMT</pubDate>
            <description><![CDATA[Open source website builder and Webflow alternative. Webstudio is an advanced visual builder that connects to any headless CMS, supports all CSS properties, and can be hosted anywhere, including with us.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/webstudio-is/webstudio">webstudio-is/webstudio</a></h1>
            <p>Open source website builder and Webflow alternative. Webstudio is an advanced visual builder that connects to any headless CMS, supports all CSS properties, and can be hosted anywhere, including with us.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 7,258</p>
            <p>Forks: 1,132</p>
            <p>Stars today: 43 stars today</p>
            <h2>README</h2><pre>&lt;img width=&quot;1512&quot; alt=&quot;builder-screenshot&quot; src=&quot;https://github.com/webstudio-is/.github/blob/main/assets/builder-screenshot.png?raw=true&quot;&gt;
&lt;br /&gt;&lt;br /&gt;

&lt;section align=&quot;center&quot;&gt;
  Webstudio is an Open Source Visual Development Platform for developers, designers, and cross-functional teams. You own the data, components, and infrastructure. You can use the hosted version or roll out your own.
&lt;/section&gt;
&lt;br /&gt;&lt;br /&gt;

## Learning Resources

- [Blog](https://webstudio.is/blog)
- [Documentation](https://docs.webstudio.is/)
- [Brand and Product Design](https://docs.webstudio.is/contributing/contributing-for-designers)
- [Contributing Guide for Devs](https://docs.webstudio.is/contributing/contributing-for-developers)
- [Github Discussions](https://github.com/webstudio-is/webstudio-community/discussions)
- [Wishlist](https://github.com/webstudio-is/webstudio-community/discussions/categories/wishlist)
- [Builder Issues Tracker](https://github.com/webstudio-is/webstudio/issues)
- [Roadmap](https://github.com/orgs/webstudio-is/projects/11)

## Social Media

- [Twitter](https://twitter.com/getwebstudio)
- [Youtube](https://www.youtube.com/@getwebstudio)
- [Discord](https://wstd.us/community)

## Thanks

&lt;a href=&quot;https://www.lost-pixel.com/&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/29632358/168112844-77e76a0d-b96f-4bc8-b753-cd39f4afd428.png&quot; width=&quot;50&quot; height=&quot;50&quot; alt=&quot;Lost Pixel&quot; /&gt;&lt;/a&gt;

Thanks to [Lost Pixel](https://www.lost-pixel.com/) for providing the visual testing platform that helps us review UI changes and catch visual regressions.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[vuejs/vitepress]]></title>
            <link>https://github.com/vuejs/vitepress</link>
            <guid>https://github.com/vuejs/vitepress</guid>
            <pubDate>Thu, 10 Jul 2025 00:05:00 GMT</pubDate>
            <description><![CDATA[Vite & Vue powered static site generator.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/vuejs/vitepress">vuejs/vitepress</a></h1>
            <p>Vite & Vue powered static site generator.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 15,210</p>
            <p>Forks: 2,412</p>
            <p>Stars today: 12 stars today</p>
            <h2>README</h2><pre># VitePress üìùüí®

[![test](https://github.com/vuejs/vitepress/actions/workflows/test.yml/badge.svg?branch=main)](https://github.com/vuejs/vitepress/actions/workflows/test.yml)
[![npm](https://img.shields.io/npm/v/vitepress)](https://www.npmjs.com/package/vitepress)
[![nightly releases](https://img.shields.io/badge/nightly-releases-orange)](https://nightly.akryum.dev/vuejs/vitepress)
[![chat](https://img.shields.io/badge/chat-discord-blue?logo=discord)](https://chat.vuejs.org)

---

VitePress is a Vue-powered static site generator and a spiritual successor to [VuePress](https://vuepress.vuejs.org), built on top of [Vite](https://github.com/vitejs/vite).

## Documentation

To check out docs, visit [vitepress.dev](https://vitepress.dev).

## Changelog

Detailed changes for each release are documented in the [CHANGELOG](https://github.com/vuejs/vitepress/blob/main/CHANGELOG.md).

## Contribution

Please make sure to read the [Contributing Guide](https://github.com/vuejs/vitepress/blob/main/.github/contributing.md) before making a pull request.

## License

[MIT](https://github.com/vuejs/vitepress/blob/main/LICENSE)

Copyright (c) 2019-present, Yuxi (Evan) You
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[bknd-io/bknd]]></title>
            <link>https://github.com/bknd-io/bknd</link>
            <guid>https://github.com/bknd-io/bknd</guid>
            <pubDate>Thu, 10 Jul 2025 00:04:59 GMT</pubDate>
            <description><![CDATA[Lightweight Firebase/Supabase alternative built to run anywhere ‚Äî incl. Next.js, Remix, Astro, Cloudflare, Bun, Node, AWS Lambda & more.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/bknd-io/bknd">bknd-io/bknd</a></h1>
            <p>Lightweight Firebase/Supabase alternative built to run anywhere ‚Äî incl. Next.js, Remix, Astro, Cloudflare, Bun, Node, AWS Lambda & more.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 1,903</p>
            <p>Forks: 53</p>
            <p>Stars today: 68 stars today</p>
            <h2>README</h2><pre>[![npm version](https://img.shields.io/npm/v/bknd.svg)](https://npmjs.org/package/bknd)

![bknd](https://raw.githubusercontent.com/bknd-io/bknd/refs/heads/main/docs/_assets/poster.png)

&lt;p align=&quot;center&quot; width=&quot;100%&quot;&gt;
&lt;a href=&quot;https://stackblitz.com/github/bknd-io/bknd-examples?hideExplorer=1&amp;embed=1&amp;view=preview&amp;startScript=example-admin-rich&amp;initialPath=%2Fdata%2Fschema&quot; target=&quot;_blank&quot;&gt;
&lt;strong&gt;‚≠ê Live Demo&lt;/strong&gt;
&lt;/a&gt;
&lt;/p&gt;

bknd simplifies app development by providing a fully functional backend for database management, authentication, media and workflows. Being lightweight and built on Web Standards, it can be deployed nearly anywhere, including running inside your framework of choice. No more deploying multiple separate services!
* **Runtimes**: Node.js 22+, Bun 1.0+, Deno, Browser, Cloudflare Workers/Pages, Vercel, Netlify, AWS Lambda, etc.
* **Databases**:
  * SQLite: LibSQL, Node SQLite, Bun SQLite, Cloudflare D1, Cloudflare Durable Objects SQLite, SQLocal
  * Postgres: Vanilla Postgres, Supabase, Neon, Xata
* **Frameworks**: React, Next.js, React Router, Astro, Vite, Waku
* **Storage**: AWS S3, S3-compatible (Tigris, R2, Minio, etc.), Cloudflare R2 (binding), Cloudinary, Filesystem

**For documentation and examples, please visit https://docs.bknd.io.**

&gt; [!WARNING]
&gt; This project requires Node.js 22 or higher (because of `node:sqlite`).
&gt;
&gt; Please keep in mind that **bknd** is still under active development
&gt; and therefore full backward compatibility is not guaranteed before reaching v1.0.0.

## Size
![gzipped size of bknd](https://img.shields.io/bundlejs/size/bknd?label=bknd)
![gzipped size of bknd/client](https://img.badgesize.io/https://unpkg.com/bknd@latest/dist/ui/client/index.js?compression=gzip&amp;label=bknd/client)
![gzipped size of bknd/elements](https://img.badgesize.io/https://unpkg.com/bknd@latest/dist/ui/elements/index.js?compression=gzip&amp;label=bknd/elements)
![gzipped size of bknd/ui](https://img.badgesize.io/https://unpkg.com/bknd@latest/dist/ui/index.js?compression=gzip&amp;label=bknd/ui)

The size on npm is misleading, as the `bknd` package includes the backend, the ui components as well as the whole backend bundled into the cli including static assets. 

Depending on what you use, the size can be higher as additional dependencies are getting pulled in. The minimal size of a full `bknd` app as an API is around 300 kB gzipped (e.g. deployed as Cloudflare Worker).

## Motivation
Creating digital products always requires developing both the backend (the logic) and the frontend (the appearance). Building a backend from scratch demands deep knowledge in areas such as authentication and database management. Using a backend framework can speed up initial development, but it still requires ongoing effort to work within its constraints (e.g., *&quot;how to do X with Y?&quot;*), which can quickly slow you down. Choosing a backend system is a tough decision, as you might not be aware of its limitations until you encounter them.

**The solution:** A backend system that only assumes and implements primitive details, integrates into multiple environments, and adheres to industry standards.

## Features
* ‚ö° Instant backend with full REST API:
  * **Data**: Define, query, and control your data with ease.
  * **Auth**: Easily implement reliable authentication strategies.
  * **Media**: Effortlessly manage and serve all your media files.
  * **Flows**: Design and run workflows with seamless automation. (UI integration coming soon!)
* üåê Built on Web Standards for maximum compatibility
* üèÉ‚Äç‚ôÇÔ∏è Multiple run modes
  * standalone using the CLI
  * using a JavaScript runtime (Node, Bun, workerd)
  * using a React framework (Next.js, React Router, Astro)
* üì¶ Official API and React SDK with type-safety
* ‚öõÔ∏è React elements for auto-configured authentication and media components

## Structure
The package is mainly split into 4 parts, each serving a specific purpose:

| Import                      | Purpose                                              |
|-----------------------------|------------------------------------------------------|
| `bknd`&lt;br/&gt;`bknd/adapter/*` | Backend including APIs and adapters                  |
| `bknd/ui`                   | Admin UI components for react frameworks             |
| `bknd/client`               | TypeScript SDK and React hooks for the API endpoints |
| `bknd/elements`             | React components for authentication and media        |


### The backend (`bknd`)
Serve the backend as an API for any JS runtime or framework. The latter is especially handy, as it allows you to deploy your frontend and backend bundled together. Furthermore it allows adding additional logic in a way you&#039;re already familar with. Just add another route and you&#039;re good to go.

Here is an example of serving the API using node:
```js index.js
import { serve } from &quot;bknd/adapter/node&quot;
serve();
```

### Integrated admin UI (`bknd/ui`)
The admin UI allows to manage your data including full configuration of your backend using a graphical user interface. Using `vite`, your admin route looks like this:
```tsx
import { Admin } from &quot;bknd/ui&quot;
import &quot;bknd/dist/styles.css&quot;;

export default function AdminPage() {
   return &lt;Admin /&gt;
}
```

### Using the REST API or TypeScript SDK (`bknd/client`)
If you&#039;re not using a JavaScript environment, you can still access any endpoint using the REST API:
```bash
curl -XGET &lt;your-endpoint&gt;/api/data/entity/&lt;entity&gt;
{
  &quot;data&quot;: [
    { &quot;id&quot;: 1, ... },
    { &quot;id&quot;: 2, ... }
  ],
  &quot;meta&quot;: { /* ... */ }
}
```

In a JavaScript environment, you can use the TypeScript SDK with type-safety. The above example would look like this:
```ts
import { Api } from &quot;bknd/client&quot;;

const api = new Api({ host: &quot;&lt;endpoint&gt;&quot; });
const { data } = await api.data.readMany(&quot;&lt;entity&gt;&quot;);
```

If you&#039;re using React, there are 2 hooks exposed (`useApi`, `useEntity`), as well as an `swr` wrapper around each (`useApiQuery`, `useEntityQuery`). The `swr` wrapped hooks automatically handled query invalidation:

```tsx
import { useState } from &quot;react&quot;;
import { useEntityQuery } from &quot;bknd/client&quot;;

export default function App() {
   const { data } = useEntityQuery(&quot;todos&quot;);   
   return &lt;ul&gt;
      {data?.map(todo =&gt; (
         &lt;li key={todo.id}&gt;{todo.name}&lt;/li&gt;
      ))}
   &lt;/ul&gt;
}
```

### React elements (`bknd/elements`)
You don&#039;t have to figure out API details to include media uploads to your app. For an user avatar upload, this is all you need:
```tsx
import { Media } from &quot;bknd/elements&quot;
import &quot;bknd/dist/main.css&quot;

export function UserAvatar() {
   return &lt;Media.Dropzone
     entity={{ name: &quot;users&quot;, id: 1, field: &quot;avatar&quot; }}
     maxItems={1}
     overwrite
   /&gt;
}
```
The import path also exports components for login and registration forms which are automatically pointed to the `bknd` defaults.


## üöÄ Quick start
To quickly spin up an instance, run:
```bash
npx bknd run
```

### Installation  
```bash
npm install bknd
```
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[CapSoftware/Cap]]></title>
            <link>https://github.com/CapSoftware/Cap</link>
            <guid>https://github.com/CapSoftware/Cap</guid>
            <pubDate>Thu, 10 Jul 2025 00:04:58 GMT</pubDate>
            <description><![CDATA[Open source Loom alternative. Beautiful, shareable screen recordings.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/CapSoftware/Cap">CapSoftware/Cap</a></h1>
            <p>Open source Loom alternative. Beautiful, shareable screen recordings.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 10,260</p>
            <p>Forks: 628</p>
            <p>Stars today: 28 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;p align=&quot;center&quot;&gt;
   &lt;img width=&quot;150&quot; height=&quot;150&quot; src=&quot;https://github.com/CapSoftware/Cap/blob/main/apps/desktop/src-tauri/icons/Square310x310Logo.png&quot; alt=&quot;Logo&quot;&gt;
  &lt;/p&gt;
	&lt;h1 align=&quot;center&quot;&gt;&lt;b&gt;Cap&lt;/b&gt;&lt;/h1&gt;
	&lt;p align=&quot;center&quot;&gt;
		The open source Loom alternative.
    &lt;br /&gt;
    &lt;a href=&quot;https://cap.so&quot;&gt;&lt;strong&gt;Cap.so ¬ª&lt;/strong&gt;&lt;/a&gt;
    &lt;br /&gt;
    &lt;br /&gt;
    &lt;b&gt;Downloads for &lt;/b&gt;
		&lt;a href=&quot;https://cap.so/download&quot;&gt;macOS &amp; Windows&lt;/a&gt;
    &lt;br /&gt;
  &lt;/p&gt;
&lt;/p&gt;
&lt;br/&gt;

[![Open Bounties](https://img.shields.io/endpoint?url=https%3A%2F%2Fconsole.algora.io%2Fapi%2Fshields%2FCapSoftware%2Fbounties%3Fstatus%3Dopen)](https://console.algora.io/org/CapSoftware/bounties?status=open)

Cap is the open source alternative to Loom. It&#039;s a video messaging tool that allows you to record, edit and share videos in seconds.

&lt;img src=&quot;https://raw.githubusercontent.com/CapSoftware/Cap/refs/heads/main/apps/web/public/landing-cover.png&quot;/&gt;

# Self Hosting

Cap Web is available to self-host using Docker or Railway, see our [self-hosting docs](https://cap.so/docs/self-hosting) to learn more.
You can also use the button below to deploy Cap Web to Railway:

[![Deploy on Railway](https://railway.com/button.svg)](https://railway.com/new/template/PwpGcf)

Cap Desktop can connect to your self-hosted Cap Web instance regardless of if you build it yourself or [download from our website](https://cap.so/download).

# Monorepo App Architecture

We use a combination of Rust, React (Next.js), TypeScript, Tauri, Drizzle (ORM), MySQL, TailwindCSS throughout this Turborepo powered monorepo.

### Apps:

- `desktop`: A [Tauri](https://tauri.app) (Rust) app, using [SolidStart](https://start.solidjs.com) on the frontend.
- `web`: A [Next.js](https://nextjs.org) web app.

### Packages:

- `ui`: A [React](https://reactjs.org) Shared component library.
- `utils`: A [React](https://reactjs.org) Shared utility library.
- `tsconfig`: Shared `tsconfig` configurations used throughout the monorepo.
- `database`: A [React](https://reactjs.org) and [Drizzle ORM](https://orm.drizzle.team/) Shared database library.
- `config`: `eslint` configurations (includes `eslint-config-next`, `eslint-config-prettier` other configs used throughout the monorepo).

# Contributing

See [CONTRIBUTING.md](CONTRIBUTING.md) for more information. This guide is a work in progress, and is updated regularly as the app matures.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[yangshun/tech-interview-handbook]]></title>
            <link>https://github.com/yangshun/tech-interview-handbook</link>
            <guid>https://github.com/yangshun/tech-interview-handbook</guid>
            <pubDate>Thu, 10 Jul 2025 00:04:57 GMT</pubDate>
            <description><![CDATA[üíØ Curated coding interview preparation materials for busy software engineers]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/yangshun/tech-interview-handbook">yangshun/tech-interview-handbook</a></h1>
            <p>üíØ Curated coding interview preparation materials for busy software engineers</p>
            <p>Language: TypeScript</p>
            <p>Stars: 127,501</p>
            <p>Forks: 15,537</p>
            <p>Stars today: 32 stars today</p>
            <h2>README</h2><pre>&lt;h1 align=&quot;center&quot;&gt;Tech Interview Handbook&lt;/h1&gt;

&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.techinterviewhandbook.org/&quot;&gt;
    &lt;img src=&quot;assets/logo.svg&quot; alt=&quot;Tech Interview Handbook&quot; width=&quot;400&quot; /&gt;
  &lt;/a&gt;
  &lt;br /&gt;
  &lt;h3&gt;
    &lt;a href=&quot;https://www.techinterviewhandbook.org/&quot;&gt;Read on the website&lt;/a&gt;
  &lt;/h3&gt;
  &lt;p&gt;
    Join/follow us on &lt;a href=&quot;https://discord.com/invite/usMqNaPczq&quot; target=&quot;_blank&quot;&gt;Discord&lt;/a&gt; | &lt;a href=&quot;https://twitter.com/techinterviewhb&quot; target=&quot;_blank&quot;&gt;ùïè (Twitter)&lt;/a&gt; | &lt;a href=&quot;https://t.me/techinterviewhandbook&quot; target=&quot;_blank&quot;&gt;Telegram&lt;/a&gt; |  &lt;a href=&quot;https://facebook.com/techinterviewhandbook&quot; target=&quot;_blank&quot;&gt;Facebook&lt;/a&gt;
  &lt;/p&gt;
&lt;/div&gt;

---

&lt;a href=&quot;https://www.techinterviewhandbook.org/software-engineering-interview-guide/&quot; target=&quot;_blank&quot;&gt;
  &lt;img src=&quot;assets/start-reading-button.jpg&quot; alt=&quot;Start Reading Tech Interview Handbook&quot; /&gt;
&lt;/a&gt;

## What is this?

Not everyone has the time to do a few hundred LeetCode questions. Here are _free and curated_ technical interview preparation materials for busy engineers, brought to you by me, the author of [Blind 75](https://www.teamblind.com/post/New-Year-Gift---Curated-List-of-Top-75-LeetCode-Questions-to-Save-Your-Time-OaM1orEU). Over 1,000,000 people have benefitted from this handbook!

Besides the usual algorithm questions, other **awesome** stuff includes:

- [Best practice questions](https://www.techinterviewhandbook.org/coding-interview-study-plan/) for coding interviews
- [Grind 75](https://www.techinterviewhandbook.org/grind75/) - the next evolution of Blind 75, bigger and better
- [How to prepare](https://www.techinterviewhandbook.org/coding-interview-prep/) for coding interviews
- [Coding interview best practices](https://www.techinterviewhandbook.org/coding-interview-cheatsheet/) - Straight-to-the-point Do&#039;s and Don&#039;ts
- [Algorithm cheatsheets and tips](https://www.techinterviewhandbook.org/algorithms/study-cheatsheet/) categorized by topic
- [Step-by-step Software Engineer resume guide](https://www.techinterviewhandbook.org/resume/) to prepare a FAANG-ready resume
- [Behavioral questions](https://www.techinterviewhandbook.org/behavioral-interview-questions/) asked by the top tech companies
- [Front end interview preparation](https://www.frontendinterviewhandbook.com)

Help from you in contributing content would be very much appreciated!

## Why would you read this?

This repository has **practical** content that covers all phases of a technical interview, from applying for a job to passing the interviews to offer negotiation. Technically competent candidates might still find the non-technical content helpful.

The information in this repository is condensed. Ultimately, the key to succeeding in technical interviews is consistent practice and I don&#039;t want to bore you with too many words. I tell you the minimum you need to know on how to go about navigating the interview process, you go and practice and land your dream job.

## Who is this for?

Anybody who wants to land a job at a tech company but is new to technical interviews, seasoned engineers who have not been on the other side of the interviewing table in a while and want to get back into the game, or anyone who wants to be better at technical interviewing.

---

&lt;div align=&quot;center&quot;&gt;
  &lt;h3&gt;üí° Stop grinding mindlessly! Study coding question patterns efficiently with
    &lt;a href=&quot;https://www.designgurus.io/course/grokking-the-coding-interview?aff=kJSIoU&quot;&gt;Grokking the Coding Interview&lt;/a&gt; by Design Gurus üí°
  &lt;/h3&gt;
&lt;/div&gt;

---

## How is this repository different?

There are many awesome books like &quot;Cracking the Coding Interview&quot; and interview-related repositories out there on GitHub, what makes this repository different? The difference is that many existing interview repositories contain mainly links to external resources whereas this repository contains top-quality curated content directly for your consumption.

Also, existing resources focus mainly on algorithm questions and lack coverage for more domain-specific and non-technical questions. This handbook aims to cover content beyond the typical algorithmic coding questions. üòé

## Looking for interview courses?

### [AlgoMonster](https://shareasale.com/r.cfm?b=1873647&amp;u=3114753&amp;m=114505&amp;urllink=&amp;afftrack=)

AlgoMonster aims to help you ace the technical interview **in the shortest time possible**. By Google engineers, AlgoMonster uses a data-driven approach to teach you the most useful key question patterns and has contents to help you quickly revise basic data structures and algorithms. Best of all, AlgoMonster is not subscription-based - pay a one-time fee and get **lifetime access**. [**Join today for a 70% discount ‚Üí**](https://shareasale.com/r.cfm?b=1873647&amp;u=3114753&amp;m=114505&amp;urllink=&amp;afftrack=)

### [Grokking the Coding Interview: Patterns for Coding Questions](https://www.designgurus.io/course/grokking-the-coding-interview?aff=kJSIoU)

This course by Design Gurus expands upon the questions on the recommended practice questions but approaches the practicing from a questions pattern perspective, which is an approach I also agree with for learning and have personally used to get better at coding interviews. The course allows you to practice selected questions in Java, Python, C++, JavaScript and also provides sample solutions in those languages. **Learn and understand patterns, not memorize answers!** [**Get lifetime access today ‚Üí**](https://www.designgurus.io/course/grokking-the-coding-interview?aff=kJSIoU)

## Looking for Front End content?

Front-end-related content has been moved to a separate website - [Front End Interview Handbook](https://frontendinterviewhandbook.com).

## Looking for System Design content?

We&#039;re still working on System Design content. In the meanwhile, check out [ByteByteGo&#039;s System Design Interview course](https://bytebytego.com?fpr=techinterviewhandbook) or Design Gurus&#039; [Grokking the System Design Interview course](https://www.designgurus.io/course/grokking-the-system-design-interview?aff=kJSIoU), which in our opinion are among the most useful resources for getting started on system design interviews preparation.

## Contents

A [Docusaurus](https://github.com/facebook/docusaurus) website has been created to provide a better reading experience. Check out the website [here](https://www.techinterviewhandbook.org)!

---

&lt;div align=&quot;center&quot;&gt;
  &lt;h3&gt;üí° Stop the grind and study with a plan! Developed by Google engineers, &lt;a href=&quot;https://shareasale.com/r.cfm?b=1873647&amp;u=3114753&amp;m=114505&amp;urllink=&amp;afftrack=&quot;&gt;AlgoMonster&lt;/a&gt; is the fastest way to get a software engineering job. &lt;a href=&quot;https://shareasale.com/r.cfm?b=1873647&amp;u=3114753&amp;m=114505&amp;urllink=&amp;afftrack=&quot;&gt;Join today for a 70% discount!&lt;/a&gt; üí°&lt;/h3&gt;
&lt;/div&gt;

---

## Related

If you are interested in how data structures are implemented, check out [Lago](https://github.com/yangshun/lago), a Data Structures and Algorithms library for JavaScript. It is pretty much still WIP but I intend to make it into a library that can be used in production and also a reference resource for revising Data Structures and Algorithms.

## Contributing

There are no formal contributing guidelines at the moment as things are still in flux and we might find a better approach to structure content as we go along. You are welcome to contribute whatever you think will be helpful to fellow engineers. If you would like to contribute content for different domains, feel free to create an issue or submit a pull request and we can discuss further.

### Contributors

This project exists thanks to all the people who contributed. [[Contribute](CONTRIBUTING.md)]. &lt;a href=&quot;https://github.com/yangshun/tech-interview-handbook/graphs/contributors&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/contributors.svg?width=890&amp;button=false&quot;&gt;&lt;/a&gt;

### Backers

Thank you to all our backers! üôè [[Become a backer](https://opencollective.com/tech-interview-handbook#backer)]

&lt;a href=&quot;https://opencollective.com/tech-interview-handbook#backers&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/backers.svg?width=890&quot;&gt;&lt;/a&gt;

&lt;a href=&quot;https://www.buymeacoffee.com/yangshun&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png&quot; alt=&quot;Buy Me A Coffee&quot; style=&quot;height: auto !important; width: auto !important;&quot;&gt;&lt;/a&gt;

### Sponsors

Support this project by becoming a sponsor. Your logo/profile picture will show up here with a link to your website. [[Become a sponsor](https://opencollective.com/tech-interview-handbook#sponsor)]

&lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/0/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/0/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/1/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/1/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/2/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/2/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/3/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/3/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/4/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/4/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/5/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/5/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/6/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/6/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/7/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/7/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/8/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/8/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/9/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/9/avatar.svg&quot;&gt;&lt;/a&gt;

## Disclaimer

I am providing code in the repository to you under an open source license. Because this is my personal repository, the license you receive to my code is from me and not my employer (Meta).
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
    </channel>
</rss>