<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for typescript - TypeScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for typescript.</description>
        <lastBuildDate>Fri, 09 May 2025 00:05:04 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[MODSetter/SurfSense]]></title>
            <link>https://github.com/MODSetter/SurfSense</link>
            <guid>https://github.com/MODSetter/SurfSense</guid>
            <pubDate>Fri, 09 May 2025 00:05:04 GMT</pubDate>
            <description><![CDATA[Open Source Alternative to NotebookLM / Perplexity / Glean, connected to external sources such as search engines (Tavily, Linkup), Slack, Linear, Notion, YouTube, GitHub and more.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/MODSetter/SurfSense">MODSetter/SurfSense</a></h1>
            <p>Open Source Alternative to NotebookLM / Perplexity / Glean, connected to external sources such as search engines (Tavily, Linkup), Slack, Linear, Notion, YouTube, GitHub and more.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 3,133</p>
            <p>Forks: 217</p>
            <p>Stars today: 303 stars today</p>
            <h2>README</h2><pre>
![new_header](https://github.com/user-attachments/assets/e236b764-0ddc-42ff-a1f1-8fbb3d2e0e65)




# SurfSense
While tools like NotebookLM and Perplexity are impressive and highly effective for conducting research on any topic/query, SurfSense elevates this capability by integrating with your personal knowledge base. It is a highly customizable AI research agent, connected to external sources such as search engines (Tavily, LinkUp), Slack, Linear, Notion, YouTube, GitHub and more to come.

&lt;div align=&quot;center&quot;&gt;
&lt;a href=&quot;https://trendshift.io/repositories/13606&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://trendshift.io/api/badge/repositories/13606&quot; alt=&quot;MODSetter%2FSurfSense | Trendshift&quot; style=&quot;width: 250px; height: 55px;&quot; width=&quot;250&quot; height=&quot;55&quot;/&gt;&lt;/a&gt;
&lt;/div&gt;


# Video

https://github.com/user-attachments/assets/48142909-6391-4084-b7e8-81da388bb1fc

# Podcast&#039;s

https://github.com/user-attachments/assets/d516982f-de00-4c41-9e4c-632a7d942f41

## Podcast Sample

https://github.com/user-attachments/assets/bf64a6ca-934b-47ac-9e1b-edac5fe972ec



## Key Features
### 1. Latest

#### üí° **Idea**: 
Have your own highly customizable private NotebookLM and Perplexity integrated with external sources.
#### üìÅ **Multiple File Format Uploading Support**
Save content from your own personal files *(Documents, images and supports **27 file extensions**)* to your own personal knowledge base .
#### üîç **Powerful Search**
Quickly research or find anything in your saved content .
#### üí¨ **Chat with your Saved Content**
 Interact in Natural Language and get cited answers.
#### üìÑ **Cited Answers**
Get Cited answers just like Perplexity.
#### üîî **Privacy &amp; Local LLM Support**
Works Flawlessly with Ollama local LLMs.
#### üè† **Self Hostable**
Open source and easy to deploy locally.
#### üéôÔ∏è Podcasts 
- Blazingly fast podcast generation agent. (Creates a 3-minute podcast in under 20 seconds.)
- Convert your chat conversations into engaging audio content
- Support for multiple TTS providers (OpenAI, Azure, Google Vertex AI)

#### üìä **Advanced RAG Techniques**
- Supports 150+ LLM&#039;s
- Supports 6000+ Embedding Models.
- Supports all major Rerankers (Pinecode, Cohere, Flashrank etc)
- Uses Hierarchical Indices (2 tiered RAG setup).
- Utilizes Hybrid Search (Semantic + Full Text Search combined with Reciprocal Rank Fusion).
- RAG as a Service API Backend.

#### ‚ÑπÔ∏è **External Sources**
- Search Engines (Tavily, LinkUp)
- Slack
- Linear
- Notion
- Youtube Videos
- GitHub
- and more to come.....

#### üîñ Cross Browser Extension
- The SurfSense extension can be used to save any webpage you like.
- Its main usecase is to save any webpages protected beyond authentication.


## FEATURE REQUESTS AND FUTURE


**SurfSense is actively being developed.** While it&#039;s not yet production-ready, you can help us speed up the process.

Join the [SurfSense Discord](https://discord.gg/ejRNvftDp9) and help shape the future of SurfSense!



## How to get started?

### Installation Options

SurfSense provides two installation methods:

1. **[Docker Installation](https://www.surfsense.net/docs/docker-installation)** - The easiest way to get SurfSense up and running with all dependencies containerized. Less Customization.

2. **[Manual Installation (Recommended)](https://www.surfsense.net/docs/manual-installation)** - For users who prefer more control over their setup or need to customize their deployment.

Both installation guides include detailed OS-specific instructions for Windows, macOS, and Linux.

Before installation, make sure to complete the [prerequisite setup steps](https://www.surfsense.net/docs/) including:
- PGVector setup
- Google OAuth configuration
- Unstructured.io API key
- Other required API keys

## Screenshots

**Search Spaces** 

![search_spaces](https://github.com/user-attachments/assets/e254c38c-f937-44b6-9e9d-770db583d099)

**Manage Documents** 
![documents](https://github.com/user-attachments/assets/7001e306-eb06-4009-89c6-8fadfdc3fc4d)

**Research Agent** 

![researcher](https://github.com/user-attachments/assets/fda3e61f-f936-4b66-b565-d84edde44a67)

**Podcast Agent** 
![podcasts](https://github.com/user-attachments/assets/6cb82ffd-9e14-4172-bc79-67faf34c4c1c)


**Agent Chat** 

![chat](https://github.com/user-attachments/assets/bb352d52-1c6d-4020-926b-722d0b98b491)

**Browser Extension**

![ext1](https://github.com/user-attachments/assets/1f042b7a-6349-422b-94fb-d40d0df16c40)

![ext2](https://github.com/user-attachments/assets/a9b9f1aa-2677-404d-b0a0-c1b2dddf24a7)


## Tech Stack


 ### **BackEnd** 

-  **FastAPI**: Modern, fast web framework for building APIs with Python
  
-  **PostgreSQL with pgvector**: Database with vector search capabilities for similarity searches

-  **SQLAlchemy**: SQL toolkit and ORM (Object-Relational Mapping) for database interactions

-  **Alembic**: A database migrations tool for SQLAlchemy.

-  **FastAPI Users**: Authentication and user management with JWT and OAuth support

-  **LangGraph**: Framework for developing AI-agents.
  
-  **LangChain**: Framework for developing AI-powered applications.

-  **LLM Integration**: Integration with LLM models through LiteLLM

-  **Rerankers**: Advanced result ranking for improved search relevance

-  **Hybrid Search**: Combines vector similarity and full-text search for optimal results using Reciprocal Rank Fusion (RRF)

-  **Vector Embeddings**: Document and text embeddings for semantic search

-  **pgvector**: PostgreSQL extension for efficient vector similarity operations

-  **Chonkie**: Advanced document chunking and embedding library
 - Uses `AutoEmbeddings` for flexible embedding model selection
 -  `LateChunker` for optimized document chunking based on embedding model&#039;s max sequence length


  
---
 ### **FrontEnd**

-  **Next.js 15.2.3**: React framework featuring App Router, server components, automatic code-splitting, and optimized rendering.

-  **React 19.0.0**: JavaScript library for building user interfaces.

-  **TypeScript**: Static type-checking for JavaScript, enhancing code quality and developer experience.
- **Vercel AI SDK Kit UI Stream Protocol**: To create scalable chat UI.

-  **Tailwind CSS 4.x**: Utility-first CSS framework for building custom UI designs.

-  **Shadcn**: Headless components library.

-  **Lucide React**: Icon set implemented as React components.

-  **Framer Motion**: Animation library for React.

-  **Sonner**: Toast notification library.

-  **Geist**: Font family from Vercel.

-  **React Hook Form**: Form state management and validation.

-  **Zod**: TypeScript-first schema validation with static type inference.

-  **@hookform/resolvers**: Resolvers for using validation libraries with React Hook Form.

-  **@tanstack/react-table**: Headless UI for building powerful tables &amp; datagrids.



### **Extension** 
 Manifest v3 on Plasmo

## Future Work
- Add More Connectors.
- Patch minor bugs.
- Implement Canvas. 
- Complete Hybrid Search. **[Done]**
- Add support for file uploads QA. **[Done]**
- Shift to WebSockets for Streaming responses. **[Deprecated in favor of AI SDK Stream Protocol]**
- Based on feedback, I will work on making it compatible with local models. **[Done]**
- Cross Browser Extension **[Done]**
- Critical Notifications **[Done | PAUSED]**
- Saving Chats **[Done]**
- Basic keyword search page for saved sessions **[Done]**
- Multi &amp; Single Document Chat **[Done]**



## Contribute 

Contributions are very welcome! A contribution can be as small as a ‚≠ê or even finding and creating issues.
Fine-tuning the Backend is always desired.

## Star History

&lt;a href=&quot;https://www.star-history.com/#MODSetter/SurfSense&amp;Date&quot;&gt;
 &lt;picture&gt;
   &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://api.star-history.com/svg?repos=MODSetter/SurfSense&amp;type=Date&amp;theme=dark&quot; /&gt;
   &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://api.star-history.com/svg?repos=MODSetter/SurfSense&amp;type=Date&quot; /&gt;
   &lt;img alt=&quot;Star History Chart&quot; src=&quot;https://api.star-history.com/svg?repos=MODSetter/SurfSense&amp;type=Date&quot; /&gt;
 &lt;/picture&gt;
&lt;/a&gt;

</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[voideditor/void]]></title>
            <link>https://github.com/voideditor/void</link>
            <guid>https://github.com/voideditor/void</guid>
            <pubDate>Fri, 09 May 2025 00:05:03 GMT</pubDate>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/voideditor/void">voideditor/void</a></h1>
            <p></p>
            <p>Language: TypeScript</p>
            <p>Stars: 13,762</p>
            <p>Forks: 849</p>
            <p>Stars today: 434 stars today</p>
            <h2>README</h2><pre># Welcome to Void.

&lt;div align=&quot;center&quot;&gt;
	&lt;img
		src=&quot;./src/vs/workbench/browser/parts/editor/media/slice_of_void.png&quot;
	 	alt=&quot;Void Welcome&quot;
		width=&quot;300&quot;
	 	height=&quot;300&quot;
	/&gt;
&lt;/div&gt;

Void is the open-source Cursor alternative.

Use AI agents on your codebase, checkpoint and visualize changes, and bring any model or host locally. Void sends messages directly to providers without retaining your data.

This repo contains the full sourcecode for Void. If you&#039;re new, welcome!

- üëã [Discord](https://discord.gg/RSNjgaugJs)

- üî® [Contribute](https://github.com/voideditor/void/blob/main/HOW_TO_CONTRIBUTE.md)

- üöô [Roadmap](https://github.com/orgs/voideditor/projects/2)

- üìù [Changelog](https://voideditor.com/changelog)

- üß≠ [Codebase Guide](https://github.com/voideditor/void/blob/main/VOID_CODEBASE_GUIDE.md)

## Contributing

1. To get started working on Void, see [`HOW_TO_CONTRIBUTE`](https://github.com/voideditor/void/blob/main/HOW_TO_CONTRIBUTE.md).

2. Feel free to attend a weekly meeting in our Discord channel!

3. We&#039;re open to collaborations and suggestions of all types - just reach out.


## Reference

[Void](https://voideditor.com) is a fork of the [vscode](https://github.com/microsoft/vscode) repository. For a guide to the codebase, see [`VOID_CODEBASE_GUIDE`](https://github.com/voideditor/void/blob/main/VOID_CODEBASE_GUIDE.md).

## Support
You can always reach us in our Discord server or contact us via email: hello@voideditor.com.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[mantinedev/mantine]]></title>
            <link>https://github.com/mantinedev/mantine</link>
            <guid>https://github.com/mantinedev/mantine</guid>
            <pubDate>Fri, 09 May 2025 00:05:02 GMT</pubDate>
            <description><![CDATA[A fully featured React components library]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/mantinedev/mantine">mantinedev/mantine</a></h1>
            <p>A fully featured React components library</p>
            <p>Language: TypeScript</p>
            <p>Stars: 28,571</p>
            <p>Forks: 2,030</p>
            <p>Stars today: 39 stars today</p>
            <h2>README</h2><pre># Mantine

[![NPM](https://img.shields.io/npm/l/@mantine/core)](https://github.com/mantinedev/mantine/blob/master/LICENSE)
[![Backers](https://opencollective.com/mantinedev/backers/badge.svg)](https://opencollective.com/mantinedev)
[![GitHub contributors](https://img.shields.io/github/contributors/mantinedev/mantine)](https://github.com/mantinedev/mantine/graphs/contributors)
[![npm](https://img.shields.io/npm/v/@mantine/core)](https://www.npmjs.com/package/@mantine/core)
[![npm](https://img.shields.io/npm/dm/@mantine/hooks)](https://www.npmjs.com/package/@mantine/hooks)
[![Help wanted](https://img.shields.io/github/labels/mantinedev/mantine/help%20wanted?label=Contribute)](https://github.com/mantinedev/mantine/labels/help%20wanted)
[![Discord](https://img.shields.io/badge/Chat%20on-Discord-%235865f2)](https://discord.gg/wbH82zuWMN)
[![X Follow](https://img.shields.io/twitter/follow/mantinedev?style=social)](https://x.com/mantinedev)

## Links

- [Documentation](https://mantine.dev/)
- [Contribute](https://mantine.dev/contribute)
- [Ask question or give feedback](https://github.com/mantinedev/mantine/discussions)
- [Changelog](https://mantine.dev/changelog/all-releases)
- [Follow on X](https://x.com/mantinedev)
- [Join Discord community](https://discord.gg/wbH82zuWMN)

## Packages

- `@mantine/hooks` ‚Äì collection of 50+ hooks for state and UI management
- `@mantine/core` ‚Äì core components library ‚Äì 100+ components
- [`@mantine/form`](https://mantine.dev/form/use-form) ‚Äì forms management library
- [`@mantine/charts`](https://mantine.dev/charts/getting-started/) ‚Äì recharts based charts library
- [`@mantine/notifications`](https://mantine.dev/x/notifications) ‚Äì a fully featured notifications system
- [`@mantine/spotlight`](https://mantine.dev/x/spotlight) ‚Äì `Ctrl + K` command center for your application
- [`@mantine/code-highlight`](https://mantine.dev/x/code-highlight/) ‚Äì code highlight built with [highlight.js](https://highlightjs.org/)
- [`@mantine/tiptap`](https://mantine.dev/x/tiptap) ‚Äì a Tiptap based rich text editor
- [`@mantine/dropzone`](https://mantine.dev/x/dropzone) ‚Äì manages files drag &#039;n&#039; drop to an area or entire screen
- [`@mantine/carousel`](https://mantine.dev/x/carousel) ‚Äì Carousel component
- [`@mantine/nprogress`](https://mantine.dev/x/nprogress) ‚Äì navigation progress
- [`@mantine/modals`](https://mantine.dev/x/modals) ‚Äì centralized modals manager

## Getting help

Mantine has a very friendly community, we are always happy to help you get started:

- [Join Discord community](https://discord.gg/wbH82zuWMN) ‚Äì it is the easiest way to get help, all questions are usually answered in about 30 minutes
- [GitHub Discussions](https://github.com/mantinedev/mantine/discussions) ‚Äì ask anything about the project or give feedback

## Contributors

&lt;a href=&quot;https://github.com/mantinedev/mantine/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=mantinedev/mantine&quot; /&gt;
&lt;/a&gt;

[Become a contributor](https://mantine.dev/contribute)

## Support development

[![Backers](https://opencollective.com/mantinedev/backers/badge.svg)](https://opencollective.com/mantinedev)

Mantine is a MIT-licensed open source project with its ongoing development made possible entirely by the support of these awesome [backers](https://opencollective.com/mantinedev). If you&#039;d like to join them, please consider contributing financially on [OpenCollective](https://opencollective.com/mantinedev).

[![Backers](https://opencollective.com/mantinedev/individuals.svg?width=890)](https://opencollective.com/mantinedev)

## License

MIT
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[web-infra-dev/midscene]]></title>
            <link>https://github.com/web-infra-dev/midscene</link>
            <guid>https://github.com/web-infra-dev/midscene</guid>
            <pubDate>Fri, 09 May 2025 00:05:01 GMT</pubDate>
            <description><![CDATA[Your AI Operator for Web, Android, Automation & Testing.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/web-infra-dev/midscene">web-infra-dev/midscene</a></h1>
            <p>Your AI Operator for Web, Android, Automation & Testing.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 8,680</p>
            <p>Forks: 513</p>
            <p>Stars today: 27 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;img alt=&quot;Midscene.js&quot;  width=&quot;260&quot; src=&quot;https://github.com/user-attachments/assets/f60de3c1-dd6f-4213-97a1-85bf7c6e79e4&quot;&gt;
&lt;/p&gt;

&lt;h1 align=&quot;center&quot;&gt;Midscene.js&lt;/h1&gt;
&lt;div align=&quot;center&quot;&gt;

English | [ÁÆÄ‰Ωì‰∏≠Êñá](./README.zh.md)

&lt;/div&gt;

&lt;p align=&quot;center&quot;&gt;
  Your AI Operator for Web, Android, Automation &amp; Testing
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.npmjs.com/package/@midscene/web&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/@midscene/web?style=flat-square&amp;color=00a8f0&quot; alt=&quot;npm version&quot; /&gt;&lt;/a&gt;
  &lt;a href=&quot;https://huggingface.co/ByteDance-Seed/UI-TARS-1.5-7B&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%A4%97-UI%20TARS%20Models-yellow&quot; alt=&quot;huagging face model&quot; /&gt;&lt;/a&gt;
  &lt;a href=&quot;https://npm-compare.com/@midscene/web/#timeRange=THREE_YEARS&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/@midscene/web.svg?style=flat-square&amp;color=00a8f0&quot; alt=&quot;downloads&quot; /&gt;&lt;/a&gt;
  &lt;img src=&quot;https://img.shields.io/badge/License-MIT-blue.svg?style=flat-square&amp;color=00a8f0&quot; alt=&quot;License&quot; /&gt;
  &lt;a href=&quot;https://discord.gg/2JyBHxszE4&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/1328277792730779648?style=flat-square&amp;color=7289DA&amp;label=Discord&amp;logo=discord&amp;logoColor=white&quot; alt=&quot;discord&quot; /&gt;&lt;/a&gt;
  &lt;a href=&quot;https://x.com/midscene_ai&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/midscene_ai?style=flat-square&quot; alt=&quot;twitter&quot; /&gt;&lt;/a&gt;
&lt;/p&gt;

Midscene.js allows AI to serve as your web and Android operator ü§ñ. Simply describe what you want to achieve in natural language, and it will assist you in operating the interface, validating content, and extracting data. Whether you seek a quick experience or in-depth development, you&#039;ll find it easy to get started.

## Showcases

| Instruction  | Video |
| :---:  | :---: |
| Post a Tweet (By UI-TARS model)      |    &lt;video src=&quot;https://github.com/user-attachments/assets/bb3d695a-fbff-4af1-b6cc-5e967c07ccee&quot; height=&quot;300&quot; /&gt;    |
| Use JS code to drive task orchestration, collect information about Jay Chou&#039;s concert, and write it into Google Docs (By UI-TARS model)   | &lt;video src=&quot;https://github.com/user-attachments/assets/75474138-f51f-4c54-b3cf-46d61d059999&quot; height=&quot;300&quot; /&gt;        |
| Control Maps App on Android (By Qwen-2.5-VL model)   | &lt;video src=&quot;https://github.com/user-attachments/assets/1f5bab0e-4c28-44e1-b378-a38809b05a00&quot; height=&quot;300&quot; /&gt;        |
| Using midscene mcp to browse the page (https://www.saucedemo.com/), perform login, add products, place orders, and finally generate test cases based on mcp execution steps and playwright example | &lt;video src=&quot;https://github.com/user-attachments/assets/5cab578d-feb3-4250-8c7e-6793fe38a5be&quot; height=&quot;300&quot; /&gt;        |

## üì¢ 2025 Feb: New open-source model choice - UI-TARS and Qwen2.5-VL

Besides the default model *GPT-4o*, we have added two new recommended open-source models to Midscene.js: *UI-TARS* and *Qwen2.5-VL*. (Yes, Open Source models !) They are dedicated models for image recognition and UI automation, which are known for performing well in UI automation scenarios. Read more about it in [Choose a model](https://midscenejs.com/choose-a-model).

## üí° Features
- **Natural Language Interaction üëÜ**: Just describe your goals and steps, and Midscene will plan and operate the user interface for you.
- **UI Automation ü§ñ**
  - **Web Automation üñ•Ô∏è**: Start in-browser experience immediately through [the Chrome extension](https://midscenejs.com/quick-experience.html), or integrate with [Puppeteer](https://midscenejs.com/integrate-with-puppeteer.html) and [Playwright](https://midscenejs.com/integrate-with-playwright.html).
  - **Android Automation üì±**: Use [the Android playground](https://midscenejs.com/quick-experience-with-android.html) to start experience immediately, or integrate javascript SDK with [adb](https://midscenejs.com/integrate-with-android.html).
- **MCP Integration üîó**: Allows other MCP Clients to directly use Midscene&#039;s capabilities. For more details, please read [MCP Integration](https://midscenejs.com/zh/mcp.html).
- **Visual Reports for Debugging üéûÔ∏è**: Through our test reports and Playground, you can easily understand, replay and debug the entire process.
- **Support Caching üîÑ**: The first time you execute a task through AI, it will be cached, and subsequent executions of the same task will significantly improve execution efficiency.
- **Completely Open Source üî•**: Experience a whole new automation development experience, enjoy!
- **Understand UI, JSON Format Responses üîç**: You can specify data format requirements and receive responses in JSON format.
- **Intuitive Assertions ü§î**: Express your assertions in natural language, and AI will understand and process them.

## ‚ú® Model Choices

You can use multimodal LLMs like `gpt-4o`, or visual-language models like `Qwen2.5-VL`, `gemini-2.5-pro` and `UI-TARS`. In which `UI-TARS` is an open-source model dedicated for UI automation.

Read more about [Choose a model](https://midscenejs.com/choose-a-model)

## üëÄ Comparing to ...

There are so many UI automation tools out there, and each one seems to be all-powerful. What&#039;s special about Midscene.js?

* Debugging Experience: You will soon realize that debugging and maintaining automation scripts is the real challenge. No matter how magical the demo looks, ensuring stability over time requires careful debugging. Midscene.js offers a visualized report file, a built-in playground, and a Chrome Extension to simplify the debugging process. These are the tools most developers truly need, and we&#039;re continually working to improve the debugging experience.

* Open Source, Free, Deploy as you want: Midscene.js is an open-source project. It&#039;s decoupled from any cloud service and model provider, you can choose either public or private deployment. There is always a suitable plan for your business.

* Integrate with Javascript: You can always bet on Javascript üòé

## üìÑ Resources 

* [Home Page: https://midscenejs.com](https://midscenejs.com/)
* Web Browser Automation
  * [Quick Experience By Chrome Extension](https://midscenejs.com/quick-experience.html)
  * [Automate with Scripts in YAML](https://midscenejs.com/automate-with-scripts-in-yaml.html)
  * [Bridge Mode by Chrome Extension](https://midscenejs.com/bridge-mode-by-chrome-extension.html)
  * [Integrate with Puppeteer](https://midscenejs.com/integrate-with-puppeteer.html)
  * [Integrate with Playwright](https://midscenejs.com/integrate-with-playwright.html)
* Android Automation
  * [Quick Experience by Android Playground](https://midscenejs.com/quick-experience-with-android.html)
  * [Integrate with Android(adb)](https://midscenejs.com/integrate-with-android.html)
* [API Reference](https://midscenejs.com/api.html)
* [Choose a model](https://midscenejs.com/choose-a-model.html)
* [Config Model and Provider](https://midscenejs.com/model-provider.html)

## ü§ù Community

* [Discord](https://discord.gg/2JyBHxszE4)
* [Follow us on X](https://x.com/midscene_ai)
* [Lark Group](https://applink.larkoffice.com/client/chat/chatter/add_by_link?link_token=291q2b25-e913-411a-8c51-191e59aab14d)


## üìù Credits

We would like to thank the following projects:

- [Rsbuild](https://github.com/web-infra-dev/rsbuild) for the build tool.
- [UI-TARS](https://github.com/bytedance/ui-tars) for the open-source agent model UI-TARS.
- [Qwen2.5-VL](https://github.com/QwenLM/Qwen2.5-VL) for the open-source VL model Qwen2.5-VL.
- [scrcpy](https://github.com/Genymobile/scrcpy) and [yume-chan](https://github.com/yume-chan) allow us to control Android devices with browser.
- [appium-adb](https://github.com/appium/appium-adb) for the javascript bridge of adb.
- [YADB](https://github.com/ysbing/YADB) for the yadb tool which improves the performance of text input.
- [Puppeteer](https://github.com/puppeteer/puppeteer) for browser automation and control.
- [Playwright](https://github.com/microsoft/playwright) for browser automation and control and testing.

## Citation

If you use Midscene.js in your research or project, please cite:

```bibtex
@software{Midscene.js,
  author = {Xiao Zhou, Tao Yu, YiBing Lin},
  title = {Midscene.js: Your AI Operator for Web, Android, Automation &amp; Testing.},
  year = {2025},
  publisher = {GitHub},
  url = {https://github.com/web-infra-dev/midscene}
}
```


## üìù License

Midscene.js is [MIT licensed](https://github.com/web-infra-dev/midscene/blob/main/LICENSE).

---

&lt;div align=&quot;center&quot;&gt;
  If this project helps you or inspires you, please give us a ‚≠êÔ∏è
&lt;/div&gt;
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[beekeeper-studio/beekeeper-studio]]></title>
            <link>https://github.com/beekeeper-studio/beekeeper-studio</link>
            <guid>https://github.com/beekeeper-studio/beekeeper-studio</guid>
            <pubDate>Fri, 09 May 2025 00:05:00 GMT</pubDate>
            <description><![CDATA[Modern and easy to use SQL client for MySQL, Postgres, SQLite, SQL Server, and more. Linux, MacOS, and Windows.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/beekeeper-studio/beekeeper-studio">beekeeper-studio/beekeeper-studio</a></h1>
            <p>Modern and easy to use SQL client for MySQL, Postgres, SQLite, SQL Server, and more. Linux, MacOS, and Windows.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 19,046</p>
            <p>Forks: 1,215</p>
            <p>Stars today: 277 stars today</p>
            <h2>README</h2><pre># Beekeeper Studio

Beekeeper Studio is a cross-platform SQL editor and database manager available for Linux, Mac, and Windows.

[Download Beekeeper Studio](https://beekeeperstudio.io/get-community)

We publish binaries for MacOS, Windows, and Linux.

[![image](https://user-images.githubusercontent.com/279769/203650152-4a34af1f-8a38-47cf-a273-d34d1c84feeb.png)](https://beekeeperstudio.io/get)


Beekeeper Studio is free to download and provides a lot of features for free, no sign-up, registration, or credit card required. The app provides some premium features for a reasonable cost license fee. [Learn more here](https://beekeeperstudio.io/pricing)


Most of the code in this repo is open source under the GPLv3 license. Paid features are also in this repository under a commercial source-available license.

We welcome community contributions!


## Supported Databases

&lt;!-- Don&#039;t edit this, it gets built automatically from docs/includes/supported_databases.md --&gt;
&lt;!-- SUPPORT_BEGIN --&gt;

| Database                                                 | Support                      | Community | Ultimate |                             Beekeeper Links |
| :------------------------------------------------------- | :--------------------------- | :-------: | :------: | -----------------------------------------: |
| [PostgreSQL](https://postgresql.org)                     | ‚≠ê Full Support              |    ‚úÖ     |    ‚úÖ    |  [Features](https://beekeeperstudio.io/db/postgres-client) |
| [MySQL](https://www.mysql.com/)                          | ‚≠ê Full Support              |    ‚úÖ     |    ‚úÖ    |  [Features](https://beekeeperstudio.io/db/mysql-client)|
| [SQLite](https://sqlite.org)                             | ‚≠ê Full Support              |    ‚úÖ     |    ‚úÖ    |   [Features](https://beekeeperstudio.io/db/sqlite-client), [Docs](https://docs.beekeeperstudio.io/user_guide/connecting/sqlite) |
| [SQL Server](https://www.microsoft.com/en-us/sql-server) | ‚≠ê Full Support              |    ‚úÖ     |    ‚úÖ    |   [Features](https://beekeeperstudio.io/db/sql-server-client)  |
| [Amazon Redshift](https://aws.amazon.com/redshift/)      | ‚≠ê Full Support              |    ‚úÖ     |    ‚úÖ    |    [Features](https://beekeeperstudio.io/db/redshift-client) |
| [CockroachDB](https://www.cockroachlabs.com/)            | ‚≠ê Full Support              |    ‚úÖ     |    ‚úÖ    | [Features](https://beekeeperstudio.io/db/cockroachdb-client)|
| [MariaDB](https://mariadb.org/)                          | ‚≠ê Full Support              |    ‚úÖ     |    ‚úÖ    |     [Features](https://beekeeperstudio.io/db/mariadb-client) |
| [TiDB](https://pingcap.com/products/tidb/)               | ‚≠ê Full Support              |    ‚úÖ     |    ‚úÖ    |        [Features](https://beekeeperstudio.io/db/tidb-client) |
| [Google BigQuery](https://cloud.google.com/bigquery)     | ‚≠ê Full Support             |    ‚úÖ     |    ‚úÖ    |    [Features](https://beekeeperstudio.io/db/google-big-query-client), [Docs](https://docs.beekeeperstudio.io/user_guide/connecting/bigquery) |
| [Oracle Database](https://www.oracle.com/database/)      | ‚≠ê Full Support              |           |    ‚úÖ    |      [Features](https://beekeeperstudio.io/db/oracle-client), [Docs](https://docs.beekeeperstudio.io/user_guide/connecting/oracle) |
| [Cassandra](http://cassandra.apache.org/)                | ‚≠ê Full Support              |           |    ‚úÖ    |   [Features](https://beekeeperstudio.io/db/cassandra-client) |
| [Firebird](https://firebirdsql.org/)                     | ‚≠ê Full Support              |           |    ‚úÖ    |    [Features](https://beekeeperstudio.io/db/firebird-client), [Docs](https://docs.beekeeperstudio.io/user_guide/connecting/firebird) |
| [LibSQL](https://libsql.org/)                            | ‚≠ê Full Support               |           |    ‚úÖ    |      [Features](https://beekeeperstudio.io/db/libsql-client) |
| [ClickHouse](https://clickhouse.tech/)                   | ‚≠ê Full Support                |           |    ‚úÖ    |  -- |
| [DuckDB](https://duckdb.org/)                            | ‚≠ê Full Support                |           |    ‚úÖ    |      -- |
| [MongoDB](https://www.mongodb.com/)                      | üß™ Alpha Support (5.1+)               |           |    ‚úÖ    |     -- |
| [Snowflake](https://www.snowflake.com/)                  | ‚è≥ Coming Soon                |           |    ‚úÖ    |   -- |
| [Trino](https://trino.io/) / [Presto](https://prestodb.io/) | ‚è≥ Coming Soon                |           |    ‚úÖ    |      -- |
| [Redis](https://redis.io/)                               | üóìÔ∏è Planned               |           |    ‚úÖ    |       -- |
| [DynamoDB](https://aws.amazon.com/dynamodb/)             | üóìÔ∏è Planned               |           |    ‚úÖ    |       -- |




&lt;!-- SUPPORT_END --&gt;

## Editions of Beekeeper Studio

Beekeeper Studio is a single download with in-app upgrades for premium features.

We&#039;d love to make Beekeeper Studio totally free for everyone, but building good software is hard work and expensive. We think our paid editions are fairly priced, I hope you do too.

üëâ [Compare Beekeeper Studio Editions](https://beekeeperstudio.io/pricing)

## Beekeeper Studio Features

Top feature: It&#039;s smooth üç´, fast üèé, and you&#039;ll actually enjoy using it ü•∞

- Truly cross-platform: Windows, MacOS, and Linux
- Autocomplete SQL query editor with syntax highlighting
- Tabbed interface, so you can multitask
- Sort and filter table data to find just what you need
- Sensible keyboard-shortcuts
- Save queries for later
- Query run-history, so you can find that one query you got working 3 days ago
- Great dark theme
- Import/export
- Backup/restore
- View data as JSON
- Loads more

## Our approach to UX

One of our frustrations with other open-source SQL editors and database managers is that they take a &#039;kitchen sink&#039; approach to features, adding so many features that the UI becomes cluttered and hard to navigate. We wanted a good looking, open source SQL workbench that&#039;s powerful, but also easy to use. We couldn&#039;t find one, so we created Beekeeper Studio!

Generally our guiding star is to only build software that &#039;feels good&#039; to use. That means at the very least we value Beekeeper being fast, straightforward to use, and modern. If a new feature compromises this vision, we kill it.


## Supporting Beekeeper Studio

We love working on Beekeeper Studio, and we&#039;d love to keep growing and improving it forever. To do that I need your help.

The best way to support Beekeeper Studio is to purchase a paid [license](https://beekeeperstudio.io/pricing). Every purchase directly supports our work on Beekeeper Studio.

If you&#039;re at a business and using Beekeeper Studio for your job, you should probably get your boss to [buy you a license](https://beekeeperstudio.io/pricing).

If you can&#039;t afford a license, please use the free version, that&#039;s why we make a free version!

Thank you for your continued support!


## Documentation

Check out [docs.beekeeperstudio.io](https://docs.beekeeperstudio.io) for user guides, FAQs, troubleshooting tips, and more.

## License

Beekeeper Studio Community Edition (the code in this repository) is licensed under the GPLv3 license.

Beekeeper Studio Ultimate Edition contains extra features and is licensed under a [commercial end user agreement (EULA)](https://beekeeperstudio.io/legal/commercial-eula/).

Beekeeper Studio&#039;s trademarks (words marks and logos) are not open source. See our [trademark guidelines](https://beekeeperstudio.io/legal/trademark/) for more information.

## Trademark Guidelines

Trademarks can be complicated with open source projects, so we have adapted a set of standard guidelines for using our trademarks that are common to many open source projects.

If you are just using the Beekeeper Studio app, and you are not forking or distributing Beekeeper Studio code in any way, these probably don&#039;t apply to you.

üëâ [Beekeeper Studio Trademark Guidelines](https://beekeeperstudio.io/legal/trademark/)

## Contributing to Beekeeper Studio

We love *any* community engagement. Even if you&#039;re complaining because you don&#039;t like something about the app!


### Contributor Agreements

- Building an inclusive and welcoming community is important to us, so please follow our [code of conduct](code_of_conduct.md) as you engage with the project.

- By contributing to the project you agree to the terms of our [contributor guidelines](CONTRIBUTING.md).

### Contribute without coding

We have you covered, read our [guide to contributing in 10 minutes without coding](https://github.com/beekeeper-studio/beekeeper-studio/issues/287).

### Compiling and Running Beekeeper Studio Locally

Want to write some code and improve Beekeeper Studio? Getting set-up is easy on Mac, Linux, or Windows.

```bash
# First: Install NodeJS 20, NPM, and Yarn
# ...

# 1. Fork the Beekeeper Studio Repo (click fork button at top right of this screen)
# 2. Check out your fork:
git clone git@github.com:&lt;your-username&gt;/beekeeper-studio.git beekeeper-studio
cd beekeeper-studio/
yarn install # installs dependencies


# Now you can start the app:
yarn run electron:serve ## the app will now start
```

**If you get `error:03000086:digital envelope routines::initialization error`, you&#039;ll have to update openssl.**

- On Ubuntu/Debian:
```
sudo apt-get update
sudo apt-get upgrade openssl
```

- On CentOS/RHEL:
```
sudo yum update openssl
```

- On macOS (using Homebrew):
```
brew update
brew upgrade openssl
```

### Where to make changes?

This repo is now a monorepo, we have several places with code, but only really a couple of important entry points.

All app code lives in `apps/studio`, some shared code lives in `shared/src`. This is shared with other apps.

Beekeeper Studio has two entry points:
- `background.js` - this is the electron-side code that controls native things like showing windows.
- `main.js` - this is the entry point for the Vue.js app. You can follow the Vue component breadcrumbs from `App.vue` to find the screen you need.

**Generally we have two &#039;screens&#039;:**
- ConnectionInterface - connecting to a DB
- CoreInterface - interacting with a database

### How to submit a change?


- Push your changes to your repository and open a Pull Request from our github page (this page)
- Make sure to write some notes about what your change does! A gif is always welcome for visual changes.

## Maintainer notes (casual readers can ignore this stuff)

### Upgrading Electron Gotchas

This is always a total pain and will break the build 9/10.

Some things you need to consider when upgrading Electron:

1. Does it use a different node version. Eg Electron-18 uses node 14, 22 uses node 16. So everyone needs to upgrade
2. Does node-abi need to be upgraded to be able to understand the electron version? This is used in the build to fetch prebuilt packages. You need to upgrade this in root/package.json#resolutions
3. Were any APIs deprecated or removed? Make sure all features that interact with the Electron APIs still work, stuff like - selecting a file, maximizing a window, running a query, etc.


### Release Process

1. Up the version number in package.json
2. Replace `build/release-notes.md` with the latest release notes. Follow the format that is there.
  - run `git log &lt;last-tag&gt;..HEAD --oneline | grep &#039;Merge pull&#039;` to find PRs merged
2. Commit
3. Push to master
4. Create a tag `git tag v&lt;version&gt;`. It must start with a &#039;v&#039;
5. `git push origin &lt;tagname&gt;`
  - Now wait for the build/publish action to complete on Github
6. Push the new release live
  - Go to the new &#039;draft&#039; release on the releases tab of github, edit the notes, publish
  - Log into snapcraft.io, drag the uploaded release into the &#039;stable&#039; channel for each architecture.

This should also publish the latest docs

Post Release:
1. Copy release notes to a blog post, post on website
2. Tweet link
3. Share on LinkedIn
4. Send to mailing list on SendInBlue


## Big Thanks

Beekeeper Studio wouldn&#039;t exist without [Sqlectron-core](https://github.com/sqlectron/sqlectron-core), the core database libraries from the [Sqlectron project](https://github.com/sqlectron/sqlectron-gui). Beekeeper Studio started as an experimental fork of that repository. A big thanks to @maxcnunes and the rest of the Sqlectron community.

The original license from sqlectron-core is included here:

```
Copyright (c) 2015 The SQLECTRON Team

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
&#039;Software&#039;), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED &#039;AS IS&#039;, WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
```
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[slidevjs/slidev]]></title>
            <link>https://github.com/slidevjs/slidev</link>
            <guid>https://github.com/slidevjs/slidev</guid>
            <pubDate>Fri, 09 May 2025 00:04:59 GMT</pubDate>
            <description><![CDATA[Presentation Slides for Developers]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/slidevjs/slidev">slidevjs/slidev</a></h1>
            <p>Presentation Slides for Developers</p>
            <p>Language: TypeScript</p>
            <p>Stars: 37,636</p>
            <p>Forks: 1,544</p>
            <p>Stars today: 328 stars today</p>
            <h2>README</h2><pre>&lt;br&gt;
&lt;p align=&quot;center&quot;&gt;
&lt;a href=&quot;https://sli.dev&quot; target=&quot;_blank&quot;&gt;
&lt;img src=&quot;https://sli.dev/logo-title.png&quot; alt=&quot;Slidev&quot; height=&quot;250&quot; width=&quot;250&quot;/&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
Presentation &lt;b&gt;slide&lt;/b&gt;s for &lt;b&gt;dev&lt;/b&gt;elopers üßë‚Äçüíªüë©‚Äçüíªüë®‚Äçüíª
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;a href=&quot;https://www.npmjs.com/package/@slidev/cli&quot; target=&quot;__blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/@slidev/cli?color=2B90B6&amp;label=&quot; alt=&quot;NPM version&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://www.npmjs.com/package/@slidev/cli&quot; target=&quot;__blank&quot;&gt;&lt;img alt=&quot;NPM Downloads&quot; src=&quot;https://img.shields.io/npm/dm/@slidev/cli?color=349dbe&amp;label=&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://sli.dev/&quot; target=&quot;__blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/static/v1?label=&amp;message=docs%20%26%20demos&amp;color=45b8cd&quot; alt=&quot;Docs &amp; Demos&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://sli.dev/resources/theme-gallery&quot; target=&quot;__blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/static/v1?label=&amp;message=themes&amp;color=4ec5d4&quot; alt=&quot;Themes&quot;&gt;&lt;/a&gt;
&lt;br&gt;
&lt;a href=&quot;https://github.com/slidevjs/slidev&quot; target=&quot;__blank&quot;&gt;&lt;img alt=&quot;GitHub stars&quot; src=&quot;https://img.shields.io/github/stars/slidevjs/slidev?style=social&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://twitter.com/antfu7/status/1389604687502995457&quot;&gt;Video Preview&lt;/a&gt; | &lt;a href=&quot;https://sli.dev&quot;&gt;Documentation&lt;/a&gt;
&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
&lt;table&gt;
&lt;tbody&gt;
&lt;td align=&quot;center&quot;&gt;
&lt;img width=&quot;2000&quot; height=&quot;0&quot; alt=&quot;&quot; aria-hiden&gt;&lt;br&gt;
&lt;sub&gt;Made possible by my &lt;a href=&quot;https://github.com/sponsors/antfu&quot;&gt;Sponsor Program üíñ&lt;/a&gt;&lt;/sub&gt;&lt;br&gt;
&lt;img width=&quot;2000&quot; height=&quot;0&quot; alt=&quot;&quot; aria-hiden&gt;
&lt;/td&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

## Features

- üìù [**Markdown-based**](https://sli.dev/guide/syntax) - focus on content and use your favorite editor
- üßë‚Äçüíª [**Developer Friendly**](https://sli.dev/guide/syntax#code-blocks) - built-in code highlighting, live coding, etc.
- üé® [**Themable**](https://sli.dev/resources/theme-gallery) - theme can be shared and used with npm packages
- üåà [**Stylish**](https://sli.dev/guide/syntax#embedded-styles) - on-demand utilities via [UnoCSS](https://github.com/unocss/unocss).
- ü§π [**Interactive**](https://sli.dev/custom/directory-structure#components) - embedding Vue components seamlessly
- üéô [**Presenter Mode**](https://sli.dev/guide/ui#presenter-mode) - use another window, or even your phone to control your slides
- üé® [**Drawing**](https://sli.dev/features/drawing) - draw and annotate on your slides
- üßÆ [**LaTeX**](https://sli.dev/features/latex) - built-in LaTeX math equations support
- üì∞ [**Diagrams**](https://sli.dev/guide/syntax#diagrams) - creates diagrams using textual descriptions with [Mermaid](https://mermaid.js.org/)
- üåü [**Icons**](https://sli.dev/features/icons) - access to icons from any icon set directly
- üíª [**Editor**](https://sli.dev/guide/index#editor) - integrated editor, or the [VSCode extension](https://sli.dev/features/vscode-extension)
- üé• [**Recording**](https://sli.dev/features/recording) - built-in recording and camera view
- üì§ [**Portable**](https://sli.dev/guide/exporting) - export into PDF, PNGs, or PPTX
- ‚ö°Ô∏è [**Fast**](https://vitejs.dev) - instant reloading powered by [Vite](https://vitejs.dev)
- üõ† [**Hackable**](https://sli.dev/custom/) - using Vite plugins, Vue components, or any npm packages

## Getting Started

### Try it Online ‚ö°Ô∏è

[sli.dev/new](https://sli.dev/new)

[![](https://developer.stackblitz.com/img/open_in_stackblitz.svg)](https://sli.dev/new)

### Init Project Locally

Install [Node.js &gt;=18](https://nodejs.org/) and run the following command:

```bash
npm init slidev
```

Documentation:
**[English](https://sli.dev)** | [‰∏≠ÊñáÊñáÊ°£](https://cn.sli.dev) | [Fran√ßais](https://fr.sli.dev) | [Espa√±ol](https://es.sli.dev) | [–†—É—Å—Å–∫–∏–π](https://ru.sli.dev) | [Portugu√™s-BR](https://br.sli.dev)

Discord: [chat.sli.dev](https://chat.sli.dev)

For a full example, you can check the [demo](https://github.com/slidevjs/slidev/blob/main/demo) folder, which is also the source file for [my previous talk](https://antfu.me/posts/composable-vue-vueday-2021).

## Tech Stack

- [Vite](https://vitejs.dev) - An extremely fast frontend tooling
- [Vue 3](https://v3.vuejs.org/) powered [Markdown](https://daringfireball.net/projects/markdown/syntax) - Focus on the content while having the power of HTML and Vue components whenever needed
- [UnoCSS](https://github.com/unocss/unocss) - On-demand utility-first CSS engine, style your slides at ease
- [Shiki](https://github.com/shikijs/shiki), [Monaco Editor](https://github.com/Microsoft/monaco-editor) - First-class code snippets support with live coding capability
- [RecordRTC](https://recordrtc.org) - Built-in recording and camera view
- [VueUse](https://vueuse.org) family - [`@vueuse/core`](https://github.com/vueuse/vueuse), [`@vueuse/motion`](https://github.com/vueuse/motion), etc.
- [Iconify](https://iconify.design/) - Icon sets collection.
- [Drauu](https://github.com/antfu/drauu) - Drawing and annotations support
- [KaTeX](https://katex.org/) - LaTeX math rendering.
- [Mermaid](https://mermaid-js.github.io/mermaid) - Textual Diagrams.

## Sponsors

This project is made possible by all the sponsors supporting my work:

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/sponsors/antfu&quot;&gt;
    &lt;img src=&#039;https://cdn.jsdelivr.net/gh/antfu/static/sponsors.svg&#039; alt=&quot;Logos from Sponsors&quot; /&gt;
  &lt;/a&gt;
&lt;/p&gt;

## License

MIT License ¬© 2021 [Anthony Fu](https://github.com/antfu)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[cline/cline]]></title>
            <link>https://github.com/cline/cline</link>
            <guid>https://github.com/cline/cline</guid>
            <pubDate>Fri, 09 May 2025 00:04:58 GMT</pubDate>
            <description><![CDATA[Autonomous coding agent right in your IDE, capable of creating/editing files, executing commands, using the browser, and more with your permission every step of the way.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/cline/cline">cline/cline</a></h1>
            <p>Autonomous coding agent right in your IDE, capable of creating/editing files, executing commands, using the browser, and more with your permission every step of the way.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 43,106</p>
            <p>Forks: 4,959</p>
            <p>Stars today: 253 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;&lt;sub&gt;
English | &lt;a href=&quot;https://github.com/cline/cline/blob/main/locales/es/README.md&quot; target=&quot;_blank&quot;&gt;Espa√±ol&lt;/a&gt; | &lt;a href=&quot;https://github.com/cline/cline/blob/main/locales/de/README.md&quot; target=&quot;_blank&quot;&gt;Deutsch&lt;/a&gt; | &lt;a href=&quot;https://github.com/cline/cline/blob/main/locales/ja/README.md&quot; target=&quot;_blank&quot;&gt;Êó•Êú¨Ë™û&lt;/a&gt; | &lt;a href=&quot;https://github.com/cline/cline/blob/main/locales/zh-cn/README.md&quot; target=&quot;_blank&quot;&gt;ÁÆÄ‰Ωì‰∏≠Êñá&lt;/a&gt; | &lt;a href=&quot;https://github.com/cline/cline/blob/main/locales/zh-tw/README.md&quot; target=&quot;_blank&quot;&gt;ÁπÅÈ´î‰∏≠Êñá&lt;/a&gt; | &lt;a href=&quot;https://github.com/cline/cline/blob/main/locales/ko/README.md&quot; target=&quot;_blank&quot;&gt;ÌïúÍµ≠Ïñ¥&lt;/a&gt;
&lt;/sub&gt;&lt;/div&gt;

# Cline ‚Äì \#1 on OpenRouter

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;https://media.githubusercontent.com/media/cline/cline/main/assets/docs/demo.gif&quot; width=&quot;100%&quot; /&gt;
&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
&lt;table&gt;
&lt;tbody&gt;
&lt;td align=&quot;center&quot;&gt;
&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=saoudrizwan.claude-dev&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Download on VS Marketplace&lt;/strong&gt;&lt;/a&gt;
&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;
&lt;a href=&quot;https://discord.gg/cline&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Discord&lt;/strong&gt;&lt;/a&gt;
&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;
&lt;a href=&quot;https://www.reddit.com/r/cline/&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;r/cline&lt;/strong&gt;&lt;/a&gt;
&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;
&lt;a href=&quot;https://github.com/cline/cline/discussions/categories/feature-requests?discussions_q=is%3Aopen+category%3A%22Feature+Requests%22+sort%3Atop&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Feature Requests&lt;/strong&gt;&lt;/a&gt;
&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;
&lt;a href=&quot;https://docs.cline.bot/getting-started/for-new-coders&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Getting Started&lt;/strong&gt;&lt;/a&gt;
&lt;/td&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

Meet Cline, an AI assistant that can use your **CLI** a**N**d **E**ditor.

Thanks to¬†[Claude 3.7 Sonnet&#039;s agentic coding capabilities](https://www.anthropic.com/claude/sonnet),¬†Cline can handle complex software development tasks step-by-step. With tools that let him create &amp; edit files, explore large projects, use the browser, and execute terminal commands (after you grant permission), he can assist you in ways that go beyond code completion or tech support. Cline can even use the Model Context Protocol (MCP) to create new tools and extend his own capabilities. While autonomous AI scripts traditionally run in sandboxed environments, this extension provides a human-in-the-loop GUI to approve every file change and terminal command, providing a safe and accessible way to explore the potential of agentic AI.

1. Enter your task and add images to convert mockups into functional apps or fix bugs with screenshots.
2. Cline starts by analyzing your file structure &amp; source code ASTs, running regex searches, and reading relevant files to get up to speed in existing projects. By carefully managing what information is added to context, Cline can provide valuable assistance even for large, complex projects without overwhelming the context window.
3. Once Cline has the information he needs, he can:
    - Create and edit files + monitor linter/compiler errors along the way, letting him proactively fix issues like missing imports and syntax errors on his own.
    - Execute commands directly in your terminal and monitor their output as he works, letting him e.g., react to dev server issues after editing a file.
    - For web development tasks, Cline can launch the site in a headless browser, click, type, scroll, and capture screenshots + console logs, allowing him to fix runtime errors and visual bugs.
4. When a task is completed, Cline will present the result to you with a terminal command like¬†`open -a &quot;Google Chrome&quot; index.html`, which you run with a click of a button.

&gt; [!TIP]
&gt; Use the¬†`CMD/CTRL + Shift + P`¬†shortcut to open the command palette and type¬†&quot;Cline: Open In New Tab&quot;¬†to open the extension as a tab in your editor. This lets you use Cline side-by-side with your file explorer, and see how he changes your workspace more clearly.

---

&lt;img align=&quot;right&quot; width=&quot;340&quot; src=&quot;https://github.com/user-attachments/assets/3cf21e04-7ce9-4d22-a7b9-ba2c595e88a4&quot;&gt;

### Use any API and Model

Cline supports API providers like OpenRouter, Anthropic, OpenAI, Google Gemini, AWS Bedrock, Azure, and GCP Vertex. You can also configure any OpenAI compatible API, or use a local model through LM Studio/Ollama. If you&#039;re using OpenRouter, the extension fetches their latest model list, allowing you to use the newest models as soon as they&#039;re available.

The extension also keeps track of total tokens and API usage cost for the entire task loop and individual requests, keeping you informed of spend every step of the way.

&lt;!-- Transparent pixel to create line break after floating image --&gt;

&lt;img width=&quot;2000&quot; height=&quot;0&quot; src=&quot;https://github.com/user-attachments/assets/ee14e6f7-20b8-4391-9091-8e8e25561929&quot;&gt;&lt;br&gt;

&lt;img align=&quot;left&quot; width=&quot;370&quot; src=&quot;https://github.com/user-attachments/assets/81be79a8-1fdb-4028-9129-5fe055e01e76&quot;&gt;

### Run Commands in Terminal

Thanks to the new [shell integration updates in VSCode v1.93](https://code.visualstudio.com/updates/v1_93#_terminal-shell-integration-api), Cline can execute commands directly in your terminal and receive the output. This allows him to perform a wide range of tasks, from installing packages and running build scripts to deploying applications, managing databases, and executing tests, all while adapting to your dev environment &amp; toolchain to get the job done right.

For long running processes like dev servers, use the &quot;Proceed While Running&quot; button to let Cline continue in the task while the command runs in the background. As Cline works he‚Äôll be notified of any new terminal output along the way, letting him react to issues that may come up, such as compile-time errors when editing files.

&lt;!-- Transparent pixel to create line break after floating image --&gt;

&lt;img width=&quot;2000&quot; height=&quot;0&quot; src=&quot;https://github.com/user-attachments/assets/ee14e6f7-20b8-4391-9091-8e8e25561929&quot;&gt;&lt;br&gt;

&lt;img align=&quot;right&quot; width=&quot;400&quot; src=&quot;https://github.com/user-attachments/assets/c5977833-d9b8-491e-90f9-05f9cd38c588&quot;&gt;

### Create and Edit Files

Cline can create and edit files directly in your editor, presenting you a diff view of the changes. You can edit or revert Cline&#039;s changes directly in the diff view editor, or provide feedback in chat until you&#039;re satisfied with the result. Cline also monitors linter/compiler errors (missing imports, syntax errors, etc.) so he can fix issues that come up along the way on his own.

All changes made by Cline are recorded in your file&#039;s Timeline, providing an easy way to track and revert modifications if needed.

&lt;!-- Transparent pixel to create line break after floating image --&gt;

&lt;img width=&quot;2000&quot; height=&quot;0&quot; src=&quot;https://github.com/user-attachments/assets/ee14e6f7-20b8-4391-9091-8e8e25561929&quot;&gt;&lt;br&gt;

&lt;img align=&quot;left&quot; width=&quot;370&quot; src=&quot;https://github.com/user-attachments/assets/bc2e85ba-dfeb-4fe6-9942-7cfc4703cbe5&quot;&gt;

### Use the Browser

With Claude 3.5 Sonnet&#039;s new [Computer Use](https://www.anthropic.com/news/3-5-models-and-computer-use) capability, Cline can launch a browser, click elements, type text, and scroll, capturing screenshots and console logs at each step. This allows for interactive debugging, end-to-end testing, and even general web use! This gives him autonomy to fixing visual bugs and runtime issues without you needing to handhold and copy-pasting error logs yourself.

Try asking Cline to &quot;test the app&quot;, and watch as he runs a command like `npm run dev`, launches your locally running dev server in a browser, and performs a series of tests to confirm that everything works. [See a demo here.](https://x.com/sdrzn/status/1850880547825823989)

&lt;!-- Transparent pixel to create line break after floating image --&gt;

&lt;img width=&quot;2000&quot; height=&quot;0&quot; src=&quot;https://github.com/user-attachments/assets/ee14e6f7-20b8-4391-9091-8e8e25561929&quot;&gt;&lt;br&gt;

&lt;img align=&quot;right&quot; width=&quot;350&quot; src=&quot;https://github.com/user-attachments/assets/ac0efa14-5c1f-4c26-a42d-9d7c56f5fadd&quot;&gt;

### &quot;add a tool that...&quot;

Thanks to the [Model Context Protocol](https://github.com/modelcontextprotocol), Cline can extend his capabilities through custom tools. While you can use [community-made servers](https://github.com/modelcontextprotocol/servers), Cline can instead create and install tools tailored to your specific workflow. Just ask Cline to &quot;add a tool&quot; and he will handle everything, from creating a new MCP server to installing it into the extension. These custom tools then become part of Cline&#039;s toolkit, ready to use in future tasks.

-   &quot;add a tool that fetches Jira tickets&quot;: Retrieve ticket ACs and put Cline to work
-   &quot;add a tool that manages AWS EC2s&quot;: Check server metrics and scale instances up or down
-   &quot;add a tool that pulls the latest PagerDuty incidents&quot;: Fetch details and ask Cline to fix bugs

&lt;!-- Transparent pixel to create line break after floating image --&gt;

&lt;img width=&quot;2000&quot; height=&quot;0&quot; src=&quot;https://github.com/user-attachments/assets/ee14e6f7-20b8-4391-9091-8e8e25561929&quot;&gt;&lt;br&gt;

&lt;img align=&quot;left&quot; width=&quot;360&quot; src=&quot;https://github.com/user-attachments/assets/7fdf41e6-281a-4b4b-ac19-020b838b6970&quot;&gt;

### Add Context

**`@url`:**¬†Paste in a URL for the extension to fetch and convert to markdown, useful when you want to give Cline the latest docs

**`@problems`:**¬†Add workspace errors and warnings (&#039;Problems&#039; panel) for Cline to fix

**`@file`:**¬†Adds a file&#039;s contents so you don&#039;t have to waste API requests approving read file (+ type to search files)

**`@folder`:**¬†Adds folder&#039;s files all at once to speed up your workflow even more

&lt;!-- Transparent pixel to create line break after floating image --&gt;

&lt;img width=&quot;2000&quot; height=&quot;0&quot; src=&quot;https://github.com/user-attachments/assets/ee14e6f7-20b8-4391-9091-8e8e25561929&quot;&gt;&lt;br&gt;

&lt;img align=&quot;right&quot; width=&quot;350&quot; src=&quot;https://github.com/user-attachments/assets/140c8606-d3bf-41b9-9a1f-4dbf0d4c90cb&quot;&gt;

### Checkpoints: Compare and Restore

As Cline works through a task, the extension takes a snapshot of your workspace at each step. You can use the &#039;Compare&#039; button to see a diff between the snapshot and your current workspace, and the &#039;Restore&#039; button to roll back to that point.

For example, when working with a local web server, you can use &#039;Restore Workspace Only&#039; to quickly test different versions of your app, then use &#039;Restore Task and Workspace&#039; when you find the version you want to continue building from. This lets you safely explore different approaches without losing progress.

&lt;!-- Transparent pixel to create line break after floating image --&gt;

&lt;img width=&quot;2000&quot; height=&quot;0&quot; src=&quot;https://github.com/user-attachments/assets/ee14e6f7-20b8-4391-9091-8e8e25561929&quot;&gt;&lt;br&gt;

## Contributing

To contribute to the project, start with our [Contributing Guide](CONTRIBUTING.md) to learn the basics. You can also join our [Discord](https://discord.gg/cline) to chat with other contributors in the `#contributors` channel. If you&#039;re looking for full-time work, check out our open positions on our [careers page](https://cline.bot/join-us)!

&lt;details&gt;
&lt;summary&gt;Local Development Instructions&lt;/summary&gt;

1. Clone the repository _(Requires [git-lfs](https://git-lfs.com/))_:
    ```bash
    git clone https://github.com/cline/cline.git
    ```
2. Open the project in VSCode:
    ```bash
    code cline
    ```
3. Install the necessary dependencies for the extension and webview-gui:
    ```bash
    npm run install:all
    ```
4. Launch by pressing `F5` (or `Run`-&gt;`Start Debugging`) to open a new VSCode window with the extension loaded. (You may need to install the [esbuild problem matchers extension](https://marketplace.visualstudio.com/items?itemName=connor4312.esbuild-problem-matchers) if you run into issues building the project.)

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;Creating a Pull Request&lt;/summary&gt;

1. Before creating a PR, generate a changeset entry:
    ```bash
    npm run changeset
    ```
   This will prompt you for:
   - Type of change (major, minor, patch)
     - `major` ‚Üí breaking changes (1.0.0 ‚Üí 2.0.0)
     - `minor` ‚Üí new features (1.0.0 ‚Üí 1.1.0)
     - `patch` ‚Üí bug fixes (1.0.0 ‚Üí 1.0.1)
   - Description of your changes

2. Commit your changes and the generated `.changeset` file

3. Push your branch and create a PR on GitHub. Our CI will:
   - Run tests and checks
   - Changesetbot will create a comment showing the version impact
   - When merged to main, changesetbot will create a Version Packages PR
   - When the Version Packages PR is merged, a new release will be published

&lt;/details&gt;


## License

[Apache 2.0 ¬© 2025 Cline Bot Inc.](./LICENSE)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[clash-verge-rev/clash-verge-rev]]></title>
            <link>https://github.com/clash-verge-rev/clash-verge-rev</link>
            <guid>https://github.com/clash-verge-rev/clash-verge-rev</guid>
            <pubDate>Fri, 09 May 2025 00:04:57 GMT</pubDate>
            <description><![CDATA[A modern GUI client based on Tauri, designed to run in Windows, macOS and Linux for tailored proxy experience]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/clash-verge-rev/clash-verge-rev">clash-verge-rev/clash-verge-rev</a></h1>
            <p>A modern GUI client based on Tauri, designed to run in Windows, macOS and Linux for tailored proxy experience</p>
            <p>Language: TypeScript</p>
            <p>Stars: 57,348</p>
            <p>Forks: 4,431</p>
            <p>Stars today: 104 stars today</p>
            <h2>README</h2><pre>&lt;h1 align=&quot;center&quot;&gt;
  &lt;img src=&quot;./src-tauri/icons/icon.png&quot; alt=&quot;Clash&quot; width=&quot;128&quot; /&gt;
  &lt;br&gt;
  Continuation of &lt;a href=&quot;https://github.com/zzzgydi/clash-verge&quot;&gt;Clash Verge&lt;/a&gt;
  &lt;br&gt;
&lt;/h1&gt;

&lt;h3 align=&quot;center&quot;&gt;
A Clash Meta GUI based on &lt;a href=&quot;https://github.com/tauri-apps/tauri&quot;&gt;Tauri&lt;/a&gt;.
&lt;/h3&gt;

## Preview

| Dark                             | Light                             |
| -------------------------------- | --------------------------------- |
| ![È¢ÑËßà](./docs/preview_dark.png) | ![È¢ÑËßà](./docs/preview_light.png) |

## Install

ËØ∑Âà∞ÂèëÂ∏ÉÈ°µÈù¢‰∏ãËΩΩÂØπÂ∫îÁöÑÂÆâË£ÖÂåÖÔºö[Release page](https://github.com/clash-verge-rev/clash-verge-rev/releases)&lt;br&gt;
Go to the [release page](https://github.com/clash-verge-rev/clash-verge-rev/releases) to download the corresponding installation package&lt;br&gt;
Supports Windows (x64/x86), Linux (x64/arm64) and macOS 10.15+ (intel/apple).

### ÂÆâË£ÖËØ¥ÊòéÂíåÂ∏∏ËßÅÈóÆÈ¢òÔºåËØ∑Âà∞[ÊñáÊ°£È°µ](https://clash-verge-rev.github.io/)Êü•ÁúãÔºö[Doc](https://clash-verge-rev.github.io/)

---

### TG È¢ëÈÅì: [@clash_verge_rev](https://t.me/clash_verge_re)

## Promotion

[ÁãóÁãóÂä†ÈÄü ‚Äî‚Äî ÊäÄÊúØÊµÅÊú∫Âú∫ Doggygo VPN](https://verge.dginv.click/#/register?code=oaxsAGo6)

- È´òÊÄßËÉΩÊµ∑Â§ñÊú∫Âú∫ÔºåÂÖçË¥πËØïÁî®Ôºå‰ºòÊÉ†Â•óÈ§êÔºåËß£ÈîÅÊµÅÂ™í‰ΩìÔºåÂÖ®ÁêÉÈ¶ñÂÆ∂ÊîØÊåÅ Hysteria ÂçèËÆÆ„ÄÇ
- ‰ΩøÁî® Clash Verge ‰∏ìÂ±ûÈÇÄËØ∑ÈìæÊé•Ê≥®ÂÜåÈÄÅ 3 Â§©ÔºåÊØèÂ§© 1G ÊµÅÈáèÂÖçË¥πËØïÁî®Ôºö[ÁÇπÊ≠§Ê≥®ÂÜå](https://verge.dginv.click/#/register?code=oaxsAGo6)
- Clash Verge ‰∏ìÂ±û 8 Êäò‰ºòÊÉ†Á†Å: verge20 (‰ªÖÊúâ 500 ‰ªΩ)
- ‰ºòÊÉ†Â•óÈ§êÊØèÊúà‰ªÖÈúÄ 15.8 ÂÖÉÔºå160G ÊµÅÈáèÔºåÂπ¥‰ªò 8 Êäò
- Êµ∑Â§ñÂõ¢ÈòüÔºåÊó†Ë∑ëË∑ØÈ£éÈô©ÔºåÈ´òËææ 50% Ëøî‰Ω£
- ÈõÜÁæ§Ë¥üËΩΩÂùáË°°ËÆæËÆ°ÔºåÈ´òÈÄü‰∏ìÁ∫ø(ÂÖºÂÆπËÄÅÂÆ¢Êà∑Á´Ø)ÔºåÊûÅ‰ΩéÂª∂ËøüÔºåÊó†ËßÜÊôöÈ´òÂ≥∞Ôºå4K ÁßíÂºÄ
- ÂÖ®ÁêÉÈ¶ñÂÆ∂ Hysteria ÂçèËÆÆÊú∫Âú∫ÔºåÁé∞Â∑≤‰∏äÁ∫øÊõ¥Âø´ÁöÑ `Hysteria2` ÂçèËÆÆ(Clash Verge ÂÆ¢Êà∑Á´ØÊúÄ‰Ω≥Êê≠ÈÖç)
- Ëß£ÈîÅÊµÅÂ™í‰ΩìÂèä ChatGPT
- ÂÆòÁΩëÔºö[https://ÁãóÁãóÂä†ÈÄü.com](https://verge.dginv.click/#/register?code=oaxsAGo6)

## Features

- Âü∫‰∫éÊÄßËÉΩÂº∫Âä≤ÁöÑ Rust Âíå Tauri 2 Ê°ÜÊû∂
- ÂÜÖÁΩÆ[Clash.Meta(mihomo)](https://github.com/MetaCubeX/mihomo)ÂÜÖÊ†∏ÔºåÂπ∂ÊîØÊåÅÂàáÊç¢ `Alpha` ÁâàÊú¨ÂÜÖÊ†∏„ÄÇ
- ÁÆÄÊ¥ÅÁæéËßÇÁöÑÁî®Êà∑ÁïåÈù¢ÔºåÊîØÊåÅËá™ÂÆö‰πâ‰∏ªÈ¢òÈ¢úËâ≤„ÄÅ‰ª£ÁêÜÁªÑ/ÊâòÁõòÂõæÊ†á‰ª•Âèä `CSS Injection`„ÄÇ
- ÈÖçÁΩÆÊñá‰ª∂ÁÆ°ÁêÜÂíåÂ¢ûÂº∫ÔºàMerge Âíå ScriptÔºâÔºåÈÖçÁΩÆÊñá‰ª∂ËØ≠Ê≥ïÊèêÁ§∫„ÄÇ
- Á≥ªÁªü‰ª£ÁêÜÂíåÂÆàÂç´„ÄÅ`TUN(ËôöÊãüÁΩëÂç°)` Ê®°Âºè„ÄÇ
- ÂèØËßÜÂåñËäÇÁÇπÂíåËßÑÂàôÁºñËæë
- WebDav ÈÖçÁΩÆÂ§á‰ªΩÂíåÂêåÊ≠•

### FAQ

Refer to [Doc FAQ Page](https://clash-verge-rev.github.io/faq/windows.html)

### Donation

[ÊçêÂä©Clash Verge RevÁöÑÂºÄÂèë](https://github.com/sponsors/clash-verge-rev)

## Development

See [CONTRIBUTING.md](./CONTRIBUTING.md) for more details.

To run the development server, execute the following commands after all prerequisites for **Tauri** are installed:

```shell
pnpm i
pnpm run check
pnpm dev
```

## Contributions

Issue and PR welcome!

## Acknowledgement

Clash Verge rev was based on or inspired by these projects and so on:

- [zzzgydi/clash-verge](https://github.com/zzzgydi/clash-verge): A Clash GUI based on tauri. Supports Windows, macOS and Linux.
- [tauri-apps/tauri](https://github.com/tauri-apps/tauri): Build smaller, faster, and more secure desktop applications with a web frontend.
- [Dreamacro/clash](https://github.com/Dreamacro/clash): A rule-based tunnel in Go.
- [MetaCubeX/mihomo](https://github.com/MetaCubeX/mihomo): A rule-based tunnel in Go.
- [Fndroid/clash_for_windows_pkg](https://github.com/Fndroid/clash_for_windows_pkg): A Windows/macOS GUI based on Clash.
- [vitejs/vite](https://github.com/vitejs/vite): Next generation frontend tooling. It&#039;s fast!

## License

GPL-3.0 License. See [License here](./LICENSE) for details.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[microsoft/vscode]]></title>
            <link>https://github.com/microsoft/vscode</link>
            <guid>https://github.com/microsoft/vscode</guid>
            <pubDate>Fri, 09 May 2025 00:04:56 GMT</pubDate>
            <description><![CDATA[Visual Studio Code]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/microsoft/vscode">microsoft/vscode</a></h1>
            <p>Visual Studio Code</p>
            <p>Language: TypeScript</p>
            <p>Stars: 170,913</p>
            <p>Forks: 32,108</p>
            <p>Stars today: 85 stars today</p>
            <h2>README</h2><pre># Visual Studio Code - Open Source (&quot;Code - OSS&quot;)

[![Feature Requests](https://img.shields.io/github/issues/microsoft/vscode/feature-request.svg)](https://github.com/microsoft/vscode/issues?q=is%3Aopen+is%3Aissue+label%3Afeature-request+sort%3Areactions-%2B1-desc)
[![Bugs](https://img.shields.io/github/issues/microsoft/vscode/bug.svg)](https://github.com/microsoft/vscode/issues?utf8=‚úì&amp;q=is%3Aissue+is%3Aopen+label%3Abug)
[![Gitter](https://img.shields.io/badge/chat-on%20gitter-yellow.svg)](https://gitter.im/Microsoft/vscode)

## The Repository

This repository (&quot;`Code - OSS`&quot;) is where we (Microsoft) develop the [Visual Studio Code](https://code.visualstudio.com) product together with the community. Not only do we work on code and issues here, we also publish our [roadmap](https://github.com/microsoft/vscode/wiki/Roadmap), [monthly iteration plans](https://github.com/microsoft/vscode/wiki/Iteration-Plans), and our [endgame plans](https://github.com/microsoft/vscode/wiki/Running-the-Endgame). This source code is available to everyone under the standard [MIT license](https://github.com/microsoft/vscode/blob/main/LICENSE.txt).

## Visual Studio Code

&lt;p align=&quot;center&quot;&gt;
  &lt;img alt=&quot;VS Code in action&quot; src=&quot;https://user-images.githubusercontent.com/35271042/118224532-3842c400-b438-11eb-923d-a5f66fa6785a.png&quot;&gt;
&lt;/p&gt;

[Visual Studio Code](https://code.visualstudio.com) is a distribution of the `Code - OSS` repository with Microsoft-specific customizations released under a traditional [Microsoft product license](https://code.visualstudio.com/License/).

[Visual Studio Code](https://code.visualstudio.com) combines the simplicity of a code editor with what developers need for their core edit-build-debug cycle. It provides comprehensive code editing, navigation, and understanding support along with lightweight debugging, a rich extensibility model, and lightweight integration with existing tools.

Visual Studio Code is updated monthly with new features and bug fixes. You can download it for Windows, macOS, and Linux on [Visual Studio Code&#039;s website](https://code.visualstudio.com/Download). To get the latest releases every day, install the [Insiders build](https://code.visualstudio.com/insiders).

## Contributing

There are many ways in which you can participate in this project, for example:

* [Submit bugs and feature requests](https://github.com/microsoft/vscode/issues), and help us verify as they are checked in
* Review [source code changes](https://github.com/microsoft/vscode/pulls)
* Review the [documentation](https://github.com/microsoft/vscode-docs) and make pull requests for anything from typos to additional and new content

If you are interested in fixing issues and contributing directly to the code base,
please see the document [How to Contribute](https://github.com/microsoft/vscode/wiki/How-to-Contribute), which covers the following:

* [How to build and run from source](https://github.com/microsoft/vscode/wiki/How-to-Contribute)
* [The development workflow, including debugging and running tests](https://github.com/microsoft/vscode/wiki/How-to-Contribute#debugging)
* [Coding guidelines](https://github.com/microsoft/vscode/wiki/Coding-Guidelines)
* [Submitting pull requests](https://github.com/microsoft/vscode/wiki/How-to-Contribute#pull-requests)
* [Finding an issue to work on](https://github.com/microsoft/vscode/wiki/How-to-Contribute#where-to-contribute)
* [Contributing to translations](https://aka.ms/vscodeloc)

## Feedback

* Ask a question on [Stack Overflow](https://stackoverflow.com/questions/tagged/vscode)
* [Request a new feature](CONTRIBUTING.md)
* Upvote [popular feature requests](https://github.com/microsoft/vscode/issues?q=is%3Aopen+is%3Aissue+label%3Afeature-request+sort%3Areactions-%2B1-desc)
* [File an issue](https://github.com/microsoft/vscode/issues)
* Connect with the extension author community on [GitHub Discussions](https://github.com/microsoft/vscode-discussions/discussions) or [Slack](https://aka.ms/vscode-dev-community)
* Follow [@code](https://twitter.com/code) and let us know what you think!

See our [wiki](https://github.com/microsoft/vscode/wiki/Feedback-Channels) for a description of each of these channels and information on some other available community-driven channels.

## Related Projects

Many of the core components and extensions to VS Code live in their own repositories on GitHub. For example, the [node debug adapter](https://github.com/microsoft/vscode-node-debug) and the [mono debug adapter](https://github.com/microsoft/vscode-mono-debug) repositories are separate from each other. For a complete list, please visit the [Related Projects](https://github.com/microsoft/vscode/wiki/Related-Projects) page on our [wiki](https://github.com/microsoft/vscode/wiki).

## Bundled Extensions

VS Code includes a set of built-in extensions located in the [extensions](extensions) folder, including grammars and snippets for many languages. Extensions that provide rich language support (code completion, Go to Definition) for a language have the suffix `language-features`. For example, the `json` extension provides coloring for `JSON` and the `json-language-features` extension provides rich language support for `JSON`.

## Development Container

This repository includes a Visual Studio Code Dev Containers / GitHub Codespaces development container.

* For [Dev Containers](https://aka.ms/vscode-remote/download/containers), use the **Dev Containers: Clone Repository in Container Volume...** command which creates a Docker volume for better disk I/O on macOS and Windows.
  * If you already have VS Code and Docker installed, you can also click [here](https://vscode.dev/redirect?url=vscode://ms-vscode-remote.remote-containers/cloneInVolume?url=https://github.com/microsoft/vscode) to get started. This will cause VS Code to automatically install the Dev Containers extension if needed, clone the source code into a container volume, and spin up a dev container for use.

* For Codespaces, install the [GitHub Codespaces](https://marketplace.visualstudio.com/items?itemName=GitHub.codespaces) extension in VS Code, and use the **Codespaces: Create New Codespace** command.

Docker / the Codespace should have at least **4 Cores and 6 GB of RAM (8 GB recommended)** to run full build. See the [development container README](.devcontainer/README.md) for more information.

## Code of Conduct

This project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/). For more information see the [Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/) or contact [opencode@microsoft.com](mailto:opencode@microsoft.com) with any additional questions or comments.

## License

Copyright (c) Microsoft Corporation. All rights reserved.

Licensed under the [MIT](LICENSE.txt) license.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[langgenius/dify]]></title>
            <link>https://github.com/langgenius/dify</link>
            <guid>https://github.com/langgenius/dify</guid>
            <pubDate>Fri, 09 May 2025 00:04:55 GMT</pubDate>
            <description><![CDATA[Dify is an open-source LLM app development platform. Dify's intuitive interface combines AI workflow, RAG pipeline, agent capabilities, model management, observability features and more, letting you quickly go from prototype to production.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/langgenius/dify">langgenius/dify</a></h1>
            <p>Dify is an open-source LLM app development platform. Dify's intuitive interface combines AI workflow, RAG pipeline, agent capabilities, model management, observability features and more, letting you quickly go from prototype to production.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 96,200</p>
            <p>Forks: 14,405</p>
            <p>Stars today: 186 stars today</p>
            <h2>README</h2><pre>![cover-v5-optimized](https://github.com/langgenius/dify/assets/13230914/f9e19af5-61ba-4119-b926-d10c4c06ebab)

&lt;p align=&quot;center&quot;&gt;
  üìå &lt;a href=&quot;https://dify.ai/blog/introducing-dify-workflow-file-upload-a-demo-on-ai-podcast&quot;&gt;Introducing Dify Workflow File Upload: Recreate Google NotebookLM Podcast&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://cloud.dify.ai&quot;&gt;Dify Cloud&lt;/a&gt; ¬∑
  &lt;a href=&quot;https://docs.dify.ai/getting-started/install-self-hosted&quot;&gt;Self-hosting&lt;/a&gt; ¬∑
  &lt;a href=&quot;https://docs.dify.ai&quot;&gt;Documentation&lt;/a&gt; ¬∑
  &lt;a href=&quot;https://dify.ai/pricing&quot;&gt;Dify edition overview&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://dify.ai&quot; target=&quot;_blank&quot;&gt;
        &lt;img alt=&quot;Static Badge&quot; src=&quot;https://img.shields.io/badge/Product-F04438&quot;&gt;&lt;/a&gt;
    &lt;a href=&quot;https://dify.ai/pricing&quot; target=&quot;_blank&quot;&gt;
        &lt;img alt=&quot;Static Badge&quot; src=&quot;https://img.shields.io/badge/free-pricing?logo=free&amp;color=%20%23155EEF&amp;label=pricing&amp;labelColor=%20%23528bff&quot;&gt;&lt;/a&gt;
    &lt;a href=&quot;https://discord.gg/FngNHpbcY7&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/discord/1082486657678311454?logo=discord&amp;labelColor=%20%235462eb&amp;logoColor=%20%23f5f5f5&amp;color=%20%235462eb&quot;
            alt=&quot;chat on Discord&quot;&gt;&lt;/a&gt;
    &lt;a href=&quot;https://reddit.com/r/difyai&quot; target=&quot;_blank&quot;&gt;  
        &lt;img src=&quot;https://img.shields.io/reddit/subreddit-subscribers/difyai?style=plastic&amp;logo=reddit&amp;label=r%2Fdifyai&amp;labelColor=white&quot;
            alt=&quot;join Reddit&quot;&gt;&lt;/a&gt;
    &lt;a href=&quot;https://twitter.com/intent/follow?screen_name=dify_ai&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/twitter/follow/dify_ai?logo=X&amp;color=%20%23f5f5f5&quot;
            alt=&quot;follow on X(Twitter)&quot;&gt;&lt;/a&gt;
    &lt;a href=&quot;https://www.linkedin.com/company/langgenius/&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https://custom-icon-badges.demolab.com/badge/LinkedIn-0A66C2?logo=linkedin-white&amp;logoColor=fff&quot;
            alt=&quot;follow on LinkedIn&quot;&gt;&lt;/a&gt;
    &lt;a href=&quot;https://hub.docker.com/u/langgenius&quot; target=&quot;_blank&quot;&gt;
        &lt;img alt=&quot;Docker Pulls&quot; src=&quot;https://img.shields.io/docker/pulls/langgenius/dify-web?labelColor=%20%23FDB062&amp;color=%20%23f79009&quot;&gt;&lt;/a&gt;
    &lt;a href=&quot;https://github.com/langgenius/dify/graphs/commit-activity&quot; target=&quot;_blank&quot;&gt;
        &lt;img alt=&quot;Commits last month&quot; src=&quot;https://img.shields.io/github/commit-activity/m/langgenius/dify?labelColor=%20%2332b583&amp;color=%20%2312b76a&quot;&gt;&lt;/a&gt;
    &lt;a href=&quot;https://github.com/langgenius/dify/&quot; target=&quot;_blank&quot;&gt;
        &lt;img alt=&quot;Issues closed&quot; src=&quot;https://img.shields.io/github/issues-search?query=repo%3Alanggenius%2Fdify%20is%3Aclosed&amp;label=issues%20closed&amp;labelColor=%20%237d89b0&amp;color=%20%235d6b98&quot;&gt;&lt;/a&gt;
    &lt;a href=&quot;https://github.com/langgenius/dify/discussions/&quot; target=&quot;_blank&quot;&gt;
        &lt;img alt=&quot;Discussion posts&quot; src=&quot;https://img.shields.io/github/discussions/langgenius/dify?labelColor=%20%239b8afb&amp;color=%20%237a5af8&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;./README.md&quot;&gt;&lt;img alt=&quot;README in English&quot; src=&quot;https://img.shields.io/badge/English-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;./README_TW.md&quot;&gt;&lt;img alt=&quot;ÁπÅÈ´î‰∏≠ÊñáÊñá‰ª∂&quot; src=&quot;https://img.shields.io/badge/ÁπÅÈ´î‰∏≠Êñá-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;./README_CN.md&quot;&gt;&lt;img alt=&quot;ÁÆÄ‰Ωì‰∏≠ÊñáÁâàËá™Ëø∞Êñá‰ª∂&quot; src=&quot;https://img.shields.io/badge/ÁÆÄ‰Ωì‰∏≠Êñá-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;./README_JA.md&quot;&gt;&lt;img alt=&quot;Êó•Êú¨Ë™û„ÅÆREADME&quot; src=&quot;https://img.shields.io/badge/Êó•Êú¨Ë™û-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;./README_ES.md&quot;&gt;&lt;img alt=&quot;README en Espa√±ol&quot; src=&quot;https://img.shields.io/badge/Espa√±ol-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;./README_FR.md&quot;&gt;&lt;img alt=&quot;README en Fran√ßais&quot; src=&quot;https://img.shields.io/badge/Fran√ßais-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;./README_KL.md&quot;&gt;&lt;img alt=&quot;README tlhIngan Hol&quot; src=&quot;https://img.shields.io/badge/Klingon-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;./README_KR.md&quot;&gt;&lt;img alt=&quot;README in Korean&quot; src=&quot;https://img.shields.io/badge/ÌïúÍµ≠Ïñ¥-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;./README_AR.md&quot;&gt;&lt;img alt=&quot;README ÿ®ÿßŸÑÿπÿ±ÿ®Ÿäÿ©&quot; src=&quot;https://img.shields.io/badge/ÿßŸÑÿπÿ±ÿ®Ÿäÿ©-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;./README_TR.md&quot;&gt;&lt;img alt=&quot;T√ºrk√ße README&quot; src=&quot;https://img.shields.io/badge/T√ºrk√ße-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;./README_VI.md&quot;&gt;&lt;img alt=&quot;README Ti·∫øng Vi·ªát&quot; src=&quot;https://img.shields.io/badge/Ti%E1%BA%BFng%20Vi%E1%BB%87t-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;./README_DE.md&quot;&gt;&lt;img alt=&quot;README in Deutsch&quot; src=&quot;https://img.shields.io/badge/German-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;./README_BN.md&quot;&gt;&lt;img alt=&quot;README in ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ&quot; src=&quot;https://img.shields.io/badge/‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ-d9d9d9&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

Dify is an open-source LLM app development platform. Its intuitive interface combines agentic AI workflow, RAG pipeline, agent capabilities, model management, observability features, and more, allowing you to quickly move from prototype to production.

## Quick start

&gt; Before installing Dify, make sure your machine meets the following minimum system requirements:
&gt;
&gt; - CPU &gt;= 2 Core
&gt; - RAM &gt;= 4 GiB

&lt;/br&gt;

The easiest way to start the Dify server is through [docker compose](docker/docker-compose.yaml). Before running Dify with the following commands, make sure that [Docker](https://docs.docker.com/get-docker/) and [Docker Compose](https://docs.docker.com/compose/install/) are installed on your machine:

```bash
cd dify
cd docker
cp .env.example .env
docker compose up -d
```

After running, you can access the Dify dashboard in your browser at [http://localhost/install](http://localhost/install) and start the initialization process.

#### Seeking help

Please refer to our [FAQ](https://docs.dify.ai/getting-started/install-self-hosted/faqs) if you encounter problems setting up Dify. Reach out to [the community and us](#community--contact) if you are still having issues.

&gt; If you&#039;d like to contribute to Dify or do additional development, refer to our [guide to deploying from source code](https://docs.dify.ai/getting-started/install-self-hosted/local-source-code)

## Key features

**1. Workflow**:
Build and test powerful AI workflows on a visual canvas, leveraging all the following features and beyond.

https://github.com/langgenius/dify/assets/13230914/356df23e-1604-483d-80a6-9517ece318aa

**2. Comprehensive model support**:
Seamless integration with hundreds of proprietary / open-source LLMs from dozens of inference providers and self-hosted solutions, covering GPT, Mistral, Llama3, and any OpenAI API-compatible models. A full list of supported model providers can be found [here](https://docs.dify.ai/getting-started/readme/model-providers).

![providers-v5](https://github.com/langgenius/dify/assets/13230914/5a17bdbe-097a-4100-8363-40255b70f6e3)

**3. Prompt IDE**:
Intuitive interface for crafting prompts, comparing model performance, and adding additional features such as text-to-speech to a chat-based app.

**4. RAG Pipeline**:
Extensive RAG capabilities that cover everything from document ingestion to retrieval, with out-of-box support for text extraction from PDFs, PPTs, and other common document formats.

**5. Agent capabilities**:
You can define agents based on LLM Function Calling or ReAct, and add pre-built or custom tools for the agent. Dify provides 50+ built-in tools for AI agents, such as Google Search, DALL¬∑E, Stable Diffusion and WolframAlpha.

**6. LLMOps**:
Monitor and analyze application logs and performance over time. You could continuously improve prompts, datasets, and models based on production data and annotations.

**7. Backend-as-a-Service**:
All of Dify&#039;s offerings come with corresponding APIs, so you could effortlessly integrate Dify into your own business logic.

## Feature Comparison

&lt;table style=&quot;width: 100%;&quot;&gt;
  &lt;tr&gt;
    &lt;th align=&quot;center&quot;&gt;Feature&lt;/th&gt;
    &lt;th align=&quot;center&quot;&gt;Dify.AI&lt;/th&gt;
    &lt;th align=&quot;center&quot;&gt;LangChain&lt;/th&gt;
    &lt;th align=&quot;center&quot;&gt;Flowise&lt;/th&gt;
    &lt;th align=&quot;center&quot;&gt;OpenAI Assistants API&lt;/th&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;Programming Approach&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;API + App-oriented&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;Python Code&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;App-oriented&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;API-oriented&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;Supported LLMs&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;Rich Variety&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;Rich Variety&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;Rich Variety&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;OpenAI-only&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;RAG Engine&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚úÖ&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚úÖ&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚úÖ&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚úÖ&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;Agent&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚úÖ&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚úÖ&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚ùå&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚úÖ&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;Workflow&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚úÖ&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚ùå&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚úÖ&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚ùå&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;Observability&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚úÖ&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚úÖ&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚ùå&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚ùå&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;Enterprise Feature (SSO/Access control)&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚úÖ&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚ùå&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚ùå&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚ùå&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;Local Deployment&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚úÖ&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚úÖ&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚úÖ&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚ùå&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

## Using Dify

- **Cloud &lt;/br&gt;**
  We host a [Dify Cloud](https://dify.ai) service for anyone to try with zero setup. It provides all the capabilities of the self-deployed version, and includes 200 free GPT-4 calls in the sandbox plan.

- **Self-hosting Dify Community Edition&lt;/br&gt;**
  Quickly get Dify running in your environment with this [starter guide](#quick-start).
  Use our [documentation](https://docs.dify.ai) for further references and more in-depth instructions.

- **Dify for enterprise / organizations&lt;/br&gt;**
  We provide additional enterprise-centric features. [Log your questions for us through this chatbot](https://udify.app/chat/22L1zSxg6yW1cWQg) or [send us an email](mailto:business@dify.ai?subject=[GitHub]Business%20License%20Inquiry) to discuss enterprise needs. &lt;/br&gt;
  &gt; For startups and small businesses using AWS, check out [Dify Premium on AWS Marketplace](https://aws.amazon.com/marketplace/pp/prodview-t22mebxzwjhu6) and deploy it to your own AWS VPC with one click. It&#039;s an affordable AMI offering with the option to create apps with custom logo and branding.

## Staying ahead

Star Dify on GitHub and be instantly notified of new releases.

![star-us](https://github.com/langgenius/dify/assets/13230914/b823edc1-6388-4e25-ad45-2f6b187adbb4)

## Advanced Setup

If you need to customize the configuration, please refer to the comments in our [.env.example](docker/.env.example) file and update the corresponding values in your `.env` file. Additionally, you might need to make adjustments to the `docker-compose.yaml` file itself, such as changing image versions, port mappings, or volume mounts, based on your specific deployment environment and requirements. After making any changes, please re-run `docker-compose up -d`. You can find the full list of available environment variables [here](https://docs.dify.ai/getting-started/install-self-hosted/environments).

If you&#039;d like to configure a highly-available setup, there are community-contributed [Helm Charts](https://helm.sh/) and YAML files which allow Dify to be deployed on Kubernetes.

- [Helm Chart by @LeoQuote](https://github.com/douban/charts/tree/master/charts/dify)
- [Helm Chart by @BorisPolonsky](https://github.com/BorisPolonsky/dify-helm)
- [Helm Chart by @magicsong](https://github.com/magicsong/ai-charts)
- [YAML file by @Winson-030](https://github.com/Winson-030/dify-kubernetes)
- [YAML file by @wyy-holding](https://github.com/wyy-holding/dify-k8s)

#### Using Terraform for Deployment

Deploy Dify to Cloud Platform with a single click using [terraform](https://www.terraform.io/)

##### Azure Global

- [Azure Terraform by @nikawang](https://github.com/nikawang/dify-azure-terraform)

##### Google Cloud

- [Google Cloud Terraform by @sotazum](https://github.com/DeNA/dify-google-cloud-terraform)

#### Using AWS CDK for Deployment

Deploy Dify to AWS with [CDK](https://aws.amazon.com/cdk/)

##### AWS

- [AWS CDK by @KevinZhao](https://github.com/aws-samples/solution-for-deploying-dify-on-aws)

## Contributing

For those who&#039;d like to contribute code, see our [Contribution Guide](https://github.com/langgenius/dify/blob/main/CONTRIBUTING.md).
At the same time, please consider supporting Dify by sharing it on social media and at events and conferences.

&gt; We are looking for contributors to help translate Dify into languages other than Mandarin or English. If you are interested in helping, please see the [i18n README](https://github.com/langgenius/dify/blob/main/web/i18n/README.md) for more information, and leave us a comment in the `global-users` channel of our [Discord Community Server](https://discord.gg/8Tpq4AcN9c).

## Community &amp; contact

- [Github Discussion](https://github.com/langgenius/dify/discussions). Best for: sharing feedback and asking questions.
- [GitHub Issues](https://github.com/langgenius/dify/issues). Best for: bugs you encounter using Dify.AI, and feature proposals. See our [Contribution Guide](https://github.com/langgenius/dify/blob/main/CONTRIBUTING.md).
- [Discord](https://discord.gg/FngNHpbcY7). Best for: sharing your applications and hanging out with the community.
- [X(Twitter)](https://twitter.com/dify_ai). Best for: sharing your applications and hanging out with the community.

**Contributors**

&lt;a href=&quot;https://github.com/langgenius/dify/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=langgenius/dify&quot; /&gt;
&lt;/a&gt;

## Star history

[![Star History Chart](https://api.star-history.com/svg?repos=langgenius/dify&amp;type=Date)](https://star-history.com/#langgenius/dify&amp;Date)

## Security disclosure

To protect your privacy, please avoid posting security issues on GitHub. Instead, send your questions to security@dify.ai and we will provide you with a more detailed answer.

## License

This repository is available under the [Dify Open Source License](LICENSE), which is essentially Apache 2.0 with a few additional restrictions.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[mui/mui-x]]></title>
            <link>https://github.com/mui/mui-x</link>
            <guid>https://github.com/mui/mui-x</guid>
            <pubDate>Fri, 09 May 2025 00:04:54 GMT</pubDate>
            <description><![CDATA[MUI X: Build complex and data-rich applications using a growing list of advanced React components, like the Data Grid, Date and Time Pickers, Charts, and more!]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/mui/mui-x">mui/mui-x</a></h1>
            <p>MUI X: Build complex and data-rich applications using a growing list of advanced React components, like the Data Grid, Date and Time Pickers, Charts, and more!</p>
            <p>Language: TypeScript</p>
            <p>Stars: 4,819</p>
            <p>Forks: 1,438</p>
            <p>Stars today: 6 stars today</p>
            <h2>README</h2><pre>&lt;!-- markdownlint-disable-next-line --&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://mui.com/x/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;&lt;img width=&quot;150&quot; height=&quot;133&quot; src=&quot;https://mui.com/static/logo.svg&quot; alt=&quot;MUI¬†X logo&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;h1 align=&quot;center&quot;&gt;MUI¬†X&lt;/h1&gt;

&lt;div align=&quot;center&quot;&gt;

[![License](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/mui/mui-x/blob/HEAD/LICENSE)
[![npm latest package](https://img.shields.io/npm/v/@mui/x-data-grid/latest.svg)](https://www.npmjs.com/package/@mui/x-data-grid)
[![npm downloads](https://img.shields.io/npm/dm/@mui/x-data-grid.svg)](https://www.npmjs.com/package/@mui/x-data-grid)
[![GitHub branch status](https://img.shields.io/github/checks-status/mui/mui-x/HEAD)](https://github.com/mui/mui-x/commits/HEAD/)
[![Coverage status](https://img.shields.io/codecov/c/github/mui/mui-x.svg)](https://codecov.io/gh/mui/mui-x/)
[![Follow on X](https://img.shields.io/twitter/follow/MUI_X_.svg?label=follow+MUI+X)](https://x.com/MUI_X_)
[![Renovate status](https://img.shields.io/badge/renovate-enabled-brightgreen.svg)](https://github.com/mui/mui-x/issues/2081)
[![Average time to resolve an issue](https://isitmaintained.com/badge/resolution/mui/mui-x.svg)](https://isitmaintained.com/project/mui/mui-x &#039;Average time to resolve an issue&#039;)
[![Open¬†Collective backers and sponsors](https://img.shields.io/opencollective/all/mui-org)](https://opencollective.com/mui-org)
[![OpenSSF Best Practices](https://www.bestpractices.dev/projects/6293/badge)](https://www.bestpractices.dev/projects/6293)

&lt;/div&gt;

[MUI¬†X](https://mui.com/x/) is a suite of advanced React UI components for a wide range of complex use cases.
Each component provides best-in-class UX and DX, with sophisticated UX workflows for data-rich applications.
Components include the Data Grid, Date and Time Pickers, Charts, and Tree¬†View.

MUI¬†X extends the core functionality of [Material¬†UI](https://github.com/mui/material-ui/), but the advanced components also stand on their own and can be fully customized to meet the needs of any design system.

MUI¬†X is **open-core**: [Community](#community-plan) components are MIT-licensed and free forever, while more advanced features and components require a [Pro](#pro-plan) or [Premium](#premium-plan) commercial license.
See [Licensing](#licensing) for more information.

## Documentation

Get started in the [MUI¬†X documentation](https://mui.com/x/introduction/).

- [Data Grid](https://mui.com/x/react-data-grid/)
- [Date and Time Pickers](https://mui.com/x/react-date-pickers/)
- [Charts](https://mui.com/x/react-charts/)
- [Tree View](https://mui.com/x/react-tree-view/)

### Installation

- [Data Grid installation](https://mui.com/x/react-data-grid/quickstart/#installation)
- [Date and Time Pickers installation](https://mui.com/x/react-date-pickers/quickstart/#installation)
- [Charts installation](https://mui.com/x/react-charts/quickstart/#installation)
- [Tree View installation](https://mui.com/x/react-tree-view/quickstart/#installation)

## Licensing

The MUI¬†X team has been building MIT-licensed React components since 2014, starting with Material¬†UI, and we&#039;re committed to the continued advancement of our open-source libraries.
Anything we release under an MIT license will remain MIT-licensed forever.
Learn more about [our stewardship ethos](https://mui-org.notion.site/Stewardship-542a2226043d4f4a96dfb429d16cf5bd).

We offer commercial licenses to developers who need the most advanced components and features that can&#039;t reasonably be maintained by the open-source community alone.
These licenses make it possible for us to support a full-time staff of engineers.

Rest assured that when we release features commercially, it&#039;s only because we believe you won&#039;t find a better MIT-licensed alternative anywhere else.

See the [Licensing page](https://mui.com/x/introduction/licensing/) for complete details.

### Plans

#### Community plan

The free Community version of MUI¬†X contains components and features that we believe are maintainable by contributions from the open-source community.
It&#039;s published under an [MIT license](https://www.tldrlegal.com/license/mit-license) and it&#039;s [free forever](https://mui-org.notion.site/Stewardship-542a2226043d4f4a96dfb429d16cf5bd#20f609acab4441cf9346614119fbbac1).

- [`@mui/x-data-grid`](https://www.npmjs.com/package/@mui/x-data-grid)
- [`@mui/x-date-pickers`](https://www.npmjs.com/package/@mui/x-date-pickers)
- [`@mui/x-charts`](https://www.npmjs.com/package/@mui/x-charts)
- [`@mui/x-tree-view`](https://www.npmjs.com/package/@mui/x-tree-view)

#### Pro plan

MUI¬†X Pro expands on the Community version with more advanced features and functionality.
The Data Grid Pro comes with multi-filtering, multi-sorting, column resizing, and column pinning; you also gain access to the Date and Time Range Picker components, advanced Charts, and drag-and-drop reordering for the Tree View.

The Pro version is available under a commercial license‚Äîvisit the [Pricing page](https://mui.com/pricing/) for details.

- [`@mui/x-data-grid-pro`](https://www.npmjs.com/package/@mui/x-data-grid-pro)
- [`@mui/x-date-pickers-pro`](https://www.npmjs.com/package/@mui/x-date-pickers-pro)
- [`@mui/x-charts-pro`](https://www.npmjs.com/package/@mui/x-charts-pro)
- [`@mui/x-tree-view-pro`](https://www.npmjs.com/package/@mui/x-tree-view-pro)

#### Premium plan

MUI¬†X Premium unlocks the most advanced features of the Data Grid, including row grouping and Excel exporting, as well as everything offered in the Pro plan.

The Premium version is available under a commercial license‚Äîvisit the [Pricing page](https://mui.com/pricing/) for details.

- [`@mui/x-data-grid-premium`](https://www.npmjs.com/package/@mui/x-data-grid-premium)

## Support

From community guidance to critical business support, we&#039;re here to help.
Read the [Support guide](https://mui.com/x/introduction/support/) for details.

## Contributing

Read the [Contributing guide](/CONTRIBUTING.md) to learn about our development process, how to propose bug fixes and improvements, and how to build and test your changes.

Contributing to MUI¬†X is about more than just issues and pull requests!
There are many other ways to [support MUI¬†X](https://mui.com/material-ui/getting-started/faq/#mui-is-an-awesome-organization-how-can-i-support-it) beyond contributing to the code base.

## Changelog

The [changelog](https://github.com/mui/mui-x/releases) is regularly updated to reflect what&#039;s changed in each new release.

## Roadmap

Future plans and high-priority features and enhancements can be found in the [roadmap](https://mui.com/x/introduction/roadmap/).

## Security

For details on supported versions and contact information for reporting security issues, please refer to the [security policy](https://github.com/mui/mui-x/security/policy).
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[infiniflow/ragflow]]></title>
            <link>https://github.com/infiniflow/ragflow</link>
            <guid>https://github.com/infiniflow/ragflow</guid>
            <pubDate>Fri, 09 May 2025 00:04:53 GMT</pubDate>
            <description><![CDATA[RAGFlow is an open-source RAG (Retrieval-Augmented Generation) engine based on deep document understanding.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/infiniflow/ragflow">infiniflow/ragflow</a></h1>
            <p>RAGFlow is an open-source RAG (Retrieval-Augmented Generation) engine based on deep document understanding.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 51,596</p>
            <p>Forks: 4,902</p>
            <p>Stars today: 138 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
&lt;a href=&quot;https://demo.ragflow.io/&quot;&gt;
&lt;img src=&quot;web/src/assets/logo-with-text.png&quot; width=&quot;520&quot; alt=&quot;ragflow logo&quot;&gt;
&lt;/a&gt;
&lt;/div&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;./README.md&quot;&gt;English&lt;/a&gt; |
  &lt;a href=&quot;./README_zh.md&quot;&gt;ÁÆÄ‰Ωì‰∏≠Êñá&lt;/a&gt; |
  &lt;a href=&quot;./README_tzh.md&quot;&gt;ÁπÅ‰Ωì‰∏≠Êñá&lt;/a&gt; |
  &lt;a href=&quot;./README_ja.md&quot;&gt;Êó•Êú¨Ë™û&lt;/a&gt; |
  &lt;a href=&quot;./README_ko.md&quot;&gt;ÌïúÍµ≠Ïñ¥&lt;/a&gt; |
  &lt;a href=&quot;./README_id.md&quot;&gt;Bahasa Indonesia&lt;/a&gt; |
  &lt;a href=&quot;/README_pt_br.md&quot;&gt;Portugu√™s (Brasil)&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://x.com/intent/follow?screen_name=infiniflowai&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/twitter/follow/infiniflow?logo=X&amp;color=%20%23f5f5f5&quot; alt=&quot;follow on X(Twitter)&quot;&gt;
    &lt;/a&gt;
    &lt;a href=&quot;https://demo.ragflow.io&quot; target=&quot;_blank&quot;&gt;
        &lt;img alt=&quot;Static Badge&quot; src=&quot;https://img.shields.io/badge/Online-Demo-4e6b99&quot;&gt;
    &lt;/a&gt;
    &lt;a href=&quot;https://hub.docker.com/r/infiniflow/ragflow&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/badge/docker_pull-ragflow:v0.18.0-brightgreen&quot; alt=&quot;docker pull infiniflow/ragflow:v0.18.0&quot;&gt;
    &lt;/a&gt;
    &lt;a href=&quot;https://github.com/infiniflow/ragflow/releases/latest&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/github/v/release/infiniflow/ragflow?color=blue&amp;label=Latest%20Release&quot; alt=&quot;Latest Release&quot;&gt;
    &lt;/a&gt;
    &lt;a href=&quot;https://github.com/infiniflow/ragflow/blob/main/LICENSE&quot;&gt;
        &lt;img height=&quot;21&quot; src=&quot;https://img.shields.io/badge/License-Apache--2.0-ffffff?labelColor=d4eaf7&amp;color=2e6cc4&quot; alt=&quot;license&quot;&gt;
    &lt;/a&gt;
&lt;/p&gt;

&lt;h4 align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://ragflow.io/docs/dev/&quot;&gt;Document&lt;/a&gt; |
  &lt;a href=&quot;https://github.com/infiniflow/ragflow/issues/4214&quot;&gt;Roadmap&lt;/a&gt; |
  &lt;a href=&quot;https://twitter.com/infiniflowai&quot;&gt;Twitter&lt;/a&gt; |
  &lt;a href=&quot;https://discord.gg/NjYzJD3GM3&quot;&gt;Discord&lt;/a&gt; |
  &lt;a href=&quot;https://demo.ragflow.io&quot;&gt;Demo&lt;/a&gt;
&lt;/h4&gt;

&lt;details open&gt;
&lt;summary&gt;&lt;b&gt;üìï Table of Contents&lt;/b&gt;&lt;/summary&gt;

- üí° [What is RAGFlow?](#-what-is-ragflow)
- üéÆ [Demo](#-demo)
- üìå [Latest Updates](#-latest-updates)
- üåü [Key Features](#-key-features)
- üîé [System Architecture](#-system-architecture)
- üé¨ [Get Started](#-get-started)
- üîß [Configurations](#-configurations)
- üîß [Build a docker image without embedding models](#-build-a-docker-image-without-embedding-models)
- üîß [Build a docker image including embedding models](#-build-a-docker-image-including-embedding-models)
- üî® [Launch service from source for development](#-launch-service-from-source-for-development)
- üìö [Documentation](#-documentation)
- üìú [Roadmap](#-roadmap)
- üèÑ [Community](#-community)
- üôå [Contributing](#-contributing)

&lt;/details&gt;

## üí° What is RAGFlow?

[RAGFlow](https://ragflow.io/) is an open-source RAG (Retrieval-Augmented Generation) engine based on deep document
understanding. It offers a streamlined RAG workflow for businesses of any scale, combining LLM (Large Language Models)
to provide truthful question-answering capabilities, backed by well-founded citations from various complex formatted
data.

## üéÆ Demo

Try our demo at [https://demo.ragflow.io](https://demo.ragflow.io).

&lt;div align=&quot;center&quot; style=&quot;margin-top:20px;margin-bottom:20px;&quot;&gt;
&lt;img src=&quot;https://github.com/infiniflow/ragflow/assets/7248/2f6baa3e-1092-4f11-866d-36f6a9d075e5&quot; width=&quot;1200&quot;/&gt;
&lt;img src=&quot;https://github.com/user-attachments/assets/504bbbf1-c9f7-4d83-8cc5-e9cb63c26db6&quot; width=&quot;1200&quot;/&gt;
&lt;/div&gt;

## üî• Latest Updates

- 2025-03-19 Supports using a multi-modal model to make sense of images within PDF or DOCX files.
- 2025-02-28 Combined with Internet search (Tavily), supports reasoning like Deep Research for any LLMs.
- 2025-01-26 Optimizes knowledge graph extraction and application, offering various configuration options.
- 2024-12-18 Upgrades Document Layout Analysis model in DeepDoc.
- 2024-11-01 Adds keyword extraction and related question generation to the parsed chunks to improve the accuracy of retrieval.
- 2024-08-22 Support text to SQL statements through RAG.

## üéâ Stay Tuned

‚≠êÔ∏è Star our repository to stay up-to-date with exciting new features and improvements! Get instant notifications for new
releases! üåü

&lt;div align=&quot;center&quot; style=&quot;margin-top:20px;margin-bottom:20px;&quot;&gt;
&lt;img src=&quot;https://github.com/user-attachments/assets/18c9707e-b8aa-4caf-a154-037089c105ba&quot; width=&quot;1200&quot;/&gt;
&lt;/div&gt;

## üåü Key Features

### üç≠ **&quot;Quality in, quality out&quot;**

- [Deep document understanding](./deepdoc/README.md)-based knowledge extraction from unstructured data with complicated
  formats.
- Finds &quot;needle in a data haystack&quot; of literally unlimited tokens.

### üç± **Template-based chunking**

- Intelligent and explainable.
- Plenty of template options to choose from.

### üå± **Grounded citations with reduced hallucinations**

- Visualization of text chunking to allow human intervention.
- Quick view of the key references and traceable citations to support grounded answers.

### üçî **Compatibility with heterogeneous data sources**

- Supports Word, slides, excel, txt, images, scanned copies, structured data, web pages, and more.

### üõÄ **Automated and effortless RAG workflow**

- Streamlined RAG orchestration catered to both personal and large businesses.
- Configurable LLMs as well as embedding models.
- Multiple recall paired with fused re-ranking.
- Intuitive APIs for seamless integration with business.

## üîé System Architecture

&lt;div align=&quot;center&quot; style=&quot;margin-top:20px;margin-bottom:20px;&quot;&gt;
&lt;img src=&quot;https://github.com/infiniflow/ragflow/assets/12318111/d6ac5664-c237-4200-a7c2-a4a00691b485&quot; width=&quot;1000&quot;/&gt;
&lt;/div&gt;

## üé¨ Get Started

### üìù Prerequisites

- CPU &gt;= 4 cores
- RAM &gt;= 16 GB
- Disk &gt;= 50 GB
- Docker &gt;= 24.0.0 &amp; Docker Compose &gt;= v2.26.1
  &gt; If you have not installed Docker on your local machine (Windows, Mac, or Linux),
  &gt; see [Install Docker Engine](https://docs.docker.com/engine/install/).

### üöÄ Start up the server

1. Ensure `vm.max_map_count` &gt;= 262144:

   &gt; To check the value of `vm.max_map_count`:
   &gt;
   &gt; ```bash
   &gt; $ sysctl vm.max_map_count
   &gt; ```
   &gt;
   &gt; Reset `vm.max_map_count` to a value at least 262144 if it is not.
   &gt;
   &gt; ```bash
   &gt; # In this case, we set it to 262144:
   &gt; $ sudo sysctl -w vm.max_map_count=262144
   &gt; ```
   &gt;
   &gt; This change will be reset after a system reboot. To ensure your change remains permanent, add or update the
   &gt; `vm.max_map_count` value in **/etc/sysctl.conf** accordingly:
   &gt;
   &gt; ```bash
   &gt; vm.max_map_count=262144
   &gt; ```

2. Clone the repo:

   ```bash
   $ git clone https://github.com/infiniflow/ragflow.git
   ```

3. Start up the server using the pre-built Docker images:

&gt; [!CAUTION]
&gt; All Docker images are built for x86 platforms. We don&#039;t currently offer Docker images for ARM64.
&gt; If you are on an ARM64 platform, follow [this guide](https://ragflow.io/docs/dev/build_docker_image) to build a Docker image compatible with your system.

   &gt; The command below downloads the `v0.18.0-slim` edition of the RAGFlow Docker image. See the following table for descriptions of different RAGFlow editions. To download a RAGFlow edition different from `v0.18.0-slim`, update the `RAGFLOW_IMAGE` variable accordingly in **docker/.env** before using `docker compose` to start the server. For example: set `RAGFLOW_IMAGE=infiniflow/ragflow:v0.18.0` for the full edition `v0.18.0`.

   ```bash
   $ cd ragflow/docker
   # Use CPU for embedding and DeepDoc tasks:
   $ docker compose -f docker-compose.yml up -d

   # To use GPU to accelerate embedding and DeepDoc tasks:
   # docker compose -f docker-compose-gpu.yml up -d
   ```

   | RAGFlow image tag | Image size (GB) | Has embedding models? | Stable?                  |
   |-------------------|-----------------|-----------------------|--------------------------|
   | v0.18.0           | &amp;approx;9       | :heavy_check_mark:    | Stable release           |
   | v0.18.0-slim      | &amp;approx;2       | ‚ùå                   | Stable release            |
   | nightly           | &amp;approx;9       | :heavy_check_mark:    | _Unstable_ nightly build |
   | nightly-slim      | &amp;approx;2       | ‚ùå                   | _Unstable_ nightly build  |

4. Check the server status after having the server up and running:

   ```bash
   $ docker logs -f ragflow-server
   ```

   _The following output confirms a successful launch of the system:_

   ```bash

         ____   ___    ______ ______ __
        / __ \ /   |  / ____// ____// /____  _      __
       / /_/ // /| | / / __ / /_   / // __ \| | /| / /
      / _, _// ___ |/ /_/ // __/  / // /_/ /| |/ |/ /
     /_/ |_|/_/  |_|\____//_/    /_/ \____/ |__/|__/

    * Running on all addresses (0.0.0.0)
   ```

   &gt; If you skip this confirmation step and directly log in to RAGFlow, your browser may prompt a `network anormal`
   &gt; error because, at that moment, your RAGFlow may not be fully initialized.

5. In your web browser, enter the IP address of your server and log in to RAGFlow.
   &gt; With the default settings, you only need to enter `http://IP_OF_YOUR_MACHINE` (**sans** port number) as the default
   &gt; HTTP serving port `80` can be omitted when using the default configurations.
6. In [service_conf.yaml.template](./docker/service_conf.yaml.template), select the desired LLM factory in `user_default_llm` and update
   the `API_KEY` field with the corresponding API key.

   &gt; See [llm_api_key_setup](https://ragflow.io/docs/dev/llm_api_key_setup) for more information.

   _The show is on!_

## üîß Configurations

When it comes to system configurations, you will need to manage the following files:

- [.env](./docker/.env): Keeps the fundamental setups for the system, such as `SVR_HTTP_PORT`, `MYSQL_PASSWORD`, and
  `MINIO_PASSWORD`.
- [service_conf.yaml.template](./docker/service_conf.yaml.template): Configures the back-end services. The environment variables in this file will be automatically populated when the Docker container starts. Any environment variables set within the Docker container will be available for use, allowing you to customize service behavior based on the deployment environment.
- [docker-compose.yml](./docker/docker-compose.yml): The system relies on [docker-compose.yml](./docker/docker-compose.yml) to start up.

&gt; The [./docker/README](./docker/README.md) file provides a detailed description of the environment settings and service
&gt; configurations which can be used as `${ENV_VARS}` in the [service_conf.yaml.template](./docker/service_conf.yaml.template) file.

To update the default HTTP serving port (80), go to [docker-compose.yml](./docker/docker-compose.yml) and change `80:80`
to `&lt;YOUR_SERVING_PORT&gt;:80`.

Updates to the above configurations require a reboot of all containers to take effect:

&gt; ```bash
&gt; $ docker compose -f docker-compose.yml up -d
&gt; ```

### Switch doc engine from Elasticsearch to Infinity

RAGFlow uses Elasticsearch by default for storing full text and vectors. To switch to [Infinity](https://github.com/infiniflow/infinity/), follow these steps:

1. Stop all running containers:

   ```bash
   $ docker compose -f docker/docker-compose.yml down -v
   ```

&gt; [!WARNING]
&gt; `-v` will delete the docker container volumes, and the existing data will be cleared.

2. Set `DOC_ENGINE` in **docker/.env** to `infinity`.

3. Start the containers:

   ```bash
   $ docker compose -f docker-compose.yml up -d
   ```

&gt; [!WARNING]
&gt; Switching to Infinity on a Linux/arm64 machine is not yet officially supported.

## üîß Build a Docker image without embedding models

This image is approximately 2 GB in size and relies on external LLM and embedding services.

```bash
git clone https://github.com/infiniflow/ragflow.git
cd ragflow/
docker build --platform linux/amd64 --build-arg LIGHTEN=1 -f Dockerfile -t infiniflow/ragflow:nightly-slim .
```

## üîß Build a Docker image including embedding models

This image is approximately 9 GB in size. As it includes embedding models, it relies on external LLM services only.

```bash
git clone https://github.com/infiniflow/ragflow.git
cd ragflow/
docker build --platform linux/amd64 -f Dockerfile -t infiniflow/ragflow:nightly .
```

## üî® Launch service from source for development

1. Install uv, or skip this step if it is already installed:

   ```bash
   pipx install uv pre-commit
   ```

2. Clone the source code and install Python dependencies:

   ```bash
   git clone https://github.com/infiniflow/ragflow.git
   cd ragflow/
   uv sync --python 3.10 --all-extras # install RAGFlow dependent python modules
   uv run download_deps.py
   pre-commit install
   ```

3. Launch the dependent services (MinIO, Elasticsearch, Redis, and MySQL) using Docker Compose:

   ```bash
   docker compose -f docker/docker-compose-base.yml up -d
   ```

   Add the following line to `/etc/hosts` to resolve all hosts specified in **docker/.env** to `127.0.0.1`:

   ```
   127.0.0.1       es01 infinity mysql minio redis
   ```

4. If you cannot access HuggingFace, set the `HF_ENDPOINT` environment variable to use a mirror site:

   ```bash
   export HF_ENDPOINT=https://hf-mirror.com
   ```

5. Launch backend service:

   ```bash
   source .venv/bin/activate
   export PYTHONPATH=$(pwd)
   bash docker/launch_backend_service.sh
   ```

6. Install frontend dependencies:
   ```bash
   cd web
   npm install
   ```
7. Launch frontend service:

   ```bash
   npm run dev
   ```

   _The following output confirms a successful launch of the system:_

   ![](https://github.com/user-attachments/assets/0daf462c-a24d-4496-a66f-92533534e187)

## üìö Documentation

- [Quickstart](https://ragflow.io/docs/dev/)
- [Configuration](https://ragflow.io/docs/dev/configurations)
- [Release notes](https://ragflow.io/docs/dev/release_notes)
- [User guides](https://ragflow.io/docs/dev/category/guides)
- [Developer guides](https://ragflow.io/docs/dev/category/developers)
- [References](https://ragflow.io/docs/dev/category/references)
- [FAQs](https://ragflow.io/docs/dev/faq)

## üìú Roadmap

See the [RAGFlow Roadmap 2025](https://github.com/infiniflow/ragflow/issues/4214)

## üèÑ Community

- [Discord](https://discord.gg/NjYzJD3GM3)
- [Twitter](https://twitter.com/infiniflowai)
- [GitHub Discussions](https://github.com/orgs/infiniflow/discussions)

## üôå Contributing

RAGFlow flourishes via open-source collaboration. In this spirit, we embrace diverse contributions from the community.
If you would like to be a part, review our [Contribution Guidelines](./CONTRIBUTING.md) first.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[dataelement/bisheng]]></title>
            <link>https://github.com/dataelement/bisheng</link>
            <guid>https://github.com/dataelement/bisheng</guid>
            <pubDate>Fri, 09 May 2025 00:04:52 GMT</pubDate>
            <description><![CDATA[BISHENG is an open LLM devops platform for next generation Enterprise AI applications. Powerful and comprehensive features include: GenAI workflow, RAG, Agent, Unified model management, Evaluation, SFT, Dataset Management, Enterprise-level System Management, Observability and more.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/dataelement/bisheng">dataelement/bisheng</a></h1>
            <p>BISHENG is an open LLM devops platform for next generation Enterprise AI applications. Powerful and comprehensive features include: GenAI workflow, RAG, Agent, Unified model management, Evaluation, SFT, Dataset Management, Enterprise-level System Management, Observability and more.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 8,324</p>
            <p>Forks: 1,375</p>
            <p>Stars today: 11 stars today</p>
            <h2>README</h2><pre>**Proudly made by ChineseÔºåMay we, like the creators of Deepseek and Black Myth: Wukong, bring more wonder and greatness to the world.**

&gt; Ê∫êËá™‰∏≠ÂõΩÂå†ÂøÉÔºåÂ∏åÊúõÊàë‰ª¨ËÉΩÂÉè [Deepseek]„ÄÅ[ÈªëÁ•ûËØùÔºöÊÇüÁ©∫] Âõ¢Èòü‰∏ÄÊ†∑ÔºåÁªô‰∏ñÁïåÂ∏¶Êù•Êõ¥Â§öÁæéÂ•Ω„ÄÇ

&lt;img src=&quot;https://dataelem.com/bs/face.png&quot; alt=&quot;Bisheng banner&quot;&gt;

&lt;p align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://dataelem.feishu.cn/wiki/ZxW6wZyAJicX4WkG0NqcWsbynde&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/docs-Wiki-brightgreen&quot;&gt;&lt;/a&gt;
    &lt;img src=&quot;https://img.shields.io/github/license/dataelement/bisheng&quot; alt=&quot;license&quot;/&gt;
    &lt;a href=&quot;&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/last-commit/dataelement/bisheng&quot;&gt;&lt;/a&gt;
    &lt;a href=&quot;https://star-history.com/#dataelement/bisheng&amp;Timeline&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/dataelement/bisheng?color=yellow&quot;&gt;&lt;/a&gt; 
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;./README_CN.md&quot;&gt;ÁÆÄ‰Ωì‰∏≠Êñá&lt;/a&gt; |
  &lt;a href=&quot;./README.md&quot;&gt;English&lt;/a&gt; |
  &lt;a href=&quot;./README_JPN.md&quot;&gt;Êó•Êú¨Ë™û&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://trendshift.io/repositories/717&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://trendshift.io/api/badge/repositories/717&quot; alt=&quot;dataelement%2Fbisheng | Trendshift&quot; style=&quot;width: 250px; height: 55px;&quot; width=&quot;250&quot; height=&quot;55&quot;/&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;div class=&quot;column&quot; align=&quot;middle&quot;&gt;
  &lt;!-- &lt;a href=&quot;https://bisheng.slack.com/join/shared_invite/&quot;&gt; --&gt;
    &lt;!-- &lt;img src=&quot;https://img.shields.io/badge/Join-Slack-orange&quot; alt=&quot;join-slack&quot;/&gt; --&gt;
  &lt;/a&gt;
  &lt;!-- &lt;img src=&quot;https://img.shields.io/github/license/bisheng-io/bisheng&quot; alt=&quot;license&quot;/&gt; --&gt;
  &lt;!-- &lt;img src=&quot;https://img.shields.io/docker/pulls/bisheng-io/bisheng&quot; alt=&quot;docker-pull-count&quot; /&gt; --&gt;
&lt;/div&gt;


BISHENG is an open LLM application devops platform, focusing on enterprise scenarios. It has been used by a large number of industry leading organizations and Fortune 500 companies.

&quot;Bi Sheng&quot; was the inventor of movable type printing, which played a vital role in promoting the transmission of human knowledge. We hope that BISHENG can also provide strong support for the widespread implementation of intelligent applications. Everyone is welcome to participate.


## Features 
1. Unique [BISHENG Workflow](https://dataelem.feishu.cn/wiki/R7HZwH5ZGiJUDrkHZXicA9pInif)
   - üß© **Independent and comprehensive application orchestration framework**: Enables the execution of various tasks within a single framework (while similar products rely on bot invocation or separate chatflow and workflow modules for different tasks).
   - üîÑ **Human in the loop**: Allows users to intervene and provide feedback during the execution of workflows (including multi-turn conversations), whereas similar products can only execute workflows from start to finish without intervention.
   - üí• **Powerful**: Supports loops, parallelism, batch processing, conditional logic, and free combination of all logic components. It also handles complex scenarios such as multi-type input/output, report generation, content review, and more.
   - üñêÔ∏è **User-friendly and intuitive**: Operations like loops, parallelism, and batch processing, which require specialized components in similar products, can be easily visualized in BISHENG as a &quot;flowchart&quot; (drawing a loop forms a loop, aligning elements creates parallelism, and selecting multiple items enables batch processing).
   &lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;https://dataelem.com/bs/bisheng_workflow.png&quot; alt=&quot;sence0&quot;&gt;&lt;/p&gt;

2. &lt;b&gt;Designed for Enterprise Applications&lt;/b&gt;: Document review, fixed-layout report generation, multi-agent collaboration, policy update comparison, support ticket assistance, customer service assistance, meeting minutes generation, resume screening, call record analysis, unstructured data governance, knowledge mining, data analysis, and more. 

‚Äã	The platform supports the construction of &lt;b&gt;highly complex enterprise application scenarios&lt;/b&gt; and offers &lt;b&gt;deep optimization&lt;/b&gt; 	with hundreds of components and thousands of parameters.
&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;https://dataelem.com/bs/chat.png&quot; alt=&quot;sence1&quot;&gt;&lt;/p&gt;

3. &lt;b&gt;Enterprise-grade&lt;/b&gt; features are the fundamental guarantee for application implementation: security review, RBAC, user group management, traffic control by group, SSO/LDAP, vulnerability scanning and patching, high availability deployment solutions, monitoring, statistics, and more.
&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;https://dataelem.com/bs/pro.png&quot; alt=&quot;sence2&quot;&gt;&lt;/p&gt;

4. &lt;b&gt;High-Precision Document Parsing&lt;/b&gt;: Our high-precision document parsing model is trained on a vast amount of high-quality data accumulated over past 5 years. It includes high-precision printed text, handwritten text, and rare character recognition models, table recognition models, layout analysis models, and seal models., table recognition models, layout analysis models, and seal models. You can deploy it privately for free.
&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;https://dataelem.com/bs/ocr.png&quot; alt=&quot;sence3&quot;&gt;&lt;/p&gt;

5. A community for sharing best practices across various enterprise scenarios: An open repository of application cases and best practices.
## Quick start 

Please ensure the following conditions are met before installing BISHENG:
- CPU &gt;= 4 Virtual Cores
- RAM &gt;= 16 GB
- Docker 19.03.9+
- Docker Compose 1.25.1+
&gt; Recommended hardware condition: 18 virtual cores, 48G. In addition to installing BISHENG, we will also install the following third-party components by default: ES, Milvus, and Onlyoffice.

Download BISHENG
```bash
git clone https://github.com/dataelement/bisheng.git
# Enter the installation directory
cd bisheng/docker

# If the system does not have the git command, you can download the BISHENG code as a zip file.
wget https://github.com/dataelement/bisheng/archive/refs/heads/main.zip
# Unzip and enter the installation directory
unzip main.zip &amp;&amp; cd bisheng-main/docker
```
Start BISHENG
```bash
docker-compose up -d
```
After the startup is complete, access http://IP:3001 in the browser. The login page will appear, proceed with user registration. 

By default, the first registered user will become the system admin. 

For more installation and deployment issues, refer to:Ôºö[Self-hosting](https://dataelem.feishu.cn/wiki/BSCcwKd4Yiot3IkOEC8cxGW7nPc)

## Acknowledgement 
This repo benefits from [langchain](https://github.com/langchain-ai/langchain) [langflow](https://github.com/logspace-ai/langflow) [unstructured](https://github.com/Unstructured-IO/unstructured) and [LLaMA-Factory](https://github.com/hiyouga/LLaMA-Factory) . Thanks for their wonderful works.

&lt;b&gt;Thank you to our contributorsÔºö&lt;/b&gt;

&lt;a href=&quot;https://github.com/dataelement/bisheng/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=dataelement/bisheng&quot; /&gt;
&lt;/a&gt;



## Community &amp; contact 
Welcome to join our discussion group

&lt;img src=&quot;https://www.dataelem.com/nstatic/qrcode.png&quot; alt=&quot;Wechat QR Code&quot;&gt;


&lt;!--
## Star History

[![Star History Chart](https://api.star-history.com/svg?repos=dataelement/bisheng&amp;type=Date)](https://star-history.com/#dataelement/bisheng&amp;Date)
--&gt;
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[FellouAI/eko]]></title>
            <link>https://github.com/FellouAI/eko</link>
            <guid>https://github.com/FellouAI/eko</guid>
            <pubDate>Fri, 09 May 2025 00:04:51 GMT</pubDate>
            <description><![CDATA[Eko (Eko Keeps Operating) - Build Production-ready Agentic Workflow with Natural Language - eko.fellou.ai]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/FellouAI/eko">FellouAI/eko</a></h1>
            <p>Eko (Eko Keeps Operating) - Build Production-ready Agentic Workflow with Natural Language - eko.fellou.ai</p>
            <p>Language: TypeScript</p>
            <p>Stars: 3,343</p>
            <p>Forks: 245</p>
            <p>Stars today: 30 stars today</p>
            <h2>README</h2><pre>


&lt;h1 align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/FellouAI/eko&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;https://github.com/user-attachments/assets/55dbdd6c-2b08-4e5f-a841-8fea7c2a0b92&quot; alt=&quot;eko-logo&quot; width=&quot;200&quot; height=&quot;200&quot;&gt;
  &lt;/a&gt;
  &lt;br&gt;
  &lt;small&gt;Eko - Build Production-ready Agentic Workflow with Natural Language&lt;/small&gt;
&lt;/h1&gt;



[![License](https://img.shields.io/badge/license-MIT-blue.svg)](LICENSE) [![Build Status](https://img.shields.io/badge/build-passing-brightgreen.svg)](https://example.com/build-status) [![Version](https://img.shields.io/github/package-json/v/FellouAI/eko?color=yellow)](https://eko.fellou.ai/docs/release/versions/)

Eko (pronounced like ‚Äòecho‚Äô) is a production-ready JavaScript framework that enables developers to create reliable agents, **from simple commands to complex workflows**. It provides a unified interface for running agents in both **computer and browser environments**.

# Framework Comparison

| Feature                              | Eko   | Langchain  | Browser-use  | Dify.ai  | Coze   |
|--------------------------------------|-------|------------|--------------|----------|--------|
| **Supported Platform**               | **All platform**  | Server side  | Browser  | Web  | Web  |
| **One sentence to multi-step workflow** | ‚úÖ    | ‚ùå          | ‚úÖ            | ‚ùå        | ‚ùå      |
| **Intervenability**                  | ‚úÖ    | ‚úÖ          | ‚ùå            | ‚ùå        | ‚ùå      | 
| **Development Efficiency**           | **High**  | Low      | Middle        | Middle    | Low    | 
| **Task Complexity**           | **High**  | High      | Low        | Middle    | Middle    | Middle       |
| **Open-source**                      | ‚úÖ    | ‚úÖ          | ‚úÖ            | ‚úÖ        | ‚ùå      |
| **Access to private web resources** | ‚úÖ | ‚ùå          | ‚ùå            | ‚ùå        | ‚ùå      |

## Quickstart

```bash
npm install @eko-ai/eko
```

&gt; Important Notice: The following example code cannot be executed directly. Please refer to the [Eko Quickstart guide](https://eko.fellou.ai/docs/getting-started/quickstart/) guide for instructions on how to run it.

```typescript
import { Eko } from &#039;@eko-ai/eko&#039;;

const eko = new Eko({
  apiKey: &#039;your_anthropic_api_key&#039;,
});

// Example: Browser automation
const extWorkflow = await eko.generate(&quot;Search for &#039;Eko framework&#039; on Google and save the first result&quot;);
await eko.execute(extWorkflow);

// Example: System operation
const sysWorkflow = await eko.generate(&quot;Create a new folder named &#039;reports&#039; and move all PDF files there&quot;);
await eko.execute(sysWorkflow);

```

## Demos

**Prompt:** `Collect the latest NASDAQ data on Yahoo Finance, including price changes, market capitalization, trading volume of major stocks, analyze the data and generate visualization reports`.

https://github.com/user-attachments/assets/4087b370-8eb8-4346-a549-c4ce4d1efec3

Click [here](https://github.com/FellouAI/eko-demos/tree/main/browser-extension-stock) to get the source code.

---

**Prompt:** `Based on the README of FellouAI/eko on github, search for competitors, highlight the key contributions of Eko, write a blog post advertising Eko, and post it on Write.as.`

https://github.com/user-attachments/assets/6feaea86-2fb9-4e5c-b510-479c2473d810

Click [here](https://github.com/FellouAI/eko-demos/tree/main/browser-extension-blog) to get the source code.

---

**Prompt:** `Clean up all files in the current directory larger than 1MB`

https://github.com/user-attachments/assets/ef7feb58-3ddd-4296-a1de-bb8b6c66e48b

Click [here](https://eko.fellou.ai/docs/computeruse/computer-node/#example-file-cleanup-workflow) to Learn more.

---

**Prompt:** Automatic software testing
```
    Current login page automation test:
    1. Correct account and password are: admin / 666666 
    2. Please randomly combine usernames and passwords for testing to verify if login validation works properly, such as: username cannot be empty, password cannot be empty, incorrect username, incorrect password
    3. Finally, try to login with the correct account and password to verify if login is successful
    4. Generate test report and export
```

https://github.com/user-attachments/assets/7716300a-c51d-41f1-8d4f-e3f593c1b6d5


Click [here](https://eko.fellou.ai/docs/browseruse/browser-web#example-login-automation-testing) to Learn more.

## Use Cases

- Browser automation and web scraping
- System file and process management
- Workflow automation
- Data processing and organization
- GUI automation
- Multi-step task orchestration

## Documentation

Visit our [documentation site](https://eko.fellou.ai/docs) for:

- Getting started guide
- API reference
- Usage examples
- Best practices
- Configuration options

## Development Environments

Eko can be used in multiple environments:

- Browser Extension
- Web Applications
- Node.js Applications

## Community and Support

- Report issues on [GitHub Issues](https://github.com/FellouAI/eko/issues)
- Join our [slack community discussions](https://join.slack.com/t/eko-ai/shared_invite/zt-2xhvkudv9-nHvD1g8Smp227sM51x_Meg)
- Join our [Discard](https://discord.gg/XpFfk2e5):
![](discard.png)
- Contribute tools and improvements
- Share your use cases and feedback

[![Star History Chart](https://api.star-history.com/svg?repos=FellouAI/eko&amp;type=Date)](https://star-history.com/#FellouAI/eko&amp;Date)

## License

Eko is released under the MIT License. See the [LICENSE](LICENSE) file for details.

</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[typeorm/typeorm]]></title>
            <link>https://github.com/typeorm/typeorm</link>
            <guid>https://github.com/typeorm/typeorm</guid>
            <pubDate>Fri, 09 May 2025 00:04:50 GMT</pubDate>
            <description><![CDATA[ORM for TypeScript and JavaScript. Supports MySQL, PostgreSQL, MariaDB, SQLite, MS SQL Server, Oracle, SAP Hana, WebSQL databases. Works in NodeJS, Browser, Ionic, Cordova and Electron platforms.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/typeorm/typeorm">typeorm/typeorm</a></h1>
            <p>ORM for TypeScript and JavaScript. Supports MySQL, PostgreSQL, MariaDB, SQLite, MS SQL Server, Oracle, SAP Hana, WebSQL databases. Works in NodeJS, Browser, Ionic, Cordova and Electron platforms.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 35,294</p>
            <p>Forks: 6,401</p>
            <p>Stars today: 8 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;http://typeorm.io/&quot;&gt;
    &lt;picture&gt;
        &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://github.com/typeorm/typeorm/raw/master/resources/typeorm-logo-colored-light.png&quot;&gt;
        &lt;source  media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://github.com/typeorm/typeorm/raw/master/resources/typeorm-logo-colored-dark.png&quot;&gt;
        &lt;img height=&quot;80&quot; width=&quot;auto&quot; alt=&quot;TypeORM Logo&quot; src=&quot;https://github.com/typeorm/typeorm/raw/master/resources/typeorm-logo-colored-dark.png&quot;&gt;
    &lt;/picture&gt;
  &lt;/a&gt;
  &lt;br&gt;
  &lt;br&gt;
	&lt;a href=&quot;https://github.com/typeorm/typeorm/actions/workflows/test.yml&quot;&gt;
		&lt;img src=&quot;https://github.com/typeorm/typeorm/actions/workflows/test.yml/badge.svg?branch=master&quot;&gt;
	&lt;/a&gt;
	&lt;a href=&quot;https://badge.fury.io/js/typeorm&quot;&gt;
		&lt;img src=&quot;https://badge.fury.io/js/typeorm.svg&quot;&gt;
	&lt;/a&gt;
    &lt;a href=&#039;https://coveralls.io/github/typeorm/typeorm?branch=master&#039;&gt;
        &lt;img src=&#039;https://coveralls.io/repos/github/typeorm/typeorm/badge.svg?branch=master&#039; alt=&#039;Coverage Status&#039; /&gt;
    &lt;/a&gt;
  &lt;br&gt;
  &lt;br&gt;
&lt;/div&gt;

TypeORM is an [ORM](https://en.wikipedia.org/wiki/Object-relational_mapping)
that can run in NodeJS, Browser, Cordova, PhoneGap, Ionic, React Native, NativeScript, Expo, and Electron platforms
and can be used with TypeScript and JavaScript (ES2021).
Its goal is to always support the latest JavaScript features and provide additional features
that help you to develop any kind of application that uses databases - from
small applications with a few tables to large-scale enterprise applications
with multiple databases.

TypeORM supports both [Active Record](./docs/active-record-data-mapper.md#what-is-the-active-record-pattern) and [Data Mapper](./docs/active-record-data-mapper.md#what-is-the-data-mapper-pattern) patterns,
unlike all other JavaScript ORMs currently in existence,
which means you can write high-quality, loosely coupled, scalable,
maintainable applications in the most productive way.

TypeORM is highly influenced by other ORMs, such as [Hibernate](http://hibernate.org/orm/),
[Doctrine](http://www.doctrine-project.org/) and [Entity Framework](https://www.asp.net/entity-framework).

## Features

-   Supports both [DataMapper](./docs/active-record-data-mapper.md#what-is-the-data-mapper-pattern) and [ActiveRecord](./docs/active-record-data-mapper.md#what-is-the-active-record-pattern) (your choice).
-   Entities and columns.
-   Database-specific column types.
-   Entity manager.
-   Repositories and custom repositories.
-   Clean object-relational model.
-   Associations (relations).
-   Eager and lazy relations.
-   Uni-directional, bi-directional, and self-referenced relations.
-   Supports multiple inheritance patterns.
-   Cascades.
-   Indices.
-   Transactions.
-   Migrations and automatic migrations generation.
-   Connection pooling.
-   Replication.
-   Using multiple database instances.
-   Working with multiple database types.
-   Cross-database and cross-schema queries.
-   Elegant-syntax, flexible and powerful QueryBuilder.
-   Left and inner joins.
-   Proper pagination for queries using joins.
-   Query caching.
-   Streaming raw results.
-   Logging.
-   Listeners and subscribers (hooks).
-   Supports closure table pattern.
-   Schema declaration in models or separate configuration files.
-   Supports MySQL / MariaDB / Postgres / CockroachDB / SQLite / Microsoft SQL Server / Oracle / SAP Hana / sql.js.
-   Supports MongoDB NoSQL database.
-   Works in NodeJS / Browser / Ionic / Cordova / React Native / NativeScript / Expo / Electron platforms.
-   TypeScript and JavaScript support.
-   ESM and CommonJS support.
-   Produced code is performant, flexible, clean, and maintainable.
-   Follows all possible best practices.
-   CLI.

And more...

With TypeORM your models look like this:

```typescript
import { Entity, PrimaryGeneratedColumn, Column } from &quot;typeorm&quot;

@Entity()
export class User {
    @PrimaryGeneratedColumn()
    id: number

    @Column()
    firstName: string

    @Column()
    lastName: string

    @Column()
    age: number
}
```

And your domain logic looks like this:

```typescript
const userRepository = MyDataSource.getRepository(User)

const user = new User()
user.firstName = &quot;Timber&quot;
user.lastName = &quot;Saw&quot;
user.age = 25
await userRepository.save(user)

const allUsers = await userRepository.find()
const firstUser = await userRepository.findOneBy({
    id: 1,
}) // find by id
const timber = await userRepository.findOneBy({
    firstName: &quot;Timber&quot;,
    lastName: &quot;Saw&quot;,
}) // find by firstName and lastName

await userRepository.remove(timber)
```

Alternatively, if you prefer to use the `ActiveRecord` implementation, you can use it as well:

```typescript
import { Entity, PrimaryGeneratedColumn, Column, BaseEntity } from &quot;typeorm&quot;

@Entity()
export class User extends BaseEntity {
    @PrimaryGeneratedColumn()
    id: number

    @Column()
    firstName: string

    @Column()
    lastName: string

    @Column()
    age: number
}
```

And your domain logic will look this way:

```typescript
const user = new User()
user.firstName = &quot;Timber&quot;
user.lastName = &quot;Saw&quot;
user.age = 25
await user.save()

const allUsers = await User.find()
const firstUser = await User.findOneBy({
    id: 1,
})
const timber = await User.findOneBy({
    firstName: &quot;Timber&quot;,
    lastName: &quot;Saw&quot;
})

await timber.remove()
```

## Installation

1. Install the npm package:

    `npm install typeorm --save`

2. You need to install `reflect-metadata` shim:

    `npm install reflect-metadata --save`

    and import it somewhere in the global place of your app (for example in `app.ts`):

    `import &quot;reflect-metadata&quot;`

3. You may need to install node typings:

    `npm install @types/node --save-dev`

4. Install a database driver:

    - for **MySQL** or **MariaDB**

        `npm install mysql --save` (you can install `mysql2` instead as well)

    - for **PostgreSQL** or **CockroachDB**

        `npm install pg --save`

    - for **SQLite**

        `npm install sqlite3 --save`

    - for **Microsoft SQL Server**

        `npm install mssql --save`

    - for **sql.js**

        `npm install sql.js --save`

    - for **Oracle**

        `npm install oracledb --save`

        To make the Oracle driver work, you need to follow the installation instructions from
        [their](https://github.com/oracle/node-oracledb) site.

    - for **SAP Hana**

        ```
        npm install @sap/hana-client
        npm install hdb-pool
        ```

        _SAP Hana support made possible by the sponsorship of [Neptune Software](https://www.neptune-software.com/)._

    - for **Google Cloud Spanner**

        ```
        npm install @google-cloud/spanner --save
        ```

        Provide authentication credentials to your application code
        by setting the environment variable `GOOGLE_APPLICATION_CREDENTIALS`:

        ```shell
        # Linux/macOS
        export GOOGLE_APPLICATION_CREDENTIALS=&quot;KEY_PATH&quot;

        # Windows
        set GOOGLE_APPLICATION_CREDENTIALS=KEY_PATH

        # Replace KEY_PATH with the path of the JSON file that contains your service account key.
        ```

        To use Spanner with the emulator you should set `SPANNER_EMULATOR_HOST` environment variable:

        ```shell
        # Linux/macOS
        export SPANNER_EMULATOR_HOST=localhost:9010

        # Windows
        set SPANNER_EMULATOR_HOST=localhost:9010
        ```

    - for **MongoDB** (experimental)

        `npm install mongodb@^5.2.0 --save`

    - for **NativeScript**, **react-native** and **Cordova**

        Check [documentation of supported platforms](./docs/supported-platforms.md)

    Install only _one_ of them, depending on which database you use.

##### TypeScript configuration

Also, make sure you are using TypeScript version **4.5** or higher,
and you have enabled the following settings in `tsconfig.json`:

```json
&quot;emitDecoratorMetadata&quot;: true,
&quot;experimentalDecorators&quot;: true,
```

You may also need to enable `es6` in the `lib` section of compiler options, or install `es6-shim` from `@types`.

## Quick Start

The quickest way to get started with TypeORM is to use its CLI commands to generate a starter project.
Quick start works only if you are using TypeORM in a NodeJS application.
If you are using other platforms, proceed to the [step-by-step guide](#step-by-step-guide).

To create a new project using CLI, run the following command:

```shell
npx typeorm init --name MyProject --database postgres
```

Where `name` is the name of your project and `database` is the database you&#039;ll use.
Database can be one of the following values: `mysql`, `mariadb`, `postgres`, `cockroachdb`, `sqlite`, `mssql`, `sap`, `spanner`, `oracle`, `mongodb`,
`cordova`, `react-native`, `expo`, `nativescript`.

This command will generate a new project in the `MyProject` directory with the following files:

```
MyProject
‚îú‚îÄ‚îÄ src                   // place of your TypeScript code
‚îÇ   ‚îú‚îÄ‚îÄ entity            // place where your entities (database models) are stored
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ User.ts       // sample entity
‚îÇ   ‚îú‚îÄ‚îÄ migration         // place where your migrations are stored
‚îÇ   ‚îú‚îÄ‚îÄ data-source.ts    // data source and all connection configuration
‚îÇ   ‚îî‚îÄ‚îÄ index.ts          // start point of your application
‚îú‚îÄ‚îÄ .gitignore            // standard gitignore file
‚îú‚îÄ‚îÄ package.json          // node module dependencies
‚îú‚îÄ‚îÄ README.md             // simple readme file
‚îî‚îÄ‚îÄ tsconfig.json         // TypeScript compiler options
```

&gt; You can also run `typeorm init` on an existing node project, but be careful - it may override some files you already have.

The next step is to install new project dependencies:

```shell
cd MyProject
npm install
```

After you have all dependencies installed, edit the `data-source.ts` file and put your own database connection configuration options in there:

```ts
export const AppDataSource = new DataSource({
    type: &quot;postgres&quot;,
    host: &quot;localhost&quot;,
    port: 5432,
    username: &quot;test&quot;,
    password: &quot;test&quot;,
    database: &quot;test&quot;,
    synchronize: true,
    logging: true,
    entities: [Post, Category],
    subscribers: [],
    migrations: [],
})
```

Particularly, most of the time you&#039;ll only need to configure
`host`, `username`, `password`, `database` and maybe `port` options.

Once you finish with configuration and all node modules are installed, you can run your application:

```shell
npm start
```

That&#039;s it, your application should successfully run and insert a new user into the database.
You can continue to work with this project and integrate other modules you need and start
creating more entities.

&gt; You can generate an ESM project by running
&gt; `npx typeorm init --name MyProject --database postgres --module esm` command.

&gt; You can generate an even more advanced project with express installed by running
&gt; `npx typeorm init --name MyProject --database mysql --express` command.

&gt; You can generate a docker-compose file by running
&gt; `npx typeorm init --name MyProject --database postgres --docker` command.

## Step-by-Step Guide

What are you expecting from ORM?
First of all, you are expecting it will create database tables for you
and find / insert / update / delete your data without the pain of
having to write lots of hardly maintainable SQL queries.
This guide will show you how to set up TypeORM from scratch and make it do what you are expecting from an ORM.

### Create a model

Working with a database starts with creating tables.
How do you tell TypeORM to create a database table?
The answer is - through the models.
Your models in your app are your database tables.

For example, you have a `Photo` model:

```typescript
export class Photo {
    id: number
    name: string
    description: string
    filename: string
    views: number
    isPublished: boolean
}
```

And you want to store photos in your database.
To store things in the database, first, you need a database table,
and database tables are created from your models.
Not all models, but only those you define as _entities_.

### Create an entity

_Entity_ is your model decorated by an `@Entity` decorator.
A database table will be created for such models.
You work with entities everywhere in TypeORM.
You can load/insert/update/remove and perform other operations with them.

Let&#039;s make our `Photo` model an entity:

```typescript
import { Entity } from &quot;typeorm&quot;

@Entity()
export class Photo {
    id: number
    name: string
    description: string
    filename: string
    views: number
    isPublished: boolean
}
```

Now, a database table will be created for the `Photo` entity and we&#039;ll be able to work with it anywhere in our app.
We have created a database table, however, what table can exist without columns?
Let&#039;s create a few columns in our database table.

### Adding table columns

To add database columns, you simply need to decorate an entity&#039;s properties you want to make into a column
with a `@Column` decorator.

```typescript
import { Entity, Column } from &quot;typeorm&quot;

@Entity()
export class Photo {
    @Column()
    id: number

    @Column()
    name: string

    @Column()
    description: string

    @Column()
    filename: string

    @Column()
    views: number

    @Column()
    isPublished: boolean
}
```

Now `id`, `name`, `description`, `filename`, `views`, and `isPublished` columns will be added to the `photo` table.
Column types in the database are inferred from the property types you used, e.g.
`number` will be converted into `integer`, `string` into `varchar`, `boolean` into `bool`, etc.
But you can use any column type your database supports by explicitly specifying a column type into the `@Column` decorator.

We generated a database table with columns, but there is one thing left.
Each database table must have a column with a primary key.

### Creating a primary column

Each entity **must** have at least one primary key column.
This is a requirement and you can&#039;t avoid it.
To make a column a primary key, you need to use the `@PrimaryColumn` decorator.

```typescript
import { Entity, Column, PrimaryColumn } from &quot;typeorm&quot;

@Entity()
export class Photo {
    @PrimaryColumn()
    id: number

    @Column()
    name: string

    @Column()
    description: string

    @Column()
    filename: string

    @Column()
    views: number

    @Column()
    isPublished: boolean
}
```

### Creating an auto-generated column

Now, let&#039;s say you want your id column to be auto-generated (this is known as auto-increment / sequence / serial / generated identity column).
To do that, you need to change the `@PrimaryColumn` decorator to a `@PrimaryGeneratedColumn` decorator:

```typescript
import { Entity, Column, PrimaryGeneratedColumn } from &quot;typeorm&quot;

@Entity()
export class Photo {
    @PrimaryGeneratedColumn()
    id: number

    @Column()
    name: string

    @Column()
    description: string

    @Column()
    filename: string

    @Column()
    views: number

    @Column()
    isPublished: boolean
}
```

### Column data types

Next, let&#039;s fix our data types. By default, the string is mapped to a varchar(255)-like type (depending on the database type).
The number is mapped to an integer-like type (depending on the database type).
We don&#039;t want all our columns to be limited varchars or integers.
Let&#039;s setup the correct data types:

```typescript
import { Entity, Column, PrimaryGeneratedColumn } from &quot;typeorm&quot;

@Entity()
export class Photo {
    @PrimaryGeneratedColumn()
    id: number

    @Column({
        length: 100,
    })
    name: string

    @Column(&quot;text&quot;)
    description: string

    @Column()
    filename: string

    @Column(&quot;double&quot;)
    views: number

    @Column()
    isPublished: boolean
}
```

Column types are database-specific.
You can set any column type your database supports.
More information on supported column types can be found [here](./docs/entities.md#column-types).

### Creating a new `DataSource`

Now, when our entity is created, let&#039;s create `index.ts` file and set up our `DataSource` there:

```typescript
import &quot;reflect-metadata&quot;
import { DataSource } from &quot;typeorm&quot;
import { Photo } from &quot;./entity/Photo&quot;

const AppDataSource = new DataSource({
    type: &quot;postgres&quot;,
    host: &quot;localhost&quot;,
    port: 5432,
    username: &quot;root&quot;,
    password: &quot;admin&quot;,
    database: &quot;test&quot;,
    entities: [Photo],
    synchronize: true,
    logging: false,
})

// to initialize the initial connection with the database, register all entities
// and &quot;synchronize&quot; database schema, call &quot;initialize()&quot; method of a newly created database
// once in your application bootstrap
AppDataSource.initialize()
    .then(() =&gt; {
        // here you can start to work with your database
    })
    .catch((error) =&gt; console.log(error))
```

We are using Postgres in this example, but you can use any other supported database.
To use another database, simply change the `type` in the options to the database type you are using:
`mysql`, `mariadb`, `postgres`, `cockroachdb`, `sqlite`, `mssql`, `oracle`, `sap`, `spanner`, `cordova`, `nativescript`, `react-native`,
`expo`, or `mongodb`.
Also make sure to use your own host, port, username, password, and database settings.

We added our Photo entity to the list of entities for this data source.
Each entity you are using in your connection must be listed there.

Setting `synchronize` makes sure your entities will be synced with the database, every time you run the application.

### Running the application

Now if you run your `index.ts`, a connection with the database will be initialized and a database table for your photos will be created.

```shell
+-------------+--------------+----------------------------+
|                         photo                           |
+-------------+--------------+----------------------------+
| id          | int(11)      | PRIMARY KEY AUTO_INCREMENT |
| name        | varchar(100) |                            |
| description | text         |                            |
| filename    | varchar(255) |                            |
| views       | int(11)      |                            |
| isPublished | boolean      |                            |
+-------------+--------------+----------------------------+
```

### Creating and inserting a photo into the database

Now let&#039;s create a new photo to save it in the database:

```typescript
import { Photo } from &quot;./entity/Photo&quot;
import { AppDataSource } from &quot;./index&quot;

const photo = new Photo()
photo.name = &quot;Me and Bears&quot;
photo.description = &quot;I am near polar bears&quot;
photo.filename = &quot;photo-with-bears.jpg&quot;
photo.views = 1
photo.isPublished = true

await AppDataSource.manager.save(photo)
console.log(&quot;Photo has been saved. Photo id is&quot;, photo.id)
```

Once your entity is saved it will get a newly generated id.
`save` method returns an instance of the same object you pass to it.
It&#039;s not a new copy of the object, it modifies its &quot;id&quot; and returns it.

### Using Entity Manager

We just created a new photo and saved it in the database.
We used `EntityManager` to save it.
Using entity manager you can manipulate any entity in your app.
For example, let&#039;s load our saved entity:

```typescript
import { Photo } from &quot;./entity/Photo&quot;
import { AppDataSource } from &quot;./index&quot;

const savedPhotos = await AppDataSource.manager.find(Photo)
console.log(&quot;All photos from the db: &quot;, savedPhotos)
```

`savedPhotos` will be an array of Photo objects with the data loaded from the database.

Learn more about EntityManager [here](./docs/working-with-entity-manager.md).

### Using Repositories

Now let&#039;s refactor our code and use `Repository` instead of `EntityManager`.
Each entity has its own repository which handles all operations with its entity.
When you deal with entities a lot, Repositories are more convenient to use than EntityManagers:

```typescript
import { Photo } from &quot;./entity/Photo&quot;
import { AppDataSource } from &quot;./index&quot;

const photo = new Photo()
photo.name = &quot;Me and Bears&quot;
photo.description = &quot;I am near polar bears&quot;
photo.filename = &quot;photo-with-bears

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[cypress-io/cypress]]></title>
            <link>https://github.com/cypress-io/cypress</link>
            <guid>https://github.com/cypress-io/cypress</guid>
            <pubDate>Fri, 09 May 2025 00:04:49 GMT</pubDate>
            <description><![CDATA[Fast, easy and reliable testing for anything that runs in a browser.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/cypress-io/cypress">cypress-io/cypress</a></h1>
            <p>Fast, easy and reliable testing for anything that runs in a browser.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 48,598</p>
            <p>Forks: 3,285</p>
            <p>Stars today: 1 star today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.cypress.io&quot;&gt;
    &lt;picture&gt;
      &lt;source media=&quot;(prefers-color-scheme: dark)&quot;  srcset=&quot;./assets/cypress-logo-dark.png&quot;&gt;
      &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;./assets/cypress-logo-light.png&quot;&gt;
      &lt;img alt=&quot;Cypress Logo&quot; src=&quot;./assets/cypress-logo-light.png&quot;&gt;
    &lt;/picture&gt;    
  &lt;/a&gt;
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://on.cypress.io&quot;&gt;Documentation&lt;/a&gt; |
  &lt;a href=&quot;https://on.cypress.io/changelog&quot;&gt;Changelog&lt;/a&gt; |
  &lt;a href=&quot;https://on.cypress.io/roadmap&quot;&gt;Roadmap&lt;/a&gt;
&lt;/p&gt;

&lt;h3 align=&quot;center&quot;&gt;
  The web has evolved. Finally, testing has too.
&lt;/h3&gt;

&lt;p align=&quot;center&quot;&gt;
  Fast, easy and reliable testing for anything that runs in a browser.
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
  Join us, we&#039;re &lt;a href=&quot;https://cypress.io/jobs&quot;&gt;hiring&lt;/a&gt;.
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.npmjs.com/package/cypress&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/npm/dm/cypress.svg&quot; alt=&quot;npm&quot;/&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://gitter.im/cypress-io/cypress&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/gitter/room/cypress-io/cypress.svg&quot; alt=&quot;Gitter chat&quot;/&gt;
  &lt;/a&gt;
    &lt;a href=&quot;https://stackshare.io/cypress&quot;&gt;
    &lt;img src=&quot;https://img.stackshare.io/misc/follow-on-stackshare-badge.svg&quot; alt=&quot;StackShare&quot;/&gt;
  &lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;

## What is Cypress?

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://player.vimeo.com/video/237527670&quot;&gt;
    &lt;img alt=&quot;Why Cypress Video&quot; src=&quot;https://user-images.githubusercontent.com/1271364/31739717-dbdff0ee-b41c-11e7-9b16-bfa1b6ac1814.png&quot; width=&quot;75%&quot; height=&quot;75%&quot; /&gt;
  &lt;/a&gt;
&lt;/p&gt;

## Installing

[![npm version](https://badge.fury.io/js/cypress.svg)](https://badge.fury.io/js/cypress)

Install Cypress for Mac, Linux, or Windows, then [get started](https://on.cypress.io/install).

```bash
npm install cypress --save-dev
```
or
```bash
yarn add cypress --dev
```

![installing-cli e1693232](https://user-images.githubusercontent.com/1271364/31740846-7bf607f0-b420-11e7-855f-41c996040d31.gif)


## Contributing

- [![CircleCI](https://circleci.com/gh/cypress-io/cypress/tree/develop.svg?style=svg)](https://circleci.com/gh/cypress-io/cypress/tree/develop) - `develop` branch
- [![CircleCI](https://circleci.com/gh/cypress-io/cypress/tree/master.svg?style=svg)](https://circleci.com/gh/cypress-io/cypress/tree/master) - `master` branch

Please see our [Contributing Guideline](./CONTRIBUTING.md) which explains repo organization, linting, testing, and other steps.

## License

[![license](https://img.shields.io/badge/license-MIT-green.svg)](https://github.com/cypress-io/cypress/blob/master/LICENSE)

This project is licensed under the terms of the [MIT license](/LICENSE).

## Badges

Let the world know your project is using Cypress.io to test with this cool badge

[![Cypress.io](https://img.shields.io/badge/tested%20with-Cypress-04C38E.svg)](https://www.cypress.io/)

```
[![Cypress.io](https://img.shields.io/badge/tested%20with-Cypress-04C38E.svg)](https://www.cypress.io/)
```
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
    </channel>
</rss>