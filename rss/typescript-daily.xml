<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for typescript - TypeScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for typescript.</description>
        <lastBuildDate>Sat, 30 Aug 2025 00:04:33 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[Canner/WrenAI]]></title>
            <link>https://github.com/Canner/WrenAI</link>
            <guid>https://github.com/Canner/WrenAI</guid>
            <pubDate>Sat, 30 Aug 2025 00:04:33 GMT</pubDate>
            <description><![CDATA[‚ö°Ô∏è GenBI (Generative BI) queries any database in natural language, generates accurate SQL (Text-to-SQL), charts (Text-to-Chart), and AI-powered insights in seconds.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/Canner/WrenAI">Canner/WrenAI</a></h1>
            <p>‚ö°Ô∏è GenBI (Generative BI) queries any database in natural language, generates accurate SQL (Text-to-SQL), charts (Text-to-Chart), and AI-powered insights in seconds.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 10,751</p>
            <p>Forks: 1,089</p>
            <p>Stars today: 547 stars today</p>
            <h2>README</h2><pre>
&lt;p align=&quot;center&quot; id=&quot;top&quot;&gt;
  &lt;a href=&quot;https://getwren.ai/?utm_source=github&amp;utm_medium=title&amp;utm_campaign=readme&quot;&gt;
    &lt;picture&gt;
      &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;./misc/wrenai_logo.png&quot;&gt;
      &lt;img src=&quot;./misc/wrenai_logo_white.png&quot; width=&quot;300px&quot;&gt;
    &lt;/picture&gt;
    &lt;h1 align=&quot;center&quot;&gt;Wren AI - Open-Source GenBI Agent&lt;/h1&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a aria-label=&quot;Follow us on X&quot; href=&quot;https://x.com/getwrenai&quot;&gt;
    &lt;img alt=&quot;&quot; src=&quot;https://img.shields.io/badge/-@getwrenai-blue?style=for-the-badge&amp;logo=x&amp;logoColor=white&amp;labelColor=gray&amp;logoWidth=20&quot;&gt;
  &lt;/a&gt;
  &lt;a aria-label=&quot;Releases&quot; href=&quot;https://github.com/canner/WrenAI/releases&quot;&gt;
    &lt;img alt=&quot;&quot; src=&quot;https://img.shields.io/github/v/release/canner/WrenAI?logo=github&amp;label=GitHub%20Release&amp;color=blue&amp;style=for-the-badge&quot;&gt;
  &lt;/a&gt;
  &lt;a aria-label=&quot;License&quot; href=&quot;https://github.com/Canner/WrenAI/blob/main/LICENSE&quot;&gt;
    &lt;img alt=&quot;&quot; src=&quot;https://img.shields.io/github/license/canner/WrenAI?color=blue&amp;style=for-the-badge&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://docs.getwren.ai&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/docs-online-brightgreen?style=for-the-badge&quot; alt=&quot;Docs&quot;&gt;
  &lt;/a&gt;
  &lt;a aria-label=&quot;Join the community on GitHub&quot; href=&quot;https://discord.gg/5DvshJqG8Z&quot;&gt;
    &lt;img alt=&quot;&quot; src=&quot;https://img.shields.io/badge/-JOIN%20THE%20COMMUNITY-blue?style=for-the-badge&amp;logo=discord&amp;logoColor=white&amp;labelColor=grey&amp;logoWidth=20&quot;&gt;
  &lt;/a&gt;
  &lt;a aria-label=&quot;Canner&quot; href=&quot;https://cannerdata.com/?utm_source=github&amp;utm_medium=badge&amp;utm_campaign=readme&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/%F0%9F%A7%A1-Made%20by%20Canner-blue?style=for-the-badge&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://trendshift.io/repositories/9263&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://trendshift.io/api/badge/repositories/9263&quot; alt=&quot;Canner%2FWrenAI | Trendshift&quot; style=&quot;width: 250px; height: 55px;&quot; width=&quot;250&quot; height=&quot;55&quot;/&gt;&lt;/a&gt;
&lt;/p&gt;

&gt; Wren AI is your GenBI Agent, that you can query any database with natural language ‚Üí get accurate SQL(Text-to-SQL), charts(Text-to-Charts) &amp; AI-generated insights in seconds. ‚ö°Ô∏è

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;./misc/workflow.png&quot;&gt;
&lt;/p&gt;

## üòç Demos

https://github.com/user-attachments/assets/f9c1cb34-5a95-4580-8890-ec9644da4160

[Watch GenBI Demo](https://github.com/user-attachments/assets/90ad1d35-bb1e-490b-9676-b29863ff090b)

## ü§ñ Features

|                    | What you get | Why it matters |
|--------------------|--------------|----------------|
| **Talk to Your Data** | Ask in any language ‚Üí precise SQL &amp; answers | Slash the SQL learning curveÔªø |
| **GenBI Insights** | AI-written summaries, charts &amp; reports | Decision-ready context in one clickÔªø |
| **Semantic Layer** | MDL models encode schema, metrics, joins | Keeps LLM outputs accurate &amp; governedÔªø |
| **Embed via API**  | Generate queries &amp; charts inside your apps ([API Docs](https://wrenai.readme.io/reference/cloud-getting-started)) | Build custom agents, SaaS features, chatbotsÔªø ([Streamlit Live Demo](https://huggingface.co/spaces/getWrenAI/wrenai-cloud-api-demo)) |

ü§© [Learn more about GenBI](https://getwren.ai/genbi?utm_source=github&amp;utm_medium=content&amp;utm_campaign=readme)

## üöÄ Getting Started

Using Wren AI is super simple, you can set it up within 3 minutes, and start to interact with your data!

- Visit our [Install in your local environment](http://docs.getwren.ai/oss/installation?utm_source=github&amp;utm_medium=content&amp;utm_campaign=readme).
- Visit the [Usage Guides](https://docs.getwren.ai/oss/guide/connect/overview?utm_source=github&amp;utm_medium=content&amp;utm_campaign=readme) to learn more about how to use Wren AI.
- Or just start with [Wren AI Cloud](https://getwren.ai/?utm_source=github&amp;utm_medium=content&amp;utm_campaign=readme) our Managed Cloud Service. ([OSS vs. Commercial Plans](https://docs.getwren.ai/oss/overview/cloud_vs_self_host)).

## üèóÔ∏è Architecture

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;./misc/how_wrenai_works.png&quot;&gt;
&lt;/p&gt;

üëâ [Learn more about our Design](https://getwren.ai/post/how-we-design-our-semantic-engine-for-llms-the-backbone-of-the-semantic-layer-for-llm-architecture?utm_source=github&amp;utm_medium=content&amp;utm_campaign=readme)


## üîå Data Sources

If your data source is not listed here, vote for it in our [GitHub discussion thread](https://github.com/Canner/WrenAI/discussions/327). It will be a valuable input for us to decide on the next supported data sources.
- Athena (Trino)
- Redshift
- BigQuery
- DuckDB
- PostgreSQL
- MySQL
- Microsoft SQL Server
- ClickHouse
- Oracle
- Trino
- Snowflake

## ü§ñ LLM Models

Wren AI supports integration with various Large Language Models (LLMs), including but not limited to:
- OpenAI Models
- Azure OpenAI Models
- DeepSeek Models
- Google AI Studio ‚Äì Gemini Models
- Vertex AI Models (Gemini + Anthropic)
- Bedrock Models
- Anthropic API Models
- Groq Models
- Ollama Models
- Databricks Models

Check [configuration examples here](https://github.com/Canner/WrenAI/tree/main/wren-ai-service/docs/config_examples)!

&gt; [!CAUTION]
&gt; The performance of Wren AI depends significantly on the capabilities of the LLM you choose. We strongly recommend using the most powerful model available for optimal results. Using less capable models may lead to reduced performance, slower response times, or inaccurate outputs.

## üìö Documentation

Visit [Wren AI documentation](https://docs.getwren.ai/oss/overview/introduction?utm_source=github&amp;utm_medium=content&amp;utm_campaign=readme) to view the full documentation.

## üì™ Keep Posted?

[Subscribe our blog](https://www.getwren.ai/blog/?utm_source=github&amp;utm_medium=content&amp;utm_campaign=readme) and [Follow our LinkedIn](https://www.linkedin.com/company/wrenai)

## üõ†Ô∏è Contribution

1.	Star ‚≠ê the repo to show support (it really helps).
2.	Open an issue for bugs, ideas, or discussions.
3.	Read [Contribution Guidelines](https://github.com/Canner/WrenAI/blob/main/CONTRIBUTING.md) for setup &amp; PR guidelines.

## ‚≠êÔ∏è Community

- Join 1.3k+ developers in our [Discord](https://discord.gg/5DvshJqG8Z) for real-time help and roadmap previews.
- If there are any issues, please visit [GitHub Issues](https://github.com/Canner/WrenAI/issues).
- Explore our [public roadmap](https://wrenai.notion.site/) to stay updated on upcoming features and improvements!

Please note that our [Code of Conduct](./CODE_OF_CONDUCT.md) applies to all Wren AI community channels. Users are **highly encouraged** to read and adhere to them to avoid repercussions.

## üéâ Our Contributors
&lt;a href=&quot;https://github.com/canner/wrenAI/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=Canner/WrenAI&quot; /&gt;
&lt;/a&gt;

&lt;p align=&quot;right&quot;&gt;
  &lt;a href=&quot;#top&quot;&gt;‚¨ÜÔ∏è Back to Top&lt;/a&gt;
&lt;/p&gt;
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[humanlayer/humanlayer]]></title>
            <link>https://github.com/humanlayer/humanlayer</link>
            <guid>https://github.com/humanlayer/humanlayer</guid>
            <pubDate>Sat, 30 Aug 2025 00:04:32 GMT</pubDate>
            <description><![CDATA[HumanLayer enables AI agents to communicate with humans in tool-based and async workflows. Guarantee human oversight of high-stakes function calls with approval workflows across slack, email and more. Bring your LLM and Framework of choice and start giving your AI agents safe access to the world. Agentic Workflows, human in the loop, tool calling]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/humanlayer/humanlayer">humanlayer/humanlayer</a></h1>
            <p>HumanLayer enables AI agents to communicate with humans in tool-based and async workflows. Guarantee human oversight of high-stakes function calls with approval workflows across slack, email and more. Bring your LLM and Framework of choice and start giving your AI agents safe access to the world. Agentic Workflows, human in the loop, tool calling</p>
            <p>Language: TypeScript</p>
            <p>Stars: 1,472</p>
            <p>Forks: 143</p>
            <p>Stars today: 57 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;

![Wordmark Logo of HumanLayer](./docs/images/wordmark-light.svg)

&lt;/div&gt;

üöß **HumanLayer** is undergoing some changes...stay tuned! üöß

&lt;div align=&quot;center&quot;&gt;

&lt;h3&gt;

[HumanLayer Code](https://humanlayer.dev/code) | [Discord](https://humanlayer.dev/discord) | [Release](https://github.com/humanlayer/humanlayer/releases)


&lt;/h3&gt;

[![GitHub Repo stars](https://img.shields.io/github/stars/humanlayer/humanlayer)](https://github.com/humanlayer/humanlayer)
[![License: Apache-2](https://img.shields.io/badge/License-Apache-green.svg)](https://opensource.org/licenses/Apache-2)

&lt;img referrerpolicy=&quot;no-referrer-when-downgrade&quot; src=&quot;https://static.scarf.sh/a.png?x-pxid=fcfc0926-d841-47fb-b8a6-6aba3a6c3228&quot; /&gt;

&lt;/div&gt;

## Table of contents

- [Getting Started](#getting-started)
- [Why HumanLayer?](#why-humanlayer)
- [Key Features](#key-features)
- [Examples](#examples)
- [Roadmap](#roadmap)
- [Contributing](#contributing)
- [License](#license)

## Why HumanLayer?

Functions and tools are a key part of [Agentic Workflows](https://www.deeplearning.ai/the-batch/how-agents-can-improve-llm-performance). They enable LLMs to interact meaningfully with the outside world and automate broad scopes of impactful work. Correct and accurate function calling is essential for AI agents that do meaningful things like book appointments, interact with customers, manage billing information, write+execute code, and more.

[![Tool Calling Loop from Louis Dupont](https://miro.medium.com/v2/resize:fit:1400/format:webp/1*r8rEqjGZs_e6dibWeaqaQg.png)](https://louis-dupont.medium.com/transforming-software-interactions-with-tool-calling-and-llms-dc39185247e9)
_From https://louis-dupont.medium.com/transforming-software-interactions-with-tool-calling-and-llms-dc39185247e9_

**However**, the most useful functions we can give to an LLM are also the most risky. We can all imagine the value of an AI Database Administrator that constantly tunes and refactors our SQL database, but most teams wouldn&#039;t give an LLM access to run arbitrary SQL statements against a production database (heck, we mostly don&#039;t even let humans do that). That is:

&lt;div align=&quot;center&quot;&gt;
&lt;h3&gt;&lt;blockquote&gt;Even with state-of-the-art agentic reasoning and prompt routing, LLMs are not sufficiently reliable to be given access to high-stakes functions without human oversight&lt;/blockquote&gt;&lt;/h3&gt;
&lt;/div&gt;

To better define what is meant by &quot;high stakes&quot;, some examples:

- **Low Stakes**: Read Access to public data (e.g. search wikipedia, access public APIs and DataSets)
- **Low Stakes**: Communicate with agent author (e.g. an engineer might empower an agent to send them a private Slack message with updates on progress)
- **Medium Stakes**: Read Access to Private Data (e.g. read emails, access calendars, query a CRM)
- **Medium Stakes**: Communicate with strict rules (e.g. sending based on a specific sequence of hard-coded email templates)
- **High Stakes**: Communicate on my Behalf or on behalf of my Company (e.g. send emails, post to slack, publish social/blog content)
- **High Stakes**: Write Access to Private Data (e.g. update CRM records, modify feature toggles, update billing information)

&lt;div align=&quot;center&quot;&gt;&lt;img style=&quot;width: 600px&quot; alt=&quot;Image showing the levels of function stakes stacked on top of one another&quot; src=&quot;./docs/images/function_stakes.png&quot;&gt;&lt;/div&gt;

The high stakes functions are the ones that are the most valuable and promise the most impact in automating away human workflows. But they are also the ones where &quot;90% accuracy&quot; is not acceptable. Reliability is further impacted by today&#039;s LLMs&#039; tendency to hallucinate or craft low-quality text that is clearly AI generated. The sooner teams can get Agents reliably and safely calling these tools with high-quality inputs, the sooner they can reap massive benefits.

HumanLayer provides a set of tools to _deterministically_ guarantee human oversight of high stakes function calls. Even if the LLM makes a mistake or hallucinates, HumanLayer is baked into the tool/function itself, guaranteeing a human in the loop.

&lt;div align=&quot;center&quot;&gt;&lt;img style=&quot;width: 400px&quot; alt=&quot;HumanLayer @require_approval decorator wrapping the Commnicate on my behalf function&quot; src=&quot;./docs/images/humanlayer_require_approval.png&quot;&gt;&lt;/div&gt;

&lt;div align=&quot;center&quot;&gt;
&lt;h3&gt;&lt;blockquote&gt;
HumanLayer provides a set of tools to *deterministically* guarantee human oversight of high stakes function calls
&lt;/blockquote&gt;&lt;/h3&gt;
&lt;/div&gt;

### The Future: Autonomous Agents and the &quot;Outer Loop&quot;

_Read More: [OpenAI&#039;s RealTime API is a step towards outer-loop agents](https://theouterloop.substack.com/p/openais-realtime-api-is-a-step-towards)_

Between `require_approval` and `human_as_tool`, HumanLayer is built to empower the next generation of AI agents - Autonomous Agents, but it&#039;s just a piece of the puzzle. To clarify &quot;next generation&quot;, we can summarize briefly the history of LLM applications.

- **Gen 1**: Chat - human-initiated question / response interface
- **Gen 2**: Agentic Assistants - frameworks drive prompt routing, tool calling, chain of thought, and context window management to get much more reliability and functionality. Most workflows are initiated by humans in single-shot &quot;here&#039;s a task, go do it&quot; or rolling chat interfaces.
- **Gen 3**: Autonomous Agents - no longer human initiated, agents will live in the &quot;outer loop&quot; driving toward their goals using various tools and functions. Human/Agent communication is Agent-initiated rather than human-initiated.

![gen2 vs gen 3 agents](./docs/images/gen-2-gen-3-agents.png)

Gen 3 autonomous agents will need ways to consult humans for input on various tasks. In order for these agents to perform actual useful work, they&#039;ll need human oversight for sensitive operations.

These agents will require ways to contact one or more humans across various channels including chat, email, sms, and more.

While early versions of these agents may technically be &quot;human initiated&quot; in that they get kicked off on a regular schedule by e.g. a cron or similar, the best ones will be managing their own scheduling and costs. This will require toolkits for inspecting costs and something akin to `sleep_until`. They&#039;ll need to run in orchestration frameworks that can durably serialize and resume agent workflows across tool calls that might not return for hours or days. These frameworks will need to support context window management by a &quot;manager LLM&quot; and enable agents to fork sub-chains to handle specialized tasks and roles.

Example use cases for these outer loop agents include [the linkedin inbox assistant](./examples/langchain/04-human_as_tool_linkedin.py) and [the customer onboarding assistant](./examples/langchain/05-approvals_and_humans_composite.py), but that&#039;s really just scratching the surface.

## Contributing

The HumanLayer SDK and docs are open-source and we welcome contributions in the form of issues, documentation, pull requests, and more. See [CONTRIBUTING.md](./CONTRIBUTING.md) for more details.

## Fun Stuff

[![Star History Chart](https://api.star-history.com/svg?repos=humanlayer/humanlayer&amp;type=Date)](https://star-history.com/#humanlayer/humanlayer&amp;Date)


## Development Conventions

### TODO Annotations

We use a priority-based TODO annotation system throughout the codebase:

- `TODO(0)`: Critical - never merge
- `TODO(1)`: High - architectural flaws, major bugs
- `TODO(2)`: Medium - minor bugs, missing features
- `TODO(3)`: Low - polish, tests, documentation
- `TODO(4)`: Questions/investigations needed
- `PERF`: Performance optimization opportunities

## License

The HumanLayer SDK and CodeLayer sources in this repo are licensed under the Apache 2 License.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[mercurjs/mercur]]></title>
            <link>https://github.com/mercurjs/mercur</link>
            <guid>https://github.com/mercurjs/mercur</guid>
            <pubDate>Sat, 30 Aug 2025 00:04:31 GMT</pubDate>
            <description><![CDATA[Open-source multi-vendor marketplace platform for B2B & B2C. Built on top of MedusaJS. Create your own custom marketplace. üõçÔ∏è]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/mercurjs/mercur">mercurjs/mercur</a></h1>
            <p>Open-source multi-vendor marketplace platform for B2B & B2C. Built on top of MedusaJS. Create your own custom marketplace. üõçÔ∏è</p>
            <p>Language: TypeScript</p>
            <p>Stars: 810</p>
            <p>Forks: 159</p>
            <p>Stars today: 60 stars today</p>
            <h2>README</h2><pre>![Mercur Main Cover](https://cdn.prod.website-files.com/6790aeffc4b432ccaf1b56e5/67a225dc6fa298afc1cc4ae6_Mercur%20Cover.png)

&lt;div align=&quot;center&quot;&gt;
  &lt;h1&gt;Mercur &lt;br&gt; Open Source Marketplace Platform&lt;/h1&gt; 
  &lt;!-- Shields.io Badges --&gt;
  &lt;a href=&quot;https://github.com/mercurjs/mercur/tree/main?tab=MIT-1-ov-file&quot;&gt;
    &lt;img alt=&quot;License&quot; src=&quot;https://img.shields.io/badge/license-MIT-blue.svg&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;#&quot;&gt;
    &lt;img alt=&quot;PRs Welcome&quot; src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://rigbyjs.com/#contact&quot;&gt;
    &lt;img alt=&quot;Support&quot; src=&quot;https://img.shields.io/badge/support-contact%20author-blueviolet.svg&quot; /&gt;
  &lt;/a&gt;
  &lt;!-- Website Links --&gt;
  &lt;p&gt;
    &lt;a href=&quot;https://mercurjs.com/&quot;&gt;Mercur&lt;/a&gt; |   &lt;a href=&quot;https://docs.mercurjs.com/&quot;&gt;Docs&lt;/a&gt; 
  &lt;/p&gt; 
&lt;/div&gt;

# What is Mercur?

&lt;a href=&quot;https://www.mercurjs.com/&quot;&gt;Mercur&lt;/a&gt; is the first truly limitless open source marketplace platform that combines the simplicity of SaaS with the freedom of open source. Built on [MedusaJS](https://github.com/medusajs/medusa), it empowers businesses to create custom marketplaces without choosing between ownership and ease of use.

Mercur is a platform to start, customize, manage, and scale your marketplace for every business model with a modern technology stack.

## Announcing Mercur 1.0

After months of development, testing, and close collaboration with early adopters, we‚Äôre excited to announce the official release of **Mercur 1.0** - the first truly limitless marketplace platform. Version 1.0 is fully open source and ready to be self-hosted, giving you **full control over infrastructure, customizations, and data**.

With this version, **Mercur is production-ready for B2C marketplaces**. The first complete version includes a vendor system, admin panel, and a fully built B2C Storefront. Read more in **[official release announcement](https://www.mercurjs.com/updates/mercur-1-0-release)**

## Why Choose Mercur?

- Full Ownership: Unlike SaaS platforms, you own your marketplace with no transaction fees or vendor lock-in
- Modern Foundation: Built on MedusaJS, offering a modern tech stack that developers love
- Beautiful by Default: Create stunning storefronts without sacrificing customization

## Power Any Marketplace Model

- Custom B2B Marketplace: Build enterprise-grade platforms with specialized workflows
- Custom B2C Marketplace: Create engaging consumer marketplaces with modern UX
- eCommerce Extension: Transform your store into a marketplace (coming soon)

![Mercur Use Cases](https://cdn.prod.website-files.com/6790aeffc4b432ccaf1b56e5/67b46aa08180d5b8499c6a15_Use-cases.jpg)
&amp;nbsp;

# Ready-to-go marketplace features

&lt;b&gt;Storefronts for Marketplace &lt;/b&gt; &lt;br&gt;
Customizable storefronts designed for B2B and B2C with all elements including browsing and buying products across multiple vendors at once.

Discover &lt;a href=&quot;https://github.com/mercurjs/b2c-marketplace-storefront&quot;&gt;B2C Storefront Repository&lt;/a&gt; - &lt;a href=&quot;https://b2c.mercurjs.com/&quot;&gt;üõçÔ∏è Check demo &lt;/a&gt;

&lt;b&gt;Admin Panel&lt;/b&gt; &lt;br&gt;
Control over whole marketplace: setting product categories, vendors, commissions and rules

&lt;b&gt;Vendor Panel&lt;/b&gt; &lt;br&gt;
A powerful dashboard giving sellers complete control over their products, orders, and store management in one intuitive interface.

Discover &lt;a href=&quot;https://github.com/mercurjs/vendor-panel&quot;&gt;Vendor Panel&lt;/a&gt; - &lt;a href=&quot;https://www.mercurjs.com/contact&quot;&gt; Contact us to get demo &lt;/a&gt;

&lt;b&gt;Integrations&lt;/b&gt; &lt;br&gt;
Built-in integration with Stripe for payments and Resend for communication needs. More integrations coming soon.

![Mercur](https://cdn.prod.website-files.com/6790aeffc4b432ccaf1b56e5/67a1020f202572832c954ead_6b96703adfe74613f85133f83a19b1f0_Fleek%20Tilt%20-%20Readme.png)

&amp;nbsp;

## Quickstart

#### Setup Medusa project

```bash
# Clone the repository
git clone https://github.com/mercurjs/mercur.git

# Change directory
cd mercur

# Install dependencies
yarn install

# Build packages
yarn build

# Go to backend folder
cd apps/backend

# Clone .env.template
cp .env.template .env

# In the .env file replace user, password, address and port parameters in the DATABASE_URL variable with your values
DATABASE_URL=postgres://[user]:[password]@[address]:[port]/$DB_NAME
# For example:
DATABASE_URL=postgres://postgres:postgres@localhost:5432/$DB_NAME

# Setup database and run migrations
yarn medusa db:create &amp;&amp; yarn medusa db:migrate &amp;&amp; yarn run seed

# Create admin user
npx medusa user --email &lt;email&gt; --password &lt;password&gt;

# Go to root folder
cd ../..

# Start Mercur
yarn dev
```

&amp;nbsp;

## Prerequisites

- Node.js v20+
- PostgreSQL
- Git CLI

# Resources

#### Learn more about Mercur

- [Mercur Website](https://www.mercurjs.com/)
- [Mercur Docs](https://docs.mercurjs.com/introduction)

#### Learn more about Medusa

- [Medusa Website](https://www.medusajs.com/)
- [Medusa Docs](https://docs.medusajs.com/v2)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[transformerlab/transformerlab-app]]></title>
            <link>https://github.com/transformerlab/transformerlab-app</link>
            <guid>https://github.com/transformerlab/transformerlab-app</guid>
            <pubDate>Sat, 30 Aug 2025 00:04:30 GMT</pubDate>
            <description><![CDATA[Open Source Application for Advanced LLM + Diffusion Engineering: interact, train, fine-tune, and evaluate large language models on your own computer.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/transformerlab/transformerlab-app">transformerlab/transformerlab-app</a></h1>
            <p>Open Source Application for Advanced LLM + Diffusion Engineering: interact, train, fine-tune, and evaluate large language models on your own computer.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 4,052</p>
            <p>Forks: 372</p>
            <p>Stars today: 54 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://transformerlab.ai&quot;&gt;&lt;picture&gt;
    &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://raw.githubusercontent.com/transformerlab/transformerlab-app/refs/heads/main/assets/Transformer-Lab_Logo_Reverse.svg&quot;&gt;
    &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://raw.githubusercontent.com/transformerlab/transformerlab-app/refs/heads/main/assets/Transformer-Lab_Logo.svg&quot;&gt;
    &lt;img alt=&quot;transformer lab logo&quot; src=&quot;https://raw.githubusercontent.com/transformerlab/transformerlab-app/refs/heads/main/assets/Transformer-Lab_Logo.svg&quot; style=&quot;max-width: 650px&quot;&gt;
  &lt;/picture&gt;&lt;/a&gt;

  &lt;p align=&quot;center&quot;&gt;
    100% Open Source Toolkit for Large Language Models: Train, Tune, Chat on your own Machine
    &lt;br /&gt;
    &lt;a href=&quot;https://transformerlab.ai/docs/download/&quot;&gt;&lt;strong&gt;Download&lt;/strong&gt;&lt;/a&gt;
    ¬∑
    &lt;a href=&quot;https://transformerlab.ai/docs/intro&quot;&gt;&lt;strong&gt;Explore the docs ¬ª&lt;/strong&gt;&lt;/a&gt;
    &lt;br /&gt;
    &lt;br /&gt;
    &lt;a href=&quot;https://youtu.be/tY5TAvKviLo&quot;&gt;View Demo&lt;/a&gt;
    ¬∑
    &lt;a href=&quot;https://github.com/transformerlab/transformerlab-app/issues&quot;&gt;Report Bugs&lt;/a&gt;
    ¬∑
    &lt;a href=&quot;https://github.com/transformerlab/transformerlab-app/issues/new&quot;&gt;Suggest Features&lt;/a&gt;
    ¬∑
    &lt;a href=&quot;https://discord.gg/transformerlab&quot;&gt;Join Discord&lt;/a&gt;
    ¬∑
    &lt;a href=&quot;https://twitter.com/transformerlab&quot;&gt;Follow on Twitter&lt;/a&gt;
  &lt;/p&gt;
  &lt;p align=&quot;center&quot;&gt;
   Note: Transformer Lab is actively being developed. Please join our Discord or follow us on Twitter for updates. Questions, feedback and contributions are highly valued!&lt;/p&gt;
&lt;/div&gt;

&lt;!-- ABOUT THE PROJECT --&gt;

## Download Now

[![Download Icon]][Download URL]

## About The Project

![Product Screen Shot](assets/transformerlab-demo-jan2025.gif)

Transformer Lab is an app that allows anyone to experiment with Large Language Models.

## Backed by Mozilla

Transformer Lab is proud to be supported by Mozilla through the &lt;a href=&quot;https://future.mozilla.org/builders/&quot;&gt;Mozilla Builders Program&lt;/a&gt;

&lt;a href=&quot;https://future.mozilla.org/builders/&quot;&gt;
    &lt;img src=&quot;https://transformerlab.ai/img/mozilla-builders-2024.png&quot; alt=&quot;Mozilla Builders Logo&quot; width=300&gt;
&lt;/a&gt;

## Features


Transformer Lab allows you to:

- üíï **One-click Download Hundreds of Popular Models**:
  - DeepSeek, Qwen, Gemma, Phi4, Llama, Mistral, Mixtral, Stable Diffusion, Flux, Command-R, and dozens more
- ‚¨á **Download any LLM, VLM, or Diffusion model from Huggingface**
- üé∂ **Finetune / Train Across Different Hardware**
  - Finetune using MLX on Apple Silicon
  - Finetune using Huggingface on GPU
  - Finetune Diffusion LoRAs on GPU
- ‚öñÔ∏è **RLHF and Preference Optimization**
  - DPO
  - ORPO
  - SIMPO
  - Reward Modeling
- üíª **Work with Models Across Operating Systems**:
  - Windows App
  - MacOS App
  - Linux
- üí¨ **Chat with Models**
  - Chat
  - Completions
  - Visualize Model Architecture
  - Inspect activations &amp; attention for each generated token
  - Preset (Templated) Prompts
  - Chat History
  - Tweak generation parameters
  - Batched Inference
  - Tool Use / Function Calling (in alpha)
- üöÇ **Use Different Inference Engines**
  - MLX on Apple Silicon
  - FastChat
  - vLLM
  - Llama CPP
  - SGLang
- üñºÔ∏è **Support for Image Diffusion Models**
  - Run and experiment with image generation models (e.g., Stable Diffusion, Flux, etc.)
- üßë‚Äçüéì **Evaluate models**
- üìñ **RAG (Retreival Augmented Generation)**
  - Drag and Drop File UI
  - Works on Apple MLX, FastChat, and other engines
- üìì **Build Datasets for Training**
  - Pull from hundreds of common datasets available on HuggingFace
  - Provide your own dataset using drag and drop
- üî¢ **Calculate Embeddings**
- üíÅ **Full REST API**
- üå© **Run in the Cloud**
  - You can run the user interface on your desktop/laptop while the engine runs on a remote or cloud machine
  - Or you can run everything locally on a single machine
- üîÄ **Convert Models Across Platforms**
  - Convert from/to Huggingface, MLX, GGUF
- üîå **Plugin Support**
  - Easily install from a gallery of existing plugins
  - Write your own plugins to extend functionality
- üßë‚Äçüíª **Embedded Monaco Code Editor**
  - Edit plugins and view what&#039;s happening behind the scenes
- üìù **Prompt Editing**
  - Easily edit System Messages or Prompt Templates
- üìú **Inference Logs**
  - While doing inference or RAG, view a log of the raw queries sent to the model

And you can do the above, all through a simple cross-platform GUI.

&lt;!-- GETTING STARTED --&gt;

## Getting Started

&lt;a href=&quot;https://transformerlab.ai/docs/download&quot;&gt;Click here&lt;/a&gt; to download Transformer Lab.

&lt;a href=&quot;https://transformerlab.ai/docs/intro&quot;&gt;Read this page&lt;/a&gt; to learn how to install and use.

### Built With

- [![Electron][Electron]][Electron-url]
- [![React][React.js]][React-url]
- [![HuggingFace][HuggingFace]][HuggingFace-url]

## Developers

### Building from Scratch

To build the app yourself, pull this repo, and follow the steps below:

(Please note that the current build doesn&#039;t work on Node v23 but it works on v22)

```bash
npm install
```

```bash
npm start
```

## Packaging for Production

To package apps for the local platform:

```bash
npm run package
```

&lt;!-- LICENSE --&gt;

## License

Distributed under the AGPL V3 License. See `LICENSE.txt` for more information.

## Reference

If you found Transformer Lab useful in your research or applications, please cite using the following BibTeX:

```
@software{transformerlab,
  author = {Asaria, Ali},
  title = {Transformer Lab: Experiment with Large Language Models},
  month = December,
  year = 2023,
  url = {https://github.com/transformerlab/transformerlab-app}
}
```

&lt;!-- CONTACT --&gt;

## Contact

- [@aliasaria](https://twitter.com/aliasaria) - Ali Asasria
- [@dadmobile](https://github.com/dadmobile) - Tony Salomone

&lt;!-- MARKDOWN LINKS &amp; IMAGES --&gt;

[product-screenshot]: https://transformerlab.ai/assets/images/screenshot01-53ecb8c52338db3c9246cf2ebbbdc40d.png
[React.js]: https://img.shields.io/badge/React-20232A?style=for-the-badge&amp;logo=react&amp;logoColor=61DAFB
[React-url]: https://reactjs.org/
[Electron]: https://img.shields.io/badge/Electron-20232A?style=for-the-badge&amp;logo=electron&amp;logoColor=61DAFB
[Electron-url]: https://www.electronjs.org/
[HuggingFace]: https://img.shields.io/badge/ü§ó_HuggingFace-20232A?style=for-the-badge
[HuggingFace-url]: https://huggingface.co/
[Download Icon]: https://img.shields.io/badge/Download-EF2D5E?style=for-the-badge&amp;logoColor=white&amp;logo=DocuSign
[Download URL]: https://transformerlab.ai/docs/download
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[nrwl/nx]]></title>
            <link>https://github.com/nrwl/nx</link>
            <guid>https://github.com/nrwl/nx</guid>
            <pubDate>Sat, 30 Aug 2025 00:04:29 GMT</pubDate>
            <description><![CDATA[Get to green PRs in half the time. Nx optimizes your builds, scales your CI, and fixes failed PRs. Built for developers and AI agents.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/nrwl/nx">nrwl/nx</a></h1>
            <p>Get to green PRs in half the time. Nx optimizes your builds, scales your CI, and fixes failed PRs. Built for developers and AI agents.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 26,835</p>
            <p>Forks: 2,583</p>
            <p>Stars today: 14 stars today</p>
            <h2>README</h2><pre>&lt;p style=&quot;text-align: center;&quot;&gt;
  &lt;picture&gt;
    &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://raw.githubusercontent.com/nrwl/nx/master/images/nx-dark.svg&quot;&gt;
    &lt;img alt=&quot;Nx - Smart Repos ¬∑ Fast Builds&quot; src=&quot;https://raw.githubusercontent.com/nrwl/nx/master/images/nx-light.svg&quot; width=&quot;100%&quot;&gt;
  &lt;/picture&gt;
&lt;/p&gt;

&lt;div style=&quot;text-align: center;&quot;&gt;

[![CircleCI](https://circleci.com/gh/nrwl/nx.svg?style=svg)](https://circleci.com/gh/nrwl/nx)
[![License](https://img.shields.io/npm/l/nx.svg?style=flat-square)]()
[![NPM Version](https://badge.fury.io/js/nx.svg)](https://www.npmjs.com/package/nx)
[![Semantic Release](https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg?style=flat-square)]()
[![Commitizen friendly](https://img.shields.io/badge/commitizen-friendly-brightgreen.svg)](http://commitizen.github.io/cz-cli/)
[![Join the chat at https://gitter.im/nrwl-nx/community](https://badges.gitter.im/nrwl-nx/community.svg)](https://gitter.im/nrwl-nx/community?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge)
[![Join the Official Nx Discord Server](https://img.shields.io/discord/1143497901675401286?label=discord)](https://go.nx.dev/community)

&lt;/div&gt;

&lt;hr&gt;

# Smart Repos ¬∑ Fast Builds

An AI-first build platform that connects everything from your editor to CI. Helping you deliver fast, without breaking things.

Create a new Nx workspace with

```shell
npx create-nx-workspace
```

...or run

```
npx nx init
```

to add Nx to your existing workspace to get faster task scheduling, caching and more. More [in the docs](https://nx.dev/getting-started/intro).

## Learn about CI with Nx Cloud

[Nx Cloud](https://nx.dev/nx-cloud) connects directly to your existing CI setup, helping you scale your monorepos on CI by leveraging [remote caching](https://nx.dev/ci/features/remote-cache?utm_source=nxrepo&amp;utm_medium=readme&amp;utm_campaign=nxrepo), [task distribution across multiple machines](https://nx.dev/ci/features/distribute-task-execution?utm_source=nxrepo&amp;utm_medium=readme&amp;utm_campaign=nxrepo), [automated e2e test splitting](https://nx.dev/ci/features/split-e2e-tasks?utm_source=nxrepo&amp;utm_medium=readme&amp;utm_campaign=nxrepo) and [automated task flakiness detection](https://nx.dev/ci/features/flaky-tasks?utm_source=nxrepo&amp;utm_medium=readme&amp;utm_campaign=nxrepo)

Connect your existing Nx workspace with

```
npx nx connect
```

Learn more in the [Nx CI docs &amp;raquo;](https://nx.dev/ci/intro?utm_source=nxrepo&amp;utm_medium=readme&amp;utm_campaign=nxrepo)

## Useful links

- [Our docs](https://nx.dev/docs)
- [Our blog](https://nx.dev/blog)
- [Our community discord, live stream,...](https://nx.dev/community)
- [Our YouTube channel](https://www.youtube.com/@NxDevtools)
- [Our Twitter/X](https://x.com/nxdevtools)

&lt;p style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;https://www.youtube.com/@nxdevtools/videos&quot; target=&quot;_blank&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;./images/nx-courses-and-videos.svg&quot; 
width=&quot;100%&quot; alt=&quot;Nx - Smart Repos ¬∑ Fast Builds&quot;&gt;&lt;/a&gt;&lt;/p&gt;

## Want to help?

If you want to file a bug or submit a PR, read up on
our [guidelines for contributing](https://github.com/nrwl/nx/blob/master/CONTRIBUTING.md) and watch this video that will
help you get started.

&lt;a href=&quot;https://www.youtube.com/watch?v=8LCA_4qxc08&quot; target=&quot;_blank&quot; rel=&quot;noreferrer&quot;&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/nrwl/nx/master/images/how-to-contribute.png&quot; width=&quot;600&quot; alt=&quot;Nx - How to contribute video&quot;&gt;&lt;/p&gt;
&lt;/a&gt;

## Core Team

| Victor Savkin                                                          | Jason Jean                                                            | Benjamin Cabanes                                                            | Jack Hsu                                                          |
| ---------------------------------------------------------------------- | --------------------------------------------------------------------- | --------------------------------------------------------------------------- | ----------------------------------------------------------------- |
| ![Victor Savkin](https://avatars1.githubusercontent.com/u/35996?s=160) | ![Jason Jean](https://avatars2.githubusercontent.com/u/8104246?s=160) | ![Benjamin Cabanes](https://avatars2.githubusercontent.com/u/3447705?s=160) | ![Jack Hsu](https://avatars0.githubusercontent.com/u/53559?s=160) |
| [vsavkin](https://github.com/vsavkin)                                  | [FrozenPandaz](https://github.com/FrozenPandaz)                       | [bcabanes](https://github.com/bcabanes)                                     | [jaysoo](https://github.com/jaysoo)                               |

| James Henry                                                              | Jon Cammisuli                                                            | Isaac Mann                                                           | Juri Strumpflohner                                                           |
| ------------------------------------------------------------------------ | ------------------------------------------------------------------------ | -------------------------------------------------------------------- | ---------------------------------------------------------------------------- |
| ![James Henry](https://avatars.githubusercontent.com/u/900523?s=160&amp;v=4) | ![Jon Cammisuli](https://avatars2.githubusercontent.com/u/4332460?s=160) | ![Isaac Mann](https://avatars1.githubusercontent.com/u/861504?s=160) | ![Juri Strumpflohner](https://avatars1.githubusercontent.com/u/542458?s=160) |
| [JamesHenry](https://github.com/JamesHenry)                              | [cammisuli](https://github.com/cammisuli)                                | [isaacplmann](https://github.com/isaacplmann)                        | [juristr](https://github.com/juristr)                                        |

| Philip Fulcher                                                            | Caleb Ukle                                                            | Colum Ferry                                                            | Emily Xiong                                                            |
| ------------------------------------------------------------------------- | --------------------------------------------------------------------- | ---------------------------------------------------------------------- | ---------------------------------------------------------------------- |
| ![Philip Fulcher](https://avatars1.githubusercontent.com/u/1536471?s=160) | ![Caleb Ukle](https://avatars.githubusercontent.com/u/23272162?s=160) | ![Colum Ferry](https://avatars.githubusercontent.com/u/12140467?s=160) | ![Emily Xiong](https://avatars.githubusercontent.com/u/16211801?s=160) |
| [philipjfulcher](https://github.com/philipjfulcher)                       | [barbados-clemens](https://github.com/barbados-clemens)               | [Coly010](https://github.com/Coly010)                                  | [xiongemi](https://github.com/xiongemi)                                |

| Miroslav Jona≈°                                                          | Leosvel P√©rez Espinosa                                                            | Zachary DeRose                                                           | Craigory Coppola                                                           |
| ----------------------------------------------------------------------- | --------------------------------------------------------------------------------- | ------------------------------------------------------------------------ | -------------------------------------------------------------------------- |
| ![Miroslav Jona≈°](https://avatars.githubusercontent.com/u/881612?s=160) | ![Leosvel P√©rez Espinosa](https://avatars.githubusercontent.com/u/12051310?s=160) | ![Zachary DeRose](https://avatars.githubusercontent.com/u/3788405?s=160) | ![Craigory Coppola](https://avatars.githubusercontent.com/u/6933928?s=160) |
| [meeroslav](https://github.com/meeroslav)                               | [leosvelperez](https://github.com/leosvelperez)                                   | [ZackDeRose](https://github.com/ZackDeRose)                              | [AgentEnder](https://github.com/AgentEnder)                                |

| Chau Tran                                                            | Nicholas Cunningham                                                          | Max Kless                                                            |
| -------------------------------------------------------------------- | ---------------------------------------------------------------------------- | -------------------------------------------------------------------- |
| ![Chau Tran](https://avatars.githubusercontent.com/u/25516557?s=160) | ![Nicholas Cunningham](https://avatars.githubusercontent.com/u/338948?s=160) | ![Max Kless](https://avatars.githubusercontent.com/u/34165455?s=160) |
| [nartc](https://github.com/nartc)                                    | [ndcunningham](https://github.com/ndcunningham)                              | [MaxKless](https://github.com/MaxKless)                              |
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[MetaMask/metamask-mobile]]></title>
            <link>https://github.com/MetaMask/metamask-mobile</link>
            <guid>https://github.com/MetaMask/metamask-mobile</guid>
            <pubDate>Sat, 30 Aug 2025 00:04:28 GMT</pubDate>
            <description><![CDATA[Mobile web browser providing access to websites that use the Ethereum blockchain]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/MetaMask/metamask-mobile">MetaMask/metamask-mobile</a></h1>
            <p>Mobile web browser providing access to websites that use the Ethereum blockchain</p>
            <p>Language: TypeScript</p>
            <p>Stars: 2,541</p>
            <p>Forks: 1,353</p>
            <p>Stars today: 0 stars today</p>
            <h2>README</h2><pre>![MetaMask logo](logo.png?raw=true)

# MetaMask

[![CI](https://github.com/MetaMask/metamask-mobile/actions/workflows/ci.yml/badge.svg?branch=main)](https://github.com/MetaMask/metamask-mobile/actions/workflows/ci.yml) [![CLA](https://github.com/MetaMask/metamask-mobile/actions/workflows/cla.yml/badge.svg?branch=main)](https://github.com/MetaMask/metamask-mobile/actions/workflows/cla.yml)

MetaMask is a mobile wallet that provides easy access to websites that use the [Ethereum](https://ethereum.org/) blockchain.

For up to the minute news, follow our [Twitter](https://twitter.com/metamask) or [Medium](https://medium.com/metamask) pages.

To learn how to develop MetaMask-compatible applications, visit our [Developer Docs](https://docs.metamask.io).

To learn how to contribute to the MetaMask codebase, visit our [Contributor Docs](https://github.com/MetaMask/contributor-docs).

## Documentation

- [Architecture](./docs/readme/architecture.md)
- [Expo Development Environment Setup](./docs/readme/expo-environment.md)
- [Native Development Environment Setup](./docs/readme/environment.md)
- [Build Troubleshooting](./docs/readme/troubleshooting.md)
- [Testing](./docs/readme/testing.md)
- [Debugging](./docs/readme/debugging.md)
- [Performance](./docs/readme/performance.md)
- [Release Build Profiling](./docs/readme/release-build-profiler.md)
- [Storybook](./docs/readme/storybook.md)
- [Miscellaneous](./docs/readme/miscellaneous.md)

## Getting started

### Using Expo (recommended)

Expo is the fastest way to start developing. With the Expo framework, developers don&#039;t need to compile the native side of the application as before, hence no need for any native environment setup, developers only need to download a precompiled development build and run the javascript bundler. The development build will then connect with the bundler to load the javascript code.

#### Expo Environment Setup

[Install node, yarn and watchman.](./docs/readme/expo-environment.md)

#### Clone the project

```bash
git clone git@github.com:MetaMask/metamask-mobile.git &amp;&amp; \
cd metamask-mobile
```

#### Install dependencies

```bash
yarn setup:expo
```

#### Run the bundler

```bash
yarn watch
```

#### Download and install the development build

- Expo development builds are hosted in [Runway](https://www.runway.team/) buckets and are made available to all contributors through the public bucket links below. A new build is generated every time a PR is merged into the `main` branch.

- For Android:
  - Download and install an `.apk` file from this [Runway bucket](https://app.runway.team/bucket/hykQxdZCEGgoyyZ9sBtkhli8wupv9PiTA6uRJf3Lh65FTECF1oy8vzkeXdmuJKhm7xGLeV35GzIT1Un7J5XkBADm5OhknlBXzA0CzqB767V36gi1F3yg3Uss) onto your Android device or emulator.
- For iOS:
  - Physical device
    - Your test device needs to first be registered with our Apple developer account.
    - Once registered, download and install an `.ipa` file from this [Runway bucket](https://app.runway.team/bucket/MV2BJmn6D5_O7nqGw8jHpATpEA4jkPrBB4EcWXC6wV7z8jgwIbAsDhE5Ncl7KwF32qRQQD9YrahAIaxdFVvLT4v3UvBcViMtT3zJdMMfkXDPjSdqVGw=) onto your device.
  - Simulator
    - Download and install an `.app` file from this [Runway bucket](https://app.runway.team/bucket/aCddXOkg1p_nDryri-FMyvkC9KRqQeVT_12sf6Nw0u6iGygGo6BlNzjD6bOt-zma260EzAxdpXmlp2GQphp3TN1s6AJE4i6d_9V0Tv5h4pHISU49dFk=) onto your simulator.
    - Note: Our `.app` files are zipped and hosted under `Additional Artifacts` in the bucket. Since this hosting additional artifacts in public buckets is a relatively new feature, contributors may find that some builds are missing additional artifacts. Under the hood, these are usually associated with failed or aborted Bitrise builds. We are working with the Runway team to better filter out these builds and are subject to change in the future.

#### Load the app

If on a simulator:

- use the initial expo screen that appears when starting the development to choose the bundler url
- OR press &quot;a&quot; for Android or &quot;i&quot; for iOS on the terminal where the bundler is running

If on a physical device:

- Use the camera app to scan the QR code presented by the bundler running on the terminal

That&#039;s it! This will work for any javascript development, if you need to develop or modify native code please see the next section.

### Native Development

If developing or modifying native code or installing any library that introduces or uses native code, it is not possible to use an Expo precompiled development build as you need to compile the native side of the application again. To do so, please follow the steps stated in this section.

#### Native Environment setup

Before running the app for native development, make sure your development environment has all the required tools. Several of these tools (ie Node and Ruby) may require specific versions in order to successfully build the app.

[Setup your development environment](./docs/readme/environment.md)

#### Building the app

**Clone the project**

```bash
git clone git@github.com:MetaMask/metamask-mobile.git &amp;&amp; \
cd metamask-mobile
```

##### Firebase Messaging Setup

MetaMask uses Firebase Cloud Messaging (FCM) to enable app communications. To integrate FCM, you&#039;ll need configuration files for both iOS and Android platforms.

###### Internal Contributor instructions

1. Grab the `.js.env` file from 1Password, ask around for the correct vault. This file contains the `GOOGLE_SERVICES_B64_ANDROID` and `GOOGLE_SERVICES_B64_IOS` secrets that will be used to generate the relevant configuration files for IOS/Android.
2. [Install](./README.md#install-dependencies) and [run &amp; start](./README.md#running-the-app) the application as documented below.

###### External Contributor instructions

As an external contributor, you need to provide your own Firebase project configuration files:

- **`GoogleService-Info.plist`** (iOS)
- **`google-services.json`** (Android)

1. Create a Free Firebase Project
   - Set up a Firebase project in the Firebase Console.
   - Configure the project with a client package name matching `io.metamask` (IMPORTANT).
2. Add Configuration Files
   - Create/Update the `google-services.json` and `GoogleService-Info.plist` files in:
   - `android/app/google-services.json` (for Android)
   - `ios/GoogleServices/GoogleService-Info.plist` directory (for iOS)
3. Create the correct base64 environments variables.

```bash
# Generate Android Base64 Version of Google Services
export GOOGLE_SERVICES_B64_ANDROID=&quot;$(base64 -w0 -i ./android/app/google-services.json)&quot; &amp;&amp; echo &quot;export GOOGLE_SERVICES_B64_ANDROID=\&quot;$GOOGLE_SERVICES_B64_ANDROID\&quot;&quot; | tee -a .js.env

# Generate IOS Base64 Version of Google Services
export GOOGLE_SERVICES_B64_IOS=&quot;$(base64 -w0 -i ./ios/GoogleServices/GoogleService-Info.plist)&quot; &amp;&amp; echo &quot;export GOOGLE_SERVICES_B64_IOS=\&quot;$GOOGLE_SERVICES_B64_IOS\&quot;&quot; | tee -a .js.env
```

[!CAUTION]

&gt; In case you don&#039;t provide your own Firebase project config file or run the steps above, you will face the error `No matching client found for package name &#039;io.metamask&#039;`.

In case of any doubt, please follow the instructions in the link below to get your Firebase project config file.
[Firebase Project Quickstart](https://firebaseopensource.com/projects/firebase/quickstart-js/messaging/readme/#getting_started)

##### Install dependencies

```bash
yarn setup
```

_Not the usual install command, this will run scripts and a lengthy postinstall flow_

#### Running the app for native development

**Run Metro bundler**

```bash
yarn watch
```

_Like a local server for the app_

**Run on a iOS device**

```bash
yarn start:ios
```

**Run on an Android device**

```bash
yarn start:android
```
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[langgenius/dify]]></title>
            <link>https://github.com/langgenius/dify</link>
            <guid>https://github.com/langgenius/dify</guid>
            <pubDate>Sat, 30 Aug 2025 00:04:27 GMT</pubDate>
            <description><![CDATA[Production-ready platform for agentic workflow development.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/langgenius/dify">langgenius/dify</a></h1>
            <p>Production-ready platform for agentic workflow development.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 112,516</p>
            <p>Forks: 17,188</p>
            <p>Stars today: 136 stars today</p>
            <h2>README</h2><pre>![cover-v5-optimized](./images/GitHub_README_if.png)

&lt;p align=&quot;center&quot;&gt;
  üìå &lt;a href=&quot;https://dify.ai/blog/introducing-dify-workflow-file-upload-a-demo-on-ai-podcast&quot;&gt;Introducing Dify Workflow File Upload: Recreate Google NotebookLM Podcast&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://cloud.dify.ai&quot;&gt;Dify Cloud&lt;/a&gt; ¬∑
  &lt;a href=&quot;https://docs.dify.ai/getting-started/install-self-hosted&quot;&gt;Self-hosting&lt;/a&gt; ¬∑
  &lt;a href=&quot;https://docs.dify.ai&quot;&gt;Documentation&lt;/a&gt; ¬∑
  &lt;a href=&quot;https://dify.ai/pricing&quot;&gt;Dify edition overview&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://dify.ai&quot; target=&quot;_blank&quot;&gt;
        &lt;img alt=&quot;Static Badge&quot; src=&quot;https://img.shields.io/badge/Product-F04438&quot;&gt;&lt;/a&gt;
    &lt;a href=&quot;https://dify.ai/pricing&quot; target=&quot;_blank&quot;&gt;
        &lt;img alt=&quot;Static Badge&quot; src=&quot;https://img.shields.io/badge/free-pricing?logo=free&amp;color=%20%23155EEF&amp;label=pricing&amp;labelColor=%20%23528bff&quot;&gt;&lt;/a&gt;
    &lt;a href=&quot;https://discord.gg/FngNHpbcY7&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/discord/1082486657678311454?logo=discord&amp;labelColor=%20%235462eb&amp;logoColor=%20%23f5f5f5&amp;color=%20%235462eb&quot;
            alt=&quot;chat on Discord&quot;&gt;&lt;/a&gt;
    &lt;a href=&quot;https://reddit.com/r/difyai&quot; target=&quot;_blank&quot;&gt;  
        &lt;img src=&quot;https://img.shields.io/reddit/subreddit-subscribers/difyai?style=plastic&amp;logo=reddit&amp;label=r%2Fdifyai&amp;labelColor=white&quot;
            alt=&quot;join Reddit&quot;&gt;&lt;/a&gt;
    &lt;a href=&quot;https://twitter.com/intent/follow?screen_name=dify_ai&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/twitter/follow/dify_ai?logo=X&amp;color=%20%23f5f5f5&quot;
            alt=&quot;follow on X(Twitter)&quot;&gt;&lt;/a&gt;
    &lt;a href=&quot;https://www.linkedin.com/company/langgenius/&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https://custom-icon-badges.demolab.com/badge/LinkedIn-0A66C2?logo=linkedin-white&amp;logoColor=fff&quot;
            alt=&quot;follow on LinkedIn&quot;&gt;&lt;/a&gt;
    &lt;a href=&quot;https://hub.docker.com/u/langgenius&quot; target=&quot;_blank&quot;&gt;
        &lt;img alt=&quot;Docker Pulls&quot; src=&quot;https://img.shields.io/docker/pulls/langgenius/dify-web?labelColor=%20%23FDB062&amp;color=%20%23f79009&quot;&gt;&lt;/a&gt;
    &lt;a href=&quot;https://github.com/langgenius/dify/graphs/commit-activity&quot; target=&quot;_blank&quot;&gt;
        &lt;img alt=&quot;Commits last month&quot; src=&quot;https://img.shields.io/github/commit-activity/m/langgenius/dify?labelColor=%20%2332b583&amp;color=%20%2312b76a&quot;&gt;&lt;/a&gt;
    &lt;a href=&quot;https://github.com/langgenius/dify/&quot; target=&quot;_blank&quot;&gt;
        &lt;img alt=&quot;Issues closed&quot; src=&quot;https://img.shields.io/github/issues-search?query=repo%3Alanggenius%2Fdify%20is%3Aclosed&amp;label=issues%20closed&amp;labelColor=%20%237d89b0&amp;color=%20%235d6b98&quot;&gt;&lt;/a&gt;
    &lt;a href=&quot;https://github.com/langgenius/dify/discussions/&quot; target=&quot;_blank&quot;&gt;
        &lt;img alt=&quot;Discussion posts&quot; src=&quot;https://img.shields.io/github/discussions/langgenius/dify?labelColor=%20%239b8afb&amp;color=%20%237a5af8&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;./README.md&quot;&gt;&lt;img alt=&quot;README in English&quot; src=&quot;https://img.shields.io/badge/English-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;./README_TW.md&quot;&gt;&lt;img alt=&quot;ÁπÅÈ´î‰∏≠ÊñáÊñá‰ª∂&quot; src=&quot;https://img.shields.io/badge/ÁπÅÈ´î‰∏≠Êñá-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;./README_CN.md&quot;&gt;&lt;img alt=&quot;ÁÆÄ‰Ωì‰∏≠ÊñáÁâàËá™Ëø∞Êñá‰ª∂&quot; src=&quot;https://img.shields.io/badge/ÁÆÄ‰Ωì‰∏≠Êñá-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;./README_JA.md&quot;&gt;&lt;img alt=&quot;Êó•Êú¨Ë™û„ÅÆREADME&quot; src=&quot;https://img.shields.io/badge/Êó•Êú¨Ë™û-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;./README_ES.md&quot;&gt;&lt;img alt=&quot;README en Espa√±ol&quot; src=&quot;https://img.shields.io/badge/Espa√±ol-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;./README_FR.md&quot;&gt;&lt;img alt=&quot;README en Fran√ßais&quot; src=&quot;https://img.shields.io/badge/Fran√ßais-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;./README_KL.md&quot;&gt;&lt;img alt=&quot;README tlhIngan Hol&quot; src=&quot;https://img.shields.io/badge/Klingon-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;./README_KR.md&quot;&gt;&lt;img alt=&quot;README in Korean&quot; src=&quot;https://img.shields.io/badge/ÌïúÍµ≠Ïñ¥-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;./README_AR.md&quot;&gt;&lt;img alt=&quot;README ÿ®ÿßŸÑÿπÿ±ÿ®Ÿäÿ©&quot; src=&quot;https://img.shields.io/badge/ÿßŸÑÿπÿ±ÿ®Ÿäÿ©-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;./README_TR.md&quot;&gt;&lt;img alt=&quot;T√ºrk√ße README&quot; src=&quot;https://img.shields.io/badge/T√ºrk√ße-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;./README_VI.md&quot;&gt;&lt;img alt=&quot;README Ti·∫øng Vi·ªát&quot; src=&quot;https://img.shields.io/badge/Ti%E1%BA%BFng%20Vi%E1%BB%87t-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;./README_DE.md&quot;&gt;&lt;img alt=&quot;README in Deutsch&quot; src=&quot;https://img.shields.io/badge/German-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;./README_BN.md&quot;&gt;&lt;img alt=&quot;README in ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ&quot; src=&quot;https://img.shields.io/badge/‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ-d9d9d9&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

Dify is an open-source platform for developing LLM applications. Its intuitive interface combines agentic AI workflows, RAG pipelines, agent capabilities, model management, observability features, and more‚Äîallowing you to quickly move from prototype to production.

## Quick start

&gt; Before installing Dify, make sure your machine meets the following minimum system requirements:
&gt;
&gt; - CPU &gt;= 2 Core
&gt; - RAM &gt;= 4 GiB

&lt;/br&gt;

The easiest way to start the Dify server is through [Docker Compose](docker/docker-compose.yaml). Before running Dify with the following commands, make sure that [Docker](https://docs.docker.com/get-docker/) and [Docker Compose](https://docs.docker.com/compose/install/) are installed on your machine:

```bash
cd dify
cd docker
cp .env.example .env
docker compose up -d
```

After running, you can access the Dify dashboard in your browser at [http://localhost/install](http://localhost/install) and start the initialization process.

#### Seeking help

Please refer to our [FAQ](https://docs.dify.ai/getting-started/install-self-hosted/faqs) if you encounter problems setting up Dify. Reach out to [the community and us](#community--contact) if you are still having issues.

&gt; If you&#039;d like to contribute to Dify or do additional development, refer to our [guide to deploying from source code](https://docs.dify.ai/getting-started/install-self-hosted/local-source-code)

## Key features

**1. Workflow**:
Build and test powerful AI workflows on a visual canvas, leveraging all the following features and beyond.

**2. Comprehensive model support**:
Seamless integration with hundreds of proprietary / open-source LLMs from dozens of inference providers and self-hosted solutions, covering GPT, Mistral, Llama3, and any OpenAI API-compatible models. A full list of supported model providers can be found [here](https://docs.dify.ai/getting-started/readme/model-providers).

![providers-v5](https://github.com/langgenius/dify/assets/13230914/5a17bdbe-097a-4100-8363-40255b70f6e3)

**3. Prompt IDE**:
Intuitive interface for crafting prompts, comparing model performance, and adding additional features such as text-to-speech to a chat-based app.

**4. RAG Pipeline**:
Extensive RAG capabilities that cover everything from document ingestion to retrieval, with out-of-box support for text extraction from PDFs, PPTs, and other common document formats.

**5. Agent capabilities**:
You can define agents based on LLM Function Calling or ReAct, and add pre-built or custom tools for the agent. Dify provides 50+ built-in tools for AI agents, such as Google Search, DALL¬∑E, Stable Diffusion and WolframAlpha.

**6. LLMOps**:
Monitor and analyze application logs and performance over time. You could continuously improve prompts, datasets, and models based on production data and annotations.

**7. Backend-as-a-Service**:
All of Dify&#039;s offerings come with corresponding APIs, so you could effortlessly integrate Dify into your own business logic.

## Using Dify

- **Cloud &lt;/br&gt;**
  We host a [Dify Cloud](https://dify.ai) service for anyone to try with zero setup. It provides all the capabilities of the self-deployed version, and includes 200 free GPT-4 calls in the sandbox plan.

- **Self-hosting Dify Community Edition&lt;/br&gt;**
  Quickly get Dify running in your environment with this [starter guide](#quick-start).
  Use our [documentation](https://docs.dify.ai) for further references and more in-depth instructions.

- **Dify for enterprise / organizations&lt;/br&gt;**
  We provide additional enterprise-centric features. [Log your questions for us through this chatbot](https://udify.app/chat/22L1zSxg6yW1cWQg) or [send us an email](mailto:business@dify.ai?subject=%5BGitHub%5DBusiness%20License%20Inquiry) to discuss enterprise needs. &lt;/br&gt;

  &gt; For startups and small businesses using AWS, check out [Dify Premium on AWS Marketplace](https://aws.amazon.com/marketplace/pp/prodview-t22mebxzwjhu6) and deploy it to your own AWS VPC with one click. It&#039;s an affordable AMI offering with the option to create apps with custom logo and branding.

## Staying ahead

Star Dify on GitHub and be instantly notified of new releases.

![star-us](https://github.com/langgenius/dify/assets/13230914/b823edc1-6388-4e25-ad45-2f6b187adbb4)

## Advanced Setup

If you need to customize the configuration, please refer to the comments in our [.env.example](docker/.env.example) file and update the corresponding values in your `.env` file. Additionally, you might need to make adjustments to the `docker-compose.yaml` file itself, such as changing image versions, port mappings, or volume mounts, based on your specific deployment environment and requirements. After making any changes, please re-run `docker-compose up -d`. You can find the full list of available environment variables [here](https://docs.dify.ai/getting-started/install-self-hosted/environments).

If you&#039;d like to configure a highly-available setup, there are community-contributed [Helm Charts](https://helm.sh/) and YAML files which allow Dify to be deployed on Kubernetes.

- [Helm Chart by @LeoQuote](https://github.com/douban/charts/tree/master/charts/dify)
- [Helm Chart by @BorisPolonsky](https://github.com/BorisPolonsky/dify-helm)
- [Helm Chart by @magicsong](https://github.com/magicsong/ai-charts)
- [YAML file by @Winson-030](https://github.com/Winson-030/dify-kubernetes)
- [YAML file by @wyy-holding](https://github.com/wyy-holding/dify-k8s)
- [üöÄ NEW! YAML files (Supports Dify v1.6.0) by @Zhoneym](https://github.com/Zhoneym/DifyAI-Kubernetes)

#### Using Terraform for Deployment

Deploy Dify to Cloud Platform with a single click using [terraform](https://www.terraform.io/)

##### Azure Global

- [Azure Terraform by @nikawang](https://github.com/nikawang/dify-azure-terraform)

##### Google Cloud

- [Google Cloud Terraform by @sotazum](https://github.com/DeNA/dify-google-cloud-terraform)

#### Using AWS CDK for Deployment

Deploy Dify to AWS with [CDK](https://aws.amazon.com/cdk/)

##### AWS

- [AWS CDK by @KevinZhao (EKS based)](https://github.com/aws-samples/solution-for-deploying-dify-on-aws)
- [AWS CDK by @tmokmss (ECS based)](https://github.com/aws-samples/dify-self-hosted-on-aws)

#### Using Alibaba Cloud Computing Nest

Quickly deploy Dify to Alibaba cloud with [Alibaba Cloud Computing Nest](https://computenest.console.aliyun.com/service/instance/create/default?type=user&amp;ServiceName=Dify%E7%A4%BE%E5%8C%BA%E7%89%88)

#### Using Alibaba Cloud Data Management

One-Click deploy Dify to Alibaba Cloud with [Alibaba Cloud Data Management](https://www.alibabacloud.com/help/en/dms/dify-in-invitational-preview/)

#### Deploy to AKS with Azure Devops Pipeline

One-Click deploy Dify to AKS with [Azure Devops Pipeline Helm Chart by @LeoZhang](https://github.com/Ruiruiz30/Dify-helm-chart-AKS)

## Contributing

For those who&#039;d like to contribute code, see our [Contribution Guide](https://github.com/langgenius/dify/blob/main/CONTRIBUTING.md).
At the same time, please consider supporting Dify by sharing it on social media and at events and conferences.

&gt; We are looking for contributors to help translate Dify into languages other than Mandarin or English. If you are interested in helping, please see the [i18n README](https://github.com/langgenius/dify/blob/main/web/i18n-config/README.md) for more information, and leave us a comment in the `global-users` channel of our [Discord Community Server](https://discord.gg/8Tpq4AcN9c).

## Community &amp; contact

- [GitHub Discussion](https://github.com/langgenius/dify/discussions). Best for: sharing feedback and asking questions.
- [GitHub Issues](https://github.com/langgenius/dify/issues). Best for: bugs you encounter using Dify.AI, and feature proposals. See our [Contribution Guide](https://github.com/langgenius/dify/blob/main/CONTRIBUTING.md).
- [Discord](https://discord.gg/FngNHpbcY7). Best for: sharing your applications and hanging out with the community.
- [X(Twitter)](https://twitter.com/dify_ai). Best for: sharing your applications and hanging out with the community.

**Contributors**

&lt;a href=&quot;https://github.com/langgenius/dify/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=langgenius/dify&quot; /&gt;
&lt;/a&gt;

## Star history

[![Star History Chart](https://api.star-history.com/svg?repos=langgenius/dify&amp;type=Date)](https://star-history.com/#langgenius/dify&amp;Date)

## Security disclosure

To protect your privacy, please avoid posting security issues on GitHub. Instead, report issues to security@dify.ai, and our team will respond with detailed answer.

## License

This repository is licensed under the [Dify Open Source License](LICENSE), based on Apache 2.0 with additional conditions.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[remix-run/remix]]></title>
            <link>https://github.com/remix-run/remix</link>
            <guid>https://github.com/remix-run/remix</guid>
            <pubDate>Sat, 30 Aug 2025 00:04:26 GMT</pubDate>
            <description><![CDATA[Build Better Websites. Create modern, resilient user experiences with web fundamentals.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/remix-run/remix">remix-run/remix</a></h1>
            <p>Build Better Websites. Create modern, resilient user experiences with web fundamentals.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 31,574</p>
            <p>Forks: 2,678</p>
            <p>Stars today: 16 stars today</p>
            <h2>README</h2><pre># Welcome to Remix 3!

This branch (`v3`) is the source for Remix 3. It is under active development.

We published [a blog post](https://remix.run/blog/wake-up-remix) earlier this year with some of our thoughts around Remix 3. It explains our philosophy for web development and why we think the time is right for something new. In particular, we follow these principles:

1. **Model-First Development**. AI fundamentally shifts the human-computer interaction model for both user experience and developer workflows. Optimize the source code, documentation, tooling, and abstractions for LLMs. Additionally, develop abstractions for applications to use models in the product itself, not just as a tool to develop it.
2. **Build on Web APIs**. Sharing abstractions across the stack greatly reduces the amount of context switching, both for humans and machines. Build on the foundation of Web APIs and JavaScript because it is the only full stack ecosystem.
3. **Religiously Runtime**. Designing for bundlers/compilers/typegen (and any pre-runtime static analysis) leads to poor API design that eventually pollutes the entire system. All packages must be designed with no expectation of static analysis and all tests must run without bundling. Because browsers are involved, `--import` loaders for simple transformations like TypeScript and JSX are permissible.
4. **Avoid Dependencies**. Dependencies lock you into somebody else&#039;s roadmap. Choose them wisely, wrap them completely, and expect to replace most of them with our own package eventually. The goal is zero.
5. **Demand Composition**. Abstractions should be single-purpose and replaceable. A composable abstraction is easy to add and remove from an existing program. Every package must be useful and documented independent of any other context. New features should first be attempted as a new package. If impossible, attempt to break up the existing package to make it more composable. However, tightly coupled modules that almost always change together in both directions should be moved to the same package.
6. **Distribute Cohesively**. Extremely composable ecosystems are difficult to learn and use. Therefore the packages will be wrapped up into a single package as dependencies and re-exported as a single toolbox (remix) for both distribution and documentation.

## Goals

The goal is to develop all packages independently, and then stitch them together into the `remix` package for ease of use. However, all packages that make up Remix should be usable standalone as well. This forces us to consider package boundaries and helps us keep public interfaces portable and interopable.

Each package in Remix:

- Has a [single responsibility](https://en.wikipedia.org/wiki/Single-responsibility_principle)
- Prioritizes web standards to ensure maximum interoperability and portability across JavaScript runtimes
- Augments standards unobtrusively where they are missing or incomplete, minimizing incompatibility risks

This approach means the Remix code you write is **portable by default**. These packages work seamlessly across [Node.js](https://nodejs.org/), [Bun](https://bun.sh/), [Deno](https://deno.com/), [Cloudflare Workers](https://workers.cloudflare.com/), and other environments.

We leverage server-side web APIs like:

- [The Web Streams API](https://developer.mozilla.org/en-US/docs/Web/API/Streams_API) instead of Node.js streams
- [`Uint8Array`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array) instead of Node.js `Buffer`s
- [The Web Crypto API](https://developer.mozilla.org/en-US/docs/Web/API/Web_Crypto_API) instead of the Node.js crypto library
- [`Blob`](https://developer.mozilla.org/en-US/docs/Web/API/Blob) and [`File`](https://developer.mozilla.org/en-US/docs/Web/API/File) instead of some bespoke runtime-specific API

The benefit is code that&#039;s not just reusable, but **future-proof**.

These packages should be useful for anyone who is building for the web. If you&#039;re using [Remix](https://remix.run), we&#039;ve designed it from the start to work with web standards. If you&#039;re using some other framework, you should easily be able to integrate these tools into your workflow as well without going full-blown Remix. If you&#039;re building your own framework, we hope you&#039;ll be able to build on this foundation as well.

## Packages

We currently publish the following packages:

- [fetch-proxy](packages/fetch-proxy): Seamlessly construct HTTP proxies with the familiar `fetch()` API ‚Äì ideal for API gateways or abstracting microservices.
- [file-storage](packages/file-storage): Robust key/value storage tailored for JavaScript `File` objects, simplifying file management.
- [form-data-parser](packages/form-data-parser): An enhanced `request.formData()` wrapper enabling efficient, streaming file uploads.
- [headers](packages/headers): A comprehensive toolkit for effortlessly managing HTTP headers in your JavaScript applications.
- [lazy-file](packages/lazy-file): Optimize performance with lazy-loaded, streaming `Blob`s and `File`s for JavaScript.
- [multipart-parser](packages/multipart-parser): High-performance, streaming parser for multipart messages, perfect for handling complex form data.
- [node-fetch-server](packages/node-fetch-server): Build Node.js HTTP servers using the web-standard `fetch()` API, promoting code consistency.
- [route-pattern](packages/route-pattern): A powerful and flexible URL pattern matching library for modern JavaScript applications.
- [tar-parser](packages/tar-parser): A fast, streaming parser for tar archives, designed for efficient data extraction.

All packages are published in both modern ESM and legacy CJS formats for maximum compatibility with both existing and new projects.

## Contributing

We welcome contributions! If you&#039;d like to contribute, please feel free to open an issue or submit a pull request. See [CONTRIBUTING](https://github.com/remix-run/remix/blob/v3/CONTRIBUTING.md) for more information.

## License

See [LICENSE](https://github.com/remix-run/remix/blob/v3/LICENSE)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[hoppscotch/hoppscotch]]></title>
            <link>https://github.com/hoppscotch/hoppscotch</link>
            <guid>https://github.com/hoppscotch/hoppscotch</guid>
            <pubDate>Sat, 30 Aug 2025 00:04:25 GMT</pubDate>
            <description><![CDATA[Open source API development ecosystem - https://hoppscotch.io (open-source alternative to Postman, Insomnia)]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/hoppscotch/hoppscotch">hoppscotch/hoppscotch</a></h1>
            <p>Open source API development ecosystem - https://hoppscotch.io (open-source alternative to Postman, Insomnia)</p>
            <p>Language: TypeScript</p>
            <p>Stars: 73,761</p>
            <p>Forks: 5,147</p>
            <p>Stars today: 29 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://hoppscotch.io&quot;&gt;
    &lt;img
      src=&quot;https://avatars.githubusercontent.com/u/56705483&quot;
      alt=&quot;Hoppscotch&quot;
      height=&quot;64&quot;
    /&gt;
  &lt;/a&gt;
  &lt;h3&gt;
    &lt;b&gt;
      Hoppscotch
    &lt;/b&gt;
  &lt;/h3&gt;
  &lt;b&gt;
    Open Source API Development Ecosystem
  &lt;/b&gt;
  &lt;p&gt;

[![contributions welcome](https://img.shields.io/badge/contributions-welcome-brightgreen?logo=github)](CODE_OF_CONDUCT.md) [![Website](https://img.shields.io/website?url=https%3A%2F%2Fhoppscotch.io&amp;logo=hoppscotch)](https://hoppscotch.io) [![Tests](https://github.com/hoppscotch/hoppscotch/actions/workflows/tests.yml/badge.svg)](https://github.com/hoppscotch/hoppscotch/actions) [![Tweet](https://img.shields.io/twitter/url?url=https%3A%2F%2Fhoppscotch.io%2F)](https://twitter.com/share?text=%F0%9F%91%BD%20Hoppscotch%20%E2%80%A2%20Open%20source%20API%20development%20ecosystem%20-%20Helps%20you%20create%20requests%20faster,%20saving%20precious%20time%20on%20development.&amp;url=https://hoppscotch.io&amp;hashtags=hoppscotch&amp;via=hoppscotch_io)

  &lt;/p&gt;
  &lt;p&gt;
    &lt;sub&gt;
      Built with ‚ù§Ô∏é by
      &lt;a href=&quot;https://github.com/hoppscotch/hoppscotch/graphs/contributors&quot;&gt;
        contributors
      &lt;/a&gt;
    &lt;/sub&gt;
  &lt;/p&gt;
  &lt;br /&gt;
  &lt;p&gt;
    &lt;a href=&quot;https://hoppscotch.io&quot;&gt;
      &lt;picture&gt;
        &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;./packages/hoppscotch-common/public/images/banner-dark.png&quot;&gt;
        &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;./packages/hoppscotch-common/public/images/banner-light.png&quot;&gt;
        &lt;img alt=&quot;Hoppscotch&quot; src=&quot;./packages/hoppscotch-common/public/images/banner-dark.png&quot;&gt;
      &lt;/picture&gt;
    &lt;/a&gt;
  &lt;/p&gt;
&lt;/div&gt;

_We highly recommend you take a look at the [**Hoppscotch Documentation**](https://docs.hoppscotch.io) to learn more about the app._

#### **Support**

[![Chat on Discord](https://img.shields.io/badge/chat-Discord-7289DA?logo=discord)](https://hoppscotch.io/discord) [![Chat on Telegram](https://img.shields.io/badge/chat-Telegram-2CA5E0?logo=telegram)](https://hoppscotch.io/telegram) [![Discuss on GitHub](https://img.shields.io/badge/discussions-GitHub-333333?logo=github)](https://github.com/hoppscotch/hoppscotch/discussions)

### **Features**

‚ù§Ô∏è **Lightweight:** Crafted with minimalistic UI design.

‚ö°Ô∏è **Fast:** Send requests and get responses in real time.

üóÑÔ∏è **HTTP Methods:** Request methods define the type of action you are requesting to be performed.

- `GET` - Requests retrieve resource information
- `POST` - The server creates a new entry in a database
- `PUT` - Updates an existing resource
- `PATCH` - Very similar to `PUT` but makes a partial update on a resource
- `DELETE` - Deletes resource or related component
- `HEAD` - Retrieve response headers identical to those of a GET request, but without the response body.
- `CONNECT` - Establishes a tunnel to the server identified by the target resource
- `OPTIONS` - Describe the communication options for the target resource
- `TRACE` - Performs a message loop-back test along the path to the target resource
- `&lt;custom&gt;` - Some APIs use custom request methods such as `LIST`. Type in your custom methods.

üåà **Theming:** Customizable combinations for background, foreground, and accent colors ‚Äî [customize now](https://hoppscotch.io/settings).

- Choose a theme: System preference, Light, Dark, and Black
- Choose accent colors: Green, Teal, Blue, Indigo, Purple, Yellow, Orange, Red, and Pink
- Distraction-free Zen mode

_Customized themes are synced with your cloud/local session._

üî• **PWA:** Install as a [Progressive Web App](https://web.dev/progressive-web-apps) on your device.

- Instant loading with Service Workers
- Offline support
- Low RAM/memory and CPU usage
- Add to Home Screen
- Desktop PWA

üöÄ **Request:** Retrieve response from endpoint instantly.

1. Choose `method`
2. Enter `URL`
3. Send

- Copy/share public &quot;Share URL&quot;
- Generate/copy request code snippets for 10+ languages and frameworks
- Import `cURL`
- Label requests

üîå **WebSocket:** Establish full-duplex communication channels over a single TCP connection.

üì° **Server-Sent Events:** Receive a stream of updates from a server over an HTTP connection without resorting to polling.

üå© **Socket.IO:** Send and Receive data with the SocketIO server.

ü¶ü **MQTT:** Subscribe and Publish to topics of an MQTT Broker.

üîÆ **GraphQL:** GraphQL is a query language for APIs and a runtime for fulfilling those queries with your existing data.

- Set endpoint and get schema
- Multi-column docs
- Set custom request headers
- Query schema
- Get query response

üîê **Authorization:** Allows to identify the end-user.

- None
- Basic
- Bearer Token
- OAuth 2.0
- OIDC Access Token/PKCE

üì¢ **Headers:** Describes the format the body of your request is being sent in.

üì´ **Parameters:** Use request parameters to set varying parts in simulated requests.

üìÉ **Request Body:** Used to send and receive data via the REST API.

- Set `Content Type`
- FormData, JSON, and many more
- Toggle between key-value and RAW input parameter list

üìÆ **Response:** Contains the status line, headers, and the message/response body.

- Copy the response to the clipboard
- Download the response as a file
- View response headers
- View raw and preview HTML, image, JSON, and XML responses

‚è∞ **History:** Request entries are synced with your cloud/local session storage.

üìÅ **Collections:** Keep your API requests organized with collections and folders. Reuse them with a single click.

- Unlimited collections, folders, and requests
- Nested folders
- Export and import as a file or GitHub gist

_Collections are synced with your cloud/local session storage._

üìú **Pre-Request Scripts:** Snippets of code associated with a request that is executed before the request is sent.

- Set environment variables
- Include timestamp in the request headers
- Send a random alphanumeric string in the URL parameters
- Any JavaScript functions

üë®‚Äçüë©‚Äçüëß‚Äçüë¶ **Teams:** Helps you collaborate across your teams to design, develop, and test APIs faster.

- Create unlimited teams
- Create unlimited shared collections
- Create unlimited team members
- Role-based access control
- Cloud sync
- Multiple devices

üë• **Workspaces:** Organize your personal and team collections environments into workspaces. Easily switch between workspaces to manage multiple projects.

- Create unlimited workspaces
- Switch between personal and team workspaces

‚å®Ô∏è **Keyboard Shortcuts:** Optimized for efficiency.

&gt; **[Read our documentation on Keyboard Shortcuts](https://docs.hoppscotch.io/documentation/features/shortcuts)**

üåê **Proxy:** Enable Proxy Mode from Settings to access blocked APIs.

- Hide your IP address
- Fixes [`CORS`](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) (Cross-Origin Resource Sharing) issues
- Access APIs served in non-HTTPS (`http://`) endpoints
- Use your Proxy URL

_Official proxy server is hosted by Hoppscotch - **[GitHub](https://github.com/hoppscotch/proxyscotch)** - **[Privacy Policy](https://docs.hoppscotch.io/support/privacy)**._

üåé **i18n:** Experience the app in your language.

Help us to translate Hoppscotch. Please read [`TRANSLATIONS`](TRANSLATIONS.md) for details on our [`CODE OF CONDUCT`](CODE_OF_CONDUCT.md) and the process for submitting pull requests to us.

‚òÅÔ∏è **Auth + Sync:** Sign in and sync your data in real-time across all your devices.

**Sign in with:**

- GitHub
- Google
- Microsoft
- Email
- SSO (Single Sign-On)[^EE]

**üîÑ Synchronize your data:** Handoff to continue tasks on your other devices.

- Workspaces
- History
- Collections
- Environments
- Settings

‚úÖ **Post-Request Tests:** Write tests associated with a request that is executed after the request&#039;s response.

- Check the status code as an integer
- Filter response headers
- Parse the response data
- Set environment variables
- Write JavaScript code

üå± **Environments:** Environment variables allow you to store and reuse values in your requests and scripts.

- Unlimited environments and variables
- Initialize through the pre-request script
- Export as / import from GitHub gist

&lt;details&gt;
  &lt;summary&gt;&lt;i&gt;Use-cases&lt;/i&gt;&lt;/summary&gt;

---

- By storing a value in a variable, you can reference it throughout your request section
- If you need to update the value, you only have to change it in one place
- Using variables increases your ability to work efficiently and minimizes the likelihood of error

---

&lt;/details&gt;

üöö **Bulk Edit:** Edit key-value pairs in bulk.

- Entries are separated by newline
- Keys and values are separated by `:`
- Prepend `#` to any row you want to add but keep disabled

üéõÔ∏è **Admin dashboard:** Manage your team and invite members.

- Insights
- Manage users
- Manage teams

üì¶ **Add-ons:** Official add-ons for hoppscotch.

- **[Hoppscotch CLI](https://github.com/hoppscotch/hoppscotch/tree/main/packages/hoppscotch-cli)** - Command-line interface for Hoppscotch.
- **[Proxy](https://github.com/hoppscotch/proxyscotch)** - A simple proxy server created for Hoppscotch.
- **[Browser Extensions](https://github.com/hoppscotch/hoppscotch-extension)** - Browser extensions that enhance your Hoppscotch experience.

  [![Firefox](https://raw.github.com/alrra/browser-logos/master/src/firefox/firefox_16x16.png) **Firefox**](https://addons.mozilla.org/en-US/firefox/addon/hoppscotch) &amp;nbsp;|&amp;nbsp; [![Chrome](https://raw.github.com/alrra/browser-logos/master/src/chrome/chrome_16x16.png) **Chrome**](https://chrome.google.com/webstore/detail/hoppscotch-extension-for-c/amknoiejhlmhancpahfcfcfhllgkpbld)

  &gt; **Extensions fix `CORS` issues.**

_Add-ons are developed and maintained under **[Hoppscotch Organization](https://github.com/hoppscotch)**._

**For a complete list of features, please read our [documentation](https://docs.hoppscotch.io).**

## **Demo**

- Web : [hoppscotch.io](https://hoppscotch.io)
- Windows/Linux/macOS : [Desktop Apps](https://docs.hoppscotch.io/documentation/clients/desktop#download-hoppscotch-desktop-app)

## Usage

1. Provide your API endpoint in the URL field
2. Click &quot;Send&quot; to simulate the request
3. View the response

## Developing

Follow our [self-hosting documentation](https://docs.hoppscotch.io/documentation/self-host/getting-started) to get started with the development environment.

## Contributing

Please contribute using [GitHub Flow](https://guides.github.com/introduction/flow). Create a branch, add commits, and [open a pull request](https://github.com/hoppscotch/hoppscotch/compare).

Please read [`CONTRIBUTING`](CONTRIBUTING.md) for details on our [`CODE OF CONDUCT`](CODE_OF_CONDUCT.md), and the process for submitting pull requests to us.

## Continuous Integration

We use [GitHub Actions](https://github.com/features/actions) for continuous integration. Check out our [build workflows](https://github.com/hoppscotch/hoppscotch/actions).

## Changelog

See the [`CHANGELOG`](CHANGELOG.md) file for details.

## Authors

This project owes its existence to the collective efforts of all those who contribute ‚Äî [contribute now](CONTRIBUTING.md).

&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/hoppscotch/hoppscotch/graphs/contributors&quot;&gt;
    &lt;img src=&quot;https://opencollective.com/hoppscotch/contributors.svg?width=840&amp;button=false&quot;
      alt=&quot;Contributors&quot;
      width=&quot;100%&quot; /&gt;
  &lt;/a&gt;
&lt;/div&gt;

## License

This project is licensed under the [MIT License](https://opensource.org/licenses/MIT) ‚Äî see the [`LICENSE`](LICENSE) file for details.

[^EE]: Enterprise edition feature. [Learn more](https://docs.hoppscotch.io/documentation/self-host/getting-started).
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[backstage/backstage]]></title>
            <link>https://github.com/backstage/backstage</link>
            <guid>https://github.com/backstage/backstage</guid>
            <pubDate>Sat, 30 Aug 2025 00:04:24 GMT</pubDate>
            <description><![CDATA[Backstage is an open framework for building developer portals]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/backstage/backstage">backstage/backstage</a></h1>
            <p>Backstage is an open framework for building developer portals</p>
            <p>Language: TypeScript</p>
            <p>Stars: 31,226</p>
            <p>Forks: 6,748</p>
            <p>Stars today: 8 stars today</p>
            <h2>README</h2><pre>[![headline](docs/assets/headline.png)](https://backstage.io/)

# [Backstage](https://backstage.io)

English \| [ÌïúÍµ≠Ïñ¥](README-ko_kr.md) \| [‰∏≠ÊñáÁâà](README-zh_Hans.md) \| [Fran√ßais](README-fr_FR.md)

[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://opensource.org/licenses/Apache-2.0)
[![CNCF Status](https://img.shields.io/badge/cncf%20status-incubation-blue.svg)](https://www.cncf.io/projects)
[![Discord](https://img.shields.io/discord/687207715902193673?logo=discord&amp;label=Discord&amp;color=5865F2&amp;logoColor=white)](https://discord.gg/backstage-687207715902193673)
![Code style](https://img.shields.io/badge/code_style-prettier-ff69b4.svg)
[![Codecov](https://img.shields.io/codecov/c/github/backstage/backstage)](https://codecov.io/gh/backstage/backstage)
[![](https://img.shields.io/github/v/release/backstage/backstage)](https://github.com/backstage/backstage/releases)
[![OpenSSF Best Practices](https://bestpractices.coreinfrastructure.org/projects/7678/badge)](https://bestpractices.coreinfrastructure.org/projects/7678)
[![OpenSSF Scorecard](https://api.securityscorecards.dev/projects/github.com/backstage/backstage/badge)](https://securityscorecards.dev/viewer/?uri=github.com/backstage/backstage)

## What is Backstage?

[Backstage](https://backstage.io/) is an open source framework for building developer portals. Powered by a centralized software catalog, Backstage restores order to your microservices and infrastructure and enables your product teams to ship high-quality code quickly without compromising autonomy.

Backstage unifies all your infrastructure tooling, services, and documentation to create a streamlined development environment from end to end.

![software-catalog](docs/assets/header.png)

Out of the box, Backstage includes:

- [Backstage Software Catalog](https://backstage.io/docs/features/software-catalog/) for managing all your software such as microservices, libraries, data pipelines, websites, and ML models
- [Backstage Software Templates](https://backstage.io/docs/features/software-templates/) for quickly spinning up new projects and standardizing your tooling with your organization‚Äôs best practices
- [Backstage TechDocs](https://backstage.io/docs/features/techdocs/) for making it easy to create, maintain, find, and use technical documentation, using a &quot;docs like code&quot; approach
- Plus, a growing ecosystem of [open source plugins](https://github.com/backstage/backstage/tree/master/plugins) that further expand Backstage‚Äôs customizability and functionality

Backstage was created by Spotify but is now hosted by the [Cloud Native Computing Foundation (CNCF)](https://www.cncf.io) as an Incubation level project. For more information, see the [announcement](https://backstage.io/blog/2022/03/16/backstage-turns-two#out-of-the-sandbox-and-into-incubation).

## Project roadmap

For information about the detailed project roadmap including delivered milestones, see [the Roadmap](https://backstage.io/docs/overview/roadmap).

## Getting Started

To start using Backstage, see the [Getting Started documentation](https://backstage.io/docs/getting-started).

## Documentation

The documentation of Backstage includes:

- [Main documentation](https://backstage.io/docs)
- [Software Catalog](https://backstage.io/docs/features/software-catalog/)
- [Architecture](https://backstage.io/docs/overview/architecture-overview) ([Decisions](https://backstage.io/docs/architecture-decisions/))
- [Designing for Backstage](https://backstage.io/docs/dls/design)
- [Storybook - UI components](https://backstage.io/storybook)

## Community

To engage with our community, you can use the following resources:

- [Discord chatroom](https://discord.gg/backstage-687207715902193673) - Get support or discuss the project
- [Contributing to Backstage](https://github.com/backstage/backstage/blob/master/CONTRIBUTING.md) - Start here if you want to contribute
- [RFCs](https://github.com/backstage/backstage/labels/rfc) - Help shape the technical direction
- [FAQ](https://backstage.io/docs/faq) - Frequently Asked Questions
- [Code of Conduct](CODE_OF_CONDUCT.md) - This is how we roll
- [Adopters](ADOPTERS.md) - Companies already using Backstage
- [Blog](https://backstage.io/blog/) - Announcements and updates
- [Newsletter](https://spoti.fi/backstagenewsletter) - Subscribe to our email newsletter
- [Backstage Community Sessions](https://github.com/backstage/community) - Join monthly meetups and explore Backstage community
- Give us a star ‚≠êÔ∏è - If you are using Backstage or think it is an interesting project, we would love a star ‚ù§Ô∏è

## Governance

See the [GOVERNANCE.md](https://github.com/backstage/community/blob/main/GOVERNANCE.md) document in the [backstage/community](https://github.com/backstage/community) repository.

## License

Copyright 2020-2025 ¬© The Backstage Authors. All rights reserved. The Linux Foundation has registered trademarks and uses trademarks. For a list of trademarks of The Linux Foundation, please see our Trademark Usage page: https://www.linuxfoundation.org/trademark-usage

Licensed under the Apache License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0

## Security

Please report sensitive security issues using Spotify&#039;s [bug-bounty program](https://hackerone.com/spotify) rather than GitHub.

For further details, see our complete [security release process](SECURITY.md).
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[linshenkx/prompt-optimizer]]></title>
            <link>https://github.com/linshenkx/prompt-optimizer</link>
            <guid>https://github.com/linshenkx/prompt-optimizer</guid>
            <pubDate>Sat, 30 Aug 2025 00:04:23 GMT</pubDate>
            <description><![CDATA[‰∏ÄÊ¨æÊèêÁ§∫ËØç‰ºòÂåñÂô®ÔºåÂä©Âäõ‰∫éÁºñÂÜôÈ´òË¥®ÈáèÁöÑÊèêÁ§∫ËØç]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/linshenkx/prompt-optimizer">linshenkx/prompt-optimizer</a></h1>
            <p>‰∏ÄÊ¨æÊèêÁ§∫ËØç‰ºòÂåñÂô®ÔºåÂä©Âäõ‰∫éÁºñÂÜôÈ´òË¥®ÈáèÁöÑÊèêÁ§∫ËØç</p>
            <p>Language: TypeScript</p>
            <p>Stars: 13,831</p>
            <p>Forks: 1,684</p>
            <p>Stars today: 84 stars today</p>
            <h2>README</h2><pre># Prompt Optimizer (ÊèêÁ§∫ËØç‰ºòÂåñÂô®) üöÄ

&lt;div align=&quot;center&quot;&gt;

[English](README_EN.md) | [‰∏≠Êñá](README.md)

[![GitHub stars](https://img.shields.io/github/stars/linshenkx/prompt-optimizer)](https://github.com/linshenkx/prompt-optimizer/stargazers)
![Chrome Web Store Users](https://img.shields.io/chrome-web-store/users/cakkkhboolfnadechdlgdcnjammejlna?style=flat&amp;label=Chrome%20Users&amp;link=https%3A%2F%2Fchromewebstore.google.com%2Fdetail%2F%25E6%258F%2590%25E7%25A4%25BA%25E8%25AF%258D%25E4%25BC%2598%25E5%258C%2596%25E5%2599%25A8%2Fcakkkhboolfnadechdlgdcnjammejlna)

&lt;a href=&quot;https://trendshift.io/repositories/13813&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://trendshift.io/api/badge/repositories/13813&quot; alt=&quot;linshenkx%2Fprompt-optimizer | Trendshift&quot; style=&quot;width: 250px; height: 55px;&quot; width=&quot;250&quot; height=&quot;55&quot;/&gt;&lt;/a&gt;

[![License](https://img.shields.io/badge/license-MIT-blue.svg)](LICENSE)
[![Docker Pulls](https://img.shields.io/docker/pulls/linshen/prompt-optimizer)](https://hub.docker.com/r/linshen/prompt-optimizer)
![GitHub forks](https://img.shields.io/github/forks/linshenkx/prompt-optimizer?style=flat)
[![Deploy with Vercel](https://img.shields.io/badge/Vercel-indigo?style=flat&amp;logo=vercel)](https://vercel.com/new/clone?repository-url=https%3A%2F%2Fgithub.com%2Flinshenkx%2Fprompt-optimizer)

[Âú®Á∫ø‰ΩìÈ™å](https://prompt.always200.com) | [Âø´ÈÄüÂºÄÂßã](#Âø´ÈÄüÂºÄÂßã) | [Â∏∏ËßÅÈóÆÈ¢ò](#Â∏∏ËßÅÈóÆÈ¢ò) | [ChromeÊèí‰ª∂](https://chromewebstore.google.com/detail/prompt-optimizer/cakkkhboolfnadechdlgdcnjammejlna)

[ÂºÄÂèëÊñáÊ°£](dev.md) | [VercelÈÉ®ÁΩ≤ÊåáÂçó](docs/user/deployment/vercel.md) | [MCPÈÉ®ÁΩ≤‰ΩøÁî®ËØ¥Êòé](docs/user/mcp-server.md) | [DeepWikiÊñáÊ°£](https://deepwiki.com/linshenkx/prompt-optimizer) | [ZReadÊñáÊ°£](https://zread.ai/linshenkx/prompt-optimizer)

&lt;/div&gt;

## üìñ È°πÁõÆÁÆÄ‰ªã

Prompt OptimizerÊòØ‰∏Ä‰∏™Âº∫Â§ßÁöÑAIÊèêÁ§∫ËØç‰ºòÂåñÂ∑•ÂÖ∑ÔºåÂ∏ÆÂä©‰Ω†ÁºñÂÜôÊõ¥Â•ΩÁöÑAIÊèêÁ§∫ËØçÔºåÊèêÂçáAIËæìÂá∫Ë¥®Èáè„ÄÇÊîØÊåÅWebÂ∫îÁî®„ÄÅÊ°åÈù¢Â∫îÁî®„ÄÅChromeÊèí‰ª∂ÂíåDockerÈÉ®ÁΩ≤ÂõõÁßç‰ΩøÁî®ÊñπÂºè„ÄÇ

### üé• ÂäüËÉΩÊºîÁ§∫

&lt;div align=&quot;center&quot;&gt;
  &lt;p&gt;&lt;b&gt;1. ËßíËâ≤ÊâÆÊºîÂØπËØùÔºöÊøÄÂèëÂ∞èÊ®°ÂûãÊΩúÂäõ&lt;/b&gt;&lt;/p&gt;
  &lt;p&gt;Âú®ËøΩÊ±ÇÊàêÊú¨ÊïàÁõäÁöÑÁîü‰∫ßÊàñÊ≥®ÈáçÈöêÁßÅÁöÑÊú¨Âú∞ÂåñÂú∫ÊôØ‰∏≠ÔºåÁªìÊûÑÂåñÁöÑÊèêÁ§∫ËØçËÉΩËÆ©Â∞èÊ®°ÂûãÁ®≥ÂÆöÂú∞ËøõÂÖ•ËßíËâ≤ÔºåÊèê‰æõÊ≤âÊµ∏Âºè„ÄÅÈ´ò‰∏ÄËá¥ÊÄßÁöÑËßíËâ≤ÊâÆÊºî‰ΩìÈ™åÔºåÊúâÊïàÊøÄÂèëÂÖ∂ÊΩúÂäõ„ÄÇ&lt;/p&gt;
  &lt;img src=&quot;images/demo/cat-maid-roleplay.png&quot; alt=&quot;Áå´Â•≥‰ªÜËßíËâ≤ÊâÆÊºîÊºîÁ§∫&quot; width=&quot;85%&quot;&gt;
  &lt;br&gt;
  &lt;p&gt;&lt;b&gt;2. Áü•ËØÜÂõæË∞±ÊèêÂèñÔºö‰øùÈöúÁîü‰∫ßÁéØÂ¢ÉÁöÑÁ®≥ÂÆöÊÄß&lt;/b&gt;&lt;/p&gt;
  &lt;p&gt;Âú®ÈúÄË¶ÅÁ®ãÂ∫èÂåñÂ§ÑÁêÜÁöÑÁîü‰∫ßÁéØÂ¢É‰∏≠ÔºåÈ´òË¥®ÈáèÁöÑÊèêÁ§∫ËØçËÉΩÊòæËëóÈôç‰ΩéÂØπÊ®°ÂûãÊô∫ËÉΩÁ®ãÂ∫¶ÁöÑË¶ÅÊ±ÇÔºå‰ΩøÂæóÊõ¥ÁªèÊµéÁöÑÂ∞èÊ®°Âûã‰πüËÉΩÁ®≥ÂÆöËæìÂá∫ÂèØÈù†ÁöÑÊåáÂÆöÊ†ºÂºè„ÄÇÊú¨Â∑•ÂÖ∑Êó®Âú®ËæÖÂä©ÂºÄÂèëËÄÖÂø´ÈÄüËææÂà∞Ê≠§ÁõÆÁöÑÔºå‰ªéËÄåÂä†ÈÄüÂºÄÂèë„ÄÅ‰øùÈöúÁ®≥ÂÆöÔºåÂÆûÁé∞ÈôçÊú¨Â¢ûÊïà„ÄÇ&lt;/p&gt;
  &lt;img src=&quot;images/demo/knowledge-graph-extractor.png&quot; alt=&quot;Áü•ËØÜÂõæË∞±ÊèêÂèñÊºîÁ§∫&quot; width=&quot;85%&quot;&gt;
  &lt;br&gt;
  &lt;p&gt;&lt;b&gt;3. ËØóÊ≠åÂÜô‰ΩúÔºöËæÖÂä©ÂàõÊÑèÊé¢Á¥¢‰∏éÈúÄÊ±ÇÂÆöÂà∂&lt;/b&gt;&lt;/p&gt;
  &lt;p&gt;ÂΩìÈù¢ÂØπ‰∏Ä‰∏™Âº∫Â§ßÁöÑAIÔºåÊàë‰ª¨ÁöÑÁõÆÊ†á‰∏çÂè™ÊòØÂæóÂà∞‰∏Ä‰∏™‚ÄúÂ•Ω‚ÄùÁ≠îÊ°àÔºåËÄåÊòØÂæóÂà∞‰∏Ä‰∏™‚ÄúÊàë‰ª¨ÊÉ≥Ë¶ÅÁöÑ‚ÄùÁã¨ÁâπÁ≠îÊ°à„ÄÇÊú¨Â∑•ÂÖ∑ËÉΩÂ∏ÆÂä©Áî®Êà∑Â∞Ü‰∏Ä‰∏™Ê®°Á≥äÁöÑÁÅµÊÑüÔºàÂ¶Ç‚ÄúÂÜôÈ¶ñËØó‚ÄùÔºâÁªÜÂåñ‰∏∫ÂÖ∑‰ΩìÁöÑÈúÄÊ±ÇÔºàÂÖ≥‰∫é‰ªÄ‰πà‰∏ªÈ¢ò„ÄÅ‰ΩïÁßçÊÑèË±°„ÄÅ‰ΩïÁßçÊÉÖÊÑüÔºâÔºåËæÖÂä©ÊÇ®Êé¢Á¥¢„ÄÅÂèëÊéòÂπ∂Á≤æÁ°ÆË°®ËææËá™Â∑±ÁöÑÂàõÊÑèÔºå‰∏éAIÂÖ±ÂàõÁã¨‰∏ÄÊó†‰∫åÁöÑ‰ΩúÂìÅ„ÄÇ&lt;/p&gt;
  &lt;img src=&quot;images/demo/poetry-writing.png&quot; alt=&quot;ËØóÊ≠åÂàõ‰ΩúÊºîÁ§∫&quot; width=&quot;85%&quot;&gt;
&lt;/div&gt;

## ‚ú® Ê†∏ÂøÉÁâπÊÄß

- üéØ **Êô∫ËÉΩ‰ºòÂåñ**Ôºö‰∏ÄÈîÆ‰ºòÂåñÊèêÁ§∫ËØçÔºåÊîØÊåÅÂ§öËΩÆËø≠‰ª£ÊîπËøõÔºåÊèêÂçáAIÂõûÂ§çÂáÜÁ°ÆÂ∫¶
- üìù **ÂèåÊ®°Âºè‰ºòÂåñ**ÔºöÊîØÊåÅÁ≥ªÁªüÊèêÁ§∫ËØç‰ºòÂåñÂíåÁî®Êà∑ÊèêÁ§∫ËØç‰ºòÂåñÔºåÊª°Ë∂≥‰∏çÂêå‰ΩøÁî®Âú∫ÊôØ
- üîÑ **ÂØπÊØîÊµãËØï**ÔºöÊîØÊåÅÂéüÂßãÊèêÁ§∫ËØçÂíå‰ºòÂåñÂêéÊèêÁ§∫ËØçÁöÑÂÆûÊó∂ÂØπÊØîÔºåÁõ¥ËßÇÂ±ïÁ§∫‰ºòÂåñÊïàÊûú
- ü§ñ **Â§öÊ®°ÂûãÈõÜÊàê**ÔºöÊîØÊåÅOpenAI„ÄÅGemini„ÄÅDeepSeek„ÄÅÊô∫Ë∞±AI„ÄÅSiliconFlowÁ≠â‰∏ªÊµÅAIÊ®°Âûã
- üîí **ÂÆâÂÖ®Êû∂ÊûÑ**ÔºöÁ∫ØÂÆ¢Êà∑Á´ØÂ§ÑÁêÜÔºåÊï∞ÊçÆÁõ¥Êé•‰∏éAIÊúçÂä°ÂïÜ‰∫§‰∫íÔºå‰∏çÁªèËøá‰∏≠Èó¥ÊúçÂä°Âô®
- üì± **Â§öÁ´ØÊîØÊåÅ**ÔºöÂêåÊó∂Êèê‰æõWebÂ∫îÁî®„ÄÅÊ°åÈù¢Â∫îÁî®„ÄÅChromeÊèí‰ª∂ÂíåDockerÈÉ®ÁΩ≤ÂõõÁßç‰ΩøÁî®ÊñπÂºè
- üîê **ËÆøÈóÆÊéßÂà∂**ÔºöÊîØÊåÅÂØÜÁ†Å‰øùÊä§ÂäüËÉΩÔºå‰øùÈöúÈÉ®ÁΩ≤ÂÆâÂÖ®
- üß© **MCPÂçèËÆÆÊîØÊåÅ**ÔºöÊîØÊåÅModel Context Protocol (MCP) ÂçèËÆÆÔºåÂèØ‰∏éClaude DesktopÁ≠âMCPÂÖºÂÆπÂ∫îÁî®ÈõÜÊàê

## Âø´ÈÄüÂºÄÂßã

### 1. ‰ΩøÁî®Âú®Á∫øÁâàÊú¨ÔºàÊé®ËçêÔºâ

Áõ¥Êé•ËÆøÈóÆÔºö[https://prompt.always200.com](https://prompt.always200.com)

È°πÁõÆÊòØÁ∫ØÂâçÁ´ØÈ°πÁõÆÔºåÊâÄÊúâÊï∞ÊçÆÂè™Â≠òÂÇ®Âú®ÊµèËßàÂô®Êú¨Âú∞Ôºå‰∏ç‰ºö‰∏ä‰º†Ëá≥‰ªª‰ΩïÊúçÂä°Âô®ÔºåÂõ†Ê≠§Áõ¥Êé•‰ΩøÁî®Âú®Á∫øÁâàÊú¨‰πüÊòØÂÆâÂÖ®ÂèØÈù†ÁöÑ

### 2. VercelÈÉ®ÁΩ≤
ÊñπÂºè1Ôºö‰∏ÄÈîÆÈÉ®ÁΩ≤Âà∞Ëá™Â∑±ÁöÑVercel(Êñπ‰æøÔºå‰ΩÜÂêéÁª≠Êó†Ê≥ïËá™Âä®Êõ¥Êñ∞)Ôºö
   [![ÈÉ®ÁΩ≤Âà∞ Vercel](https://vercel.com/button)](https://vercel.com/new/clone?repository-url=https%3A%2F%2Fgithub.com%2Flinshenkx%2Fprompt-optimizer)

ÊñπÂºè2: ForkÈ°πÁõÆÂêéÂú®Vercel‰∏≠ÂØºÂÖ•ÔºàÊé®ËçêÔºå‰ΩÜÈúÄÂèÇËÄÉÈÉ®ÁΩ≤ÊñáÊ°£ËøõË°åÊâãÂä®ËÆæÁΩÆÔºâÔºö
   - ÂÖàForkÈ°πÁõÆÂà∞Ëá™Â∑±ÁöÑGitHub
   - ÁÑ∂ÂêéÂú®Vercel‰∏≠ÂØºÂÖ•ËØ•È°πÁõÆ
   - ÂèØË∑üË∏™Ê∫êÈ°πÁõÆÊõ¥Êñ∞Ôºå‰æø‰∫éÂêåÊ≠•ÊúÄÊñ∞ÂäüËÉΩÂíå‰øÆÂ§ç
- ÈÖçÁΩÆÁéØÂ¢ÉÂèòÈáèÔºö
  - `ACCESS_PASSWORD`ÔºöËÆæÁΩÆËÆøÈóÆÂØÜÁ†ÅÔºåÂêØÁî®ËÆøÈóÆÈôêÂà∂
  - `VITE_OPENAI_API_KEY`Á≠âÔºöÈÖçÁΩÆÂêÑAIÊúçÂä°ÂïÜÁöÑAPIÂØÜÈí•

Êõ¥Â§öËØ¶ÁªÜÁöÑÈÉ®ÁΩ≤Ê≠•È™§ÂíåÊ≥®ÊÑè‰∫ãÈ°πÔºåËØ∑Êü•ÁúãÔºö
- [VercelÈÉ®ÁΩ≤ÊåáÂçó](docs/user/deployment/vercel.md)

### 3. ‰∏ãËΩΩÊ°åÈù¢Â∫îÁî®
‰ªé [GitHub Releases](https://github.com/linshenkx/prompt-optimizer/releases) ‰∏ãËΩΩÊúÄÊñ∞ÁâàÊú¨„ÄÇÊàë‰ª¨‰∏∫ÂêÑÂπ≥Âè∞Êèê‰æõ**ÂÆâË£ÖÁ®ãÂ∫è**Âíå**ÂéãÁº©ÂåÖ**‰∏§ÁßçÊ†ºÂºè„ÄÇ

- **ÂÆâË£ÖÁ®ãÂ∫è (Êé®Ëçê)**: Â¶Ç `*.exe`, `*.dmg`, `*.AppImage` Á≠â„ÄÇ**Âº∫ÁÉàÊé®Ëçê‰ΩøÁî®Ê≠§ÊñπÂºèÔºåÂõ†‰∏∫ÂÆÉÊîØÊåÅËá™Âä®Êõ¥Êñ∞**„ÄÇ
- **ÂéãÁº©ÂåÖ**: Â¶Ç `*.zip`„ÄÇËß£ÂéãÂç≥Áî®Ôºå‰ΩÜÊó†Ê≥ïËá™Âä®Êõ¥Êñ∞„ÄÇ

**Ê°åÈù¢Â∫îÁî®Ê†∏ÂøÉ‰ºòÂäø**:
- ‚úÖ **Êó†Ë∑®ÂüüÈôêÂà∂**Ôºö‰Ωú‰∏∫ÂéüÁîüÊ°åÈù¢Â∫îÁî®ÔºåÂÆÉËÉΩÂΩªÂ∫ïÊëÜËÑ±ÊµèËßàÂô®Ë∑®ÂüüÔºàCORSÔºâÈóÆÈ¢òÁöÑÂõ∞Êâ∞„ÄÇËøôÊÑèÂë≥ÁùÄÊÇ®ÂèØ‰ª•Áõ¥Êé•ËøûÊé•‰ªª‰ΩïAIÊúçÂä°Êèê‰æõÂïÜÁöÑAPIÔºåÂåÖÊã¨Êú¨Âú∞ÈÉ®ÁΩ≤ÁöÑOllamaÊàñÊúâ‰∏•Ê†ºÂÆâÂÖ®Á≠ñÁï•ÁöÑÂïÜ‰∏öAPIÔºåËé∑ÂæóÊúÄÂÆåÊï¥„ÄÅÊúÄÁ®≥ÂÆöÁöÑÂäüËÉΩ‰ΩìÈ™å„ÄÇ
- ‚úÖ **Ëá™Âä®Êõ¥Êñ∞**ÔºöÈÄöËøáÂÆâË£ÖÁ®ãÂ∫èÔºàÂ¶Ç `.exe`, `.dmg`ÔºâÂÆâË£ÖÁöÑÁâàÊú¨ÔºåËÉΩÂ§üËá™Âä®Ê£ÄÊü•Âπ∂Êõ¥Êñ∞Âà∞ÊúÄÊñ∞Áâà„ÄÇ
- ‚úÖ **Áã¨Á´ãËøêË°å**ÔºöÊó†ÈúÄ‰æùËµñÊµèËßàÂô®ÔºåÊèê‰æõÊõ¥Âø´ÁöÑÂìçÂ∫îÂíåÊõ¥‰Ω≥ÁöÑÊÄßËÉΩ„ÄÇ

### 4. ÂÆâË£ÖChromeÊèí‰ª∂
1. ‰ªéChromeÂïÜÂ∫óÂÆâË£ÖÔºàÁî±‰∫éÂÆ°ÊâπËæÉÊÖ¢ÔºåÂèØËÉΩ‰∏çÊòØÊúÄÊñ∞ÁöÑÔºâÔºö[ChromeÂïÜÂ∫óÂú∞ÂùÄ](https://chromewebstore.google.com/detail/prompt-optimizer/cakkkhboolfnadechdlgdcnjammejlna)
2. ÁÇπÂáªÂõæÊ†áÂç≥ÂèØÊâìÂºÄÊèêÁ§∫ËØç‰ºòÂåñÂô®

### 5. DockerÈÉ®ÁΩ≤
&lt;details&gt;
&lt;summary&gt;ÁÇπÂáªÊü•Áúã Docker ÈÉ®ÁΩ≤ÂëΩ‰ª§&lt;/summary&gt;

```bash
# ËøêË°åÂÆπÂô®ÔºàÈªòËÆ§ÈÖçÁΩÆÔºâ
docker run -d -p 8081:80 --restart unless-stopped --name prompt-optimizer linshen/prompt-optimizer

# ËøêË°åÂÆπÂô®ÔºàÈÖçÁΩÆAPIÂØÜÈí•ÂíåËÆøÈóÆÂØÜÁ†ÅÔºâ
docker run -d -p 8081:80 \
  -e VITE_OPENAI_API_KEY=your_key \
  -e ACCESS_USERNAME=your_username \  # ÂèØÈÄâÔºåÈªòËÆ§‰∏∫&quot;admin&quot;
  -e ACCESS_PASSWORD=your_password \  # ËÆæÁΩÆËÆøÈóÆÂØÜÁ†Å
  --restart unless-stopped \
  --name prompt-optimizer \
  linshen/prompt-optimizer
```
&lt;/details&gt;

&gt; **ÂõΩÂÜÖÈïúÂÉè**: Â¶ÇÊûúDocker HubËÆøÈóÆËæÉÊÖ¢ÔºåÂèØ‰ª•Â∞Ü‰∏äËø∞ÂëΩ‰ª§‰∏≠ÁöÑ `linshen/prompt-optimizer` ÊõøÊç¢‰∏∫ `registry.cn-guangzhou.aliyuncs.com/prompt-optimizer/prompt-optimizer`

### 6. Docker ComposeÈÉ®ÁΩ≤
&lt;details&gt;
&lt;summary&gt;ÁÇπÂáªÊü•Áúã Docker Compose ÈÉ®ÁΩ≤Ê≠•È™§&lt;/summary&gt;

```bash
# 1. ÂÖãÈöÜ‰ªìÂ∫ì
git clone https://github.com/linshenkx/prompt-optimizer.git
cd prompt-optimizer

# 2. ÂèØÈÄâÔºöÂàõÂª∫.envÊñá‰ª∂ÈÖçÁΩÆAPIÂØÜÈí•ÂíåËÆøÈóÆËÆ§ËØÅ
cp env.local.example .env
# ÁºñËæë .env Êñá‰ª∂ÔºåÂ°´ÂÖ•ÂÆûÈôÖÁöÑ API ÂØÜÈí•ÂíåÈÖçÁΩÆ

# 3. ÂêØÂä®ÊúçÂä°
docker compose up -d

# 4. Êü•ÁúãÊó•Âøó
docker compose logs -f

# 5. ËÆøÈóÆÊúçÂä°
Web ÁïåÈù¢Ôºöhttp://localhost:8081
MCP ÊúçÂä°Âô®Ôºöhttp://localhost:8081/mcp
```
&lt;/details&gt;

‰Ω†ËøòÂèØ‰ª•Áõ¥Êé•ÁºñËæëdocker-compose.ymlÊñá‰ª∂ÔºåËá™ÂÆö‰πâÈÖçÁΩÆÔºö
&lt;details&gt;
&lt;summary&gt;ÁÇπÂáªÊü•Áúã docker-compose.yml Á§∫‰æã&lt;/summary&gt;

```yaml
services:
  prompt-optimizer:
    # ‰ΩøÁî®Docker HubÈïúÂÉè
    image: linshen/prompt-optimizer:latest
    # Êàñ‰ΩøÁî®ÈòøÈáå‰∫ëÈïúÂÉèÔºàÂõΩÂÜÖÁî®Êà∑Êé®ËçêÔºâ
    # image: registry.cn-guangzhou.aliyuncs.com/prompt-optimizer/prompt-optimizer:latest
    container_name: prompt-optimizer
    restart: unless-stopped
    ports:
      - &quot;8081:80&quot;  # WebÂ∫îÁî®Á´ØÂè£ÔºàÂåÖÂê´MCPÊúçÂä°Âô®ÔºåÈÄöËøá/mcpË∑ØÂæÑËÆøÈóÆÔºâ
    environment:
      # APIÂØÜÈí•ÈÖçÁΩÆ
      - VITE_OPENAI_API_KEY=your_openai_key
      - VITE_GEMINI_API_KEY=your_gemini_key
      # ËÆøÈóÆÊéßÂà∂ÔºàÂèØÈÄâÔºâ
      - ACCESS_USERNAME=admin
      - ACCESS_PASSWORD=your_password
```
&lt;/details&gt;

### 7. MCP Server ‰ΩøÁî®ËØ¥Êòé
&lt;details&gt;
&lt;summary&gt;ÁÇπÂáªÊü•Áúã MCP Server ‰ΩøÁî®ËØ¥Êòé&lt;/summary&gt;

Prompt Optimizer Áé∞Âú®ÊîØÊåÅ Model Context Protocol (MCP) ÂçèËÆÆÔºåÂèØ‰ª•‰∏é Claude Desktop Á≠âÊîØÊåÅ MCP ÁöÑ AI Â∫îÁî®ÈõÜÊàê„ÄÇ

ÂΩìÈÄöËøá Docker ËøêË°åÊó∂ÔºåMCP Server ‰ºöËá™Âä®ÂêØÂä®ÔºåÂπ∂ÂèØÈÄöËøá `http://ip:port/mcp` ËÆøÈóÆ„ÄÇ

#### ÁéØÂ¢ÉÂèòÈáèÈÖçÁΩÆ

MCP Server ÈúÄË¶ÅÈÖçÁΩÆ API ÂØÜÈí•ÊâçËÉΩÊ≠£Â∏∏Â∑•‰Ωú„ÄÇ‰∏ªË¶ÅÁöÑ MCP ‰∏ìÂ±ûÈÖçÁΩÆÔºö

```bash
# MCP ÊúçÂä°Âô®ÈÖçÁΩÆ
MCP_DEFAULT_MODEL_PROVIDER=openai  # ÂèØÈÄâÂÄºÔºöopenai, gemini, deepseek, siliconflow, zhipu, custom
MCP_LOG_LEVEL=info                 # Êó•ÂøóÁ∫ßÂà´
```

#### Docker ÁéØÂ¢É‰∏ã‰ΩøÁî® MCP

Âú® Docker ÁéØÂ¢É‰∏≠ÔºåMCP Server ‰ºö‰∏é Web Â∫îÁî®‰∏ÄËµ∑ËøêË°åÔºåÊÇ®ÂèØ‰ª•ÈÄöËøá Web Â∫îÁî®ÁöÑÁõ∏ÂêåÁ´ØÂè£ËÆøÈóÆ MCP ÊúçÂä°ÔºåË∑ØÂæÑ‰∏∫ `/mcp`„ÄÇ

‰æãÂ¶ÇÔºåÂ¶ÇÊûúÊÇ®Â∞ÜÂÆπÂô®ÁöÑ 80 Á´ØÂè£Êò†Â∞ÑÂà∞‰∏ªÊú∫ÁöÑ 8081 Á´ØÂè£Ôºö
```bash
docker run -d -p 8081:80 \
  -e VITE_OPENAI_API_KEY=your-openai-key \
  -e MCP_DEFAULT_MODEL_PROVIDER=openai \
  --name prompt-optimizer \
  linshen/prompt-optimizer
```

ÈÇ£‰πà MCP Server Â∞ÜÂèØ‰ª•ÈÄöËøá `http://localhost:8081/mcp` ËÆøÈóÆ„ÄÇ

#### Claude Desktop ÈõÜÊàêÁ§∫‰æã

Ë¶ÅÂú® Claude Desktop ‰∏≠‰ΩøÁî® Prompt OptimizerÔºåÊÇ®ÈúÄË¶ÅÂú® Claude Desktop ÁöÑÈÖçÁΩÆÊñá‰ª∂‰∏≠Ê∑ªÂä†ÊúçÂä°ÈÖçÁΩÆ„ÄÇ

1. ÊâæÂà∞ Claude Desktop ÁöÑÈÖçÁΩÆÁõÆÂΩïÔºö
   - Windows: `%APPDATA%\Claude\services`
   - macOS: `~/Library/Application Support/Claude/services`
   - Linux: `~/.config/Claude/services`

2. ÁºñËæëÊàñÂàõÂª∫ `services.json` Êñá‰ª∂ÔºåÊ∑ªÂä†‰ª•‰∏ãÂÜÖÂÆπÔºö

```json
{
  &quot;services&quot;: [
    {
      &quot;name&quot;: &quot;Prompt Optimizer&quot;,
      &quot;url&quot;: &quot;http://localhost:8081/mcp&quot;
    }
  ]
}
```

ËØ∑Á°Æ‰øùÂ∞Ü `localhost:8081` ÊõøÊç¢‰∏∫ÊÇ®ÂÆûÈôÖÈÉ®ÁΩ≤ Prompt Optimizer ÁöÑÂú∞ÂùÄÂíåÁ´ØÂè£„ÄÇ

#### ÂèØÁî®Â∑•ÂÖ∑

- **optimize-user-prompt**: ‰ºòÂåñÁî®Êà∑ÊèêÁ§∫ËØç‰ª•ÊèêÈ´ò LLM ÊÄßËÉΩ
- **optimize-system-prompt**: ‰ºòÂåñÁ≥ªÁªüÊèêÁ§∫ËØç‰ª•ÊèêÈ´ò LLM ÊÄßËÉΩ
- **iterate-prompt**: ÂØπÂ∑≤ÁªèÊàêÁÜü/ÂÆåÂñÑÁöÑÊèêÁ§∫ËØçËøõË°åÂÆöÂêëËø≠‰ª£‰ºòÂåñ

Êõ¥Â§öËØ¶ÁªÜ‰ø°ÊÅØÔºåËØ∑Êü•Áúã [MCP ÊúçÂä°Âô®Áî®Êà∑ÊåáÂçó](docs/user/mcp-server.md)„ÄÇ
&lt;/details&gt;

## ‚öôÔ∏è APIÂØÜÈí•ÈÖçÁΩÆ

&lt;details&gt;
&lt;summary&gt;ÁÇπÂáªÊü•ÁúãAPIÂØÜÈí•ÈÖçÁΩÆÊñπÊ≥ï&lt;/summary&gt;

### ÊñπÂºè‰∏ÄÔºöÈÄöËøáÁïåÈù¢ÈÖçÁΩÆÔºàÊé®ËçêÔºâ
1. ÁÇπÂáªÁïåÈù¢Âè≥‰∏äËßíÁöÑ&quot;‚öôÔ∏èËÆæÁΩÆ&quot;ÊåâÈíÆ
2. ÈÄâÊã©&quot;Ê®°ÂûãÁÆ°ÁêÜ&quot;ÈÄâÈ°πÂç°
3. ÁÇπÂáªÈúÄË¶ÅÈÖçÁΩÆÁöÑÊ®°ÂûãÔºàÂ¶ÇOpenAI„ÄÅGemini„ÄÅDeepSeekÁ≠âÔºâ
4. Âú®ÂºπÂá∫ÁöÑÈÖçÁΩÆÊ°Ü‰∏≠ËæìÂÖ•ÂØπÂ∫îÁöÑAPIÂØÜÈí•
5. ÁÇπÂáª&quot;‰øùÂ≠ò&quot;Âç≥ÂèØ

ÊîØÊåÅÁöÑÊ®°ÂûãÔºöOpenAI„ÄÅGemini„ÄÅDeepSeek„ÄÅZhipuÊô∫Ë∞±„ÄÅSiliconFlow„ÄÅËá™ÂÆö‰πâAPIÔºàOpenAIÂÖºÂÆπÊé•Âè£Ôºâ

Èô§‰∫ÜAPIÂØÜÈí•ÔºåÊÇ®ËøòÂèØ‰ª•Âú®Ê®°ÂûãÈÖçÁΩÆÁïåÈù¢‰∏∫ÊØè‰∏™Ê®°ÂûãÂçïÁã¨ËÆæÁΩÆÈ´òÁ∫ßLLMÂèÇÊï∞„ÄÇËøô‰∫õÂèÇÊï∞ÈÄöËøá‰∏Ä‰∏™Âêç‰∏∫ `llmParams` ÁöÑÂ≠óÊÆµËøõË°åÈÖçÁΩÆÔºåÂÆÉÂÖÅËÆ∏ÊÇ®‰ª•ÈîÆÂÄºÂØπÁöÑÂΩ¢ÂºèÊåáÂÆöLLM SDKÊîØÊåÅÁöÑ‰ªª‰ΩïÂèÇÊï∞Ôºå‰ªéËÄåÊõ¥Á≤æÁªÜÂú∞ÊéßÂà∂Ê®°ÂûãË°å‰∏∫„ÄÇ

**È´òÁ∫ßLLMÂèÇÊï∞ÈÖçÁΩÆÁ§∫‰æãÔºö**
- **OpenAI/ÂÖºÂÆπAPI**: `{&quot;temperature&quot;: 0.7, &quot;max_tokens&quot;: 4096, &quot;timeout&quot;: 60000}`
- **Gemini**: `{&quot;temperature&quot;: 0.8, &quot;maxOutputTokens&quot;: 2048, &quot;topP&quot;: 0.95}`
- **DeepSeek**: `{&quot;temperature&quot;: 0.5, &quot;top_p&quot;: 0.9, &quot;frequency_penalty&quot;: 0.1}`

ÊúâÂÖ≥ `llmParams` ÁöÑÊõ¥ËØ¶ÁªÜËØ¥ÊòéÂíåÈÖçÁΩÆÊåáÂçóÔºåËØ∑ÂèÇÈòÖ [LLMÂèÇÊï∞ÈÖçÁΩÆÊåáÂçó](docs/developer/llm-params-guide.md)„ÄÇ

### ÊñπÂºè‰∫åÔºöÈÄöËøáÁéØÂ¢ÉÂèòÈáèÈÖçÁΩÆ
DockerÈÉ®ÁΩ≤Êó∂ÈÄöËøá `-e` ÂèÇÊï∞ÈÖçÁΩÆÁéØÂ¢ÉÂèòÈáèÔºö

```bash
-e VITE_OPENAI_API_KEY=your_key
-e VITE_GEMINI_API_KEY=your_key
-e VITE_DEEPSEEK_API_KEY=your_key
-e VITE_ZHIPU_API_KEY=your_key
-e VITE_SILICONFLOW_API_KEY=your_key

# Â§öËá™ÂÆö‰πâÊ®°ÂûãÈÖçÁΩÆÔºàÊîØÊåÅÊó†ÈôêÊï∞ÈáèÔºâ
-e VITE_CUSTOM_API_KEY_ollama=dummy_key
-e VITE_CUSTOM_API_BASE_URL_ollama=http://localhost:11434/v1
-e VITE_CUSTOM_API_MODEL_ollama=qwen2.5:7b
```

&gt; üìñ **ËØ¶ÁªÜÈÖçÁΩÆÊåáÂçó**: Êü•Áúã [Â§öËá™ÂÆö‰πâÊ®°ÂûãÈÖçÁΩÆÊñáÊ°£](./docs/user/multi-custom-models.md) ‰∫ÜËß£ÂÆåÊï¥ÁöÑÈÖçÁΩÆÊñπÊ≥ïÂíåÈ´òÁ∫ßÁî®Ê≥ï

&lt;/details&gt;

## Êú¨Âú∞ÂºÄÂèë
ËØ¶ÁªÜÊñáÊ°£ÂèØÊü•Áúã [ÂºÄÂèëÊñáÊ°£](dev.md)

&lt;details&gt;
&lt;summary&gt;ÁÇπÂáªÊü•ÁúãÊú¨Âú∞ÂºÄÂèëÂëΩ‰ª§&lt;/summary&gt;

```bash
# 1. ÂÖãÈöÜÈ°πÁõÆ
git clone https://github.com/linshenkx/prompt-optimizer.git
cd prompt-optimizer

# 2. ÂÆâË£Ö‰æùËµñ
pnpm install

# 3. ÂêØÂä®ÂºÄÂèëÊúçÂä°
pnpm dev               # ‰∏ªÂºÄÂèëÂëΩ‰ª§ÔºöÊûÑÂª∫core/uiÂπ∂ËøêË°åwebÂ∫îÁî®
pnpm dev:web          # ‰ªÖËøêË°åwebÂ∫îÁî®
pnpm dev:fresh        # ÂÆåÊï¥ÈáçÁΩÆÂπ∂ÈáçÊñ∞ÂêØÂä®ÂºÄÂèëÁéØÂ¢É
```
&lt;/details&gt;

## üó∫Ô∏è ÂºÄÂèëË∑ØÁ∫ø

- [x] Âü∫Á°ÄÂäüËÉΩÂºÄÂèë
- [x] WebÂ∫îÁî®ÂèëÂ∏É
- [x] ChromeÊèí‰ª∂ÂèëÂ∏É
- [x] ÂõΩÈôÖÂåñÊîØÊåÅ
- [x] ÊîØÊåÅÁ≥ªÁªüÊèêÁ§∫ËØç‰ºòÂåñÂíåÁî®Êà∑ÊèêÁ§∫ËØç‰ºòÂåñ
- [x] Ê°åÈù¢Â∫îÁî®ÂèëÂ∏É
- [x] mcpÊúçÂä°ÂèëÂ∏É

ËØ¶ÁªÜÁöÑÈ°πÁõÆÁä∂ÊÄÅÂèØÊü•Áúã [È°πÁõÆÁä∂ÊÄÅÊñáÊ°£](docs/project-status.md)

## üìñ Áõ∏ÂÖ≥ÊñáÊ°£

- [ÊñáÊ°£Á¥¢Âºï](docs/README.md) - ÊâÄÊúâÊñáÊ°£ÁöÑÁ¥¢Âºï
- [ÊäÄÊúØÂºÄÂèëÊåáÂçó](docs/developer/technical-development-guide.md) - ÊäÄÊúØÊ†àÂíåÂºÄÂèëËßÑËåÉ
- [LLMÂèÇÊï∞ÈÖçÁΩÆÊåáÂçó](docs/developer/llm-params-guide.md) - È´òÁ∫ßLLMÂèÇÊï∞ÈÖçÁΩÆËØ¶ÁªÜËØ¥Êòé
- [È°πÁõÆÁªìÊûÑ](docs/developer/project-structure.md) - ËØ¶ÁªÜÁöÑÈ°πÁõÆÁªìÊûÑËØ¥Êòé
- [È°πÁõÆÁä∂ÊÄÅ](docs/project/project-status.md) - ÂΩìÂâçËøõÂ∫¶ÂíåËÆ°Âàí
- [‰∫ßÂìÅÈúÄÊ±Ç](docs/project/prd.md) - ‰∫ßÂìÅÈúÄÊ±ÇÊñáÊ°£
- [VercelÈÉ®ÁΩ≤ÊåáÂçó](docs/user/deployment/vercel.md) - VercelÈÉ®ÁΩ≤ËØ¶ÁªÜËØ¥Êòé


## Star History

&lt;a href=&quot;https://star-history.com/#linshenkx/prompt-optimizer&amp;Date&quot;&gt;
 &lt;picture&gt;
   &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://api.star-history.com/svg?repos=linshenkx/prompt-optimizer&amp;type=Date&amp;theme=dark&quot; /&gt;
   &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://api.star-history.com/svg?repos=linshenkx/prompt-optimizer&amp;type=Date&quot; /&gt;
   &lt;img alt=&quot;Star History Chart&quot; src=&quot;https://api.star-history.com/svg?repos=linshenkx/prompt-optimizer&amp;type=Date&quot; /&gt;
 &lt;/picture&gt;
&lt;/a&gt;

## Â∏∏ËßÅÈóÆÈ¢ò

&lt;details&gt;
&lt;summary&gt;ÁÇπÂáªÊü•ÁúãÂ∏∏ËßÅÈóÆÈ¢òËß£Á≠î&lt;/summary&gt;

### APIËøûÊé•ÈóÆÈ¢ò

#### Q1: ‰∏∫‰ªÄ‰πàÈÖçÁΩÆÂ•ΩAPIÂØÜÈí•Âêé‰ªçÁÑ∂Êó†Ê≥ïËøûÊé•Âà∞Ê®°ÂûãÊúçÂä°Ôºü
**A**: Â§ßÂ§öÊï∞ËøûÊé•Â§±Ë¥•ÊòØÁî±**Ë∑®ÂüüÈóÆÈ¢ò**ÔºàCORSÔºâÂØºËá¥ÁöÑ„ÄÇÁî±‰∫éÊú¨È°πÁõÆÊòØÁ∫ØÂâçÁ´ØÂ∫îÁî®ÔºåÊµèËßàÂô®Âá∫‰∫éÂÆâÂÖ®ËÄÉËôë‰ºöÈòªÊ≠¢Áõ¥Êé•ËÆøÈóÆ‰∏çÂêåÊ∫êÁöÑAPIÊúçÂä°„ÄÇÊ®°ÂûãÊúçÂä°Â¶ÇÊú™Ê≠£Á°ÆÈÖçÁΩÆCORSÁ≠ñÁï•Ôºå‰ºöÊãíÁªùÊù•Ëá™ÊµèËßàÂô®ÁöÑÁõ¥Êé•ËØ∑Ê±Ç„ÄÇ

#### Q2: Â¶Ç‰ΩïËß£ÂÜ≥Êú¨Âú∞OllamaÁöÑËøûÊé•ÈóÆÈ¢òÔºü
**A**: OllamaÂÆåÂÖ®ÊîØÊåÅOpenAIÊ†áÂáÜÊé•Âè£ÔºåÂè™ÈúÄÈÖçÁΩÆÊ≠£Á°ÆÁöÑË∑®ÂüüÁ≠ñÁï•Ôºö
1. ËÆæÁΩÆÁéØÂ¢ÉÂèòÈáè `OLLAMA_ORIGINS=*` ÂÖÅËÆ∏‰ªªÊÑèÊù•Ê∫êÁöÑËØ∑Ê±Ç
2. Â¶Ç‰ªçÊúâÈóÆÈ¢òÔºåËÆæÁΩÆ `OLLAMA_HOST=0.0.0.0:11434` ÁõëÂê¨‰ªªÊÑèIPÂú∞ÂùÄ

#### Q3: Â¶Ç‰ΩïËß£ÂÜ≥ÂïÜ‰∏öAPIÔºàÂ¶ÇNvidiaÁöÑDS API„ÄÅÂ≠óËäÇË∑≥Âä®ÁöÑÁÅ´Â±±APIÔºâÁöÑË∑®ÂüüÈóÆÈ¢òÔºü
**A**: Ëøô‰∫õÂπ≥Âè∞ÈÄöÂ∏∏Êúâ‰∏•Ê†ºÁöÑË∑®ÂüüÈôêÂà∂ÔºåÊé®Ëçê‰ª•‰∏ãËß£ÂÜ≥ÊñπÊ°àÔºö

1. **‰ΩøÁî®Vercel‰ª£ÁêÜ**Ôºà‰æøÊç∑ÊñπÊ°àÔºâ
   - ‰ΩøÁî®Âú®Á∫øÁâàÊú¨Ôºö[prompt.always200.com](https://prompt.always200.com)
   - ÊàñËá™Ë°åÈÉ®ÁΩ≤Âà∞VercelÂπ≥Âè∞
   - Âú®Ê®°ÂûãËÆæÁΩÆ‰∏≠ÂãæÈÄâ&quot;‰ΩøÁî®Vercel‰ª£ÁêÜ&quot;ÈÄâÈ°π
   - ËØ∑Ê±ÇÊµÅÂêëÔºöÊµèËßàÂô®‚ÜíVercel‚ÜíÊ®°ÂûãÊúçÂä°Êèê‰æõÂïÜ
   - ËØ¶ÁªÜÊ≠•È™§ËØ∑ÂèÇËÄÉ [VercelÈÉ®ÁΩ≤ÊåáÂçó](docs/user/deployment/vercel.md)

2. **‰ΩøÁî®Ëá™ÈÉ®ÁΩ≤ÁöÑAPI‰∏≠ËΩ¨ÊúçÂä°**ÔºàÂèØÈù†ÊñπÊ°àÔºâ
   - ÈÉ®ÁΩ≤Â¶ÇOneAPIÁ≠âÂºÄÊ∫êAPIËÅöÂêà/‰ª£ÁêÜÂ∑•ÂÖ∑
   - Âú®ËÆæÁΩÆ‰∏≠ÈÖçÁΩÆ‰∏∫Ëá™ÂÆö‰πâAPIÁ´ØÁÇπ
   - ËØ∑Ê±ÇÊµÅÂêëÔºöÊµèËßàÂô®‚Üí‰∏≠ËΩ¨ÊúçÂä°‚ÜíÊ®°ÂûãÊúçÂä°Êèê‰æõÂïÜ

#### Q4: Vercel‰ª£ÁêÜÊúâ‰ªÄ‰πàÁº∫ÁÇπÊàñÈ£éÈô©Ôºü
**A**: ‰ΩøÁî®Vercel‰ª£ÁêÜÂèØËÉΩ‰ºöËß¶ÂèëÊüê‰∫õÊ®°ÂûãÊúçÂä°Êèê‰æõÂïÜÁöÑÈ£éÊéßÊú∫Âà∂„ÄÇÈÉ®ÂàÜÂéÇÂïÜÂèØËÉΩ‰ºöÂ∞ÜÊù•Ëá™VercelÁöÑËØ∑Ê±ÇÂà§ÂÆö‰∏∫‰ª£ÁêÜË°å‰∏∫Ôºå‰ªéËÄåÈôêÂà∂ÊàñÊãíÁªùÊúçÂä°„ÄÇÂ¶ÇÈÅáÊ≠§ÈóÆÈ¢òÔºåÂª∫ËÆÆ‰ΩøÁî®Ëá™ÈÉ®ÁΩ≤ÁöÑ‰∏≠ËΩ¨ÊúçÂä°„ÄÇ

#### Q5: ÊàëÂ∑≤Ê≠£Á°ÆÈÖçÁΩÆÊú¨Âú∞Ê®°ÂûãÔºàÂ¶ÇOllamaÔºâÁöÑË∑®ÂüüÁ≠ñÁï•Ôºå‰∏∫‰ªÄ‰πà‰ΩøÁî®Âú®Á∫øÁâà‰æùÁÑ∂Êó†Ê≥ïËøûÊé•Ôºü
**A**: ËøôÊòØÁî±ÊµèËßàÂô®ÁöÑ**Ê∑∑ÂêàÂÜÖÂÆπÔºàMixed ContentÔºâÂÆâÂÖ®Á≠ñÁï•**ÂØºËá¥ÁöÑ„ÄÇÂá∫‰∫éÂÆâÂÖ®ËÄÉËôëÔºåÊµèËßàÂô®‰ºöÈòªÊ≠¢ÂÆâÂÖ®ÁöÑHTTPSÈ°µÈù¢ÔºàÂ¶ÇÂú®Á∫øÁâàÔºâÂêë‰∏çÂÆâÂÖ®ÁöÑHTTPÂú∞ÂùÄÔºàÂ¶ÇÊÇ®ÁöÑÊú¨Âú∞OllamaÊúçÂä°ÔºâÂèëÈÄÅËØ∑Ê±Ç„ÄÇ

**Ëß£ÂÜ≥ÊñπÊ°à**Ôºö
‰∏∫‰∫ÜÁªïËøáÊ≠§ÈôêÂà∂ÔºåÊÇ®ÈúÄË¶ÅËÆ©Â∫îÁî®ÂíåAPIÂ§Ñ‰∫éÂêå‰∏ÄÁßçÂçèËÆÆ‰∏ãÔºà‰æãÂ¶ÇÔºåÈÉΩÊòØHTTPÔºâ„ÄÇÊé®Ëçê‰ª•‰∏ãÂá†ÁßçÊñπÂºèÔºö
1. **‰ΩøÁî®Ê°åÈù¢Áâà**ÔºöÊ°åÈù¢Â∫îÁî®Ê≤°ÊúâÊµèËßàÂô®ÈôêÂà∂ÔºåÊòØËøûÊé•Êú¨Âú∞Ê®°ÂûãÊúÄÁ®≥ÂÆöÂèØÈù†ÁöÑÊñπÂºè„ÄÇ
2. **dockerÈÉ®ÁΩ≤**ÔºödockerÈÉ®ÁΩ≤‰πüÊòØhttp
3. **‰ΩøÁî®ChromeÊèí‰ª∂**ÔºöÊèí‰ª∂Âú®Êüê‰∫õÊÉÖÂÜµ‰∏ã‰πüÂèØ‰ª•ÁªïËøáÈÉ®ÂàÜÂÆâÂÖ®ÈôêÂà∂„ÄÇ

&lt;/details&gt;


## ü§ù ÂèÇ‰∏éË¥°ÁåÆ

&lt;details&gt;
&lt;summary&gt;ÁÇπÂáªÊü•ÁúãË¥°ÁåÆÊåáÂçó&lt;/summary&gt;

1. Fork Êú¨‰ªìÂ∫ì
2. ÂàõÂª∫ÁâπÊÄßÂàÜÊîØ (`git checkout -b feature/AmazingFeature`)
3. Êèê‰∫§Êõ¥Êîπ (`git commit -m &#039;Ê∑ªÂä†Êüê‰∏™ÁâπÊÄß&#039;`)
4. Êé®ÈÄÅÂà∞ÂàÜÊîØ (`git push origin feature/AmazingFeature`)
5. Êèê‰∫§ Pull Request

ÊèêÁ§∫Ôºö‰ΩøÁî®cursorÂ∑•ÂÖ∑ÂºÄÂèëÊó∂ÔºåÂª∫ËÆÆÂú®Êèê‰∫§Ââç:
1. ‰ΩøÁî®&quot;code_review&quot;ËßÑÂàôËøõË°å‰ª£Á†ÅÂÆ°Êü•
2. ÊåâÁÖßÂÆ°Êü•Êä•ÂëäÊ†ºÂºèÊ£ÄÊü•:
   - ÂèòÊõ¥ÁöÑÊï¥‰Ωì‰∏ÄËá¥ÊÄß
   - ‰ª£Á†ÅË¥®ÈáèÂíåÂÆûÁé∞ÊñπÂºè
   - ÊµãËØïË¶ÜÁõñÊÉÖÂÜµ
   - ÊñáÊ°£ÂÆåÂñÑÁ®ãÂ∫¶
3. Ê†πÊçÆÂÆ°Êü•ÁªìÊûúËøõË°å‰ºòÂåñÂêéÂÜçÊèê‰∫§

&lt;/details&gt;

## üëè Ë¥°ÁåÆËÄÖÂêçÂçï

ÊÑüË∞¢ÊâÄÊúâ‰∏∫È°πÁõÆÂÅöÂá∫Ë¥°ÁåÆÁöÑÂºÄÂèëËÄÖÔºÅ

&lt;a href=&quot;https://github.com/linshenkx/prompt-optimizer/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=linshenkx/prompt-optimizer&quot; alt=&quot;Ë¥°ÁåÆËÄÖ&quot; /&gt;
&lt;/a&gt;

## üìÑ ÂºÄÊ∫êÂçèËÆÆ

Êú¨È°πÁõÆÈááÁî® [MIT](LICENSE) ÂçèËÆÆÂºÄÊ∫ê„ÄÇ

---

Â¶ÇÊûúËøô‰∏™È°πÁõÆÂØπ‰Ω†ÊúâÂ∏ÆÂä©ÔºåËØ∑ËÄÉËôëÁªôÂÆÉ‰∏Ä‰∏™ Star ‚≠êÔ∏è

## üë• ËÅîÁ≥ªÊàë‰ª¨

- Êèê‰∫§ Issue
- ÂèëËµ∑ Pull Request
- Âä†ÂÖ•ËÆ®ËÆ∫ÁªÑ</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[firecrawl/firecrawl]]></title>
            <link>https://github.com/firecrawl/firecrawl</link>
            <guid>https://github.com/firecrawl/firecrawl</guid>
            <pubDate>Sat, 30 Aug 2025 00:04:22 GMT</pubDate>
            <description><![CDATA[The Web Data API for AI - Turn entire websites into LLM-ready markdown or structured data üî•]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/firecrawl/firecrawl">firecrawl/firecrawl</a></h1>
            <p>The Web Data API for AI - Turn entire websites into LLM-ready markdown or structured data üî•</p>
            <p>Language: TypeScript</p>
            <p>Stars: 53,366</p>
            <p>Forks: 4,587</p>
            <p>Stars today: 331 stars today</p>
            <h2>README</h2><pre>&lt;h3 align=&quot;center&quot;&gt;
  &lt;a name=&quot;readme-top&quot;&gt;&lt;/a&gt;
  &lt;img
    src=&quot;https://raw.githubusercontent.com/firecrawl/firecrawl/main/img/firecrawl_logo.png&quot;
    height=&quot;200&quot;
  &gt;
&lt;/h3&gt;
&lt;div align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://github.com/firecrawl/firecrawl/blob/main/LICENSE&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/github/license/firecrawl/firecrawl&quot; alt=&quot;License&quot;&gt;
&lt;/a&gt;
    &lt;a href=&quot;https://pepy.tech/project/firecrawl-py&quot;&gt;
  &lt;img src=&quot;https://static.pepy.tech/badge/firecrawl-py&quot; alt=&quot;Downloads&quot;&gt;
&lt;/a&gt;
&lt;a href=&quot;https://GitHub.com/firecrawl/firecrawl/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/github/contributors/firecrawl/firecrawl.svg&quot; alt=&quot;GitHub Contributors&quot;&gt;
&lt;/a&gt;
&lt;a href=&quot;https://firecrawl.dev&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/badge/Visit-firecrawl.dev-orange&quot; alt=&quot;Visit firecrawl.dev&quot;&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;div&gt;
  &lt;p align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://twitter.com/firecrawl_dev&quot;&gt;
      &lt;img src=&quot;https://img.shields.io/badge/Follow%20on%20X-000000?style=for-the-badge&amp;logo=x&amp;logoColor=white&quot; alt=&quot;Follow on X&quot; /&gt;
    &lt;/a&gt;
    &lt;a href=&quot;https://www.linkedin.com/company/104100957&quot;&gt;
      &lt;img src=&quot;https://img.shields.io/badge/Follow%20on%20LinkedIn-0077B5?style=for-the-badge&amp;logo=linkedin&amp;logoColor=white&quot; alt=&quot;Follow on LinkedIn&quot; /&gt;
    &lt;/a&gt;
    &lt;a href=&quot;https://discord.com/invite/gSmWdAkdwd&quot;&gt;
      &lt;img src=&quot;https://img.shields.io/badge/Join%20our%20Discord-5865F2?style=for-the-badge&amp;logo=discord&amp;logoColor=white&quot; alt=&quot;Join our Discord&quot; /&gt;
    &lt;/a&gt;
  &lt;/p&gt;
&lt;/div&gt;

# üî• Firecrawl

Empower your AI apps with clean data from any website. Featuring advanced scraping, crawling, and data extraction capabilities.

_This repository is in development, and we‚Äôre still integrating custom modules into the mono repo. It&#039;s not fully ready for self-hosted deployment yet, but you can run it locally._

## What is Firecrawl?

[Firecrawl](https://firecrawl.dev?ref=github) is an API service that takes a URL, crawls it, and converts it into clean markdown or structured data. We crawl all accessible subpages and give you clean data for each. No sitemap required. Check out our [documentation](https://docs.firecrawl.dev).

_Pst. hey, you, join our stargazers :)_

&lt;a href=&quot;https://github.com/firecrawl/firecrawl&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/github/stars/firecrawl/firecrawl.svg?style=social&amp;label=Star&amp;maxAge=2592000&quot; alt=&quot;GitHub stars&quot;&gt;
&lt;/a&gt;

## How to use it?

We provide an easy to use API with our hosted version. You can find the playground and documentation [here](https://firecrawl.dev/playground). You can also self host the backend if you&#039;d like.

Check out the following resources to get started:
- [x] **API**: [Documentation](https://docs.firecrawl.dev/api-reference/introduction)
- [x] **SDKs**: [Python](https://docs.firecrawl.dev/sdks/python), [Node](https://docs.firecrawl.dev/sdks/node)
- [x] **LLM Frameworks**: [Langchain (python)](https://python.langchain.com/docs/integrations/document_loaders/firecrawl/), [Langchain (js)](https://js.langchain.com/docs/integrations/document_loaders/web_loaders/firecrawl), [Llama Index](https://docs.llamaindex.ai/en/latest/examples/data_connectors/WebPageDemo/#using-firecrawl-reader), [Crew.ai](https://docs.crewai.com/), [Composio](https://composio.dev/tools/firecrawl/all), [PraisonAI](https://docs.praison.ai/firecrawl/), [Superinterface](https://superinterface.ai/docs/assistants/functions/firecrawl), [Vectorize](https://docs.vectorize.io/integrations/source-connectors/firecrawl)
- [x] **Low-code Frameworks**: [Dify](https://dify.ai/blog/dify-ai-blog-integrated-with-firecrawl), [Langflow](https://docs.langflow.org/), [Flowise AI](https://docs.flowiseai.com/integrations/langchain/document-loaders/firecrawl), [Cargo](https://docs.getcargo.io/integration/firecrawl), [Pipedream](https://pipedream.com/apps/firecrawl/)
- [x] **Community SDKs**: [Go](https://docs.firecrawl.dev/sdks/go), [Rust](https://docs.firecrawl.dev/sdks/rust)
- [x] **Others**: [Zapier](https://zapier.com/apps/firecrawl/integrations), [Pabbly Connect](https://www.pabbly.com/connect/integrations/firecrawl/)
- [ ] Want an SDK or Integration? Let us know by opening an issue.

To run locally, refer to guide [here](https://github.com/firecrawl/firecrawl/blob/main/CONTRIBUTING.md).

### API Key

To use the API, you need to sign up on [Firecrawl](https://firecrawl.dev) and get an API key.

### Features

- [**Scrape**](#scraping): scrapes a URL and get its content in LLM-ready format (markdown, structured data via [LLM Extract](#llm-extraction-beta), screenshot, html)
- [**Crawl**](#crawling): scrapes all the URLs of a web page and return content in LLM-ready format
- [**Map**](#map): input a website and get all the website urls - extremely fast
- [**Search**](#search): search the web and get full content from results
- [**Extract**](#extract): get structured data from single page, multiple pages or entire websites with AI.

### Powerful Capabilities
- **LLM-ready formats**: markdown, structured data, screenshot, HTML, links, metadata
- **The hard stuff**: proxies, anti-bot mechanisms, dynamic content (js-rendered), output parsing, orchestration
- **Customizability**: exclude tags, crawl behind auth walls with custom headers, max crawl depth, etc...
- **Media parsing**: pdfs, docx, images
- **Reliability first**: designed to get the data you need - no matter how hard it is
- **Actions**: click, scroll, input, wait and more before extracting data
- **Batching**: scrape thousands of URLs at the same time with a new async endpoint
- **Change Tracking**: monitor and detect changes in website content over time

You can find all of Firecrawl&#039;s capabilities and how to use them in our [documentation](https://docs.firecrawl.dev)

### Crawling

Used to crawl a URL and all accessible subpages. This submits a crawl job and returns a job ID to check the status of the crawl.

```bash
curl -X POST https://api.firecrawl.dev/v2/crawl \
    -H &#039;Content-Type: application/json&#039; \
    -H &#039;Authorization: Bearer fc-YOUR_API_KEY&#039; \
    -d &#039;{
      &quot;url&quot;: &quot;https://docs.firecrawl.dev&quot;,
      &quot;limit&quot;: 10,
      &quot;scrapeOptions&quot;: {
        &quot;formats&quot;: [&quot;markdown&quot;, &quot;html&quot;]
      }
    }&#039;
```

Returns a crawl job id and the url to check the status of the crawl.

```json
{
  &quot;success&quot;: true,
  &quot;id&quot;: &quot;123-456-789&quot;,
  &quot;url&quot;: &quot;https://api.firecrawl.dev/v2/crawl/123-456-789&quot;
}
```

### Check Crawl Job

Used to check the status of a crawl job and get its result.

```bash
curl -X GET https://api.firecrawl.dev/v2/crawl/123-456-789 \
  -H &#039;Content-Type: application/json&#039; \
  -H &#039;Authorization: Bearer YOUR_API_KEY&#039;
```

```json
{
  &quot;status&quot;: &quot;completed&quot;,
  &quot;total&quot;: 36,
  &quot;creditsUsed&quot;: 36,
  &quot;expiresAt&quot;: &quot;2024-00-00T00:00:00.000Z&quot;,
  &quot;data&quot;: [
    {
      &quot;markdown&quot;: &quot;[Firecrawl Docs home page![light logo](https://mintlify.s3-us-west-1.amazonaws.com/firecrawl/logo/light.svg)!...&quot;,
      &quot;html&quot;: &quot;&lt;!DOCTYPE html&gt;&lt;html lang=\&quot;en\&quot; class=\&quot;js-focus-visible lg:[--scroll-mt:9.5rem]\&quot; data-js-focus-visible=\&quot;\&quot;&gt;...&quot;,
      &quot;metadata&quot;: {
        &quot;title&quot;: &quot;Build a &#039;Chat with website&#039; using Groq Llama 3 | Firecrawl&quot;,
        &quot;language&quot;: &quot;en&quot;,
        &quot;sourceURL&quot;: &quot;https://docs.firecrawl.dev/learn/rag-llama3&quot;,
        &quot;description&quot;: &quot;Learn how to use Firecrawl, Groq Llama 3, and Langchain to build a &#039;Chat with your website&#039; bot.&quot;,
        &quot;ogLocaleAlternate&quot;: [],
        &quot;statusCode&quot;: 200
      }
    }
  ]
}
```

### Scraping

Used to scrape a URL and get its content in the specified formats.

```bash
curl -X POST https://api.firecrawl.dev/v2/scrape \
    -H &#039;Content-Type: application/json&#039; \
    -H &#039;Authorization: Bearer YOUR_API_KEY&#039; \
    -d &#039;{
      &quot;url&quot;: &quot;https://docs.firecrawl.dev&quot;,
      &quot;formats&quot; : [&quot;markdown&quot;, &quot;html&quot;]
    }&#039;
```

Response:

```json
{
  &quot;success&quot;: true,
  &quot;data&quot;: {
    &quot;markdown&quot;: &quot;Launch Week I is here! [See our Day 2 Release üöÄ](https://www.firecrawl.dev/blog/launch-week-i-day-2-doubled-rate-limits)[üí• Get 2 months free...&quot;,
    &quot;html&quot;: &quot;&lt;!DOCTYPE html&gt;&lt;html lang=\&quot;en\&quot; class=\&quot;light\&quot; style=\&quot;color-scheme: light;\&quot;&gt;&lt;body class=\&quot;__variable_36bd41 __variable_d7dc5d font-inter ...&quot;,
    &quot;metadata&quot;: {
      &quot;title&quot;: &quot;Home - Firecrawl&quot;,
      &quot;description&quot;: &quot;Firecrawl crawls and converts any website into clean markdown.&quot;,
      &quot;language&quot;: &quot;en&quot;,
      &quot;keywords&quot;: &quot;Firecrawl,Markdown,Data,Mendable,Langchain&quot;,
      &quot;robots&quot;: &quot;follow, index&quot;,
      &quot;ogTitle&quot;: &quot;Firecrawl&quot;,
      &quot;ogDescription&quot;: &quot;Turn any website into LLM-ready data.&quot;,
      &quot;ogUrl&quot;: &quot;https://www.firecrawl.dev/&quot;,
      &quot;ogImage&quot;: &quot;https://www.firecrawl.dev/og.png?123&quot;,
      &quot;ogLocaleAlternate&quot;: [],
      &quot;ogSiteName&quot;: &quot;Firecrawl&quot;,
      &quot;sourceURL&quot;: &quot;https://firecrawl.dev&quot;,
      &quot;statusCode&quot;: 200
    }
  }
}
```

### Map

Used to map a URL and get urls of the website. This returns most links present on the website.

```bash cURL
curl -X POST https://api.firecrawl.dev/v2/map \
    -H &#039;Content-Type: application/json&#039; \
    -H &#039;Authorization: Bearer YOUR_API_KEY&#039; \
    -d &#039;{
      &quot;url&quot;: &quot;https://firecrawl.dev&quot;
    }&#039;
```

Response:

```json
{
  &quot;success&quot;: true,
  &quot;links&quot;: [
    { &quot;url&quot;: &quot;https://firecrawl.dev&quot;, &quot;title&quot;: &quot;Firecrawl&quot;, &quot;description&quot;: &quot;Firecrawl is a tool that allows you to crawl a website and get the data you need.&quot; },
    { &quot;url&quot;: &quot;https://www.firecrawl.dev/pricing&quot;, &quot;title&quot;: &quot;Firecrawl Pricing&quot;, &quot;description&quot;: &quot;Firecrawl Pricing&quot; },
    { &quot;url&quot;: &quot;https://www.firecrawl.dev/blog&quot;, &quot;title&quot;: &quot;Firecrawl Blog&quot;, &quot;description&quot;: &quot;Firecrawl Blog&quot; },
    { &quot;url&quot;: &quot;https://www.firecrawl.dev/playground&quot;, &quot;title&quot;: &quot;Firecrawl Playground&quot;, &quot;description&quot;: &quot;Firecrawl Playground&quot; },
    { &quot;url&quot;: &quot;https://www.firecrawl.dev/smart-crawl&quot;, &quot;title&quot;: &quot;Firecrawl Smart Crawl&quot;, &quot;description&quot;: &quot;Firecrawl Smart Crawl&quot; }
  ]
}
```

#### Map with search

Map with `search` param allows you to search for specific urls inside a website.

```bash cURL
curl -X POST https://api.firecrawl.dev/v2/map \
    -H &#039;Content-Type: application/json&#039; \
    -H &#039;Authorization: Bearer YOUR_API_KEY&#039; \
    -d &#039;{
      &quot;url&quot;: &quot;https://firecrawl.dev&quot;,
      &quot;search&quot;: &quot;docs&quot;
    }&#039;
```

Response will be an ordered list from the most relevant to the least relevant.

```json
{
  &quot;success&quot;: true,
  &quot;links&quot;: [
    { &quot;url&quot;: &quot;https://docs.firecrawl.dev&quot;, &quot;title&quot;: &quot;Firecrawl Docs&quot;, &quot;description&quot;: &quot;Firecrawl Docs&quot; },
    { &quot;url&quot;: &quot;https://docs.firecrawl.dev/sdks/python&quot;, &quot;title&quot;: &quot;Firecrawl Python SDK&quot;, &quot;description&quot;: &quot;Firecrawl Python SDK&quot; },
    { &quot;url&quot;: &quot;https://docs.firecrawl.dev/learn/rag-llama3&quot;, &quot;title&quot;: &quot;Firecrawl RAG Llama 3&quot;, &quot;description&quot;: &quot;Firecrawl RAG Llama 3&quot; }
  ]
}
```

### Search

Search the web and get full content from results

Firecrawl‚Äôs search API allows you to perform web searches and optionally scrape the search results in one operation.

- Choose specific output formats (markdown, HTML, links, screenshots)
- Search the web with customizable parameters (language, country, etc.)
- Optionally retrieve content from search results in various formats
- Control the number of results and set timeouts

```bash
curl -X POST https://api.firecrawl.dev/v2/search \
  -H &quot;Content-Type: application/json&quot; \
  -H &quot;Authorization: Bearer fc-YOUR_API_KEY&quot; \
  -d &#039;{
    &quot;query&quot;: &quot;what is firecrawl?&quot;,
    &quot;limit&quot;: 5
  }&#039;
```

#### Response

```json
{
  &quot;success&quot;: true,
  &quot;data&quot;: [
    {
      &quot;url&quot;: &quot;https://firecrawl.dev&quot;,
      &quot;title&quot;: &quot;Firecrawl | Home Page&quot;,
      &quot;description&quot;: &quot;Turn websites into LLM-ready data with Firecrawl&quot;
    },
    {
      &quot;url&quot;: &quot;https://docs.firecrawl.dev&quot;,
      &quot;title&quot;: &quot;Documentation | Firecrawl&quot;,
      &quot;description&quot;: &quot;Learn how to use Firecrawl in your own applications&quot;
    }
  ]
}
```

#### With content scraping

```bash
curl -X POST https://api.firecrawl.dev/v2/search \
  -H &quot;Content-Type: application/json&quot; \
  -H &quot;Authorization: Bearer fc-YOUR_API_KEY&quot; \
  -d &#039;{
    &quot;query&quot;: &quot;what is firecrawl?&quot;,
    &quot;limit&quot;: 5,
    &quot;scrapeOptions&quot;: {
      &quot;formats&quot;: [&quot;markdown&quot;, &quot;links&quot;]
    }
  }&#039;
```

### Extract (Beta)

Get structured data from entire websites with a prompt and/or a schema.

You can extract structured data from one or multiple URLs, including wildcards:

Single Page:
Example: https://firecrawl.dev/some-page

Multiple Pages / Full Domain
Example: https://firecrawl.dev/*

When you use /*, Firecrawl will automatically crawl and parse all URLs it can discover in that domain, then extract the requested data.

```bash
curl -X POST https://api.firecrawl.dev/v2/extract \
    -H &#039;Content-Type: application/json&#039; \
    -H &#039;Authorization: Bearer YOUR_API_KEY&#039; \
    -d &#039;{
      &quot;urls&quot;: [
        &quot;https://firecrawl.dev/*&quot;, 
        &quot;https://docs.firecrawl.dev/&quot;, 
        &quot;https://www.ycombinator.com/companies&quot;
      ],
      &quot;prompt&quot;: &quot;Extract the company mission, whether it is open source, and whether it is in Y Combinator from the page.&quot;,
      &quot;schema&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;company_mission&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;is_open_source&quot;: {
            &quot;type&quot;: &quot;boolean&quot;
          },
          &quot;is_in_yc&quot;: {
            &quot;type&quot;: &quot;boolean&quot;
          }
        },
        &quot;required&quot;: [
          &quot;company_mission&quot;,
          &quot;is_open_source&quot;,
          &quot;is_in_yc&quot;
        ]
      }
    }&#039;
```

```json
{
  &quot;success&quot;: true,
  &quot;id&quot;: &quot;44aa536d-f1cb-4706-ab87-ed0386685740&quot;,
  &quot;urlTrace&quot;: []
}
```

If you are using the sdks, it will auto pull the response for you:

```json
{
  &quot;success&quot;: true,
  &quot;data&quot;: {
    &quot;company_mission&quot;: &quot;Firecrawl is the easiest way to extract data from the web. Developers use us to reliably convert URLs into LLM-ready markdown or structured data with a single API call.&quot;,
    &quot;supports_sso&quot;: false,
    &quot;is_open_source&quot;: true,
    &quot;is_in_yc&quot;: true
  }
}
```

### LLM Extraction (Beta)

Used to extract structured data from scraped pages.

```bash
curl -X POST https://api.firecrawl.dev/v2/scrape \
  -H &#039;Content-Type: application/json&#039; \
  -H &#039;Authorization: Bearer YOUR_API_KEY&#039; \
  -d &#039;{
    &quot;url&quot;: &quot;https://www.mendable.ai/&quot;,
    &quot;formats&quot;: [
      {
        &quot;type&quot;: &quot;json&quot;,
        &quot;schema&quot;: {
          &quot;type&quot;: &quot;object&quot;,
          &quot;properties&quot;: {
            &quot;company_mission&quot;: { &quot;type&quot;: &quot;string&quot; },
            &quot;supports_sso&quot;: { &quot;type&quot;: &quot;boolean&quot; },
            &quot;is_open_source&quot;: { &quot;type&quot;: &quot;boolean&quot; },
            &quot;is_in_yc&quot;: { &quot;type&quot;: &quot;boolean&quot; }
          }
        }
      }
    ]
  }&#039;
```

```json
{
  &quot;success&quot;: true,
  &quot;data&quot;: {
    &quot;content&quot;: &quot;Raw Content&quot;,
    &quot;metadata&quot;: {
      &quot;title&quot;: &quot;Mendable&quot;,
      &quot;description&quot;: &quot;Mendable allows you to easily build AI chat applications. Ingest, customize, then deploy with one line of code anywhere you want. Brought to you by SideGuide&quot;,
      &quot;robots&quot;: &quot;follow, index&quot;,
      &quot;ogTitle&quot;: &quot;Mendable&quot;,
      &quot;ogDescription&quot;: &quot;Mendable allows you to easily build AI chat applications. Ingest, customize, then deploy with one line of code anywhere you want. Brought to you by SideGuide&quot;,
      &quot;ogUrl&quot;: &quot;https://mendable.ai/&quot;,
      &quot;ogImage&quot;: &quot;https://mendable.ai/mendable_new_og1.png&quot;,
      &quot;ogLocaleAlternate&quot;: [],
      &quot;ogSiteName&quot;: &quot;Mendable&quot;,
      &quot;sourceURL&quot;: &quot;https://mendable.ai/&quot;
    },
    &quot;json&quot;: {
      &quot;company_mission&quot;: &quot;Train a secure AI on your technical resources that answers customer and employee questions so your team doesn&#039;t have to&quot;,
      &quot;supports_sso&quot;: true,
      &quot;is_open_source&quot;: false,
      &quot;is_in_yc&quot;: true
    }
  }
}
```

### Extracting without a schema (New)

You can now extract without a schema by just passing a `prompt` to the endpoint. The llm chooses the structure of the data.

```bash
curl -X POST https://api.firecrawl.dev/v2/scrape \
    -H &#039;Content-Type: application/json&#039; \
    -H &#039;Authorization: Bearer YOUR_API_KEY&#039; \
    -d &#039;{
      &quot;url&quot;: &quot;https://docs.firecrawl.dev/&quot;,
      &quot;formats&quot;: [
        {
          &quot;type&quot;: &quot;json&quot;,
          &quot;prompt&quot;: &quot;Extract the company mission from the page.&quot;
        }
      ]
    }&#039;
```

### Interacting with the page with Actions (Cloud-only)

Firecrawl allows you to perform various actions on a web page before scraping its content. This is particularly useful for interacting with dynamic content, navigating through pages, or accessing content that requires user interaction.

Here is an example of how to use actions to navigate to google.com, search for Firecrawl, click on the first result, and take a screenshot.

```bash
curl -X POST https://api.firecrawl.dev/v2/scrape \
    -H &#039;Content-Type: application/json&#039; \
    -H &#039;Authorization: Bearer YOUR_API_KEY&#039; \
    -d &#039;{
        &quot;url&quot;: &quot;google.com&quot;,
        &quot;formats&quot;: [&quot;markdown&quot;],
        &quot;actions&quot;: [
            {&quot;type&quot;: &quot;wait&quot;, &quot;milliseconds&quot;: 2000},
            {&quot;type&quot;: &quot;click&quot;, &quot;selector&quot;: &quot;textarea[title=\&quot;Search\&quot;]&quot;},
            {&quot;type&quot;: &quot;wait&quot;, &quot;milliseconds&quot;: 2000},
            {&quot;type&quot;: &quot;write&quot;, &quot;text&quot;: &quot;firecrawl&quot;},
            {&quot;type&quot;: &quot;wait&quot;, &quot;milliseconds&quot;: 2000},
            {&quot;type&quot;: &quot;press&quot;, &quot;key&quot;: &quot;ENTER&quot;},
            {&quot;type&quot;: &quot;wait&quot;, &quot;milliseconds&quot;: 3000},
            {&quot;type&quot;: &quot;click&quot;, &quot;selector&quot;: &quot;h3&quot;},
            {&quot;type&quot;: &quot;wait&quot;, &quot;milliseconds&quot;: 3000},
            {&quot;type&quot;: &quot;screenshot&quot;}
        ]
    }&#039;
```

### Batch Scraping Multiple URLs (New)

You can now batch scrape multiple URLs at the same time. It is very similar to how the /crawl endpoint works. It submits a batch scrape job and returns a job ID to check the status of the batch scrape.

```bash
curl -X POST https://api.firecrawl.dev/v2/batch/scrape \
    -H &#039;Content-Type: application/json&#039; \
    -H &#039;Authorization: Bearer YOUR_API_KEY&#039; \
    -d &#039;{
      &quot;urls&quot;: [&quot;https://docs.firecrawl.dev&quot;, &quot;https://docs.firecrawl.dev/sdks/overview&quot;],
      &quot;formats&quot; : [&quot;markdown&quot;, &quot;html&quot;]
    }&#039;
```



## Using Python SDK

### Installing Python SDK

```bash
pip install firecrawl-py
```

### Crawl a website

```python
from firecrawl import Firecrawl

firecrawl = Firecrawl(api_key=&quot;fc-YOUR_API_KEY&quot;)

# Scrape a website (returns a Document)
doc = firecrawl.scrape(
    &quot;https://firecrawl.dev&quot;,
    formats=[&quot;markdown&quot;, &quot;html&quot;],
)
print(doc.markdown)

# Crawl a website
response = firecrawl.crawl(
    &quot;https://firecrawl.dev&quot;,
    limit=100,
    scrape_options={&quot;formats&quot;: [&quot;markdown&quot;, &quot;html&quot;]},
    poll_interval=30,
)
print(response)
```

### Extracting structured data from a URL

With LLM extraction, you can easily extract structured data from any URL. We support pydantic schemas to make it easier for you too. Here is how you to use it:

```python
from pydantic import BaseModel, Field
from typing import List

class Article(BaseModel):
    title: str
    points: int
    by: str
    commentsURL: str

class TopArticles(BaseModel):
    top: List[Article] = Field(..., description=&quot;Top 5 stories&quot;)

# Use JSON format with a Pydantic schema
doc = firecrawl.scrape(
    &quot;https://news.ycombinator.com&quot;,
    formats=[{&quot;type&quot;: &quot;json&quot;, &quot;schema&quot;: TopArticles}],
)
print(doc.json)
```

## Using the Node SDK

### Installation

To install the Firecrawl Node SDK, you can use npm:

```bash
npm install @mendable/firecrawl-js
```

### Usage

1. Get an API key from [firecrawl.dev](https://firecrawl.dev)
2. Set the API key as an environment variable named `FIRECRAWL_API_KEY` or pass it as a parameter to the `Firecrawl` class.

```js
import Firecrawl from &#039;@mendable/firecrawl-js&#039;;

const firecrawl = new Firecrawl({ apiKey: &#039;fc-YOUR_API_KEY&#039; });

// Scrape a website
const doc = await firecrawl.scrape(&#039;https://firecrawl.dev&#039;, {
  formats: [&#039;markdown&#039;, &#039;html&#039;],
});
console.log(doc);

// Crawl a website
const response = await firecrawl.crawl(&#039;https://firecrawl.dev&#039;, {
  limit: 100,
  scrapeOptions: { formats: [&#039;markdown&#039;, &#039;html&#039;] },
});
console.log(response);
```


### Extracting structured data from a URL

With LLM extraction, you can easily extract structured data from any URL. We support zod schema to make it easier for you too. Here is how to use it:

```js
import Firecrawl from &#039;@mendable/firecrawl-js&#039;;
import { z } from &#039;zod&#039;;

const firecrawl = new Firecrawl({ apiKey: &#039;fc-YOUR_API_KEY&#039; });

// Define schema to extract contents into
const schema = z.object({
  top

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[Bistutu/FluentRead]]></title>
            <link>https://github.com/Bistutu/FluentRead</link>
            <guid>https://github.com/Bistutu/FluentRead</guid>
            <pubDate>Sat, 30 Aug 2025 00:04:21 GMT</pubDate>
            <description><![CDATA[Open Immersive Translate. A revolutionary open-source browser translation plugin that enables everyone to have a native-like reading experience. ÂºÄÊ∫êÁöÑÊ≤âÊµ∏ÂºèÁøªËØëÔºå‰∏ÄÊ¨æÈù©ÂëΩÊÄßÁöÑÊµèËßàÂô®ÁøªËØëÊèí‰ª∂ÔºåËÆ©ÊâÄÊúâ‰∫∫ÈÉΩËÉΩÂ§üÊã•ÊúâÊØçËØ≠Ëà¨ÁöÑÈòÖËØª‰ΩìÈ™å„ÄÇ]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/Bistutu/FluentRead">Bistutu/FluentRead</a></h1>
            <p>Open Immersive Translate. A revolutionary open-source browser translation plugin that enables everyone to have a native-like reading experience. ÂºÄÊ∫êÁöÑÊ≤âÊµ∏ÂºèÁøªËØëÔºå‰∏ÄÊ¨æÈù©ÂëΩÊÄßÁöÑÊµèËßàÂô®ÁøªËØëÊèí‰ª∂ÔºåËÆ©ÊâÄÊúâ‰∫∫ÈÉΩËÉΩÂ§üÊã•ÊúâÊØçËØ≠Ëà¨ÁöÑÈòÖËØª‰ΩìÈ™å„ÄÇ</p>
            <p>Language: TypeScript</p>
            <p>Stars: 5,219</p>
            <p>Forks: 214</p>
            <p>Stars today: 40 stars today</p>
            <h2>README</h2><pre># ÊµÅÁïÖÈòÖËØª (FluentRead)

&gt; [English](https://github.com/Bistutu/FluentRead/blob/main/misc/README_EN.md) | ‰∏≠Êñá

Open Immersive Translate ÂºÄÊ∫êÁöÑÊ≤âÊµ∏ÂºèÁøªËØë„ÄÇ

‰∏ÄÊ¨æÈù©ÂëΩÊÄßÁöÑÊµèËßàÂô®ÂºÄÊ∫êÁøªËØëÊèí‰ª∂ÔºåËÆ©ÊâÄÊúâ‰∫∫ÈÉΩËÉΩÂ§üÊã•ÊúâÊØçËØ≠Ëà¨ÁöÑÈòÖËØª‰ΩìÈ™å„ÄÇ

1. [ÂÆòÊñπÊñáÊ°£ÔºàÂøÖÁúãÔºâ](https://fluent.thinkstu.com/)
2. [BÁ´ôËßÜÈ¢ë‰ªãÁªç](https://www.bilibili.com/video/BV1ux4y1e73x/)
3. [deepwiki Êû∂ÊûÑ‰ªãÁªç](https://deepwiki.com/Bistutu/FluentRead)

## üåü ÁâπÊÄß

- **Êô∫ËÉΩÁøªËØë**ÔºöÊîØÊåÅ 20+ ÁßçÁøªËØëÂºïÊìéÔºåÂåÖÊã¨‰º†ÁªüÁøªËØëÂíå AI Â§ßÊ®°Âûã„ÄÇÂ¶ÇÔºöÂæÆËΩØÁøªËØë„ÄÅË∞∑Ê≠åÁøªËØë„ÄÅDeepLÁøªËØë„ÄÅOpenAI„ÄÅDeepSeek„ÄÅKimi„ÄÅOllama„ÄÅËá™ÂÆö‰πâÂºïÊìéÁ≠â„ÄÇ
- **ÂèåËØ≠ÂØπÁÖß**ÔºöÊîØÊåÅÂéüÊñá‰∏éËØëÊñáÂπ∂ÂàóÊòæÁ§∫ÔºåËÆ©ÈòÖËØªÊõ¥ËΩªÊùæ„ÄÇ
- **ÂàíËØçÁøªËØë**ÔºöÈÄâ‰∏≠‰ªªÊÑèÊñáÊú¨ÔºåÂç≥ÂèØËé∑ÂæóÂç≥Êó∂ÁøªËØëÁªìÊûúÔºå‰∏ÄÈîÆÂ§çÂà∂ËØëÊñáÔºåÊèêÈ´òÈòÖËØªÊïàÁéá„ÄÇ
- **ÂÖ®ÊñáÁøªËØë**ÔºöÈÄöËøáÊÇ¨ÊµÆÁêÉ‰∏ÄÈîÆÁøªËØëÊï¥‰∏™ÁΩëÈ°µÔºåÊó†ÈúÄÂà∑Êñ∞È°µÈù¢Âç≥ÂèØÂàáÊç¢„ÄÇ
- **ÈöêÁßÅ‰øùÊä§**ÔºöÊâÄÊúâÊï∞ÊçÆÊú¨Âú∞Â≠òÂÇ®Ôºå‰ª£Á†ÅÂºÄÊ∫êÈÄèÊòé„ÄÇ
- **È´òÂ∫¶ÂÆöÂà∂**Ôºö‰∏∞ÂØåÁöÑËá™ÂÆö‰πâÈÄâÈ°πÔºåÊª°Ë∂≥‰∏çÂêåÂú∫ÊôØÈúÄÊ±Ç„ÄÇ
- **ÂÆåÂÖ®ÂÖçË¥π**ÔºöÂºÄÊ∫êÂÖçË¥πÔºåÈùûÂïÜ‰∏öÂåñÈ°πÁõÆ„ÄÇ

&lt;kbd&gt;&lt;img src=&quot;./misc/sample-git-1.gif&quot; alt=&quot;sample-git-1.gif&quot; style=&quot;width: 80%; max-width: 100%;border: 1px solid black;&quot;&gt;&lt;/kbd&gt;

&lt;kbd&gt;&lt;img src=&quot;./misc/sample-git-4.gif&quot; alt=&quot;sample-git-4.gif&quot; style=&quot;width: 80%; max-width: 100%;border: 1px solid black;&quot;&gt;&lt;/kbd&gt;

&lt;kbd&gt;&lt;img src=&quot;./misc/highlight_trans.png&quot; alt=&quot;sample-git-4.gif&quot; style=&quot;width: 80%; max-width: 100%;border: 1px solid black;&quot;&gt;&lt;/kbd&gt;

## üì¶ ÂÆâË£Ö

| ÊµèËßàÂô® | ÂÆâË£ÖÊñπÂºè |
|-------|---------|
| Chrome | [Chrome Â∫îÁî®ÂïÜÂ∫ó](https://chromewebstore.google.com/detail/%E6%B5%81%E7%95%85%E9%98%85%E8%AF%BB/djnlaiohfaaifbibleebjggkghlmcpcj?hl=zh-CN&amp;authuser=0) \| [ÂõΩÂÜÖÈïúÂÉè](https://www.crxsoso.com/webstore/detail/djnlaiohfaaifbibleebjggkghlmcpcj) |
| Edge | [Edge Â∫îÁî®ÂïÜÂ∫ó](https://microsoftedge.microsoft.com/addons/detail/%E6%B5%81%E7%95%85%E9%98%85%E8%AF%BB/kakgmllfpjldjhcnkghpplmlbnmcoflp?hl=zh-CN) |
| Firefox | [Firefox ÈôÑÂä†ÁªÑ‰ª∂ÂïÜÂ∫ó](https://addons.mozilla.org/zh-CN/firefox/addon/%E6%B5%81%E7%95%85%E9%98%85%E8%AF%BB/) |

## üìñ ‰ΩøÁî®ÊñáÊ°£

ËØ∑Áõ¥Êé•ËÆøÈóÆ [ÊµÅÁïÖÈòÖËØªÂÆòÊñπÊñáÊ°£](https://fluent.thinkstu.com/) Ëé∑ÂèñËØ¶ÁªÜÁöÑÔºö
- ÂäüËÉΩ‰ªãÁªç
- ÈÖçÁΩÆÊåáÂçó
- ‰ΩøÁî®ÊïôÁ®ã
- Â∏∏ËßÅÈóÆÈ¢ò

# Star ÂéÜÂè≤ËÆ∞ÂΩï

[![Star History Chart](https://api.star-history.com/svg?repos=Bistutu/FluentRead&amp;type=Date)](https://star-history.com/#Bistutu/FluentRead&amp;Date)

</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[C4illin/ConvertX]]></title>
            <link>https://github.com/C4illin/ConvertX</link>
            <guid>https://github.com/C4illin/ConvertX</guid>
            <pubDate>Sat, 30 Aug 2025 00:04:20 GMT</pubDate>
            <description><![CDATA[üíæ Self-hosted online file converter. Supports 1000+ formats ‚öôÔ∏è]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/C4illin/ConvertX">C4illin/ConvertX</a></h1>
            <p>üíæ Self-hosted online file converter. Supports 1000+ formats ‚öôÔ∏è</p>
            <p>Language: TypeScript</p>
            <p>Stars: 7,630</p>
            <p>Forks: 340</p>
            <p>Stars today: 68 stars today</p>
            <h2>README</h2><pre>![ConvertX](images/logo.png)

# ConvertX

[![Docker](https://github.com/C4illin/ConvertX/actions/workflows/docker-publish.yml/badge.svg?branch=main)](https://github.com/C4illin/ConvertX/actions/workflows/docker-publish.yml)
[![ghcr.io Pulls](https://img.shields.io/badge/dynamic/json?logo=github&amp;url=https%3A%2F%2Fipitio.github.io%2Fbackage%2FC4illin%2FConvertX%2Fconvertx.json&amp;query=%24.downloads&amp;label=ghcr.io%20pulls&amp;cacheSeconds=14400)](https://github.com/C4illin/ConvertX/pkgs/container/ConvertX)
[![Docker Pulls](https://img.shields.io/docker/pulls/c4illin/convertx?style=flat&amp;logo=docker&amp;label=dockerhub%20pulls&amp;link=https%3A%2F%2Fhub.docker.com%2Frepository%2Fdocker%2Fc4illin%2Fconvertx%2Fgeneral)](https://hub.docker.com/r/c4illin/convertx)
[![GitHub Release](https://img.shields.io/github/v/release/C4illin/ConvertX)](https://github.com/C4illin/ConvertX/pkgs/container/convertx)
![GitHub commits since latest release](https://img.shields.io/github/commits-since/C4illin/ConvertX/latest)
![GitHub repo size](https://img.shields.io/github/repo-size/C4illin/ConvertX)
![Docker container size](https://ghcr-badge.egpl.dev/c4illin/convertx/size?color=%230375b6&amp;tag=latest&amp;label=image+size&amp;trim=)

&lt;a href=&quot;https://trendshift.io/repositories/13818&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://trendshift.io/api/badge/repositories/13818&quot; alt=&quot;C4illin%2FConvertX | Trendshift&quot; style=&quot;width: 250px; height: 55px;&quot; width=&quot;250&quot; height=&quot;55&quot;/&gt;&lt;/a&gt;

&lt;!-- ![Dev image size](https://ghcr-badge.egpl.dev/c4illin/convertx/size?color=%230375b6&amp;tag=main&amp;label=dev+image&amp;trim=) --&gt;

A self-hosted online file converter. Supports over a thousand different formats. Written with TypeScript, Bun and Elysia.

## Features

- Convert files to different formats
- Process multiple files at once
- Password protection
- Multiple accounts

## Converters supported

| Converter                                          | Use case         | Converts from | Converts to |
| -------------------------------------------------- | ---------------- | ------------- | ----------- |
| [libjxl](https://github.com/libjxl/libjxl)         | JPEG XL          | 11            | 11          |
| [resvg](https://github.com/RazrFalcon/resvg)       | SVG              | 1             | 1           |
| [Vips](https://github.com/libvips/libvips)         | Images           | 45            | 23          |
| [libheif](https://github.com/strukturag/libheif)   | HEIF             | 2             | 4           |
| [XeLaTeX](https://tug.org/xetex/)                  | LaTeX            | 1             | 1           |
| [Calibre](https://calibre-ebook.com/)              | E-books          | 26            | 19          |
| [Pandoc](https://pandoc.org/)                      | Documents        | 43            | 65          |
| [dvisvgm](https://dvisvgm.de/)                     | Vector images    | 4             | 2           |
| [ImageMagick](https://imagemagick.org/)            | Images           | 245           | 183         |
| [GraphicsMagick](http://www.graphicsmagick.org/)   | Images           | 167           | 130         |
| [Inkscape](https://inkscape.org/)                  | Vector images    | 7             | 17          |
| [Assimp](https://github.com/assimp/assimp)         | 3D Assets        | 77            | 23          |
| [FFmpeg](https://ffmpeg.org/)                      | Video            | ~472          | ~199        |
| [Potrace](https://potrace.sourceforge.net/)        | Raster to vector | 4             | 11          |
| [VTracer](https://github.com/visioncortex/vtracer) | Raster to vector | 8             | 1           |

&lt;!-- many ffmpeg fileformats are duplicates --&gt;

Any missing converter? Open an issue or pull request!

## Deployment

&gt; [!WARNING]
&gt; If you can&#039;t login, make sure you are accessing the service over localhost or https otherwise set HTTP_ALLOWED=true

```yml
# docker-compose.yml
services:
  convertx:
    image: ghcr.io/c4illin/convertx
    container_name: convertx
    restart: unless-stopped
    ports:
      - &quot;3000:3000&quot;
    environment:
      - JWT_SECRET=aLongAndSecretStringUsedToSignTheJSONWebToken1234 # will use randomUUID() if unset
      # - HTTP_ALLOWED=true # uncomment this if accessing it over a non-https connection
    volumes:
      - ./data:/app/data
```

or

```bash
docker run -p 3000:3000 -v ./data:/app/data ghcr.io/c4illin/convertx
```

Then visit `http://localhost:3000` in your browser and create your account. Don&#039;t leave it unconfigured and open, as anyone can register the first account.

If you get unable to open database file run `chown -R $USER:$USER path` on the path you choose.

### Environment variables

All are optional, JWT_SECRET is recommended to be set.

| Name                         | Default                                            | Description                                                                                                               |
| ---------------------------- | -------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------- |
| JWT_SECRET                   | when unset it will use the value from randomUUID() | A long and secret string used to sign the JSON Web Token                                                                  |
| ACCOUNT_REGISTRATION         | false                                              | Allow users to register accounts                                                                                          |
| HTTP_ALLOWED                 | false                                              | Allow HTTP connections, only set this to true locally                                                                     |
| ALLOW_UNAUTHENTICATED        | false                                              | Allow unauthenticated users to use the service, only set this to true locally                                             |
| AUTO_DELETE_EVERY_N_HOURS    | 24                                                 | Checks every n hours for files older then n hours and deletes them, set to 0 to disable                                   |
| WEBROOT                      |                                                    | The address to the root path setting this to &quot;/convert&quot; will serve the website on &quot;example.com/convert/&quot;                  |
| FFMPEG_ARGS                  |                                                    | Arguments to pass to ffmpeg, e.g. `-preset veryfast`                                                                      |
| HIDE_HISTORY                 | false                                              | Hide the history page                                                                                                     |
| LANGUAGE                     | en                                                 | Language to format date strings in, specified as a [BCP 47 language tag](https://en.wikipedia.org/wiki/IETF_language_tag) |
| UNAUTHENTICATED_USER_SHARING | false                                              | Shares conversion history between all unauthenticated users                                                               |

### Docker images

There is a `:latest` tag that is updated with every release and a `:main` tag that is updated with every push to the main branch. `:latest` is recommended for normal use.

The image is available on [GitHub Container Registry](https://github.com/C4illin/ConvertX/pkgs/container/ConvertX) and [Docker Hub](https://hub.docker.com/r/c4illin/convertx).

| Image                                  | What it is                       |
| -------------------------------------- | -------------------------------- |
| `image: ghcr.io/c4illin/convertx`      | The latest release on ghcr       |
| `image: ghcr.io/c4illin/convertx:main` | The latest commit on ghcr        |
| `image: c4illin/convertx`              | The latest release on docker hub |
| `image: c4illin/convertx:main`         | The latest commit on docker hub  |

![Release image size](https://ghcr-badge.egpl.dev/c4illin/convertx/size?color=%230375b6&amp;tag=latest&amp;label=release+image&amp;trim=)
![Dev image size](https://ghcr-badge.egpl.dev/c4illin/convertx/size?color=%230375b6&amp;tag=main&amp;label=dev+image&amp;trim=)

&lt;!-- Dockerhub was introduced in 0.9.0 and older releases --&gt;

### Tutorial

&gt; [!NOTE]
&gt; These are written by other people, and may be outdated, incorrect or wrong.

Tutorial in french: &lt;https://belginux.com/installer-convertx-avec-docker/&gt;

Tutorial in chinese: &lt;https://xzllll.com/24092901/&gt;

## Screenshots

![ConvertX Preview](images/preview.png)

## Development

0. Install [Bun](https://bun.sh/) and Git
1. Clone the repository
2. `bun install`
3. `bun run dev`

Pull requests are welcome! See open issues for the list of todos. The ones tagged with &quot;converter request&quot; are quite easy. Help with docs and cleaning up in issues are also very welcome!

Use [conventional commits](https://www.conventionalcommits.org/en/v1.0.0/#summary) for commit messages.

## Contributors

&lt;a href=&quot;https://github.com/C4illin/ConvertX/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=C4illin/ConvertX&quot; alt=&quot;Image with all contributors&quot;/&gt;
&lt;/a&gt;

## Star History

&lt;a href=&quot;https://github.com/C4illin/ConvertX/stargazers&quot;&gt;
 &lt;picture&gt;
   &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://api.star-history.com/svg?repos=C4illin/ConvertX&amp;type=Date&amp;theme=dark&quot; /&gt;
   &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://api.star-history.com/svg?repos=C4illin/ConvertX&amp;type=Date&quot; /&gt;
   &lt;img alt=&quot;Star History Chart&quot; src=&quot;https://api.star-history.com/svg?repos=C4illin/ConvertX&amp;type=Date&quot; /&gt;
 &lt;/picture&gt;
&lt;/a&gt;
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[iib0011/omni-tools]]></title>
            <link>https://github.com/iib0011/omni-tools</link>
            <guid>https://github.com/iib0011/omni-tools</guid>
            <pubDate>Sat, 30 Aug 2025 00:04:19 GMT</pubDate>
            <description><![CDATA[Self-hosted collection of powerful web-based tools for everyday tasks. No ads, no tracking, just fast, accessible utilities right from your browser!]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/iib0011/omni-tools">iib0011/omni-tools</a></h1>
            <p>Self-hosted collection of powerful web-based tools for everyday tasks. No ads, no tracking, just fast, accessible utilities right from your browser!</p>
            <p>Language: TypeScript</p>
            <p>Stars: 6,313</p>
            <p>Forks: 318</p>
            <p>Stars today: 12 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
        &lt;img src=&quot;src/assets/logo.png&quot; width=&quot;220&quot; /&gt;
        &lt;br /&gt;&lt;br /&gt;
&lt;a href=&quot;https://trendshift.io/repositories/13055&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://trendshift.io/api/badge/repositories/13055&quot; alt=&quot;iib0011%2Fomni-tools | Trendshift&quot; style=&quot;width: 200px;&quot; width=&quot;200&quot;/&gt;&lt;/a&gt;
   &lt;br /&gt;&lt;br /&gt;
&lt;a href=&quot;https://github.com/iib0011/omni-tools/releases&quot;&gt;
          &lt;img src=&quot;https://img.shields.io/badge/version-0.5.0-blue?style=for-the-badge&quot; /&gt;
        &lt;/a&gt;
        &lt;a href=&quot;https://hub.docker.com/r/iib0011/omni-tools&quot;&gt;
          &lt;img src=&quot;https://img.shields.io/docker/pulls/iib0011/omni-tools?style=for-the-badge&amp;logo=docker&quot; /&gt;
        &lt;/a&gt;
        &lt;a href=&quot;https://github.com/iib0011&quot;&gt;
          &lt;img src=&quot;https://img.shields.io/github/stars/iib0011/omni-tools?style=for-the-badge&amp;logo=github&quot; /&gt;
        &lt;/a&gt;
        &lt;a href=&quot;https://github.com/iib0011/omni-tools/blob/main/LICENSE&quot;&gt;
          &lt;img src=&quot;https://img.shields.io/github/license/iib0011/omni-tools?style=for-the-badge&quot; /&gt;
        &lt;/a&gt;
        &lt;a href=&quot;https://discord.gg/SDbbn3hT4b&quot;&gt;
          &lt;img src=&quot;https://img.shields.io/discord/1342971141823664179?label=Discord&amp;style=for-the-badge&quot; /&gt;
        &lt;/a&gt;
        &lt;br /&gt;&lt;br /&gt;
&lt;/div&gt;

Welcome to OmniTools, a self-hosted web app offering a variety of online tools to simplify everyday tasks.
Whether you are coding, manipulating images/videos, PDFs or crunching numbers, OmniTools has you covered. Please don&#039;t
forget to
star the repo to support us.
Here is the [demo](https://omnitools.app) website.

All files are processed entirely on the client side: nothing ever leaves your device.
Plus, the Docker image is super lightweight at just 28MB, making it fast to deploy and easy to self-host.

![img.png](docs-images/img.png)

## Table of Contents

- [Features](#features)
- [Self-host](#self-hostrun)
- [Contribute](#contribute)
- [Contact](#contact)
- [License](#license)

## Features

We strive to offer a variety of tools, including:

### **Image/Video/Audio Tools**

- Image Resizer
- Image Converter
- Image Editor
- Video Trimmer
- Video Reverser
- And more...

### **PDF Tools**

- PDF Splitter
- PDF Merger
- PDF Editor
- And more...

### **Text/List Tools**

- Case Converters
- List Shuffler
- Text Formatters
- And more...

### **Date and Time Tools**

- Date Calculators
- Time Zone Converters
- And more...

### **Math Tools**

- Generate Prime Numbers
- Calculate voltage, current, or resistance
- And more...

### **Data Tools**

- JSON Tools
- CSV Tools
- XML Tools
- And more...

Stay tuned as we continue to expand and improve our collection!

## Self-host/Run

### Docker

```bash
docker run -d --name omni-tools --restart unless-stopped -p 8080:80 iib0011/omni-tools:latest
```

### Docker Compose

```yaml
services:
  omni-tools:
    image: iib0011/omni-tools:latest
    container_name: omni-tools
    restart: unless-stopped
    ports:
      - &quot;8080:80&quot;

```

## Contribute

This is a React Project with Typescript Material UI. We use icons from [Iconify](https://icon-sets.iconify.design)

### Project setup

```bash
git clone https://github.com/iib0011/omni-tools.git
cd omni-tools
npm i
npm run dev
```

### Create a new tool

```bash
npm run script:create:tool my-tool-name folder1 # npm run script:create:tool split pdf
```

For tools located under multiple nested directories, use:

```bash
npm run script:create:tool my-tool-name folder1/folder2 # npm run script:create:tool compress image/png
```

Use `folder1\folder2` on Windows.

### Run tests

```bash
npm run test
```

- For e2e tests

```bash
npm run test:e2e
```

### i18n (Translations)
The translation files are [here](public/locales). Only edit these if you are a developer. For non developers, use [Locize](https://www.locize.app/register?invitation=YOIH0Dyz3KHh3uQFCGYe9v1QOUoq8W5ySgmlwjX9cSypeJmt8F40brDtVbXb71fK).

&lt;img src=&quot;https://api.star-history.com/svg?repos=iib0011/omni-tools&amp;type=Date&quot;/&gt;

## ü§ù Looking to contribute?

We welcome contributions! You can help by:

- Reporting bugs
- Suggesting new features in GitHub issues or [here](https://tally.so/r/nrkkx2)
- Translating in [Locize project](https://www.locize.app/register?invitation=YOIH0Dyz3KHh3uQFCGYe9v1QOUoq8W5ySgmlwjX9cSypeJmt8F40brDtVbXb71fK).
- Improving documentation
- Submitting pull requests


You can also join our [Discord server](https://discord.gg/SDbbn3hT4b)
## üß° Sponsors
&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.locize.com/&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;docs-images/locizeSponsor.svg&quot; alt=&quot;Locize&quot; width=&quot;200&quot;/&gt;
  &lt;/a&gt;
&lt;/div&gt;

Thanks to [Locize](https://www.locize.com) for sponsoring OmniTools and supporting localization efforts.
They make translation management simple and developer-friendly.

## Contributors

&lt;a href=&quot;https://github.com/iib0011/omni-tools/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=iib0011/omni-tools&quot; /&gt;
&lt;/a&gt;

## Contact

For any questions or suggestions, feel free to open an issue or contact me at:
[ibracool99@gmail.com](mailto:ibracool99@gmail.com)

## License

This project is licensed under the MIT License. See the [LICENSE](LICENSE) file for details.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[medplum/medplum]]></title>
            <link>https://github.com/medplum/medplum</link>
            <guid>https://github.com/medplum/medplum</guid>
            <pubDate>Sat, 30 Aug 2025 00:04:18 GMT</pubDate>
            <description><![CDATA[Medplum is a healthcare platform that helps you quickly develop high-quality compliant applications.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/medplum/medplum">medplum/medplum</a></h1>
            <p>Medplum is a healthcare platform that helps you quickly develop high-quality compliant applications.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 1,868</p>
            <p>Forks: 558</p>
            <p>Stars today: 31 stars today</p>
            <h2>README</h2><pre># [Medplum](https://www.medplum.com) &amp;middot; [![GitHub license](https://img.shields.io/badge/license-Apache-blue.svg)](https://github.com/medplum/medplum/blob/main/LICENSE.txt) [![npm version](https://img.shields.io/npm/v/@medplum/core.svg?color=blue)](https://www.npmjs.com/package/@medplum/core) [![Quality Gate Status](https://sonarcloud.io/api/project_badges/measure?project=medplum_medplum&amp;metric=alert_status&amp;token=207c95a43e7519809d6d336d8cc7837d3e057acf)](https://sonarcloud.io/dashboard?id=medplum_medplum) [![Coverage Status](https://coveralls.io/repos/github/medplum/medplum/badge.svg?branch=main)](https://coveralls.io/github/medplum/medplum?branch=main) [![OpenSSF Best Practices](https://www.bestpractices.dev/projects/10900/badge?gold)](https://www.bestpractices.dev/projects/10900)

![Medplum](packages/docs/static/img/cover.webp)

Medplum is a developer platform that enables flexible and rapid development of healthcare apps.

- **Medplum Auth** - End-to-end identity solution for easy user authentication, sign-in, and permissions using OAuth, OpenID, and SMART-on-FHIR.
- **Medplum Clinical Data Repository (CDR)** - Backend server that hosts your healthcare data in a secure, compliant, and standards-based repository.
- **Medplum API** - FHIR-based API for sending, receiving, and manipulating data.
- **Medplum SDK** - Client libraries that simplify the process of interacting with the **Medplum API**.
- **Medplum App** - Web application where you can view your data and perform basic editing tasks. You can also use the Medplum App to manage basic workflows.
- **Medplum Bots** - Write and run application logic server-side without needing to set up your own server.
- **UI Component Library** - React components designed to help you quickly develop custom healthcare applications.

## Docs

- [Contributing](#contributing)
  - [Ground Rules](#ground-rules)
  - [Codebase](#codebase)
    - [Technologies](#technologies)
    - [Folder Structure](#folder-structure)

## Contributing

**We heartily welcome any and all contributions that match our engineering standards!**

That being said, this codebase isn&#039;t your typical open-source project because it&#039;s not a library or package with a
limited scope -- it&#039;s our entire product. Our [Contributing documentation](https://medplum.com/docs/contributing) has
all the information you need to get started.

### Ground Rules

#### Contributions and discussion guidelines

By making a contribution to this project, you are deemed to have accepted the [Developer Certificate of Origin](https://developercertificate.org/) (DCO).

All conversations and communities on Medplum are expected to follow GitHub&#039;s [Community Guidelines](https://help.github.com/en/github/site-policy/github-community-guidelines)
and [Acceptable Use Policies](https://help.github.com/en/github/site-policy/github-acceptable-use-policies). We expect
discussions on issues and pull requests to stay positive, productive, and respectful. Remember: there are real people on
the other side of the screen!

#### Reporting a bug or proposing a new feature

If you found a technical bug on Medplum or have ideas for features we should implement, the issue tracker is the best
place to share with us. ([click here to open a new issue](https://github.com/medplum/medplum/issues/new))

### Writing documentation or blog content

Did you learn how to do something using Medplum that wasn&#039;t obvious on your first try? By contributing your new knowledge
to our documentation, you can help others who might have a similar use case!

Our documentation is hosted on [medplum.com/docs](https://www.medplum.com/docs), but it is built from [Markdown](https://www.markdownguide.org/)
files in our [`docs` package](https://github.com/medplum/medplum/tree/main/packages/docs/docs).

For relatively small changes, you can edit files directly from your web browser on [Github.dev](https://github.dev/medplum/medplum/blob/main/packages/docs/docs/home.md)
without needing to clone the repository.

#### Fixing a bug or implementing a new feature

If you find a bug and open a Pull Request that fixes it, we&#039;ll review it as soon as possible to ensure it meets our engineering standards.

If you want to implement a new feature, open an issue first to discuss with us how the feature might work, and to ensure
it fits into our roadmap and plans for the app.

If you want to contribute but are unsure how to start, we have [a &quot;good first issue&quot; label](https://github.com/medplum/medplum/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22) which is applied to newcomer-friendly issues. Take a look at [the full list of good first issues](https://github.com/medplum/medplum/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22) and pick something you like!

**Ready to get started writing code?** Follow the [local setup instructions](https://www.medplum.com/docs/contributing/local-dev-setup) and jump in!

### Codebase

#### Technologies

With the ground rules out of the way, let&#039;s talk about the coarse architecture of this mono repo:

- **Full-stack TypeScript**: We use Node.js to power our servers, and React to power our frontend apps. Almost all of the code you&#039;ll touch in this codebase will be TypeScript.

Here is a list of all the big technologies we use:

- **PostgreSQL**: Data storage
- **Redis**: Background jobs and caching
- **Express**: API server
- **TypeScript**: Type-safe JavaScript
- **React**: Frontend React app

#### Folder structure

```sh
medplum/
‚îú‚îÄ‚îÄ packages
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ agent           # On-premise agent
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ app             # Frontend web app
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ bot-layer       # AWS Lambda Layer for Bots
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ cdk             # AWS CDK infra as code
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ cli             # Command line interface
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ core            # Core shared library
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ definitions     # Data definitions
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ docs            # Documentation
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ examples        # Example code used in documentation
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ fhir-router     # FHIR URL router
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ fhirtypes       # FHIR TypeScript definitions
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ generator       # Code generator utilities
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ graphiql        # Preconfigured GraphiQL
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ hl7             # HL7 client and server
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ mock            # Mock FHIR data for testing
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ react           # React component library
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ react-hooks     # React hooks library
‚îÇ¬†¬† ‚îî‚îÄ‚îÄ server          # Backend API server
‚îî‚îÄ‚îÄ scripts             # Helper bash scripts
```

## Thanks

&lt;a href=&quot;https://www.chromatic.com/&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/321738/84662277-e3db4f80-af1b-11ea-88f5-91d67a5e59f6.png&quot; width=&quot;153&quot; height=&quot;30&quot; alt=&quot;Chromatic&quot; /&gt;&lt;/a&gt;

Thanks to [Chromatic](https://www.chromatic.com/) for providing the visual testing platform that helps us review UI changes and catch visual regressions.

## License

[Apache 2.0](LICENSE.txt)

Copyright &amp;copy; Medplum 2025

FHIR&amp;reg; is a registered trademark of HL7.

SNOMED&amp;reg; is a registered trademark of the International Health Terminology Standards Development Organisation.

LOINC&amp;reg; is a registered trademark of Regenstrief Institute, Inc.

DICOM&amp;reg; is the registered trademark of the National Electrical Manufacturers Association (NEMA).
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[mlc-ai/web-llm]]></title>
            <link>https://github.com/mlc-ai/web-llm</link>
            <guid>https://github.com/mlc-ai/web-llm</guid>
            <pubDate>Sat, 30 Aug 2025 00:04:17 GMT</pubDate>
            <description><![CDATA[High-performance In-browser LLM Inference Engine]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/mlc-ai/web-llm">mlc-ai/web-llm</a></h1>
            <p>High-performance In-browser LLM Inference Engine</p>
            <p>Language: TypeScript</p>
            <p>Stars: 16,320</p>
            <p>Forks: 1,083</p>
            <p>Stars today: 21 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot; id=&quot;top&quot;&gt;

# WebLLM
[![NPM Package](https://img.shields.io/badge/NPM_Package-Published-cc3534)](https://www.npmjs.com/package/@mlc-ai/web-llm)
[![&quot;WebLLM Chat Deployed&quot;](https://img.shields.io/badge/WebLLM_Chat-Deployed-%2332a852)](https://chat.webllm.ai/)
[![Join Discord](https://img.shields.io/badge/Join-Discord-7289DA?logo=discord&amp;logoColor=white)](https://discord.gg/9Xpy2HGBuD)
[![Related Repository: WebLLM Chat](https://img.shields.io/badge/Related_Repo-WebLLM_Chat-fafbfc?logo=github)](https://github.com/mlc-ai/web-llm-chat/)
[![Related Repository: MLC LLM](https://img.shields.io/badge/Related_Repo-MLC_LLM-fafbfc?logo=github)](https://github.com/mlc-ai/mlc-llm/)

**High-Performance In-Browser LLM Inference Engine.**


[Documentation](https://webllm.mlc.ai/docs/) | [Blogpost](https://blog.mlc.ai/2024/06/13/webllm-a-high-performance-in-browser-llm-inference-engine) | [Paper](https://arxiv.org/abs/2412.15803) | [Examples](examples)

&lt;/div&gt;

## Overview
WebLLM is a high-performance in-browser LLM inference engine that brings language model inference directly onto web browsers with hardware acceleration.
Everything runs inside the browser with no server support and is accelerated with WebGPU.

WebLLM is **fully compatible with [OpenAI API](https://platform.openai.com/docs/api-reference/chat).**
That is, you can use the same OpenAI API on **any open source models** locally, with functionalities
including streaming, JSON-mode, function-calling (WIP), etc.

We can bring a lot of fun opportunities to build AI assistants for everyone and enable privacy while enjoying GPU acceleration.

You can use WebLLM as a base [npm package](https://www.npmjs.com/package/@mlc-ai/web-llm) and build your own web application on top of it by following the examples below. This project is a companion project of [MLC LLM](https://github.com/mlc-ai/mlc-llm), which enables universal deployment of LLM across hardware environments.

&lt;div align=&quot;center&quot;&gt;

**[Check out WebLLM Chat to try it out!](https://chat.webllm.ai/)**

&lt;/div&gt;

## Key Features
- **In-Browser Inference**: WebLLM is a high-performance, in-browser language model inference engine that leverages WebGPU for hardware acceleration, enabling powerful LLM operations directly within web browsers without server-side processing.

- [**Full OpenAI API Compatibility**](#full-openai-compatibility): Seamlessly integrate your app with WebLLM using OpenAI API with functionalities such as streaming, JSON-mode, logit-level control, seeding, and more.

- **Structured JSON Generation**: WebLLM supports state-of-the-art JSON mode structured generation, implemented in the WebAssembly portion of the model library for optimal performance. Check [WebLLM JSON Playground](https://huggingface.co/spaces/mlc-ai/WebLLM-JSON-Playground) on HuggingFace to try generating JSON output with custom JSON schema.

- [**Extensive Model Support**](#built-in-models): WebLLM natively supports a range of models including Llama 3, Phi 3, Gemma, Mistral, Qwen(ÈÄö‰πâÂçÉÈóÆ), and many others, making it versatile for various AI tasks. For the complete supported model list, check [MLC Models](https://mlc.ai/models).

- [**Custom Model Integration**](#custom-models): Easily integrate and deploy custom models in MLC format, allowing you to adapt WebLLM to specific needs and scenarios, enhancing flexibility in model deployment.

- **Plug-and-Play Integration**: Easily integrate WebLLM into your projects using package managers like NPM and Yarn, or directly via CDN, complete with comprehensive [examples](./examples/) and a modular design for connecting with UI components.

- **Streaming &amp; Real-Time Interactions**: Supports streaming chat completions, allowing real-time output generation which enhances interactive applications like chatbots and virtual assistants.

- **Web Worker &amp; Service Worker Support**: Optimize UI performance and manage the lifecycle of models efficiently by offloading computations to separate worker threads or service workers.

- **Chrome Extension Support**: Extend the functionality of web browsers through custom Chrome extensions using WebLLM, with examples available for building both basic and advanced extensions.

## Built-in Models

Check the complete list of available models on [MLC Models](https://mlc.ai/models). WebLLM supports a subset of these available models and the list can be accessed at [`prebuiltAppConfig.model_list`](https://github.com/mlc-ai/web-llm/blob/main/src/config.ts#L293).

Here are the primary families of models currently supported:

- **Llama**: Llama 3, Llama 2, Hermes-2-Pro-Llama-3
- **Phi**: Phi 3, Phi 2, Phi 1.5
- **Gemma**: Gemma-2B
- **Mistral**: Mistral-7B-v0.3, Hermes-2-Pro-Mistral-7B, NeuralHermes-2.5-Mistral-7B, OpenHermes-2.5-Mistral-7B
- **Qwen (ÈÄö‰πâÂçÉÈóÆ)**: Qwen2 0.5B, 1.5B, 7B

If you need more models, [request a new model via opening an issue](https://github.com/mlc-ai/web-llm/issues/new/choose) or check [Custom Models](#custom-models) for how to compile and use your own models with WebLLM.

## Jumpstart with Examples

Learn how to use WebLLM to integrate large language models into your application and generate chat completions through this simple Chatbot example: 

[![Example Chatbot on JSFiddle](https://img.shields.io/badge/Example-JSFiddle-blue?logo=jsfiddle&amp;logoColor=white)](https://jsfiddle.net/neetnestor/4nmgvsa2/)
[![Example Chatbot on Codepen](https://img.shields.io/badge/Example-Codepen-gainsboro?logo=codepen)](https://codepen.io/neetnestor/pen/vYwgZaG)

For an advanced example of a larger, more complicated project, check [WebLLM Chat](https://github.com/mlc-ai/web-llm-chat/blob/main/app/client/webllm.ts).

More examples for different use cases are available in the [examples](./examples/) folder.

## Get Started

WebLLM offers a minimalist and modular interface to access the chatbot in the browser.
The package is designed in a modular way to hook to any of the UI components.

### Installation

#### Package Manager

```sh
# npm
npm install @mlc-ai/web-llm
# yarn
yarn add @mlc-ai/web-llm
# or pnpm
pnpm install @mlc-ai/web-llm
```

Then import the module in your code.

```typescript
// Import everything
import * as webllm from &quot;@mlc-ai/web-llm&quot;;
// Or only import what you need
import { CreateMLCEngine } from &quot;@mlc-ai/web-llm&quot;;
```

#### CDN Delivery

Thanks to [jsdelivr.com](https://www.jsdelivr.com/package/npm/@mlc-ai/web-llm), WebLLM can be imported directly through URL and work out-of-the-box on cloud development platforms like [jsfiddle.net](https://jsfiddle.net/), [Codepen.io](https://codepen.io/), and [Scribbler](https://scribbler.live):

```javascript
import * as webllm from &quot;https://esm.run/@mlc-ai/web-llm&quot;;
```
It can also be dynamically imported as:
```javascript
const webllm = await import (&quot;https://esm.run/@mlc-ai/web-llm&quot;);
```

### Create MLCEngine

Most operations in WebLLM are invoked through the `MLCEngine` interface. You can create an `MLCEngine` instance and loading the model by calling the `CreateMLCEngine()` factory function.

(Note that loading models requires downloading and it can take a significant amount of time for the very first run without caching previously. You should properly handle this asynchronous call.)

```typescript
import { CreateMLCEngine } from &quot;@mlc-ai/web-llm&quot;;

// Callback function to update model loading progress
const initProgressCallback = (initProgress) =&gt; {
  console.log(initProgress);
}
const selectedModel = &quot;Llama-3.1-8B-Instruct-q4f32_1-MLC&quot;;

const engine = await CreateMLCEngine(
  selectedModel,
  { initProgressCallback: initProgressCallback }, // engineConfig
);
```

Under the hood, this factory function does the following steps for first creating an engine instance (synchronous) and then loading the model (asynchronous). You can also do them separately in your application.

```typescript
import { MLCEngine } from &quot;@mlc-ai/web-llm&quot;;

// This is a synchronous call that returns immediately
const engine = new MLCEngine({
  initProgressCallback: initProgressCallback
});

// This is an asynchronous call and can take a long time to finish
await engine.reload(selectedModel);
```

### Chat Completion
After successfully initializing the engine, you can now invoke chat completions using OpenAI style chat APIs through the `engine.chat.completions` interface. For the full list of parameters and their descriptions, check [section below](#full-openai-compatibility) and [OpenAI API reference](https://platform.openai.com/docs/api-reference/chat/create).

(Note: The `model` parameter is not supported and will be ignored here. Instead, call `CreateMLCEngine(model)` or `engine.reload(model)` instead as shown in the [Create MLCEngine](#create-mlcengine) above.)


```typescript
const messages = [
  { role: &quot;system&quot;, content: &quot;You are a helpful AI assistant.&quot; },
  { role: &quot;user&quot;, content: &quot;Hello!&quot; },
]

const reply = await engine.chat.completions.create({
  messages,
});
console.log(reply.choices[0].message);
console.log(reply.usage);
```

### Streaming

WebLLM also supports streaming chat completion generating. To use it, simply pass `stream: true` to the `engine.chat.completions.create` call.

```typescript
const messages = [
  { role: &quot;system&quot;, content: &quot;You are a helpful AI assistant.&quot; },
  { role: &quot;user&quot;, content: &quot;Hello!&quot; },
]

// Chunks is an AsyncGenerator object
const chunks = await engine.chat.completions.create({
  messages,
  temperature: 1,
  stream: true, // &lt;-- Enable streaming
  stream_options: { include_usage: true },
});

let reply = &quot;&quot;;
for await (const chunk of chunks) {
  reply += chunk.choices[0]?.delta.content || &quot;&quot;;
  console.log(reply);
  if (chunk.usage) {
    console.log(chunk.usage); // only last chunk has usage
  }
}

const fullReply = await engine.getMessage();
console.log(fullReply);
```

## Advanced Usage

### Using Workers

You can put the heavy computation in a worker script to optimize your application performance. To do so, you need to:

1. Create a handler in the worker thread that communicates with the frontend while handling the requests.
2. Create a Worker Engine in your main application, which under the hood sends messages to the handler in the worker thread.

For detailed implementations of different kinds of Workers, check the following sections.

#### Dedicated Web Worker

WebLLM comes with API support for WebWorker so you can hook
the generation process into a separate worker thread so that
the computing in the worker thread won&#039;t disrupt the UI.

We create a handler in the worker thread that communicates with the frontend while handling the requests.

```typescript
// worker.ts
import { WebWorkerMLCEngineHandler } from &quot;@mlc-ai/web-llm&quot;;

// A handler that resides in the worker thread
const handler = new WebWorkerMLCEngineHandler();
self.onmessage = (msg: MessageEvent) =&gt; {
  handler.onmessage(msg);
};
```

In the main logic, we create a `WebWorkerMLCEngine` that
implements the same `MLCEngineInterface`. The rest of the logic remains the same.

```typescript
// main.ts
import { CreateWebWorkerMLCEngine } from &quot;@mlc-ai/web-llm&quot;;

async function main() {
  // Use a WebWorkerMLCEngine instead of MLCEngine here
  const engine = await CreateWebWorkerMLCEngine(
    new Worker(
      new URL(&quot;./worker.ts&quot;, import.meta.url), 
      {
        type: &quot;module&quot;,
      }
    ),
    selectedModel,
    { initProgressCallback }, // engineConfig
  );

  // everything else remains the same
}
```

### Use Service Worker

WebLLM comes with API support for ServiceWorker so you can hook the generation process
into a service worker to avoid reloading the model in every page visit and optimize
your application&#039;s offline experience.

(Note, Service Worker&#039;s life cycle is managed by the browser and can be killed any time without notifying the webapp. `ServiceWorkerMLCEngine` will try to keep the service worker thread alive by periodically sending heartbeat events, but your application should also include proper error handling. Check `keepAliveMs` and `missedHeatbeat` in [`ServiceWorkerMLCEngine`](https://github.com/mlc-ai/web-llm/blob/main/src/service_worker.ts#L234) for more details.)

We create a handler in the worker thread that communicates with the frontend while handling the requests.


```typescript
// sw.ts
import { ServiceWorkerMLCEngineHandler } from &quot;@mlc-ai/web-llm&quot;;

let handler: ServiceWorkerMLCEngineHandler;

self.addEventListener(&quot;activate&quot;, function (event) {
  handler = new ServiceWorkerMLCEngineHandler();
  console.log(&quot;Service Worker is ready&quot;);
});
```

Then in the main logic, we register the service worker and create the engine using
`CreateServiceWorkerMLCEngine` function. The rest of the logic remains the same.

```typescript
// main.ts
import { MLCEngineInterface, CreateServiceWorkerMLCEngine } from &quot;@mlc-ai/web-llm&quot;;

if (&quot;serviceWorker&quot; in navigator) {
  navigator.serviceWorker.register(
    new URL(&quot;sw.ts&quot;, import.meta.url),  // worker script
    { type: &quot;module&quot; },
  );
}

const engine: MLCEngineInterface =
  await CreateServiceWorkerMLCEngine(
    selectedModel,
    { initProgressCallback }, // engineConfig
  );
```

You can find a complete example on how to run WebLLM in service worker in [examples/service-worker](examples/service-worker/).

### Chrome Extension
You can also find examples of building Chrome extension with WebLLM in [examples/chrome-extension](examples/chrome-extension/) and [examples/chrome-extension-webgpu-service-worker](examples/chrome-extension-webgpu-service-worker/). The latter one leverages service worker, so the extension is persistent in the background. Additionally, you can explore another full project of a Chrome extension, WebLLM Assistant, which leverages WebLLM [here](https://github.com/mlc-ai/web-llm-assistant).

## Full OpenAI Compatibility
WebLLM is designed to be fully compatible with [OpenAI API](https://platform.openai.com/docs/api-reference/chat). Thus, besides building a simple chatbot, you can also have the following functionalities with WebLLM:

- [streaming](examples/streaming): return output as chunks in real-time in the form of an AsyncGenerator
- [json-mode](examples/json-mode): efficiently ensure output is in JSON format, see [OpenAI Reference](https://platform.openai.com/docs/guides/text-generation/chat-completions-api) for more.
- [seed-to-reproduce](examples/seed-to-reproduce): use seeding to ensure a reproducible output with fields `seed`.
- [function-calling](examples/function-calling) (WIP): function calling with fields `tools` and `tool_choice` (with preliminary support); or manual function calling without `tools` or `tool_choice` (keeps the most flexibility).

## Custom Models

WebLLM works as a companion project of [MLC LLM](https://github.com/mlc-ai/mlc-llm) and it supports custom models in MLC format. 
It reuses the model artifact and builds the flow of MLC LLM. To compile and use your own models with WebLLM, please check out
[MLC LLM document](https://llm.mlc.ai/docs/deploy/webllm.html)
on how to compile and deploy new model weights and libraries to WebLLM. 

Here, we go over the high-level idea. There are two elements of the WebLLM package that enable new models and weight variants.

- `model`: Contains a URL to model artifacts, such as weights and meta-data.
- `model_lib`: A URL to the web assembly library (i.e. wasm file) that contains the executables to accelerate the model computations.

Both are customizable in the WebLLM.

```typescript
import { CreateMLCEngine } from &quot;@mlc-ai/web-llm&quot;;

async main() {
  const appConfig = {
    &quot;model_list&quot;: [
      {
        &quot;model&quot;: &quot;/url/to/my/llama&quot;,
        &quot;model_id&quot;: &quot;MyLlama-3b-v1-q4f32_0&quot;,
        &quot;model_lib&quot;: &quot;/url/to/myllama3b.wasm&quot;,
      }
    ],
  };
  // override default
  const chatOpts = {
    &quot;repetition_penalty&quot;: 1.01
  };

  // load a prebuilt model
  // with a chat option override and app config
  // under the hood, it will load the model from myLlamaUrl
  // and cache it in the browser cache
  // The chat will also load the model library from &quot;/url/to/myllama3b.wasm&quot;,
  // assuming that it is compatible to the model in myLlamaUrl.
  const engine = await CreateMLCEngine(
    &quot;MyLlama-3b-v1-q4f32_0&quot;,
    { appConfig }, // engineConfig
    chatOpts,
  );
}
```

In many cases, we only want to supply the model weight variant, but
not necessarily a new model (e.g. `NeuralHermes-Mistral` can reuse `Mistral`&#039;s
model library). For examples of how a model library can be shared by different model variants,
see `webllm.prebuiltAppConfig`.

## Build WebLLM Package From Source

NOTE: you don&#039;t need to build from source unless you would like to modify the WebLLM package.
To use the npm, simply follow [Get Started](#get-started) or any of the [examples](examples) instead.

To build from source, simply run:

```bash
npm install
npm run build
```

Then, to test the effects of your code change in an example, inside `examples/get-started/package.json`, change from `&quot;@mlc-ai/web-llm&quot;: &quot;^0.2.79&quot;` to `&quot;@mlc-ai/web-llm&quot;: ../..`.

Then run:

```bash
cd examples/get-started
npm install
npm start
```

Note that sometimes you would need to switch between `file:../..` and `../..` to trigger npm to recognize new changes. In the worst case, you can run:

```bash
cd examples/get-started
rm -rf node_modules dist package-lock.json .parcel-cache
npm install
npm start
```

### In case you need to build TVMjs from source

WebLLM&#039;s runtime largely depends on TVMjs: https://github.com/apache/tvm/tree/main/web

While it is also available as an npm package: https://www.npmjs.com/package/@mlc-ai/web-runtime, you can build it from source if needed by following the steps below.

1. Install [emscripten](https://emscripten.org). It is an LLVM-based compiler that compiles C/C++ source code to WebAssembly.
    - Follow the [installation instruction](https://emscripten.org/docs/getting_started/downloads.html#installation-instructions-using-the-emsdk-recommended) to install the latest emsdk.
    - Source `emsdk_env.sh` by `source path/to/emsdk_env.sh`, so that `emcc` is reachable from PATH and the command `emcc` works.

    We can verify the successful installation by trying out `emcc` terminal.

    Note: We recently found that using the latest `emcc` version may run into issues during runtime. Use `./emsdk install 3.1.56` instead of `./emsdk install latest` for now as a workaround. The error may look like
    ```
    Init error, LinkError: WebAssembly.instantiate(): Import #6 module=&quot;wasi_snapshot_preview1&quot;
    function=&quot;proc_exit&quot;: function import requires a callable
    ```

2. In `./package.json`, change from `&quot;@mlc-ai/web-runtime&quot;: &quot;0.18.0-dev2&quot;,` to `&quot;@mlc-ai/web-runtime&quot;: &quot;file:./tvm_home/web&quot;,`.

3. Setup necessary environment

   Prepare all the necessary dependencies for web build:

   ```shell
   ./scripts/prep_deps.sh
   ```

   In this step, if `$TVM_SOURCE_DIR` is not defined in the environment, we will execute the following line to build `tvmjs` dependency:
   ```shell
   git clone https://github.com/mlc-ai/relax 3rdparty/tvm-unity --recursive
   ```

   This clones the current HEAD of `mlc-ai/relax`. However, it may not always be the correct branch or commit to clone. To build a specific npm version from source, refer to the version bump PR, which states which branch (i.e. `mlc-ai/relax` or `apache/tvm`) and which commit the current WebLLM version depends on. For instance, version 0.2.52, according to its version bump PR https://github.com/mlc-ai/web-llm/pull/521, is built by checking out the following commit https://github.com/apache/tvm/commit/e6476847753c80e054719ac47bc2091c888418b6 in `apache/tvm`, rather than the HEAD of `mlc-ai/relax`.

   Besides, `--recursive` is necessary and important. Otherwise, you may encounter errors like `fatal error: &#039;dlpack/dlpack.h&#039; file not found`.

4. Build WebLLM Package

   ```shell
   npm run build
   ```

5. Validate some of the sub-packages

   You can then go to the subfolders in [examples](examples) to validate some of the sub-packages.
   We 

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[miurla/morphic]]></title>
            <link>https://github.com/miurla/morphic</link>
            <guid>https://github.com/miurla/morphic</guid>
            <pubDate>Sat, 30 Aug 2025 00:04:16 GMT</pubDate>
            <description><![CDATA[An AI-powered search engine with a generative UI]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/miurla/morphic">miurla/morphic</a></h1>
            <p>An AI-powered search engine with a generative UI</p>
            <p>Language: TypeScript</p>
            <p>Stars: 8,018</p>
            <p>Forks: 2,195</p>
            <p>Stars today: 20 stars today</p>
            <h2>README</h2><pre># Morphic

An AI-powered search engine with a generative UI.

![capture](/public/screenshot-2025-05-04.png)

## üóÇÔ∏è Overview

- üõ† [Features](#-features)
- üß± [Stack](#-stack)
- üöÄ [Quickstart](#-quickstart)
- üåê [Deploy](#-deploy)
- üîé [Search Engine](#-search-engine)
- üíô [Sponsors](#-sponsors)
- üë• [Contributing](#-contributing)
- üìÑ [License](#-license)

üìù Explore AI-generated documentation on [DeepWiki](https://deepwiki.com/miurla/morphic)

## üõ† Features

### Core Features

- AI-powered search with GenerativeUI
- Natural language question understanding
- Multiple search providers support (Tavily, SearXNG, Exa)
- Model selection from UI (switch between available AI models)
  - Reasoning models with visible thought process

### Authentication

- User authentication powered by [Supabase Auth](https://supabase.com/docs/guides/auth)
- Supports Email/Password sign-up and sign-in
- Supports Social Login with Google

### Chat &amp; History

- Chat history functionality (Optional)
- Share search results (Optional)
- Redis support (Local/Upstash)

### AI Providers

The following AI providers are supported:

- OpenAI (Default)
- Google Generative AI
- Azure OpenAI
- Anthropic
- Ollama
- Groq
- DeepSeek
- Fireworks
- xAI (Grok)
- OpenAI Compatible

Models are configured in `public/config/models.json`. Each model requires its corresponding API key to be set in the environment variables. See [Configuration Guide](docs/CONFIGURATION.md) for details.

### Search Capabilities

- URL-specific search
- Video search support (Optional)
- SearXNG integration with:
  - Customizable search depth (basic/advanced)
  - Configurable engines
  - Adjustable results limit
  - Safe search options
  - Custom time range filtering

### Additional Features

- Docker deployment ready
- Browser search engine integration

## üß± Stack

### Core Framework

- [Next.js](https://nextjs.org/) - App Router, React Server Components
- [TypeScript](https://www.typescriptlang.org/) - Type safety
- [Vercel AI SDK](https://sdk.vercel.ai/docs) - Text streaming / Generative UI

### Authentication &amp; Authorization (Updated Category)

- [Supabase](https://supabase.com/) - User authentication and backend services

### AI &amp; Search

- [OpenAI](https://openai.com/) - Default AI provider (Optional: Google AI, Anthropic, Groq, Ollama, Azure OpenAI, DeepSeek, Fireworks)
- [Tavily AI](https://tavily.com/) - Default search provider
- Alternative providers:
  - [SearXNG](https://docs.searxng.org/) - Self-hosted search
  - [Exa](https://exa.ai/) - Neural search

### Data Storage

- [Upstash](https://upstash.com/) - Serverless Redis
- [Redis](https://redis.io/) - Local Redis option

### UI &amp; Styling

- [Tailwind CSS](https://tailwindcss.com/) - Utility-first CSS framework
- [shadcn/ui](https://ui.shadcn.com/) - Re-usable components
- [Radix UI](https://www.radix-ui.com/) - Unstyled, accessible components
- [Lucide Icons](https://lucide.dev/) - Beautiful &amp; consistent icons

## üöÄ Quickstart

### 1. Fork and Clone repo

Fork the repo to your Github account, then run the following command to clone the repo:

```bash
git clone git@github.com:[YOUR_GITHUB_ACCOUNT]/morphic.git
```

### 2. Install dependencies

```bash
cd morphic
bun install
```

### 3. Configure environment variables

```bash
cp .env.local.example .env.local
```

Fill in the required environment variables in `.env.local`:

```bash
# Required for Core Functionality
OPENAI_API_KEY=     # Get from https://platform.openai.com/api-keys
TAVILY_API_KEY=     # Get from https://app.tavily.com/home
```

For optional features configuration (Redis, SearXNG, etc.), see [CONFIGURATION.md](./docs/CONFIGURATION.md)

### 4. Run app locally

#### Using Bun

```bash
bun dev
```

#### Using Docker

```bash
docker compose up -d
```

Visit http://localhost:3000 in your browser.

## üåê Deploy

Host your own live version of Morphic with Vercel, Cloudflare Pages, or Docker.

### Vercel

[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/clone?repository-url=https%3A%2F%2Fgithub.com%2Fmiurla%2Fmorphic&amp;env=OPENAI_API_KEY,TAVILY_API_KEY,UPSTASH_REDIS_REST_URL,UPSTASH_REDIS_REST_TOKEN)

### Docker Prebuilt Image

Prebuilt Docker images are available on GitHub Container Registry:

```bash
docker pull ghcr.io/miurla/morphic:latest
```

You can use it with docker-compose:

```yaml
services:
  morphic:
    image: ghcr.io/miurla/morphic:latest
    env_file: .env.local
    ports:
      - &#039;3000:3000&#039;
    volumes:
      - ./models.json:/app/public/config/models.json # Optional: Override default model configuration
```

The default model configuration is located at `public/config/models.json`. For Docker deployment, you can create `models.json` alongside `.env.local` to override the default configuration.

## üîé Search Engine

### Setting up the Search Engine in Your Browser

If you want to use Morphic as a search engine in your browser, follow these steps:

1. Open your browser settings.
2. Navigate to the search engine settings section.
3. Select &quot;Manage search engines and site search&quot;.
4. Under &quot;Site search&quot;, click on &quot;Add&quot;.
5. Fill in the fields as follows:
   - **Search engine**: Morphic
   - **Shortcut**: morphic
   - **URL with %s in place of query**: `https://morphic.sh/search?q=%s`
6. Click &quot;Add&quot; to save the new search engine.
7. Find &quot;Morphic&quot; in the list of site search, click on the three dots next to it, and select &quot;Make default&quot;.

This will allow you to use Morphic as your default search engine in the browser.

## üíô Sponsors

This project is proudly supported by:

&lt;a href=&quot;https://vercel.com/oss&quot;&gt;
  &lt;img alt=&quot;Vercel OSS Program&quot; src=&quot;https://vercel.com/oss/program-badge.svg&quot; /&gt;
&lt;/a&gt;

## üë• Contributing

We welcome contributions to Morphic! Whether it&#039;s bug reports, feature requests, or pull requests, all contributions are appreciated.

Please see our [Contributing Guide](CONTRIBUTING.md) for details on:

- How to submit issues
- How to submit pull requests
- Commit message conventions
- Development setup

## üìÑ License

This project is licensed under the Apache License 2.0 - see the [LICENSE](LICENSE) file for details.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
    </channel>
</rss>