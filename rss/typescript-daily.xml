<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for typescript - TypeScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for typescript.</description>
        <lastBuildDate>Mon, 12 May 2025 00:05:28 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[voideditor/void]]></title>
            <link>https://github.com/voideditor/void</link>
            <guid>https://github.com/voideditor/void</guid>
            <pubDate>Mon, 12 May 2025 00:05:28 GMT</pubDate>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/voideditor/void">voideditor/void</a></h1>
            <p></p>
            <p>Language: TypeScript</p>
            <p>Stars: 17,063</p>
            <p>Forks: 995</p>
            <p>Stars today: 787 stars today</p>
            <h2>README</h2><pre># Welcome to Void.

&lt;div align=&quot;center&quot;&gt;
	&lt;img
		src=&quot;./src/vs/workbench/browser/parts/editor/media/slice_of_void.png&quot;
	 	alt=&quot;Void Welcome&quot;
		width=&quot;300&quot;
	 	height=&quot;300&quot;
	/&gt;
&lt;/div&gt;

Void is the open-source Cursor alternative.

Use AI agents on your codebase, checkpoint and visualize changes, and bring any model or host locally. Void sends messages directly to providers without retaining your data.

This repo contains the full sourcecode for Void. If you&#039;re new, welcome!

- üß≠ [Website](https://voideditor.com)

- üëã [Discord](https://discord.gg/RSNjgaugJs)

- üöô [Project Board](https://github.com/orgs/voideditor/projects/2)


## Contributing

1. To get started working on Void, check out our Project Board! You can also see [HOW_TO_CONTRIBUTE](https://github.com/voideditor/void/blob/main/HOW_TO_CONTRIBUTE.md).

2. Feel free to attend a casual weekly meeting in our Discord channel!


## Reference

Void is a fork of the [vscode](https://github.com/microsoft/vscode) repository. For a guide to the codebase, see [VOID_CODEBASE_GUIDE](https://github.com/voideditor/void/blob/main/VOID_CODEBASE_GUIDE.md).

## Support
You can always reach us in our Discord server or contact us via email: hello@voideditor.com.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[kamranahmedse/developer-roadmap]]></title>
            <link>https://github.com/kamranahmedse/developer-roadmap</link>
            <guid>https://github.com/kamranahmedse/developer-roadmap</guid>
            <pubDate>Mon, 12 May 2025 00:05:27 GMT</pubDate>
            <description><![CDATA[Interactive roadmaps, guides and other educational content to help developers grow in their careers.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/kamranahmedse/developer-roadmap">kamranahmedse/developer-roadmap</a></h1>
            <p>Interactive roadmaps, guides and other educational content to help developers grow in their careers.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 319,213</p>
            <p>Forks: 41,329</p>
            <p>Stars today: 382 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[Mail-0/Zero]]></title>
            <link>https://github.com/Mail-0/Zero</link>
            <guid>https://github.com/Mail-0/Zero</guid>
            <pubDate>Mon, 12 May 2025 00:05:26 GMT</pubDate>
            <description><![CDATA[Experience email the way you want with 0 ‚Äì the first open source email app that puts your privacy and safety first. Join the discord: https://discord.gg/0email]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/Mail-0/Zero">Mail-0/Zero</a></h1>
            <p>Experience email the way you want with 0 ‚Äì the first open source email app that puts your privacy and safety first. Join the discord: https://discord.gg/0email</p>
            <p>Language: TypeScript</p>
            <p>Stars: 6,913</p>
            <p>Forks: 579</p>
            <p>Stars today: 320 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;picture&gt;
    &lt;source srcset=&quot;apps/mail/public/white-icon.svg&quot; media=&quot;(prefers-color-scheme: dark)&quot;&gt;
    &lt;img src=&quot;apps/mail/public/black-icon.svg&quot; alt=&quot;Zero Logo&quot; width=&quot;64&quot; style=&quot;background-color: #000; padding: 10px;&quot;/&gt;
  &lt;/picture&gt;
&lt;/p&gt;

# Zero

[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/clone?repository-url=https%3A%2F%2Fgithub.com%2Fnizzyabi%2FMail0&amp;env=DATABASE_URL,BETTER_AUTH_SECRET,BETTER_AUTH_URL,BETTER_AUTH_TRUSTED_ORIGINS,GOOGLE_CLIENT_ID,GOOGLE_CLIENT_SECRET,GOOGLE_REDIRECT_URI,GITHUB_CLIENT_ID,GITHUB_CLIENT_SECRET,GITHUB_REDIRECT_URI&amp;envDescription=For%20more%20info%20on%20setting%20up%20your%20API%20keys%2C%20checkout%20the%20Readme%20below&amp;envLink=https%3A%2F%2Fgithub.com%2Fnizzyabi%2FMail0%2Fblob%2Fmain%2FREADME.md&amp;project-name=0&amp;repository-name=0&amp;redirect-url=0.email&amp;demo-title=0&amp;demo-description=An%20open%20source%20email%20app&amp;demo-url=0.email)

An Open-Source Gmail Alternative for the Future of Email

## What is Zero?

Zero is an open-source AI email solution that gives users the power to **self-host** their own email app while also integrating external services like Gmail and other email providers. Our goal is to modernize and improve emails through AI agents to truly modernize emails.

## Why Zero?

Most email services today are either **closed-source**, **data-hungry**, or **too complex to self-host**.
0.email is different:

- ‚úÖ **Open-Source** ‚Äì No hidden agendas, fully transparent.
- ü¶æ **AI Driven** - Enhance your emails with Agents &amp; LLMs.
- üîí **Data Privacy First** ‚Äì Your emails, your data. Zero does not track, collect, or sell your data in any way. Please note: while we integrate with external services, the data passed through them is not under our control and falls under their respective privacy policies and terms of service.
- ‚öôÔ∏è **Self-Hosting Freedom** ‚Äì Run your own email app with ease.
- üì¨ **Unified Inbox** ‚Äì Connect multiple email providers like Gmail, Outlook, and more.
- üé® **Customizable UI &amp; Features** ‚Äì Tailor your email experience the way you want it.
- üöÄ **Developer-Friendly** ‚Äì Built with extensibility and integrations in mind.

## Tech Stack

Zero is built with modern and reliable technologies:

- **Frontend**: Next.js, React, TypeScript, TailwindCSS, Shadcn UI
- **Backend**: Node.js, Drizzle ORM
- **Database**: PostgreSQL
- **Authentication**: Better Auth, Google OAuth
&lt;!-- - **Testing**: Jest, React Testing Library --&gt;

## Getting Started

### Prerequisites

**Required Versions:**

- [Node.js](https://nodejs.org/en/download) (v18 or higher)
- [Bun](https://bun.sh) (v1.2 or higher)
- [Docker](https://docs.docker.com/engine/install/) (v20 or higher)

Before running the application, you&#039;ll need to set up services and configure environment variables. For more details on environment variables, see the [Environment Variables](#environment-variables) section.

### Setup Options

You can set up Zero in two ways:

&lt;details open&gt;
&lt;summary&gt;&lt;b&gt;Option 1: Standard Setup (Recommended)&lt;/b&gt;&lt;/summary&gt;

#### Quick Start Guide

1. **Clone and Install**

   ```bash
   # Clone the repository
   git clone https://github.com/Mail-0/Zero.git
   cd Zero

   # Install dependencies
   bun install

   # Start database locally
   bun docker:up
   ```

2. **Set Up Environment**

   - Copy `.env.example` to `.env` in project root
     ```bash
     cp .env.example .env
     ```
   - Configure your environment variables (see below)
   - Start the database with the provided docker compose setup: `bun docker:up`
   - Initialize the database: `bun db:push`

3. **Start the App**

   ```bash
   bun dev
   ```

4. **Open in Browser**

   Visit [http://localhost:3000](http://localhost:3000)
   &lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Option 2: Dev Container Setup (For VS Code Users)&lt;/b&gt;&lt;/summary&gt;

This option uses VS Code&#039;s Dev Containers feature to provide a fully configured development environment with all dependencies pre-installed. It&#039;s great for ensuring everyone on the team has the same setup.

1. **Prerequisites**

   - [Docker](https://docs.docker.com/get-docker/)
   - [VS Code](https://code.visualstudio.com/) or compatible editor
   - [Dev Containers extension](https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-containers)

2. **Open in Dev Container**

   - Clone the repository: `git clone https://github.com/Mail-0/Zero.git`
   - Open the folder in VS Code
   - When prompted, click &quot;Reopen in Container&quot; or run the &quot;Dev Containers: Open Folder in Container&quot; command
   - VS Code will build and start the dev container (this may take a few minutes the first time)

3. **Access the App**

   - The app will be available at [http://localhost:3000](http://localhost:3000)

4. **Troubleshooting**
   - If you encounter issues with the container, try rebuilding it using the &quot;Dev Containers: Rebuild Container&quot; command
   - For dependency issues inside the container:
     `bash
rm -rf node_modules
rm bun.lockb
bun install
`
     &lt;/details&gt;

### Environment Setup

1. **Better Auth Setup**

   - Open the `.env` file and change the BETTER_AUTH_SECRET to a random string. (Use `openssl rand -hex 32` to generate a 32 character string)

     ```env
     BETTER_AUTH_SECRET=your_secret_key
     ```

2. **Google OAuth Setup** (Required for Gmail integration)

   - Go to [Google Cloud Console](https://console.cloud.google.com)
   - Create a new project
   - Add the following APIs in your Google Cloud Project: [People API](https://console.cloud.google.com/apis/library/people.googleapis.com), [Gmail API](https://console.cloud.google.com/apis/library/gmail.googleapis.com)
     - Use the links above and click &#039;Enable&#039; or
     - Go to &#039;APIs and Services&#039; &gt; &#039;Enable APIs and Services&#039; &gt; Search for &#039;Google People API&#039; and click &#039;Enable&#039;
     - Go to &#039;APIs and Services&#039; &gt; &#039;Enable APIs and Services&#039; &gt; Search for &#039;Gmail API&#039; and click &#039;Enable&#039;
   - Enable the Google OAuth2 API
   - Create OAuth 2.0 credentials (Web application type)
   - Add authorized redirect URIs:
     - Development:
       - `http://localhost:3000/api/auth/callback/google`
     - Production:
       - `https://your-production-url/api/auth/callback/google`
   - Add to `.env`:

     ```env
     GOOGLE_CLIENT_ID=your_client_id
     GOOGLE_CLIENT_SECRET=your_client_secret
     ```

   - Add yourself as a test user:

     - Go to [`Audience`](https://console.cloud.google.com/auth/audience)
     - Under &#039;Test users&#039; click &#039;Add Users&#039;
     - Add your email and click &#039;Save&#039;

&gt; [!WARNING]
&gt; The authorized redirect URIs in Google Cloud Console must match **exactly** what you configure in the `.env`, including the protocol (http/https), domain, and path - these are provided above.

### Environment Variables

Copy `.env.example` located in the project folder to `.env` in the same folder and configure the following variables:

```env
# Auth
BETTER_AUTH_SECRET=     # Required: Secret key for authentication

# Google OAuth (Required for Gmail integration)
GOOGLE_CLIENT_ID=       # Required for Gmail integration
GOOGLE_CLIENT_SECRET=   # Required for Gmail integration

# Database
DATABASE_URL=           # Required: PostgreSQL connection string for backend connection

# Redis
REDIS_URL=              # Redis URL for caching (http://localhost:8079 for local dev)
REDIS_TOKEN=            # Redis token (upstash-local-token for local dev)
```

For local development a connection string example is provided in the `.env.example` file located in the same folder as the database.

### Database Setup

Zero uses PostgreSQL for storing data. Here&#039;s how to set it up:

1. **Start the Database**

   Run this command to start a local PostgreSQL instance:

   ```bash
   bun docker:up
   ```

   This creates a database with:

   - Name: `zerodotemail`
   - Username: `postgres`
   - Password: `postgres`
   - Port: `5432`

2. **Set Up Database Connection**

   Make sure your database connection string is in `.env` file.

   For local development use:

   ```
   DATABASE_URL=&quot;postgresql://postgres:postgres@localhost:5432/zerodotemail&quot;
   ```

3. **Database Commands**

   - **Set up database tables**:

     ```bash
     bun db:push
     ```

   - **Create migration files** (after schema changes):

     ```bash
     bun db:generate
     ```

   - **Apply migrations**:

     ```bash
     bun db:migrate
     ```

   - **View database content**:
     ```bash
     bun db:studio
     ```
     &gt; If you run `bun dev` in your terminal, the studio command should be automatically running with the app.

## Contribute

Please refer to the [contributing guide](.github/CONTRIBUTING.md).

If you&#039;d like to help with translating Zero to other languages, check out our [translation guide](.github/TRANSLATION.md).

## Star History

[![Star History Chart](https://api.star-history.com/svg?repos=Mail-0/Zero&amp;type=Timeline)](https://www.star-history.com/#Mail-0/Zero&amp;Timeline)

## This project wouldn&#039;t be possible without these awesome companies

&lt;div style=&quot;display: flex; justify-content: center;&quot;&gt;
  &lt;a href=&quot;https://vercel.com&quot; style=&quot;text-decoration: none;&quot;&gt;
    &lt;img src=&quot;public/vercel.png&quot; alt=&quot;Vercel&quot; width=&quot;96&quot;/&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://better-auth.com&quot; style=&quot;text-decoration: none;&quot;&gt;
    &lt;img src=&quot;public/better-auth.png&quot; alt=&quot;Better Auth&quot; width=&quot;96&quot;/&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://orm.drizzle.team&quot; style=&quot;text-decoration: none;&quot;&gt;
    &lt;img src=&quot;public/drizzle-orm.png&quot; alt=&quot;Drizzle ORM&quot; width=&quot;96&quot;/&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://coderabbit.com&quot; style=&quot;text-decoration: none;&quot;&gt;
    &lt;img src=&quot;public/coderabbit.png&quot; alt=&quot;Coderabbit AI&quot; width=&quot;96&quot;/&gt;
  &lt;/a&gt;
&lt;/div&gt;

## ü§ç The team

Curious who makes Zero? Here are our [contributors and maintainers](https://0.email/contributors)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[lobehub/lobe-chat]]></title>
            <link>https://github.com/lobehub/lobe-chat</link>
            <guid>https://github.com/lobehub/lobe-chat</guid>
            <pubDate>Mon, 12 May 2025 00:05:25 GMT</pubDate>
            <description><![CDATA[ü§Ø Lobe Chat - an open-source, modern-design AI chat framework. Supports Multi AI Providers( OpenAI / Claude 3 / Gemini / Ollama / DeepSeek / Qwen), Knowledge Base (file upload / knowledge management / RAG ), Multi-Modals (Plugins/Artifacts) and Thinking. One-click FREE deployment of your private ChatGPT/ Claude / DeepSeek application.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/lobehub/lobe-chat">lobehub/lobe-chat</a></h1>
            <p>ü§Ø Lobe Chat - an open-source, modern-design AI chat framework. Supports Multi AI Providers( OpenAI / Claude 3 / Gemini / Ollama / DeepSeek / Qwen), Knowledge Base (file upload / knowledge management / RAG ), Multi-Modals (Plugins/Artifacts) and Thinking. One-click FREE deployment of your private ChatGPT/ Claude / DeepSeek application.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 60,344</p>
            <p>Forks: 12,709</p>
            <p>Stars today: 57 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;&lt;a name=&quot;readme-top&quot;&gt;&lt;/a&gt;

[![][image-banner]][vercel-link]

# Lobe Chat

An open-source, modern-design ChatGPT/LLMs UI/Framework.&lt;br/&gt;
Supports speech-synthesis, multi-modal, and extensible ([function call][docs-functionc-call]) plugin system.&lt;br/&gt;
One-click **FREE** deployment of your private OpenAI ChatGPT/Claude/Gemini/Groq/Ollama chat application.

**English** ¬∑ [ÁÆÄ‰Ωì‰∏≠Êñá](./README.zh-CN.md) ¬∑ [Official Site][official-site] ¬∑ [Changelog][changelog] ¬∑ [Documents][docs] ¬∑ [Blog][blog] ¬∑ [Feedback][github-issues-link]

&lt;!-- SHIELD GROUP --&gt;

[![][github-release-shield]][github-release-link]
[![][docker-release-shield]][docker-release-link]
[![][vercel-shield]][vercel-link]
[![][discord-shield]][discord-link]&lt;br/&gt;
[![][codecov-shield]][codecov-link]
[![][github-action-test-shield]][github-action-test-link]
[![][github-action-release-shield]][github-action-release-link]
[![][github-releasedate-shield]][github-releasedate-link]&lt;br/&gt;
[![][github-contributors-shield]][github-contributors-link]
[![][github-forks-shield]][github-forks-link]
[![][github-stars-shield]][github-stars-link]
[![][github-issues-shield]][github-issues-link]
[![][github-license-shield]][github-license-link]&lt;br&gt;
[![][sponsor-shield]][sponsor-link]

**Share LobeChat Repository**

[![][share-x-shield]][share-x-link]
[![][share-telegram-shield]][share-telegram-link]
[![][share-whatsapp-shield]][share-whatsapp-link]
[![][share-reddit-shield]][share-reddit-link]
[![][share-weibo-shield]][share-weibo-link]
[![][share-mastodon-shield]][share-mastodon-link]
[![][share-linkedin-shield]][share-linkedin-link]

&lt;sup&gt;Pioneering the new age of thinking and creating. Built for you, the Super Individual.&lt;/sup&gt;

[![][github-trending-shield]][github-trending-url]

![][image-overview]

&lt;/div&gt;

&lt;details&gt;
&lt;summary&gt;&lt;kbd&gt;Table of contents&lt;/kbd&gt;&lt;/summary&gt;

#### TOC

- [üëãüèª Getting Started &amp; Join Our Community](#-getting-started--join-our-community)
- [‚ú® Features](#-features)
  - [`1` Chain of Thought](#1-chain-of-thought)
  - [`2` Branching Conversations](#2-branching-conversations)
  - [`3` Artifacts Support](#3-artifacts-support)
  - [`4` File Upload /Knowledge Base](#4-file-upload-knowledge-base)
  - [`5` Multi-Model Service Provider Support](#5-multi-model-service-provider-support)
  - [`6` Local Large Language Model (LLM) Support](#6-local-large-language-model-llm-support)
  - [`7` Model Visual Recognition](#7-model-visual-recognition)
  - [`8` TTS &amp; STT Voice Conversation](#8-tts--stt-voice-conversation)
  - [`9` Text to Image Generation](#9-text-to-image-generation)
  - [`10` Plugin System (Function Calling)](#10-plugin-system-function-calling)
  - [`11` Agent Market (GPTs)](#11-agent-market-gpts)
  - [`12` Support Local / Remote Database](#12-support-local--remote-database)
  - [`13` Support Multi-User Management](#13-support-multi-user-management)
  - [`14` Progressive Web App (PWA)](#14-progressive-web-app-pwa)
  - [`15` Mobile Device Adaptation](#15-mobile-device-adaptation)
  - [`16` Custom Themes](#16-custom-themes)
  - [`*` What&#039;s more](#-whats-more)
- [‚ö°Ô∏è Performance](#Ô∏è-performance)
- [üõ≥ Self Hosting](#-self-hosting)
  - [`A` Deploying with Vercel, Zeabur , Sealos or Alibaba Cloud](#a-deploying-with-vercel-zeabur--sealos-or-alibaba-cloud)
  - [`B` Deploying with Docker](#b-deploying-with-docker)
  - [Environment Variable](#environment-variable)
- [üì¶ Ecosystem](#-ecosystem)
- [üß© Plugins](#-plugins)
- [‚å®Ô∏è Local Development](#Ô∏è-local-development)
- [ü§ù Contributing](#-contributing)
- [‚ù§Ô∏è Sponsor](#Ô∏è-sponsor)
- [üîó More Products](#-more-products)

####

&lt;br/&gt;

&lt;/details&gt;

## üëãüèª Getting Started &amp; Join Our Community

We are a group of e/acc design-engineers, hoping to provide modern design components and tools for AIGC.
By adopting the Bootstrapping approach, we aim to provide developers and users with a more open, transparent, and user-friendly product ecosystem.

Whether for users or professional developers, LobeHub will be your AI Agent playground. Please be aware that LobeChat is currently under active development, and feedback is welcome for any [issues][issues-link] encountered.

| [![][vercel-shield-badge]][vercel-link]   | No installation or registration necessary! Visit our website to experience it firsthand.                           |
| :---------------------------------------- | :----------------------------------------------------------------------------------------------------------------- |
| [![][discord-shield-badge]][discord-link] | Join our Discord community! This is where you can connect with developers and other enthusiastic users of LobeHub. |

&gt; \[!IMPORTANT]
&gt;
&gt; **Star Us**, You will receive all release notifications from GitHub without any delay \~ ‚≠êÔ∏è

[![][image-star]][github-stars-link]

&lt;details&gt;
  &lt;summary&gt;&lt;kbd&gt;Star History&lt;/kbd&gt;&lt;/summary&gt;
  &lt;picture&gt;
    &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://api.star-history.com/svg?repos=lobehub%2Flobe-chat&amp;theme=dark&amp;type=Date&quot;&gt;
    &lt;img width=&quot;100%&quot; src=&quot;https://api.star-history.com/svg?repos=lobehub%2Flobe-chat&amp;type=Date&quot;&gt;
  &lt;/picture&gt;
&lt;/details&gt;

## ‚ú® Features

[![][image-feat-cot]][docs-feat-cot]

### `1` [Chain of Thought][docs-feat-cot]

Experience AI reasoning like never before. Watch as complex problems unfold step by step through our innovative Chain of Thought (CoT) visualization. This breakthrough feature provides unprecedented transparency into AI&#039;s decision-making process, allowing you to observe how conclusions are reached in real-time.

By breaking down complex reasoning into clear, logical steps, you can better understand and validate the AI&#039;s problem-solving approach. Whether you&#039;re debugging, learning, or simply curious about AI reasoning, CoT visualization transforms abstract thinking into an engaging, interactive experience.

[![][back-to-top]](#readme-top)

[![][image-feat-branch]][docs-feat-branch]

### `2` [Branching Conversations][docs-feat-branch]

Introducing a more natural and flexible way to chat with AI. With Branch Conversations, your discussions can flow in multiple directions, just like human conversations do. Create new conversation branches from any message, giving you the freedom to explore different paths while preserving the original context.

Choose between two powerful modes:

- **Continuation Mode:** Seamlessly extend your current discussion while maintaining valuable context
- **Standalone Mode:** Start fresh with a new topic based on any previous message

This groundbreaking feature transforms linear conversations into dynamic, tree-like structures, enabling deeper exploration of ideas and more productive interactions.

[![][back-to-top]](#readme-top)

[![][image-feat-artifacts]][docs-feat-artifacts]

### `3` [Artifacts Support][docs-feat-artifacts]

Experience the power of Claude Artifacts, now integrated into LobeChat. This revolutionary feature expands the boundaries of AI-human interaction, enabling real-time creation and visualization of diverse content formats.

Create and visualize with unprecedented flexibility:

- Generate and display dynamic SVG graphics
- Build and render interactive HTML pages in real-time
- Produce professional documents in multiple formats

[![][back-to-top]](#readme-top)

[![][image-feat-knowledgebase]][docs-feat-knowledgebase]

### `4` [File Upload /Knowledge Base][docs-feat-knowledgebase]

LobeChat supports file upload and knowledge base functionality. You can upload various types of files including documents, images, audio, and video, as well as create knowledge bases, making it convenient for users to manage and search for files. Additionally, you can utilize files and knowledge base features during conversations, enabling a richer dialogue experience.

&lt;https://github.com/user-attachments/assets/faa8cf67-e743-4590-8bf6-ebf6ccc34175&gt;

&gt; \[!TIP]
&gt;
&gt; Learn more on [üìò LobeChat Knowledge Base Launch ‚Äî From Now On, Every Step Counts](https://lobehub.com/blog/knowledge-base)

&lt;div align=&quot;right&quot;&gt;

[![][back-to-top]](#readme-top)

&lt;/div&gt;

[![][image-feat-privoder]][docs-feat-provider]

### `5` [Multi-Model Service Provider Support][docs-feat-provider]

In the continuous development of LobeChat, we deeply understand the importance of diversity in model service providers for meeting the needs of the community when providing AI conversation services. Therefore, we have expanded our support to multiple model service providers, rather than being limited to a single one, in order to offer users a more diverse and rich selection of conversations.

In this way, LobeChat can more flexibly adapt to the needs of different users, while also providing developers with a wider range of choices.

#### Supported Model Service Providers

We have implemented support for the following model service providers:

&lt;!-- PROVIDER LIST --&gt;

- **[OpenAI](https://lobechat.com/discover/provider/openai)**: OpenAI is a global leader in artificial intelligence research, with models like the GPT series pushing the frontiers of natural language processing. OpenAI is committed to transforming multiple industries through innovative and efficient AI solutions. Their products demonstrate significant performance and cost-effectiveness, widely used in research, business, and innovative applications.
- **[Ollama](https://lobechat.com/discover/provider/ollama)**: Ollama provides models that cover a wide range of fields, including code generation, mathematical operations, multilingual processing, and conversational interaction, catering to diverse enterprise-level and localized deployment needs.
- **[Anthropic](https://lobechat.com/discover/provider/anthropic)**: Anthropic is a company focused on AI research and development, offering a range of advanced language models such as Claude 3.5 Sonnet, Claude 3 Sonnet, Claude 3 Opus, and Claude 3 Haiku. These models achieve an ideal balance between intelligence, speed, and cost, suitable for various applications from enterprise workloads to rapid-response scenarios. Claude 3.5 Sonnet, as their latest model, has excelled in multiple evaluations while maintaining a high cost-performance ratio.
- **[Bedrock](https://lobechat.com/discover/provider/bedrock)**: Bedrock is a service provided by Amazon AWS, focusing on delivering advanced AI language and visual models for enterprises. Its model family includes Anthropic&#039;s Claude series, Meta&#039;s Llama 3.1 series, and more, offering a range of options from lightweight to high-performance, supporting tasks such as text generation, conversation, and image processing for businesses of varying scales and needs.
- **[Google](https://lobechat.com/discover/provider/google)**: Google&#039;s Gemini series represents its most advanced, versatile AI models, developed by Google DeepMind, designed for multimodal capabilities, supporting seamless understanding and processing of text, code, images, audio, and video. Suitable for various environments from data centers to mobile devices, it significantly enhances the efficiency and applicability of AI models.
- **[DeepSeek](https://lobechat.com/discover/provider/deepseek)**: DeepSeek is a company focused on AI technology research and application, with its latest model DeepSeek-V2.5 integrating general dialogue and code processing capabilities, achieving significant improvements in human preference alignment, writing tasks, and instruction following.
- **[PPIO](https://lobechat.com/discover/provider/ppio)**: PPIO supports stable and cost-efficient open-source LLM APIs, such as DeepSeek, Llama, Qwen etc.
- **[HuggingFace](https://lobechat.com/discover/provider/huggingface)**: The HuggingFace Inference API provides a fast and free way for you to explore thousands of models for various tasks. Whether you are prototyping for a new application or experimenting with the capabilities of machine learning, this API gives you instant access to high-performance models across multiple domains.
- **[OpenRouter](https://lobechat.com/discover/provider/openrouter)**: OpenRouter is a service platform providing access to various cutting-edge large model interfaces, supporting OpenAI, Anthropic, LLaMA, and more, suitable for diverse development and application needs. Users can flexibly choose the optimal model and pricing based on their requirements, enhancing the AI experience.
- **[Cloudflare Workers AI](https://lobechat.com/discover/provider/cloudflare)**: Run serverless GPU-powered machine learning models on Cloudflare&#039;s global network.

&lt;details&gt;&lt;summary&gt;&lt;kbd&gt;See more providers (+30)&lt;/kbd&gt;&lt;/summary&gt;

- **[GitHub](https://lobechat.com/discover/provider/github)**: With GitHub Models, developers can become AI engineers and leverage the industry&#039;s leading AI models.
- **[Novita](https://lobechat.com/discover/provider/novita)**: Novita AI is a platform providing a variety of large language models and AI image generation API services, flexible, reliable, and cost-effective. It supports the latest open-source models like Llama3 and Mistral, offering a comprehensive, user-friendly, and auto-scaling API solution for generative AI application development, suitable for the rapid growth of AI startups.
- **[PPIO](https://lobechat.com/discover/provider/ppio)**: PPIO supports stable and cost-efficient open-source LLM APIs, such as DeepSeek, Llama, Qwen etc.
- **[Together AI](https://lobechat.com/discover/provider/togetherai)**: Together AI is dedicated to achieving leading performance through innovative AI models, offering extensive customization capabilities, including rapid scaling support and intuitive deployment processes to meet various enterprise needs.
- **[Fireworks AI](https://lobechat.com/discover/provider/fireworksai)**: Fireworks AI is a leading provider of advanced language model services, focusing on functional calling and multimodal processing. Its latest model, Firefunction V2, is based on Llama-3, optimized for function calling, conversation, and instruction following. The visual language model FireLLaVA-13B supports mixed input of images and text. Other notable models include the Llama series and Mixtral series, providing efficient multilingual instruction following and generation support.
- **[Groq](https://lobechat.com/discover/provider/groq)**: Groq&#039;s LPU inference engine has excelled in the latest independent large language model (LLM) benchmarks, redefining the standards for AI solutions with its remarkable speed and efficiency. Groq represents instant inference speed, demonstrating strong performance in cloud-based deployments.
- **[Perplexity](https://lobechat.com/discover/provider/perplexity)**: Perplexity is a leading provider of conversational generation models, offering various advanced Llama 3.1 models that support both online and offline applications, particularly suited for complex natural language processing tasks.
- **[Mistral](https://lobechat.com/discover/provider/mistral)**: Mistral provides advanced general, specialized, and research models widely used in complex reasoning, multilingual tasks, and code generation. Through functional calling interfaces, users can integrate custom functionalities for specific applications.
- **[Ai21Labs](https://lobechat.com/discover/provider/ai21)**: AI21 Labs builds foundational models and AI systems for enterprises, accelerating the application of generative AI in production.
- **[Upstage](https://lobechat.com/discover/provider/upstage)**: Upstage focuses on developing AI models for various business needs, including Solar LLM and document AI, aiming to achieve artificial general intelligence (AGI) for work. It allows for the creation of simple conversational agents through Chat API and supports functional calling, translation, embedding, and domain-specific applications.
- **[xAI](https://lobechat.com/discover/provider/xai)**: xAI is a company dedicated to building artificial intelligence to accelerate human scientific discovery. Our mission is to advance our collective understanding of the universe.
- **[Qwen](https://lobechat.com/discover/provider/qwen)**: Tongyi Qianwen is a large-scale language model independently developed by Alibaba Cloud, featuring strong natural language understanding and generation capabilities. It can answer various questions, create written content, express opinions, and write code, playing a role in multiple fields.
- **[Wenxin](https://lobechat.com/discover/provider/wenxin)**: An enterprise-level one-stop platform for large model and AI-native application development and services, providing the most comprehensive and user-friendly toolchain for the entire process of generative artificial intelligence model development and application development.
- **[Hunyuan](https://lobechat.com/discover/provider/hunyuan)**: A large language model developed by Tencent, equipped with powerful Chinese creative capabilities, logical reasoning abilities in complex contexts, and reliable task execution skills.
- **[ZhiPu](https://lobechat.com/discover/provider/zhipu)**: Zhipu AI offers an open platform for multimodal and language models, supporting a wide range of AI application scenarios, including text processing, image understanding, and programming assistance.
- **[SiliconCloud](https://lobechat.com/discover/provider/siliconcloud)**: SiliconFlow is dedicated to accelerating AGI for the benefit of humanity, enhancing large-scale AI efficiency through an easy-to-use and cost-effective GenAI stack.
- **[01.AI](https://lobechat.com/discover/provider/zeroone)**: 01.AI focuses on AI 2.0 era technologies, vigorously promoting the innovation and application of &#039;human + artificial intelligence&#039;, using powerful models and advanced AI technologies to enhance human productivity and achieve technological empowerment.
- **[Spark](https://lobechat.com/discover/provider/spark)**: iFlytek&#039;s Spark model provides powerful AI capabilities across multiple domains and languages, utilizing advanced natural language processing technology to build innovative applications suitable for smart hardware, smart healthcare, smart finance, and other vertical scenarios.
- **[SenseNova](https://lobechat.com/discover/provider/sensenova)**: SenseNova, backed by SenseTime&#039;s robust infrastructure, offers efficient and user-friendly full-stack large model services.
- **[Stepfun](https://lobechat.com/discover/provider/stepfun)**: StepFun&#039;s large model possesses industry-leading multimodal and complex reasoning capabilities, supporting ultra-long text understanding and powerful autonomous scheduling search engine functions.
- **[Moonshot](https://lobechat.com/discover/provider/moonshot)**: Moonshot is an open-source platform launched by Beijing Dark Side Technology Co., Ltd., providing various natural language processing models with a wide range of applications, including but not limited to content creation, academic research, intelligent recommendations, and medical diagnosis, supporting long text processing and complex generation tasks.
- **[Baichuan](https://lobechat.com/discover/provider/baichuan)**: Baichuan Intelligence is a company focused on the research and development of large AI models, with its models excelling in domestic knowledge encyclopedias, long text processing, and generative creation tasks in Chinese, surpassing mainstream foreign models. Baichuan Intelligence also possesses industry-leading multimodal capabilities, performing excellently in multiple authoritative evaluations. Its models include Baichuan 4, Baichuan 3 Turbo, and Baichuan 3 Turbo 128k, each optimized for different application scenarios, providing cost-effective solutions.
- **[Minimax](https://lobechat.com/discover/provider/minimax)**: MiniMax is a general artificial intelligence technology company established in 2021, dedicated to co-creating intelligence with users. MiniMax has independently developed general large models of different modalities, including trillion-parameter MoE text models, voice models, and image models, and has launched applications such as Conch AI.
- **[InternLM](https://lobechat.com/di

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[shadcn-ui/ui]]></title>
            <link>https://github.com/shadcn-ui/ui</link>
            <guid>https://github.com/shadcn-ui/ui</guid>
            <pubDate>Mon, 12 May 2025 00:05:24 GMT</pubDate>
            <description><![CDATA[A set of beautifully-designed, accessible components and a code distribution platform. Works with your favorite frameworks. Open Source. Open Code.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/shadcn-ui/ui">shadcn-ui/ui</a></h1>
            <p>A set of beautifully-designed, accessible components and a code distribution platform. Works with your favorite frameworks. Open Source. Open Code.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 86,781</p>
            <p>Forks: 5,893</p>
            <p>Stars today: 53 stars today</p>
            <h2>README</h2><pre># shadcn/ui

Accessible and customizable components that you can copy and paste into your apps. Free. Open Source. **Use this to build your own component library**.

![hero](apps/www/public/og.jpg)

## Documentation

Visit http://ui.shadcn.com/docs to view the documentation.

## Contributing

Please read the [contributing guide](/CONTRIBUTING.md).

## License

Licensed under the [MIT license](https://github.com/shadcn/ui/blob/main/LICENSE.md).
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[i-am-alice/3rd-devs]]></title>
            <link>https://github.com/i-am-alice/3rd-devs</link>
            <guid>https://github.com/i-am-alice/3rd-devs</guid>
            <pubDate>Mon, 12 May 2025 00:05:23 GMT</pubDate>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/i-am-alice/3rd-devs">i-am-alice/3rd-devs</a></h1>
            <p></p>
            <p>Language: TypeScript</p>
            <p>Stars: 253</p>
            <p>Forks: 232</p>
            <p>Stars today: 10 stars today</p>
            <h2>README</h2><pre># AI_devs 3

Repozytorium zawiera przyk≈Çady z lekcji kursu AI_devs 3.
Wiƒôcej informacji znajdziesz na [aidevs.pl](https://aidevs.pl).

## Wymagania

Wszystkie przyk≈Çady zosta≈Çy napisane w JavaScript / TypeScript i wiƒôkszo≈õƒá z nich zawiera kod backendowy do kt√≥rego uruchomienia potrzebny jest Node.js oraz Bun.

- [Node.js](https://nodejs.org)
- [Bun](https://bun.sh)

Upewnij siƒô, ≈ºe posiadasz najnowsze wersje Node.js oraz Bun zainstalowane na swoim komputerze.

## Instalacja

1. Pobierz repozytorium:

   ```bash
   git clone git@github.com:i-am-alice/3rd-devs.git
   cd 3rd-devs
   ```

2. Zainstaluj zale≈ºno≈õci:
   ```bash
   bun install
   ```
3. Skopiuj plik `.env.example` do `.env` i wype≈Çnij go kluczami API (na poczƒÖtek wystarczy klucz OpenAI).

4. Uruchom dostƒôpne przyk≈Çady z pliku `package.json`, wed≈Çug poni≈ºszej instrukcji.

## Instalacja ‚Äî DOCKER

Je≈õli posiadasz w swoim systemie mo≈ºliwo≈õƒá uruchamiania kontener√≥w Dockera (na Windows u≈ºyj np. WSL/WSL2), mo≈ºesz wykorzystaƒá¬†skrypt, kt√≥ry zbuduje i uruchomi dla Ciebie kontener ze ≈õrodowiskiem gotowym do pracy.

1. Wejd≈∫¬†do katalogu, w kt√≥rym chcesz przetrzymywaƒá pliki ≈õrodowiska i wydaj nastƒôpujƒÖce polecenia:

   ```bash
   curl -fsSL https://env.ag3nts.org -o setup.sh
   bash setup.sh
   ```
   
2. Powy≈ºszy skrypt NIE zmienia niczego w systemie. Wykonuje on nastƒôpujƒÖce czynno≈õci:
   - klonowanie repozytorium do katalogu &quot;3rd-devs&quot; (poza kontenerem, w aktualnym katalogu)
   - przygotowanie pliku Dockerfile
   - usuniƒôcie starego obrazu Dockera o nazwie &quot;aidevs&quot; (je≈õli istnieje)
   - uruchomienie procesu budowy obrazu Dockera
   - instalacja wymaganych paczek wewnƒÖtrz zdokeryzowanego ≈õrodowiska
  
3. Po pomy≈õlnym zbudowaniu obrazu mo≈ºesz uruchomiƒá¬†go poleceniem (je≈õli port 3000 masz zajƒôty, wybierz inny):
   ```bash
   docker run --rm -it -p 3000:3000 --name aidevs -v ${PWD}/3rd-devs:/app aidevs3
   ```

4. Pliki w katalogu &quot;3rd-devs&quot; mo≈ºesz modyfikowaƒá¬†w dowolnym IDE. BƒôdƒÖ one bezpo≈õrednio widoczne wewnƒÖtrz kontenera

5. BƒôdƒÖc ju≈º wewnƒÖtrz kontenera, skopiuj plik `.env.example` do `.env` i wype≈Çnij go wymaganymi kluczami API (na poczƒÖtek wystarczy klucz OpenAI).

6. Twoje ≈õrodowisko jest gotowe do pracy.


## S01E01

### Thread

Przyk≈Çad przedstawia konwersacjƒô miƒôdzy u≈ºytkownikiem i asystentem, w kt√≥rej dzia≈Ça mechanizm podsumowania konwersacji.

- Uruchomienie serwera: `bun run thread`
- Interakcja demo: `curl -X POST http://localhost:3000/api/demo`
- Interakcja chat: `curl -X POST http://localhost:3000/api/chat -H &quot;Content-Type: application/json&quot; -d &#039;{&quot;message&quot;: { &quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;Hi&quot;}}&#039;`

Wywo≈Çanie powy≈ºszego endpointu uruchomi trzy niezale≈ºne zapytania do OpenAI, jednak w wiadomo≈õci systemowej zostanie przekazane podsumowanie poprzedniej interakcji, dziƒôki czemu model bƒôdzie mia≈Ç mo≈ºliwo≈õƒá odwo≈Çaƒá siƒô¬†do ich tre≈õci.

W przyk≈Çadzie uwzglƒôdniony jest tak≈ºe endpoint `/api/chat` na kt√≥ry mo≈ºna przes≈Çaƒá obiekt { &quot;message&quot;: &quot;...&quot; } zawierajƒÖcy tre≈õƒá wiadomo≈õci do modelu. WƒÖtek zostanie zresetowany **dopiero po ponownym uruchomieniu serwera** (wci≈õnij CMD + C / Control + C i ponownie `bun run thread`).

### Use Search

UWAGA: przyk≈Çad wymaga zainstalowania `promptfoo` w przypadku kt√≥rego prawdopodobnie musisz to zrobiƒá poleceniem `npm install promptfoo` poniewa≈º `bun install promptfoo` nie dzia≈Ça poprawnie w ka≈ºdej sytuacji.

- Uruchomienie skryptu: `bun use_search`

Rezultatem dzia≈Çania skryptu jest tablica zawierajƒÖca kilkana≈õcie przyk≈Çadowych test√≥w dla promptu decydujƒÖcego o tym, czy skorzystanie z wyszukiwarki jest potrzebne.

### Pick domains

- Uruchomienie skryptu: `bun pick_domains`

Rezultatem dzia≈Çania skryptu jest tablica zawierajƒÖca kilkana≈õcie przyk≈Çadowych test√≥w dla promptu generujƒÖcego zapytania do wyszukiwarki Internetowej, wskazujƒÖc tak≈ºe odpowiednie domeny.

### Rate

- Uruchomienie skryptu: `bun rate`

Rezultatem dzia≈Çania skryptu jest tablica zawierajƒÖca kilkana≈õcie przyk≈Çadowych test√≥w dla promptu oceniajƒÖcego, czy odpowied≈∫ modelu zawiera odpowiednie informacje.

### Websearch

Przyk≈Çad ten korzysta z [Firecrawl](https://www.firecrawl.dev) do przeszukiwania Internetu oraz pobierania tre≈õci stron www. Konieczne jest wiƒôc uzupe≈Çnienie pliku `.env` warto≈õci FIRECRAWL_API_KEY ustawionej na klucz API.
(Firecrawl oferuje bezp≈Çatny plan).

- Uruchomienie serwera: `bun websearch`
- Interakcja:
  ```bash
  curl -X POST http://localhost:3000/api/chat \
    -H &quot;Content-Type: application/json&quot; \
    -d &#039;{&quot;messages&quot;: [{&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;Search wiki for &#039;John Wick&#039;&quot;}]}&#039;
  ```

Wa≈ºne: w pliku `websearch/app.ts` mo≈ºna zmieniƒá listƒô domen, kt√≥re sƒÖ¬†dopuszczalne do przeszukiwania i pobierania tre≈õci.

## S01E02

### Linear

Uruchomienie tego przyk≈Çadu wymaga uzupe≈Çnienia pliku `.env` i warto≈õci `LINEAR_API_KEY` oraz `LINEAR_WEBHOOK_SECRET`.
Obie warto≈õci mo≈ºna znale≈∫ƒá w [ustawieniach API](https://linear.app/overment/settings/api). Dodatkowo Tw√≥j localhost musi byƒá¬†dostƒôpny z poza Twojej sieci lokalnej, np. za pomocƒÖ [ngrok](https://ngrok.com/). Publiczny adres URL nale≈ºy tak≈ºe wskazaƒá w panelu Linear w sekcji Webhooks, np.: `https://&lt;ngrok-url&gt;/api/linear/watch-issue` (pamiƒôtaj o dodaniu w≈Ça≈õciwego endpointu do adresu).

WA≈ªNE: w pliku `linear/prompts.ts` znajduje siƒô prompt w kt√≥rym zosta≈Çy opisane **moje projekty** w Linear.
Aby skrypt dzia≈Ça≈Ç poprawnie, musisz zmodyfikowaƒá ten prompt, tak aby zawiera≈Ç identyfikatory oraz opisy Twoich projekt√≥w.

Listƒô projekt√≥w i ich identyfikatory mo≈ºesz pobraƒá korzystajƒÖc z endpointu `/api/linear/projects`.

- Uruchomienie serwera: `bun linear`
- Pobranie listy projekt√≥w: `curl http://localhost:3000/api/linear/projects`
- Po dodaniu nowego wpisu w Twoim linearze, zostanie on automatycznie przypisany do projektu zgodnie z zasadami w promptach, o ile nie zosta≈Ç¬†przypisany przez Ciebie rƒôcznie.

### Files

- Uruchomienie serwera: `bun files`
- Interakcja:
  ```bash
  curl -X POST http://localhost:3000/api/chat \
    -H &quot;Content-Type: application/json&quot; \
    -d &#039;{&quot;messages&quot;: [{&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;Hey there, what\&#039;s up?&quot;}], &quot;conversation_id&quot;: &quot;d7582176-bc52-4ef3-980a-047b868f9f49&quot;}&#039;
  ```

Przyk≈Çad ten pokazuje mechanizm podejmowania decyzji o zapamiƒôtywaniu informacji na podstawie kontekstu rozmowy.
Dodatkowo w przypadku podania `conversation_id` w obiekcie ≈ºƒÖdania, do rozmowy zostanƒÖ¬†wczytane wszystkie wiadomo≈õci dotyczƒÖce konkretnej rozmowy.

Wszystkie pliki zapisywane sƒÖ w folderze `files/context`, a sam katalog mo≈ºna otworzyƒá¬†w aplikacji [Obsidian](https://obsidian.md/) aby zobaczyƒá powiƒÖzania pomiƒôdzy wspomnieniami.

## S01E03

### Langfuse

Ten przyk≈Çad wymaga uzupe≈Çnienia pliku `.env` o warto≈õci `LANGFUSE_PUBLIC_KEY`, `LANGFUSE_SECRET_KEY` oraz `LANGFUSE_HOST`. Mo≈ºna je uzyskaƒá zak≈ÇadajƒÖc bezp≈Çatne konto na [Langfuse](https://langfuse.com/).

UWAGA: Aby uruchomiƒá ten przyk≈Çad, musisz w panelu Langfuse utworzyƒá¬†nowy prompt o nazwie `Answer`, kt√≥rego warto≈õƒá mo≈ºesz ustawiƒá¬†na np. &#039;Odpowiadaj piszƒÖc wy≈ÇƒÖcznie wielkimi literami&#039;.

- Uruchomienie serwera: `bun langfuse`
- Interakcja:
  ```bash
  curl -X POST http://localhost:3000/api/chat \
    -H &quot;Content-Type: application/json&quot; \
    -d &#039;{&quot;messages&quot;: [{&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;Hey there, what\&#039;s up?&quot;}]}&#039;
  ```

Po wykonaniu zapytania, zostanie ono automatycznie zalogowane do Langfuse, a wynik wy≈õwietlony w panelu.

### Tiktokenizer

- Uruchomienie serwera: `bun tiktokenizer`
- Interakcja:
  ```bash
  curl -X POST http://localhost:3000/api/chat \
    -H &quot;Content-Type: application/json&quot; \
    -d &#039;{&quot;messages&quot;: [{&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;Hey there, what\&#039;s up?&quot;}], &quot;model&quot;: &quot;gpt-4o&quot;}&#039;
  ```

Przyk≈Çad ten pokazuje mechanizm liczenia token√≥w w zapytaniach do modeli OpenAI (np. gpt-4o).

### Max tokens

Przyk≈Çad ten pokazuje jeden mechanizm pozwalajƒÖcy na kontynuowanie wypowiedzi modelu, pomimo osiƒÖgniƒôcia maksymalnej liczby token√≥w wyj≈õciowych (output tokens).

- Uruchomienie serwera: `bun max_tokens`
- Interakcja:
  ```bash
  curl -X POST http://localhost:3000/api/chat \
    -H &quot;Content-Type: application/json&quot; \
    -d &#039;{&quot;messages&quot;: [{&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;Write ten sentences about apples and put them in order.&quot;}]}&#039;
  ```

### Constitution

Przyk≈Çad ten przedstawia mechanizm blokowania zapyta≈Ñ, kt√≥re nie spe≈ÇniajƒÖ warunk√≥w okre≈õlonych w prompcie `/constitution/prompts.ts`.

- Uruchomienie serwera: `bun constitution`
- Interakcja:
  ```bash
  curl -X POST http://localhost:3000/api/chat \
    -H &quot;Content-Type: application/json&quot; \
    -d &#039;{&quot;messages&quot;: [{&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;Hello!&quot;}]}&#039;
  ```

## S01E04

### Memory

Ten przyk≈Çad po uruchomieniu tworzy katalog memories w kt√≥rym zapisywane sƒÖ pliki markdown, pe≈ÇniƒÖce rolƒô¬†pamiƒôci modelu.
Nie jest to przyk≈Çad nadajƒÖcy siƒô na produkcjƒô, lecz przedstawia og√≥lne mechaniki pamiƒôci d≈Çugoterminowej, kt√≥re bƒôdziemy rozwijaƒá w dalszych lekcjach.

- Uruchomienie serwera: `bun memory`
- Interakcja:

```bash
 curl -X POST http://localhost:3000/api/chat \
   -H &quot;Content-Type: application/json&quot; \
   -d &#039;{&quot;messages&quot;: [{&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;Hello!&quot;}]}&#039;
```

## S01E05

### External

Ten przyk≈Çad zawiera standardowƒÖ¬†logikƒô¬†interakcji z modelem, ale wymaga podania klucza API w nag≈Ç√≥wku `Authorization` w formacie `Bearer &lt;klucz&gt;`. Warto≈õƒá¬†klucza zostaje wczytana z pliku `.env` jako `PERSONAL_API_KEY`. Dodatkowo zosta≈Çy dodane mechanizmy ograniczania liczby zapyta≈Ñ, wiƒôc po kilku pr√≥bach ponowne wywo≈Çanie zapytania zwr√≥ci b≈ÇƒÖd 429.

- Uruchomienie serwera: `bun external`
- Interakcja:
  ```bash
  curl -X POST http://localhost:3000/api/chat \
    -H &quot;Content-Type: application/json&quot; \
    -d &#039;{&quot;messages&quot;: [{&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;Hello!&quot;}]}&#039;
  ```

### Prompts

**UWAGA**: Aby uruchomiƒá ten przyk≈Çad konieczne jest nawiƒÖzanie po≈ÇƒÖczenie z Langfuse poprzez uzupe≈Çnienie pliku `.env` o warto≈õci `LANGFUSE_PUBLIC_KEY`, `LANGFUSE_SECRET_KEY` oraz `LANGFUSE_HOST`. Dodatkowo na Twoim koncie musisz utworzyƒá nowy prompt o nazwie `Answer`, kt√≥rego warto≈õƒá mo≈ºesz ustawiƒá¬†na np. &#039;Odpowiadaj piszƒÖc wy≈ÇƒÖcznie wielkimi literami&#039;, aby tylko sprawdziƒá¬†dzia≈Çanie mechanizmu. Dodatkowo prompt &quot;Answer&quot; nale≈ºy dodaƒá w ustawieniu &quot;Chat&quot;, a nie &quot;Text&quot; (tryb mo≈ºna zmieniƒá¬†z pomocƒÖ zak≈Çadek w Langfuse)

- Uruchomienie serwera: `bun prompts`
- Interakcja:
  ```bash
  curl -X POST http://localhost:3000/api/chat \
    -H &quot;Content-Type: application/json&quot; \
    -d &#039;{&quot;messages&quot;: [{&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;Hello!&quot;}]}&#039;
  ```

### Database

Ten przyk≈Çad nie dotyczy bezpo≈õrednio dzia≈Çania LLM, lecz przedstawia spos√≥b organizacji informacji w bazie danych, takich jak konwersacje czy historia wiadomo≈õci.

- Uruchomienie serwera: `bun database`
- Interakcja:
  ```bash
  curl -X POST http://localhost:3000/api/chat \
    -H &quot;Content-Type: application/json&quot; \
    -d &#039;{&quot;messages&quot;: [{&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;Hello!&quot;}]}&#039;
  ```

### Qdrant

Przyk≈Çad ten przedstawia **absolutnie podstawowe** po≈ÇƒÖczenie z bazƒÖ¬†wektorowƒÖ Qdrant. Jego zadaniem jest zapisywanie historii wiadomo≈õci, a nastƒôpnie wyszukiwanie i wczytywanie do kontekstu rozmowy najbardziej podobnych wiadomo≈õci. Przyk≈Çad ten bƒôdziemy rozbudowywaƒá w dalszych lekcjach, ≈ÇƒÖczƒÖc siƒô z Qdrant w bardziej z≈Ço≈ºonych konfiguracjach.

UWAGA: Aby uruchomiƒá ten przyk≈Çad, musisz w panelu Langfuse utworzyƒá¬†nowy prompt o nazwie `Answer`, kt√≥rego warto≈õƒá mo≈ºesz ustawiƒá¬†na np. &#039;Odpowiadaj piszƒÖc wy≈ÇƒÖcznie wielkimi literami&#039;. Powodem jest fakt, ≈ºe w ten przyk≈Çad zosta≈Ç powiƒÖzany z przyk≈Çadem `langfuse`.

- Uruchomienie serwera: `bun qdrant`
- Interakcja:
  ```bash
  curl -X POST http://localhost:3000/api/chat \
    -H &quot;Content-Type: application/json&quot; \
    -d &#039;{&quot;messages&quot;: [{&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;Hello!&quot;}]}&#039;
  ```

## S02E01

### Audio

UWAGA: Ten przyk≈Çad wymaga uruchomienia frontendu w folderze `audio-frontend` oraz backendu w folderze `audio-backend`. W zwiƒÖzku z tym przyk≈Çad **trzeba** uruchomiƒá na w≈Çasnym komputerze.

- Uruchomienie frontendu: `bun audio:dev`
- Uruchomienie backendu: `bun audio`
- Interakcja: Otw√≥rz w przeglƒÖdarce stronƒô http://localhost:5173

WA≈ªNE: Jako≈õƒá dzia≈Çania tego przyk≈Çadu zale≈ºy g≈Ç√≥wnie od jako≈õci mikrofonu oraz d≈∫wiƒôk√≥w otoczenia. Upewnij siƒô¬†wiƒôc, ≈ºe jako≈õƒá nagrania jest dobra i ≈ºe nie ma zak≈Ç√≥ce≈Ñ uniemo≈ºliwiajƒÖcych wykrywanie ko≈Ñca wypowiedzi.

## S02E02

### Vision

- Uruchomienie kodu: `bun vision`

### Recognize

- Uruchomienie kodu: `bun recognize`

### Recognize-Pixtral

Do uruchomienia tego przyk≈Çadu nale≈ºy uzupe≈Çniƒá plik `.env` o warto≈õƒá `MISTRAL_API_KEY`. Mo≈ºna go pobraƒá tutaj na [Mistral.ai](https://auth.mistral.ai/ui/login?flow=d2707d87-5325-4ff5-a7cd-25a2e21323d5)

- Uruchomienie kodu: `bun recognize_pixtral`

## S02E02

### Vision

- Uruchomienie kodu: `bun vision`
- Interakcja: przyk≈Çad wykonuje siƒô¬†automatycznie na pliku `vision/lessons.png`

### Recognize

- Uruchomienie kodu: `bun recognize`
- Interakcja: przyk≈Çad wykonuje siƒô¬†automatycznie na plikach z katalogu `recognize/avatars`

### Recognize-Pixtral

- Uruchomienie kodu: `bun recognize_pixtral`
- Interakcja: przyk≈Çad wykonuje siƒô¬†automatycznie na plikach z katalogu `recognize_pixtral/avatars`

## S02E03

--- brak przyk≈Çad√≥w ---

## S02E04

### Captions

- Uruchomienie kodu: `bun captions`
- Interakcja: przyk≈Çad wykonuje siƒô¬†automatycznie na pliku `captions/article.md`

### Summary

- Uruchomienie kodu: `bun summary`
- Interakcja: skrypt wykonuje siƒô¬†automatycznie na pliku `summary/article.md`

### Video

Do uruchomienia tego przyk≈Çadu nale≈ºy uzupe≈Çniƒá plik `.env` o warto≈õƒá `GOOGLE_AI_STUDIO_API_KEY`, kt√≥ry mo≈ºna pobraƒá¬†z [Google AI Studio](https://aistudio.google.com/).

- Uruchomienie kodu: `bun video`
- Interakcja: przyk≈Çad wykonuje siƒô¬†automatycznie na pliku `video/test.mp3`

### Narration

UWAGA: Ten przyk≈Çad mo≈ºe zu≈ºywaƒá¬†du≈ºe ilo≈õci kredyt√≥w na ElevenLabs, wiƒôc je≈õli chcesz zobaczyƒá¬†rezultat jego dzia≈Çania, to w katalogu `narration` znajdujƒÖ¬†siƒô dwa przyk≈Çadowe pliki audio, kt√≥re mo≈ºesz odtworzyƒá bez uruchamiania kodu.

Do uruchomienia tego przyk≈Çadu nale≈ºy uzupe≈Çniƒá plik `.env` o warto≈õƒá `GOOGLE_AI_STUDIO_API_KEY`, kt√≥ry mo≈ºna pobraƒá¬†z [Google AI Studio](https://aistudio.google.com/) oraz `ELEVEN_LABS_API_KEY`, kt√≥ry mo≈ºna pobraƒá¬†z [ElevenLabs](https://elevenlabs.io/).

- Uruchomienie kodu: `bun narration`
- Interakcja: przyk≈Çad wykonuje siƒô¬†automatycznie na tre≈õci wiadomo≈õci u≈ºytkownika przekazanej w funkcji `generateNarration` w pliku `narration/app.ts`

## S02E05

### Read

- Uruchomienie kodu: `bun read`
- Interakcja: przyk≈Çad wykonuje siƒô¬†automatycznie na pliku `read/article.md` i generuje plik audio w folderze read/summary.wav

### Mindmap

Ten przyk≈Çad wymaga uruchomienia frontendu w folderze `audio-map-frontend` oraz backendu w folderze `audio-map`. W zwiƒÖzku z tym przyk≈Çad **trzeba** uruchomiƒá na w≈Çasnym komputerze.

- Uruchomienie frontendu: `bun map:dev`
- Uruchomienie backendu: `bun audio-map`
- Interakcja: Otw√≥rz w przeglƒÖdarce stronƒô http://localhost:5173

### Notes

- Uruchomienie kodu: `bun notes`
- Interakcja: przyk≈Çad wykonuje siƒô¬†automatycznie na wiadomo≈õci wpisanej w tre≈õƒá pliku `notes/app.ts` (jest tam kilka przyk≈Çad√≥w innych wiadomo≈õci, kt√≥re mo≈ºna podmieniƒá).

## S03E01

### Text Splitter

- Uruchomienie kodu: `bun text-splitter`
- Interakcja: przyk≈Çad wykonuje siƒô¬†automatycznie na plikach markdown z katalogu &quot;text-splitter&quot;

### Unstructured

- Uruchomienie kodu: `bun unstructured`
- Interakcja: przyk≈Çad wykonuje siƒô¬†automatycznie na pliku source.md z katalogu &quot;unstructured&quot;

## S03E02

### Embedding

Uruchomienie tego przyk≈Çadu wymaga uzupe≈Çnienia pliku `.env` o warto≈õci &quot;QDRANT_URL&quot; oraz &quot;QDRANT_API_KEY&quot;.
Warto≈õci te mo≈ºna znale≈∫ƒá w panelu Qdrant po zalogowaniu na bezp≈Çatne konto na stronie [Qdrant Cloud](https://cloud.qdrant.io/).

![Qdrant Cloud](https://cloud.overment.com/aidevs3_cluster-1732010353.png)

Natomiast klucz API mo≈ºna pobraƒá w zak≈Çadce &quot;Data Access Control&quot;.

- Uruchomienie kodu: `bun embedding`
- Interakcja: przyk≈Çad wykonuje siƒô¬†automatycznie na danych osadzonych w pliku embedding/app.ts

### Rerank

- Uruchomienie kodu: `bun rerank`
- Interakcja: przyk≈Çad wykonuje siƒô¬†automatycznie na danych osadzonych w pliku rerank/app.ts

### Naive RAG

- Uruchomienie kodu: `bun naive-rag`
- Interakcja: przyk≈Çad wykonuje siƒô¬†automatycznie na danych osadzonych w pliku naive-rag/app.ts

### Better RAG

- Uruchomienie kodu: `bun better-rag`
- Interakcja: przyk≈Çad wykonuje siƒô¬†automatycznie na danych osadzonych w pliku better-rag/app.ts

### Semantic

- Uruchomienie kodu: `bun semantic`
- Interakcja: przyk≈Çad wykonuje siƒô¬†automatycznie na danych osadzonych w pliku semantic/app.ts

## S03E03

### Algolia

Do uruchomienia tego przyk≈Çadu konieczne jest uzupe≈Çnienie `ALGOLIA_APP_ID` oraz `ALGOLIA_API_KEY` w pliku `.env`.
**UWAGA**: przy pierwszym uruchomieniu przyk≈Çadu pojawi siƒô b≈ÇƒÖd ale spowoduje to utworzenie indeksu w Algolia. W√≥wczas nale≈ºy przej≈õƒá do panelu Algolia i w zak≈Çadce &quot;Facets&quot; dodaƒá nowy facet o nazwie `author`.

![](https://cloud.overment.com/2024-11-20/aidevs3_algolia-09eeb970-2.png)

- Uruchomienie kodu: `bun algolia`
- Interakcja: przyk≈Çad wykonuje siƒô¬†automatycznie na danych osadzonych w pliku algolia/app.ts

### Sync

**UWAGA**: Do uruchomienia tego przyk≈Çadu konieczne jest uzupe≈Çnienie `ALGOLIA_APP_ID` oraz `ALGOLIA_API_KEY` w pliku `.env`.
Wymagane jest bezp≈Çatne konto na [Algolia](https://www.algolia.com/).

Dodatkowo je≈õli wyniki wyszukiwania nie sƒÖ poprawnie zwracane, nale≈ºy sprawdziƒá¬†czy pole `text` zosta≈Ço poprawnie ustawione w panelu Algolia jako `searchableAttributes`.

![Algolia](https://cloud.overment.com/2024-11-19/aidevs3_cleanshot-3e7fd444-c.png)

- Uruchomienie kodu: `bun sync`
- Interakcja: przyk≈Çad wykonuje siƒô¬†automatycznie na danych osadzonych w pliku sync/app.ts

### Hybrid

**UWAGA**: Do uruchomienia tego przyk≈Çadu konieczne jest uzupe≈Çnienie `QDRANT_URL` oraz `QDRANT_API_KEY` w pliku `.env`.
Konieczne jest tak≈ºe po≈ÇƒÖczenie z Algolia podobnie jak w przypadku przyk≈Çadu `sync`.

- Uruchomienie kodu: `bun hybrid`
- Interakcja: przyk≈Çad wykonuje siƒô¬†automatycznie na danych osadzonych w pliku hybrid/app.ts

## S03E05

Do uruchomienia tego przyk≈Çadu konieczne jest po≈ÇƒÖczenie z bazƒÖ Neo4j. Mo≈ºna jƒÖ¬†zainstalowaƒá lokalnie, a nastƒôpnie uzupe≈Çniƒá plik `.env` o warto≈õci `NEO4J_URI`, `NEO4J_USER` oraz `NEO4J_PASSWORD`.

### Neo4j-101

- Uruchomienie kodu: `bun neo4j-101`
- Interakcja: przyk≈Çad wykonuje siƒô¬†automatycznie na danych osadzonych w pliku neo4j-101/app.ts

### Neo4j

- Uruchomienie kodu: `bun neo4j`
- Interakcja: przyk≈Çad wykonuje siƒô¬†automatycznie na danych osadzonych w pliku neo4j/app.ts
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[transformerlab/transformerlab-app]]></title>
            <link>https://github.com/transformerlab/transformerlab-app</link>
            <guid>https://github.com/transformerlab/transformerlab-app</guid>
            <pubDate>Mon, 12 May 2025 00:05:22 GMT</pubDate>
            <description><![CDATA[Open Source Application for Advanced LLM Engineering: interact, train, fine-tune, and evaluate large language models on your own computer.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/transformerlab/transformerlab-app">transformerlab/transformerlab-app</a></h1>
            <p>Open Source Application for Advanced LLM Engineering: interact, train, fine-tune, and evaluate large language models on your own computer.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 3,212</p>
            <p>Forks: 261</p>
            <p>Stars today: 85 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://transformerlab.ai&quot;&gt;&lt;picture&gt;
    &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://raw.githubusercontent.com/transformerlab/transformerlab-app/refs/heads/main/assets/Transformer-Lab_Logo_Reverse.svg&quot;&gt;
    &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://raw.githubusercontent.com/transformerlab/transformerlab-app/refs/heads/main/assets/Transformer-Lab_Logo.svg&quot;&gt;
    &lt;img alt=&quot;transformer lab logo&quot; src=&quot;https://raw.githubusercontent.com/transformerlab/transformerlab-app/refs/heads/main/assets/Transformer-Lab_Logo.svg&quot; style=&quot;max-width: 650px&quot;&gt;
  &lt;/picture&gt;&lt;/a&gt;

  &lt;p align=&quot;center&quot;&gt;
    100% Open Source Toolkit for Large Language Models: Train, Tune, Chat on your own Machine
    &lt;br /&gt;
    &lt;a href=&quot;https://transformerlab.ai/docs/download/&quot;&gt;&lt;strong&gt;Download&lt;/strong&gt;&lt;/a&gt;
    ¬∑
    &lt;a href=&quot;https://transformerlab.ai/docs/intro&quot;&gt;&lt;strong&gt;Explore the docs ¬ª&lt;/strong&gt;&lt;/a&gt;
    &lt;br /&gt;
    &lt;br /&gt;
    &lt;a href=&quot;https://youtu.be/tY5TAvKviLo&quot;&gt;View Demo&lt;/a&gt;
    ¬∑
    &lt;a href=&quot;https://github.com/transformerlab/transformerlab-app/issues&quot;&gt;Report Bugs&lt;/a&gt;
    ¬∑
    &lt;a href=&quot;https://github.com/transformerlab/transformerlab-app/issues/new&quot;&gt;Suggest Features&lt;/a&gt;
    ¬∑
    &lt;a href=&quot;https://discord.gg/transformerlab&quot;&gt;Join Discord&lt;/a&gt;
    ¬∑
    &lt;a href=&quot;https://twitter.com/transformerlab&quot;&gt;Follow on Twitter&lt;/a&gt;
  &lt;/p&gt;
  &lt;p align=&quot;center&quot;&gt;
   Note: Transformer Lab is actively being developed. Please join our Discord or follow us on Twitter for updates. Questions, feedback and contributions are highly valued!&lt;/p&gt;
&lt;/div&gt;

&lt;!-- ABOUT THE PROJECT --&gt;

## Download Now

[![Download Icon]][Download URL]

## About The Project

![Product Screen Shot](assets/transformerlab-demo-jan2025.gif)

Transformer Lab is an app that allows anyone to experiment with Large Language Models.

## Backed by Mozilla

Transformer Lab is proud to be supported by Mozilla through the &lt;a href=&quot;https://future.mozilla.org/builders/&quot;&gt;Mozilla Builders Program&lt;/a&gt;

&lt;a href=&quot;https://future.mozilla.org/builders/&quot;&gt;
    &lt;img src=&quot;https://transformerlab.ai/img/mozilla-builders-2024.png&quot; alt=&quot;Mozilla Builders Logo&quot; width=300&gt;
&lt;/a&gt;

## Features

Transformer Lab allows you to:

- üíï **One-click Download Hundreds of Popular Models**:
  - DeepSeek, Llama3, Qwen, Phi4, Gemma, Mistral, Mixtral, Command-R, and dozens more
- ‚¨á **Download any LLM from Huggingface**
- üé∂ **Finetune / Train Across Different Hardware**
  - Finetune using MLX on Apple Silicon
  - Finetune using Huggingface on GPU
- ‚öñÔ∏è **RLHF and Preference Optimization**
  - DPO
  - ORPO
  - SIMPO
  - Reward Modeling
- üíª **Work with LLMs Across Operating Systems**:
  - Windows App
  - MacOS App
  - Linux
- üí¨ **Chat with Models**
  - Chat
  - Completions
  - Preset (Templated) Prompts
  - Chat History
  - Tweak generation parameters
  - Batched Inference
  - Tool Use / Function Calling (in alpha)
- üöÇ **Use Different Inference Engines**
  - MLX on Apple Silicon
  - Huggingface Transformers
  - vLLM
  - Llama CPP
- üßë‚Äçüéì **Evaluate models**
- üìñ **RAG (Retreival Augmented Generation)**
  - Drag and Drop File UI
  - Works on Apple MLX, Transformers, and other engines
- üìì **Build Datasets for Training**
  - Pull from hundreds of common datasets available on HuggingFace
  - Provide your own dataset using drag and drop
- üî¢ **Calculate Embeddings**
- üíÅ **Full REST API**
- üå© **Run in the Cloud**
  - You can run the user interface on your desktop/laptop while the engine runs on a remote or cloud machine
  - Or you can run everything locally on a single machine
- üîÄ **Convert Models Across Platforms**
  - Convert from/to Huggingface, MLX, GGUF
- üîå **Plugin Support**
  - Easily pull from a library of existing plugins
  - Write your own plugins to extend functionality
- üßë‚Äçüíª **Embedded Monaco Code Editor**
  - Edit plugins and view what&#039;s happening behind the scenes
- üìù **Prompt Editing**
  - Easily edit System Messages or Prompt Templates
- üìú **Inference Logs**
  - While doing inference or RAG, view a log of the raw queries sent to the LLM

And you can do the above, all through a simple cross-platform GUI.

&lt;!-- GETTING STARTED --&gt;

## Getting Started

&lt;a href=&quot;https://transformerlab.ai/docs/download&quot;&gt;Click here&lt;/a&gt; to download Transformer Lab.

&lt;a href=&quot;https://transformerlab.ai/docs/intro&quot;&gt;Read this page&lt;/a&gt; to learn how to install and use.

### Built With

- [![Electron][Electron]][Electron-url]
- [![React][React.js]][React-url]
- [![HuggingFace][HuggingFace]][HuggingFace-url]

## Developers

### Building from Scratch

To build the app yourself, pull this repo, and follow the steps below:

(Please note that the current build doesn&#039;t work on Node v23 but it works on v22)

```bash
npm install
```

```bash
npm start
```

## Packaging for Production

To package apps for the local platform:

```bash
npm run package
```

&lt;!-- LICENSE --&gt;

## License

Distributed under the AGPL V3 License. See `LICENSE.txt` for more information.

## Reference

If you found Transformer Lab useful in your research or applications, please cite using the following BibTeX:

```
@software{transformerlab,
  author = {Asaria, Ali},
  title = {Transformer Lab: Experiment with Large Language Models},
  month = December,
  year = 2023,
  url = {https://github.com/transformerlab/transformerlab-app}
}
```

&lt;!-- CONTACT --&gt;

## Contact

- [@aliasaria](https://twitter.com/aliasaria) - Ali Asasria
- [@dadmobile](https://github.com/dadmobile) - Tony Salomone

&lt;!-- MARKDOWN LINKS &amp; IMAGES --&gt;

[product-screenshot]: https://transformerlab.ai/assets/images/screenshot01-53ecb8c52338db3c9246cf2ebbbdc40d.png
[React.js]: https://img.shields.io/badge/React-20232A?style=for-the-badge&amp;logo=react&amp;logoColor=61DAFB
[React-url]: https://reactjs.org/
[Electron]: https://img.shields.io/badge/Electron-20232A?style=for-the-badge&amp;logo=electron&amp;logoColor=61DAFB
[Electron-url]: https://www.electronjs.org/
[HuggingFace]: https://img.shields.io/badge/ü§ó_HuggingFace-20232A?style=for-the-badge
[HuggingFace-url]: https://huggingface.co/
[Download Icon]: https://img.shields.io/badge/Download-EF2D5E?style=for-the-badge&amp;logoColor=white&amp;logo=DocuSign
[Download URL]: https://transformerlab.ai/docs/download
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[excalidraw/excalidraw]]></title>
            <link>https://github.com/excalidraw/excalidraw</link>
            <guid>https://github.com/excalidraw/excalidraw</guid>
            <pubDate>Mon, 12 May 2025 00:05:21 GMT</pubDate>
            <description><![CDATA[Virtual whiteboard for sketching hand-drawn like diagrams]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/excalidraw/excalidraw">excalidraw/excalidraw</a></h1>
            <p>Virtual whiteboard for sketching hand-drawn like diagrams</p>
            <p>Language: TypeScript</p>
            <p>Stars: 99,416</p>
            <p>Forks: 9,694</p>
            <p>Stars today: 44 stars today</p>
            <h2>README</h2><pre>&lt;a href=&quot;https://excalidraw.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;
  &lt;picture&gt;
    &lt;source media=&quot;(prefers-color-scheme: dark)&quot; alt=&quot;Excalidraw&quot; srcset=&quot;https://excalidraw.nyc3.cdn.digitaloceanspaces.com/github/excalidraw_github_cover_2_dark.png&quot; /&gt;
    &lt;img alt=&quot;Excalidraw&quot; src=&quot;https://excalidraw.nyc3.cdn.digitaloceanspaces.com/github/excalidraw_github_cover_2.png&quot; /&gt;
  &lt;/picture&gt;
&lt;/a&gt;

&lt;h4 align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://excalidraw.com&quot;&gt;Excalidraw Editor&lt;/a&gt; |
  &lt;a href=&quot;https://plus.excalidraw.com/blog&quot;&gt;Blog&lt;/a&gt; |
  &lt;a href=&quot;https://docs.excalidraw.com&quot;&gt;Documentation&lt;/a&gt; |
  &lt;a href=&quot;https://plus.excalidraw.com&quot;&gt;Excalidraw+&lt;/a&gt;
&lt;/h4&gt;

&lt;div align=&quot;center&quot;&gt;
  &lt;h2&gt;
    An open source virtual hand-drawn style whiteboard. &lt;/br&gt;
    Collaborative and end-to-end encrypted. &lt;/br&gt;
  &lt;br /&gt;
  &lt;/h2&gt;
&lt;/div&gt;

&lt;br /&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/excalidraw/excalidraw/blob/master/LICENSE&quot;&gt;
    &lt;img alt=&quot;Excalidraw is released under the MIT license.&quot; src=&quot;https://img.shields.io/badge/license-MIT-blue.svg&quot;  /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://www.npmjs.com/package/@excalidraw/excalidraw&quot;&gt;
    &lt;img alt=&quot;npm downloads/month&quot; src=&quot;https://img.shields.io/npm/dm/@excalidraw/excalidraw&quot;  /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://docs.excalidraw.com/docs/introduction/contributing&quot;&gt;
    &lt;img alt=&quot;PRs welcome!&quot; src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat&quot;  /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://discord.gg/UexuTaE&quot;&gt;
    &lt;img alt=&quot;Chat on Discord&quot; src=&quot;https://img.shields.io/discord/723672430744174682?color=738ad6&amp;label=Chat%20on%20Discord&amp;logo=discord&amp;logoColor=ffffff&amp;widge=false&quot;/&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://twitter.com/excalidraw&quot;&gt;
    &lt;img alt=&quot;Follow Excalidraw on Twitter&quot; src=&quot;https://img.shields.io/twitter/follow/excalidraw.svg?label=follow+@excalidraw&amp;style=social&amp;logo=twitter&quot;/&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
  &lt;figure&gt;
    &lt;a href=&quot;https://excalidraw.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;
      &lt;img src=&quot;https://excalidraw.nyc3.cdn.digitaloceanspaces.com/github%2Fproduct_showcase.png&quot; alt=&quot;Product showcase&quot; /&gt;
    &lt;/a&gt;
    &lt;figcaption&gt;
      &lt;p align=&quot;center&quot;&gt;
        Create beautiful hand-drawn like diagrams, wireframes, or whatever you like.
      &lt;/p&gt;
    &lt;/figcaption&gt;
  &lt;/figure&gt;
&lt;/div&gt;

## Features

The Excalidraw editor (npm package) supports:

- üíØ&amp;nbsp;Free &amp; open-source.
- üé®&amp;nbsp;Infinite, canvas-based whiteboard.
- ‚úçÔ∏è&amp;nbsp;Hand-drawn like style.
- üåì&amp;nbsp;Dark mode.
- üèóÔ∏è&amp;nbsp;Customizable.
- üì∑&amp;nbsp;Image support.
- üòÄ&amp;nbsp;Shape libraries support.
- üåê&amp;nbsp;Localization (i18n) support.
- üñºÔ∏è&amp;nbsp;Export to PNG, SVG &amp; clipboard.
- üíæ&amp;nbsp;Open format - export drawings as an `.excalidraw` json file.
- ‚öíÔ∏è&amp;nbsp;Wide range of tools - rectangle, circle, diamond, arrow, line, free-draw, eraser...
- ‚û°Ô∏è&amp;nbsp;Arrow-binding &amp; labeled arrows.
- üîô&amp;nbsp;Undo / Redo.
- üîç&amp;nbsp;Zoom and panning support.

## Excalidraw.com

The app hosted at [excalidraw.com](https://excalidraw.com) is a minimal showcase of what you can build with Excalidraw. Its [source code](https://github.com/excalidraw/excalidraw/tree/master/excalidraw-app) is part of this repository as well, and the app features:

- üì°&amp;nbsp;PWA support (works offline).
- ü§º&amp;nbsp;Real-time collaboration.
- üîí&amp;nbsp;End-to-end encryption.
- üíæ&amp;nbsp;Local-first support (autosaves to the browser).
- üîó&amp;nbsp;Shareable links (export to a readonly link you can share with others).

We&#039;ll be adding these features as drop-in plugins for the npm package in the future.

## Quick start

**Note:** following instructions are for installing the Excalidraw [npm package](https://www.npmjs.com/package/@excalidraw/excalidraw) when integrating Excalidraw into your own app. To run the repository locally for development, please refer to our [Development Guide](https://docs.excalidraw.com/docs/introduction/development).

Use `npm` or `yarn` to install the package.

```bash
npm install react react-dom @excalidraw/excalidraw
# or
yarn add react react-dom @excalidraw/excalidraw
```

Check out our [documentation](https://docs.excalidraw.com/docs/@excalidraw/excalidraw/installation) for more details!

## Contributing

- Missing something or found a bug? [Report here](https://github.com/excalidraw/excalidraw/issues).
- Want to contribute? Check out our [contribution guide](https://docs.excalidraw.com/docs/introduction/contributing) or let us know on [Discord](https://discord.gg/UexuTaE).
- Want to help with translations? See the [translation guide](https://docs.excalidraw.com/docs/introduction/contributing#translating).

## Integrations

- [VScode extension](https://marketplace.visualstudio.com/items?itemName=pomdtr.excalidraw-editor)
- [npm package](https://www.npmjs.com/package/@excalidraw/excalidraw)

## Who&#039;s integrating Excalidraw

[Google Cloud](https://googlecloudcheatsheet.withgoogle.com/architecture) ‚Ä¢ [Meta](https://meta.com/) ‚Ä¢ [CodeSandbox](https://codesandbox.io/) ‚Ä¢ [Obsidian Excalidraw](https://github.com/zsviczian/obsidian-excalidraw-plugin) ‚Ä¢ [Replit](https://replit.com/) ‚Ä¢ [Slite](https://slite.com/) ‚Ä¢ [Notion](https://notion.so/) ‚Ä¢ [HackerRank](https://www.hackerrank.com/) ‚Ä¢ and many others

## Sponsors &amp; support

If you like the project, you can become a sponsor at [Open Collective](https://opencollective.com/excalidraw) or use [Excalidraw+](https://plus.excalidraw.com/).

## Thank you for supporting Excalidraw

[&lt;img src=&quot;https://opencollective.com/excalidraw/tiers/sponsors/0/avatar.svg?avatarHeight=120&quot;/&gt;](https://opencollective.com/excalidraw/tiers/sponsors/0/website) [&lt;img src=&quot;https://opencollective.com/excalidraw/tiers/sponsors/1/avatar.svg?avatarHeight=120&quot;/&gt;](https://opencollective.com/excalidraw/tiers/sponsors/1/website) [&lt;img src=&quot;https://opencollective.com/excalidraw/tiers/sponsors/2/avatar.svg?avatarHeight=120&quot;/&gt;](https://opencollective.com/excalidraw/tiers/sponsors/2/website) [&lt;img src=&quot;https://opencollective.com/excalidraw/tiers/sponsors/3/avatar.svg?avatarHeight=120&quot;/&gt;](https://opencollective.com/excalidraw/tiers/sponsors/3/website) [&lt;img src=&quot;https://opencollective.com/excalidraw/tiers/sponsors/4/avatar.svg?avatarHeight=120&quot;/&gt;](https://opencollective.com/excalidraw/tiers/sponsors/4/website) [&lt;img src=&quot;https://opencollective.com/excalidraw/tiers/sponsors/5/avatar.svg?avatarHeight=120&quot;/&gt;](https://opencollective.com/excalidraw/tiers/sponsors/5/website) [&lt;img src=&quot;https://opencollective.com/excalidraw/tiers/sponsors/6/avatar.svg?avatarHeight=120&quot;/&gt;](https://opencollective.com/excalidraw/tiers/sponsors/6/website) [&lt;img src=&quot;https://opencollective.com/excalidraw/tiers/sponsors/7/avatar.svg?avatarHeight=120&quot;/&gt;](https://opencollective.com/excalidraw/tiers/sponsors/7/website) [&lt;img src=&quot;https://opencollective.com/excalidraw/tiers/sponsors/8/avatar.svg?avatarHeight=120&quot;/&gt;](https://opencollective.com/excalidraw/tiers/sponsors/8/website) [&lt;img src=&quot;https://opencollective.com/excalidraw/tiers/sponsors/9/avatar.svg?avatarHeight=120&quot;/&gt;](https://opencollective.com/excalidraw/tiers/sponsors/9/website) [&lt;img src=&quot;https://opencollective.com/excalidraw/tiers/sponsors/10/avatar.svg?avatarHeight=120&quot;/&gt;](https://opencollective.com/excalidraw/tiers/sponsors/10/website)

&lt;a href=&quot;https://opencollective.com/excalidraw#category-CONTRIBUTE&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/excalidraw/tiers/backers.svg?avatarHeight=32&quot;/&gt;&lt;/a&gt;

Last but not least, we&#039;re thankful to these companies for offering their services for free:

[![Vercel](./.github/assets/vercel.svg)](https://vercel.com) [![Sentry](./.github/assets/sentry.svg)](https://sentry.io) [![Crowdin](./.github/assets/crowdin.svg)](https://crowdin.com)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[honojs/hono]]></title>
            <link>https://github.com/honojs/hono</link>
            <guid>https://github.com/honojs/hono</guid>
            <pubDate>Mon, 12 May 2025 00:05:20 GMT</pubDate>
            <description><![CDATA[Web framework built on Web Standards]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/honojs/hono">honojs/hono</a></h1>
            <p>Web framework built on Web Standards</p>
            <p>Language: TypeScript</p>
            <p>Stars: 24,097</p>
            <p>Forks: 708</p>
            <p>Stars today: 32 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://hono.dev&quot;&gt;
    &lt;img src=&quot;https://raw.githubusercontent.com/honojs/hono/main/docs/images/hono-title.png&quot; width=&quot;500&quot; height=&quot;auto&quot; alt=&quot;Hono&quot;/&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;a href=&quot;https://hono.dev&quot;&gt;&lt;b&gt;Documentation üëâ hono.dev&lt;/b&gt;&lt;/a&gt;&lt;br /&gt;
&lt;i&gt;Now supports &lt;a href=&quot;https://jsr.io/@hono/hono&quot;&gt;JSR&lt;/a&gt; and &lt;code&gt;deno.land/x&lt;/code&gt; is deprecated! See &lt;a href=&quot;docs/MIGRATION.md&quot;&gt;Migration guide&lt;/a&gt;.&lt;/i&gt;
&lt;/p&gt;

&lt;hr /&gt;

[![GitHub Workflow Status](https://img.shields.io/github/actions/workflow/status/honojs/hono/ci.yml?branch=main)](https://github.com/honojs/hono/actions)
[![GitHub](https://img.shields.io/github/license/honojs/hono)](https://github.com/honojs/hono/blob/main/LICENSE)
[![npm](https://img.shields.io/npm/v/hono)](https://www.npmjs.com/package/hono)
[![npm](https://img.shields.io/npm/dm/hono)](https://www.npmjs.com/package/hono)
[![JSR](https://jsr.io/badges/@hono/hono)](https://jsr.io/@hono/hono)
[![Bundle Size](https://img.shields.io/bundlephobia/min/hono)](https://bundlephobia.com/result?p=hono)
[![Bundle Size](https://img.shields.io/bundlephobia/minzip/hono)](https://bundlephobia.com/result?p=hono)
[![GitHub commit activity](https://img.shields.io/github/commit-activity/m/honojs/hono)](https://github.com/honojs/hono/pulse)
[![GitHub last commit](https://img.shields.io/github/last-commit/honojs/hono)](https://github.com/honojs/hono/commits/main)
[![codecov](https://codecov.io/github/honojs/hono/graph/badge.svg)](https://codecov.io/github/honojs/hono)
[![Discord badge](https://img.shields.io/discord/1011308539819597844?label=Discord&amp;logo=Discord)](https://discord.gg/KMh2eNSdxV)

Hono - _**means flameüî• in Japanese**_ - is a small, simple, and ultrafast web framework built on Web Standards. It works on any JavaScript runtime: Cloudflare Workers, Fastly Compute, Deno, Bun, Vercel, AWS Lambda, Lambda@Edge, and Node.js.

Fast, but not only fast.

```ts
import { Hono } from &#039;hono&#039;
const app = new Hono()

app.get(&#039;/&#039;, (c) =&gt; c.text(&#039;Hono!&#039;))

export default app
```

## Quick Start

```bash
npm create hono@latest
```

## Features

- **Ultrafast** üöÄ - The router `RegExpRouter` is really fast. Not using linear loops. Fast.
- **Lightweight** ü™∂ - The `hono/tiny` preset is under 12kB. Hono has zero dependencies and uses only the Web Standard API.
- **Multi-runtime** üåç - Works on Cloudflare Workers, Fastly Compute, Deno, Bun, AWS Lambda, Lambda@Edge, or Node.js. The same code runs on all platforms.
- **Batteries Included** üîã - Hono has built-in middleware, custom middleware, and third-party middleware. Batteries included.
- **Delightful DX** üòÉ - Super clean APIs. First-class TypeScript support. Now, we&#039;ve got &quot;Types&quot;.

## Documentation

The documentation is available on [hono.dev](https://hono.dev).

## Migration

The migration guide is available on [docs/MIGRATION.md](docs/MIGRATION.md).

## Communication

[X](https://x.com/honojs) and [Discord channel](https://discord.gg/KMh2eNSdxV) are available.

## Contributing

Contributions Welcome! You can contribute in the following ways.

- Create an Issue - Propose a new feature. Report a bug.
- Pull Request - Fix a bug and typo. Refactor the code.
- Create third-party middleware - Instruct below.
- Share - Share your thoughts on the Blog, X, and others.
- Make your application - Please try to use Hono.

For more details, see [docs/CONTRIBUTING.md](docs/CONTRIBUTING.md).

## Contributors

Thanks to [all contributors](https://github.com/honojs/hono/graphs/contributors)!

## Authors

Yusuke Wada &lt;https://github.com/yusukebe&gt;

_RegExpRouter_, _SmartRouter_, _LinearRouter_, and _PatternRouter_ are created by Taku Amano &lt;https://github.com/usualoma&gt;

## License

Distributed under the MIT License. See [LICENSE](LICENSE) for more information.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[latitude-dev/latitude-llm]]></title>
            <link>https://github.com/latitude-dev/latitude-llm</link>
            <guid>https://github.com/latitude-dev/latitude-llm</guid>
            <pubDate>Mon, 12 May 2025 00:05:19 GMT</pubDate>
            <description><![CDATA[Latitude is the open-source prompt engineering platform to build, evaluate, and refine your prompts with AI]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/latitude-dev/latitude-llm">latitude-dev/latitude-llm</a></h1>
            <p>Latitude is the open-source prompt engineering platform to build, evaluate, and refine your prompts with AI</p>
            <p>Language: TypeScript</p>
            <p>Stars: 2,192</p>
            <p>Forks: 134</p>
            <p>Stars today: 23 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://ai.latitude.so?utm_source=github&quot; target=&quot;_blank&quot;&gt;
  &lt;picture&gt;
    &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://github.com/latitude-dev/latitude/assets/5465249/4783e122-7150-4bcc-96e0-a3c9c4c1c53b&quot;&gt;
    &lt;img alt=&quot;Latitude Logo&quot; src=&quot;https://github.com/latitude-dev/latitude/assets/5465249/92cd5508-6177-485a-a758-67d71e2cd5ce&quot; width=&quot;280&quot;/&gt;
  &lt;/picture&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;br/&gt;

&lt;h1 align=&quot;center&quot; style=&quot;border: none; margin-bottom: 8px;&quot;&gt;The Open-Source Prompt Engineering Platform&lt;/h1&gt;

  &lt;p align=&quot;center&quot;&gt;
    &lt;br /&gt;
    &lt;a href=&quot;https://docs.latitude.so&quot; rel=&quot;dofollow&quot;&gt;&lt;strong&gt;See documentation ‚Üí&lt;/strong&gt;&lt;/a&gt;
    &lt;br /&gt;
    &lt;br/&gt;
  &lt;a href=&quot;https://join.slack.com/t/trylatitude/shared_invite/zt-2vlnnz3xi-mO1DArzBX0lTJJBATVhR7w&quot;&gt;Join Our Slack&lt;/a&gt;
    ¬∑
    &lt;a href=&quot;https://x.com/trylatitude&quot;&gt;X&lt;/a&gt;
  &lt;/p&gt;

## üåà Why Latitude?

Latitude is an open-source platform for AI prompt engineering, deployment, and evaluation. It helps teams build, test, and maintain reliable AI applications by providing a complete lifecycle management system for prompts.

With Latitude, you can:

- Design and version prompts collaboratively
- Test iterations in an interactive playground
- Deploy prompts as API endpoints
- Monitor performance with automatic logging
- Evaluate and improve prompts systematically

Latitude is designed for cross-functional teams, enabling collaboration between developers, product managers, and domain experts throughout the entire AI development process.

&lt;a href=&quot;https://www.youtube.com/watch?v=jPVn9kf4GrE&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;Latitude screenshot&quot; src=&quot;https://github.com/user-attachments/assets/3d5a217d-7f75-4997-b569-e8754ce505e8&quot;&gt;&lt;/a&gt;

## ‚ú® Features

- **Prompt Manager**: Create, version, and collaborate on prompts with a powerful editor supporting advanced features like variables, conditionals, and loops through PromptL
- **Playground**: Test prompts interactively with different inputs, parameters, and tool configurations
- **AI Gateway**: Deploy prompts as API endpoints that stay up-to-date with published changes
- **Evaluations**: Assess prompt performance via LLM-as-judge, programmatic rules, or human review
- **Logs &amp; Observability**: Automatically capture all interactions with prompts and models
- **Datasets**: Manage test data for batch evaluations and regression testing
- **Integrations**: Seamlessly integrate with your existing stack via SDKs and APIs
- **Open-source**: Driven by the community

## üìö Table Of Contents

- [Getting Started](https://docs.latitude.so/guides/getting-started/introduction)
- [Prompt Development Guide](https://docs.latitude.so/guides/prompt-manager/overview)
- [Evaluations](https://docs.latitude.so/guides/evaluations/overview)
- [Data Management](https://docs.latitude.so/guides/datasets/overview)
- [Integration &amp; Deployment](https://docs.latitude.so/guides/integration/publishing-deployment)
- [Self-Hosting](https://docs.latitude.so/guides/self-hosted/production-setup)
- [PromptL Language](https://docs.latitude.so/promptl/getting-started/introduction)
- [Community](https://github.com/latitude-dev/latitude-llm#-community)
- [Contributing](https://github.com/latitude-dev/latitude-llm#-contributing)
- [License](https://github.com/latitude-dev/latitude-llm#-license)

## ‚ö° Quick start

Latitude offers two deployment options:

1. **Latitude Cloud**: A fully managed solution that allows you to get started quickly without worrying about infrastructure.
2. **Latitude Self-Hosted**: An open-source version that you can deploy and manage on your own infrastructure for complete control and customization.

Choose the option that best fits your needs and follow the corresponding instructions below.

### Latitude Cloud

To get started with Latitude, follow these steps:

1. **Sign up for Latitude**: Visit our [website](https://latitude.so) and follow the instructions to create your account.

2. **Create a new project**: Once logged in, create a new project to organize your prompts and evaluations.

3. **Write your first prompt**: Navigate to the Editor and create a new prompt. Start with a simple task, like generating a short story or answering a question.

4. **Test your prompt**: Use the playground to test your prompt with different inputs and see the model&#039;s responses.

5. **Evaluate in batch**: Before deploying, you can upload a dataset and run a batch evaluation to assess your prompt&#039;s performance across various scenarios.

6. **Deploy your prompt**: Once you&#039;re satisfied with your prompt&#039;s performance in batch evaluation, deploy it as an endpoint for easy integration with your applications.

7. **Monitor and evaluate**: Use the Logs section to review your prompt&#039;s performance over time. Set up ongoing evaluations to systematically assess and improve your prompt&#039;s output.

8. **Iterate and improve**: Based on the evaluation results, refine your prompt or create new versions to enhance its performance.

9. **Collaborate with your team**: Invite team members to your Latitude workspace to collaborate on prompt engineering and evaluations.

For more detailed information on each step, explore our documentation or join our [community](https://join.slack.com/t/trylatitude/shared_invite/zt-2vlnnz3xi-mO1DArzBX0lTJJBATVhR7w) for support and discussions.

### Latitude Self-Hosted

Follow the instructions in the [self-hosted guide](https://docs.latitude.so/guides/self-hosted/production-setup) to get started with Latitude Self-Hosted.

After setting up Latitude Self-Hosted, you can follow the same steps as in the Latitude Cloud guide to create, test, evaluate, and deploy your prompts.

## üë• Community

The Latitude community can be found on
[Slack](https://join.slack.com/t/trylatitude/shared_invite/zt-2vlnnz3xi-mO1DArzBX0lTJJBATVhR7w)
where you can ask questions, voice ideas, and share your projects with other
people.

## ü§ù Contributing

Contributions to Latitude are welcome and highly appreciated.

If you are interested in contributing, please join us on our¬†[Slack
community](https://join.slack.com/t/trylatitude/shared_invite/zt-2vlnnz3xi-mO1DArzBX0lTJJBATVhR7w),
open an¬†[issue](https://github.com/latitude-dev/latitude-llm/issues/new), or
contribute a pull request.

## üìÑ License

Latitude is licensed under the [LGPL-3.0](LICENSE).

Alternatively, we offer a more permissive commercial license for those who need it. Please contact us at [licensing@latitude.so](mailto:licensing@latitude.so) for more information.

## üîó Links

- [Home page](https://latitude.so?utm_campaign=github-readme)
- [Documentation](https://docs.latitude.so/)
- [Slack community](https://join.slack.com/t/trylatitude/shared_invite/zt-2vlnnz3xi-mO1DArzBX0lTJJBATVhR7w)
- [X / Twitter](https://x.com/trylatitude)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[FellouAI/eko]]></title>
            <link>https://github.com/FellouAI/eko</link>
            <guid>https://github.com/FellouAI/eko</guid>
            <pubDate>Mon, 12 May 2025 00:05:18 GMT</pubDate>
            <description><![CDATA[Eko (Eko Keeps Operating) - Build Production-ready Agentic Workflow with Natural Language - eko.fellou.ai]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/FellouAI/eko">FellouAI/eko</a></h1>
            <p>Eko (Eko Keeps Operating) - Build Production-ready Agentic Workflow with Natural Language - eko.fellou.ai</p>
            <p>Language: TypeScript</p>
            <p>Stars: 3,502</p>
            <p>Forks: 258</p>
            <p>Stars today: 62 stars today</p>
            <h2>README</h2><pre>


&lt;h1 align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/FellouAI/eko&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;https://github.com/user-attachments/assets/55dbdd6c-2b08-4e5f-a841-8fea7c2a0b92&quot; alt=&quot;eko-logo&quot; width=&quot;200&quot; height=&quot;200&quot;&gt;
  &lt;/a&gt;
  &lt;br&gt;
  &lt;small&gt;Eko - Build Production-ready Agentic Workflow with Natural Language&lt;/small&gt;
&lt;/h1&gt;



[![License](https://img.shields.io/badge/license-MIT-blue.svg)](LICENSE) [![Build Status](https://img.shields.io/badge/build-passing-brightgreen.svg)](https://example.com/build-status) [![Version](https://img.shields.io/github/package-json/v/FellouAI/eko?color=yellow)](https://eko.fellou.ai/docs/release/versions/)

Eko (pronounced like ‚Äòecho‚Äô) is a production-ready JavaScript framework that enables developers to create reliable agents, **from simple commands to complex workflows**. It provides a unified interface for running agents in both **computer and browser environments**.

# Framework Comparison

| Feature                              | Eko   | Langchain  | Browser-use  | Dify.ai  | Coze   |
|--------------------------------------|-------|------------|--------------|----------|--------|
| **Supported Platform**               | **All platform**  | Server side  | Browser  | Web  | Web  |
| **One sentence to multi-step workflow** | ‚úÖ    | ‚ùå          | ‚úÖ            | ‚ùå        | ‚ùå      |
| **Intervenability**                  | ‚úÖ    | ‚úÖ          | ‚ùå            | ‚ùå        | ‚ùå      | 
| **Development Efficiency**           | **High**  | Low      | Middle        | Middle    | Low    | 
| **Task Complexity**           | **High**  | High      | Low        | Middle    | Middle    | Middle       |
| **Open-source**                      | ‚úÖ    | ‚úÖ          | ‚úÖ            | ‚úÖ        | ‚ùå      |
| **Access to private web resources** | ‚úÖ | ‚ùå          | ‚ùå            | ‚ùå        | ‚ùå      |

## Quickstart

```bash
npm install @eko-ai/eko
```

&gt; Important Notice: The following example code cannot be executed directly. Please refer to the [Eko Quickstart guide](https://eko.fellou.ai/docs/getting-started/quickstart/) guide for instructions on how to run it.

```typescript
import { Eko } from &#039;@eko-ai/eko&#039;;

const eko = new Eko({
  apiKey: &#039;your_anthropic_api_key&#039;,
});

// Example: Browser automation
const extWorkflow = await eko.generate(&quot;Search for &#039;Eko framework&#039; on Google and save the first result&quot;);
await eko.execute(extWorkflow);

// Example: System operation
const sysWorkflow = await eko.generate(&quot;Create a new folder named &#039;reports&#039; and move all PDF files there&quot;);
await eko.execute(sysWorkflow);

```

## Demos

**Prompt:** `Collect the latest NASDAQ data on Yahoo Finance, including price changes, market capitalization, trading volume of major stocks, analyze the data and generate visualization reports`.

https://github.com/user-attachments/assets/4087b370-8eb8-4346-a549-c4ce4d1efec3

Click [here](https://github.com/FellouAI/eko-demos/tree/main/browser-extension-stock) to get the source code.

---

**Prompt:** `Based on the README of FellouAI/eko on github, search for competitors, highlight the key contributions of Eko, write a blog post advertising Eko, and post it on Write.as.`

https://github.com/user-attachments/assets/6feaea86-2fb9-4e5c-b510-479c2473d810

Click [here](https://github.com/FellouAI/eko-demos/tree/main/browser-extension-blog) to get the source code.

---

**Prompt:** `Clean up all files in the current directory larger than 1MB`

https://github.com/user-attachments/assets/ef7feb58-3ddd-4296-a1de-bb8b6c66e48b

Click [here](https://eko.fellou.ai/docs/computeruse/computer-node/#example-file-cleanup-workflow) to Learn more.

---

**Prompt:** Automatic software testing
```
    Current login page automation test:
    1. Correct account and password are: admin / 666666 
    2. Please randomly combine usernames and passwords for testing to verify if login validation works properly, such as: username cannot be empty, password cannot be empty, incorrect username, incorrect password
    3. Finally, try to login with the correct account and password to verify if login is successful
    4. Generate test report and export
```

https://github.com/user-attachments/assets/7716300a-c51d-41f1-8d4f-e3f593c1b6d5


Click [here](https://eko.fellou.ai/docs/browseruse/browser-web#example-login-automation-testing) to Learn more.

## Use Cases

- Browser automation and web scraping
- System file and process management
- Workflow automation
- Data processing and organization
- GUI automation
- Multi-step task orchestration

## Documentation

Visit our [documentation site](https://eko.fellou.ai/docs) for:

- Getting started guide
- API reference
- Usage examples
- Best practices
- Configuration options

## Development Environments

Eko can be used in multiple environments:

- Browser Extension
- Web Applications
- Node.js Applications

## Community and Support

- Report issues on [GitHub Issues](https://github.com/FellouAI/eko/issues)
- Join our [slack community discussions](https://join.slack.com/t/eko-ai/shared_invite/zt-2xhvkudv9-nHvD1g8Smp227sM51x_Meg)
- Join our [Discard](https://discord.gg/XpFfk2e5):
![](discard.png)
- Contribute tools and improvements
- Share your use cases and feedback

[![Star History Chart](https://api.star-history.com/svg?repos=FellouAI/eko&amp;type=Date)](https://star-history.com/#FellouAI/eko&amp;Date)

## License

Eko is released under the MIT License. See the [LICENSE](LICENSE) file for details.

</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[unnoq/orpc]]></title>
            <link>https://github.com/unnoq/orpc</link>
            <guid>https://github.com/unnoq/orpc</guid>
            <pubDate>Mon, 12 May 2025 00:05:17 GMT</pubDate>
            <description><![CDATA[Typesafe APIs Made Simple ü™Ñ]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/unnoq/orpc">unnoq/orpc</a></h1>
            <p>Typesafe APIs Made Simple ü™Ñ</p>
            <p>Language: TypeScript</p>
            <p>Stars: 1,647</p>
            <p>Forks: 29</p>
            <p>Stars today: 68 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
  &lt;image align=&quot;center&quot; src=&quot;https://orpc.unnoq.com/logo.webp&quot; width=280 alt=&quot;oRPC logo&quot; /&gt;
&lt;/div&gt;

&lt;h1&gt;&lt;/h1&gt;

&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://codecov.io/gh/unnoq/orpc&quot;&gt;
    &lt;img alt=&quot;codecov&quot; src=&quot;https://codecov.io/gh/unnoq/orpc/branch/main/graph/badge.svg&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://www.npmjs.com/package/@orpc/client&quot;&gt;
    &lt;img alt=&quot;weekly downloads&quot; src=&quot;https://img.shields.io/npm/dw/%40orpc%2Fclient?logo=npm&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/unnoq/orpc/blob/main/LICENSE&quot;&gt;
    &lt;img alt=&quot;MIT License&quot; src=&quot;https://img.shields.io/github/license/unnoq/orpc?logo=open-source-initiative&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://discord.gg/TXEbwRBvQn&quot;&gt;
    &lt;img alt=&quot;Discord&quot; src=&quot;https://img.shields.io/discord/1308966753044398161?color=7389D8&amp;label&amp;logo=discord&amp;logoColor=ffffff&quot; /&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;h3 align=&quot;center&quot;&gt;Typesafe APIs Made Simple ü™Ñ&lt;/h3&gt;

**oRPC is a powerful combination of RPC and OpenAPI**, makes it easy to build APIs that are end-to-end type-safe and adhere to OpenAPI standards

---

## Highlights

- **üîó End-to-End Type Safety**: Ensure type-safe inputs, outputs, and errors from client to server.
- **üìò First-Class OpenAPI**: Built-in support that fully adheres to the OpenAPI standard.
- **üìù Contract-First Development**: Optionally define your API contract before implementation.
- **‚öôÔ∏è Framework Integrations**: Seamlessly integrate with TanStack Query (React, Vue, Solid, Svelte), Pinia Colada, and more.
- **üöÄ Server Actions**: Fully compatible with React Server Actions on Next.js, TanStack Start, and other platforms.
- **üî† Standard Schema Support**: Works out of the box with Zod, Valibot, ArkType, and other schema validators.
- **üóÉÔ∏è Native Types**: Supports native types like Date, File, Blob, BigInt, URL, and more.
- **‚è±Ô∏è Lazy Router**: Enhance cold start times with our lazy routing feature.
- **üì° SSE &amp; Streaming**: Enjoy full type-safe support for SSE and streaming.
- **üåç Multi-Runtime Support**: Fast and lightweight on Cloudflare, Deno, Bun, Node.js, and beyond.
- **üîå Extendability**: Easily extend functionality with plugins, middleware, and interceptors.
- **üõ°Ô∏è Reliability**: Well-tested, TypeScript-based, production-ready, and MIT licensed.

## Documentation

You can find the full documentation [here](https://orpc.unnoq.com).

## Packages

- [@orpc/contract](https://www.npmjs.com/package/@orpc/contract): Build your API contract.
- [@orpc/server](https://www.npmjs.com/package/@orpc/server): Build your API or implement API contract.
- [@orpc/client](https://www.npmjs.com/package/@orpc/client): Consume your API on the client with type-safety.
- [@orpc/nest](https://www.npmjs.com/package/@orpc/nest): Deeply integrate oRPC with NestJS.
- [@orpc/react](https://www.npmjs.com/package/@orpc/react): Utilities for integrating oRPC with React and React Server Actions.
- [@orpc/react-query](https://www.npmjs.com/package/@orpc/react-query): Integration with [React Query](https://tanstack.com/query/latest/docs/framework/react/overview).
- [@orpc/vue-query](https://www.npmjs.com/package/@orpc/vue-query): Integration with [Vue Query](https://tanstack.com/query/latest/docs/framework/vue/overview).
- [@orpc/solid-query](https://www.npmjs.com/package/@orpc/solid-query): Integration with [Solid Query](https://tanstack.com/query/latest/docs/framework/solid/overview).
- [@orpc/svelte-query](https://www.npmjs.com/package/@orpc/svelte-query): Integration with [Svelte Query](https://tanstack.com/query/latest/docs/framework/svelte/overview).
- [@orpc/vue-colada](https://www.npmjs.com/package/@orpc/vue-colada): Integration with [Pinia Colada](https://pinia-colada.esm.dev/).
- [@orpc/openapi](https://www.npmjs.com/package/@orpc/openapi): Generate OpenAPI specs and handle OpenAPI requests.
- [@orpc/zod](https://www.npmjs.com/package/@orpc/zod): More schemas that [Zod](https://zod.dev/) doesn&#039;t support yet.
- [@orpc/valibot](https://www.npmjs.com/package/@orpc/valibot): OpenAPI spec generation from [Valibot](https://valibot.dev/).
- [@orpc/arktype](https://www.npmjs.com/package/@orpc/arktype): OpenAPI spec generation from [ArkType](https://arktype.io/).

## Overview

This is a quick overview of how to use oRPC. For more details, please refer to the [documentation](https://orpc.unnoq.com).

1. **Define your router:**

   ```ts
   import type { IncomingHttpHeaders } from &#039;node:http&#039;
   import { ORPCError, os } from &#039;@orpc/server&#039;
   import { z } from &#039;zod&#039;

   const PlanetSchema = z.object({
     id: z.number().int().min(1),
     name: z.string(),
     description: z.string().optional(),
   })

   export const listPlanet = os
     .input(
       z.object({
         limit: z.number().int().min(1).max(100).optional(),
         cursor: z.number().int().min(0).default(0),
       }),
     )
     .handler(async ({ input }) =&gt; {
       // your list code here
       return [{ id: 1, name: &#039;name&#039; }]
     })

   export const findPlanet = os
     .input(PlanetSchema.pick({ id: true }))
     .handler(async ({ input }) =&gt; {
       // your find code here
       return { id: 1, name: &#039;name&#039; }
     })

   export const createPlanet = os
     .$context&lt;{ headers: IncomingHttpHeaders }&gt;()
     .use(({ context, next }) =&gt; {
       const user = parseJWT(context.headers.authorization?.split(&#039; &#039;)[1])

       if (user) {
         return next({ context: { user } })
       }

       throw new ORPCError(&#039;UNAUTHORIZED&#039;)
     })
     .input(PlanetSchema.omit({ id: true }))
     .handler(async ({ input, context }) =&gt; {
       // your create code here
       return { id: 1, name: &#039;name&#039; }
     })

   export const router = {
     planet: {
       list: listPlanet,
       find: findPlanet,
       create: createPlanet
     }
   }
   ```

2. **Create your server:**

   ```ts
   import { createServer } from &#039;node:http&#039;
   import { RPCHandler } from &#039;@orpc/server/node&#039;
   import { CORSPlugin } from &#039;@orpc/server/plugins&#039;

   const handler = new RPCHandler(router, {
     plugins: [new CORSPlugin()]
   })

   const server = createServer(async (req, res) =&gt; {
     const result = await handler.handle(req, res, {
       context: { headers: req.headers }
     })

     if (!result.matched) {
       res.statusCode = 404
       res.end(&#039;No procedure matched&#039;)
     }
   })

   server.listen(
     3000,
     &#039;127.0.0.1&#039;,
     () =&gt; console.log(&#039;Listening on 127.0.0.1:3000&#039;)
   )
   ```

3. **Create your client:**

   ```ts
   import type { RouterClient } from &#039;@orpc/server&#039;
   import { createORPCClient } from &#039;@orpc/client&#039;
   import { RPCLink } from &#039;@orpc/client/fetch&#039;

   const link = new RPCLink({
     url: &#039;http://127.0.0.1:3000&#039;,
     headers: { Authorization: &#039;Bearer token&#039; },
   })

   export const orpc: RouterClient&lt;typeof router&gt; = createORPCClient(link)
   ```

4. **Consume your API:**

   ```ts
   import { orpc } from &#039;./client&#039;

   const planets = await orpc.planet.list({ limit: 10 })
   ```

5. **Generate OpenAPI Spec:**

   ```ts
   import { OpenAPIGenerator } from &#039;@orpc/openapi&#039;
   import { ZodToJsonSchemaConverter } from &#039;@orpc/zod&#039;

   const generator = new OpenAPIGenerator({
     schemaConverters: [new ZodToJsonSchemaConverter()]
   })

   const spec = await generator.generate(router, {
     info: {
       title: &#039;Planet API&#039;,
       version: &#039;1.0.0&#039;
     }
   })

   console.log(spec)
   ```

## Sponsors

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://cdn.jsdelivr.net/gh/unnoq/unnoq/sponsors.svg&quot;&gt;
    &lt;img src=&#039;https://cdn.jsdelivr.net/gh/unnoq/unnoq/sponsors.svg&#039;/&gt;
  &lt;/a&gt;
&lt;/p&gt;

## References

oRPC is inspired by existing solutions that prioritize type safety and developer experience. Special acknowledgments to:

- [tRPC](https://trpc.io): For pioneering the concept of end-to-end type-safe RPC and influencing the development of type-safe APIs.
- [ts-rest](https://ts-rest.com): For its emphasis on contract-first development and OpenAPI integration, which have greatly inspired oRPC‚Äôs feature set.

## License

Distributed under the MIT License. See [LICENSE](https://github.com/unnoq/orpc/blob/main/LICENSE) for more information.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[misskey-dev/misskey]]></title>
            <link>https://github.com/misskey-dev/misskey</link>
            <guid>https://github.com/misskey-dev/misskey</guid>
            <pubDate>Mon, 12 May 2025 00:05:16 GMT</pubDate>
            <description><![CDATA[üåé A completely free and open interplanetary microblogging platform üöÄ]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/misskey-dev/misskey">misskey-dev/misskey</a></h1>
            <p>üåé A completely free and open interplanetary microblogging platform üöÄ</p>
            <p>Language: TypeScript</p>
            <p>Stars: 10,551</p>
            <p>Forks: 1,467</p>
            <p>Stars today: 2 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
&lt;a href=&quot;https://misskey-hub.net&quot;&gt;
	&lt;img src=&quot;./assets/title_float.svg&quot; alt=&quot;Misskey logo&quot; style=&quot;border-radius:50%&quot; width=&quot;300&quot;/&gt;
&lt;/a&gt;

**üåé **Misskey** is an open source, federated social media platform that&#039;s free forever! üöÄ**

[Learn more](https://misskey-hub.net/)

---

&lt;a href=&quot;https://misskey-hub.net/servers/&quot;&gt;
		&lt;img src=&quot;https://custom-icon-badges.herokuapp.com/badge/find_an-instance-acea31?logoColor=acea31&amp;style=for-the-badge&amp;logo=misskey&amp;labelColor=363B40&quot; alt=&quot;find an instance&quot;/&gt;&lt;/a&gt;

&lt;a href=&quot;https://misskey-hub.net/docs/for-admin/install/guides/&quot;&gt;
		&lt;img src=&quot;https://custom-icon-badges.herokuapp.com/badge/create_an-instance-FBD53C?logoColor=FBD53C&amp;style=for-the-badge&amp;logo=server&amp;labelColor=363B40&quot; alt=&quot;create an instance&quot;/&gt;&lt;/a&gt;

&lt;a href=&quot;./CONTRIBUTING.md&quot;&gt;
		&lt;img src=&quot;https://custom-icon-badges.herokuapp.com/badge/become_a-contributor-A371F7?logoColor=A371F7&amp;style=for-the-badge&amp;logo=git-merge&amp;labelColor=363B40&quot; alt=&quot;become a contributor&quot;/&gt;&lt;/a&gt;

&lt;a href=&quot;https://discord.gg/Wp8gVStHW3&quot;&gt;
		&lt;img src=&quot;https://custom-icon-badges.herokuapp.com/badge/join_the-community-5865F2?logoColor=5865F2&amp;style=for-the-badge&amp;logo=discord&amp;labelColor=363B40&quot; alt=&quot;join the community&quot;/&gt;&lt;/a&gt;

&lt;a href=&quot;https://www.patreon.com/syuilo&quot;&gt;
		&lt;img src=&quot;https://custom-icon-badges.herokuapp.com/badge/become_a-patron-F96854?logoColor=F96854&amp;style=for-the-badge&amp;logo=patreon&amp;labelColor=363B40&quot; alt=&quot;become a patron&quot;/&gt;&lt;/a&gt;

&lt;/div&gt;

## Thanks

&lt;a href=&quot;https://sentry.io/&quot;&gt;&lt;img src=&quot;https://github.com/misskey-dev/misskey/assets/4439005/98576556-222f-467a-94be-e98dbda1d852&quot; height=&quot;30&quot; alt=&quot;Sentry&quot; /&gt;&lt;/a&gt;

Thanks to [Sentry](https://sentry.io/) for providing the error tracking platform that helps us catch unexpected errors.

&lt;a href=&quot;https://www.chromatic.com/&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/321738/84662277-e3db4f80-af1b-11ea-88f5-91d67a5e59f6.png&quot; height=&quot;30&quot; alt=&quot;Chromatic&quot; /&gt;&lt;/a&gt;

Thanks to [Chromatic](https://www.chromatic.com/) for providing the visual testing platform that helps us review UI changes and catch visual regressions.

&lt;a href=&quot;https://about.codecov.io/for/open-source/&quot;&gt;&lt;img src=&quot;https://about.codecov.io/wp-content/themes/codecov/assets/brand/sentry-cobranding/logos/codecov-by-sentry-logo.svg&quot; height=&quot;30&quot; alt=&quot;Codecov&quot; /&gt;&lt;/a&gt;

Thanks to [Codecov](https://about.codecov.io/for/open-source/) for providing the code coverage platform that helps us improve our test coverage.

&lt;a href=&quot;https://crowdin.com/&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/20679825/230709597-1299a011-171a-4294-a91e-355a9b37c672.svg&quot; height=&quot;30&quot; alt=&quot;Crowdin&quot; /&gt;&lt;/a&gt;

Thanks to [Crowdin](https://crowdin.com/) for providing the localization platform that helps us translate Misskey into many languages.

&lt;a href=&quot;https://hub.docker.com/&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/20679825/230148221-f8e73a32-a49b-47c3-9029-9a15c3824f92.png&quot; height=&quot;30&quot; alt=&quot;Docker&quot; /&gt;&lt;/a&gt;

Thanks to [Docker](https://hub.docker.com/) for providing the container platform that helps us run Misskey in production.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[iptv-org/iptv]]></title>
            <link>https://github.com/iptv-org/iptv</link>
            <guid>https://github.com/iptv-org/iptv</guid>
            <pubDate>Mon, 12 May 2025 00:05:15 GMT</pubDate>
            <description><![CDATA[Collection of publicly available IPTV channels from all over the world]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/iptv-org/iptv">iptv-org/iptv</a></h1>
            <p>Collection of publicly available IPTV channels from all over the world</p>
            <p>Language: TypeScript</p>
            <p>Stars: 93,195</p>
            <p>Forks: 3,473</p>
            <p>Stars today: 40 stars today</p>
            <h2>README</h2><pre># IPTV [![update](https://github.com/iptv-org/iptv/actions/workflows/update.yml/badge.svg)](https://github.com/iptv-org/iptv/actions/workflows/update.yml)

Collection of publicly available IPTV (Internet Protocol television) channels from all over the world.

## Table of contents

- üöÄ [How to use?](#how-to-use)
- üì∫ [Playlists](#playlists)
- üóì [EPG](#epg)
- üóÑ [Database](#database)
- üë®‚Äçüíª [API](#api)
- üìö [Resources](#resources)
- üí¨ [Discussions](#discussions)
- ‚ùì [FAQ](#faq)
- üõ† [Contribution](#contribution)
- ‚öñ [Legal](#legal)
- ¬© [License](#license)

## How to use?

Simply insert one of the links below into [any video player](https://github.com/iptv-org/awesome-iptv#apps) that supports live streaming and press _Open_.

![VLC Network Panel](https://github.com/iptv-org/iptv/raw/master/.readme/preview.png)

## Playlists

There are several versions of playlists that differ in the way they are grouped. As of January 30th, 2024, we have stopped distributing NSFW channels. For more information, please look at [this issue](https://github.com/iptv-org/iptv/issues/15723).

### Main playlist

This playlist includes all known channels available in this repository.

```
https://iptv-org.github.io/iptv/index.m3u
```

### Grouped by category

Playlists in which channels are grouped by category. A list of all supported categories with descriptions can be found [here](.readme/supported-categories.md).

&lt;details&gt;
&lt;summary&gt;Expand&lt;/summary&gt;
&lt;br&gt;

```
https://iptv-org.github.io/iptv/index.category.m3u
```

Same thing, but split up into separate files:

&lt;!-- prettier-ignore --&gt;
&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;&lt;th align=&quot;left&quot;&gt;Category&lt;/th&gt;&lt;th align=&quot;left&quot;&gt;Channels&lt;/th&gt;&lt;th align=&quot;left&quot;&gt;Playlist&lt;/th&gt;&lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;&lt;td&gt;Animation&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;55&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/animation.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Auto&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;16&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/auto.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Business&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;68&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/business.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Classic&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;46&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/classic.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Comedy&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;82&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/comedy.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Cooking&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;26&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/cooking.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Culture&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;161&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/culture.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Documentary&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;109&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/documentary.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Education&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;155&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/education.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Entertainment&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;553&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/entertainment.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Family&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;53&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/family.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;General&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;2292&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/general.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Kids&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;236&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/kids.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Legislative&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;189&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/legislative.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Lifestyle&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;93&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/lifestyle.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Movies&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;317&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/movies.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Music&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;669&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/music.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;News&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;778&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/news.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Outdoor&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;44&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/outdoor.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Relax&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/relax.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Religious&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;694&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/religious.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Science&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;25&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/science.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Series&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;246&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/series.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Shop&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;88&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/shop.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Sports&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;277&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/sports.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Travel&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;40&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/travel.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Weather&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;13&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/weather.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;XXX&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;0&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/xxx.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Undefined&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;3863&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/undefined.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;/details&gt;

### Grouped by language

Playlists in which channels are grouped by the language in which they are broadcast.

&lt;details&gt;
&lt;summary&gt;Expand&lt;/summary&gt;
&lt;br&gt;

```
https://iptv-org.github.io/iptv/index.language.m3u
```

Same thing, but split up into separate files:

&lt;!-- prettier-ignore --&gt;
&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;&lt;th align=&quot;left&quot;&gt;Language&lt;/th&gt;&lt;th align=&quot;left&quot;&gt;Channels&lt;/th&gt;&lt;th align=&quot;left&quot;&gt;Playlist&lt;/th&gt;&lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Acoli&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ach.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Adhola&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/adh.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Afghan Persian&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;8&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/prs.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Afrikaans&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/afr.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Albanian&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;66&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/sqi.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Alur&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/alz.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Amharic&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;8&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/amh.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Arabic&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;393&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ara.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Armenian&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;27&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/hye.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Assamese&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;7&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/asm.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Assyrian Neo-Aramaic&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/aii.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Ayizo Gbe&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ayb.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Aymara&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/aym.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Azerbaijani&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;17&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/aze.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Baatonum&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/bba.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Bambara&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/bam.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Bashkir&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/bak.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Basque&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;8&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/eus.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Belarusian&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;6&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/bel.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Bengali&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;26&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ben.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Bhojpuri&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/bho.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Bosnian&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;13&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/bos.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Bulgarian&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;30&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/bul.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Burmese&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;10&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/mya.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Catalan&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;51&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/cat.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Central Kurdish&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ckb.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Chenoua&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/cnu.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Chhattisgarhi&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/hne.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Chiga&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/cgg.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Chinese&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;220&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/zho.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Croatian&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;22&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/hrv.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Czech&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;40&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ces.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Danish&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;19&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/dan.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Dendi (Benin)&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ddn.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Dhanwar (Nepal)&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/dhw.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Dhivehi&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;10&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/div.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Dholuo&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/luo.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Dimili&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/zza.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Dutch&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;188&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/nld.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Egyptian Arabic&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/arz.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;English&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;2266&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/eng.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Estonian&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;9&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/est.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Ewe&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ewe.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Faroese&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/fao.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Fataleka&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/far.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Filipino&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/fil.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Finnish&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;24&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/fin.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Fon&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/fon.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;French&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;417&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/fra.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Fulah&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ful.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Gaelic&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/gla.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Galician&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;13&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/glg.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Ganda&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/lug.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Gen&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/gej.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Georgian&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;12&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/kat.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;German&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;330&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/deu.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Gikuyu&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/kik.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Goan Konkani&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/gom.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Greek&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;129&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ell.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Guadeloupean Creole French&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/gcf.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Gujarati&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;6&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/guj.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Gun&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/guw.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Haitian&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;4&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/hat.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Hausa&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/hau.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Hebrew&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;14&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/heb.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Hindi&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;124&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/hin.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Hmong&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/hmn.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Hungarian&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;105&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/hun.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Icelandic&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/isl.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Indonesian&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;99&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ind.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Inuktitut&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/iku.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Iranian Persian&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/pes.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Irish&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;7&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/gle.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Isekiri&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/its.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Italian&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;341&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ita.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Japanese&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;22&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/jpn.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Javanese&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/jav.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Kabiy√®&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/kbp.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Kabyle&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/kab.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Kannada&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;11&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/kan.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Kapampangan&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/pam.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Kazakh&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;28&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/kaz.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Khmer&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;22&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/khm.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Khorasani Turkish&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/kmz.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Kinyarwanda&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;7&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/kin.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Kirghiz&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;13&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.g

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[activepieces/activepieces]]></title>
            <link>https://github.com/activepieces/activepieces</link>
            <guid>https://github.com/activepieces/activepieces</guid>
            <pubDate>Mon, 12 May 2025 00:05:14 GMT</pubDate>
            <description><![CDATA[AI Agents & MCPs & AI Workflow Automation ‚Ä¢ (280+ MCP servers for AI agents) ‚Ä¢ AI Automation / AI Agent with MCPs ‚Ä¢ AI Workflows & AI Agents ‚Ä¢ MCPs for AI Agents]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/activepieces/activepieces">activepieces/activepieces</a></h1>
            <p>AI Agents & MCPs & AI Workflow Automation ‚Ä¢ (280+ MCP servers for AI agents) ‚Ä¢ AI Automation / AI Agent with MCPs ‚Ä¢ AI Workflows & AI Agents ‚Ä¢ MCPs for AI Agents</p>
            <p>Language: TypeScript</p>
            <p>Stars: 14,610</p>
            <p>Forks: 1,918</p>
            <p>Stars today: 16 stars today</p>
            <h2>README</h2><pre>
&lt;h1 align=&quot;center&quot;&gt;
  &lt;a
    target=&quot;_blank&quot;
    href=&quot;https://activepieces.com&quot;
  &gt;
    &lt;img
      align=&quot;center&quot;
      alt=&quot;Activepieces&quot;
src=&quot;https://github.com/activepieces/activepieces/assets/1812998/76c97441-c285-4480-bc75-30a0c73ed340&quot;
      style=&quot;width:100%;&quot;
    /&gt;
    
  &lt;/a&gt;
&lt;/h1&gt;


&lt;p align=&quot;center&quot;&gt;
&lt;a href=&quot;/LICENSE&quot; target=&quot;_blank&quot;&gt;&lt;img src=&#039;https://img.shields.io/badge/license-MIT-green?style=for-the-badge&#039; /&gt;&lt;/a&gt;&amp;nbsp;&lt;img src=&#039;https://img.shields.io/github/commit-activity/w/activepieces/activepieces/main?style=for-the-badge&#039; /&gt;&amp;nbsp;&lt;a href=&#039;https://discord.gg/2jUXBKDdP8&#039;&gt;&lt;img src=&#039;https://img.shields.io/discord/966798490984382485?style=for-the-badge&#039; /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
   An open source replacement for Zapier
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a
    href=&quot;https://www.activepieces.com/docs&quot;
    target=&quot;_blank&quot;
  &gt;&lt;b&gt;Documentation&lt;/b&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;üå™Ô∏è&amp;nbsp;&amp;nbsp;&amp;nbsp;
   &lt;a
    href=&quot;https://www.activepieces.com/docs/developers/overview&quot;
    target=&quot;_blank&quot;
  &gt;&lt;b&gt;Create a Piece&lt;/b&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;üñâ&amp;nbsp;&amp;nbsp;&amp;nbsp;
  &lt;a
    href=&quot;https://www.activepieces.com/docs/install/overview&quot;
    target=&quot;_blank&quot;
  &gt;&lt;b&gt;Deploy&lt;/b&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;üî•&amp;nbsp;&amp;nbsp;&amp;nbsp;
  &lt;a
    href=&quot;https://discord.gg/yvxF5k5AUb&quot;
    target=&quot;_blank&quot;
  &gt;
    &lt;b&gt;Join Discord&lt;/b&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;br&gt;
&lt;br&gt;

# ü§Ø Welcome to Activepieces

All-in-one AI automation designed to be **extensible** through a **type-safe** pieces framework written in **TypeScript**.
When you contribute pieces to Activepieces they become automatically available as MCP servers that you can use with LLMs through Claude Desktop, Cursor or Windsurf!

&lt;br&gt;
&lt;br&gt;

## üî• Why Activepieces is Different:

- **üíñ Loved by Everyone**: Intuitive interface and great experience for both technical and non-technical users with a quick learning curve.

&lt;img src=&quot;/docs/resources/templates.gif&quot;&gt;

- **üåê Open Ecosystem:** All pieces are open source and available on npmjs.com, **60% of the pieces are contributed by the community**.

- **üõ†Ô∏è Largest open source MCP toolkit**: All our pieces (280+) are available as MCP that you can use with LLMs on Claude Desktop, Cursor or Windsurf.

- **üõ†Ô∏è  Pieces are written in Typescript**: Pieces are npm packages in TypeScript, offering full customization with the best developer experience, including **hot reloading** for **local** piece development on your machine. üòé

&lt;img src=&quot;/docs/resources/create-action.png&quot; alt=&quot;&quot;&gt;

- **ü§ñ AI-First**: Native AI pieces let you experiment with various providers, or create your own agents using our AI SDK, and there is Copilot to help you build flows inside the builder.

- **üè¢ Enterprise-Ready**: Developers set up the tools, and anyone in the organization can use the no-code builder. Full customization from branding to control.

- **üîí Secure by Design**: Self-hosted and network-gapped for maximum security and control over your data.

- **üß† Human in the Loop**: Delay execution for a period of time or require approval. These are just pieces built on top of the piece framework, and you can build many pieces like that. üé®

- **üíª Human Input Interfaces**: Built-in support for human input triggers like &quot;Chat Interface&quot; üí¨ and &quot;Form Interface&quot; üìù



## üõ†Ô∏è  Builder Features:

- [x] Loops
- [x] Branches
- [x] Auto Retries
- [x] HTTP
- [x] Code with **NPM**
- [x] ASK AI in Code Piece (Non technical user can clean data without knowing to code)
- [x] Flows are fully versioned.
- [x] Languages Translations
- [x] Customizable Templates
- [X] 200+ Pieces, check https://www.activepieces.com/pieces

**We release updates frequently. Check the product changelog for the latest features.**


## üîå Create Your Own Piece

Activepieces supports integrations with Google Sheets, OpenAI, Discord, RSS, and over 200 other services. [Check out the full list of supported integrations](https://www.activepieces.com/pieces), which is constantly expanding thanks to our community&#039;s contributions.

As an **open ecosystem**, all integration source code is accessible in our repository. These integrations are versioned and [published](https://www.npmjs.com/search?q=%40activepieces) directly to npmjs.com upon contribution.

You can easily create your own integration using our TypeScript framework. For detailed instructions, please refer to our [Contributor&#039;s Guide](https://www.activepieces.com/docs/contributing/overview).

&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;


# License

Activepieces&#039; Community Edition is released as open source under the [MIT license](https://github.com/activepieces/activepieces/blob/main/LICENSE) and enterprise features are released under [Commercial License](https://github.com/activepieces/activepieces/blob/main/packages/ee/LICENSE)


Read more about the feature comparison here https://www.activepieces.com/docs/about/editions
&lt;br&gt;
&lt;br&gt;


# üí≠ Join Our Community

&lt;a href=&quot;https://discord.gg/2jUXBKDdP8&quot; target=&quot;_blank&quot;&gt;
&lt;img src=&quot;https://discordapp.com/api/guilds/966798490984382485/widget.png?style=banner3&quot; alt=&quot;&quot;&gt;
&lt;/a&gt;

&lt;br&gt;
&lt;br&gt;

# üåê Contributions

We welcome contributions big or small and in different directions. The best way to do this is to check this [document](https://www.activepieces.com/docs/contributing/building-pieces/create-action) and we are always up to talk on [our Discord Server](https://discord.gg/2jUXBKDdP8).

## üìö Translations

Not into coding but still interested in contributing? Come join our [Discord](https://discord.gg/2jUXBKDdP8) and visit https://www.activepieces.com/docs/about/i18n for more information.

![fr translation](https://img.shields.io/badge/dynamic/json?color=blue&amp;label=fr&amp;style=for-the-badge&amp;logo=crowdin&amp;query=%24.progress[?(@.data.languageId==%27fr%27)].data.translationProgress&amp;url=https%3A%2F%2Fbadges.awesome-crowdin.com%2Fstats-16093902-626364-update.json)

![it translation](https://img.shields.io/badge/dynamic/json?color=blue&amp;label=it&amp;style=for-the-badge&amp;logo=crowdin&amp;query=%24.progress[?(@.data.languageId==%27it%27)].data.translationProgress&amp;url=https%3A%2F%2Fbadges.awesome-crowdin.com%2Fstats-16093902-626364-update.json)

![de translation](https://img.shields.io/badge/dynamic/json?color=blue&amp;label=de&amp;style=for-the-badge&amp;logo=crowdin&amp;query=%24.progress[?(@.data.languageId==%27de%27)].data.translationProgress&amp;url=https%3A%2F%2Fbadges.awesome-crowdin.com%2Fstats-16093902-626364-update.json)

![ja translation](https://img.shields.io/badge/dynamic/json?color=blue&amp;label=ja&amp;style=for-the-badge&amp;logo=crowdin&amp;query=%24.progress[?(@.data.languageId==%27ja%27)].data.translationProgress&amp;url=https%3A%2F%2Fbadges.awesome-crowdin.com%2Fstats-16093902-626364-update.json)


![pt-BR translation](https://img.shields.io/badge/dynamic/json?color=blue&amp;label=pt-BR&amp;style=for-the-badge&amp;logo=crowdin&amp;query=%24.progress[?(@.data.languageId==%27pt-BR%27)].data.translationProgress&amp;url=https%3A%2F%2Fbadges.awesome-crowdin.com%2Fstats-16093902-626364-update.json)


## ü¶´ Contributors

&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt;
&lt;!-- prettier-ignore-start --&gt;
&lt;!-- markdownlint-disable --&gt;
&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/ShahedAlMashni&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/41443850?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;ShahedAlMashni&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;ShahedAlMashni&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-ShahedAlMashni&quot; title=&quot;Plugin/utility libraries&quot;&gt;üîå&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/AbdulTheActivePiecer&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/106555838?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;AbdulTheActivePiecer&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;AbdulTheActivePiecer&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#maintenance-AbdulTheActivePiecer&quot; title=&quot;Maintenance&quot;&gt;üöß&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/khaledmashaly&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/61781545?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Khaled Mashaly&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Khaled Mashaly&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#maintenance-khaledmashaly&quot; title=&quot;Maintenance&quot;&gt;üöß&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/abuaboud&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1812998?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Mohammed Abu Aboud&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Mohammed Abu Aboud&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#maintenance-abuaboud&quot; title=&quot;Maintenance&quot;&gt;üöß&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://aboudzein.github.io&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/12976630?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Abdulrahman Zeineddin&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Abdulrahman Zeineddin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-aboudzein&quot; title=&quot;Plugin/utility libraries&quot;&gt;üîå&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/creed983&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/62152944?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;ahmad jaber&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;ahmad jaber&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-creed983&quot; title=&quot;Plugin/utility libraries&quot;&gt;üîå&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/ashrafsamhouri&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/97393596?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;ashrafsamhouri&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;ashrafsamhouri&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-ashrafsamhouri&quot; title=&quot;Plugin/utility libraries&quot;&gt;üîå&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://steercampaign.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/12627658?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Mohammad Abu Musa&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Mohammad Abu Musa&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#projectManagement-mabumusa1&quot; title=&quot;Project Management&quot;&gt;üìÜ&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/kanarelo&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/393261?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Mukewa Wekalao&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Mukewa Wekalao&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-kanarelo&quot; title=&quot;Plugin/utility libraries&quot;&gt;üîå&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://osamahaikal.me/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/72370395?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Osama Abdallah Essa Haikal&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Osama Abdallah Essa Haikal&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-OsamaHaikal&quot; title=&quot;Plugin/utility libraries&quot;&gt;üîå&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/M-Arman&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/54455592?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Arman&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Arman&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#security-M-Arman&quot; title=&quot;Security&quot;&gt;üõ°Ô∏è&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/oskarkraemer&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/42745862?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Oskar Kr√§mer&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Oskar Kr√§mer&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/activepieces/activepieces/commits?author=oskarkraemer&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://thibpat.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/494686?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Thibaut Patel&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Thibaut Patel&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#ideas-tpatel&quot; title=&quot;Ideas, Planning, &amp; Feedback&quot;&gt;ü§î&lt;/a&gt; &lt;a href=&quot;#plugin-tpatel&quot; title=&quot;Plugin/utility libraries&quot;&gt;üîå&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/Applesaucesomer&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/18318905?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Applesaucesomer&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Applesaucesomer&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#ideas-Applesaucesomer&quot; title=&quot;Ideas, Planning, &amp; Feedback&quot;&gt;ü§î&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/crazyTweek&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/6828237?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;crazyTweek&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;crazyTweek&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#ideas-crazyTweek&quot; title=&quot;Ideas, Planning, &amp; Feedback&quot;&gt;ü§î&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://linkedin.com/in/muhammad-tabaza&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/23503983?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Muhammad Tabaza&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Muhammad Tabaza&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-m-tabaza&quot; title=&quot;Plugin/utility libraries&quot;&gt;üîå&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://shaypunter.co.uk&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/18310437?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Shay Punter&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Shay Punter&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/activepieces/activepieces/commits?author=ShayPunter&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt; &lt;a href=&quot;#plugin-ShayPunter&quot; title=&quot;Plugin/utility libraries&quot;&gt;üîå&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/abaza738&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/50132270?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;abaza738&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;abaza738&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-abaza738&quot; title=&quot;Plugin/utility libraries&quot;&gt;üîå&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/jonaboe&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/51358680?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Jona Boeddinghaus&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Jona Boeddinghaus&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-jonaboe&quot; title=&quot;Plugin/utility libraries&quot;&gt;üîå&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/fomojola&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/264253?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;fomojola&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;fomojola&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/activepieces/activepieces/commits?author=fomojola&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/astorozhevsky&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/11055414?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Alexander Storozhevsky&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Alexander Storozhevsky&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/activepieces/activepieces/commits?author=astorozhevsky&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/J0LGER&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/54769522?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;J0LGER&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;J0LGER&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#security-J0LGER&quot; title=&quot;Security&quot;&gt;üõ°Ô∏è&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://about.me/veverkap&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/22348?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Patrick Veverka&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Patrick Veverka&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/activepieces/activepieces/issues?q=author%3Aveverkap&quot; title=&quot;Bug reports&quot;&gt;üêõ&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://berksmbl.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/10000339?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Berk S√ºmb√ºl&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Berk S√ºmb√ºl&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/activepieces/activepieces/commits?author=berksmbl&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/Willianwg&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/51550522?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Willian Guedes&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Willian Guedes&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-Willianwg&quot; title=&quot;Plugin/utility libraries&quot;&gt;üîå&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/abdullahranginwala&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/19731056?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Abdullah Ranginwala&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Abdullah Ranginwala&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/activepieces/activepieces/commits?author=abdullahranginwala&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/dentych&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/2256372?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Dennis Tychsen&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Dennis Tychsen&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-dentych&quot; title=&quot;Plugin/utility libraries&quot;&gt;üîå&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/MyWay&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1765284?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;MyWay&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;MyWay&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-MyWay&quot; title=&quot;Plugin/utility libraries&quot;&gt;üîå&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/bibhuty-did-this&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/28416188?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Bibhuti Bhusan Panda&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Bibhuti Bhusan Panda&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-bibhuty-did-this&quot; title=&quot;Plugin/utility libraries&quot;&gt;üîå&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/tarunsamanta2k20&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/55488549?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Tarun Samanta&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Tarun Samanta&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/activepieces/activepieces/issues?q=author%3Atarunsamanta2k20&quot; title=&quot;Bug reports&quot;&gt;üêõ&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://www.linkedin.com/in/herman-kudria-10868b207/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/9007211?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Herman Kudria&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Herman Kudria&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-HKudria&quot; title=&quot;Plugin/utility libraries&quot;&gt;üîå&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://nulldev.imagefoo.com/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/66683380?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;[NULL] Dev&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;[NULL] Dev&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-Abdallah-Alwarawreh&quot; title=&quot;Plugin/utility libraries&quot;&gt;üîå&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/JanHolger&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/25184957?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Jan Bebendorf&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Jan Bebendorf&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-JanHolger&quot; title=&quot;Plugin/utility libraries&quot;&gt;üîå&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://blog.nileshtrivedi.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/19304?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Nilesh&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Nilesh&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-nileshtrivedi&quot; title=&quot;Plugin/utility libraries&quot;&gt;üîå&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://certopus.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/40790016?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Vraj Gohil&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Vraj Gohil&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-VrajGohil&quot; title=&quot;Plugin/utility libraries&quot;&gt;üîå&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/BastienMe&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/71411115?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;BastienMe&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;BastienMe&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-BastienMe&quot; title=&quot;Plugin/utility libraries&quot;&gt;üîå&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://blog.fosketts.net&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/8627862?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Stephen Foskett&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Stephen Foskett&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/activepieces/activepieces/commits?author=SFoskett&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://ganapati.fr&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/15729117?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Nathan&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Nathan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/activepieces/activepieces/commits?author=asuri0n&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://www.n-soft.pl&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/4056319?v=4?s=100&quot; width=&quot;100px;&quot; alt=

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[openai/openai-node]]></title>
            <link>https://github.com/openai/openai-node</link>
            <guid>https://github.com/openai/openai-node</guid>
            <pubDate>Mon, 12 May 2025 00:05:13 GMT</pubDate>
            <description><![CDATA[Official JavaScript / TypeScript library for the OpenAI API]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/openai/openai-node">openai/openai-node</a></h1>
            <p>Official JavaScript / TypeScript library for the OpenAI API</p>
            <p>Language: TypeScript</p>
            <p>Stars: 9,164</p>
            <p>Forks: 1,067</p>
            <p>Stars today: 9 stars today</p>
            <h2>README</h2><pre># OpenAI TypeScript and JavaScript API Library

[![NPM version](https://img.shields.io/npm/v/openai.svg)](https://npmjs.org/package/openai) ![npm bundle size](https://img.shields.io/bundlephobia/minzip/openai) [![JSR Version](https://jsr.io/badges/@openai/openai)](https://jsr.io/@openai/openai)

This library provides convenient access to the OpenAI REST API from TypeScript or JavaScript.

It is generated from our [OpenAPI specification](https://github.com/openai/openai-openapi) with [Stainless](https://stainlessapi.com/).

To learn how to use the OpenAI API, check out our [API Reference](https://platform.openai.com/docs/api-reference) and [Documentation](https://platform.openai.com/docs).

## Installation

```sh
npm install openai
```

### Installation from JSR

```sh
deno add jsr:@openai/openai
npx jsr add @openai/openai
```

These commands will make the module importable from the `@openai/openai` scope. You can also [import directly from JSR](https://jsr.io/docs/using-packages#importing-with-jsr-specifiers) without an install step if you&#039;re using the Deno JavaScript runtime:

```ts
import OpenAI from &#039;jsr:@openai/openai&#039;;
```

## Usage

The full API of this library can be found in [api.md file](api.md) along with many [code examples](https://github.com/openai/openai-node/tree/master/examples).

The primary API for interacting with OpenAI models is the [Responses API](https://platform.openai.com/docs/api-reference/responses). You can generate text from the model with the code below.

```ts
import OpenAI from &#039;openai&#039;;

const client = new OpenAI({
  apiKey: process.env[&#039;OPENAI_API_KEY&#039;], // This is the default and can be omitted
});

const response = await client.responses.create({
  model: &#039;gpt-4o&#039;,
  instructions: &#039;You are a coding assistant that talks like a pirate&#039;,
  input: &#039;Are semicolons optional in JavaScript?&#039;,
});

console.log(response.output_text);
```

The previous standard (supported indefinitely) for generating text is the [Chat Completions API](https://platform.openai.com/docs/api-reference/chat). You can use that API to generate text from the model with the code below.

```ts
import OpenAI from &#039;openai&#039;;

const client = new OpenAI({
  apiKey: process.env[&#039;OPENAI_API_KEY&#039;], // This is the default and can be omitted
});

const completion = await client.chat.completions.create({
  model: &#039;gpt-4o&#039;,
  messages: [
    { role: &#039;developer&#039;, content: &#039;Talk like a pirate.&#039; },
    { role: &#039;user&#039;, content: &#039;Are semicolons optional in JavaScript?&#039; },
  ],
});

console.log(completion.choices[0].message.content);
```

## Streaming responses

We provide support for streaming responses using Server Sent Events (SSE).

```ts
import OpenAI from &#039;openai&#039;;

const client = new OpenAI();

const stream = await client.responses.create({
  model: &#039;gpt-4o&#039;,
  input: &#039;Say &quot;Sheep sleep deep&quot; ten times fast!&#039;,
  stream: true,
});

for await (const event of stream) {
  console.log(event);
}
```

## File uploads

Request parameters that correspond to file uploads can be passed in many different forms:

- `File` (or an object with the same structure)
- a `fetch` `Response` (or an object with the same structure)
- an `fs.ReadStream`
- the return value of our `toFile` helper

```ts
import fs from &#039;fs&#039;;
import fetch from &#039;node-fetch&#039;;
import OpenAI, { toFile } from &#039;openai&#039;;

const client = new OpenAI();

// If you have access to Node `fs` we recommend using `fs.createReadStream()`:
await client.files.create({ file: fs.createReadStream(&#039;input.jsonl&#039;), purpose: &#039;fine-tune&#039; });

// Or if you have the web `File` API you can pass a `File` instance:
await client.files.create({ file: new File([&#039;my bytes&#039;], &#039;input.jsonl&#039;), purpose: &#039;fine-tune&#039; });

// You can also pass a `fetch` `Response`:
await client.files.create({ file: await fetch(&#039;https://somesite/input.jsonl&#039;), purpose: &#039;fine-tune&#039; });

// Finally, if none of the above are convenient, you can use our `toFile` helper:
await client.files.create({
  file: await toFile(Buffer.from(&#039;my bytes&#039;), &#039;input.jsonl&#039;),
  purpose: &#039;fine-tune&#039;,
});
await client.files.create({
  file: await toFile(new Uint8Array([0, 1, 2]), &#039;input.jsonl&#039;),
  purpose: &#039;fine-tune&#039;,
});
```

## Handling errors

When the library is unable to connect to the API,
or if the API returns a non-success status code (i.e., 4xx or 5xx response),
a subclass of `APIError` will be thrown:

&lt;!-- prettier-ignore --&gt;
```ts
async function main() {
  const job = await client.fineTuning.jobs
    .create({ model: &#039;gpt-4o&#039;, training_file: &#039;file-abc123&#039; })
    .catch(async (err) =&gt; {
      if (err instanceof OpenAI.APIError) {
        console.log(err.request_id);
        console.log(err.status); // 400
        console.log(err.name); // BadRequestError
        console.log(err.headers); // {server: &#039;nginx&#039;, ...}
      } else {
        throw err;
      }
    });
}

main();
```

Error codes are as followed:

| Status Code | Error Type                 |
| ----------- | -------------------------- |
| 400         | `BadRequestError`          |
| 401         | `AuthenticationError`      |
| 403         | `PermissionDeniedError`    |
| 404         | `NotFoundError`            |
| 422         | `UnprocessableEntityError` |
| 429         | `RateLimitError`           |
| &gt;=500       | `InternalServerError`      |
| N/A         | `APIConnectionError`       |

### Retries

Certain errors will be automatically retried 2 times by default, with a short exponential backoff.
Connection errors (for example, due to a network connectivity problem), 408 Request Timeout, 409 Conflict,
429 Rate Limit, and &gt;=500 Internal errors will all be retried by default.

You can use the `maxRetries` option to configure or disable this:

&lt;!-- prettier-ignore --&gt;
```js
// Configure the default for all requests:
const client = new OpenAI({
  maxRetries: 0, // default is 2
});

// Or, configure per-request:
await client.chat.completions.create({ messages: [{ role: &#039;user&#039;, content: &#039;How can I get the name of the current day in JavaScript?&#039; }], model: &#039;gpt-4o&#039; }, {
  maxRetries: 5,
});
```

### Timeouts

Requests time out after 10 minutes by default. You can configure this with a `timeout` option:

&lt;!-- prettier-ignore --&gt;
```ts
// Configure the default for all requests:
const client = new OpenAI({
  timeout: 20 * 1000, // 20 seconds (default is 10 minutes)
});

// Override per-request:
await client.chat.completions.create({ messages: [{ role: &#039;user&#039;, content: &#039;How can I list all files in a directory using Python?&#039; }], model: &#039;gpt-4o&#039; }, {
  timeout: 5 * 1000,
});
```

On timeout, an `APIConnectionTimeoutError` is thrown.

Note that requests which time out will be [retried twice by default](#retries).

## Request IDs

&gt; For more information on debugging requests, see [these docs](https://platform.openai.com/docs/api-reference/debugging-requests)

All object responses in the SDK provide a `_request_id` property which is added from the `x-request-id` response header so that you can quickly log failing requests and report them back to OpenAI.

```ts
const response = await client.responses.create({ model: &#039;gpt-4o&#039;, input: &#039;testing 123&#039; });
console.log(response._request_id) // req_123
```

You can also access the Request ID using the `.withResponse()` method:

```ts
const { data: stream, request_id } = await openai.responses
  .create({
    model: &#039;gpt-4o&#039;,
    input: &#039;Say this is a test&#039;,
    stream: true,
  })
  .withResponse();
```

## Auto-pagination

List methods in the OpenAI API are paginated.
You can use the `for await ‚Ä¶ of` syntax to iterate through items across all pages:

```ts
async function fetchAllFineTuningJobs(params) {
  const allFineTuningJobs = [];
  // Automatically fetches more pages as needed.
  for await (const fineTuningJob of client.fineTuning.jobs.list({ limit: 20 })) {
    allFineTuningJobs.push(fineTuningJob);
  }
  return allFineTuningJobs;
}
```

Alternatively, you can request a single page at a time:

```ts
let page = await client.fineTuning.jobs.list({ limit: 20 });
for (const fineTuningJob of page.data) {
  console.log(fineTuningJob);
}

// Convenience methods are provided for manually paginating:
while (page.hasNextPage()) {
  page = await page.getNextPage();
  // ...
}
```

## Realtime API Beta

The Realtime API enables you to build low-latency, multi-modal conversational experiences. It currently supports text and audio as both input and output, as well as [function calling](https://platform.openai.com/docs/guides/function-calling) through a `WebSocket` connection.

```ts
import { OpenAIRealtimeWebSocket } from &#039;openai/beta/realtime/websocket&#039;;

const rt = new OpenAIRealtimeWebSocket({ model: &#039;gpt-4o-realtime-preview-2024-12-17&#039; });

rt.on(&#039;response.text.delta&#039;, (event) =&gt; process.stdout.write(event.delta));
```

For more information see [realtime.md](realtime.md).

## Microsoft Azure OpenAI

To use this library with [Azure OpenAI](https://learn.microsoft.com/azure/ai-services/openai/overview), use the `AzureOpenAI`
class instead of the `OpenAI` class.

&gt; [!IMPORTANT]
&gt; The Azure API shape slightly differs from the core API shape which means that the static types for responses / params
&gt; won&#039;t always be correct.

```ts
import { AzureOpenAI } from &#039;openai&#039;;
import { getBearerTokenProvider, DefaultAzureCredential } from &#039;@azure/identity&#039;;

const credential = new DefaultAzureCredential();
const scope = &#039;https://cognitiveservices.azure.com/.default&#039;;
const azureADTokenProvider = getBearerTokenProvider(credential, scope);

const openai = new AzureOpenAI({ azureADTokenProvider, apiVersion: &quot;&lt;The API version, e.g. 2024-10-01-preview&gt;&quot; });

const result = await openai.chat.completions.create({
  model: &#039;gpt-4o&#039;,
  messages: [{ role: &#039;user&#039;, content: &#039;Say hello!&#039; }],
});

console.log(result.choices[0]!.message?.content);
```

For more information on support for the Azure API, see [azure.md](azure.md).

## Advanced Usage

### Accessing raw Response data (e.g., headers)

The &quot;raw&quot; `Response` returned by `fetch()` can be accessed through the `.asResponse()` method on the `APIPromise` type that all methods return.

You can also use the `.withResponse()` method to get the raw `Response` along with the parsed data.

&lt;!-- prettier-ignore --&gt;
```ts
const client = new OpenAI();

const httpResponse = await client.responses
  .create({ model: &#039;gpt-4o&#039;, input: &#039;say this is a test.&#039; })
  .asResponse();

// access the underlying web standard Response object
console.log(httpResponse.headers.get(&#039;X-My-Header&#039;));
console.log(httpResponse.statusText);

const { data: modelResponse, response: raw } = await client.responses
  .create({ model: &#039;gpt-4o&#039;, input: &#039;say this is a test.&#039; })
  .withResponse();
console.log(raw.headers.get(&#039;X-My-Header&#039;));
console.log(modelResponse);
```

### Making custom/undocumented requests

This library is typed for convenient access to the documented API. If you need to access undocumented
endpoints, params, or response properties, the library can still be used.

#### Undocumented endpoints

To make requests to undocumented endpoints, you can use `client.get`, `client.post`, and other HTTP verbs.
Options on the client, such as retries, will be respected when making these requests.

```ts
await client.post(&#039;/some/path&#039;, {
  body: { some_prop: &#039;foo&#039; },
  query: { some_query_arg: &#039;bar&#039; },
});
```

#### Undocumented request params

To make requests using undocumented parameters, you may use `// @ts-expect-error` on the undocumented
parameter. This library doesn&#039;t validate at runtime that the request matches the type, so any extra values you
send will be sent as-is.

```ts
client.foo.create({
  foo: &#039;my_param&#039;,
  bar: 12,
  // @ts-expect-error baz is not yet public
  baz: &#039;undocumented option&#039;,
});
```

For requests with the `GET` verb, any extra params will be in the query, all other requests will send the
extra param in the body.

If you want to explicitly send an extra argument, you can do so with the `query`, `body`, and `headers` request
options.

#### Undocumented response properties

To access undocumented response properties, you may access the response object with `// @ts-expect-error` on
the response object, or cast the response object to the requisite type. Like the request params, we do not
validate or strip extra properties from the response from the API.

### Customizing the fetch client

&gt; We&#039;re actively working on a new alpha version that migrates from `node-fetch` to builtin fetch.
&gt; 
&gt; Please try it out and let us know if you run into any issues!
&gt; https://community.openai.com/t/your-feedback-requested-node-js-sdk-5-0-0-alpha/1063774

By default, this library uses `node-fetch` in Node, and expects a global `fetch` function in other environments.

If you would prefer to use a global, web-standards-compliant `fetch` function even in a Node environment,
(for example, if you are running Node with `--experimental-fetch` or using NextJS which polyfills with `undici`),
add the following import before your first import `from &quot;OpenAI&quot;`:

```ts
// Tell TypeScript and the package to use the global web fetch instead of node-fetch.
// Note, despite the name, this does not add any polyfills, but expects them to be provided if needed.
import &#039;openai/shims/web&#039;;
import OpenAI from &#039;openai&#039;;
```

To do the inverse, add `import &quot;openai/shims/node&quot;` (which does import polyfills).
This can also be useful if you are getting the wrong TypeScript types for `Response` ([more details](https://github.com/openai/openai-node/tree/master/src/_shims#readme)).

### Logging and middleware

You may also provide a custom `fetch` function when instantiating the client,
which can be used to inspect or alter the `Request` or `Response` before/after each request:

```ts
import { fetch } from &#039;undici&#039;; // as one example
import OpenAI from &#039;openai&#039;;

const client = new OpenAI({
  fetch: async (url: RequestInfo, init?: RequestInit): Promise&lt;Response&gt; =&gt; {
    console.log(&#039;About to make a request&#039;, url, init);
    const response = await fetch(url, init);
    console.log(&#039;Got response&#039;, response);
    return response;
  },
});
```

Note that if given a `DEBUG=true` environment variable, this library will log all requests and responses automatically.
This is intended for debugging purposes only and may change in the future without notice.

### Configuring an HTTP(S) Agent (e.g., for proxies)

By default, this library uses a stable agent for all http/https requests to reuse TCP connections, eliminating many TCP &amp; TLS handshakes and shaving around 100ms off most requests.

If you would like to disable or customize this behavior, for example to use the API behind a proxy, you can pass an `httpAgent` which is used for all requests (be they http or https), for example:

&lt;!-- prettier-ignore --&gt;
```ts
import http from &#039;http&#039;;
import { HttpsProxyAgent } from &#039;https-proxy-agent&#039;;

// Configure the default for all requests:
const client = new OpenAI({
  httpAgent: new HttpsProxyAgent(process.env.PROXY_URL),
});

// Override per-request:
await client.models.list({
  httpAgent: new http.Agent({ keepAlive: false }),
});
```

## Semantic versioning

This package generally follows [SemVer](https://semver.org/spec/v2.0.0.html) conventions, though certain backwards-incompatible changes may be released as minor versions:

1. Changes that only affect static types, without breaking runtime behavior.
2. Changes to library internals which are technically public but not intended or documented for external use. _(Please open a GitHub issue to let us know if you are relying on such internals.)_
3. Changes that we do not expect to impact the vast majority of users in practice.

We take backwards-compatibility seriously and work hard to ensure you can rely on a smooth upgrade experience.

We are keen for your feedback; please open an [issue](https://www.github.com/openai/openai-node/issues) with questions, bugs, or suggestions.

## Requirements

TypeScript &gt;= 4.5 is supported.

The following runtimes are supported:

- Node.js 18 LTS or later ([non-EOL](https://endoflife.date/nodejs)) versions.
- Deno v1.28.0 or higher.
- Bun 1.0 or later.
- Cloudflare Workers.
- Vercel Edge Runtime.
- Jest 28 or greater with the `&quot;node&quot;` environment (`&quot;jsdom&quot;` is not supported at this time).
- Nitro v2.6 or greater.
- Web browsers: disabled by default to avoid exposing your secret API credentials. Enable browser support by explicitly setting `dangerouslyAllowBrowser` to true&#039;.
  &lt;details&gt;
    &lt;summary&gt;More explanation&lt;/summary&gt;

  ### Why is this dangerous?

  Enabling the `dangerouslyAllowBrowser` option can be dangerous because it exposes your secret API credentials in the client-side code. Web browsers are inherently less secure than server environments,
  any user with access to the browser can potentially inspect, extract, and misuse these credentials. This could lead to unauthorized access using your credentials and potentially compromise sensitive data or functionality.

  ### When might this not be dangerous?

  In certain scenarios where enabling browser support might not pose significant risks:

  - Internal Tools: If the application is used solely within a controlled internal environment where the users are trusted, the risk of credential exposure can be mitigated.
  - Public APIs with Limited Scope: If your API has very limited scope and the exposed credentials do not grant access to sensitive data or critical operations, the potential impact of exposure is reduced.
  - Development or debugging purpose: Enabling this feature temporarily might be acceptable, provided the credentials are short-lived, aren&#039;t also used in production environments, or are frequently rotated.

&lt;/details&gt;

Note that React Native is not supported at this time.

If you are interested in other runtime environments, please open or upvote an issue on GitHub.

## Contributing

See [the contributing documentation](./CONTRIBUTING.md).
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[heroui-inc/heroui]]></title>
            <link>https://github.com/heroui-inc/heroui</link>
            <guid>https://github.com/heroui-inc/heroui</guid>
            <pubDate>Mon, 12 May 2025 00:05:12 GMT</pubDate>
            <description><![CDATA[üöÄ Beautiful, fast and modern React UI library. (Previously NextUI)]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/heroui-inc/heroui">heroui-inc/heroui</a></h1>
            <p>üöÄ Beautiful, fast and modern React UI library. (Previously NextUI)</p>
            <p>Language: TypeScript</p>
            <p>Stars: 24,146</p>
            <p>Forks: 1,760</p>
            <p>Stars today: 10 stars today</p>
            <h2>README</h2><pre>packages/core/react/README.md</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[toeverything/AFFiNE]]></title>
            <link>https://github.com/toeverything/AFFiNE</link>
            <guid>https://github.com/toeverything/AFFiNE</guid>
            <pubDate>Mon, 12 May 2025 00:05:11 GMT</pubDate>
            <description><![CDATA[There can be more than Notion and Miro. AFFiNE(pronounced […ô‚Äòfain]) is a next-gen knowledge base that brings planning, sorting and creating all together. Privacy first, open-source, customizable and ready to use.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/toeverything/AFFiNE">toeverything/AFFiNE</a></h1>
            <p>There can be more than Notion and Miro. AFFiNE(pronounced […ô‚Äòfain]) is a next-gen knowledge base that brings planning, sorting and creating all together. Privacy first, open-source, customizable and ready to use.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 50,651</p>
            <p>Forks: 3,354</p>
            <p>Stars today: 41 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;

&lt;h1 style=&quot;border-bottom: none&quot;&gt;
    &lt;b&gt;&lt;a href=&quot;https://affine.pro&quot;&gt;AFFiNE.Pro&lt;/a&gt;&lt;/b&gt;&lt;br /&gt;
    Write, Draw and Plan All at Once
    &lt;br&gt;
&lt;/h1&gt;
&lt;a href=&quot;https://affine.pro/download&quot;&gt;
    &lt;img alt=&quot;affine logo&quot; src=&quot;https://cdn.affine.pro/Github_hero_image1.png&quot; style=&quot;width: 100%&quot;&gt;
&lt;/a&gt;
&lt;br/&gt;
&lt;p align=&quot;center&quot;&gt;
  A privacy-focused, local-first, open-source, and ready-to-use alternative for Notion &amp; Miro. &lt;br /&gt;
  One hyper-fused platform for wildly creative minds.
&lt;/p&gt;

&lt;br/&gt;

&lt;br/&gt;
&lt;a href=&quot;https://www.producthunt.com/posts/affine-3?utm_source=badge-featured&amp;utm_medium=badge&amp;utm_souce=badge-affine&amp;#0045;3&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=440671&amp;theme=light&quot; alt=&quot;AFFiNE - One&amp;#0032;app&amp;#0032;for&amp;#0032;all&amp;#0032;&amp;#0045;&amp;#0032;Where&amp;#0032;Notion&amp;#0032;meets&amp;#0032;Miro | Product Hunt&quot; style=&quot;width: 250px; height: 54px;&quot; width=&quot;250&quot; height=&quot;54&quot; /&gt;&lt;/a&gt;
&lt;br/&gt;
&lt;br/&gt;

&lt;div align=&quot;left&quot; valign=&quot;middle&quot;&gt;
&lt;a href=&quot;https://runblaze.dev&quot;&gt;
 &lt;picture&gt;
   &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://www.runblaze.dev/logo_dark.png&quot;&gt;
   &lt;img align=&quot;right&quot; src=&quot;https://www.runblaze.dev/logo_light.png&quot; height=&quot;102px&quot;/&gt;
 &lt;/picture&gt;
&lt;/a&gt;

&lt;br style=&quot;display: none;&quot;/&gt;

_Special thanks to [Blaze](https://runblaze.dev) for their support of this project. They provide high-performance Apple Silicon macOS and Linux (AMD64 &amp; ARM64) runners for GitHub Actions, greatly reducing our automated build times._

&lt;/div&gt;

&lt;br/&gt;
&lt;br/&gt;

&lt;div align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://affine.pro&quot;&gt;Home Page&lt;/a&gt; |
    &lt;a href=&quot;https://affine.pro/redirect/discord&quot;&gt;Discord&lt;/a&gt; |
    &lt;a href=&quot;https://app.affine.pro&quot;&gt;Live Demo&lt;/a&gt; |
    &lt;a href=&quot;https://affine.pro/blog/&quot;&gt;Blog&lt;/a&gt; |
    &lt;a href=&quot;https://docs.affine.pro/docs/&quot;&gt;Documentation&lt;/a&gt;
&lt;/div&gt;
&lt;br/&gt;

[![Releases](https://img.shields.io/github/downloads/toeverything/AFFiNE/total)](https://github.com/toeverything/AFFiNE/releases/latest)
[![All Contributors][all-contributors-badge]](#contributors)
[![TypeScript-version-icon]](https://www.typescriptlang.org/)

&lt;/div&gt;

&lt;br /&gt;
&lt;div align=&quot;center&quot;&gt;
&lt;em&gt;Docs, canvas and tables are hyper-merged with AFFiNE - just like the word affine (…ôÀàf å…™n | a-fine).&lt;/em&gt;
&lt;/div&gt;
&lt;br /&gt;

&lt;div align=&quot;center&quot;&gt;
&lt;img src=&quot;https://github.com/toeverything/AFFiNE/assets/79301703/49a426bb-8d2b-4216-891a-fa5993642253&quot; style=&quot;width: 100%&quot;/&gt;
&lt;/div&gt;

## Getting started &amp; staying tuned with us.

Star us, and you will receive all release notifications from GitHub without any delay!

&lt;img src=&quot;https://user-images.githubusercontent.com/79301703/230891830-0110681e-8c7e-483b-b6d9-9e42b291b9ef.gif&quot; style=&quot;width: 100%&quot;/&gt;

## What is AFFiNE

[AFFiNE](https://affine.pro) is an open-source, all-in-one workspace and an operating system for all the building blocks that assemble your knowledge base and much more -- wiki, knowledge management, presentation and digital assets. It&#039;s a better alternative to Notion and Miro.

## Features

**A true canvas for blocks in any form. Docs and whiteboard are now fully merged.**

- Many editor apps claim to be a canvas for productivity, but AFFiNE is one of the very few which allows you to put any building block on an edgeless canvas -- rich text, sticky notes, any embedded web pages, multi-view databases, linked pages, shapes and even slides. We have it all.

**Multimodal AI partner ready to kick in any work**

- Write up professional work report? Turn an outline into expressive and presentable slides? Summary an article into a well-structured mindmap? Sorting your job plan and backlog for tasks? Or... draw and code prototype apps and web pages directly all with one prompt? With you, [AFFiNE AI](https://affine.pro/ai) pushes your creativity to the edge of your imagination,just like [Canvas AI](https://affine.pro/blog/best-canvas-ai) to generate mind map for brainstorming.

**Local-first &amp; Real-time collaborative**

- We love the idea of local-first that you always own your data on your disk, in spite of the cloud. Furthermore, AFFiNE supports real-time sync and collaborations on web and cross-platform clients.

**Self-host &amp; Shape your own AFFiNE**

- You have the freedom to manage, self-host, fork and build your own AFFiNE. Plugin community and third-party blocks are coming soon. More tractions on [Blocksuite](https://blocksuite.io). Check there to learn how to [self-host AFFiNE](https://docs.affine.pro/docs/self-host-affine).

## Acknowledgement

‚ÄúWe shape our tools and thereafter our tools shape us‚Äù. A lot of pioneers have inspired us along the way, e.g.:

- Quip &amp; Notion with their great concept of ‚Äúeverything is a block‚Äù
- Trello with their Kanban
- Airtable &amp; Miro with their no-code programmable datasheets
- Miro &amp; Whimiscal with their edgeless visual whiteboard
- Remote &amp; Capacities with their object-based tag system

There is a large overlap of their atomic ‚Äúbuilding blocks‚Äù between these apps. They are not open source, nor do they have a plugin system like Vscode for contributors to customize. We want to have something that contains all the features we love and also goes one step even further.

Thanks for checking us out, we appreciate your interest and sincerely hope that AFFiNE resonates with you! üéµ Checking https://affine.pro/ for more details ions.

## Contributing

| Bug Reports                                                                                                                                         | Feature Requests                                                                                                                                               | Questions/Discussions                                                         | AFFiNE Community                                          |
| --------------------------------------------------------------------------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------- | --------------------------------------------------------- |
| [Create a bug report](https://github.com/toeverything/AFFiNE/issues/new?assignees=&amp;labels=bug%2Cproduct-review&amp;template=BUG-REPORT.yml&amp;title=TITLE) | [Submit a feature request](https://github.com/toeverything/AFFiNE/issues/new?assignees=&amp;labels=feat%2Cproduct-review&amp;template=FEATURE-REQUEST.yml&amp;title=TITLE) | [Check GitHub Discussion](https://github.com/toeverything/AFFiNE/discussions) | [Vist the AFFiNE Community](https://community.affine.pro) |
| Something isn&#039;t working as expected                                                                                                                 | An idea for a new feature, or improvements                                                                                                                     | Discuss and ask questions                                                     | A place to ask, learn and engage with others              |

Calling all developers, testers, tech writers and more! Contributions of all types are more than welcome, you can read more in [docs/types-of-contributions.md](docs/types-of-contributions.md). If you are interested in contributing code, read our [docs/CONTRIBUTING.md](docs/CONTRIBUTING.md) and feel free to check out our GitHub issues to get stuck in to show us what you‚Äôre made of.

**Before you start contributing, please make sure you have read and accepted our [Contributor License Agreement]. To indicate your agreement, simply edit this file and submit a pull request.**

For **bug reports**, **feature requests** and other **suggestions** you can also [create a new issue](https://github.com/toeverything/AFFiNE/issues/new/choose) and choose the most appropriate template for your feedback.

For **translation** and **language support** you can visit our [i18n General Space](https://community.affine.pro/c/i18n-general).

Looking for **other ways to contribute** and wondering where to start? Check out the [AFFiNE Ambassador program](https://community.affine.pro/c/start-here/affine-ambassador), we work closely with passionate community members and provide them with a wide range of support and resources.

If you have questions, you are welcome to contact us. One of the best places to get more info and learn more is in the [AFFiNE Community](https://community.affine.pro) where you can engage with other like-minded individuals.

## Templates

AFFiNE now provides pre-built [templates](https://affine.pro/templates) from our team. Following are the Top 10 most popular templates among AFFiNE users,if you want to contribute, you can contribute your own template so other people can use it too.

- [vision board template](https://affine.pro/templates/category-vision-board-template)
- [one pager template](https://affine.pro/templates/category-one-pager-template-free)
- [sample lesson plan math template](https://affine.pro/templates/sample-lesson-plan-math-template)
- [grr lesson plan template free](https://affine.pro/templates/grr-lesson-plan-template-free)
- [free editable lesson plan template for pre k](https://affine.pro/templates/free-editable-lesson-plan-template-for-pre-k)
- [high note collection planners](https://affine.pro/templates/high-note-collection-planners)
- [digital planner](https://affine.pro/templates/category-digital-planner)
- [ADHD Planner](https://affine.pro/templates/adhd-planner)
- [Reading Log](https://affine.pro/templates/reading-log)
- [Cornell Notes Template](https://affine.pro/templates/category-cornell-notes-template)

## Blog

Welcome to the AFFiNE blog section! Here, you‚Äôll find the latest insights, tips, and guides on how to maximize your experience with AFFiNE and AFFiNE AI, the leading Canvas AI tool for flexible note-taking and creative organization.

- [vision board template](https://affine.pro/blog/8-free-printable-vision-board-templates-examples-2023)
- [ai homework helper](https://affine.pro/blog/ai-homework-helper)
- [vision board maker](https://affine.pro/blog/vision-board-maker)
- [itinerary template](https://affine.pro/blog/free-customized-travel-itinerary-planner-templates)
- [one pager template](https://affine.pro/blog/top-12-one-pager-examples-how-to-create-your-own)
- [cornell notes template](https://affine.pro/blog/the-cornell-notes-template-and-system-learning-tips)
- [swot chart template](https://affine.pro/blog/top-10-free-editable-swot-analysis-template-examples)
- [apps like luna task](https://affine.pro/blog/apps-like-luna-task)
- [note taking ai from rough notes to mind map](https://affine.pro/blog/dynamic-AI-notes)
- [canvas ai](https://affine.pro/blog/best-canvas-ai)
- [one pager](https://affine.pro/blog/top-12-one-pager-examples-how-to-create-your-own)
- [SOP Template](https://affine.pro/blog/how-to-write-sop-step-by-step-guide-5-best-free-tools-templates)
- [Chore Chart](https://affine.pro/blog/10-best-free-chore-chart-templates-kids-adults)

## Ecosystem

| Name                                             |                            |                                                                                                                                         |
| ------------------------------------------------ | -------------------------- | --------------------------------------------------------------------------------------------------------------------------------------- |
| [@affine/component](packages/frontend/component) | AFFiNE Component Resources | ![](https://img.shields.io/codecov/c/github/toeverything/affine?style=flat-square)                                                      |
| [@toeverything/theme](packages/common/theme)     | AFFiNE theme               | [![](https://img.shields.io/npm/dm/@toeverything/theme?style=flat-square&amp;color=eee)](https://www.npmjs.com/package/@toeverything/theme) |

## Upstreams

We would also like to give thanks to open-source projects that make AFFiNE possible:

- [Blocksuite](https://github.com/toeverything/BlockSuite) - üí† BlockSuite is the open-source collaborative editor project behind AFFiNE.
- [OctoBase](https://github.com/toeverything/OctoBase) - üêô OctoBase is the open-source database behind AFFiNE, local-first, yet collaborative. A light-weight, scalable, data engine written in Rust.
- [yjs](https://github.com/yjs/yjs) - Fundamental support of CRDTs for our implementation on state management and data sync.
- [electron](https://github.com/electron/electron) - Build cross-platform desktop apps with JavaScript, HTML, and CSS.
- [React](https://github.com/facebook/react) - The library for web and native user interfaces.
- [napi-rs](https://github.com/napi-rs/napi-rs) - A framework for building compiled Node.js add-ons in Rust via Node-API.
- [Jotai](https://github.com/pmndrs/jotai) - Primitive and flexible state management for React.
- [async-call-rpc](https://github.com/Jack-Works/async-call-rpc) - A lightweight JSON RPC client &amp; server.
- [Vite](https://github.com/vitejs/vite) - Next generation frontend tooling.
- Other upstream [dependencies](https://github.com/toeverything/AFFiNE/network/dependencies).

Thanks a lot to the community for providing such powerful and simple libraries, so that we can focus more on the implementation of the product logic, and we hope that in the future our projects will also provide a more easy-to-use knowledge base for everyone.

## Contributors

We would like to express our gratitude to all the individuals who have already contributed to AFFiNE! If you have any AFFiNE-related project, documentation, tool or template, please feel free to contribute it by submitting a pull request to our curated list on GitHub: [awesome-affine](https://github.com/toeverything/awesome-affine).

&lt;a href=&quot;https://github.com/toeverything/affine/graphs/contributors&quot;&gt;
  &lt;img alt=&quot;contributors&quot; src=&quot;https://opencollective.com/affine/contributors.svg?width=890&amp;button=false&quot; /&gt;
&lt;/a&gt;

## Self-Host

Begin with Docker to deploy your own feature-rich, unrestricted version of AFFiNE. Our team is diligently updating to the latest version. For more information on how to self-host AFFiNE, please refer to our [documentation](https://docs.affine.pro/docs/self-host-affine).

## Hiring

Some amazing companies, including AFFiNE, are looking for developers! Are you interested in joining AFFiNE or its partners? Check out our [Discord channel](https://affine.pro/redirect/discord) for some of the latest jobs available.

## Feature Request

For feature requests, please see [community.affine.pro](https://community.affine.pro/c/feature-requests/).

## Building

### Codespaces

From the GitHub repo main page, click the green &quot;Code&quot; button and select &quot;Create codespace on master&quot;. This will open a new Codespace with the (supposedly auto-forked
AFFiNE repo cloned, built, and ready to go.

### Local

See [BUILDING.md] for instructions on how to build AFFiNE from source code.

## Contributing

We welcome contributions from everyone.
See [docs/contributing/tutorial.md](./docs/contributing/tutorial.md) for details.

## Thanks

&lt;a href=&quot;https://www.chromatic.com/&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/321738/84662277-e3db4f80-af1b-11ea-88f5-91d67a5e59f6.png&quot; width=&quot;153&quot; height=&quot;30&quot; alt=&quot;Chromatic&quot; /&gt;&lt;/a&gt;

Thanks to [Chromatic](https://www.chromatic.com/) for providing the visual testing platform that helps us review UI changes and catch visual regressions.

## License

### Editions

- AFFiNE Community Edition (CE) is the current available version, it&#039;s free for self-host under the MIT license.

- AFFiNE Enterprise Edition (EE) is yet to be published, it will have more advanced features and enterprise-oriented offerings, including but not exclusive to rebranding and SSO, advanced admin and audit, etc., you may refer to https://affine.pro/pricing for more information

See [LICENSE] for details.

[all-contributors-badge]: https://img.shields.io/github/contributors/toeverything/AFFiNE
[license]: ./LICENSE
[building.md]: ./docs/BUILDING.md
[update page]: https://affine.pro/blog?tag=Release%20Note
[jobs available]: ./docs/jobs.md
[latest packages]: https://github.com/toeverything/AFFiNE/pkgs/container/affine-self-hosted
[contributor license agreement]: https://github.com/toeverything/affine/edit/canary/.github/CLA.md
[stars-icon]: https://img.shields.io/github/stars/toeverything/AFFiNE.svg?style=flat&amp;logo=github&amp;colorB=red&amp;label=stars
[codecov]: https://codecov.io/gh/toeverything/affine/branch/canary/graphs/badge.svg?branch=canary
[node-version-icon]: https://img.shields.io/badge/node-%3E=18.16.1-success
[typescript-version-icon]: https://img.shields.io/github/package-json/dependency-version/toeverything/affine/dev/typescript
[react-version-icon]: https://img.shields.io/github/package-json/dependency-version/toeverything/AFFiNE/react?filename=packages%2Ffrontend%2Fcore%2Fpackage.json&amp;color=rgb(97%2C228%2C251)
[blocksuite-icon]: https://img.shields.io/github/package-json/dependency-version/toeverything/AFFiNE/@blocksuite/store?color=6880ff&amp;filename=packages%2Ffrontend%2Fcore%2Fpackage.json&amp;label=blocksuite
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
    </channel>
</rss>