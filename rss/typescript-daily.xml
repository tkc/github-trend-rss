<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for typescript - TypeScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for typescript.</description>
        <lastBuildDate>Tue, 08 Jul 2025 00:04:55 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[th-ch/youtube-music]]></title>
            <link>https://github.com/th-ch/youtube-music</link>
            <guid>https://github.com/th-ch/youtube-music</guid>
            <pubDate>Tue, 08 Jul 2025 00:04:55 GMT</pubDate>
            <description><![CDATA[YouTube Music Desktop App bundled with custom plugins]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/th-ch/youtube-music">th-ch/youtube-music</a></h1>
            <p>YouTube Music Desktop App bundled with custom plugins</p>
            <p>Language: TypeScript</p>
            <p>Stars: 24,911</p>
            <p>Forks: 1,339</p>
            <p>Stars today: 1,547 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;

# YouTube Music

[![GitHub release](https://img.shields.io/github/release/th-ch/youtube-music.svg?style=for-the-badge&amp;logo=youtube-music)](https://github.com/th-ch/youtube-music/releases/)
[![GitHub license](https://img.shields.io/github/license/th-ch/youtube-music.svg?style=for-the-badge)](https://github.com/th-ch/youtube-music/blob/master/license)
[![eslint code style](https://img.shields.io/badge/code_style-eslint-5ed9c7.svg?style=for-the-badge)](https://github.com/th-ch/youtube-music/blob/master/eslint.config.mjs)
[![Build status](https://img.shields.io/github/actions/workflow/status/th-ch/youtube-music/build.yml?branch=master&amp;style=for-the-badge&amp;logo=youtube-music)](https://GitHub.com/th-ch/youtube-music/releases/)
[![GitHub All Releases](https://img.shields.io/github/downloads/th-ch/youtube-music/total?style=for-the-badge&amp;logo=youtube-music)](https://GitHub.com/th-ch/youtube-music/releases/)
[![AUR](https://img.shields.io/aur/version/youtube-music-bin?color=blueviolet&amp;style=for-the-badge&amp;logo=youtube-music)](https://aur.archlinux.org/packages/youtube-music-bin)
[![Known Vulnerabilities](https://snyk.io/test/github/th-ch/youtube-music/badge.svg)](https://snyk.io/test/github/th-ch/youtube-music)

&lt;/div&gt;

![Screenshot](web/screenshot.png &quot;Screenshot&quot;)


&lt;div align=&quot;center&quot;&gt;
	&lt;a href=&quot;https://github.com/th-ch/youtube-music/releases/latest&quot;&gt;
		&lt;img src=&quot;web/youtube-music.svg&quot; width=&quot;400&quot; height=&quot;100&quot; alt=&quot;YouTube Music SVG&quot;&gt;
	&lt;/a&gt;
&lt;/div&gt;

Read this in other languages: [한국어](./docs/readme/README-ko.md), [Française](./docs/readme/README-fr.md), [Íslenska](./docs/readme/README-is.md), [Español](./docs/readme/README-es.md), [Pусский](./docs/readme/README-ru.md), [Українська](./docs/readme/README-uk.md), [Magyar](./docs/readme/README-hu.md), [Português](./docs/readme/README-pt.md), [日本語](./docs/readme/README-ja.md)

**Electron wrapper around YouTube Music featuring:**

- Native look &amp; feel, aims at keeping the original interface
- Framework for custom plugins: change YouTube Music to your needs (style, content, features), enable/disable plugins in
  one click

## Demo Image

|                          Player Screen (album color theme &amp; ambient light)                                |
|:---------------------------------------------------------------------------------------------------------:|
|![Screenshot1](https://github.com/th-ch/youtube-music/assets/16558115/53efdf73-b8fa-4d7b-a235-b96b91ea77fc)|

## Content

- [Features](#features)
- [Available plugins](#available-plugins)
- [Translation](#translation)
- [Download](#download)
  - [Arch Linux](#arch-linux)
  - [MacOS](#macos)
  - [Windows](#windows)
    - [How to install without a network connection? (in Windows)](#how-to-install-without-a-network-connection-in-windows)
- [Themes](#themes)
- [Dev](#dev)
- [Build your own plugins](#build-your-own-plugins)
  - [Creating a plugin](#creating-a-plugin)
  - [Common use cases](#common-use-cases)
- [Build](#build)
- [Production Preview](#production-preview)
- [Tests](#tests)
- [License](#license)
- [FAQ](#faq)

## Features:

- **Auto confirm when paused** (Always Enabled): disable
  the [&quot;Continue Watching?&quot;](https://user-images.githubusercontent.com/61631665/129977894-01c60740-7ec6-4bf0-9a2c-25da24491b0e.png)
  popup that pause music after a certain time

 - And more ...

## Available plugins:

- **Ad Blocker**: Block all ads and tracking out of the box

- **Album Actions**: Adds Undislike, Dislike, Like, and Unlike buttons to apply this to all songs in a playlist or album

- **Album Color Theme**: Applies a dynamic theme and visual effects based on the album color palette

- **Ambient Mode**: Applies a lighting effect by casting gentle colors from the video, into your screen’s background

- **Audio Compressor**: Apply compression to audio (lowers the volume of the loudest parts of the signal and raises the
  volume of the softest parts)

- **Blur Navigation Bar**: makes navigation bar transparent and blurry

- **Bypass Age Restrictions**: bypass YouTube&#039;s age verification

- **Captions Selector**: Enable captions

- **Compact Sidebar**: Always set the sidebar in compact mode

- **Crossfade**: Crossfade between songs

- **Disable Autoplay**: Makes every song start in &quot;paused&quot; mode

- **[Discord](https://discord.com/) Rich Presence**: Show your friends what you listen to
  with [Rich Presence](https://user-images.githubusercontent.com/28219076/104362104-a7a0b980-5513-11eb-9744-bb89eabe0016.png)

- **Downloader**: downloads
  MP3 [directly from the interface](https://user-images.githubusercontent.com/61631665/129977677-83a7d067-c192-45e1-98ae-b5a4927393be.png) [(youtube-dl)](https://github.com/ytdl-org/youtube-dl)

- **Equalizer**: add filters to boost or cut specific range of frequencies (e.g. bass booster)

- **Exponential Volume**: Makes the volume
  slider [exponential](https://greasyfork.org/en/scripts/397686-youtube-music-fix-volume-ratio/) so it&#039;s easier to
  select lower volumes

- **In-App Menu**: [gives bars a fancy, dark look](https://user-images.githubusercontent.com/78568641/112215894-923dbf00-8c29-11eb-95c3-3ce15db27eca.png)

  &gt; (see [this post](https://github.com/th-ch/youtube-music/issues/410#issuecomment-952060709) if you have problem
  accessing the menu after enabling this plugin and hide-menu option)

- **Scrobbler**: Adds scrobbling support for [Last.fm](https://www.last.fm/) and [ListenBrainz](https://listenbrainz.org/)

- **Lumia Stream**: Adds [Lumia Stream](https://lumiastream.com/) support

- **Lyrics Genius**: Adds lyrics support for most songs

- **Music Together**: Share a playlist with others. When the host plays a song, everyone else will hear the same song

- **Navigation**: Next/Back navigation arrows directly integrated in the interface, like in your favorite browser

- **No Google Login**: Remove Google login buttons and links from the interface

- **Notifications**: Display a notification when a song starts
  playing ([interactive notifications](https://user-images.githubusercontent.com/78568641/114102651-63ce0e00-98d0-11eb-9dfe-c5a02bb54f9c.png)
  are available on windows)

- **Picture-in-picture**: allows to switch the app to picture-in-picture mode

- **Playback Speed**: Listen fast, listen
  slow! [Adds a slider that controls song speed](https://user-images.githubusercontent.com/61631665/129976003-e55db5ba-bf42-448c-a059-26a009775e68.png)

- **Precise Volume**: Control the volume precisely using mousewheel/hotkeys, with a custom hud and customizable volume
  steps

- **Shortcuts (&amp; MPRIS)**: Allows setting global hotkeys for playback (play/pause/next/previous) +
  disable [media osd](https://user-images.githubusercontent.com/84923831/128601225-afa38c1f-dea8-4209-9f72-0f84c1dd8b54.png)
  by overriding media keys + enable Ctrl/CMD + F to search + enable linux mpris support for
  mediakeys + [custom hotkeys](https://github.com/Araxeus/youtube-music/blob/1e591d6a3df98449bcda6e63baab249b28026148/providers/song-controls.js#L13-L50)
  for [advanced users](https://github.com/th-ch/youtube-music/issues/106#issuecomment-952156902)

- **Skip Disliked Song**: Skips disliked songs

- **Skip Silences**: Automatically skip silenced sections

- [**SponsorBlock**](https://github.com/ajayyy/SponsorBlock): Automatically Skips non-music parts like intro/outro or
  parts of music videos where the song isn&#039;t playing

- **Synced Lyrics**: Provides synced lyrics to songs, using providers like [LRClib](https://lrclib.net).

- **Taskbar Media Control**: Control playback from
  your [Windows taskbar](https://user-images.githubusercontent.com/78568641/111916130-24a35e80-8a82-11eb-80c8-5021c1aa27f4.png)

- **TouchBar**: Custom TouchBar layout for macOS

- **Tuna OBS**: Integration with [OBS](https://obsproject.com/)&#039;s
  plugin [Tuna](https://obsproject.com/forum/resources/tuna.843/)

- **Video Quality Changer**: Allows changing the video quality with
  a [button](https://user-images.githubusercontent.com/78568641/138574366-70324a5e-2d64-4f6a-acdd-dc2a2b9cecc5.png) on
  the video overlay

- **Video Toggle**: Adds
  a [button](https://user-images.githubusercontent.com/28893833/173663950-63e6610e-a532-49b7-9afa-54cb57ddfc15.png) to
  switch between Video/Song mode. can also optionally remove the whole video tab

- **Visualizer**: Different music visualizers


## Translation

You can help with translation on [Hosted Weblate](https://hosted.weblate.org/projects/youtube-music/).

&lt;a href=&quot;https://hosted.weblate.org/engage/youtube-music/&quot;&gt;
  &lt;img src=&quot;https://hosted.weblate.org/widget/youtube-music/i18n/multi-auto.svg&quot; alt=&quot;translation status&quot; /&gt;
  &lt;img src=&quot;https://hosted.weblate.org/widget/youtube-music/i18n/287x66-black.png&quot; alt=&quot;translation status 2&quot; /&gt;
&lt;/a&gt;

## Download

You can check out the [latest release](https://github.com/th-ch/youtube-music/releases/latest) to quickly find the
latest version.

### Arch Linux

Install the [`youtube-music-bin`](https://aur.archlinux.org/packages/youtube-music-bin) package from the AUR. For AUR installation instructions, take a look at
this [wiki page](https://wiki.archlinux.org/index.php/Arch_User_Repository#Installing_packages).

### macOS

You can install the app using Homebrew (see the [cask definition](https://github.com/th-ch/homebrew-youtube-music)):

```bash
brew install th-ch/youtube-music/youtube-music
```

If you install the app manually and get an error &quot;is damaged and can’t be opened.&quot; when launching the app, run the following in the Terminal:

```bash
/usr/bin/xattr -cr /Applications/YouTube\ Music.app
```

### Windows

You can use the [Scoop package manager](https://scoop.sh) to install the `youtube-music` package from
the [`extras` bucket](https://github.com/ScoopInstaller/Extras).

```bash
scoop bucket add extras
scoop install extras/youtube-music
```

Alternately you can use [Winget](https://learn.microsoft.com/en-us/windows/package-manager/winget/), Windows 11s
official CLI package manager to install the `th-ch.YouTubeMusic` package.

*Note: Microsoft Defender SmartScreen might block the installation since it is from an &quot;unknown publisher&quot;. This is also
true for the manual installation when trying to run the executable(.exe) after a manual download here on github (same
file).*

```bash
winget install th-ch.YouTubeMusic
```

#### How to install without a network connection? (in Windows)

- Download the `*.nsis.7z` file for _your device architecture_ in [release page](https://github.com/th-ch/youtube-music/releases/latest).
  - `x64` for 64-bit Windows
  - `ia32` for 32-bit Windows
  - `arm64` for ARM64 Windows
- Download installer in release page. (`*-Setup.exe`)
- Place them in the **same directory**.
- Run the installer.

## Themes

You can load CSS files to change the look of the application (Options &gt; Visual Tweaks &gt; Themes).

Some predefined themes are available in https://github.com/kerichdev/themes-for-ytmdesktop-player.

## Dev

```bash
git clone https://github.com/th-ch/youtube-music
cd youtube-music
pnpm install --frozen-lockfile
pnpm dev
```

## Build your own plugins

Using plugins, you can:

- manipulate the app - the `BrowserWindow` from electron is passed to the plugin handler
- change the front by manipulating the HTML/CSS

### Creating a plugin

Create a folder in `src/plugins/YOUR-PLUGIN-NAME`:

- `index.ts`: the main file of the plugin
```typescript
import style from &#039;./style.css?inline&#039;; // import style as inline

import { createPlugin } from &#039;@/utils&#039;;

export default createPlugin({
  name: &#039;Plugin Label&#039;,
  restartNeeded: true, // if value is true, ytmusic show restart dialog
  config: {
    enabled: false,
  }, // your custom config
  stylesheets: [style], // your custom style,
  menu: async ({ getConfig, setConfig }) =&gt; {
    // All *Config methods are wrapped Promise&lt;T&gt;
    const config = await getConfig();
    return [
      {
        label: &#039;menu&#039;,
        submenu: [1, 2, 3].map((value) =&gt; ({
          label: `value ${value}`,
          type: &#039;radio&#039;,
          checked: config.value === value,
          click() {
            setConfig({ value });
          },
        })),
      },
    ];
  },
  backend: {
    start({ window, ipc }) {
      window.maximize();

      // you can communicate with renderer plugin
      ipc.handle(&#039;some-event&#039;, () =&gt; {
        return &#039;hello&#039;;
      });
    },
    // it fired when config changed
    onConfigChange(newConfig) { /* ... */ },
    // it fired when plugin disabled
    stop(context) { /* ... */ },
  },
  renderer: {
    async start(context) {
      console.log(await context.ipc.invoke(&#039;some-event&#039;));
    },
    // Only renderer available hook
    onPlayerApiReady(api: YoutubePlayer, context: RendererContext) {
      // set plugin config easily
      context.setConfig({ myConfig: api.getVolume() });
    },
    onConfigChange(newConfig) { /* ... */ },
    stop(_context) { /* ... */ },
  },
  preload: {
    async start({ getConfig }) {
      const config = await getConfig();
    },
    onConfigChange(newConfig) {},
    stop(_context) {},
  },
});
```

### Common use cases

- injecting custom CSS: create a `style.css` file in the same folder then:

```typescript
// index.ts
import style from &#039;./style.css?inline&#039;; // import style as inline

import { createPlugin } from &#039;@/utils&#039;;

export default createPlugin({
  name: &#039;Plugin Label&#039;,
  restartNeeded: true, // if value is true, ytmusic will show a restart dialog
  config: {
    enabled: false,
  }, // your custom config
  stylesheets: [style], // your custom style
  renderer() {} // define renderer hook
});
```

- If you want to change the HTML:

```typescript
import { createPlugin } from &#039;@/utils&#039;;

export default createPlugin({
  name: &#039;Plugin Label&#039;,
  restartNeeded: true, // if value is true, ytmusic will show the restart dialog
  config: {
    enabled: false,
  }, // your custom config
  renderer() {
    // Remove the login button
    document.querySelector(&quot;.sign-in-link.ytmusic-nav-bar&quot;).remove();
  } // define renderer hook
});
```

- communicating between the front and back: can be done using the ipcMain module from electron. See `index.ts` file and
  example in `sponsorblock` plugin.

## Build

1. Clone the repo
2. Follow [this guide](https://pnpm.io/installation) to install `pnpm`
3. Run `pnpm install --frozen-lockfile` to install dependencies
4. Run `pnpm build:OS`

- `pnpm dist:win` - Windows
- `pnpm dist:linux` - Linux (amd64)
- `pnpm dist:linux:deb-arm64` - Linux (arm64 for Debian)
- `pnpm dist:linux:rpm-arm64` - Linux (arm64 for Fedora)
- `pnpm dist:mac` - macOS (amd64)
- `pnpm dist:mac:arm64` - macOS (arm64)

Builds the app for macOS, Linux, and Windows,
using [electron-builder](https://github.com/electron-userland/electron-builder).

## Production Preview

```bash
pnpm start
```

## Tests

```bash
pnpm test
```

Uses [Playwright](https://playwright.dev/) to test the app.

## License

MIT © [th-ch](https://github.com/th-ch/youtube-music)

## FAQ

### Why apps menu isn&#039;t showing up?

If `Hide Menu` option is on - you can show the menu with the &lt;kbd&gt;alt&lt;/kbd&gt; key (or &lt;kbd&gt;\`&lt;/kbd&gt; [backtick] if using
the in-app-menu plugin)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[humanlayer/12-factor-agents]]></title>
            <link>https://github.com/humanlayer/12-factor-agents</link>
            <guid>https://github.com/humanlayer/12-factor-agents</guid>
            <pubDate>Tue, 08 Jul 2025 00:04:54 GMT</pubDate>
            <description><![CDATA[What are the principles we can use to build LLM-powered software that is actually good enough to put in the hands of production customers?]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/humanlayer/12-factor-agents">humanlayer/12-factor-agents</a></h1>
            <p>What are the principles we can use to build LLM-powered software that is actually good enough to put in the hands of production customers?</p>
            <p>Language: TypeScript</p>
            <p>Stars: 6,686</p>
            <p>Forks: 435</p>
            <p>Stars today: 368 stars today</p>
            <h2>README</h2><pre># 12-Factor Agents - Principles for building reliable LLM applications

&lt;div align=&quot;center&quot;&gt;
&lt;a href=&quot;https://www.apache.org/licenses/LICENSE-2.0&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/badge/Code-Apache%202.0-blue.svg&quot; alt=&quot;Code License: Apache 2.0&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://creativecommons.org/licenses/by-sa/4.0/&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/badge/Content-CC%20BY--SA%204.0-lightgrey.svg&quot; alt=&quot;Content License: CC BY-SA 4.0&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://discord.gg/WffDJYazzy&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/chat-discord-5865F2&quot; alt=&quot;Discord Server&quot;&gt;&lt;/a&gt;    
&lt;a href=&quot;https://www.youtube.com/watch?v=yxJDyQ8v6P0&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/youtube-deep_dive-crimson&quot; alt=&quot;YouTube
Deep Dive&quot;&gt;&lt;/a&gt;
    
&lt;/div&gt;

*In the spirit of [12 Factor Apps](https://12factor.net/)*.  *The source for this project is public at https://github.com/humanlayer/12-factor-agents, and I welcome your feedback and contributions. Let&#039;s figure this out together!*


&lt;img referrerpolicy=&quot;no-referrer-when-downgrade&quot; src=&quot;https://static.scarf.sh/a.png?x-pxid=2acad99a-c2d9-48df-86f5-9ca8061b7bf9&quot; /&gt;

&lt;a href=&quot;#visual-nav&quot;&gt;&lt;img width=&quot;907&quot; alt=&quot;Screenshot 2025-04-03 at 2 49 07 PM&quot; src=&quot;https://github.com/user-attachments/assets/23286ad8-7bef-4902-b371-88ff6a22e998&quot; /&gt;&lt;/a&gt;


Hi, I&#039;m Dex. I&#039;ve been [hacking](https://youtu.be/8bIHcttkOTE) on [AI agents](https://theouterloop.substack.com) for [a while](https://humanlayer.dev). 


**I&#039;ve tried every agent framework out there**, from the plug-and-play crew/langchains to the &quot;minimalist&quot; smolagents of the world to the &quot;production grade&quot; langraph, griptape, etc. 

**I&#039;ve talked to a lot of really strong founders**, in and out of YC, who are all building really impressive things with AI. Most of them are rolling the stack themselves. I don&#039;t see a lot of frameworks in production customer-facing agents.

**I&#039;ve been surprised to find** that most of the products out there billing themselves as &quot;AI Agents&quot; are not all that agentic. A lot of them are mostly deterministic code, with LLM steps sprinkled in at just the right points to make the experience truly magical.

Agents, at least the good ones, don&#039;t follow the [&quot;here&#039;s your prompt, here&#039;s a bag of tools, loop until you hit the goal&quot;](https://www.anthropic.com/engineering/building-effective-agents#agents) pattern. Rather, they are comprised of mostly just software. 

So, I set out to answer:

&gt; ### **What are the principles we can use to build LLM-powered software that is actually good enough to put in the hands of production customers?**

Welcome to 12-factor agents. As every Chicago mayor since Daley has consistently plastered all over the city&#039;s major airports, we&#039;re glad you&#039;re here.

*Special thanks to [@iantbutler01](https://github.com/iantbutler01), [@tnm](https://github.com/tnm), [@hellovai](https://www.github.com/hellovai), [@stantonk](https://www.github.com/stantonk), [@balanceiskey](https://www.github.com/balanceiskey), [@AdjectiveAllison](https://www.github.com/AdjectiveAllison), [@pfbyjy](https://www.github.com/pfbyjy), [@a-churchill](https://www.github.com/a-churchill), and the SF MLOps community for early feedback on this guide.*

## The Short Version: The 12 Factors

Even if LLMs [continue to get exponentially more powerful](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-10-small-focused-agents.md#what-if-llms-get-smarter), there will be core engineering techniques that make LLM-powered software more reliable, more scalable, and easier to maintain.

- [How We Got Here: A Brief History of Software](https://github.com/humanlayer/12-factor-agents/blob/main/content/brief-history-of-software.md)
- [Factor 1: Natural Language to Tool Calls](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-01-natural-language-to-tool-calls.md)
- [Factor 2: Own your prompts](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-02-own-your-prompts.md)
- [Factor 3: Own your context window](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-03-own-your-context-window.md)
- [Factor 4: Tools are just structured outputs](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-04-tools-are-structured-outputs.md)
- [Factor 5: Unify execution state and business state](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-05-unify-execution-state.md)
- [Factor 6: Launch/Pause/Resume with simple APIs](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-06-launch-pause-resume.md)
- [Factor 7: Contact humans with tool calls](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-07-contact-humans-with-tools.md)
- [Factor 8: Own your control flow](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-08-own-your-control-flow.md)
- [Factor 9: Compact Errors into Context Window](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-09-compact-errors.md)
- [Factor 10: Small, Focused Agents](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-10-small-focused-agents.md)
- [Factor 11: Trigger from anywhere, meet users where they are](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-11-trigger-from-anywhere.md)
- [Factor 12: Make your agent a stateless reducer](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-12-stateless-reducer.md)

### Visual Nav

|    |    |    |
|----|----|-----|
|[![factor 1](https://github.com/humanlayer/12-factor-agents/blob/main/img/110-natural-language-tool-calls.png)](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-01-natural-language-to-tool-calls.md) | [![factor 2](https://github.com/humanlayer/12-factor-agents/blob/main/img/120-own-your-prompts.png)](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-02-own-your-prompts.md) | [![factor 3](https://github.com/humanlayer/12-factor-agents/blob/main/img/130-own-your-context-building.png)](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-03-own-your-context-window.md) |
|[![factor 4](https://github.com/humanlayer/12-factor-agents/blob/main/img/140-tools-are-just-structured-outputs.png)](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-04-tools-are-structured-outputs.md) | [![factor 5](https://github.com/humanlayer/12-factor-agents/blob/main/img/150-unify-state.png)](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-05-unify-execution-state.md) | [![factor 6](https://github.com/humanlayer/12-factor-agents/blob/main/img/160-pause-resume-with-simple-apis.png)](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-06-launch-pause-resume.md) |
| [![factor 7](https://github.com/humanlayer/12-factor-agents/blob/main/img/170-contact-humans-with-tools.png)](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-07-contact-humans-with-tools.md) | [![factor 8](https://github.com/humanlayer/12-factor-agents/blob/main/img/180-control-flow.png)](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-08-own-your-control-flow.md) | [![factor 9](https://github.com/humanlayer/12-factor-agents/blob/main/img/190-factor-9-errors-static.png)](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-09-compact-errors.md) |
| [![factor 10](https://github.com/humanlayer/12-factor-agents/blob/main/img/1a0-small-focused-agents.png)](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-10-small-focused-agents.md) | [![factor 11](https://github.com/humanlayer/12-factor-agents/blob/main/img/1b0-trigger-from-anywhere.png)](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-11-trigger-from-anywhere.md) | [![factor 12](https://github.com/humanlayer/12-factor-agents/blob/main/img/1c0-stateless-reducer.png)](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-12-stateless-reducer.md) |

## How we got here

For a deeper dive on my agent journey and what led us here, check out [A Brief History of Software](https://github.com/humanlayer/12-factor-agents/blob/main/content/brief-history-of-software.md) - a quick summary here:

### The promise of agents

We&#039;re gonna talk a lot about Directed Graphs (DGs) and their Acyclic friends, DAGs. I&#039;ll start by pointing out that...well...software is a directed graph. There&#039;s a reason we used to represent programs as flow charts.

![010-software-dag](https://github.com/humanlayer/12-factor-agents/blob/main/img/010-software-dag.png)

### From code to DAGs

Around 20 years ago, we started to see DAG orchestrators become popular. We&#039;re talking classics like [Airflow](https://airflow.apache.org/), [Prefect](https://www.prefect.io/), some predecessors, and some newer ones like ([dagster](https://dagster.io/), [inggest](https://www.inngest.com/), [windmill](https://www.windmill.dev/)). These followed the same graph pattern, with the added benefit of observability, modularity, retries, administration, etc.

![015-dag-orchestrators](https://github.com/humanlayer/12-factor-agents/blob/main/img/015-dag-orchestrators.png)

### The promise of agents

I&#039;m not the first [person to say this](https://youtu.be/Dc99-zTMyMg?si=bcT0hIwWij2mR-40&amp;t=73), but my biggest takeaway when I started learning about agents, was that you get to throw the DAG away. Instead of software engineers coding each step and edge case, you can give the agent a goal and a set of transitions:

![025-agent-dag](https://github.com/humanlayer/12-factor-agents/blob/main/img/025-agent-dag.png)

And let the LLM make decisions in real time to figure out the path

![026-agent-dag-lines](https://github.com/humanlayer/12-factor-agents/blob/main/img/026-agent-dag-lines.png)

The promise here is that you write less software, you just give the LLM the &quot;edges&quot; of the graph and let it figure out the nodes. You can recover from errors, you can write less code, and you may find that LLMs find novel solutions to problems.


### Agents as loops

As we&#039;ll see later, it turns out this doesn&#039;t quite work.

Let&#039;s dive one step deeper - with agents you&#039;ve got this loop consisting of 3 steps:

1. LLM determines the next step in the workflow, outputting structured json (&quot;tool calling&quot;)
2. Deterministic code executes the tool call
3. The result is appended to the context window 
4. Repeat until the next step is determined to be &quot;done&quot;

```python
initial_event = {&quot;message&quot;: &quot;...&quot;}
context = [initial_event]
while True:
  next_step = await llm.determine_next_step(context)
  context.append(next_step)

  if (next_step.intent === &quot;done&quot;):
    return next_step.final_answer

  result = await execute_step(next_step)
  context.append(result)
```

Our initial context is just the starting event (maybe a user message, maybe a cron fired, maybe a webhook, etc), and we ask the llm to choose the next step (tool) or to determine that we&#039;re done.

Here&#039;s a multi-step example:

[![027-agent-loop-animation](https://github.com/humanlayer/12-factor-agents/blob/main/img/027-agent-loop-animation.gif)](https://github.com/user-attachments/assets/3beb0966-fdb1-4c12-a47f-ed4e8240f8fd)

&lt;details&gt;
&lt;summary&gt;&lt;a href=&quot;https://github.com/humanlayer/12-factor-agents/blob/main/img/027-agent-loop-animation.gif&quot;&gt;GIF Version&lt;/a&gt;&lt;/summary&gt;

![027-agent-loop-animation](https://github.com/humanlayer/12-factor-agents/blob/main/img/027-agent-loop-animation.gif)]

&lt;/details&gt;

## Why 12-factor agents?

At the end of the day, this approach just doesn&#039;t work as well as we want it to.

In building HumanLayer, I&#039;ve talked to at least 100 SaaS builders (mostly technical founders) looking to make their existing product more agentic. The journey usually goes something like:

1. Decide you want to build an agent
2. Product design, UX mapping, what problems to solve
3. Want to move fast, so grab $FRAMEWORK and *get to building*
4. Get to 70-80% quality bar 
5. Realize that 80% isn&#039;t good enough for most customer-facing features
6. Realize that getting past 80% requires reverse-engineering the framework, prompts, flow, etc.
7. Start over from scratch

&lt;details&gt;
&lt;summary&gt;Random Disclaimers&lt;/summary&gt;

**DISCLAIMER**: I&#039;m not sure the exact right place to say this, but here seems as good as any: **this in BY NO MEANS meant to be a dig on either the many frameworks out there, or the pretty dang smart people who work on them**. They enable incredible things and have accelerated the AI ecosystem. 

I hope that one outcome of this post is that agent framework builders can learn from the journeys of myself and others, and make frameworks even better. 

Especially for builders who want to move fast but need deep control.

**DISCLAIMER 2**: I&#039;m not going to talk about MCP. I&#039;m sure you can see where it fits in.

**DISCLAIMER 3**: I&#039;m using mostly typescript, for [reasons](https://www.linkedin.com/posts/dexterihorthy_llms-typescript-aiagents-activity-7290858296679313408-Lh9e?utm_source=share&amp;utm_medium=member_desktop&amp;rcm=ACoAAA4oHTkByAiD-wZjnGsMBUL_JT6nyyhOh30) but all this stuff works in python or any other language you prefer. 


Anyways back to the thing...

&lt;/details&gt;

### Design Patterns for great LLM applications

After digging through hundreds of AI libriaries and working with dozens of founders, my instinct is this:

1. There are some core things that make agents great
2. Going all in on a framework and building what is essentially a greenfield rewrite may be counter-productive
3. There are some core principles that make agents great, and you will get most/all of them if you pull in a framework
4. BUT, the fastest way I&#039;ve seen for builders to get high-quality AI software in the hands of customers is to take small, modular concepts from agent building, and incorporate them into their existing product
5. These modular concepts from agents can be defined and applied by most skilled software engineers, even if they don&#039;t have an AI background

&gt; #### The fastest way I&#039;ve seen for builders to get good AI software in the hands of customers is to take small, modular concepts from agent building, and incorporate them into their existing product


## The 12 Factors (again)


- [How We Got Here: A Brief History of Software](https://github.com/humanlayer/12-factor-agents/blob/main/content/brief-history-of-software.md)
- [Factor 1: Natural Language to Tool Calls](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-01-natural-language-to-tool-calls.md)
- [Factor 2: Own your prompts](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-02-own-your-prompts.md)
- [Factor 3: Own your context window](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-03-own-your-context-window.md)
- [Factor 4: Tools are just structured outputs](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-04-tools-are-structured-outputs.md)
- [Factor 5: Unify execution state and business state](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-05-unify-execution-state.md)
- [Factor 6: Launch/Pause/Resume with simple APIs](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-06-launch-pause-resume.md)
- [Factor 7: Contact humans with tool calls](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-07-contact-humans-with-tools.md)
- [Factor 8: Own your control flow](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-08-own-your-control-flow.md)
- [Factor 9: Compact Errors into Context Window](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-09-compact-errors.md)
- [Factor 10: Small, Focused Agents](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-10-small-focused-agents.md)
- [Factor 11: Trigger from anywhere, meet users where they are](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-11-trigger-from-anywhere.md)
- [Factor 12: Make your agent a stateless reducer](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-12-stateless-reducer.md)

## Honorable Mentions / other advice

- [Factor 13: Pre-fetch all the context you might need](https://github.com/humanlayer/12-factor-agents/blob/main/content/appendix-13-pre-fetch.md)

## Related Resources

- Contribute to this guide [here](https://github.com/humanlayer/12-factor-agents)
- [I talked about a lot of this on an episode of the Tool Use podcast](https://youtu.be/8bIHcttkOTE) in March 2025
- I write about some of this stuff at [The Outer Loop](https://theouterloop.substack.com)
- I do [webinars about Maximizing LLM Performance](https://github.com/hellovai/ai-that-works/tree/main) with [@hellovai](https://github.com/hellovai)
- We build OSS agents with this methodology under [got-agents/agents](https://github.com/got-agents/agents)
- We ignored all our own advice and built a [framework for running distributed agents in kubernetes](https://github.com/humanlayer/kubechain)
- Other links from this guide:
  - [12 Factor Apps](https://12factor.net)
  - [Building Effective Agents (Anthropic)](https://www.anthropic.com/engineering/building-effective-agents#agents)
  - [Prompts are Functions](https://thedataexchange.media/baml-revolution-in-ai-engineering/ )
  - [Library patterns: Why frameworks are evil](https://tomasp.net/blog/2015/library-frameworks/)
  - [The Wrong Abstraction](https://sandimetz.com/blog/2016/1/20/the-wrong-abstraction)
  - [Mailcrew Agent](https://github.com/dexhorthy/mailcrew)
  - [Mailcrew Demo Video](https://www.youtube.com/watch?v=f_cKnoPC_Oo)
  - [Chainlit Demo](https://x.com/chainlit_io/status/1858613325921480922)
  - [TypeScript for LLMs](https://www.linkedin.com/posts/dexterihorthy_llms-typescript-aiagents-activity-7290858296679313408-Lh9e)
  - [Schema Aligned Parsing](https://www.boundaryml.com/blog/schema-aligned-parsing)
  - [Function Calling vs Structured Outputs vs JSON Mode](https://www.vellum.ai/blog/when-should-i-use-function-calling-structured-outputs-or-json-mode)
  - [BAML on GitHub](https://github.com/boundaryml/baml)
  - [OpenAI JSON vs Function Calling](https://docs.llamaindex.ai/en/stable/examples/llm/openai_json_vs_function_calling/)
  - [Outer Loop Agents](https://theouterloop.substack.com/p/openais-realtime-api-is-a-step-towards)
  - [Airflow](https://airflow.apache.org/)
  - [Prefect](https://www.prefect.io/)
  - [Dagster](https://dagster.io/)
  - [Inngest](https://www.inngest.com/)
  - [Windmill](https://www.windmill.dev/)
  - [The AI Agent Index (MIT)](https://aiagentindex.mit.edu/)
  - [NotebookLM on Finding Model Capability Boundaries](https://open.substack.com/pub/swyx/p/notebooklm?selection=08e1187c-cfee-4c63-93c9-71216640a5f8)

## Contributors

Thanks to everyone who has contributed to 12-factor agents!

[&lt;img src=&quot;https://avatars.githubusercontent.com/u/3730605?v=4&amp;s=80&quot; width=&quot;80px&quot; alt=&quot;dexhorthy&quot; /&gt;](https://github.com/dexhorthy) [&lt;img src=&quot;https://avatars.githubusercontent.com/u/50557586?v=4&amp;s=80&quot; width=&quot;80px&quot; alt=&quot;Sypherd&quot; /&gt;](https://github.com/Sypherd) [&lt;img src=&quot;https://avatars.githubusercontent.com/u/66259401?v=4&amp;s=80&quot; width=&quot;80px&quot; alt=&quot;tofaramususa&quot; /&gt;](https://github.com/tofaramususa) [&lt;img src=&quot;https://avatars.githubusercontent.com/u/18105223?v=4&amp;s=80&quot; width=&quot;80px&quot; alt=&quot;a-churchill&quot; /&gt;](https://github.com/a-churchill) [&lt;img src=&quot;https://avatars.githubusercontent.com/u/4084885?v=4&amp;s=80&quot; width=&quot;80px&quot; alt=&quot;Elijas&quot; /&gt;](https://github.com/Elijas) [&lt;img src=&quot;https://avatars.githubusercontent.com/u/39267118?v=4&amp;s=80&quot; width=&quot;80px&quot; alt=&quot;hugolmn&quot; /&gt;](https://github.com/hugolmn) [&lt;img src=&quot;https://avatars.githubusercontent.com/u/1882972?v=4&amp;s=80&quot; width=&quot;80px&quot; alt=&quot;jeremypeters&quot; /&gt;](https://github.com/jeremypeters)

[&lt;img src=&quot;https://avatars.githubusercontent.com/u/380402?v=4&amp;s=80&quot; width=&quot;80px&quot; alt=&quot;kndl&quot; /&gt;](https://github.com/kndl) [&lt;img src=&quot;https://avatars.githubusercontent.com/u/16674643?v=4&amp;s=80&quot; width=&quot;80px&quot; alt=&quot;maci

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[iib0011/omni-tools]]></title>
            <link>https://github.com/iib0011/omni-tools</link>
            <guid>https://github.com/iib0011/omni-tools</guid>
            <pubDate>Tue, 08 Jul 2025 00:04:53 GMT</pubDate>
            <description><![CDATA[Self-hosted collection of powerful web-based tools for everyday tasks. No ads, no tracking, just fast, accessible utilities right from your browser!]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/iib0011/omni-tools">iib0011/omni-tools</a></h1>
            <p>Self-hosted collection of powerful web-based tools for everyday tasks. No ads, no tracking, just fast, accessible utilities right from your browser!</p>
            <p>Language: TypeScript</p>
            <p>Stars: 4,829</p>
            <p>Forks: 236</p>
            <p>Stars today: 413 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
        &lt;img src=&quot;src/assets/logo.png&quot; width=&quot;300&quot; /&gt;
        &lt;br /&gt;&lt;br /&gt;
&lt;a href=&quot;https://trendshift.io/repositories/13055&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://trendshift.io/api/badge/repositories/13055&quot; alt=&quot;iib0011%2Fomni-tools | Trendshift&quot; style=&quot;width: 200px;&quot; width=&quot;200&quot;/&gt;&lt;/a&gt;
   &lt;br /&gt;&lt;br /&gt;
&lt;a href=&quot;https://github.com/iib0011/omni-tools/releases&quot;&gt;
          &lt;img src=&quot;https://img.shields.io/badge/version-0.4.0-blue?style=for-the-badge&quot; /&gt;
        &lt;/a&gt;
        &lt;a href=&quot;https://hub.docker.com/r/iib0011/omni-tools&quot;&gt;
          &lt;img src=&quot;https://img.shields.io/docker/pulls/iib0011/omni-tools?style=for-the-badge&amp;logo=docker&quot; /&gt;
        &lt;/a&gt;
        &lt;a href=&quot;https://github.com/iib0011&quot;&gt;
          &lt;img src=&quot;https://img.shields.io/github/stars/iib0011/omni-tools?style=for-the-badge&amp;logo=github&quot; /&gt;
        &lt;/a&gt;
        &lt;a href=&quot;https://github.com/iib0011/omni-tools/blob/main/LICENSE&quot;&gt;
          &lt;img src=&quot;https://img.shields.io/github/license/iib0011/omni-tools?style=for-the-badge&quot; /&gt;
        &lt;/a&gt;
        &lt;a href=&quot;https://discord.gg/SDbbn3hT4b&quot;&gt;
          &lt;img src=&quot;https://img.shields.io/discord/1342971141823664179?label=Discord&amp;style=for-the-badge&quot; /&gt;
        &lt;/a&gt;
        &lt;br /&gt;&lt;br /&gt;
&lt;/div&gt;

Welcome to OmniTools, a self-hosted web app offering a variety of online tools to simplify everyday tasks.
Whether you are coding, manipulating images/videos, PDFs or crunching numbers, OmniTools has you covered. Please don&#039;t
forget to
star the repo to support us.
Here is the [demo](https://omnitools.app) website.

All files are processed entirely on the client side: nothing ever leaves your device.
Plus, the Docker image is super lightweight at just 28MB, making it fast to deploy and easy to self-host.

![img.png](img.png)

## Table of Contents

- [Features](#features)
- [Self-host](#self-hostrun)
- [Contribute](#contribute)
- [License](#license)
- [Contact](#contact)

## Features

We strive to offer a variety of tools, including:

## **Image/Video/Binary Tools**

- Image Resizer
- Image Converter
- Video Trimmer
- Video Reverser
- And more...

## **String/List Tools**

- Case Converters
- List Shuffler
- Text Formatters
- And more...

## **Date and Time Tools**

- Date Calculators
- Time Zone Converters
- And more...

## **Math Tools**

- Generate Prime Numbers
- Generate Perfect Numbers
- And more...

## **Miscellaneous Tools**

- JSON Tools
- PDF Tools
- CSV Tools
- And more...

Stay tuned as we continue to expand and improve our collection!

## Self-host/Run

### Docker

```bash
docker run -d --name omni-tools --restart unless-stopped -p 8080:80 iib0011/omni-tools:latest
```

### Docker Compose

```yaml
services:
  omni-tools:
    image: iib0011/omni-tools:latest
    container_name: omni-tools
    restart: unless-stopped
    ports:
      - &quot;8080:80&quot;

```

## Contribute

This is a React Project with Typescript Material UI. We use icons from [Iconify](https://icon-sets.iconify.design)

### Project setup

```bash
git clone https://github.com/iib0011/omni-tools.git
cd omni-tools
npm i
npm run dev
```

### Create a new tool

```bash
npm run script:create:tool my-tool-name folder1 # npm run script:create:tool split pdf
```

For tools located under multiple nested directories, use:

```bash
npm run script:create:tool my-tool-name folder1/folder2 # npm run script:create:tool compress image/png
```

Use `folder1\folder2` on Windows.

### Run tests

```bash
npm run test
```

- For e2e tests

```bash
npm run test:e2e
```

&lt;img src=&quot;https://api.star-history.com/svg?repos=iib0011/omni-tools&amp;type=Date&quot;/&gt;

## 🤝 Looking to contribute?

We welcome contributions! You can help by:

- ✅ Reporting bugs
- ✅ Suggesting new features in Github issues or [here](https://tally.so/r/nrkkx2)
- ✅ Improving documentation
- ✅ Submitting pull requests

You can also join our [Discord server](https://discord.gg/SDbbn3hT4b)

### Contributors

&lt;a href=&quot;https://github.com/iib0011/omni-tools/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=iib0011/omni-tools&quot; /&gt;
&lt;/a&gt;

## Contact

For any questions or suggestions, feel free to open an issue or contact me at:
[ibracool99@gmail.com](mailto:ibracool99@gmail.com)

## License

This project is licensed under the MIT License. See the [LICENSE](LICENSE) file for details.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[simstudioai/sim]]></title>
            <link>https://github.com/simstudioai/sim</link>
            <guid>https://github.com/simstudioai/sim</guid>
            <pubDate>Tue, 08 Jul 2025 00:04:52 GMT</pubDate>
            <description><![CDATA[Sim Studio is an open-source AI agent workflow builder. Sim Studio's interface is a lightweight, intuitive way to quickly build and deploy LLMs that connect with your favorite tools.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/simstudioai/sim">simstudioai/sim</a></h1>
            <p>Sim Studio is an open-source AI agent workflow builder. Sim Studio's interface is a lightweight, intuitive way to quickly build and deploy LLMs that connect with your favorite tools.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 4,487</p>
            <p>Forks: 680</p>
            <p>Stars today: 289 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;apps/sim/public/static/sim.png&quot; alt=&quot;Sim Studio Logo&quot; width=&quot;500&quot;/&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.apache.org/licenses/LICENSE-2.0&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/License-Apache%202.0-blue.svg&quot; alt=&quot;License: Apache-2.0&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://discord.gg/Hr4UWYEcTT&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Discord-Join%20Server-7289DA?logo=discord&amp;logoColor=white&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://x.com/simstudioai&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/simstudioai?style=social&quot; alt=&quot;Twitter&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://github.com/simstudioai/sim/pulls&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg&quot; alt=&quot;PRs welcome&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://docs.simstudio.ai&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Docs-visit%20documentation-blue.svg&quot; alt=&quot;Documentation&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;strong&gt;Sim Studio&lt;/strong&gt; is a lightweight, user-friendly platform for building AI agent workflows.
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;apps/sim/public/static/demo.gif&quot; alt=&quot;Sim Studio Demo&quot; width=&quot;800&quot;/&gt;
&lt;/p&gt;

## Getting Started

1. Use our [cloud-hosted version](https://simstudio.ai)
2. Self-host using one of the methods below

## Self-Hosting Options

### Option 1: NPM Package (Simplest)

The easiest way to run Sim Studio locally is using our [NPM package](https://www.npmjs.com/package/simstudio?activeTab=readme):

```bash
npx simstudio
```

After running these commands, open [http://localhost:3000/](http://localhost:3000/) in your browser.

#### Options

- `-p, --port &lt;port&gt;`: Specify the port to run Sim Studio on (default: 3000)
- `--no-pull`: Skip pulling the latest Docker images

#### Requirements

- Docker must be installed and running on your machine

### Option 2: Docker Compose

```bash
# Clone the repository
git clone https://github.com/simstudioai/sim.git

# Navigate to the project directory
cd sim

# Start Sim Studio
docker compose -f docker-compose.prod.yml up -d
```

Access the application at [http://localhost:3000/](http://localhost:3000/)

#### Using Local Models

To use local models with Sim Studio:

1. Pull models using our helper script:

```bash
./apps/sim/scripts/ollama_docker.sh pull &lt;model_name&gt;
```

2. Start Sim Studio with local model support:

```bash
# With NVIDIA GPU support
docker compose --profile local-gpu -f docker-compose.ollama.yml up -d

# Without GPU (CPU only)
docker compose --profile local-cpu -f docker-compose.ollama.yml up -d

# If hosting on a server, update the environment variables in the docker-compose.prod.yml file to include the server&#039;s public IP then start again (OLLAMA_URL to i.e. http://1.1.1.1:11434)
docker compose -f docker-compose.prod.yml up -d
```

### Option 3: Dev Containers

1. Open VS Code with the [Remote - Containers extension](https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-containers)
2. Open the project and click &quot;Reopen in Container&quot; when prompted
3. Run `bun run dev:full` in the terminal or use the `sim-start` alias

### Option 4: Manual Setup

1. Clone and install dependencies:

```bash
git clone https://github.com/simstudioai/sim.git
cd sim
bun install
```

2. Set up environment:

```bash
cd apps/sim
cp .env.example .env  # Configure with required variables (DATABASE_URL, BETTER_AUTH_SECRET, BETTER_AUTH_URL)
```

3. Set up the database:

```bash
bunx drizzle-kit push
```

4. Start the development servers:

Next.js app:

```bash
bun run dev
```

Start the realtime server:

```bash
bun run dev:sockets
```

Run both together (recommended):

```bash
bun run dev:full
```

## Tech Stack

- **Framework**: [Next.js](https://nextjs.org/) (App Router)
- **Runtime**: [Bun](https://bun.sh/)
- **Database**: PostgreSQL with [Drizzle ORM](https://orm.drizzle.team)
- **Authentication**: [Better Auth](https://better-auth.com)
- **UI**: [Shadcn](https://ui.shadcn.com/), [Tailwind CSS](https://tailwindcss.com)
- **State Management**: [Zustand](https://zustand-demo.pmnd.rs/)
- **Flow Editor**: [ReactFlow](https://reactflow.dev/)
- **Docs**: [Fumadocs](https://fumadocs.vercel.app/)
- **Monorepo**: [Turborepo](https://turborepo.org/)
- **Realtime**: [Socket.io](https://socket.io/)

## Contributing

We welcome contributions! Please see our [Contributing Guide](.github/CONTRIBUTING.md) for details.

## License

This project is licensed under the Apache License 2.0 - see the [LICENSE](LICENSE) file for details.

&lt;p align=&quot;center&quot;&gt;Made with ❤️ by the Sim Studio Team&lt;/p&gt;</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[johannesjo/super-productivity]]></title>
            <link>https://github.com/johannesjo/super-productivity</link>
            <guid>https://github.com/johannesjo/super-productivity</guid>
            <pubDate>Tue, 08 Jul 2025 00:04:51 GMT</pubDate>
            <description><![CDATA[Super Productivity is an advanced todo list app with integrated Timeboxing and time tracking capabilities. It also comes with integrations for Jira, GitLab, GitHub and Open Project.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/johannesjo/super-productivity">johannesjo/super-productivity</a></h1>
            <p>Super Productivity is an advanced todo list app with integrated Timeboxing and time tracking capabilities. It also comes with integrations for Jira, GitLab, GitHub and Open Project.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 14,205</p>
            <p>Forks: 1,127</p>
            <p>Stars today: 42 stars today</p>
            <h2>README</h2><pre>&lt;a href=&quot;https://super-productivity.com/&quot;&gt;
  &lt;img align=&quot;center&quot; alt=&quot;Banner&quot; src=&quot;docs/screens/banner.png&quot; /&gt;
&lt;/a&gt;

&lt;br&gt;
&lt;br&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;strong&gt;An advanced todo list app with timeboxing &amp; time tracking capabilities that supports importing tasks from your calendar, Jira, GitHub and others&lt;/strong&gt;
&lt;p&gt;
  
&lt;p align=&quot;center&quot;&gt;:globe_with_meridians: &lt;a href=&quot;https://app.super-productivity.com&quot;&gt;Open Web App&lt;/a&gt; or :computer: &lt;a href=&quot;https://github.com/johannesjo/super-productivity/releases&quot;&gt;Download&lt;/a&gt;&lt;/p&gt;

&lt;br&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;a href=&quot;https://youtu.be/_mvMXWLsL-8&quot;&gt;
    &lt;img src=&quot;https://github.com/user-attachments/assets/15384cae-8ba3-4474-bc2c-13e7765c2dd1&quot; alt=&quot;animated&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;
&lt;br&gt;

&lt;p align=&quot;center&quot;&gt;
      &lt;img src=&quot;https://repobeats.axiom.co/api/embed/61f9b9de1bc34a2b526faf6d356120bdae7f4249.svg&quot; alt=&quot;analytics&quot; /&gt;
&lt;/p&gt;

&lt;br&gt;
&lt;br&gt;

[![Stand With Ukraine](https://raw.githubusercontent.com/vshymanskyy/StandWithUkraine/main/banner2-direct.svg)](https://vshymanskyy.github.io/StandWithUkraine)

&lt;p align=&quot;center&quot; style=&quot;text-align: center;&quot;&gt;
&lt;a href=&quot;https://lbesson.mit-license.org&quot;&gt;
  &lt;img alt=&quot;MIT license&quot;
       src=&quot;https://img.shields.io/badge/License-MIT-blue.svg?style=flat-square&quot;
       align=&quot;center&quot;&gt;
&lt;/a&gt;
&lt;a href=&quot;https://github.com/johannesjo/super-productivity/releases&quot;&gt;
  &lt;img alt=&quot;GitHub All Releases&quot;
       src=&quot;https://img.shields.io/github/downloads/johannesjo/super-productivity/total&quot;
       align=&quot;center&quot;&gt;
&lt;/a&gt;
&lt;a href=&quot;https://community.chocolatey.org/packages/super-productivity&quot;&gt;
  &lt;img alt=&quot;Chocolatey package&quot;
       src=&quot;https://img.shields.io/chocolatey/dt/super-productivity?color=blue&amp;label=chocolatey&quot;
       align=&quot;center&quot;&gt;
&lt;/a&gt;
&lt;a href=&quot;https://www.producthunt.com/posts/super-productivity&quot;&gt;
  &lt;img alt=&quot;On product hunt&quot;
       src=&quot;https://img.shields.io/badge/on-product%20hunt-blue.svg?style=flat-square&quot;
       align=&quot;center&quot;&gt;
&lt;/a&gt;
&lt;a href=&quot;https://www.reddit.com/r/superProductivity/&quot;&gt;
  &lt;img alt=&quot;Reddit Community&quot;
       src=&quot;https://img.shields.io/badge/Reddit-%23FF4500.svg?style=for-the-badge&amp;logo=Reddit&amp;logoColor=white&quot;
       align=&quot;center&quot;&gt;
&lt;/a&gt;
&lt;a href=&quot;https://mastodon.social/@superproductivity&quot;&gt;
  &lt;img alt=&quot;Super Productivity on Mastodon&quot;
       src=&quot;https://img.shields.io/badge/-MASTODON-%232B90D9?style=for-the-badge&amp;logo=mastodon&amp;logoColor=white&quot;
       align=&quot;center&quot;&gt;
&lt;/a&gt;
&lt;a href=&quot;https://x.com/intent/post?text=Super%20Productivity%20%20https%3A%2F%2Fsuper-productivity.com&quot;&gt;
  &lt;img alt=&quot;Tweet&quot;
       src=&quot;https://img.shields.io/badge/TWEET-%23000000.svg?style=for-the-badge&amp;logo=X&quot;
       align=&quot;center&quot;&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot; style=&quot;text-align: center;&quot;&gt;
  
&lt;a href=&#039;https://flathub.org/apps/com.super_productivity.SuperProductivity&#039; target=&quot;_blank&quot;&gt;
  &lt;img alt=&#039;Get it on Flathub&#039;
       src=&#039;https://flathub.org/api/badge?locale=en&#039;
       align=&quot;center&quot;
       style=&quot;height: 50px&quot;
       height=&quot;50&quot; /&gt;
  &lt;/a&gt;
  
&lt;a href=&quot;https://snapcraft.io/superproductivity&quot; target=&quot;_blank&quot;&gt;
  &lt;img alt=&quot;Get it from the Snap Store&quot;
       src=&quot;https://snapcraft.io/static/images/badges/en/snap-store-black.svg&quot;
       align=&quot;center&quot;
       style=&quot;height: 50px&quot;
       height=&quot;50&quot;&gt;
&lt;/a&gt;
&lt;a href=&#039;//www.microsoft.com/store/apps/9NHFVG8361TW?cid=storebadge&amp;ocid=badge&#039; target=&quot;_blank&quot;&gt;
  &lt;img src=&#039;https://developer.microsoft.com/store/badges/images/English_get-it-from-MS.png&#039;
       align=&quot;center&quot;
       alt=&#039;English badge&#039;
       style=&quot;height: 50px&quot;
       height=&quot;50&quot; /&gt;
&lt;/a&gt;
&lt;a href=&#039;//apps.apple.com/de/app/super-productivity/id1482572463?l=en&amp;mt=12&#039; target=&quot;_blank&quot;&gt;
  &lt;img src=&#039;docs/screens/app-store-badge.svg&#039;
       align=&quot;center&quot;
       alt=&#039;App Store Badge&#039;
       style=&quot;height: 50px&quot;
       height=&quot;50&quot; /&gt;
&lt;/a&gt;
&lt;a href=&#039;//play.google.com/store/apps/details?id=com.superproductivity.superproductivity&#039; target=&quot;_blank&quot;&gt;
  &lt;img src=&#039;docs/screens/google-play-badge.png&#039;
       align=&quot;center&quot;
       alt=&#039;Play Store Badge&#039;
       style=&quot;height: 50px&quot;
       height=&quot;50&quot; /&gt;
&lt;/a&gt;
&lt;a href=&#039;//f-droid.org/en/packages/com.superproductivity.superproductivity&#039; target=&quot;_blank&quot;&gt;
  &lt;img src=&#039;https://f-droid.org/assets/fdroid-logo-text_S0MUfk_FsnAYL7n2MQye-34IoSNm6QM6xYjDnMqkufo=.svg&#039;
       align=&quot;center&quot;
       alt=&#039;F-Droid Badge&#039;
       style=&quot;height: 50px&quot;
       height=&quot;50&quot; /&gt;
&lt;/a&gt;
&lt;a href=&#039;http://apps.obtainium.imranr.dev/redirect.html?r=obtainium://add/https://github.com/johannesjo/super-productivity/releases&#039;&gt;
  &lt;img src=&#039;https://raw.githubusercontent.com/ImranR98/Obtainium/main/assets/graphics/badge_obtainium.png&#039;
       align=&quot;center&quot;
       alt=&#039;Obtanium Badge&#039;
       style=&quot;height: 50px&quot;
       height=&quot;50&quot; /&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;br&gt;

## :heavy_check_mark: Features

- **Keep organized and focused!** Plan and categorize your tasks using sub-tasks, projects and tags and color code them as needed.
- Use **timeboxing** and **track your time**. Create time sheets and work summaries in a breeze to easily export them to your company&#039;s time tracking system.
- Helps you to **establish healthy &amp; productive habits**:
  - A **break reminder** reminds you when it&#039;s time to step away.
  - The **anti-procrastination feature** helps you gain perspective when you really need to.
  - Need some extra focus? A **Pomodoro timer** is also always at hand.
  - **Collect personal metrics** to see, which of your work routines need adjustments.
- Integrate with **Jira**, **GitHub**, **GitLab**, **Gitea** and **OpenProject**. Auto import tasks assigned to you, plan the details locally, automatically create work logs, and get notified immediately, when something changes.
- Basic [**CalDAV**](https://github.com/johannesjo/super-productivity/blob/master/docs/caldav.md) integration.
- Back up and synchronize your data across multiple devices with **Dropbox** and **WebDAV** support
- Attach context information to tasks and projects. Create **notes**, attach **files** or create **project-level bookmarks** for links, files, and even commands.
- Super Productivity **respects your privacy** and **does NOT collect any data** and there are no user accounts or registration. **You decide where you store your data!**
- It&#039;s **free** and **open source** and always will be.

And much more!

&lt;a href=&quot;https://youtu.be/_mvMXWLsL-8&quot;&gt;&lt;img alt=&quot;Work View with global links&quot; src=&quot;screens/screen_standard.png&quot; width=&quot;100%&quot;&gt;&lt;/a&gt;

## :question: How to use it

If you need some help, [this article on dev.to is the best place to start](https://dev.to/johannesjo/getting-started-with-super-productivity-2791).

If you prefer, there is also a (long) [YouTube video available](https://www.youtube.com/watch?v=VoF2_RSdNXA).

There is another older – the app looks and feels much better now ;) – [article](https://dev.to/johannesjo/super-productivity-how-to-grow-fond-of-time-tracking-and-task-management-22ee) on how I personally might use the app - and still [another one](https://dev.to/johannesjo/the-prioritising-scheme-how-to-eat-the-frog-with-super-productivity-mlk) on how I implement the &#039;eat the frog&#039; prioritizing scheme in the app.

[If you have further questions, please refer to the discussions page](https://github.com/johannesjo/super-productivity/discussions).

&lt;details&gt;
&lt;summary&gt; &lt;b&gt;⌨ Keyboard shortcuts and short-syntax&lt;/b&gt;&lt;/summary&gt;

### Keyboard shortcuts (most important)

- `Shift`+`A`: Open add task bar
- `Enter`: Edit currently focussed task title
- `Arrow keys`: Navigate around task list
- `D`: Mark currently focused task as done
- `A`: Add subtask to currently focused task
- `Y`: Toggle tracking time to currently focused task
- `S`: Open schedule dialog for currently focused task
- `Backspace`: Delete currently focused task
- `ArrowRight`: Open additional info panel for currently focused task
- `Ctrl`+`Shift`+`ArrowUp`: Move currently focused task up in list
- `Ctrl`+`Shift`+`ArrowDown`: Move currently focused task down in list

### Short-Syntax

Can be used when adding a task. &lt;strong&gt;(Each of these can be disabled in settings-&gt;short syntax)&lt;/strong&gt;

- `# &lt;tag-name&gt;`: add a tag to the task  
  (`&quot;task-description #tag1&quot;`)
- `&lt;number&gt;m` or `&lt;number&gt;h`: set time-estimate for the task  
  (`&quot;task-description 10m&quot;` or `&quot;task-description 5h&quot;`)
- `@&lt;time&gt;`: add due time to the task
  (`&quot;task-description @fri 10pm&quot;`)
- `+ &lt;project-name&gt;`: add the task to an existing project  
  (`&quot;task-description +Important Project&quot;`)
- `Ctr + 2`: toggle between moving the new task to the bottom and top of the list

&lt;/details&gt;

## :globe_with_meridians: Web Version

Check out the web version even though it is a bit limited: Time tracking only works if the app is open and for idle time tracking to work, the chrome extension must be installed.

If you want the Jira integration and idle time tracking to work, you also have to download and install the [Super Productivity Chrome Extension](https://chrome.google.com/webstore/detail/super-productivity/ljkbjodfmekklcoibdnhahlaalhihmlb).

## :computer: Downloads &amp; Install

### All Platforms

[Install from the releases page](https://github.com/johannesjo/super-productivity/releases).

### Windows

Due to certification issues it&#039;s recommended to download the app from the Microsoft Store:

&lt;a href=&#039;//www.microsoft.com/store/apps/9nhfvg8361tw?cid=storebadge&amp;ocid=badge&#039;&gt;&lt;img src=&#039;https://developer.microsoft.com/store/badges/images/English_get-it-from-MS.png&#039; alt=&#039;English badge&#039; width=&quot;127&quot; height=&quot;52&quot;/&gt;&lt;/a&gt;

You can also install the app using [Chocolatey](https://community.chocolatey.org/packages/super-productivity):

```powershell
choco install super-productivity
```

### Linux

#### Snap - Most distributions

Install via command-line:

```bash
# stable
sudo snap install superproductivity

# edge channel releases
sudo snap install --channel=edge superproductivity

# it is also recommended to disable updates to the app while it is running:
sudo snap set core experimental.refresh-app-awareness=true
```

&lt;a href=&quot;https://snapcraft.io/superproductivity&quot;&gt;
  &lt;img alt=&quot;Get it from the Snap Store&quot; src=&quot;https://snapcraft.io/static/images/badges/en/snap-store-black.svg&quot; /&gt;
&lt;/a&gt;

#### Flatpak - Most distributions

Must install Flatpak first. See [setup instructions for all distributions](https://flathub.org/setup).

Install via command-line:

```bash
# install
flatpak install flathub com.super_productivity.SuperProductivity

# run
flatpak run com.super_productivity.SuperProductivity
```

&lt;a href=&#039;https://flathub.org/apps/com.super_productivity.SuperProductivity&#039;&gt;
    &lt;img width=&#039;175&#039; alt=&#039;Get it on Flathub&#039; src=&#039;https://flathub.org/api/badge?locale=en&#039;/&gt;
  &lt;/a&gt;

#### Aur - Arch Linux

```bash
git clone https://aur.archlinux.org/superproductivity-bin.git
cd superproductivity-bin
makepkg -si
```

#### AppImage

If you encounter problems, please have a look here:
https://github.com/johannesjo/super-productivity/issues/3193#issuecomment-2131315513

### MacOS

Install via [homebrew cask](https://github.com/caskroom/homebrew-cask):

```bash
brew install --cask superproductivity
```

&lt;a href=&#039;//apps.apple.com/de/app/super-productivity/id1482572463?l=en&amp;mt=12&#039; target=&quot;_blank&quot;&gt;
  &lt;img src=&#039;docs/screens/app-store-badge.svg&#039;
       alt=&#039;App Store Badge&#039;
       height=&quot;50&quot; /&gt;
&lt;/a&gt;

### Android

A new version of the Android app is now available with **Connectivity-Free Mode**, allowing you to use the app without an internet connection.

This update offers more flexibility, supporting both fully offline usage and integration with services like WebDAV and Dropbox for syncing. Enjoy a smoother, more reliable experience whether you&#039;re online or offline.

Stay tuned for even more exciting updates!

You can find the Android app here:

&lt;a href=&#039;//play.google.com/store/apps/details?id=com.superproductivity.superproductivity&#039; target=&quot;_blank&quot;&gt;
  &lt;img src=&#039;docs/screens/google-play-badge.png&#039;
       align=&quot;center&quot;
       alt=&#039;App Store Badge&#039;
       height=&quot;50&quot; /&gt;
&lt;/a&gt;
&lt;a href=&#039;//f-droid.org/en/packages/com.superproductivity.superproductivity&#039; target=&quot;_blank&quot;&gt;
  &lt;img src=&#039;https://f-droid.org/assets/fdroid-logo-text_S0MUfk_FsnAYL7n2MQye-34IoSNm6QM6xYjDnMqkufo=.svg&#039;
       align=&quot;center&quot;
       alt=&#039;F-Droid Badge&#039;
       height=&quot;50&quot; /&gt;
&lt;/a&gt;

The sources can be [found here](/android).

## :hearts: Contributing

Please check out the [CONTRIBUTING.md](CONTRIBUTING.md)

There are several ways to help.

1. **Spread the word:** More users mean more people testing and contributing to the app which in turn means better stability and possibly more and better features. You can vote for Super Productivity on [Slant](https://www.slant.co/topics/14021/viewpoints/7/~productivity-tools-for-linux~super-productivity), [Product Hunt](https://www.producthunt.com/posts/super-productivity), [Softpedia](https://www.softpedia.com/get/Office-tools/Diary-Organizers-Calendar/Super-Productivity.shtml) or on [AlternativeTo](https://alternativeto.net/software/super-productivity/), you can [tweet about it](https://twitter.com/intent/tweet?text=I%20like%20Super%20Productivity%20%20https%3A%2F%2Fsuper-productivity.com), share it on [LinkedIn](http://www.linkedin.com/shareArticle?mini=true&amp;url=https://super-productivity.com&amp;title=I%20like%20Super%20Productivity&amp;), [reddit](http://www.reddit.com/submit?url=https%3A%2F%2Fsuper-productivity.com&amp;title=I%20like%20Super%20Productivity) or any of your favorite social media platforms. Every little bit helps!

2. **Provide a Pull Request:** Here is a list of [the most popular community requests](https://github.com/johannesjo/super-productivity/issues?q=is%3Aissue+is%3Aopen+sort%3Areactions-%2B1-desc) and here some info on [how to run the development build](https://github.com/johannesjo/super-productivity#running-the-development-server).
   Please make sure that you&#039;re following the [angular commit guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits) and to also include the issue number in your commit message, if you&#039;re fixing a particular issue (e.g.: `feat: add nice feature with the number #31`).

3. **[Answer questions](https://github.com/johannesjo/super-productivity/discussions)**: You know the answer to another user&#039;s problem? Share your knowledge!

4. **[Provide your opinion](https://github.com/johannesjo/super-productivity/issues?q=is%3Aissue+is%3Aopen+sort%3Areactions-%2B1-desc+label%3A%22community+feedback+wanted%22):** Some community suggestions are controversial. Your input might be helpful and if it is just an up- or down-vote.

5. **[Provide a more refined UI spec for existing feature requests](https://github.com/johannesjo/super-productivity/issues?q=is%3Aissue+is%3Aopen+label%3A%22needs+concept+and%2For+ui+spec%22)**

6. **[Report bugs](https://github.com/johannesjo/super-productivity/issues/new)**

7. **[Make a feature or improvement request](https://github.com/johannesjo/super-productivity/issues/new)**: Something can be done better? Something essential missing? Let us know!

8. **[Translations](https://github.com/johannesjo/super-productivity/tree/master/src/assets/i18n), Icons, etc.**: You don&#039;t have to be a programmer to help. Some of the icons really need improvement and many of the translations could use some love.

[//]: # &#039;[![inlang status badge](https://badge.inlang.com/?url=github.com/johannesjo/super-productivity)](https://fink.inlang.com/github.com/johannesjo/super-productivity?ref=badge)&#039;
[//]: #
[//]: # &#039;You can use the Fink Localization Editor to edit, lint, and add translations for different languages. [Contribute via fink Guide](https://inlang.com/g/6ddyhpoi).&#039;

9. **[Sponsor the project](https://github.com/sponsors/johannesjo)**

10. **[Create custom plugins](docs/plugin-development.md)**: Extend Super Productivity with your own features and integrations by developing custom plugins.

### Running the development server

If you don&#039;t want or cannot use Codespaces for any reason, here are the instructions for local development.

To run the development server you need to have Node installed (version 20 or higher required). Go to https://nodejs.org for installation instructions.

**Clone repo**

```bash
git clone https://github.com/johannesjo/super-productivity.git
```

**Install dependencies**

```bash
cd super-productivity
npm i -g @angular/cli
npm i
```

**Run the dev server**

```bash
ng serve
```

Afterwards you can open http://localhost:4200 in your browser. For most adjustments this should be enough and also enables you to use the [redux dev tools](https://chrome.google.com/webstore/detail/redux-devtools/lmhkpmbekcpmknklioeibfkpmmfibljd?hl=de).

If you want to run the app standalone do the following:

```bash
ng serve

# in a new console tab
npm start
```

### :rocket: Try with GitHub Codespaces

You can develop and run Super Productivity instantly in your browser using [GitHub Codespaces](https://github.com/features/codespaces): no need to install Node.js or any dependencies locally. On the top of the repository page, click on &quot;Code&quot;, &quot;Codespaces&quot;, and then on the plus button, &quot;Create Codespace&quot;.

Your VS Code settings can sync as usual, so your environment feels just like home. The development server starts automatically, and the dev container auto-forwards the port. Open the &quot;Ports&quot; tab and Ctrl+Click the available link to preview your running Super Productivity app.

Further customizations to the Codespaces dev container can be performed by editing the .devcontainers/devcontainers.json file according to the [Codespaces documentation](https://docs.github.com/en/codespaces/setting-up-your-project-for-codespaces/adding-a-dev-container-configuration/introduction-to-dev-containers#creating-a-custom-dev-container-configuration) and the [devcontainers full specification](https://containers.dev/implementors/spec/).

### Packaging the app

Packaging the app is done via [electron-builder](https://github.com/electron-userland/electron-builder). To start packaging run `npm run dist`. If you want to add new platforms and experiment with the build options the easiest way to do so is manipulating the `build` property in the [package.json](https://github.com/johannesjo/super-productivity/blob/develop/package.json), but you can also use the [command line interface of electron builder](https://www.electron.build/cli).

### Building for Android

_This feature was added on October 7, 2024. See [Pull Request #57](https://github.com/johannesjo/super-productivity-android/pull/57)._

To build the Android version of Super Productivity, please refer to the [Android Build Documentation](./android/README.md), which includes instructions on configuring **Connectivity-Free Mode** and **Online-Only Mode (Compatibility Mode)**.

Ensure you follow the setup steps properly to configure the environment for building the app.

## Run as Docker Container

```bash
docker run -d -p 80:80 johannesjo/super-productivity:latest
```

&gt; [!NOTE]
&gt; The command will automatically pull the container that matches the host&#039;s platform. Use `--platform` to specify a different one.
&gt;
&gt; Currently supported architectures: `linux/amd64`, `linux/arm64`, `linux/arm/v7`.

Now you can access the web app from your browser at `http://localhost`.

This container only serves the web app, and the user data is stored in the browser. Therefore, it does not have any persistent storage.

### Integrate with WebDAV backend server

You can integrate the container with a WebDAV server container to provide WebDAV service with base url `http://localhost/webdav`.

**Download pre-configured files**

Download the pre-configured `docker-compose.yaml` and `webdav.yaml` from this repository to a local directory, say `sp/`.

```bash
# Alternatively, you can get them by cloning this repository
git clone https://github.com/johannesjo/super-productivity.git
mkdir -p sp
cp super-productivity/docker-compose.yaml sp/
cp super-productivity/webdav.yaml sp/
cd sp
```

**Setup user accounts**

Edit `webdav.yaml` to configure username and password. Remember to create and assign different directories to different users (within `/data`) to avoid mixing up user data.

**Star

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[slowlydev/f1-dash]]></title>
            <link>https://github.com/slowlydev/f1-dash</link>
            <guid>https://github.com/slowlydev/f1-dash</guid>
            <pubDate>Tue, 08 Jul 2025 00:04:50 GMT</pubDate>
            <description><![CDATA[A real-time F1 dashboard]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/slowlydev/f1-dash">slowlydev/f1-dash</a></h1>
            <p>A real-time F1 dashboard</p>
            <p>Language: TypeScript</p>
            <p>Stars: 1,286</p>
            <p>Forks: 147</p>
            <p>Stars today: 11 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;picture&gt;
    &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;./dash/public/tag-logo.png&quot; width=&quot;200&quot;&gt;
    &lt;img alt=&quot;f1-dash&quot; src=&quot;./dash/public/tag-logo.png&quot; width=&quot;200&quot;&gt;
  &lt;/picture&gt;
&lt;/p&gt;

&lt;h1 align=&quot;center&quot;&gt;Real-time Formula 1 telemetry and timing&lt;/h1&gt;

## f1-dash

A real-time F1 dashboard that shows the leader board, tires, gaps, laps, mini sectors and much more.

## Contributing

I really appreciate your interest in contributing to this project. I recommend checking out the GitHub issues marked as &quot;Good First Issue&quot; to get started. Also, please read [`CONTRIBUTING.md`](CONTRIBUTING.md) to learn how to contribute and set up f1-dash on your local machine for development.

## Supporting

If you&#039;d like to support this project and help me dedicate more time to it, you can [buy me a coffee](https://www.buymeacoffee.com/slowlydev).

## Notice

This project/website is unofficial and is not associated in any way with the Formula 1 companies. F1, FORMULA ONE, FORMULA 1, FIA FORMULA ONE WORLD CHAMPIONSHIP, GRAND PRIX and related marks are trade marks of Formula One Licensing B.V.</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[samanhappy/mcphub]]></title>
            <link>https://github.com/samanhappy/mcphub</link>
            <guid>https://github.com/samanhappy/mcphub</guid>
            <pubDate>Tue, 08 Jul 2025 00:04:49 GMT</pubDate>
            <description><![CDATA[A unified hub for centralized management and dynamic organization of multiple MCP servers into streamable HTTP (SSE) endpoints, with support for flexible routing strategies]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/samanhappy/mcphub">samanhappy/mcphub</a></h1>
            <p>A unified hub for centralized management and dynamic organization of multiple MCP servers into streamable HTTP (SSE) endpoints, with support for flexible routing strategies</p>
            <p>Language: TypeScript</p>
            <p>Stars: 779</p>
            <p>Forks: 99</p>
            <p>Stars today: 29 stars today</p>
            <h2>README</h2><pre># MCPHub: The Unified Hub for Model Context Protocol (MCP) Servers

English | [中文版](README.zh.md)

MCPHub makes it easy to manage and scale multiple MCP (Model Context Protocol) servers by organizing them into flexible Streamable HTTP (SSE) endpoints—supporting access to all servers, individual servers, or logical server groups.

![Dashboard Preview](assets/dashboard.png)

## 🚀 Features

- **Broadened MCP Server Support**: Seamlessly integrate any MCP server with minimal configuration.
- **Centralized Dashboard**: Monitor real-time status and performance metrics from one sleek web UI.
- **Flexible Protocol Handling**: Full compatibility with both stdio and SSE MCP protocols.
- **Hot-Swappable Configuration**: Add, remove, or update MCP servers on the fly — no downtime required.
- **Group-Based Access Control**: Organize servers into customizable groups for streamlined permissions management.
- **Secure Authentication**: Built-in user management with role-based access powered by JWT and bcrypt.
- **Docker-Ready**: Deploy instantly with our containerized setup.

## 🔧 Quick Start

### Configuration

Create a `mcp_settings.json` file to customize your server settings:

```json
{
  &quot;mcpServers&quot;: {
    &quot;amap&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@amap/amap-maps-mcp-server&quot;],
      &quot;env&quot;: {
        &quot;AMAP_MAPS_API_KEY&quot;: &quot;your-api-key&quot;
      }
    },
    &quot;playwright&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;@playwright/mcp@latest&quot;, &quot;--headless&quot;]
    },
    &quot;fetch&quot;: {
      &quot;command&quot;: &quot;uvx&quot;,
      &quot;args&quot;: [&quot;mcp-server-fetch&quot;]
    },
    &quot;slack&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@modelcontextprotocol/server-slack&quot;],
      &quot;env&quot;: {
        &quot;SLACK_BOT_TOKEN&quot;: &quot;your-bot-token&quot;,
        &quot;SLACK_TEAM_ID&quot;: &quot;your-team-id&quot;
      }
    }
  }
}
```

### Docker Deployment

**Recommended**: Mount your custom config:

```bash
docker run -p 3000:3000 -v ./mcp_settings.json:/app/mcp_settings.json -v ./data:/app/data samanhappy/mcphub
```

or run with default settings:

```bash
docker run -p 3000:3000 samanhappy/mcphub
```

### Access the Dashboard

Open `http://localhost:3000` and log in with your credentials.

&gt; **Note**: Default credentials are `admin` / `admin123`.

**Dashboard Overview**:

- Live status of all MCP servers
- Enable/disable or reconfigure servers
- Group management for organizing servers
- User administration for access control

### Streamable HTTP Endpoint

&gt; As of now, support for streaming HTTP endpoints varies across different AI clients. If you encounter issues, you can use the SSE endpoint or wait for future updates.

Connect AI clients (e.g., Claude Desktop, Cursor, DeepChat, etc.) via:

```
http://localhost:3000/mcp
```

This endpoint provides a unified streamable HTTP interface for all your MCP servers. It allows you to:

- Send requests to any configured MCP server
- Receive responses in real-time
- Easily integrate with various AI clients and tools
- Use the same endpoint for all servers, simplifying your integration process

**Smart Routing (Experimental)**:

Smart Routing is MCPHub&#039;s intelligent tool discovery system that uses vector semantic search to automatically find the most relevant tools for any given task.

```
http://localhost:3000/mcp/$smart
```

**How it Works:**

1. **Tool Indexing**: All MCP tools are automatically converted to vector embeddings and stored in PostgreSQL with pgvector
2. **Semantic Search**: User queries are converted to vectors and matched against tool embeddings using cosine similarity
3. **Intelligent Filtering**: Dynamic thresholds ensure relevant results without noise
4. **Precise Execution**: Found tools can be directly executed with proper parameter validation

**Setup Requirements:**

![Smart Routing](assets/smart-routing.png)

To enable Smart Routing, you need:

- PostgreSQL with pgvector extension
- OpenAI API key (or compatible embedding service)
- Enable Smart Routing in MCPHub settings

**Group-Specific Endpoints (Recommended)**:

![Group Management](assets/group.png)

For targeted access to specific server groups, use the group-based HTTP endpoint:

```
http://localhost:3000/mcp/{group}
```

Where `{group}` is the ID or name of the group you created in the dashboard. This allows you to:

- Connect to a specific subset of MCP servers organized by use case
- Isolate different AI tools to access only relevant servers
- Implement more granular access control for different environments or teams

**Server-Specific Endpoints**:
For direct access to individual servers, use the server-specific HTTP endpoint:

```
http://localhost:3000/mcp/{server}
```

Where `{server}` is the name of the server you want to connect to. This allows you to access a specific MCP server directly.

&gt; **Note**: If the server name and group name are the same, the group name will take precedence.

### SSE Endpoint (Deprecated in Future)

Connect AI clients (e.g., Claude Desktop, Cursor, DeepChat, etc.) via:

```
http://localhost:3000/sse
```

For smart routing, use:

```
http://localhost:3000/sse/$smart
```

For targeted access to specific server groups, use the group-based SSE endpoint:

```
http://localhost:3000/sse/{group}
```

For direct access to individual servers, use the server-specific SSE endpoint:

```
http://localhost:3000/sse/{server}
```

## 🧑‍💻 Local Development

```bash
git clone https://github.com/samanhappy/mcphub.git
cd mcphub
pnpm install
pnpm dev
```

This starts both frontend and backend in development mode with hot-reloading.

&gt; For windows users, you may need to start the backend server and frontend separately: `pnpm backend:dev`, `pnpm frontend:dev`.

## 🛠️ Common Issues

### Using Nginx as a Reverse Proxy

If you are using Nginx to reverse proxy MCPHub, please make sure to add the following configuration in your Nginx setup:

```nginx
proxy_buffering off
```

## 🔍 Tech Stack

- **Backend**: Node.js, Express, TypeScript
- **Frontend**: React, Vite, Tailwind CSS
- **Auth**: JWT &amp; bcrypt
- **Protocol**: Model Context Protocol SDK

## 👥 Contributing

Contributions of any kind are welcome!

- New features &amp; optimizations
- Documentation improvements
- Bug reports &amp; fixes
- Translations &amp; suggestions

Welcome to join our [Discord community](https://discord.gg/qMKNsn5Q) for discussions and support.

## ❤️ Sponsor

If you like this project, maybe you can consider:

[![ko-fi](https://ko-fi.com/img/githubbutton_sm.svg)](https://ko-fi.com/samanhappy)

## 🌟 Star History

[![Star History Chart](https://api.star-history.com/svg?repos=samanhappy/mcphub&amp;type=Date)](https://www.star-history.com/#samanhappy/mcphub&amp;Date)

## 📄 License

Licensed under the [Apache 2.0 License](LICENSE).
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[maurodesouza/profile-readme-generator]]></title>
            <link>https://github.com/maurodesouza/profile-readme-generator</link>
            <guid>https://github.com/maurodesouza/profile-readme-generator</guid>
            <pubDate>Tue, 08 Jul 2025 00:04:48 GMT</pubDate>
            <description><![CDATA[🎨 Enhance your GitHub profile with this amazing tool, which allows you to create a personalized README quickly and easily. This profile README generator is the best you'll find 🚀]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/maurodesouza/profile-readme-generator">maurodesouza/profile-readme-generator</a></h1>
            <p>🎨 Enhance your GitHub profile with this amazing tool, which allows you to create a personalized README quickly and easily. This profile README generator is the best you'll find 🚀</p>
            <p>Language: TypeScript</p>
            <p>Stars: 2,171</p>
            <p>Forks: 466</p>
            <p>Stars today: 38 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot; id=&quot;top&quot;&gt;
  &lt;img src=&quot;https://profile-readme-generator.com/assets/app.png&quot; width=&quot;900&quot; alt=&quot;Profile Readme Generator&quot; /&gt;

  &lt;a href=&quot;https://profile-readme-generator.com&quot;&gt;Demo&lt;/a&gt;
&lt;/div&gt;

&lt;div align=&quot;center&quot;&gt;
  &lt;h1&gt;Profile Readme Generator&lt;/h1&gt;
  &lt;h3&gt;The best profile readme generator you will find!&lt;/h3&gt;
&lt;/div&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/maurodesouza/profile-readme-generator/fork&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/forks/maurodesouza/profile-readme-generator?&quot; alt=&quot;Badge showing the total of project forks&quot;/&gt;
  &lt;/a&gt;

  &lt;a href=&quot;https://github.com/maurodesouza/profile-readme-generator/stargazers&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/stars/maurodesouza/profile-readme-generator?&quot; alt=&quot;Badge showing the total of project stars&quot;/&gt;
  &lt;/a&gt;

  &lt;a href=&quot;https://github.com/maurodesouza/profile-readme-generator/commits/main&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/commit-activity/m/maurodesouza/profile-readme-generator?&quot; alt=&quot;Badge showing average commit frequency per month&quot;/&gt;
  &lt;/a&gt;

  &lt;a href=&quot;https://github.com/maurodesouza/profile-readme-generator/commits/main&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/last-commit/maurodesouza/profile-readme-generator?&quot; alt=&quot;Badge showing when the last commit was made&quot;/&gt;
  &lt;/a&gt;

  &lt;a href=&quot;https://github.com/maurodesouza/profile-readme-generator/issues&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/issues/maurodesouza/profile-readme-generator?&quot; alt=&quot;Badge showing the total of project issues&quot;/&gt;
  &lt;/a&gt;

  &lt;a href=&quot;https://github.com/maurodesouza/profile-readme-generator/pulls&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/issues-pr/maurodesouza/profile-readme-generator?&quot; alt=&quot;Badge showing the total of project pull-requests&quot;/&gt;
  &lt;/a&gt;

  &lt;a href=&quot;https://github.com/maurodesouza/profile-readme-generator/blob/master/LICENSE.md&quot; target=&quot;_blank&quot;&gt;
    &lt;img alt=&quot;Badge showing project license type&quot; src=&quot;https://img.shields.io/github/license/maurodesouza/profile-readme-generator?color=f85149&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;


&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;#dart-about&quot;&gt;About&lt;/a&gt; &amp;#xa0; | &amp;#xa0;
  &lt;a href=&quot;#rocket-main-technologies&quot;&gt;Technologies&lt;/a&gt; &amp;#xa0; | &amp;#xa0;
  &lt;a href=&quot;#white_check_mark-requirements&quot;&gt;Requirements&lt;/a&gt; &amp;#xa0; | &amp;#xa0;
  &lt;a href=&quot;#checkered_flag-starting&quot;&gt;Starting&lt;/a&gt; &amp;#xa0; | &amp;#xa0;
  &lt;a href=&quot;https://github.com/maurodesouza/profile-readme-generator/blob/main/.github/CONTRIBUTING.md&quot;&gt;Contributing&lt;/a&gt;
&lt;/p&gt;

## :dart: About ##

Are you tired of manually editing your GitHub profile or missing out on the amazing features you can add to it? 😩 Configuring GitHub actions can also be a hassle, right? Say no more! 💪

**Introducing a tool that lets you beautify your GitHub profile with a customized README, easily and in no time!** ✨ You can include whatever content you want, wherever you want it (*within the limitations of markdown, of course*). 📝

**With this amazing tool, creating your own README has never been so simple and fast.** ⚡ You can save time and focus on what really matters - showcasing your skills and projects. 🚀

**Don&#039;t miss out on the opportunity to enhance your GitHub profile.** Give it a try and see for yourself how easy and convenient it is! 😉


&lt;p align=&quot;center&quot;&gt;
&lt;i&gt;Loved the tool? Please consider &lt;a href=&quot;https://www.paypal.com/donate/?hosted_button_id=FR3A2DGVYKGJS&quot;&gt;donating 💸&lt;/a&gt; to support its continuous&lt;br/&gt; improvement and development!&lt;/i&gt;
&lt;/p&gt;

https://user-images.githubusercontent.com/54520907/173442002-dafc63ea-321f-4ce2-b349-be490b3a00ff.mp4

## :rocket: Main Technologies ##

&lt;a href=&quot;https://nextjs.org&quot;&gt;
  &lt;img width=&quot;50&quot; title=&quot;NextJs&quot; alt=&quot;Next Logo&quot; src=&quot;https://raw.githubusercontent.com/maurodesouza/maurodesouza/master/assets/next-logo.svg&quot;&gt;
&lt;/a&gt; &amp;#xa0; &amp;#xa0;

&lt;a href=&quot;https://www.typescriptlang.org&quot;&gt;
  &lt;img width=&quot;50&quot; title=&quot;Typescript&quot; alt=&quot;Typescript Logo&quot; src=&quot;https://raw.githubusercontent.com/maurodesouza/maurodesouza/master/assets/typescript-logo.svg&quot;&gt;
&lt;/a&gt; &amp;#xa0; &amp;#xa0;

&lt;a href=&quot;https://tailwindcss.com&quot;&gt;
  &lt;img width=&quot;50&quot; title=&quot;Styled Components&quot; alt=&quot;Styled Components Logo&quot; src=&quot;https://raw.githubusercontent.com/github/explore/80688e429a7d4ef2fca1e82350fe8e3517d3494d/topics/tailwind/tailwind.png&quot;&gt;
&lt;/a&gt; &amp;#xa0; &amp;#xa0;

&lt;a href=&quot;https://jestjs.io&quot;&gt;
  &lt;img width=&quot;50&quot; title=&quot;Jest&quot; alt=&quot;Jest Logo&quot; src=&quot;https://raw.githubusercontent.com/maurodesouza/maurodesouza/master/assets/jest-logo.svg&quot;&gt;
&lt;/a&gt; &amp;#xa0; &amp;#xa0;

&lt;a href=&quot;https://eslint.org&quot;&gt;
  &lt;img  width=&quot;50&quot; title=&quot;Eslint&quot; alt=&quot;Eslint Logo&quot; src=&quot;https://raw.githubusercontent.com/github/explore/80688e429a7d4ef2fca1e82350fe8e3517d3494d/topics/eslint/eslint.png&quot;&gt;
&lt;/a&gt; &amp;#xa0; &amp;#xa0;

&lt;a href=&quot;https://prettier.io&quot;&gt;
  &lt;img width=&quot;50&quot; title=&quot;Prettier&quot; alt=&quot;Prettier Logo&quot; src=&quot;https://prettier.io/icon.png&quot;&gt;
&lt;/a&gt;

###

&lt;details&gt;
  &lt;summary&gt;See more&lt;/summary&gt;

  ###

  * [Shadcn](https://ui.shadcn.com)
  * [Radix](https://www.radix-ui.com)
  * [Lucid Icons](https://lucide.dev)
  * [clsx](https://github.com/lukeed/clsx#readme)
  * [Tailwind Merge](https://github.com/dcastil/tailwind-merge#readme)
  * [Tailwind Variants](https://www.tailwind-variants.org)
  * [Framer Motion](https://framer.com/motion/)
  * [Prismjs](https://prismjs.com)
  * [HTML Prettify](https://github.com/Dmc0125/html-prettify#readme)
  * [React Share](https://github.com/nygardk/react-share)
  * [React Markdown](https://github.com/remarkjs/react-markdown#readme)
  * [UUID](https://github.com/uuidjs/uuid#readme)

&lt;/details&gt;

## :white_check_mark: Requirements ##

Before starting :checkered_flag:, make sure you have [Git](https://git-scm.com) and [Node](https://nodejs.org/en/) installed on your system. ([nvm](https://github.com/nvm-sh/nvm#node-version-manager---) recommended).

## :checkered_flag: Starting ##

```bash
# Clone this project
$ git clone https://github.com/maurodesouza/profile-readme-generator

# Access
$ cd profile-readme-generator

# Install dependencies
$ yarn

# Run the project
$ yarn dev

# The server will initialize in the &lt;http://localhost:3000&gt;
```

## :video_game: Scripts

- `dev`: starts the application at `localhost:3000`;
- `build`: creates an optimized production build of the application;
- `start`: starts the application in production mode at localhost:3000 (make sure to run the build first);
- `test`: runs the tests;
- `lint`: runs eslint in the /src directory.

## :memo: License ##

This project is licensed under the MIT License. For more details, please refer to the [LICENSE](LICENSE.md) file.


Made with :heart: by &lt;a href=&quot;https://github.com/maurodesouza&quot; target=&quot;_blank&quot;&gt;Mauro de Souza&lt;/a&gt;

&amp;#xa0;

&lt;a href=&quot;#top&quot;&gt;Back to top&lt;/a&gt;

*Readme created with [Simple Readme](https://marketplace.visualstudio.com/items?itemName=maurodesouza.vscode-simple-readme)*
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[nerding-io/n8n-nodes-mcp]]></title>
            <link>https://github.com/nerding-io/n8n-nodes-mcp</link>
            <guid>https://github.com/nerding-io/n8n-nodes-mcp</guid>
            <pubDate>Tue, 08 Jul 2025 00:04:47 GMT</pubDate>
            <description><![CDATA[n8n custom node for MCP]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/nerding-io/n8n-nodes-mcp">nerding-io/n8n-nodes-mcp</a></h1>
            <p>n8n custom node for MCP</p>
            <p>Language: TypeScript</p>
            <p>Stars: 2,151</p>
            <p>Forks: 384</p>
            <p>Stars today: 12 stars today</p>
            <h2>README</h2><pre>[![Verified on MseeP](https://mseep.ai/badge.svg)](https://mseep.ai/app/bd76f121-1c8f-4f5d-9c65-1eac5d81b6af)

# n8n-nodes-mcp-client

&gt; **Important Note:**
&gt; The Server-Sent Events (SSE) transport is deprecated and replaced by the new HTTP Streamable transport. SSE remains available for legacy compatibility, but HTTP Streamable is now the recommended method for all new implementations.

This is an n8n community node that lets you interact with Model Context Protocol (MCP) servers in your n8n workflows.

MCP is a protocol that enables AI models to interact with external tools and data sources in a standardized way. This node allows you to connect to MCP servers, access resources, execute tools, and use prompts.

[n8n](https://n8n.io/) is a [fair-code licensed](https://docs.n8n.io/reference/license/) workflow automation platform.

[Installation](#installation)
[Credentials](#credentials)
[Environment Variables](#environment-variables)
[Operations](#operations)
[Using as a Tool](#using-as-a-tool)
[Compatibility](#compatibility)
[Resources](#resources)

## Getting Started

Official Quickstart Video:

[![MCP Client Node Quickstart](/assets/mcp-n8n.png)](https://youtu.be/1t8DQL-jUJk)



### Community Videos

Shoutout to all the creators of the following n8n community videos that are great resources for learning how to use this node:

- [Is MCP the Future of N8N AI Agents? (Fully Tested!)](https://youtu.be/sb5hCcFYPIE)
- [Connect N8N AI Agents to EVERYTHING using MCP?](https://youtu.be/tTDRgkD-120)
- [Build an AI Agent That Can Use Any Tool (MCP in n8n Tutorial)](https://www.youtube.com/watch?v=SVZe2rdhYmA)
- [The NEW N8N MCP is an Absolute Game-Changer (Brave Search MCP)](https://youtu.be/RxXS_FpJyGM)
- [MCP &amp; n8n Automation: The Ultimate Guide for MCP AI Agents (2025)](https://www.youtube.com/watch?v=mbQsnrxHPwE)
- [REVOLUÇÃO na criação de AGENTES no N8N com o MCP Server!!!](https://www.youtube.com/watch?v=zgH85dJcs5c) (Portuguese)

If you have a great video that you&#039;d like to share, please let me know and I&#039;ll add it to the list!

#### Interested a deeper dive into MCP?

Check out my YouTube Series [MCP Explained](https://www.youtube.com/playlist?list=PLjOCx_PNfJ4S_oOSqrMi6t9_x1GllvQZO) for more information about the Model Context Protocol.

### Security Assessment
[![MseeP.ai Security Assessment Badge](https://mseep.net/pr/nerding-io-n8n-nodes-mcp-badge.png)](https://mseep.ai/app/nerding-io-n8n-nodes-mcp)


## Installation

Follow the [installation guide](https://docs.n8n.io/integrations/community-nodes/installation/) in the n8n community nodes documentation.

Also pay attention to Environment Variables for [using tools in AI Agents](#using-as-a-tool). It&#039;s mandatory to set the `N8N_COMMUNITY_PACKAGES_ALLOW_TOOL_USAGE` environment variable to `true` if you want to use the MCP Client node as a tool in AI Agents.

## Credentials

The MCP Client node supports three types of credentials to connect to an MCP server:

### Command-line Based Transport (STDIO)

![MCP Client STDIO Credentials](./assets/credentials.png)

- **Command**: The command to start the MCP server
- **Arguments**: Optional arguments to pass to the server command
- **Environment Variables**: Variables to pass to the server in NAME=VALUE format

### HTTP Streamable Transport (Recommended)

- **HTTP Streamable URL**: The HTTP endpoint that supports streaming responses (e.g., http://localhost:3001/stream)
- **Additional Headers**: Optional headers to send with requests (format: name:value, one per line)

HTTP Streamable is the recommended and modern method for all new integrations, providing better efficiency and flexibility compared to SSE.

#### Example: Using a Local MCP Server with HTTP Streamable

This example shows how to connect to a locally running MCP server using HTTP Streamable:

1. Start a local MCP server that supports HTTP Streamable:
   ```bash
   npx @modelcontextprotocol/server-example-streamable
   ```

2. Configure MCP Client credentials:
   - In the node settings, select **Connection Type**: `HTTP Streamable`
   - Create new credentials of type **MCP Client (HTTP Streamable) API**
   - Set **HTTP Streamable URL**: `http://localhost:3001/stream`
   - Add any required headers for authentication

3. Create a workflow using the MCP Client node:
   - Add an MCP Client node
   - Set the Connection Type to `HTTP Streamable`
   - Select your HTTP Streamable credentials
   - Execute the workflow to see the results

### Server-Sent Events (SSE) Transport (Deprecated, still available for legacy use)

- **SSE URL**: The URL of the SSE endpoint (default: http://localhost:3001/sse)
- **Messages Post Endpoint**: Optional custom endpoint for posting messages if different from the SSE URL
- **Additional Headers**: Optional headers to send with requests (format: name:value, one per line)

&gt; **Deprecated:** SSE is deprecated and will not receive further updates, but remains available for legacy compatibility. For new projects, use HTTP Streamable.

#### Example: Using a Local MCP Server with SSE (legacy)

This example shows how to connect to a locally running MCP server using Server-Sent Events (SSE):

1. Start a local MCP server that supports SSE:
   ```bash
   npx @modelcontextprotocol/server-example-sse
   ```

2. Configure MCP Client credentials:
   - In the node settings, select **Connection Type**: `Server-Sent Events (SSE)`
   - Create new credentials of type **MCP Client (SSE) API**
   - Set **SSE URL**: `http://localhost:3001/sse`
   - Add any required headers for authentication

3. Create a workflow using the MCP Client node:
   - Add an MCP Client node
   - Set the Connection Type to `Server-Sent Events (SSE)`
   - Select your SSE credentials
   - Execute the workflow to see the results

&gt; **Note:** For new projects, HTTP Streamable is strongly recommended.

## Environment Variables

The MCP Client node supports passing environment variables to MCP servers using the command-line based transport in two ways:

### 1. Using the Credentials UI

You can add environment variables directly in the credentials configuration:

![Environment Variables in Credentials](./assets/credentials-envs.png)

This method is useful for individual setups and testing. The values are stored securely as credentials in n8n.

### 2. Using Docker Environment Variables

For Docker deployments, you can pass environment variables directly to your MCP servers by prefixing them with `MCP_`:

```yaml
version: &#039;3&#039;

services:
  n8n:
    image: n8nio/n8n
    environment:
      - MCP_BRAVE_API_KEY=your-api-key-here
      - MCP_OPENAI_API_KEY=your-openai-key-here
      - MCP_CUSTOM_SETTING=some-value
    # other configuration...
```

These environment variables will be automatically passed to your MCP servers when they are executed.

### Example: Using Brave Search MCP Server

This example shows how to set up and use the Brave Search MCP server:

1. Install the Brave Search MCP server:
   ```bash
   npm install -g @modelcontextprotocol/server-brave-search
   ```

2. Configure MCP Client credentials:
   - **Command**: `npx`
   - **Arguments**: `-y @modelcontextprotocol/server-brave-search`
   - **Environment Variables**: `BRAVE_API_KEY=your-api-key` Add a variables (space comma or newline separated)

3. Create a workflow that uses the MCP Client node:
   - Add an MCP Client node
   - Select the &quot;List Tools&quot; operation to see available search tools
   - Add another MCP Client node
   - Select the &quot;Execute Tool&quot; operation
   - Choose the &quot;brave_search&quot; tool
   - Set Parameters to: `{&quot;query&quot;: &quot;latest AI news&quot;}`

![Brave Search Example](./assets/brave-search-example.png)

The node will execute the search and return the results in the output.

### Example: Multi-Server Setup with AI Agent

This example demonstrates how to set up multiple MCP servers in a production environment and use them with an AI agent:

1. Configure your docker-compose.yml file:

```yaml
version: &#039;3&#039;

services:
  n8n:
    image: n8nio/n8n
    environment:
      # MCP server environment variables
      - MCP_BRAVE_API_KEY=your-brave-api-key
      - MCP_OPENAI_API_KEY=your-openai-key
      - MCP_SERPER_API_KEY=your-serper-key
      - MCP_WEATHER_API_KEY=your-weather-api-key

      # Enable community nodes as tools
      - N8N_COMMUNITY_PACKAGES_ALLOW_TOOL_USAGE=true
    ports:
      - &quot;5678:5678&quot;
    volumes:
      - ~/.n8n:/home/node/.n8n
```

2. Create multiple MCP Client credentials in n8n:

   **Brave Search Credentials**:
   - Command: `npx`
   - Arguments: `-y @modelcontextprotocol/server-brave-search`

   **OpenAI Tools Credentials**:
   - Command: `npx`
   - Arguments: `-y @modelcontextprotocol/server-openai`

   **Web Search Credentials**:
   - Command: `npx`
   - Arguments: `-y @modelcontextprotocol/server-serper`

   **Weather API Credentials**:
   - Command: `npx`
   - Arguments: `-y @modelcontextprotocol/server-weather`

3. Create an AI Agent workflow:
   - Add an AI Agent node
   - Enable MCP Client as a tool
   - Configure different MCP Client nodes with different credentials
   - Create a prompt that uses multiple data sources

![Multi-Server Setup](./assets/multi-server-example.png)

Example AI Agent prompt:
```
I need you to help me plan a trip. First, search for popular destinations in {destination_country}.
Then, check the current weather in the top 3 cities.
Finally, find some recent news about travel restrictions for these places.
```

With this setup, the AI agent can use multiple MCP tools across different servers, all using environment variables configured in your Docker deployment.

## Operations

The MCP Client node supports the following operations:

![MCP Client Operations](./assets/operations.png)

- **Execute Tool** - Execute a specific tool with parameters
- **Get Prompt** - Get a specific prompt template
- **List Prompts** - Get a list of available prompts
- **List Resources** - Get a list of available resources from the MCP server
- **List Tools** - Get a list of available tools
- **Read Resource** - Read a specific resource by URI

### Example: List Tools Operation

![List Tools Example](./assets/list-tools.png)

The List Tools operation returns all available tools from the MCP server, including their names, descriptions, and parameter schemas.

### Example: Execute Tool Operation

![Execute Tool Example](./assets/execute-tool.png)

The Execute Tool operation allows you to execute a specific tool with parameters. Make sure to select the tool you want to execute from the dropdown menu.

## Using as a Tool

This node can be used as a tool in n8n AI Agents. To enable community nodes as tools, you need to set the `N8N_COMMUNITY_PACKAGES_ALLOW_TOOL_USAGE` environment variable to `true`.

### Setting the Environment Variable

**If you&#039;re using a bash/zsh shell:**
```bash
export N8N_COMMUNITY_PACKAGES_ALLOW_TOOL_USAGE=true
n8n start
```

**If you&#039;re using Docker:**
Add to your docker-compose.yml file:
```yaml
environment:
  - N8N_COMMUNITY_PACKAGES_ALLOW_TOOL_USAGE=true
```

**If you&#039;re using the desktop app:**
Create a `.env` file in the n8n directory:
```
N8N_COMMUNITY_PACKAGES_ALLOW_TOOL_USAGE=true
```

**If you want to set it permanently on Mac/Linux:**
Add to your `~/.zshrc` or `~/.bash_profile`:
```bash
export N8N_COMMUNITY_PACKAGES_ALLOW_TOOL_USAGE=true
```

Example of an AI Agent workflow results:

![AI Agent Example](./assets/execute-tool-result.png)

After setting this environment variable and restarting n8n, your MCP Client node will be available as a tool in AI Agent nodes.

## Compatibility

- Requires n8n version 1.0.0 or later
- Compatible with MCP Protocol version 1.0.0 or later
- Supports both STDIO and SSE transports for connecting to MCP servers
- SSE transport requires a server that implements the MCP Server-Sent Events specification

## Resources

* [n8n community nodes documentation](https://docs.n8n.io/integrations/community-nodes/)
* [Model Context Protocol Documentation](https://modelcontextprotocol.io/docs/)
* [MCP TypeScript SDK](https://github.com/modelcontextprotocol/typescript-sdk)
* [MCP Transports Overview](https://modelcontextprotocol.io/docs/concepts/transports)
* [Using SSE in MCP](https://github.com/modelcontextprotocol/typescript-sdk/blob/main/src/client/sse.ts)


</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[directus/directus]]></title>
            <link>https://github.com/directus/directus</link>
            <guid>https://github.com/directus/directus</guid>
            <pubDate>Tue, 08 Jul 2025 00:04:46 GMT</pubDate>
            <description><![CDATA[The flexible backend for all your projects 🐰 Turn your DB into a headless CMS, admin panels, or apps with a custom UI, instant APIs, auth & more.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/directus/directus">directus/directus</a></h1>
            <p>The flexible backend for all your projects 🐰 Turn your DB into a headless CMS, admin panels, or apps with a custom UI, instant APIs, auth & more.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 31,465</p>
            <p>Forks: 4,286</p>
            <p>Stars today: 47 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[discordjs/discord.js]]></title>
            <link>https://github.com/discordjs/discord.js</link>
            <guid>https://github.com/discordjs/discord.js</guid>
            <pubDate>Tue, 08 Jul 2025 00:04:45 GMT</pubDate>
            <description><![CDATA[A powerful JavaScript library for interacting with the Discord API]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/discordjs/discord.js">discordjs/discord.js</a></h1>
            <p>A powerful JavaScript library for interacting with the Discord API</p>
            <p>Language: TypeScript</p>
            <p>Stars: 26,107</p>
            <p>Forks: 4,011</p>
            <p>Stars today: 8 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
	&lt;br /&gt;
	&lt;p&gt;
		&lt;a href=&quot;https://discord.js.org&quot;&gt;&lt;img src=&quot;https://discord.js.org/static/logo.svg&quot; width=&quot;546&quot; alt=&quot;discord.js&quot; /&gt;&lt;/a&gt;
	&lt;/p&gt;
	&lt;br /&gt;
	&lt;p&gt;
		&lt;a href=&quot;https://discord.gg/djs&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/222078108977594368?color=5865F2&amp;logo=discord&amp;logoColor=white&quot; alt=&quot;Discord server&quot; /&gt;&lt;/a&gt;
		&lt;a href=&quot;https://www.npmjs.com/package/discord.js&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/discord.js.svg?maxAge=3600&quot; alt=&quot;npm version&quot; /&gt;&lt;/a&gt;
		&lt;a href=&quot;https://www.npmjs.com/package/discord.js&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dt/discord.js.svg?maxAge=3600&quot; alt=&quot;npm downloads&quot; /&gt;&lt;/a&gt;
		&lt;a href=&quot;https://github.com/discordjs/discord.js/actions&quot;&gt;&lt;img src=&quot;https://github.com/discordjs/discord.js/actions/workflows/tests.yml/badge.svg&quot; alt=&quot;Tests status&quot; /&gt;&lt;/a&gt;
		&lt;a href=&quot;https://github.com/discordjs/discord.js/commits/main&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/last-commit/discordjs/discord.js.svg?logo=github&amp;logoColor=ffffff&quot; alt=&quot;Last commit.&quot; /&gt;&lt;/a&gt;
		&lt;a href=&quot;https://github.com/discordjs/discord.js/graphs/contributors&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/contributors/discordjs/discord.js.svg?maxAge=3600&amp;logo=github&amp;logoColor=fff&amp;color=00c7be&quot; alt=&quot;contributors&quot; /&gt;&lt;/a&gt;
		&lt;a href=&quot;https://codecov.io/gh/discordjs/discord.js&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/discordjs/discord.js/branch/main/graph/badge.svg?precision=2&quot; alt=&quot;Code coverage&quot; /&gt;&lt;/a&gt;
	&lt;/p&gt;
	&lt;p&gt;
		&lt;a href=&quot;https://vercel.com/?utm_source=discordjs&amp;utm_campaign=oss&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/discordjs/discord.js/main/.github/powered-by-vercel.svg&quot; alt=&quot;Vercel&quot; /&gt;&lt;/a&gt;
		&lt;a href=&quot;https://www.cloudflare.com&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/discordjs/discord.js/main/.github/powered-by-workers.png&quot; alt=&quot;Cloudflare Workers&quot; height=&quot;44&quot; /&gt;&lt;/a&gt;
	&lt;/p&gt;
&lt;/div&gt;

## About

This repository contains multiple packages with separate [releases][github-releases]. You can find the assembled Discord API wrapper at [`discord.js`][source]. It is a powerful [Node.js](https://nodejs.org/en) module that allows you to easily interact with the [Discord API](https://discord.com/developers/docs/intro).

## Packages

- `discord.js` ([source][source]) - A powerful Node.js module for interacting with the Discord API
- `@discordjs/brokers` ([source][brokers-source]) - A collection of brokers for use with discord.js
- `@discordjs/builders` ([source][builders-source]) - A utility package for easily building Discord API payloads
- `@discordjs/collection` ([source][collection-source]) - A powerful utility data structure
- `@discordjs/core` ([source][core-source]) - A thinly abstracted wrapper around the core components of the Discord API
- `@discordjs/formatters` ([source][formatters-source]) - A collection of functions for formatting strings
- `@discordjs/proxy` ([source][proxy-source]) - A wrapper around `@discordjs/rest` for running an HTTP proxy
- `@discordjs/rest` ([source][rest-source]) - A module for interacting with the Discord REST API
- `@discordjs/voice` ([source][voice-source]) - A module for interacting with the Discord Voice API
- `@discordjs/util` ([source][util-source]) - A collection of utility functions
- `@discordjs/ws` ([source][ws-source]) - A wrapper around Discord&#039;s gateway

## Links

- [Website][website] ([source][website-source])
- [Documentation][documentation]
- [Guide][guide] ([source][guide-source])
  Also see the v13 to v14 [Update Guide][guide-update], which includes updated and removed items from the library.
- [discord.js Discord server][discord]
- [Discord API Discord server][discord-api]
- [GitHub][source]
- [npm][npm]
- [Related libraries][related-libs]

### Extensions

- [RPC][rpc] ([source][rpc-source])

## Contributing

Please read through our [contribution guidelines][contributing] before starting a pull request. We welcome contributions of all kinds, not just code! If you&#039;re stuck for ideas, look for the [good first issue][good-first-issue] label on issues in the repository. If you have any questions about the project, feel free to ask them on [Discord][discord]. Before creating your own issue or pull request, always check to see if one already exists! Don&#039;t rush contributions, take your time and ensure you&#039;re doing it correctly.

## Help

If you don&#039;t understand something in the documentation, you are experiencing problems, or you just need a gentle nudge in the right direction, please join our [Discord server][discord].

[website]: https://discord.js.org
[website-source]: https://github.com/discordjs/discord.js/tree/main/apps/website
[documentation]: https://discord.js.org/docs
[guide]: https://discordjs.guide/
[guide-source]: https://github.com/discordjs/guide
[guide-update]: https://discordjs.guide/additional-info/changes-in-v14.html
[discord]: https://discord.gg/djs
[discord-api]: https://discord.gg/discord-api
[source]: https://github.com/discordjs/discord.js/tree/main/packages/discord.js
[npm]: https://www.npmjs.com/package/discord.js
[related-libs]: https://discord.com/developers/docs/topics/community-resources#libraries
[rpc]: https://www.npmjs.com/package/discord-rpc
[rpc-source]: https://github.com/discordjs/RPC
[contributing]: https://github.com/discordjs/discord.js/blob/main/.github/CONTRIBUTING.md
[github-releases]: https://github.com/discordjs/discord.js/releases
[brokers-source]: https://github.com/discordjs/discord.js/tree/main/packages/brokers
[builders-source]: https://github.com/discordjs/discord.js/tree/main/packages/builders
[collection-source]: https://github.com/discordjs/discord.js/tree/main/packages/collection
[core-source]: https://github.com/discordjs/discord.js/tree/main/packages/core
[formatters-source]: https://github.com/discordjs/discord.js/tree/main/packages/formatters
[proxy-source]: https://github.com/discordjs/discord.js/tree/main/packages/proxy
[rest-source]: https://github.com/discordjs/discord.js/tree/main/packages/rest
[voice-source]: https://github.com/discordjs/discord.js/tree/main/packages/voice
[util-source]: https://github.com/discordjs/discord.js/tree/main/packages/util
[ws-source]: https://github.com/discordjs/discord.js/tree/main/packages/ws
[good-first-issue]: https://github.com/discordjs/discord.js/contribute
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[bytedance/UI-TARS-desktop]]></title>
            <link>https://github.com/bytedance/UI-TARS-desktop</link>
            <guid>https://github.com/bytedance/UI-TARS-desktop</guid>
            <pubDate>Tue, 08 Jul 2025 00:04:44 GMT</pubDate>
            <description><![CDATA[The Open All-in-One Multimodal AI Agent Stack connecting Cutting-edge AI Models and Agent Infra.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/bytedance/UI-TARS-desktop">bytedance/UI-TARS-desktop</a></h1>
            <p>The Open All-in-One Multimodal AI Agent Stack connecting Cutting-edge AI Models and Agent Infra.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 15,029</p>
            <p>Forks: 1,336</p>
            <p>Stars today: 33 stars today</p>
            <h2>README</h2><pre>&lt;picture&gt;
  &lt;img alt=&quot;Agent TARS Banner&quot; src=&quot;./images/tars.png&quot;&gt;
&lt;/picture&gt;

&lt;br/&gt;

## Introduction

English | [简体中文](./README.zh-CN.md)

[![](https://trendshift.io/api/badge/repositories/13584)](https://trendshift.io/repositories/13584)

&lt;b&gt;TARS&lt;sup&gt;\*&lt;/sup&gt;&lt;/b&gt; is a Multimodal AI Agent stack, currently shipping two projects: [Agent TARS](#agent-tars) and [UI-TARS-desktop](#ui-tars-desktop):

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th width=&quot;50%&quot; align=&quot;center&quot;&gt;&lt;a href=&quot;#agent-tars&quot;&gt;Agent TARS&lt;/a&gt;&lt;/th&gt;
      &lt;th width=&quot;50%&quot; align=&quot;center&quot;&gt;&lt;a href=&quot;#ui-tars-desktop&quot;&gt;UI-TARS-desktop&lt;/a&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot;&gt;
        &lt;video src=&quot;https://github.com/user-attachments/assets/c9489936-afdc-4d12-adda-d4b90d2a869d&quot; width=&quot;50%&quot;&gt;&lt;/video&gt;
      &lt;/td&gt;
      &lt;td align=&quot;center&quot;&gt;
        &lt;video src=&quot;https://github.com/user-attachments/assets/e0914ce9-ad33-494b-bdec-0c25c1b01a27&quot; width=&quot;50%&quot;&gt;&lt;/video&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td align=&quot;left&quot;&gt;
        &lt;b&gt;Agent TARS&lt;/b&gt; is a general multimodal AI Agent stack, it brings the power of GUI Agent and Vision into your terminal, computer, browser and product.
        &lt;br&gt;
        &lt;br&gt;
        It primarily ships with a &lt;a href=&quot;https://agent-tars.com/guide/basic/cli.html&quot; target=&quot;_blank&quot;&gt;CLI&lt;/a&gt; and &lt;a href=&quot;https://agent-tars.com/guide/basic/web-ui.html&quot; target=&quot;_blank&quot;&gt;Web UI&lt;/a&gt; for usage.
        It aims to provide a workflow that is closer to human-like task completion through cutting-edge multimodal LLMs and seamless integration with various real-world &lt;a href=&quot;https://agent-tars.com/guide/basic/mcp.html&quot; target=&quot;_blank&quot;&gt;MCP&lt;/a&gt; tools.
      &lt;/td&gt;
      &lt;td align=&quot;left&quot;&gt;
        &lt;b&gt;UI-TARS Desktop&lt;/b&gt; is a desktop application that provides a native GUI Agent based on the &lt;a href=&quot;https://github.com/bytedance/UI-TARS&quot; target=&quot;_blank&quot;&gt;UI-TARS&lt;/a&gt; model.
        &lt;br&gt;
        &lt;br&gt;
        It primarily ships a
        &lt;a href=&quot;https://github.com/bytedance/UI-TARS-desktop/blob/docs/new-readme/docs/quick-start.md#get-model-and-run&quot; target=&quot;_blank&quot;&gt;local&lt;/a&gt; and 
        &lt;a href=&quot;https://github.com/bytedance/UI-TARS-desktop/blob/docs/new-readme/docs/quick-start.md#try-out-our-free-remote-operators&quot; target=&quot;_blank&quot;&gt;remote&lt;/a&gt; computer as well as browser operators.
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

## Table of Contents

&lt;!-- START doctoc generated TOC please keep comment here to allow auto update --&gt;
&lt;!-- DON&#039;T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE --&gt;

- [News](#news)
- [Agent TARS](#agent-tars)
  - [Showcase](#showcase)
  - [Core Features](#core-features)
  - [Quick Start](#quick-start)
  - [Documentation](#documentation)
- [UI-TARS Desktop](#ui-tars-desktop)
  - [Showcase](#showcase-1)
  - [Features](#features)
  - [Quick Start](#quick-start-1)
- [Contributing](#contributing)
- [License](#license)
- [Citation](#citation)

&lt;!-- END doctoc generated TOC please keep comment here to allow auto update --&gt;

## News

- **\[2025-06-25\]** We released a Agent TARS Beta and Agent TARS CLI - [Introducing Agent TARS Beta](https://agent-tars.com/blog/2025-06-25-introducing-agent-tars-beta.html), a multimodal AI agent that aims to explore a work form that is closer to human-like task completion through rich multimodal capabilities (such as GUI Agent, Vision) and seamless integration with various real-world tools.
- **\[2025-06-12\]** - 🎁 We are thrilled to announce the release of UI-TARS Desktop v0.2.0! This update introduces two powerful new features: **Remote Computer Operator** and **Remote Browser Operator**—both completely free. No configuration required: simply click to remotely control any computer or browser, and experience a new level of convenience and intelligence.
- **\[2025-04-17\]** - 🎉 We&#039;re thrilled to announce the release of new UI-TARS Desktop application v0.1.0, featuring a redesigned Agent UI. The application enhances the computer using experience, introduces new browser operation features, and supports [the advanced UI-TARS-1.5 model](https://seed-tars.com/1.5) for improved performance and precise control.
- **\[2025-02-20\]** - 📦 Introduced [UI TARS SDK](./docs/sdk.md), is a powerful cross-platform toolkit for building GUI automation agents.
- **\[2025-01-23\]** - 🚀 We updated the **[Cloud Deployment](./docs/deployment.md#cloud-deployment)** section in the 中文版: [GUI模型部署教程](https://bytedance.sg.larkoffice.com/docx/TCcudYwyIox5vyxiSDLlgIsTgWf#U94rdCxzBoJMLex38NPlHL21gNb) with new information related to the ModelScope platform. You can now use the ModelScope platform for deployment.

&lt;br&gt;

## Agent TARS

&lt;p&gt;
    &lt;a href=&quot;https://npmjs.com/package/@agent-tars/cli?activeTab=readme&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/@agent-tars/cli?style=for-the-badge&amp;colorA=1a1a2e&amp;colorB=3B82F6&amp;logo=npm&amp;logoColor=white&quot; alt=&quot;npm version&quot; /&gt;&lt;/a&gt;
    &lt;a href=&quot;https://npmcharts.com/compare/@agent-tars/cli?minimal=true&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/@agent-tars/cli.svg?style=for-the-badge&amp;colorA=1a1a2e&amp;colorB=0EA5E9&amp;logo=npm&amp;logoColor=white&quot; alt=&quot;downloads&quot; /&gt;&lt;/a&gt;
    &lt;a href=&quot;https://nodejs.org/en/about/previous-releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/node/v/@agent-tars/cli.svg?style=for-the-badge&amp;colorA=1a1a2e&amp;colorB=06B6D4&amp;logo=node.js&amp;logoColor=white&quot; alt=&quot;node version&quot;&gt;&lt;/a&gt;
    &lt;a href=&quot;https://discord.gg/HnKcSBgTVx&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Discord-Join%20Community-5865F2?style=for-the-badge&amp;logo=discord&amp;logoColor=white&quot; alt=&quot;Discord Community&quot; /&gt;&lt;/a&gt;
    &lt;a href=&quot;https://twitter.com/agent_tars&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Twitter-Follow%20%40agent__tars-1DA1F2?style=for-the-badge&amp;logo=twitter&amp;logoColor=white&quot; alt=&quot;Official Twitter&quot; /&gt;&lt;/a&gt;
    &lt;a href=&quot;https://applink.larkoffice.com/client/chat/chatter/add_by_link?link_token=279h3365-b0fa-407f-89f3-0f96f36cd4d8&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/飞书群-加入交流群-00D4AA?style=for-the-badge&amp;logo=lark&amp;logoColor=white&quot; alt=&quot;飞书交流群&quot; /&gt;&lt;/a&gt;
    &lt;a href=&quot;https://deepwiki.com/bytedance/UI-TARS-desktop&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/DeepWiki-Ask%20AI-8B5CF6?style=for-the-badge&amp;logo=gitbook&amp;logoColor=white&quot; alt=&quot;Ask DeepWiki&quot; /&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;b&gt;Agent TARS&lt;/b&gt; is a general multimodal AI Agent stack, it brings the power of GUI Agent and Vision into your terminal, computer, browser and product. &lt;br&gt; &lt;br&gt;
It primarily ships with a &lt;a href=&quot;https://agent-tars.com/guide/basic/cli.html&quot; target=&quot;_blank&quot;&gt;CLI&lt;/a&gt; and &lt;a href=&quot;https://agent-tars.com/guide/basic/web-ui.html&quot; target=&quot;_blank&quot;&gt;Web UI&lt;/a&gt; for usage.
It aims to provide a workflow that is closer to human-like task completion through cutting-edge multimodal LLMs and seamless integration with various real-world &lt;a href=&quot;https://agent-tars.com/guide/basic/mcp.html&quot; target=&quot;_blank&quot;&gt;MCP&lt;/a&gt; tools.


### Showcase

```
Please help me book the earliest flight from San Jose to New York on September 1st and the last return flight on September 6th on Priceline
```

https://github.com/user-attachments/assets/772b0eef-aef7-4ab9-8cb0-9611820539d8

&lt;br&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th width=&quot;50%&quot; align=&quot;center&quot;&gt;Booking Hotel&lt;/th&gt;
      &lt;th width=&quot;50%&quot; align=&quot;center&quot;&gt;Generate Chart with extra MCP Servers&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot;&gt;
        &lt;video src=&quot;https://github.com/user-attachments/assets/c9489936-afdc-4d12-adda-d4b90d2a869d&quot; width=&quot;50%&quot;&gt;&lt;/video&gt;
      &lt;/td&gt;
      &lt;td align=&quot;center&quot;&gt;
        &lt;video src=&quot;https://github.com/user-attachments/assets/a9fd72d0-01bb-4233-aa27-ca95194bbce9&quot; width=&quot;50%&quot;&gt;&lt;/video&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td align=&quot;left&quot;&gt;
        &lt;b&gt;Instruction:&lt;/b&gt; &lt;i&gt;I am in Los Angeles from September 1st to September 6th, with a budget of $5,000. Please help me book a Ritz-Carlton hotel closest to the airport on booking.com and compile a transportation guide for me&lt;/i&gt;
      &lt;/td&gt;
      &lt;td align=&quot;left&quot;&gt;
        &lt;b&gt;Instruction:&lt;/b&gt; &lt;i&gt;Draw me a chart of Hangzhou&#039;s weather for one month&lt;/i&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

For more use cases, please check out [#842](https://github.com/bytedance/UI-TARS-desktop/issues/842).

### Core Features

- 🖱️ **One-Click Out-of-the-box CLI** - Supports both **headful** [Web UI](https://agent-tars.com/guide/basic/web-ui.html) and **headless** [server](https://agent-tars.com/guide/advanced/server.html)) [execution](https://agent-tars.com/guide/basic/cli.html).
- 🌐 **Hybrid Browser Agent** - Control browsers using [GUI Agent](https://agent-tars.com/guide/basic/browser.html#visual-grounding), [DOM](https://agent-tars.com/guide/basic/browser.html#dom), or a hybrid strategy.
- 🔄 **Event Stream** - Protocol-driven Event Stream drives [Context Engineering](https://agent-tars.com/beta#context-engineering) and [Agent UI](https://agent-tars.com/blog/2025-06-25-introducing-agent-tars-beta.html#easy-to-build-applications).
- 🧰 **MCP Integration** - The kernel is built on MCP and also supports mounting [MCP Servers](https://agent-tars.com/guide/basic/mcp.html) to connect to real-world tools.

### Quick Start

&lt;img alt=&quot;Agent TARS CLI&quot; src=&quot;https://agent-tars.com/agent-tars-cli.png&quot;&gt;

```bash
# Luanch with `npx`.
npx @agent-tars/cli@latest

# Install globally, required Node.js &gt;= 22
npm install @agent-tars/cli@latest -g

# Run with your preferred model provider
agent-tars --provider volcengine --model doubao-1-5-thinking-vision-pro-250428 --apiKey your-api-key
agent-tars --provider anthropic --model claude-3-7-sonnet-latest --apiKey your-api-key
```

Visit the comprehensive [Quick Start](https://agent-tars.com/guide/get-started/quick-start.html) guide for detailed setup instructions.

### Documentation

&gt; 🌟 **Explore Agent TARS Universe** 🌟

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th width=&quot;20%&quot; align=&quot;center&quot;&gt;Category&lt;/th&gt;
      &lt;th width=&quot;30%&quot; align=&quot;center&quot;&gt;Resource Link&lt;/th&gt;
      &lt;th width=&quot;50%&quot; align=&quot;left&quot;&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot;&gt;🏠 &lt;strong&gt;Central Hub&lt;/strong&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot;&gt;
        &lt;a href=&quot;https://agent-tars.com&quot;&gt;
          &lt;img src=&quot;https://img.shields.io/badge/Visit-Website-4F46E5?style=for-the-badge&amp;logo=globe&amp;logoColor=white&quot; alt=&quot;Website&quot; /&gt;
        &lt;/a&gt;
      &lt;/td&gt;
      &lt;td align=&quot;left&quot;&gt;Your gateway to Agent TARS ecosystem&lt;/td&gt;
    &lt;/tr&gt;
      &lt;tr&gt;
      &lt;td align=&quot;center&quot;&gt;📚 &lt;strong&gt;Quick Start&lt;/strong&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot;&gt;
        &lt;a href=&quot;https://agent-tars.com/guide/get-started/quick-start.html&quot;&gt;
          &lt;img src=&quot;https://img.shields.io/badge/Get-Started-06B6D4?style=for-the-badge&amp;logo=rocket&amp;logoColor=white&quot; alt=&quot;Quick Start&quot; /&gt;
        &lt;/a&gt;
      &lt;/td&gt;
      &lt;td align=&quot;left&quot;&gt;Zero to hero in 5 minutes&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot;&gt;🚀 &lt;strong&gt;What&#039;s New&lt;/strong&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot;&gt;
        &lt;a href=&quot;https://agent-tars.com/beta&quot;&gt;
          &lt;img src=&quot;https://img.shields.io/badge/Read-Blog-F59E0B?style=for-the-badge&amp;logo=rss&amp;logoColor=white&quot; alt=&quot;Blog&quot; /&gt;
        &lt;/a&gt;
      &lt;/td&gt;
      &lt;td align=&quot;left&quot;&gt;Discover cutting-edge features &amp; vision&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot;&gt;🛠️ &lt;strong&gt;Developer Zone&lt;/strong&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot;&gt;
        &lt;a href=&quot;https://agent-tars.com/guide/get-started/introduction.html&quot;&gt;
          &lt;img src=&quot;https://img.shields.io/badge/View-Docs-10B981?style=for-the-badge&amp;logo=gitbook&amp;logoColor=white&quot; alt=&quot;Docs&quot; /&gt;
        &lt;/a&gt;
      &lt;/td&gt;
      &lt;td align=&quot;left&quot;&gt;Master every command &amp; features&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot;&gt;🎯 &lt;strong&gt;Showcase&lt;/strong&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot;&gt;
        &lt;a href=&quot;https://github.com/bytedance/UI-TARS-desktop/issues/842&quot;&gt;
          &lt;img src=&quot;https://img.shields.io/badge/View-Examples-8B5CF6?style=for-the-badge&amp;logo=github&amp;logoColor=white&quot; alt=&quot;Examples&quot; /&gt;
        &lt;/a&gt;
      &lt;/td&gt;
      &lt;td align=&quot;left&quot;&gt;View use cases built by the official and community&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot;&gt;🔧 &lt;strong&gt;Reference&lt;/strong&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot;&gt;
        &lt;a href=&quot;https://agent-tars.com/api/&quot;&gt;
          &lt;img src=&quot;https://img.shields.io/badge/API-Reference-EF4444?style=for-the-badge&amp;logo=book&amp;logoColor=white&quot; alt=&quot;API&quot; /&gt;
        &lt;/a&gt;
      &lt;/td&gt;
      &lt;td align=&quot;left&quot;&gt;Complete technical reference&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;

## UI-TARS Desktop

&lt;p align=&quot;center&quot;&gt;
  &lt;img alt=&quot;UI-TARS&quot; width=&quot;260&quot; src=&quot;./apps/ui-tars/resources/icon.png&quot;&gt;
&lt;/p&gt;

UI-TARS Desktop is a native GUI agent driven by [UI-TARS](https://github.com/bytedance/UI-TARS) and Seed-1.5-VL/1.6 series models, available on your local computer and remote VM sandbox on cloud.

&lt;div align=&quot;center&quot;&gt;
&lt;p&gt;
        &amp;nbsp&amp;nbsp 📑 &lt;a href=&quot;https://arxiv.org/abs/2501.12326&quot;&gt;Paper&lt;/a&gt; &amp;nbsp&amp;nbsp
        | 🤗 &lt;a href=&quot;https://huggingface.co/ByteDance-Seed/UI-TARS-1.5-7B&quot;&gt;Hugging Face Models&lt;/a&gt;&amp;nbsp&amp;nbsp
        | &amp;nbsp&amp;nbsp🫨 &lt;a href=&quot;https://discord.gg/pTXwYVjfcs&quot;&gt;Discord&lt;/a&gt;&amp;nbsp&amp;nbsp
        | &amp;nbsp&amp;nbsp🤖 &lt;a href=&quot;https://www.modelscope.cn/collections/UI-TARS-bccb56fa1ef640&quot;&gt;ModelScope&lt;/a&gt;&amp;nbsp&amp;nbsp
&lt;br&gt;
🖥️ Desktop Application &amp;nbsp&amp;nbsp
| &amp;nbsp&amp;nbsp 👓 &lt;a href=&quot;https://github.com/web-infra-dev/midscene&quot;&gt;Midscene (use in browser)&lt;/a&gt; &amp;nbsp&amp;nbsp
&lt;/p&gt;

&lt;/div&gt;

### Showcase

&lt;!-- // FIXME: Choose only two demo, one local computer and one remote computer showcase. --&gt;

|                                                          Instruction                                                           |                                                Local Operator                                                |                                               Remote Operator                                                |
| :----------------------------------------------------------------------------------------------------------------------------: | :----------------------------------------------------------------------------------------------------------: | :----------------------------------------------------------------------------------------------------------: |
| Please help me open the autosave feature of VS Code and delay AutoSave operations for 500 milliseconds in the VS Code setting. | &lt;video src=&quot;https://github.com/user-attachments/assets/e0914ce9-ad33-494b-bdec-0c25c1b01a27&quot; height=&quot;300&quot; /&gt; | &lt;video src=&quot;https://github.com/user-attachments/assets/01e49b69-7070-46c8-b3e3-2aaaaec71800&quot; height=&quot;300&quot; /&gt; |
|                    Could you help me check the latest open issue of the UI-TARS-Desktop project on GitHub?                     | &lt;video src=&quot;https://github.com/user-attachments/assets/3d159f54-d24a-4268-96c0-e149607e9199&quot; height=&quot;300&quot; /&gt; | &lt;video src=&quot;https://github.com/user-attachments/assets/072fb72d-7394-4bfa-95f5-4736e29f7e58&quot; height=&quot;300&quot; /&gt; |

### Features

- 🤖 Natural language control powered by Vision-Language Model
- 🖥️ Screenshot and visual recognition support
- 🎯 Precise mouse and keyboard control
- 💻 Cross-platform support (Windows/MacOS/Browser)
- 🔄 Real-time feedback and status display
- 🔐 Private and secure - fully local processing
- 🛠️ Effortless setup and intuitive remote operators

### Quick Start

See [Quick Start](./docs/quick-start.md)

## Contributing

See [CONTRIBUTING.md](./CONTRIBUTING.md).

## License

This project is licensed under the Apache License 2.0.

## Citation

If you find our paper and code useful in your research, please consider giving a star :star: and citation :pencil:

```BibTeX
@article{qin2025ui,
  title={UI-TARS: Pioneering Automated GUI Interaction with Native Agents},
  author={Qin, Yujia and Ye, Yining and Fang, Junjie and Wang, Haoming and Liang, Shihao and Tian, Shizuo and Zhang, Junda and Li, Jiahao and Li, Yunxin and Huang, Shijue and others},
  journal={arXiv preprint arXiv:2501.12326},
  year={2025}
}
```</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[gothinkster/realworld]]></title>
            <link>https://github.com/gothinkster/realworld</link>
            <guid>https://github.com/gothinkster/realworld</guid>
            <pubDate>Tue, 08 Jul 2025 00:04:43 GMT</pubDate>
            <description><![CDATA["The mother of all demo apps" — Exemplary fullstack Medium.com clone powered by React, Angular, Node, Django, and many more]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/gothinkster/realworld">gothinkster/realworld</a></h1>
            <p>"The mother of all demo apps" — Exemplary fullstack Medium.com clone powered by React, Angular, Node, Django, and many more</p>
            <p>Language: TypeScript</p>
            <p>Stars: 81,862</p>
            <p>Forks: 7,457</p>
            <p>Stars today: 30 stars today</p>
            <h2>README</h2><pre>![RealWorld Example Applications](media/realworld-dual-mode.png)

&lt;p align=&quot;center&quot; style=&quot;margin-top: 30px;&quot;&gt;
&lt;img src=&quot;media/stacks_hr.gif&quot;  /&gt;
&lt;/p&gt;


While most &quot;todo&quot; demos provide an excellent cursory glance at a framework&#039;s capabilities, they typically don&#039;t convey the knowledge &amp; perspective required to actually build _real_ applications with it.

**RealWorld** solves this by allowing you to choose any frontend (React, Angular, &amp; more) and any backend (Node, Django, &amp; more).

_Read the [full blog post announcing RealWorld on Medium.](https://medium.com/@ericsimons/introducing-realworld-6016654d36b5)_

Join us on [GitHub Discussions!](https://github.com/gothinkster/realworld/discussions) 🎉

# Implementations

Over 100 implementations have been created using various languages, libraries, and frameworks.

Explore them on [**CodebaseShow**](https://codebase.show/projects/realworld).

# Create a new implementation

[**Create a new implementation &gt;&gt;&gt;**](https://realworld-docs.netlify.app/implementation-creation/introduction)

Or you can [view upcoming implementations (WIPs)](https://github.com/gothinkster/realworld/discussions/categories/wip-implementations).

# Learn more

- [&quot;Introducing RealWorld 🙌&quot;](https://medium.com/@ericsimons/introducing-realworld-6016654d36b5) by Eric Simons
- Every tutorial is built against the same [API spec](api/) to ensure modularity of every frontend &amp; backend
- Every frontend utilizes the same handcrafted [Bootstrap 4 theme](https://github.com/gothinkster/conduit-bootstrap-template) for identical UI/UX
- There is a hosted version of the backend API available for public usage, no API keys are required
- Interested in creating a new RealWorld stack? View our [starter guide &amp; spec](https://realworld-docs.netlify.app/implementation-creation/introduction)

# Active Maintainers

#### [Gérôme Grignon](https://github.com/geromegrignon) - Maintainer

&lt;img align=&quot;left&quot; width=&quot;40&quot; height=&quot;40&quot; src=&quot;https://avatars.githubusercontent.com/u/32737308?v=4&quot;&gt;

Gérôme is a Frontend Software Engineer at Lucca. He&#039;s an open-source enthusiast.&lt;br /&gt;&lt;br /&gt;

#### [Manuel Vila](https://github.com/mvila) - Maintainer

&lt;img align=&quot;left&quot; width=&quot;40&quot; height=&quot;40&quot; src=&quot;https://avatars.githubusercontent.com/u/381671?v=40&quot;&gt;

Manuel is an independent Software Engineer, creator of the [Layr framework](https://layrjs.com) and the [CodebaseShow website](https://codebase.show/).&lt;br /&gt;&lt;br /&gt;

</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[github/docs]]></title>
            <link>https://github.com/github/docs</link>
            <guid>https://github.com/github/docs</guid>
            <pubDate>Tue, 08 Jul 2025 00:04:42 GMT</pubDate>
            <description><![CDATA[The open-source repo for docs.github.com]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/github/docs">github/docs</a></h1>
            <p>The open-source repo for docs.github.com</p>
            <p>Language: TypeScript</p>
            <p>Stars: 17,554</p>
            <p>Forks: 62,337</p>
            <p>Stars today: 7 stars today</p>
            <h2>README</h2><pre># GitHub Docs &lt;!-- omit in toc --&gt;
[![Build GitHub Docs On Codespaces](https://github.com/codespaces/badge.svg)](https://github.com/codespaces/new/?repo=github)

This repository contains the documentation website code and Markdown source files for [docs.github.com](https://docs.github.com).

GitHub&#039;s Docs team works on pre-production content in a private repo that regularly syncs with this public repo.

Use the table of contents icon &lt;img alt=&quot;Table of contents icon&quot; src=&quot;./contributing/images/table-of-contents.png&quot; width=&quot;25&quot; height=&quot;25&quot; /&gt; on the top right corner of this document to navigate to a specific section quickly.

## Contributing

We accept different types of contributions, including some that don&#039;t require you to write a single line of code. For detailed instructions on how to get started with our project, see [About contributing to GitHub Docs](https://docs.github.com/en/contributing/collaborating-on-github-docs/about-contributing-to-github-docs).

### Ways to contribute

On the GitHub Docs site, you can contribute by clicking the **Make a contribution** button at the bottom of the page to open a pull request for quick fixes like typos, updates, or link fixes.

You can also contribute by creating a local environment or opening a Codespace. For more information, see [Setting up your environment to work on GitHub Docs](https://docs.github.com/en/contributing/setting-up-your-environment-to-work-on-github-docs).

&lt;img alt=&quot;Contribution call-to-action&quot; src=&quot;./contributing/images/contribution_cta.png&quot; width=&quot;400&quot;&gt;

For more complex contributions, please [open an issue in the docs-content repo](https://github.com/github/docs-content/issues/new/choose) describing the changes you&#039;d like to see.

If you&#039;re looking for a way to contribute, you can scan through our [help wanted board](https://github.com/github/docs/issues?q=is%3Aopen+is%3Aissue+label%3A%22help+wanted%22) to find open issues already approved for work.

### And that&#039;s it!

If you&#039;re having trouble with your GitHub account, contact [Support](https://support.github.com).

That&#039;s how you can easily become a member of the GitHub Docs community. :sparkles:

## READMEs

In addition to the README you&#039;re reading right now, this repo includes other READMEs that describe the purpose of each subdirectory in more detail:

- [content/README.md](content/README.md)
- [content/graphql/README.md](content/graphql/README.md)
- [content/rest/README.md](content/rest/README.md)
- [contributing/README.md](contributing/README.md)
- [data/README.md](data/README.md)
- [data/reusables/README.md](data/reusables/README.md)
- [data/variables/README.md](data/variables/README.md)
- [src/README.md](src/README.md)

## License

The GitHub product documentation in the assets, content, and data folders are licensed under a [CC-BY license](LICENSE).

All other code in this repository is licensed under the [MIT license](LICENSE-CODE).

When using the GitHub logos, be sure to follow the [GitHub logo guidelines](https://github.com/logos).

## Thanks :purple_heart:

Thanks for all your contributions and efforts towards improving the GitHub documentation. We thank you for being part of our :sparkles: community :sparkles:!
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[Mail-0/Zero]]></title>
            <link>https://github.com/Mail-0/Zero</link>
            <guid>https://github.com/Mail-0/Zero</guid>
            <pubDate>Tue, 08 Jul 2025 00:04:41 GMT</pubDate>
            <description><![CDATA[Experience email the way you want with Mail0 – the first open source email app that puts your privacy and safety first. Join the discord: https://discord.gg/mail0]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/Mail-0/Zero">Mail-0/Zero</a></h1>
            <p>Experience email the way you want with Mail0 – the first open source email app that puts your privacy and safety first. Join the discord: https://discord.gg/mail0</p>
            <p>Language: TypeScript</p>
            <p>Stars: 8,695</p>
            <p>Forks: 918</p>
            <p>Stars today: 18 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;picture&gt;
    &lt;source srcset=&quot;apps/mail/public/white-icon.svg&quot; media=&quot;(prefers-color-scheme: dark)&quot;&gt;
    &lt;img src=&quot;apps/mail/public/black-icon.svg&quot; alt=&quot;Zero Logo&quot; width=&quot;64&quot; style=&quot;background-color: #000; padding: 10px;&quot;/&gt;
  &lt;/picture&gt;
&lt;/p&gt;

# Zero

An Open-Source Gmail Alternative for the Future of Email

## What is Zero?

Zero is an open-source AI email solution that gives users the power to **self-host** their own email app while also integrating external services like Gmail and other email providers. Our goal is to modernize and improve emails through AI agents to truly modernize emails.

## Why Zero?

Most email services today are either **closed-source**, **data-hungry**, or **too complex to self-host**.
0.email is different:

- ✅ **Open-Source** – No hidden agendas, fully transparent.
- 🦾 **AI Driven** - Enhance your emails with Agents &amp; LLMs.
- 🔒 **Data Privacy First** – Your emails, your data. Zero does not track, collect, or sell your data in any way. Please note: while we integrate with external services, the data passed through them is not under our control and falls under their respective privacy policies and terms of service.
- ⚙️ **Self-Hosting Freedom** – Run your own email app with ease.
- 📬 **Unified Inbox** – Connect multiple email providers like Gmail, Outlook, and more.
- 🎨 **Customizable UI &amp; Features** – Tailor your email experience the way you want it.
- 🚀 **Developer-Friendly** – Built with extensibility and integrations in mind.

## Tech Stack

Zero is built with modern and reliable technologies:

- **Frontend**: Next.js, React, TypeScript, TailwindCSS, Shadcn UI
- **Backend**: Node.js, Drizzle ORM
- **Database**: PostgreSQL
- **Authentication**: Better Auth, Google OAuth
&lt;!-- - **Testing**: Jest, React Testing Library --&gt;

## Getting Started

### Video Tutorial

Watch this helpful video tutorial on how to set up Zero locally:

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.youtube.com/watch?v=yIXLQcjbeEM&quot;&gt;
    &lt;img src=&quot;https://img.youtube.com/vi/yIXLQcjbeEM/0.jpg&quot; alt=&quot;Zero Setup Tutorial&quot; /&gt;
  &lt;/a&gt;
&lt;/p&gt;

### Prerequisites

**Required Versions:**

- [Node.js](https://nodejs.org/en/download) (v18 or higher)
- [pnpm](https://pnpm.io) (v10 or higher)
- [Docker](https://docs.docker.com/engine/install/) (v20 or higher)

Before running the application, you&#039;ll need to set up services and configure environment variables. For more details on environment variables, see the [Environment Variables](#environment-variables) section.

### Setup Options

You can set up Zero in two ways:

&lt;details open&gt;
&lt;summary&gt;&lt;b&gt;Standard Setup (Recommended)&lt;/b&gt;&lt;/summary&gt;

#### Quick Start Guide

1. **Clone and Install**

   ```bash
   # Clone the repository
   git clone https://github.com/Mail-0/Zero.git
   cd Zero

   # Install dependencies
   pnpm install

   # Start database locally
   pnpm docker:db:up
   ```

2. **Set Up Environment**

   - Run `pnpm nizzy env` to setup your environment variables
   - Run `pnpm nizzy sync` to sync your environment variables and types
   - Start the database with the provided docker compose setup: `pnpm docker:db:up`
   - Initialize the database: `pnpm db:push`

3. **Start the App**

   ```bash
   pnpm dev
   ```

4. **Open in Browser**

   Visit [http://localhost:3000](http://localhost:3000)
   &lt;/details&gt;

&lt;details open&gt;
&lt;summary&gt;&lt;b&gt;Devcontainer Setup&lt;/b&gt;&lt;/summary&gt;

#### Quick Start guide

1. **Clone and Install**

   ```bash
   # Clone the repository
   git clone https://github.com/Mail-0/Zero.git
   cd Zero
   ```

   Then open the code in devcontainer and install the dependencies:

   ```
   pnpm install

   # Start the database locally
   pnpm docker:db:up
   ```

2. **Set Up Environment**

   - Run `pnpm nizzy env` to setup your environment variables
   - Run `pnpm nizzy sync` to sync your environment variables and types
   - Start the database with the provided docker compose setup: `pnpm docker:db:up`
   - Initialize the database: `pnpm db:push`

3. **Start The App**
   ```bash
   pnpm dev
   ```
   Visit [http://localhost:3000](http://localhost:3000)
     &lt;/details&gt;

### Environment Setup

1. **Better Auth Setup**

   - Open the `.env` file and change the BETTER_AUTH_SECRET to a random string. (Use `openssl rand -hex 32` to generate a 32 character string)

     ```env
     BETTER_AUTH_SECRET=your_secret_key
     ```

2. **Google OAuth Setup** (Required for Gmail integration)

   - Go to [Google Cloud Console](https://console.cloud.google.com)
   - Create a new project
   - Add the following APIs in your Google Cloud Project: [People API](https://console.cloud.google.com/apis/library/people.googleapis.com), [Gmail API](https://console.cloud.google.com/apis/library/gmail.googleapis.com)
     - Use the links above and click &#039;Enable&#039; or
     - Go to &#039;APIs and Services&#039; &gt; &#039;Enable APIs and Services&#039; &gt; Search for &#039;Google People API&#039; and click &#039;Enable&#039;
     - Go to &#039;APIs and Services&#039; &gt; &#039;Enable APIs and Services&#039; &gt; Search for &#039;Gmail API&#039; and click &#039;Enable&#039;
   - Enable the Google OAuth2 API
   - Create OAuth 2.0 credentials (Web application type)
   - Add authorized redirect URIs:
     - Development:
       - `http://localhost:8787/api/auth/callback/google`
     - Production:
       - `https://your-production-url/api/auth/callback/google`
   - Add to `.env`:

     ```env
     GOOGLE_CLIENT_ID=your_client_id
     GOOGLE_CLIENT_SECRET=your_client_secret
     ```

   - Add yourself as a test user:

     - Go to [`Audience`](https://console.cloud.google.com/auth/audience)
     - Under &#039;Test users&#039; click &#039;Add Users&#039;
     - Add your email and click &#039;Save&#039;

&gt; [!WARNING]
&gt; The authorized redirect URIs in Google Cloud Console must match **exactly** what you configure in the `.env`, including the protocol (http/https), domain, and path - these are provided above.

3. **Autumn Setup** (Required for some encryption)

   - Go to [Autumn](https://useautumn.com/)
   - For Local Use, click [onboarding](https://app.useautumn.com/sandbox/onboarding) button and generate an Autumn Secret Key
   - For production, select the production mode from upper left corner and generate and fill the other fields. After that, generate an Autumn Secret Key

   - Add to `.env`:

   ```env
   AUTUMN_SECRET_KEY=your_autumn_secret
   ```

4. **Twilio Setup** (Required for SMS Integration)

   - Go to the [Twilio](https://www.twilio.com/)
   - Create a Twilio account if you don’t already have one
   - From the dashboard, locate your:
     - Account SID
     - Auth Token
     - Phone Number

   - Add to your `.env` file:

   ```env
   TWILIO_ACCOUNT_SID=your_account_sid
   TWILIO_AUTH_TOKEN=your_auth_token
   TWILIO_PHONE_NUMBER=your_twilio_phone_number
   ```

### Environment Variables

Run `pnpm nizzy env` to setup your environment variables. It will copy the `.env.example` file to `.env` and fill in the variables for you.
For local development a connection string example is provided in the `.env.example` file located in the same folder as the database.

### Database Setup

Zero uses PostgreSQL for storing data. Here&#039;s how to set it up:

1. **Start the Database**

   Run this command to start a local PostgreSQL instance:

   ```bash
   pnpm docker:db:up
   ```

   This creates a database with:

   - Name: `zerodotemail`
   - Username: `postgres`
   - Password: `postgres`
   - Port: `5432`

2. **Set Up Database Connection**

   Make sure your database connection string is in `.env` file. And you have ran `pnpm nizzy sync` to sync the latest env.

   For local development use:

   ```
   DATABASE_URL=&quot;postgresql://postgres:postgres@localhost:5432/zerodotemail&quot;
   ```

3. **Database Commands**

   - **Set up database tables**:

     ```bash
     pnpm db:push
     ```

   - **Create migration files** (after schema changes):

     ```bash
     pnpm db:generate
     ```

   - **Apply migrations**:

     ```bash
     pnpm db:migrate
     ```

   - **View database content**:
     ```bash
     pnpm db:studio
     ```
     &gt; If you run `pnpm dev` in your terminal, the studio command should be automatically running with the app.

## Contribute

Please refer to the [contributing guide](.github/CONTRIBUTING.md).

If you&#039;d like to help with translating Zero to other languages, check out our [translation guide](.github/TRANSLATION.md).

## Star History

[![Star History Chart](https://api.star-history.com/svg?repos=Mail-0/Zero&amp;type=Timeline)](https://www.star-history.com/#Mail-0/Zero&amp;Timeline)

## This project wouldn&#039;t be possible without these awesome companies

&lt;div style=&quot;display: flex; justify-content: center;&quot;&gt;
  &lt;a href=&quot;https://vercel.com&quot; style=&quot;text-decoration: none;&quot;&gt;
    &lt;img src=&quot;public/vercel.png&quot; alt=&quot;Vercel&quot; width=&quot;96&quot;/&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://better-auth.com&quot; style=&quot;text-decoration: none;&quot;&gt;
    &lt;img src=&quot;public/better-auth.png&quot; alt=&quot;Better Auth&quot; width=&quot;96&quot;/&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://orm.drizzle.team&quot; style=&quot;text-decoration: none;&quot;&gt;
    &lt;img src=&quot;public/drizzle-orm.png&quot; alt=&quot;Drizzle ORM&quot; width=&quot;96&quot;/&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://coderabbit.com&quot; style=&quot;text-decoration: none;&quot;&gt;
    &lt;img src=&quot;public/coderabbit.png&quot; alt=&quot;Coderabbit AI&quot; width=&quot;96&quot;/&gt;
  &lt;/a&gt;
&lt;/div&gt;

## 🤍 The team

Curious who makes Zero? Here are our [contributors and maintainers](https://0.email/contributors)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
    </channel>
</rss>