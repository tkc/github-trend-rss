<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for typescript - TypeScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for typescript.</description>
        <lastBuildDate>Tue, 16 Sep 2025 00:05:15 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[ItzCrazyKns/Perplexica]]></title>
            <link>https://github.com/ItzCrazyKns/Perplexica</link>
            <guid>https://github.com/ItzCrazyKns/Perplexica</guid>
            <pubDate>Tue, 16 Sep 2025 00:05:15 GMT</pubDate>
            <description><![CDATA[Perplexica is an AI-powered search engine. It is an Open source alternative to Perplexity AI]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/ItzCrazyKns/Perplexica">ItzCrazyKns/Perplexica</a></h1>
            <p>Perplexica is an AI-powered search engine. It is an Open source alternative to Perplexity AI</p>
            <p>Language: TypeScript</p>
            <p>Stars: 24,600</p>
            <p>Forks: 2,567</p>
            <p>Stars today: 326 stars today</p>
            <h2>README</h2><pre># 🚀 Perplexica - An AI-powered search engine 🔎 &lt;!-- omit in toc --&gt;

&lt;div align=&quot;center&quot; markdown=&quot;1&quot;&gt;
   &lt;sup&gt;Special thanks to:&lt;/sup&gt;
   &lt;br&gt;
   &lt;br&gt;
   &lt;a href=&quot;https://www.warp.dev/perplexica&quot;&gt;
      &lt;img alt=&quot;Warp sponsorship&quot; width=&quot;400&quot; src=&quot;https://github.com/user-attachments/assets/775dd593-9b5f-40f1-bf48-479faff4c27b&quot;&gt;
   &lt;/a&gt;

### [Warp, the AI Devtool that lives in your terminal](https://www.warp.dev/perplexica)

[Available for MacOS, Linux, &amp; Windows](https://www.warp.dev/perplexica)

&lt;/div&gt;

&lt;hr/&gt;

[![Discord](https://dcbadge.limes.pink/api/server/26aArMy8tT?style=flat)](https://discord.gg/26aArMy8tT)

![preview](.assets/perplexica-screenshot.png?)

## Table of Contents &lt;!-- omit in toc --&gt;

- [Overview](#overview)
- [Preview](#preview)
- [Features](#features)
- [Installation](#installation)
  - [Getting Started with Docker (Recommended)](#getting-started-with-docker-recommended)
  - [Non-Docker Installation](#non-docker-installation)
  - [Ollama Connection Errors](#ollama-connection-errors)
- [Using as a Search Engine](#using-as-a-search-engine)
- [Using Perplexica&#039;s API](#using-perplexicas-api)
- [Expose Perplexica to a network](#expose-perplexica-to-network)
- [One-Click Deployment](#one-click-deployment)
- [Upcoming Features](#upcoming-features)
- [Support Us](#support-us)
  - [Donations](#donations)
- [Contribution](#contribution)
- [Help and Support](#help-and-support)

## Overview

Perplexica is an open-source AI-powered searching tool or an AI-powered search engine that goes deep into the internet to find answers. Inspired by Perplexity AI, it&#039;s an open-source option that not just searches the web but understands your questions. It uses advanced machine learning algorithms like similarity searching and embeddings to refine results and provides clear answers with sources cited.

Using SearxNG to stay current and fully open source, Perplexica ensures you always get the most up-to-date information without compromising your privacy.

Want to know more about its architecture and how it works? You can read it [here](https://github.com/ItzCrazyKns/Perplexica/tree/master/docs/architecture/README.md).

## Preview

![video-preview](.assets/perplexica-preview.gif)

## Features

- **Local LLMs**: You can utilize local LLMs such as Qwen, DeepSeek, Llama, and Mistral.
- **Two Main Modes:**
  - **Copilot Mode:** (In development) Boosts search by generating different queries to find more relevant internet sources. Like normal search instead of just using the context by SearxNG, it visits the top matches and tries to find relevant sources to the user&#039;s query directly from the page.
  - **Normal Mode:** Processes your query and performs a web search.
- **Focus Modes:** Special modes to better answer specific types of questions. Perplexica currently has 6 focus modes:
  - **All Mode:** Searches the entire web to find the best results.
  - **Writing Assistant Mode:** Helpful for writing tasks that do not require searching the web.
  - **Academic Search Mode:** Finds articles and papers, ideal for academic research.
  - **YouTube Search Mode:** Finds YouTube videos based on the search query.
  - **Wolfram Alpha Search Mode:** Answers queries that need calculations or data analysis using Wolfram Alpha.
  - **Reddit Search Mode:** Searches Reddit for discussions and opinions related to the query.
- **Current Information:** Some search tools might give you outdated info because they use data from crawling bots and convert them into embeddings and store them in a index. Unlike them, Perplexica uses SearxNG, a metasearch engine to get the results and rerank and get the most relevant source out of it, ensuring you always get the latest information without the overhead of daily data updates.
- **API**: Integrate Perplexica into your existing applications and make use of its capibilities.

It has many more features like image and video search. Some of the planned features are mentioned in [upcoming features](#upcoming-features).

## Installation

There are mainly 2 ways of installing Perplexica - With Docker, Without Docker. Using Docker is highly recommended.

### Getting Started with Docker (Recommended)

1. Ensure Docker is installed and running on your system.
2. Clone the Perplexica repository:

   ```bash
   git clone https://github.com/ItzCrazyKns/Perplexica.git
   ```

3. After cloning, navigate to the directory containing the project files.

4. Rename the `sample.config.toml` file to `config.toml`. For Docker setups, you need only fill in the following fields:

   - `OPENAI`: Your OpenAI API key. **You only need to fill this if you wish to use OpenAI&#039;s models**.
   - `CUSTOM_OPENAI`: Your OpenAI-API-compliant local server URL, model name, and API key. You should run your local server with host set to `0.0.0.0`, take note of which port number it is running on, and then use that port number to set `API_URL = http://host.docker.internal:PORT_NUMBER`. You must specify the model name, such as `MODEL_NAME = &quot;unsloth/DeepSeek-R1-0528-Qwen3-8B-GGUF:Q4_K_XL&quot;`. Finally, set `API_KEY` to the appropriate value. If you have not defined an API key, just put anything you want in-between the quotation marks: `API_KEY = &quot;whatever-you-want-but-not-blank&quot;` **You only need to configure these settings if you want to use a local OpenAI-compliant server, such as Llama.cpp&#039;s [`llama-server`](https://github.com/ggml-org/llama.cpp/blob/master/tools/server/README.md)**.
   - `OLLAMA`: Your Ollama API URL. You should enter it as `http://host.docker.internal:PORT_NUMBER`. If you installed Ollama on port 11434, use `http://host.docker.internal:11434`. For other ports, adjust accordingly. **You need to fill this if you wish to use Ollama&#039;s models instead of OpenAI&#039;s**.
   - `GROQ`: Your Groq API key. **You only need to fill this if you wish to use Groq&#039;s hosted models**.
   - `ANTHROPIC`: Your Anthropic API key. **You only need to fill this if you wish to use Anthropic models**.
   - `Gemini`: Your Gemini API key. **You only need to fill this if you wish to use Google&#039;s models**.
   - `DEEPSEEK`: Your Deepseek API key. **Only needed if you want Deepseek models.**
   - `AIMLAPI`: Your AI/ML API key. **Only needed if you want to use AI/ML API models and embeddings.**

     **Note**: You can change these after starting Perplexica from the settings dialog.

   - `SIMILARITY_MEASURE`: The similarity measure to use (This is filled by default; you can leave it as is if you are unsure about it.)

5. Ensure you are in the directory containing the `docker-compose.yaml` file and execute:

   ```bash
   docker compose up -d
   ```

6. Wait a few minutes for the setup to complete. You can access Perplexica at http://localhost:3000 in your web browser.

**Note**: After the containers are built, you can start Perplexica directly from Docker without having to open a terminal.

### Non-Docker Installation

1. Install SearXNG and allow `JSON` format in the SearXNG settings.
2. Clone the repository and rename the `sample.config.toml` file to `config.toml` in the root directory. Ensure you complete all required fields in this file.
3. After populating the configuration run `npm i`.
4. Install the dependencies and then execute `npm run build`.
5. Finally, start the app by running `npm run start`

**Note**: Using Docker is recommended as it simplifies the setup process, especially for managing environment variables and dependencies.

See the [installation documentation](https://github.com/ItzCrazyKns/Perplexica/tree/master/docs/installation) for more information like updating, etc.

### Troubleshooting

#### Local OpenAI-API-Compliant Servers

If Perplexica tells you that you haven&#039;t configured any chat model providers, ensure that:

1. Your server is running on `0.0.0.0` (not `127.0.0.1`) and on the same port you put in the API URL.
2. You have specified the correct model name loaded by your local LLM server.
3. You have specified the correct API key, or if one is not defined, you have put *something* in the API key field and not left it empty.

#### Ollama Connection Errors

If you&#039;re encountering an Ollama connection error, it is likely due to the backend being unable to connect to Ollama&#039;s API. To fix this issue you can:

1. **Check your Ollama API URL:** Ensure that the API URL is correctly set in the settings menu.
2. **Update API URL Based on OS:**

   - **Windows:** Use `http://host.docker.internal:11434`
   - **Mac:** Use `http://host.docker.internal:11434`
   - **Linux:** Use `http://&lt;private_ip_of_host&gt;:11434`

   Adjust the port number if you&#039;re using a different one.

3. **Linux Users - Expose Ollama to Network:**

   - Inside `/etc/systemd/system/ollama.service`, you need to add `Environment=&quot;OLLAMA_HOST=0.0.0.0:11434&quot;`. (Change the port number if you are using a different one.) Then reload the systemd manager configuration with `systemctl daemon-reload`, and restart Ollama by `systemctl restart ollama`. For more information see [Ollama docs](https://github.com/ollama/ollama/blob/main/docs/faq.md#setting-environment-variables-on-linux)

   - Ensure that the port (default is 11434) is not blocked by your firewall.

## Using as a Search Engine

If you wish to use Perplexica as an alternative to traditional search engines like Google or Bing, or if you want to add a shortcut for quick access from your browser&#039;s search bar, follow these steps:

1. Open your browser&#039;s settings.
2. Navigate to the &#039;Search Engines&#039; section.
3. Add a new site search with the following URL: `http://localhost:3000/?q=%s`. Replace `localhost` with your IP address or domain name, and `3000` with the port number if Perplexica is not hosted locally.
4. Click the add button. Now, you can use Perplexica directly from your browser&#039;s search bar.

## Using Perplexica&#039;s API

Perplexica also provides an API for developers looking to integrate its powerful search engine into their own applications. You can run searches, use multiple models and get answers to your queries.

For more details, check out the full documentation [here](https://github.com/ItzCrazyKns/Perplexica/tree/master/docs/API/SEARCH.md).

## Expose Perplexica to network

Perplexica runs on Next.js and handles all API requests. It works right away on the same network and stays accessible even with port forwarding.

## One-Click Deployment

[![Deploy to Sealos](https://raw.githubusercontent.com/labring-actions/templates/main/Deploy-on-Sealos.svg)](https://usw.sealos.io/?openapp=system-template%3FtemplateName%3Dperplexica)
[![Deploy to RepoCloud](https://d16t0pc4846x52.cloudfront.net/deploylobe.svg)](https://repocloud.io/details/?app_id=267)
[![Run on ClawCloud](https://raw.githubusercontent.com/ClawCloud/Run-Template/refs/heads/main/Run-on-ClawCloud.svg)](https://template.run.claw.cloud/?referralCode=U11MRQ8U9RM4&amp;openapp=system-fastdeploy%3FtemplateName%3Dperplexica)

## Upcoming Features

- [x] Add settings page
- [x] Adding support for local LLMs
- [x] History Saving features
- [x] Introducing various Focus Modes
- [x] Adding API support
- [x] Adding Discover
- [ ] Finalizing Copilot Mode

## Support Us

If you find Perplexica useful, consider giving us a star on GitHub. This helps more people discover Perplexica and supports the development of new features. Your support is greatly appreciated.

### Donations

We also accept donations to help sustain our project. If you would like to contribute, you can use the following options to donate. Thank you for your support!

| Ethereum                                              |
| ----------------------------------------------------- |
| Address: `0xB025a84b2F269570Eb8D4b05DEdaA41D8525B6DD` |

## Contribution

Perplexica is built on the idea that AI and large language models should be easy for everyone to use. If you find bugs or have ideas, please share them in via GitHub Issues. For more information on contributing to Perplexica you can read the [CONTRIBUTING.md](CONTRIBUTING.md) file to learn more about Perplexica and how you can contribute to it.

## Help and Support

If you have any questions or feedback, please feel free to reach out to us. You can create an issue on GitHub or join our Discord server. There, you can connect with other users, share your experiences and reviews, and receive more personalized help. [Click here](https://discord.gg/EFwsmQDgAu) to join the Discord server. To discuss matters outside of regular support, feel free to contact me on Discord at `itzcrazykns`.

Thank you for exploring Perplexica, the AI-powered search engine designed to enhance your search experience. We are constantly working to improve Perplexica and expand its capabilities. We value your feedback and contributions which help us make Perplexica even better. Don&#039;t forget to check back for updates and new features!
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[midday-ai/midday]]></title>
            <link>https://github.com/midday-ai/midday</link>
            <guid>https://github.com/midday-ai/midday</guid>
            <pubDate>Tue, 16 Sep 2025 00:05:14 GMT</pubDate>
            <description><![CDATA[Invoicing, Time tracking, File reconciliation, Storage, Financial Overview & your own Assistant made for Freelancers]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/midday-ai/midday">midday-ai/midday</a></h1>
            <p>Invoicing, Time tracking, File reconciliation, Storage, Financial Overview & your own Assistant made for Freelancers</p>
            <p>Language: TypeScript</p>
            <p>Stars: 12,257</p>
            <p>Forks: 1,108</p>
            <p>Stars today: 192 stars today</p>
            <h2>README</h2><pre>![hero](github.png)

&lt;p align=&quot;center&quot;&gt;
	&lt;h1 align=&quot;center&quot;&gt;&lt;b&gt;Midday&lt;/b&gt;&lt;/h1&gt;
&lt;p align=&quot;center&quot;&gt;
    Run your business smarter
    &lt;br /&gt;
    &lt;br /&gt;
    &lt;a href=&quot;https://go.midday.ai/anPiuRx&quot;&gt;Discord&lt;/a&gt;
    ·
    &lt;a href=&quot;https://midday.ai&quot;&gt;Website&lt;/a&gt;
    ·
    &lt;a href=&quot;https://github.com/midday-ai/midday/issues&quot;&gt;Issues&lt;/a&gt;
  &lt;/p&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://go.midday.ai/K7GwMoQ&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/Supabase-3ECF8E?style=for-the-badge&amp;logo=supabase&amp;logoColor=white&quot; alt=&quot;Supabase&quot; /&gt;
  &lt;/a&gt;
&lt;/p&gt;

## About Midday

Midday is an all-in-one tool designed to help freelancers, contractors, consultants, and solo entrepreneurs manage their business operations more efficiently. It integrates various functions typically scattered across multiple platforms into a single, cohesive system.


## Features

**Time Tracking**: Allows for live time tracking of projects to boost productivity and collaboration, providing insightful project overviews.&lt;br/&gt;
**Invoicing**: An upcoming feature that will enable users to create web-based invoices, collaborate in real-time, and synchronize projects seamlessly.&lt;br/&gt;
**Magic Inbox**: Automatically matches incoming invoices or receipts to the correct transactions, simplifying financial tracking and organization.&lt;br/&gt;
**Vault**: Secure storage for important files like contracts and agreements, keeping everything in one place for easy access​.&lt;br/&gt;
**Seamless Export**: Facilitates easy export of financial data, packaged neatly in CSV files for accountants.&lt;br/&gt;
**Assistant**: Provides tailored insights into financial situations, helping users understand spending patterns, cut costs, and find documents.&lt;br/&gt;




## Get started

We are working on the documentation to get started with Midday for local development: https://docs.midday.ai

## App Architecture

- Monorepo
- Bun
- React
- TypeScript
- Nextjs
- Supabase
- Shadcn
- Tauri
- Expo
- TailwindCSS

### Hosting

- Supabase (database, storage, realtime, auth)
- Vercel (Website, Dashboard)
- Fly.io (API/tRPC)

### Services

- Trigger.dev (background jobs)
- Resend (Transactional &amp; Marketing)
- Github Actions (CI/CD)
- GoCardLess (Bank connection EU)
- Plaid (Bank connection in Canada and US)
- Teller (Bank connection in the US)
- OpenPanel (Events and Analytics)
- Polar (Payment processing)
- Typesense (Search)
- Mistral
- Gemini
- OpenAI

## Repo Activity

![Alt](https://repobeats.axiom.co/api/embed/96aae855e5dd87c30d53c1d154b37cf7aa5a89b3.svg &quot;Repobeats analytics image&quot;)

## License

This project is licensed under the **[AGPL-3.0](https://opensource.org/licenses/AGPL-3.0)** for non-commercial use. 

### Commercial Use

For commercial use or deployments requiring a setup fee, please contact us
for a commercial license at [engineer@midday.ai](mailto:engineer@midday.ai).

By using this software, you agree to the terms of the license.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[novuhq/novu]]></title>
            <link>https://github.com/novuhq/novu</link>
            <guid>https://github.com/novuhq/novu</guid>
            <pubDate>Tue, 16 Sep 2025 00:05:13 GMT</pubDate>
            <description><![CDATA[The open-source notification Inbox infrastructure. E-mail, SMS, Push and Slack Integrations.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/novuhq/novu">novuhq/novu</a></h1>
            <p>The open-source notification Inbox infrastructure. E-mail, SMS, Push and Slack Integrations.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 37,823</p>
            <p>Forks: 4,118</p>
            <p>Stars today: 28 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://novu.co?utm_source=github&quot; target=&quot;_blank&quot;&gt;
  &lt;picture&gt;
    &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://user-images.githubusercontent.com/2233092/213641039-220ac15f-f367-4d13-9eaf-56e79433b8c1.png&quot;&gt;
    &lt;img alt=&quot;Novu Logo&quot; src=&quot;https://user-images.githubusercontent.com/2233092/213641043-3bbb3f21-3c53-4e67-afe5-755aeb222159.png&quot; width=&quot;280&quot;/&gt;
  &lt;/picture&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;br/&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.npmjs.com/package/@novu/node&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/npm/v/@novu/node&quot; alt=&quot;NPM&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://www.npmjs.com/package/@novu/node&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/npm/dm/@novu/node&quot; alt=&quot;npm downloads&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/novuhq/novu/blob/main/LICENSE&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/license/novuhq/novu&quot; alt=&quot;MIT&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;h1 align=&quot;center&quot;&gt;
  The open-source notification infrastructure for developers
&lt;/h1&gt;

&lt;div align=&quot;center&quot;&gt;
  The ultimate service for managing multi-channel notifications with a single API.
&lt;/div&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;br /&gt;
  &lt;a href=&quot;https://docs.novu.co&quot; rel=&quot;dofollow&quot;&gt;&lt;strong&gt;Explore the docs »&lt;/strong&gt;&lt;/a&gt;
  &lt;br /&gt;

&lt;br/&gt;
  &lt;a href=&quot;https://github.com/novuhq/novu/issues/new?assignees=&amp;labels=type%3A+bug&amp;template=bug_report.yml&amp;title=%F0%9F%90%9B+Bug+Report%3A+&quot;&gt;Report Bug&lt;/a&gt;
  ·
  &lt;a href=&quot;https://github.com/novuhq/novu/issues/new?assignees=&amp;labels=feature&amp;template=feature_request.yml&amp;title=%F0%9F%9A%80+Feature%3A+&quot;&gt;Request Feature&lt;/a&gt;
  ·
&lt;a href=&quot;https://discord.novu.co&quot;&gt;Join Our Discord&lt;/a&gt;
  ·
  &lt;a href=&quot;https://roadmap.novu.co&quot;&gt;Roadmap&lt;/a&gt;
  ·
  &lt;a href=&quot;https://twitter.com/novuhq&quot;&gt;X&lt;/a&gt;
  ·
  &lt;a href=&quot;https://notifications.directory&quot;&gt;Notifications Directory&lt;/a&gt;
&lt;/p&gt;

## ⭐️ Why Novu?

Novu provides a unified API that makes it simple to send notifications through multiple channels, including In-App, Push, Email, SMS, and Chat.
With Novu, you can create custom workflows and define conditions for each channel, ensuring that your notifications are delivered in the most effective way possible.

## ✨ Features

- 🌈 Single API for all messaging providers (In-App, Email, SMS, Push, Chat)
- 💅 Fully managed GitOps Flow, deployed from your CI
- 🔥 Define workflow and step validations with Zod or JSON Schema
- 💌 React Email/Maizzle/MJML integrations
- 🚀 Equipped with a CMS for advanced layouts and design management
- 🛡 Debug and analyze multi-channel messages in a single dashboard
- 📦 Embeddable notification center with real-time updates
- 👨‍💻 Community-driven

## 🚀 Getting Started

To get started, type the following command in your Terminal.

```bash
npx novu-labs@latest echo
```

## 📚 Table Of Contents

- [Getting Started](https://github.com/novuhq/novu#-getting-started)
- [GitOps &amp; React Email Integration](https://github.com/novuhq/novu#-gitops)
- [Embeddable notification center](https://github.com/novuhq/novu#embeddable-notification-center)
- [Providers](https://github.com/novuhq/novu#providers)
  - [Email](https://github.com/novuhq/novu#-email)
  - [SMS](https://github.com/novuhq/novu#-sms)
  - [Push](https://github.com/novuhq/novu#-push)
  - [Chat](https://github.com/novuhq/novu#-chat)
  - [In-App](https://github.com/novuhq/novu#-in-app)
  - [Others](https://github.com/novuhq/novu#other-coming-soon)
- [Need Help?](https://github.com/novuhq/novu#-need-help)
- [Links](https://github.com/novuhq/novu#-links)
- [License](https://github.com/novuhq/novu#%EF%B8%8F-license)

## Notification Workflows as Code
For API documentation and reference, please visit [Echo API Reference](https://docs.novu.co/echo/quickstart?utm_campaign=github-readme).

```ts

client.workflow(&#039;comment-on-post&#039;, async ({step, subscriber}) =&gt; {
  const inAppResponse = await step.inApp(&#039;in-app-step&#039;, async (inputs) =&gt; {
    return {
      body: renderReactComponent(inputs)
    };
  }, {
    inputSchema: {
      // ...JSON Schema or ZOD/Ajv/Class Validators definition
    }
  });

  // Novu Worker Engine will manage the state and durability of each step in isolation
  const { events } = await step.digest(&#039;1 day&#039;);

  await step.email(&#039;email-step&#039;, async () =&gt; {
    return {
      subject: &#039;E-mail Subject&#039;,
      body: renderReactEmail(&lt;ReactEmailComponent events={digestedEvents} /&gt;);
    }
  }, {
    // Step-level inputs defined in code and controlled in the novu Cloud UI by a Non-Technical Team member
    inputSchema: {
      // ...JSON Schema
    },
    providers: {
      sendgrid: async (inputs) =&gt; {
        // Echo runs as part of your application, so you have access to your database or resources

        return {
          to: email,
          ipPoolName: &#039;custom-pool&#039;
        };
      }
    },
    skip: () =&gt; {
      // Write custom skip logic
      return inAppResponse.seen || subscriber.isOnline;
    }
  });
// Define your workflow trigger payload using json schema and custom validation;
}, {
  payloadSchema: {
    // ...JSON Schema
  }
});

```

## Embeddable Notification Center

Using the Novu API and admin panel, you can easily add a real-time notification center to your web app without building it yourself. You can use our [React](https://docs.novu.co/notification-center/client/react/get-started?utm_campaign=github-readme) / [Vue](https://docs.novu.co/notification-center/client/vue?utm_campaign=github-readme) / [Angular](https://docs.novu.co/notification-center/client/angular?utm_campaign=github-readme) components or an [iframe embed](https://docs.novu.co/notification-center/client/iframe?utm_campaign=github-readme), as well as a [Web component](https://docs.novu.co/notification-center/client/web-component?utm_campaign=github-readme).

&lt;div align=&quot;center&quot;&gt;
&lt;img width=&quot;762&quot; alt=&quot;notification-center-912bb96e009fb3a69bafec23bcde00b0&quot; src=&quot;https://user-images.githubusercontent.com/80174214/193887395-f1c95042-b4e6-480e-a89c-a78aa247fa90.gif&quot; alt-text=&quot;GIF of Novu&#039;s Embeddable Notification Center&quot;&gt;

Read more about how to add a notification center to your app with the Novu API [here](https://docs.novu.co/notification-center/getting-started?utm_campaign=github-readme)

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://docs.novu.co/sdks/react?utm_campaign=github-readme&quot;&gt;React Component&lt;/a&gt;
  · &lt;a href=&quot;https://docs.novu.co/sdks/vue?utm_campaign=github-readme&quot;&gt;Vue Component&lt;/a&gt;
  · &lt;a href=&quot;https://docs.novu.co/sdks/angular?utm_campaign=github-readme&quot;&gt;Angular Component&lt;/a&gt;
  &lt;/p&gt;
  
&lt;/div&gt;

## Providers

Novu provides a single API to manage providers across multiple channels with a simple-to-use interface.

#### 💌 Email

- [x] [Sendgrid](https://github.com/novuhq/novu/tree/main/providers/sendgrid)
- [x] [Netcore](https://github.com/novuhq/novu/tree/main/providers/netcore)
- [x] [Mailgun](https://github.com/novuhq/novu/tree/main/providers/mailgun)
- [x] [SES](https://github.com/novuhq/novu/tree/main/providers/ses)
- [x] [Postmark](https://github.com/novuhq/novu/tree/main/providers/postmark)
- [x] [Custom SMTP](https://github.com/novuhq/novu/tree/main/providers/nodemailer)
- [x] [Mailjet](https://github.com/novuhq/novu/tree/main/providers/mailjet)
- [x] [Mandrill](https://github.com/novuhq/novu/tree/main/providers/mandrill)
- [x] [SendinBlue](https://github.com/novuhq/novu/tree/main/providers/sendinblue)
- [x] [MailerSend](https://github.com/novuhq/novu/tree/main/providers/mailersend)
- [x] [Infobip](https://github.com/novuhq/novu/tree/main/providers/infobip)
- [x] [Resend](https://github.com/novuhq/novu/tree/main/providers/resend)
- [x] [SparkPost](https://github.com/novuhq/novu/tree/main/providers/sparkpost)
- [x] [Outlook 365](https://github.com/novuhq/novu/tree/main/providers/outlook365)

#### 📞 SMS

- [x] [Twilio](https://github.com/novuhq/novu/tree/main/providers/twilio)
- [x] [Plivo](https://github.com/novuhq/novu/tree/main/providers/plivo)
- [x] [SNS](https://github.com/novuhq/novu/tree/main/providers/sns)
- [x] [Nexmo - Vonage](https://github.com/novuhq/novu/tree/main/providers/nexmo)
- [x] [Sms77](https://github.com/novuhq/novu/tree/main/providers/sms77)
- [x] [Telnyx](https://github.com/novuhq/novu/tree/main/providers/telnyx)
- [x] [Termii](https://github.com/novuhq/novu/tree/main/providers/termii)
- [x] [Gupshup](https://github.com/novuhq/novu/tree/main/providers/gupshup)
- [x] [SMS Central](https://github.com/novuhq/novu/tree/main/providers/sms-central)
- [x] [Maqsam](https://github.com/novuhq/novu/tree/main/providers/maqsam)
- [x] [46elks](https://github.com/novuhq/novu/tree/main/providers/forty-six-elks)
- [x] [Clickatell](https://github.com/novuhq/novu/tree/main/providers/clickatell)
- [x] [Burst SMS](https://github.com/novuhq/novu/tree/main/providers/burst-sms)
- [x] [Firetext](https://github.com/novuhq/novu/tree/main/providers/firetext)
- [x] [Infobip](https://github.com/novuhq/novu/tree/main/providers/infobip)
- [ ] Bandwidth
- [ ] RingCentral

#### 📱 Push

- [x] [FCM](https://github.com/novuhq/novu/tree/main/providers/fcm)
- [x] [Expo](https://github.com/novuhq/novu/tree/main/providers/expo)
- [x] [APNS](https://github.com/novuhq/novu/tree/main/providers/apns)
- [x] [OneSignal](https://github.com/novuhq/novu/tree/main/providers/one-signal)
- [x] [Pushpad](https://github.com/novuhq/novu/tree/main/providers/pushpad)
- [ ] Pushwoosh

#### 👇 Chat

- [x] [Slack](https://github.com/novuhq/novu/tree/main/providers/slack)
- [x] [Discord](https://github.com/novuhq/novu/tree/main/providers/discord)
- [x] [MS Teams](https://github.com/novuhq/novu/tree/main/providers/ms-teams)
- [x] [Mattermost](https://github.com/novuhq/novu/tree/main/providers/mattermost)

#### 📱 In-App

- [x] [Novu](https://docs.novu.co/notification-center/getting-started?utm_campaign=github-readme)

#### Other (Coming Soon...)

- [ ] PagerDuty

## 📋 Read Our Code Of Conduct

Before you begin coding and collaborating, please read our [Code of Conduct](https://github.com/novuhq/novu/blob/main/CODE_OF_CONDUCT.md) thoroughly to understand the standards (that you are required to adhere to) for community engagement. As part of our open-source community, we hold ourselves and other contributors to a high standard of communication. As a participant and contributor to this project, you agree to abide by our [Code of Conduct](https://github.com/novuhq/novu/blob/main/CODE_OF_CONDUCT.md).

## 💻 Need Help?

We are more than happy to help you. If you are getting any errors or facing problems while working on this project, join our [Discord server](https://discord.novu.co) and ask for help. We are open to discussing anything related to the project.

## 🔗 Links

- [Home page](https://novu.co?utm_campaign=github-readme)
- [Contribution Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)
- [Run Novu Locally](https://docs.novu.co/community/run-in-local-machine?utm_campaign=github-readme)

## 🛡️ License

Novu is licensed under the MIT License - see the [LICENSE](https://github.com/novuhq/novu/blob/main/LICENSE) file for details.

## 💪 Thanks To All Contributors
Thanks a lot for spending your time helping Novu grow. Keep rocking 🥂

&lt;a href=&quot;https://novu.co/contributors?utm_source=github&quot;&gt;
  &lt;img src=&quot;https://contributors-img.web.app/image?repo=novuhq/novu&quot; alt=&quot;Contributors&quot;/&gt;
&lt;/a&gt;
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[ruvnet/claude-flow]]></title>
            <link>https://github.com/ruvnet/claude-flow</link>
            <guid>https://github.com/ruvnet/claude-flow</guid>
            <pubDate>Tue, 16 Sep 2025 00:05:12 GMT</pubDate>
            <description><![CDATA[🌊 The leading agent orchestration platform for Claude. Deploy intelligent multi-agent swarms, coordinate autonomous workflows, and build conversational AI systems. Features enterprise-grade architecture, distributed swarm intelligence, RAG integration, and native Claude Code support via MCP protocol. Ranked #1 in agent-based frameworks.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/ruvnet/claude-flow">ruvnet/claude-flow</a></h1>
            <p>🌊 The leading agent orchestration platform for Claude. Deploy intelligent multi-agent swarms, coordinate autonomous workflows, and build conversational AI systems. Features enterprise-grade architecture, distributed swarm intelligence, RAG integration, and native Claude Code support via MCP protocol. Ranked #1 in agent-based frameworks.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 7,798</p>
            <p>Forks: 1,064</p>
            <p>Stars today: 85 stars today</p>
            <h2>README</h2><pre># 🌊 Claude-Flow v2.0.0 Alpha: AI Orchestration Platform

&lt;div align=&quot;center&quot;&gt;

[![🌟 Star on GitHub](https://img.shields.io/github/stars/ruvnet/claude-flow?style=for-the-badge&amp;logo=github&amp;color=gold)](https://github.com/ruvnet/claude-flow)
[![📈 Downloads](https://img.shields.io/npm/dt/claude-flow?style=for-the-badge&amp;logo=npm&amp;color=blue&amp;label=Downloads)](https://www.npmjs.com/package/claude-flow)
[![📦 Latest Release](https://img.shields.io/npm/v/claude-flow?style=for-the-badge&amp;logo=npm&amp;color=green&amp;label=v2.0.0)](https://www.npmjs.com/package/claude-flow)
[![⚡ Claude Code](https://img.shields.io/badge/Claude%20Code-Optimized-green?style=for-the-badge&amp;logo=anthropic)](https://github.com/ruvnet/claude-flow)
[![🏛️ Agentics Foundation](https://img.shields.io/badge/Agentics-Foundation-crimson?style=for-the-badge&amp;logo=openai)](https://discord.com/invite/dfxmpwkG2D)
[![🐝 Hive-Mind](https://img.shields.io/badge/Hive--Mind-AI%20Coordination-purple?style=for-the-badge&amp;logo=swarm)](https://github.com/ruvnet/claude-flow)
[![🧠 Neural](https://img.shields.io/badge/Neural-87%20MCP%20Tools-blue?style=for-the-badge&amp;logo=pytorch)](https://github.com/ruvnet/claude-flow)
[![🛡️ MIT License](https://img.shields.io/badge/License-MIT-yellow?style=for-the-badge&amp;logo=opensourceinitiative)](https://opensource.org/licenses/MIT)

&lt;/div&gt;

---

## 🌟 **Overview**

**Claude-Flow v2 Alpha** is an enterprise-grade AI orchestration platform that reimagines how developers build with AI. By combining **hive-mind swarm intelligence**, **neural pattern recognition**, and **87 advanced MCP tools**, Claude-Flow enables unprecedented AI-powered development workflows.

### 🎯 **Key Features**

- **🐝 Hive-Mind Intelligence**: Queen-led AI coordination with specialized worker agents
- **🧠 Neural Networks**: 27+ cognitive models with WASM SIMD acceleration
- **🔧 87 MCP Tools**: Comprehensive toolkit for swarm orchestration, memory, and automation
- **🔄 Dynamic Agent Architecture (DAA)**: Self-organizing agents with fault tolerance
- **💾 SQLite Memory System**: Persistent `.swarm/memory.db` with 12 specialized tables
- **🪝 Advanced Hooks System**: Automated workflows with pre/post operation hooks
- **📊 GitHub Integration**: 6 specialized modes for repository management
- **🌐 Flow Nexus Cloud Platform**: E2B sandboxes, AI swarms, challenges, and marketplace integration

&gt; 🔥 **Revolutionary AI Coordination**: Build faster, smarter, and more efficiently with AI-powered development orchestration

## 🌐 **Flow Nexus Cloud Platform**

**NEW**: Claude-Flow v2.0.0 now includes **Flow Nexus integration** - a cloud-powered AI development platform featuring:

- **E2B Sandboxes**: Secure isolated environments for Node.js, Python, React, Next.js
- **AI Swarms**: Deploy multi-agent systems in cloud infrastructure  
- **Neural Training**: Distributed machine learning with custom model deployment
- **Challenges &amp; Marketplace**: Coding challenges with rUv credit rewards and template marketplace
- **Workflow Automation**: Event-driven automation with message queue processing

&gt; 📚 **Complete documentation**: Visit [flow-nexus.ruv.io](https://flow-nexus.ruv.io) for comprehensive guides, tutorials, and API reference. Also see issue # https://github.com/ruvnet/claude-flow/issues/732

## ⚡ **Try v2.0.0 Alpha in 4 Commands**

### 📋 **Prerequisites**

- **Node.js 18+** (LTS recommended)
- **npm 9+** or equivalent package manager
- **Windows users**: See [Windows Installation Guide](https://github.com/ruvnet/claude-code-flow/blob/main/docs/windows-installation.md) for special instructions

⚠️ **IMPORTANT**: Claude Code must be installed first:

```bash
# 1. Install Claude Code globally
npm install -g @anthropic-ai/claude-code

# 2. (Optional) Skip permissions check for faster setup
# Only use if you understand the security implications
claude --dangerously-skip-permissions
```

💡 **Windows Note**: If you encounter SQLite errors, Claude Flow will automatically use in-memory storage. For persistent storage options, see our [Windows guide](https://github.com/ruvnet/claude-code-flow/blob/main/docs/windows-installation.md).

### 🎯 **Instant Alpha Testing**

```bash
# 1. Initialize Claude Flow with enhanced MCP setup (auto-configures permissions!)
npx claude-flow@alpha init --force

# 2. Explore all revolutionary capabilities  
npx claude-flow@alpha --help

# 3a. Quick AI coordination (recommended for most tasks)
npx claude-flow@alpha swarm &quot;build me a REST API&quot; --claude

# 3b. OR launch the full hive-mind system (for complex projects)
npx claude-flow@alpha hive-mind wizard
npx claude-flow@alpha hive-mind spawn &quot;build enterprise system&quot; --claude
```

### 🚀 **Quick Start with Flow Nexus**

```bash
# 1. Initialize Flow Nexus only (minimal setup)
npx claude-flow init --flow-nexus

# 2. Register and login (use MCP tools in Claude Code)
mcp__flow-nexus__user_register({ email: &quot;your@email.com&quot;, password: &quot;secure&quot; })
mcp__flow-nexus__user_login({ email: &quot;your@email.com&quot;, password: &quot;secure&quot; })

# 3. Deploy your first cloud swarm
mcp__flow-nexus__swarm_init({ topology: &quot;mesh&quot;, maxAgents: 5 })
mcp__flow-nexus__sandbox_create({ template: &quot;node&quot;, name: &quot;api-dev&quot; })
```

### 🤔 **Swarm vs Hive-Mind: Which to Use?**

| Feature | `swarm` Command | `hive-mind` Command |
|---------|----------------|-------------------|
| **Best For** | Quick tasks, single objectives | Complex projects, persistent sessions |
| **Setup** | Instant - no configuration needed | Interactive wizard setup |
| **Session** | Temporary coordination | Persistent with resume capability |
| **Memory** | Task-scoped | Project-wide with SQLite storage |
| **Agents** | Auto-spawned for task | Manual control with specializations |
| **Use When** | &quot;Build X&quot;, &quot;Fix Y&quot;, &quot;Analyze Z&quot; | Multi-feature projects, team coordination |

**Quick Rule:** Start with `swarm` for most tasks. Use `hive-mind` when you need persistent sessions or complex multi-agent coordination.

## 🎯 **Typical Workflows - Your &quot;Happy Path&quot; Guide**

### **New to Claude-Flow? Start Here!**

Confused about `.hive-mind` and `.swarm` directories? Not sure when to create new hives? Here are the most common workflow patterns:

#### **🚀 Pattern 1: Single Feature Development**
```bash
# Initialize once per feature/task
npx claude-flow@alpha init --force
npx claude-flow@alpha hive-mind spawn &quot;Implement user authentication&quot; --claude

# Continue working on SAME feature (reuse existing hive)
npx claude-flow@alpha hive-mind status
npx claude-flow@alpha memory query &quot;authentication&quot; --recent
npx claude-flow@alpha swarm &quot;Add password reset functionality&quot; --continue-session
```

#### **🏗️ Pattern 2: Multi-Feature Project**
```bash
# Project-level initialization (once per project)
npx claude-flow@alpha init --force --project-name &quot;my-app&quot;

# Feature 1: Authentication (new hive)
npx claude-flow@alpha hive-mind spawn &quot;auth-system&quot; --namespace auth --claude

# Feature 2: User management (separate hive)  
npx claude-flow@alpha hive-mind spawn &quot;user-management&quot; --namespace users --claude

# Resume Feature 1 later (use session ID from spawn output)
npx claude-flow@alpha hive-mind resume session-xxxxx-xxxxx
```

#### **🔍 Pattern 3: Research &amp; Analysis**
```bash
# Start research session
npx claude-flow@alpha hive-mind spawn &quot;Research microservices patterns&quot; --agents researcher,analyst --claude

# Continue research in SAME session
npx claude-flow@alpha memory stats  # See what&#039;s been learned
npx claude-flow@alpha swarm &quot;Deep dive into API gateway patterns&quot; --continue-session
```

### **🤔 When Should I Create a New Hive?**

| Situation | Action | Command |
|-----------|--------|---------|
| **Same objective/feature** | Continue existing hive | `npx claude-flow@alpha hive-mind resume &lt;session-id&gt;` |
| **New feature in same project** | Create new hive with namespace | `npx claude-flow@alpha hive-mind spawn &quot;new-feature&quot; --namespace feature-name` |
| **Completely different project** | New directory + init | `mkdir new-project &amp;&amp; cd new-project &amp;&amp; npx claude-flow@alpha init` |
| **Experimenting/testing** | Temporary hive | `npx claude-flow@alpha hive-mind spawn &quot;experiment&quot; --temp` |

### **📁 Understanding &quot;Empty&quot; Directories**

**Don&#039;t panic if directories seem empty!** Claude-Flow uses SQLite databases that may not show files in directory listings:

```bash
# Check what&#039;s actually stored (even if directories look empty)
npx claude-flow@alpha memory stats        # See memory data
npx claude-flow@alpha memory list         # List all namespaces  
npx claude-flow@alpha hive-mind status    # See active hives

# Your project structure after initialization:
# .hive-mind/     &lt;- Contains config.json + SQLite session data
# .swarm/         &lt;- Contains memory.db (SQLite database)
# memory/         &lt;- Agent-specific memories (created when agents spawn)
# coordination/   &lt;- Active workflow files (created during tasks)
```

### **🔄 Continuing Previous Work**

```bash
# See what you were working on
npx claude-flow@alpha hive-mind status
npx claude-flow@alpha memory query --recent --limit 5

# List all sessions to find the one you want
npx claude-flow@alpha hive-mind sessions

# Resume specific session by ID
npx claude-flow@alpha hive-mind resume session-xxxxx-xxxxx
```

---

## 🪝 **Advanced Hooks System**

### **Automated Workflow Enhancement**
Claude-Flow v2.0.0 introduces a powerful hooks system that automates coordination and enhances every operation:

```bash
# Hooks automatically trigger on operations
npx claude-flow@alpha init --force  # Auto-configures MCP servers &amp; hooks
```

### **Available Hooks**

#### **Pre-Operation Hooks**
- **`pre-task`**: Auto-assigns agents based on task complexity
- **`pre-search`**: Caches searches for improved performance  
- **`pre-edit`**: Validates files and prepares resources
- **`pre-command`**: Security validation before execution

#### **Post-Operation Hooks**
- **`post-edit`**: Auto-formats code using language-specific tools
- **`post-task`**: Trains neural patterns from successful operations
- **`post-command`**: Updates memory with operation context
- **`notification`**: Real-time progress updates

#### **Session Hooks**
- **`session-start`**: Restores previous context automatically
- **`session-end`**: Generates summaries and persists state
- **`session-restore`**: Loads memory from previous sessions

### **Hook Configuration**
```json
// .claude/settings.json (auto-configured)
{
  &quot;hooks&quot;: {
    &quot;preEditHook&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;claude-flow&quot;, &quot;hooks&quot;, &quot;pre-edit&quot;, &quot;--file&quot;, &quot;${file}&quot;, &quot;--auto-assign-agents&quot;, &quot;true&quot;],
      &quot;alwaysRun&quot;: false
    },
    &quot;postEditHook&quot;: {
      &quot;command&quot;: &quot;npx&quot;, 
      &quot;args&quot;: [&quot;claude-flow&quot;, &quot;hooks&quot;, &quot;post-edit&quot;, &quot;--file&quot;, &quot;${file}&quot;, &quot;--format&quot;, &quot;true&quot;],
      &quot;alwaysRun&quot;: true
    },
    &quot;sessionEndHook&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;claude-flow&quot;, &quot;hooks&quot;, &quot;session-end&quot;, &quot;--generate-summary&quot;, &quot;true&quot;],
      &quot;alwaysRun&quot;: true
    }
  }
}
```

### **Using Hooks in Claude Code**

Hooks integrate seamlessly with Claude Code&#039;s workflow:

1. **Automatic Triggering**: Hooks fire automatically during Claude Code operations
2. **Context Awareness**: Each hook receives relevant context (file paths, commands, etc.)
3. **Non-Blocking**: Hooks run asynchronously to maintain performance
4. **Configurable**: Enable/disable specific hooks as needed

### **Hook Examples**

```bash
# Manual hook execution
npx claude-flow hooks pre-task --description &quot;Build REST API&quot; --auto-spawn-agents

# Post-edit with formatting
npx claude-flow hooks post-edit --file &quot;src/api.js&quot; --format --train-neural

# Session management
npx claude-flow hooks session-end --generate-summary --persist-state
```

### **Fixing Hook Variable Interpolation**

If you&#039;re experiencing issues with `${file}` or `${command}` variables not working in your hooks (common with Claude Code 1.0.51+), use the `fix-hook-variables` command:

```bash
# Fix all found settings.json files
npx claude-flow@alpha fix-hook-variables

# Fix specific file
npx claude-flow@alpha fix-hook-variables .claude/settings.json

# Create test configuration
npx claude-flow@alpha fix-hook-variables --test
```

This command automatically transforms legacy variable syntax to working environment variables:
- `${file}` → `$CLAUDE_EDITED_FILE`
- `${command}` → `$CLAUDE_COMMAND`
- `${tool}` → `$CLAUDE_TOOL`

---
## 🐝 **Revolutionary Hive-Mind Intelligence**

### **Queen-Led AI Coordination**
Claude-Flow v2.0.0 introduces groundbreaking hive-mind architecture where a **Queen AI** coordinates specialized worker agents in perfect harmony.

```bash
# Deploy intelligent swarm coordination
npx claude-flow@alpha swarm &quot;Build a full-stack application&quot; --strategy development

# Launch hive-mind with specific specializations
npx claude-flow@alpha hive-mind spawn &quot;Create microservices architecture&quot; --agents 8 --claude
```

### **🤖 Intelligent Agent Types**
- **👑 Queen Agent**: Master coordinator and decision maker
- **🏗️ Architect Agents**: System design and technical architecture
- **💻 Coder Agents**: Implementation and development
- **🧪 Tester Agents**: Quality assurance and validation
- **📊 Analyst Agents**: Data analysis and insights
- **🔍 Researcher Agents**: Information gathering and analysis
- **🛡️ Security Agents**: Security auditing and compliance
- **🚀 DevOps Agents**: Deployment and infrastructure

---

## ⚡ **87 Advanced MCP Tools**

### **🧠 Neural &amp; Cognitive Tools**
```bash
# Neural pattern recognition and training
npx claude-flow@alpha neural train --pattern coordination --epochs 50
npx claude-flow@alpha neural predict --model cognitive-analysis
npx claude-flow@alpha cognitive analyze --behavior &quot;development workflow&quot;
```

### **💾 SQLite Memory Systems**
```bash
# Cross-session memory management with SQLite persistence
npx claude-flow@alpha memory store &quot;project-context&quot; &quot;Full-stack app requirements&quot;
npx claude-flow@alpha memory query &quot;authentication&quot; --namespace sparc
npx claude-flow@alpha memory stats  # Shows 12 specialized tables
npx claude-flow@alpha memory export backup.json --namespace default
npx claude-flow@alpha memory import project-memory.json
```

&gt; 🪟 **Windows Users**: SQLite will automatically fallback to in-memory storage if native modules fail. All features work normally, but data won&#039;t persist between sessions. See [Windows guide](https://github.com/ruvnet/claude-code-flow/blob/main/docs/windows-installation.md) for persistent storage options.

### **🔄 Workflow Orchestration**
```bash
# Advanced workflow automation
npx claude-flow@alpha workflow create --name &quot;CI/CD Pipeline&quot; --parallel
npx claude-flow@alpha batch process --items &quot;test,build,deploy&quot; --concurrent
npx claude-flow@alpha pipeline create --config advanced-deployment.json
```

## 🧠 **Neural Network Capabilities**

### **Cognitive Computing Engine**
Powered by 27+ neural models optimized with WASM SIMD acceleration:

```bash
# Train coordination patterns
npx claude-flow@alpha neural train --pattern coordination --data &quot;workflow.json&quot;

# Real-time predictions
npx claude-flow@alpha neural predict --model task-optimizer --input &quot;current-state.json&quot;

# Analyze cognitive behavior
npx claude-flow@alpha cognitive analyze --behavior &quot;development-patterns&quot;
```

### **Neural Features**
- **Pattern Recognition**: Learns from successful operations
- **Adaptive Learning**: Improves performance over time
- **Transfer Learning**: Apply knowledge across domains
- **Model Compression**: Efficient storage and execution
- **Ensemble Models**: Combine multiple neural networks
- **Explainable AI**: Understand decision-making process

## 🔧 **DAA MCP Endpoints**

### **Dynamic Agent Architecture**
Complete programmatic control over agent lifecycle and coordination:

```bash
# Create specialized agents
npx claude-flow@alpha daa agent-create --type &quot;specialized-researcher&quot; \
  --capabilities &quot;[\&quot;deep-analysis\&quot;, \&quot;pattern-recognition\&quot;]&quot; \
  --resources &quot;{\&quot;memory\&quot;: 2048, \&quot;compute\&quot;: \&quot;high\&quot;}&quot;

# Match capabilities to tasks
npx claude-flow@alpha daa capability-match \
  --task-requirements &quot;[\&quot;security-analysis\&quot;, \&quot;performance-optimization\&quot;]&quot;

# Manage agent lifecycle
npx claude-flow@alpha daa lifecycle-manage --agentId &quot;agent-123&quot; --action &quot;scale-up&quot;
```

### **DAA Features**
- **Resource Allocation**: Dynamic CPU/memory management
- **Inter-Agent Communication**: Message passing and coordination
- **Consensus Mechanisms**: Democratic decision making
- **Fault Tolerance**: Self-healing with automatic recovery
- **Performance Optimization**: Real-time bottleneck resolution

### **MCP Tool Categories**

#### **🐝 Swarm Orchestration** (15 tools)
- `swarm_init`, `agent_spawn`, `task_orchestrate`
- `swarm_monitor`, `topology_optimize`, `load_balance`
- `coordination_sync`, `swarm_scale`, `swarm_destroy`

#### **🧠 Neural &amp; Cognitive** (12 tools)
- `neural_train`, `neural_predict`, `pattern_recognize`
- `cognitive_analyze`, `learning_adapt`, `neural_compress`
- `ensemble_create`, `transfer_learn`, `neural_explain`

#### **💾 Memory Management** (10 tools)
- `memory_usage`, `memory_search`, `memory_persist`
- `memory_namespace`, `memory_backup`, `memory_restore`
- `memory_compress`, `memory_sync`, `memory_analytics`
- **SQLite Backend**: Persistent `.swarm/memory.db` with 12 specialized tables

#### **📊 Performance &amp; Monitoring** (10 tools)
- `performance_report`, `bottleneck_analyze`, `token_usage`
- `benchmark_run`, `metrics_collect`, `trend_analysis`
- `health_check`, `diagnostic_run`, `usage_stats`

#### **🔄 Workflow Automation** (10 tools)
- `workflow_create`, `workflow_execute`, `workflow_export`
- `automation_setup`, `pipeline_create`, `scheduler_manage`
- `trigger_setup`, `batch_process`, `parallel_execute`

#### **📦 GitHub Integration** (6 tools)
- `github_repo_analyze`, `github_pr_manage`, `github_issue_track`
- `github_release_coord`, `github_workflow_auto`, `github_code_review`

#### **🤖 Dynamic Agents** (6 tools)
- `daa_agent_create`, `daa_capability_match`, `daa_resource_alloc`
- `daa_lifecycle_manage`, `daa_communication`, `daa_consensus`

#### **🛡️ System &amp; Security** (8 tools)
- `security_scan`, `backup_create`, `restore_system`
- `config_manage`, `features_detect`, `log_analysis`

### **📊 GitHub Integration**
```bash
# GitHub workflow orchestration and coordination
npx claude-flow@alpha github gh-coordinator analyze --analysis-type security
npx claude-flow@alpha github pr-manager review --multi-reviewer --ai-powered
npx claude-flow@alpha github release-manager coord --version 2.0.0 --auto-changelog
npx claude-flow@alpha github repo-architect optimize --structure-analysis
npx claude-flow@alpha github issue-tracker manage --project-coordination
npx claude-flow@alpha github sync-coordinator align --multi-package
```

---

## 🛡️ **Seamless Claude Code Integration**

### **Auto-MCP Server Setup**
v2.0.0 Alpha automatically configures MCP servers for seamless Claude Code integration:

```bash
# Automatic MCP integration (happens during init)
✅ claude-flow MCP server configured
✅ ruv-swarm MCP server configured  
✅ 87 tools available in Claude Code
✅ --dangerously-skip-permissions set as default
```

### **Enhanced SPARC Workflows**
```bash
# Advanced SPARC development with neural enhancement
npx claude-flow@alpha sparc mode --type &quot;neural-tdd&quot; --auto-learn
npx claude-flow@alpha sparc workflow --phases &quot;all&quot; --ai-guided --memory-enhanced
```

---

## 🧠 **Cognitive Computing Features**

### **🎯 Neural Pattern Recognition**
- **27+ Cognitive Models**: Adaptive learning from successful operations
- **Pattern Analysis**: Real-time behavior analysis and optimization
- **Decision Tracking**: Complete audit trail of AI decisions
- **Performance Learning**: Continuous improvement from past executions

### **🔄 Self-Healing Systems**
```bash
# Automatic error recovery and optimization
npx claude-flow@alpha health check --components all --auto-heal
npx claude-flow@alpha fault tolerance --

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[n8n-io/n8n]]></title>
            <link>https://github.com/n8n-io/n8n</link>
            <guid>https://github.com/n8n-io/n8n</guid>
            <pubDate>Tue, 16 Sep 2025 00:05:11 GMT</pubDate>
            <description><![CDATA[Fair-code workflow automation platform with native AI capabilities. Combine visual building with custom code, self-host or cloud, 400+ integrations.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/n8n-io/n8n">n8n-io/n8n</a></h1>
            <p>Fair-code workflow automation platform with native AI capabilities. Combine visual building with custom code, self-host or cloud, 400+ integrations.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 138,022</p>
            <p>Forks: 43,607</p>
            <p>Stars today: 297 stars today</p>
            <h2>README</h2><pre>![Banner image](https://user-images.githubusercontent.com/10284570/173569848-c624317f-42b1-45a6-ab09-f0ea3c247648.png)

# n8n - Secure Workflow Automation for Technical Teams

n8n is a workflow automation platform that gives technical teams the flexibility of code with the speed of no-code. With 400+ integrations, native AI capabilities, and a fair-code license, n8n lets you build powerful automations while maintaining full control over your data and deployments.

![n8n.io - Screenshot](https://raw.githubusercontent.com/n8n-io/n8n/master/assets/n8n-screenshot-readme.png)

## Key Capabilities

- **Code When You Need It**: Write JavaScript/Python, add npm packages, or use the visual interface
- **AI-Native Platform**: Build AI agent workflows based on LangChain with your own data and models
- **Full Control**: Self-host with our fair-code license or use our [cloud offering](https://app.n8n.cloud/login)
- **Enterprise-Ready**: Advanced permissions, SSO, and air-gapped deployments
- **Active Community**: 400+ integrations and 900+ ready-to-use [templates](https://n8n.io/workflows)

## Quick Start

Try n8n instantly with [npx](https://docs.n8n.io/hosting/installation/npm/) (requires [Node.js](https://nodejs.org/en/)):

```
npx n8n
```

Or deploy with [Docker](https://docs.n8n.io/hosting/installation/docker/):

```
docker volume create n8n_data
docker run -it --rm --name n8n -p 5678:5678 -v n8n_data:/home/node/.n8n docker.n8n.io/n8nio/n8n
```

Access the editor at http://localhost:5678

## Resources

- 📚 [Documentation](https://docs.n8n.io)
- 🔧 [400+ Integrations](https://n8n.io/integrations)
- 💡 [Example Workflows](https://n8n.io/workflows)
- 🤖 [AI &amp; LangChain Guide](https://docs.n8n.io/langchain/)
- 👥 [Community Forum](https://community.n8n.io)
- 📖 [Community Tutorials](https://community.n8n.io/c/tutorials/28)

## Support

Need help? Our community forum is the place to get support and connect with other users:
[community.n8n.io](https://community.n8n.io)

## License

n8n is [fair-code](https://faircode.io) distributed under the [Sustainable Use License](https://github.com/n8n-io/n8n/blob/master/LICENSE.md) and [n8n Enterprise License](https://github.com/n8n-io/n8n/blob/master/LICENSE_EE.md).

- **Source Available**: Always visible source code
- **Self-Hostable**: Deploy anywhere
- **Extensible**: Add your own nodes and functionality

[Enterprise licenses](mailto:license@n8n.io) available for additional features and support.

Additional information about the license model can be found in the [docs](https://docs.n8n.io/reference/license/).

## Contributing

Found a bug 🐛 or have a feature idea ✨? Check our [Contributing Guide](https://github.com/n8n-io/n8n/blob/master/CONTRIBUTING.md) to get started.

## Join the Team

Want to shape the future of automation? Check out our [job posts](https://n8n.io/careers) and join our team!

## What does n8n mean?

**Short answer:** It means &quot;nodemation&quot; and is pronounced as n-eight-n.

**Long answer:** &quot;I get that question quite often (more often than I expected) so I decided it is probably best to answer it here. While looking for a good name for the project with a free domain I realized very quickly that all the good ones I could think of were already taken. So, in the end, I chose nodemation. &#039;node-&#039; in the sense that it uses a Node-View and that it uses Node.js and &#039;-mation&#039; for &#039;automation&#039; which is what the project is supposed to help with. However, I did not like how long the name was and I could not imagine writing something that long every time in the CLI. That is when I then ended up on &#039;n8n&#039;.&quot; - **Jan Oberhauser, Founder and CEO, n8n.io**
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[Portkey-AI/gateway]]></title>
            <link>https://github.com/Portkey-AI/gateway</link>
            <guid>https://github.com/Portkey-AI/gateway</guid>
            <pubDate>Tue, 16 Sep 2025 00:05:10 GMT</pubDate>
            <description><![CDATA[A blazing fast AI Gateway with integrated guardrails. Route to 200+ LLMs, 50+ AI Guardrails with 1 fast & friendly API.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/Portkey-AI/gateway">Portkey-AI/gateway</a></h1>
            <p>A blazing fast AI Gateway with integrated guardrails. Route to 200+ LLMs, 50+ AI Guardrails with 1 fast & friendly API.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 9,484</p>
            <p>Forks: 730</p>
            <p>Stars today: 95 stars today</p>
            <h2>README</h2><pre>
&lt;p align=&quot;right&quot;&gt;
   &lt;strong&gt;English&lt;/strong&gt; | &lt;a href=&quot;./.github/README.cn.md&quot;&gt;中文&lt;/a&gt; | &lt;a href=&quot;./.github/README.jp.md&quot;&gt;日本語&lt;/a&gt;
&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;

&lt;a href=&quot;https://portkey.sh/report-github&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/siddharthsambharia-portkey/Portkey-Product-Images/refs/heads/main/LLM%20Report%20Campaign%20Frame.png&quot;&gt;&lt;/img&gt;&lt;/a&gt;
&lt;br&gt;

# AI Gateway
#### Route to 250+ LLMs with 1 fast &amp; friendly API

&lt;img src=&quot;https://cfassets.portkey.ai/sdk.gif&quot; width=&quot;550px&quot; alt=&quot;Portkey AI Gateway Demo showing LLM routing capabilities&quot; style=&quot;margin-left:-35px&quot;&gt;

[Docs](https://portkey.wiki/gh-1) | [Enterprise](https://portkey.wiki/gh-2) | [Hosted Gateway](https://portkey.wiki/gh-3) | [Changelog](https://portkey.wiki/gh-4) | [API Reference](https://portkey.wiki/gh-5)


[![License](https://img.shields.io/github/license/Ileriayo/markdown-badges)](./LICENSE)
[![Discord](https://img.shields.io/discord/1143393887742861333)](https://portkey.wiki/gh-6)
[![Twitter](https://img.shields.io/twitter/url/https/twitter/follow/portkeyai?style=social&amp;label=Follow%20%40PortkeyAI)](https://portkey.wiki/gh-7)
[![npm version](https://badge.fury.io/js/%40portkey-ai%2Fgateway.svg)](https://portkey.wiki/gh-8)
[![Better Stack Badge](https://uptime.betterstack.com/status-badges/v1/monitor/q94g.svg)](https://portkey.wiki/gh-9)

&lt;a href=&quot;https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?stackName=portkey-gateway&amp;templateURL=https://portkey-gateway-ec2-quicklaunch.s3.us-east-1.amazonaws.com/portkey-gateway-ec2-quicklaunch.template.yaml&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Deploy_to_EC2-232F3E?style=for-the-badge&amp;logo=amazonwebservices&amp;logoColor=white&quot; alt=&quot;Deploy to AWS EC2&quot; width=&quot;105&quot;/&gt;&lt;/a&gt; [![Ask DeepWiki](https://deepwiki.com/badge.svg)](https://deepwiki.com/Portkey-AI/gateway)
&lt;/div&gt;

&lt;br/&gt;

The [**AI Gateway**](https://portkey.wiki/gh-10) is designed for fast, reliable &amp; secure routing to 1600+ language, vision, audio, and image models. It is a lightweight, open-source, and enterprise-ready solution that allows you to integrate with any language model in under 2 minutes.

- [x] **Blazing fast** (&lt;1ms latency) with a tiny footprint (122kb)
- [x] **Battle tested**, with over 10B tokens processed everyday
- [x] **Enterprise-ready** with enhanced security, scale, and custom deployments

&lt;br&gt;

#### What can you do with the AI Gateway?
- Integrate with any LLM in under 2 minutes - [Quickstart](#quickstart-2-mins)
- Prevent downtimes through **[automatic retries](https://portkey.wiki/gh-11)** and **[fallbacks](https://portkey.wiki/gh-12)**
- Scale AI apps with **[load balancing](https://portkey.wiki/gh-13)** and **[conditional routing](https://portkey.wiki/gh-14)**
- Protect your AI deployments with **[guardrails](https://portkey.wiki/gh-15)**
- Go beyond text with **[multi-modal capabilities](https://portkey.wiki/gh-16)**
- Finally, explore **[agentic workflow](https://portkey.wiki/gh-17)** integrations

&lt;br&gt;&lt;br&gt;

&gt; [!TIP]
&gt; Starring this repo helps more developers discover the AI Gateway 🙏🏻
&gt;
&gt; ![star-2](https://github.com/user-attachments/assets/53597dce-6333-4ecc-a154-eb05532954e4)
&gt; 
&lt;br&gt;


&lt;br&gt;

## Quickstart (2 mins)

### 1. Setup your AI Gateway

```bash
# Run the gateway locally (needs Node.js and npm)
npx @portkey-ai/gateway
```
&gt; The Gateway is running on `http://localhost:8787/v1`
&gt; 
&gt; The Gateway Console is running on `http://localhost:8787/public/`

&lt;sup&gt;
Deployment guides:
&amp;nbsp; &lt;a href=&quot;https://portkey.wiki/gh-18&quot;&gt;&lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://cfassets.portkey.ai/logo/dew-color.svg&quot; /&gt; Portkey Cloud (Recommended)&lt;/a&gt;
&amp;nbsp; &lt;a href=&quot;./docs/installation-deployments.md#docker&quot;&gt;&lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://cdn.simpleicons.org/docker/3776AB&quot; /&gt; Docker&lt;/a&gt;
&amp;nbsp; &lt;a href=&quot;./docs/installation-deployments.md#nodejs-server&quot;&gt;&lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://cdn.simpleicons.org/node.js/3776AB&quot; /&gt; Node.js&lt;/a&gt;
&amp;nbsp; &lt;a href=&quot;./docs/installation-deployments.md#cloudflare-workers&quot;&gt;&lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://cdn.simpleicons.org/cloudflare/3776AB&quot; /&gt; Cloudflare&lt;/a&gt;
&amp;nbsp; &lt;a href=&quot;./docs/installation-deployments.md#replit&quot;&gt;&lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://cdn.simpleicons.org/replit/3776AB&quot; /&gt; Replit&lt;/a&gt;
&amp;nbsp; &lt;a href=&quot;./docs/installation-deployments.md&quot;&gt; Others...&lt;/a&gt;

&lt;/sup&gt;

### 2. Make your first request

&lt;!-- &lt;details open&gt;
&lt;summary&gt;Python Example&lt;/summary&gt; --&gt;
```python
# pip install -qU portkey-ai

from portkey_ai import Portkey

# OpenAI compatible client
client = Portkey(
    provider=&quot;openai&quot;, # or &#039;anthropic&#039;, &#039;bedrock&#039;, &#039;groq&#039;, etc
    Authorization=&quot;sk-***&quot; # the provider API key
)

# Make a request through your AI Gateway
client.chat.completions.create(
    messages=[{&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;What&#039;s the weather like?&quot;}],
    model=&quot;gpt-4o-mini&quot;
)
```



&lt;sup&gt;Supported Libraries:
&amp;nbsp; [&lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://cdn.simpleicons.org/javascript/3776AB&quot; /&gt; JS](https://portkey.wiki/gh-19)
&amp;nbsp; [&lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://cdn.simpleicons.org/python/3776AB&quot; /&gt; Python](https://portkey.wiki/gh-20)
&amp;nbsp; [&lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://cdn.simpleicons.org/gnubash/3776AB&quot; /&gt; REST](https://portkey.sh/gh-84)
&amp;nbsp; [&lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://cdn.simpleicons.org/openai/3776AB&quot; /&gt; OpenAI SDKs](https://portkey.wiki/gh-21)
&amp;nbsp; [&lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://cdn.simpleicons.org/langchain/3776AB&quot; /&gt; Langchain](https://portkey.wiki/gh-22)
&amp;nbsp; [LlamaIndex](https://portkey.wiki/gh-23)
&amp;nbsp; [Autogen](https://portkey.wiki/gh-24)
&amp;nbsp; [CrewAI](https://portkey.wiki/gh-25)
&amp;nbsp; [More..](https://portkey.wiki/gh-26)
&lt;/sup&gt;

On the Gateway Console (`http://localhost:8787/public/`) you can see all of your local logs in one place.

&lt;img src=&quot;https://github.com/user-attachments/assets/362bc916-0fc9-43f1-a39e-4bd71aac4a3a&quot; width=&quot;400&quot; /&gt;


### 3. Routing &amp; Guardrails
`Configs` in the LLM gateway allow you to create routing rules, add reliability and setup guardrails.
```python
config = {
  &quot;retry&quot;: {&quot;attempts&quot;: 5},

  &quot;output_guardrails&quot;: [{
    &quot;default.contains&quot;: {&quot;operator&quot;: &quot;none&quot;, &quot;words&quot;: [&quot;Apple&quot;]},
    &quot;deny&quot;: True
  }]
}

# Attach the config to the client
client = client.with_options(config=config)

client.chat.completions.create(
    model=&quot;gpt-4o-mini&quot;,
    messages=[{&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;Reply randomly with Apple or Bat&quot;}]
)

# This would always response with &quot;Bat&quot; as the guardrail denies all replies containing &quot;Apple&quot;. The retry config would retry 5 times before giving up.
```
&lt;div align=&quot;center&quot;&gt;
&lt;img src=&quot;https://portkey.ai/blog/content/images/size/w1600/2024/11/image-15.png&quot; width=600 title=&quot;Request flow through Portkey&#039;s AI gateway with retries and guardrails&quot; alt=&quot;Request flow through Portkey&#039;s AI gateway with retries and guardrails&quot;/&gt;
&lt;/div&gt;

You can do a lot more stuff with configs in your AI gateway. [Jump to examples  →](https://portkey.wiki/gh-27)

&lt;br/&gt;

### Enterprise Version (Private deployments)

&lt;sup&gt;

[&lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://cfassets.portkey.ai/amazon-logo.svg&quot; /&gt; AWS](https://portkey.wiki/gh-28)
&amp;nbsp; [&lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://cfassets.portkey.ai/azure-logo.svg&quot; /&gt; Azure](https://portkey.wiki/gh-29)
&amp;nbsp; [&lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://cdn.simpleicons.org/googlecloud/3776AB&quot; /&gt; GCP](https://portkey.wiki/gh-30)
&amp;nbsp; [&lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://cdn.simpleicons.org/redhatopenshift/3776AB&quot; /&gt; OpenShift](https://portkey.wiki/gh-31)
&amp;nbsp; [&lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://cdn.simpleicons.org/kubernetes/3776AB&quot; /&gt; Kubernetes](https://portkey.wiki/gh-85)

&lt;/sup&gt;

The LLM Gateway&#039;s [enterprise version](https://portkey.wiki/gh-86) offers advanced capabilities for **org management**, **governance**, **security** and [more](https://portkey.wiki/gh-87) out of the box. [View Feature Comparison →](https://portkey.wiki/gh-32)

The enterprise deployment architecture for supported platforms is available here - [**Enterprise Private Cloud Deployments**](https://portkey.wiki/gh-33)

&lt;a href=&quot;https://portkey.sh/demo-13&quot;&gt;&lt;img src=&quot;https://portkey.ai/blog/content/images/2024/08/Get-API-Key--5-.png&quot; height=50 alt=&quot;Book an enterprise AI gateway demo&quot; /&gt;&lt;/a&gt;&lt;br/&gt;


&lt;br&gt;

&lt;hr&gt;

### AI Engineering Hours

Join weekly community calls every Friday (8 AM PT) to kickstart your AI Gateway implementation! [Happening every Friday](https://portkey.wiki/gh-35)

&lt;a href=&quot;https://portkey.wiki/gh-35&quot;&gt;&lt;img width=&quot;500&quot; src=&quot;https://github.com/user-attachments/assets/c2885699-f197-4289-b819-21eb839fbae1&quot; /&gt;&lt;/a&gt;

Minutes of Meetings [published here](https://portkey.wiki/gh-36).


&lt;hr&gt;

### LLMs in Prod&#039;25

Insights from analyzing 2 trillion+ tokens, across 90+ regions and 650+ teams in production. What to expect from this report:
- Trends shaping AI adoption and LLM provider growth.
- Benchmarks to optimize speed, cost and reliability.
- Strategies to scale production-grade AI systems.

&lt;a href=&quot;https://portkey.sh/report-github&quot;&gt;&lt;img width=&quot;500&quot; src=&quot;https://raw.githubusercontent.com/siddharthsambharia-portkey/Portkey-Product-Images/refs/heads/main/LLM%20Report%20Campaign%20Image.png&quot; /&gt;&lt;/a&gt;

&lt;a href=&quot;https://portkey.sh/report-github&quot;&gt;**Get the Report**&lt;/a&gt;
&lt;hr&gt;


## Core Features
### Reliable Routing
- &lt;a href=&quot;https://portkey.wiki/gh-37&quot;&gt;**Fallbacks**&lt;/a&gt;: Fallback to another provider or model on failed requests using the LLM gateway. You can specify the errors on which to trigger the fallback. Improves reliability of your application.
- &lt;a href=&quot;https://portkey.wiki/gh-38&quot;&gt;**Automatic Retries**&lt;/a&gt;: Automatically retry failed requests up to 5 times. An exponential backoff strategy spaces out retry attempts to prevent network overload.
- &lt;a href=&quot;https://portkey.wiki/gh-39&quot;&gt;**Load Balancing**&lt;/a&gt;: Distribute LLM requests across multiple API keys or AI providers with weights to ensure high availability and optimal performance.
- &lt;a href=&quot;https://portkey.wiki/gh-40&quot;&gt;**Request Timeouts**&lt;/a&gt;: Manage unruly LLMs &amp; latencies by setting up granular request timeouts, allowing automatic termination of requests that exceed a specified duration.
- &lt;a href=&quot;https://portkey.wiki/gh-41&quot;&gt;**Multi-modal LLM Gateway**&lt;/a&gt;: Call vision, audio (text-to-speech &amp; speech-to-text), and image generation models from multiple providers  — all using the familiar OpenAI signature
- &lt;a href=&quot;https://portkey.wiki/gh-42&quot;&gt;**Realtime APIs**&lt;/a&gt;: Call realtime APIs launched by OpenAI through the integrate websockets server.

### Security &amp; Accuracy
- &lt;a href=&quot;https://portkey.wiki/gh-88&quot;&gt;**Guardrails**&lt;/a&gt;: Verify your LLM inputs and outputs to adhere to your specified checks. Choose from the 40+ pre-built guardrails to ensure compliance with security and accuracy standards. You can &lt;a href=&quot;https://portkey.wiki/gh-43&quot;&gt;bring your own guardrails&lt;/a&gt; or choose from our &lt;a href=&quot;https://portkey.wiki/gh-44&quot;&gt;many partners&lt;/a&gt;.
- [**Secure Key Management**](https://portkey.wiki/gh-45): Use your own keys or generate virtual keys on the fly.
- [**Role-based access control**](https://portkey.wiki/gh-46): Granular access control for your users, workspaces and API keys.
- &lt;a href=&quot;https://portkey.wiki/gh-47&quot;&gt;**Compliance &amp; Data Privacy**&lt;/a&gt;: The AI gateway is SOC2, HIPAA, GDPR, and CCPA compliant.

### Cost Management
- [**Smart caching**](https://portkey.wiki/gh-48): Cache responses from LLMs to reduce costs and improve latency. Supports simple and semantic* caching.
- [**Usage analytics**](https://portkey.wiki/gh-49): Monitor and analyze your AI and LLM usage, including request volume, latency, costs and error rates.
- [**Provider optimization***](https://portkey.wiki/gh-89): Automatically switch to the most cost-effective provider based on usage patterns and pricing models.

### Collaboration &amp; Workflows
- &lt;a href=&quot;https://portkey.ai/docs/integrations/agents&quot;&gt;**Agents Support**&lt;/a&gt;: Seamlessly integrate with popular agent frameworks to build complex AI applications. The gateway seamlessly integrates with [Autogen](https://portkey.wiki/gh-50), [CrewAI](https://portkey.wiki/gh-51), [LangChain](https://portkey.wiki/gh-52), [LlamaIndex](https://portkey.wiki/gh-53), [Phidata](https://portkey.wiki/gh-54), [Control Flow](https://portkey.wiki/gh-55), and even [Custom Agents](https://portkey.wiki/gh-56).
- [**Prompt Template Management***](https://portkey.wiki/gh-57): Create, manage and version your prompt templates collaboratively through a universal prompt playground.
&lt;br/&gt;&lt;br/&gt;

&lt;sup&gt;
*&amp;nbsp;Available in hosted and enterprise versions
&lt;/sup&gt;

&lt;br&gt;

## Cookbooks

### ☄️ Trending
- Use models from [Nvidia NIM](/cookbook/providers/nvidia.ipynb) with AI Gateway
- Monitor [CrewAI Agents](/cookbook/monitoring-agents/CrewAI_with_Telemetry.ipynb) with Portkey!
- Comparing [Top 10 LMSYS Models](/cookbook/use-cases/LMSYS%20Series/comparing-top10-LMSYS-models-with-Portkey.ipynb) with AI Gateway.

### 🚨 Latest
* [Create Synthetic Datasets using Nemotron](/cookbook/use-cases/Nemotron_GPT_Finetuning_Portkey.ipynb)
* [Use the LLM Gateway with Vercel&#039;s AI SDK](/cookbook/integrations/vercel-ai.md)
* [Monitor Llama Agents with Portkey&#039;s LLM Gateway](/cookbook/monitoring-agents/Llama_Agents_with_Telemetry.ipynb)

[View all cookbooks →](https://portkey.wiki/gh-58)
&lt;br/&gt;&lt;br/&gt;

## Supported Providers

Explore Gateway integrations with [45+ providers](https://portkey.wiki/gh-59) and [8+ agent frameworks](https://portkey.wiki/gh-90).

|                                                                                                                            | Provider                                                                                      | Support | Stream |
| -------------------------------------------------------------------------------------------------------------------------- | --------------------------------------------------------------------------------------------- | ------- | ------ |
| &lt;img src=&quot;docs/images/openai.png&quot; width=35 /&gt;                                                                              | [OpenAI](https://portkey.wiki/gh-60)                           | ✅       | ✅      |
| &lt;img src=&quot;docs/images/azure.png&quot; width=35&gt;                                                                                 | [Azure OpenAI](https://portkey.wiki/gh-61)               | ✅       | ✅      |
| &lt;img src=&quot;docs/images/anyscale.png&quot; width=35&gt;                                                                              | [Anyscale](https://portkey.wiki/gh-62) | ✅       | ✅      |
| &lt;img src=&quot;https://upload.wikimedia.org/wikipedia/commons/2/2d/Google-favicon-2015.png&quot; width=35&gt;                           | [Google Gemini](https://portkey.wiki/gh-63)             | ✅       | ✅      |
| &lt;img src=&quot;docs/images/anthropic.png&quot; width=35&gt;                                                                             | [Anthropic](https://portkey.wiki/gh-64)                     | ✅       | ✅      |
| &lt;img src=&quot;docs/images/cohere.png&quot; width=35&gt;                                                                                | [Cohere](https://portkey.wiki/gh-65)                           | ✅       | ✅      |
| &lt;img src=&quot;https://assets-global.website-files.com/64f6f2c0e3f4c5a91c1e823a/654693d569494912cfc0c0d4_favicon.svg&quot; width=35&gt; | [Together AI](https://portkey.wiki/gh-66)                 | ✅       | ✅      |
| &lt;img src=&quot;https://www.perplexity.ai/favicon.svg&quot; width=35&gt;                                                                 | [Perplexity](https://portkey.wiki/gh-67)                | ✅       | ✅      |
| &lt;img src=&quot;https://docs.mistral.ai/img/favicon.ico&quot; width=35&gt;                                                               | [Mistral](https://portkey.wiki/gh-68)                      | ✅       | ✅      |
| &lt;img src=&quot;https://docs.nomic.ai/img/nomic-logo.png&quot; width=35&gt;                                                              | [Nomic](https://portkey.wiki/gh-69)                             | ✅       | ✅      |
| &lt;img src=&quot;https://files.readme.io/d38a23e-small-studio-favicon.png&quot; width=35&gt;                                              | [AI21](https://portkey.wiki/gh-91)                                    | ✅       | ✅      |
| &lt;img src=&quot;https://platform.stability.ai/small-logo-purple.svg&quot; width=35&gt;                                                   | [Stability AI](https://portkey.wiki/gh-71)               | ✅       | ✅      |
| &lt;img src=&quot;https://deepinfra.com/_next/static/media/logo.4a03fd3d.svg&quot; width=35&gt;                                            | [DeepInfra](https://portkey.sh/gh-92)                               | ✅       | ✅      |
| &lt;img src=&quot;https://ollama.com/public/ollama.png&quot; width=35&gt;                                                                  | [Ollama](https://portkey.wiki/gh-72)                           | ✅       | ✅      |
| &lt;img src=&quot;https://novita.ai/favicon.ico&quot; width=35&gt;                                                                         | [Novita AI](https://portkey.wiki/gh-73)                              | ✅       | ✅      | `/chat/completions`, `/completions` |


&gt; [View the complete list of 200+ supported models here](https://portkey.wiki/gh-74)
&lt;br&gt;

&lt;br&gt;

## Agents
Gateway seamlessly integrates with popular agent frameworks. [Read the documentation here](https://portkey.wiki/gh-75).


| Framework | Call 200+ LLMs | Advanced Routing | Caching | Logging &amp; Tracing* | Observability* | Prompt Management* |
|------------------------------|--------|-------------|---------|------|---------------|-------------------|
| [Autogen](https://portkey.wiki/gh-93)    | ✅     | ✅          | ✅      | ✅   | ✅            | ✅                |
| [CrewAI](https://portkey.wiki/gh-94)             | ✅     | ✅          | ✅      | ✅   | ✅            | ✅                |
| [LangChain](https://portkey.wiki/gh-95)             | ✅     | ✅          | ✅      | ✅   | ✅            | ✅                |
| [Phidata](https://portkey.wiki/gh-96)             | ✅     | ✅          | ✅      | ✅   | ✅            | ✅                |
| [Llama Index](https://portkey.wiki/gh-97)             | ✅     | ✅          | ✅      | ✅   | ✅            | ✅                |
| [Control Flow](https://portkey.wiki/gh-98) | ✅     | ✅          | ✅      | ✅   | ✅            | ✅                |
| [Build Your Own Agents](https://portkey.wiki/gh-99) | ✅     | ✅          | ✅      | ✅   | ✅            | ✅                |

&lt;br&gt;

*Available on the [hosted app](https://portkey.wiki/gh-76). For detailed documentation [click here](https://portkey.wiki/gh-100).


## Gateway Enterprise Version
Make your AI app more &lt;ins&gt;reliable&lt;/ins&gt; and &lt;ins&gt;forward compatible&lt;/ins&gt;, while ensuring complete &lt;ins&gt;data security&lt;/ins&gt; and &lt;ins&gt;privacy&lt;/ins&gt;.

✅&amp;nbsp; Secure Key Management - for role-based access control and tracking &lt;br&gt;
✅&amp;nbsp; Simple &amp; Semantic Caching - to serve repeat queries faster &amp; save costs &lt;br&gt;
✅&amp;nbsp; Access Control &amp; Inbound Rules - to control which IPs and Geos can connect to your deployments &lt;br&gt;
✅&amp;nbsp; PII Redaction - to automatically remove sensitive data from your requests to prevent indavertent exposure &lt;br&gt;
✅&amp;nbsp; SOC2, ISO, HIPAA, GDPR Compliances - for best security practices &lt;br&gt;
✅&amp;nbsp; Professional Support - along with feature prioritization &lt;br&gt;

[Schedule a call to discuss enterprise deployments](https://portkey.sh/demo-13)

&lt;br&gt;


## Contributing

The easiest way to contribute is to pick an issue with the `good first issue` tag 💪. Read the contribution guidelines [here](/.github/CONTRIBUTING.md).

Bug Report? [File here](https://portkey.wiki/gh-78) | Feature Request? [File here](https://portkey.wiki/gh-78)


### Getting Started with the Community
Join our weekly AI Engineering Hours every Friday (8 AM PT) to:
- Meet other contributors and community members
- Learn advanced Gateway features and implementation patterns
- Share your experiences and get help
- Stay updated with the latest development priorities

[Join the next session →](https://portkey.wiki/gh-101) |

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[firebase/genkit]]></title>
            <link>https://github.com/firebase/genkit</link>
            <guid>https://github.com/firebase/genkit</guid>
            <pubDate>Tue, 16 Sep 2025 00:05:09 GMT</pubDate>
            <description><![CDATA[Open-source framework for building AI-powered apps in JavaScript, Go, and Python, built and used in production by Google]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/firebase/genkit">firebase/genkit</a></h1>
            <p>Open-source framework for building AI-powered apps in JavaScript, Go, and Python, built and used in production by Google</p>
            <p>Language: TypeScript</p>
            <p>Stars: 3,561</p>
            <p>Forks: 412</p>
            <p>Stars today: 203 stars today</p>
            <h2>README</h2><pre>![Genkit logo](docs/resources/genkit-logo-dark.png#gh-dark-mode-only &#039;Genkit&#039;)
![Genkit logo](docs/resources/genkit-logo.png#gh-light-mode-only &#039;Genkit&#039;)

[Genkit](https://genkit.dev) is an open-source framework for building full-stack AI-powered applications, built and used in production by Google&#039;s Firebase. It provides SDKs for multiple programming languages with varying levels of stability:

- **JavaScript/TypeScript**: Production-ready with full feature support
- **Go**: Production-ready with full feature support
- **Python (Alpha)**: Early development with core functionality

It offers a unified interface for integrating AI models from providers like [Google](https://genkit.dev/docs/plugins/google-genai), [OpenAI](https://genkit.dev/docs/plugins/openai), [Anthropic](https://thefireco.github.io/genkit-plugins/docs/plugins/genkitx-anthropic), [Ollama](https://genkit.dev/docs/plugins/ollama/), and more. Rapidly build and deploy production-ready chatbots, automations, and recommendation systems using streamlined APIs for multimodal content, structured outputs, tool calling, and agentic workflows.

Get started with just a few lines of code:

```ts
import { genkit } from &#039;genkit&#039;;
import { googleAI } from &#039;@genkit-ai/google-genai&#039;;

const ai = genkit({ plugins: [googleAI()] });

const { text } = await ai.generate({
    model: googleAI.model(&#039;gemini-2.5-flash&#039;),
    prompt: &#039;Why is Firebase awesome?&#039;
});
```

## Explore &amp; build with Genkit

Play with AI sample apps, with visualizations of the Genkit code that powers
them, at no cost to you.

[Explore Genkit by Example](https://examples.genkit.dev)

## Key capabilities

&lt;table&gt;
  &lt;tr&gt;
    &lt;td&gt;&lt;strong&gt;Broad AI model support&lt;/strong&gt;&lt;/td&gt;
    &lt;td&gt;Use a unified interface to integrate with hundreds of models from providers like &lt;a href=&quot;https://genkit.dev/docs/plugins/google-genai&quot;&gt;Google&lt;/a&gt;, &lt;a href=&quot;https://genkit.dev/docs/plugins/openai&quot;&gt;
    OpenAI&lt;/a&gt;, &lt;a href=&quot;https://thefireco.github.io/genkit-plugins/docs/plugins/genkitx-anthropic&quot;&gt;
    Anthropic&lt;/a&gt;, &lt;a href=&quot;https://genkit.dev/docs/plugins/ollama&quot;&gt;Ollama&lt;/a&gt;, and more. Explore, compare, and use the best models for your needs.&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;&lt;strong&gt;Simplified AI development&lt;/strong&gt;&lt;/td&gt;
    &lt;td&gt;Use streamlined APIs to build AI features with &lt;a href=&quot;https://genkit.dev/docs/models#structured-output&quot;&gt;
    structured output&lt;/a&gt;, &lt;a href=&quot;https://genkit.dev/docs/tool-calling&quot;&gt;agentic tool calling&lt;/a&gt;, &lt;a href=&quot;https://genkit.dev/docs/rag&quot;&gt;context-aware generation&lt;/a&gt;, &lt;a href=&quot;https://genkit.dev/docs/models#multimodal&quot;&gt;multi-modal input/output&lt;/a&gt;, and more. Genkit handles the complexity of AI development, so you can build and iterate faster.&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;&lt;strong&gt;Web and mobile ready&lt;/strong&gt;&lt;/td&gt;
    &lt;td&gt;Integrate seamlessly with frameworks and platforms including Next.js, React, Angular, iOS, Android, using purpose-built &lt;a href=&quot;https://genkit.dev/docs/firebase&quot;&gt;client SDKs&lt;/a&gt; and helpers.&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;&lt;strong&gt;Cross-language support&lt;/strong&gt;&lt;/td&gt;
    &lt;td&gt;Build with the language that best fits your project. Genkit provides SDKs for JavaScript/TypeScript, Go, and Python (Alpha) with consistent APIs and capabilities across all supported languages.&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;&lt;strong&gt;Deploy anywhere&lt;/strong&gt;&lt;/td&gt;
    &lt;td&gt;Deploy AI logic to any environment that supports your chosen programming language, such as &lt;a href=&quot;https://genkit.dev/docs/firebase&quot;&gt;Cloud Functions for Firebase&lt;/a&gt;,
    &lt;a href=&quot;https://genkit.dev/docs/cloud-run&quot;&gt;Google Cloud Run&lt;/a&gt;, or &lt;a href=&quot;https://genkit.dev/docs/deploy-node&quot;&gt;third-party platforms&lt;/a&gt;,
    with or without Google services.&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;&lt;strong&gt;Developer tools&lt;/strong&gt;&lt;/td&gt;
    &lt;td&gt;Accelerate AI development with a purpose-built, local &lt;a href=&quot;https://genkit.dev/docs/devtools&quot;&gt;CLI and Developer UI&lt;/a&gt;. Test prompts and
    flows against individual inputs or datasets, compare outputs from different models, debug with detailed execution traces, and use immediate visual feedback to iterate rapidly on prompts.&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;&lt;strong&gt;Production monitoring&lt;/strong&gt;&lt;/td&gt;
    &lt;td&gt;Ship AI features with confidence using comprehensive production monitoring. Track model performance, and request volumes, latency, and error rates in a &lt;a href=&quot;https://genkit.dev/docs/observability/getting-started&quot;&gt; purpose-built dashboard&lt;/a&gt;. Identify issues quickly with detailed observability metrics, and ensure your AI features meet quality and performance targets in real-world usage.&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

## How does it work?

Genkit simplifies AI integration with an open-source SDK and unified APIs that
work across various model providers and programming languages. It abstracts away complexity so you can focus on delivering great user experiences.

Some key features offered by Genkit include:

* [Text and image generation](https://genkit.dev/docs/models)
* [Type-safe, structured data generation](https://genkit.dev/docs/models#structured-output)
* [Tool calling](https://genkit.dev/docs/tool-calling)
* [Prompt templating](https://genkit.dev/docs/dotprompt)
* [Persisted chat interfaces](https://genkit.dev/docs/chat)
* [AI workflows](https://genkit.dev/docs/flows)
* [AI-powered data retrieval (RAG)](https://genkit.dev/docs/rag)

Genkit is designed for server-side deployment in multiple language environments, and also provides seamless client-side integration through dedicated helpers and [client SDKs](https://genkit.dev/docs/firebase).

## Implementation path

&lt;table&gt;
&lt;tr&gt;
  &lt;td&gt;&lt;span&gt;1&lt;/span&gt;&lt;/td&gt;
  &lt;td&gt;Choose your language and model provider&lt;/td&gt;
  &lt;td&gt;Select the Genkit SDK for your preferred language (JavaScript/TypeScript, Go, or Python (Alpha)). Choose a model provider like &lt;a href=&quot;https://genkit.dev/docs/plugins/google-genai&quot;&gt;Google Gemini&lt;/a&gt; or Anthropic, and get an API key. Some providers, like &lt;a href=&quot;https://genkit.dev/docs/plugins/vertex-ai&quot;&gt;Vertex AI&lt;/a&gt;, may rely on a different means of authentication.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td&gt;&lt;span&gt;2&lt;/span&gt;&lt;/td&gt;
  &lt;td&gt;Install the SDK and initialize&lt;/td&gt;
  &lt;td&gt;Install the Genkit SDK, model-provider package of your choice, and the Genkit CLI. Import the Genkit and provider packages and initialize Genkit with the provider API key.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td&gt;&lt;span&gt;3&lt;/span&gt;&lt;/td&gt;
  &lt;td&gt;Write and test AI features&lt;/td&gt;
  &lt;td&gt;Use the Genkit SDK to build AI features for your use case, from basic text generation to complex multi-step workflows and agents. Use the CLI and Developer UI to help you rapidly test and iterate.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td&gt;&lt;span&gt;4&lt;/span&gt;&lt;/td&gt;
  &lt;td&gt;Deploy and monitor&lt;/td&gt;
  &lt;td&gt;Deploy your AI features to Firebase, Google Cloud Run, or any environment that supports your chosen programming language. Integrate them into your app, and monitor them in production in the Firebase console.&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

## Get started

- [JavaScript/TypeScript quickstart](https://genkit.dev/docs/get-started)
- [Go quickstart](https://genkit.dev/go/docs/get-started-go)
- [Python quickstart](https://genkit.dev/python/docs/get-started/) (Alpha)

## Development tools

Genkit provides a CLI and a local UI to streamline your AI development workflow.

### CLI

The Genkit CLI includes commands for running and evaluating your Genkit functions (flows) and collecting telemetry and logs.

- **Install:** `npm install -g genkit-cli`
- **Run a command, wrapped with telemetry, a interactive developer UI, etc:** `genkit start -- &lt;command to run your code&gt;`

### Developer UI

The Genkit developer UI is a local interface for testing, debugging, and iterating on your AI application.

Key features:

- **Run:** Execute and experiment with Genkit flows, prompts, queries, and more in dedicated playgrounds.
- **Inspect:** Analyze detailed traces of past executions, including step-by-step breakdowns of complex flows.
- **Evaluate:** Review the results of evaluations run against your flows, including performance metrics and links to relevant traces.

&lt;img src=&quot;docs/resources/readme-ui-traces-screenshot.png&quot; width=&quot;700&quot; alt=&quot;Screenshot of Genkit Developer UI showing traces&quot;&gt;

## Try Genkit in Firebase Studio

Want to skip the local setup? Click below to try out Genkit using [Firebase Studio](https://firebase.studio), Google&#039;s AI-assisted workspace for full-stack app development in the cloud.

&lt;a href=&quot;https://studio.firebase.google.com/new/genkit&quot;&gt;
  &lt;img
    height=&quot;32&quot;
    alt=&quot;Open in Firebase Studio&quot;
    src=&quot;https://cdn.firebasestudio.dev/btn/open_bright_32.svg&quot;&gt;
&lt;/a&gt;

## Connect with us

- [**Join us on Discord**](https://discord.gg/qXt5zzQKpc) – Get help, share
ideas, and chat with other developers.
- [**Contribute on GitHub**](https://github.com/firebase/genkit/issues) – Report
bugs, suggest features, or explore the source code.
- [**Contribute to Documentation and Samples**](https://github.com/genkit-ai/) – Report
issues in Genkit&#039;s [documentation](https://github.com/genkit-ai/docsite), or contribute to the [samples](https://github.com/genkit-ai/samples).

## Contributing

Contributions to Genkit are welcome and highly appreciated! See our [Contribution Guide](CONTRIBUTING.md) to get started.

## Authors

Genkit is built by [Firebase](https://firebase.google.com/) with contributions from the [Open Source Community](https://github.com/firebase/genkit/graphs/contributors).
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[blakeblackshear/frigate]]></title>
            <link>https://github.com/blakeblackshear/frigate</link>
            <guid>https://github.com/blakeblackshear/frigate</guid>
            <pubDate>Tue, 16 Sep 2025 00:05:08 GMT</pubDate>
            <description><![CDATA[NVR with realtime local object detection for IP cameras]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/blakeblackshear/frigate">blakeblackshear/frigate</a></h1>
            <p>NVR with realtime local object detection for IP cameras</p>
            <p>Language: TypeScript</p>
            <p>Stars: 25,950</p>
            <p>Forks: 2,390</p>
            <p>Stars today: 14 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;img align=&quot;center&quot; alt=&quot;logo&quot; src=&quot;docs/static/img/frigate.png&quot;&gt;
&lt;/p&gt;

# Frigate - NVR With Realtime Object Detection for IP Cameras

&lt;a href=&quot;https://hosted.weblate.org/engage/frigate-nvr/&quot;&gt;
&lt;img src=&quot;https://hosted.weblate.org/widget/frigate-nvr/language-badge.svg&quot; alt=&quot;Translation status&quot; /&gt;
&lt;/a&gt;

\[English\] | [简体中文](https://github.com/blakeblackshear/frigate/blob/dev/README_CN.md)

A complete and local NVR designed for [Home Assistant](https://www.home-assistant.io) with AI object detection. Uses OpenCV and Tensorflow to perform realtime object detection locally for IP cameras.

Use of a GPU or AI accelerator such as a [Google Coral](https://coral.ai/products/) or [Hailo](https://hailo.ai/) is highly recommended. AI accelerators will outperform even the best CPUs with very little overhead.

- Tight integration with Home Assistant via a [custom component](https://github.com/blakeblackshear/frigate-hass-integration)
- Designed to minimize resource use and maximize performance by only looking for objects when and where it is necessary
- Leverages multiprocessing heavily with an emphasis on realtime over processing every frame
- Uses a very low overhead motion detection to determine where to run object detection
- Object detection with TensorFlow runs in separate processes for maximum FPS
- Communicates over MQTT for easy integration into other systems
- Records video with retention settings based on detected objects
- 24/7 recording
- Re-streaming via RTSP to reduce the number of connections to your camera
- WebRTC &amp; MSE support for low-latency live view

## Documentation

View the documentation at https://docs.frigate.video

## Donations

If you would like to make a donation to support development, please use [Github Sponsors](https://github.com/sponsors/blakeblackshear).

## Screenshots

### Live dashboard

&lt;div&gt;
&lt;img width=&quot;800&quot; alt=&quot;Live dashboard&quot; src=&quot;https://github.com/blakeblackshear/frigate/assets/569905/5e713cb9-9db5-41dc-947a-6937c3bc376e&quot;&gt;
&lt;/div&gt;

### Streamlined review workflow

&lt;div&gt;
&lt;img width=&quot;800&quot; alt=&quot;Streamlined review workflow&quot; src=&quot;https://github.com/blakeblackshear/frigate/assets/569905/6fed96e8-3b18-40e5-9ddc-31e6f3c9f2ff&quot;&gt;
&lt;/div&gt;

### Multi-camera scrubbing

&lt;div&gt;
&lt;img width=&quot;800&quot; alt=&quot;Multi-camera scrubbing&quot; src=&quot;https://github.com/blakeblackshear/frigate/assets/569905/d6788a15-0eeb-4427-a8d4-80b93cae3d74&quot;&gt;
&lt;/div&gt;

### Built-in mask and zone editor

&lt;div&gt;
&lt;img width=&quot;800&quot; alt=&quot;Multi-camera scrubbing&quot; src=&quot;https://github.com/blakeblackshear/frigate/assets/569905/d7885fc3-bfe6-452f-b7d0-d957cb3e31f5&quot;&gt;
&lt;/div&gt;

## Translations

We use [Weblate](https://hosted.weblate.org/projects/frigate-nvr/) to support language translations. Contributions are always welcome.

&lt;a href=&quot;https://hosted.weblate.org/engage/frigate-nvr/&quot;&gt;
&lt;img src=&quot;https://hosted.weblate.org/widget/frigate-nvr/multi-auto.svg&quot; alt=&quot;Translation status&quot; /&gt;
&lt;/a&gt;
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[MotiaDev/motia]]></title>
            <link>https://github.com/MotiaDev/motia</link>
            <guid>https://github.com/MotiaDev/motia</guid>
            <pubDate>Tue, 16 Sep 2025 00:05:07 GMT</pubDate>
            <description><![CDATA[Modern Backend Framework that unifies APIs, background jobs, workflows, and AI Agents into a single core primitive with built-in observability and state management.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/MotiaDev/motia">MotiaDev/motia</a></h1>
            <p>Modern Backend Framework that unifies APIs, background jobs, workflows, and AI Agents into a single core primitive with built-in observability and state management.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 8,402</p>
            <p>Forks: 627</p>
            <p>Stars today: 42 stars today</p>
            <h2>README</h2><pre>&lt;a href=&quot;https://motia.dev&quot;&gt;
  &lt;img src=&quot;assets/github-readme-banner.png&quot; alt=&quot;Motia Banner&quot; width=&quot;100%&quot;&gt;
&lt;/a&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://trendshift.io/repositories/14032&quot; style=&quot;margin-right:8px;&quot;&gt;
    &lt;img src=&quot;https://trendshift.io/api/badge/repositories/14032&quot; alt=&quot;Motia&quot; style=&quot;width: 250px; height: 55px; margin-right:8px;&quot; width=&quot;250&quot; height=&quot;55&quot;/&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://vercel.com/blog/summer-2025-oss-program#motia&quot; target=&quot;_blank&quot; style=&quot;margin-left:8px;&quot;&gt;
    &lt;img alt=&quot;Vercel OSS Program&quot; src=&quot;https://vercel.com/oss/program-badge.svg&quot; style=&quot;width: 250px; height: 55px; margin-left:8px;&quot; width=&quot;250&quot; height=&quot;55&quot;/&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;strong&gt;🔥 The Unified Backend Framework That Eliminates Runtime Fragmentation 🔥&lt;/strong&gt;
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;em&gt;APIs, background jobs, workflows, and AI agents in one system. JavaScript, TypeScript, Python, and more in one codebase.&lt;/em&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.npmjs.com/package/motia&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/npm/v/motia?style=flat&amp;logo=npm&amp;logoColor=white&amp;color=CB3837&amp;labelColor=000000&quot; alt=&quot;npm version&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/MotiaDev/motia/blob/main/LICENSE&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/license-MIT-green?style=flat&amp;logo=opensourceinitiative&amp;logoColor=white&amp;labelColor=000000&quot; alt=&quot;license&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/MotiaDev/motia&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/stars/MotiaDev/motia?style=flat&amp;logo=github&amp;logoColor=white&amp;color=yellow&amp;labelColor=000000&quot; alt=&quot;GitHub stars&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://twitter.com/motiadev&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/Follow-@motiadev-1DA1F2?style=flat&amp;logo=twitter&amp;logoColor=white&amp;labelColor=000000&quot; alt=&quot;Twitter Follow&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://discord.gg/motia&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/discord/1322278831184281721?style=flat&amp;logo=discord&amp;logoColor=white&amp;color=5865F2&amp;label=Discord&amp;labelColor=000000&quot; alt=&quot;Discord&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.motia.dev/manifesto&quot;&gt;💡 Motia Manifesto&lt;/a&gt; •
  &lt;a href=&quot;https://www.motia.dev/docs/getting-started/quick-start&quot;&gt;🚀 Quick Start&lt;/a&gt; •
  &lt;a href=&quot;https://www.motia.dev/docs/concepts/steps/defining-steps&quot;&gt;📋 Defining Steps&lt;/a&gt; •
  &lt;a href=&quot;https://www.motia.dev/docs&quot;&gt;📚 Docs&lt;/a&gt;
&lt;/p&gt;

---

## 🎯 What is Motia?

**Motia solves backend fragmentation.** 

Modern software engineering is disjointed – APIs live in one framework, background jobs in another, queues have their own tooling, and AI agents are springing up in yet more isolated runtimes. **This fragmentation demands a unified system.**

Motia unifies APIs, background jobs, workflows, and AI agents into a **single coherent system** with shared observability and developer experience. Similar to how React simplified frontend development, where everything is a component, **Motia simplifies backend development, where everything is a Step**.

Write **JavaScript, TypeScript, Python, and more** in the same workflow. **What used to take 5 frameworks to build now comes out of the box with Motia.**

[![Motia combines APIs, background queues, and AI agents into one system](assets/github-readme-banner.gif)](https://motia.dev)

## 💻 Remix your own Motia App in Replit
[![Open in Replit](https://img.shields.io/badge/Open%20in-Replit-blue?logo=replit&amp;style=for-the-badge)](https://replit.com/@motiadev/motia)

## 🚀 Quickstart

Get Motia project up and running in **under 60 seconds**:

### 1. Bootstrap a New Motia Project

```bash
npx motia@latest create   # runs the interactive terminal
```

Follow the prompts to pick a template, project name, and language.
![motia-terminal](assets/motia-terminal.gif)

### 2. Start the Workbench

Inside your new project folder, launch the dev server:

```bash
npx motia dev # ➜ http://localhost:3000
```

**That&#039;s it!** You have:
- ✅ REST APIs with validation
- ✅ Visual debugger &amp; tracing  
- ✅ Multi-language support
- ✅ Event-driven architecture
- ✅ Zero configuration

![new-workbench](assets/new-workbench.png)

&gt; 📖 **[Full tutorial in our docs →](https://motia.dev/docs/getting-started/quick-start)**

## 🎯 Step Types

| Type | Trigger | Use Case |
|------|---------|----------|
| **`api`** | HTTP Request | REST endpoints |
| **`event`** | Topic subscription | Background processing |  
| **`cron`** | Schedule | Recurring jobs |
| **`noop`** | Manual | External processes |

&gt; 📖 **[Learn more about Steps →](https://motia.dev/docs/concepts/steps)**

---

## 🎯 Examples

### 🏆 **[ChessArena.ai](https://chessarena.ai)** - Full-Featured Production App

A complete chess platform benchmarking LLM performance with real-time evaluation.

**[Live Website →](https://chessarena.ai)** | **[Source Code →](https://github.com/MotiaDev/chessarena-ai)**

&gt; ![ChessArena.ai in action (raw GIF)](https://github.com/MotiaDev/chessarena-ai/blob/main/public/images/chessarena.gif?raw=true)

**Built from scratch to production deployment, featuring:**
- 🔐 **Authentication &amp; user management**
- 🤖 **Multi-agent LLM evaluation** (OpenAI, Claude, Gemini, Grok)
- 🐍 **Python engine integration** (Stockfish chess evaluation)
- 📊 **Real-time streaming** with live move updates and scoring
- 🎨 **Modern React UI** with interactive chess boards
- 🔄 **Event-driven workflows** connecting TypeScript APIs to Python processors
- 📈 **Live leaderboards** with move-by-move quality scoring
- 🚀 **Production deployment** on Motia Cloud

### 📚 **More Examples**

**[View all 20+ examples →](https://github.com/MotiaDev/motia-examples)**

| Example | Description |
|---------|-------------|
| **[AI Research Agent](https://github.com/MotiaDev/motia-examples/tree/main/examples/ai-deep-research-agent)** | Web research with iterative analysis |
| **[Streaming Chatbot](https://github.com/MotiaDev/motia-examples/tree/main/examples/streaming-ai-chatbot)** | Real-time AI responses |
| **[Gmail Automation](https://github.com/MotiaDev/motia-examples/tree/main/examples/gmail-workflow)** | Smart email processing |
| **[GitHub PR Manager](https://github.com/MotiaDev/motia-examples/tree/main/examples/github-integration-workflow)** | Automated PR workflows |
| **[Finance Agent](https://github.com/MotiaDev/motia-examples/tree/main/examples/finance-agent)** | Real-time market analysis |

**Features demonstrated:** Multi-language workflows • Real-time streaming • AI integration • Production deployment

---

## 🌐 Language Support

| Language | Status | 
|----------|--------|
| **JavaScript** | ✅ Stable |
| **TypeScript** | ✅ Stable |
| **Python** | ✅ Stable |
| **Ruby** | 🚧 Beta |
| **Go** | 🔄 Soon |

## 📚 Resources

- **[📖 Documentation](https://motia.dev/docs)** - Complete guides and API reference
- **[💬 Discord](https://discord.gg/motia)** - Community support and discussions
- **[🐛 GitHub Issues](https://github.com/MotiaDev/motia/issues)** - Bug reports and feature requests
- **[🗺️ Roadmap](https://github.com/orgs/MotiaDev/projects/2)** - Upcoming features and progress

## 🚧 Roadmap

We have a public roadmap for Motia, you can view it [here](https://github.com/orgs/MotiaDev/projects/2/views/4).

Feel free to add comments to the issues, or create a new issue if you have a feature request.

| Feature | Status | Link | Description |
| ------- | ------ | ---- | ----------- |
| Python Types | Planned | [#485](https://github.com/MotiaDev/motia/issues/485) | Add support for Python types |
| Streams: RBAC | Planned | [#495](https://github.com/MotiaDev/motia/issues/495) | Add support for RBAC |
| Streams: Workbench UI | Planned | [#497](https://github.com/MotiaDev/motia/issues/497) | Add support for Workbench UI |
| Queue Strategies | Planned | [#476](https://github.com/MotiaDev/motia/issues/476) | Add support for Queue Strategies |
| Reactive Steps | Planned | [#477](https://github.com/MotiaDev/motia/issues/477) | Add support for Reactive Steps |
| Point in time triggers | Planned | [#480](https://github.com/MotiaDev/motia/issues/480) | Add support for Point in time triggers |
| Workbench plugins | Planned | [#481](https://github.com/MotiaDev/motia/issues/481) | Add support for Workbench plugins |
| Rewrite our Core in either Go or Rust | Planned | [#482](https://github.com/MotiaDev/motia/issues/482) | Rewrite our Core in either Go or Rust |
| Decrease deployment time | Planned | [#483](https://github.com/MotiaDev/motia/issues/483) | Decrease deployment time |
| Built-in database support | Planned | [#484](https://github.com/MotiaDev/motia/issues/484) | Add support for built-in database |

## 🤝 Contributing

We welcome contributions! Check our **[Contributing Guide](https://github.com/MotiaDev/motia/blob/main/CONTRIBUTING.md)** to get started.

---

&lt;div align=&quot;center&quot;&gt;

**[🚀 Get Started](https://motia.dev)** • **[📖 Docs](https://motia.dev/docs)** • **[💬 Discord](https://discord.gg/motia)**

[![Star History Chart](https://api.star-history.com/svg?repos=motiadev/motia&amp;type=Date)](https://www.star-history.com/#motiadev/motia&amp;Date)

&lt;sub&gt;⭐ **Star us if you find Motia useful!**&lt;/sub&gt;

&lt;/div&gt;
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[czlonkowski/n8n-mcp]]></title>
            <link>https://github.com/czlonkowski/n8n-mcp</link>
            <guid>https://github.com/czlonkowski/n8n-mcp</guid>
            <pubDate>Tue, 16 Sep 2025 00:05:06 GMT</pubDate>
            <description><![CDATA[A MCP for Claude Desktop / Claude Code / Windsurf / Cursor to build n8n workflows for you]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/czlonkowski/n8n-mcp">czlonkowski/n8n-mcp</a></h1>
            <p>A MCP for Claude Desktop / Claude Code / Windsurf / Cursor to build n8n workflows for you</p>
            <p>Language: TypeScript</p>
            <p>Stars: 6,843</p>
            <p>Forks: 1,307</p>
            <p>Stars today: 39 stars today</p>
            <h2>README</h2><pre># n8n-MCP

[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)
[![GitHub stars](https://img.shields.io/github/stars/czlonkowski/n8n-mcp?style=social)](https://github.com/czlonkowski/n8n-mcp)
[![Version](https://img.shields.io/badge/version-2.11.1-blue.svg)](https://github.com/czlonkowski/n8n-mcp)
[![npm version](https://img.shields.io/npm/v/n8n-mcp.svg)](https://www.npmjs.com/package/n8n-mcp)
[![codecov](https://codecov.io/gh/czlonkowski/n8n-mcp/graph/badge.svg?token=YOUR_TOKEN)](https://codecov.io/gh/czlonkowski/n8n-mcp)
[![Tests](https://img.shields.io/badge/tests-1728%20passing-brightgreen.svg)](https://github.com/czlonkowski/n8n-mcp/actions)
[![n8n version](https://img.shields.io/badge/n8n-^1.110.1-orange.svg)](https://github.com/n8n-io/n8n)
[![Docker](https://img.shields.io/badge/docker-ghcr.io%2Fczlonkowski%2Fn8n--mcp-green.svg)](https://github.com/czlonkowski/n8n-mcp/pkgs/container/n8n-mcp)
[![Deploy on Railway](https://railway.com/button.svg)](https://railway.com/deploy/n8n-mcp?referralCode=n8n-mcp)

A Model Context Protocol (MCP) server that provides AI assistants with comprehensive access to n8n node documentation, properties, and operations. Deploy in minutes to give Claude and other AI assistants deep knowledge about n8n&#039;s 525+ workflow automation nodes.

## Overview

n8n-MCP serves as a bridge between n8n&#039;s workflow automation platform and AI models, enabling them to understand and work with n8n nodes effectively. It provides structured access to:

- 📚 **535 n8n nodes** from both n8n-nodes-base and @n8n/n8n-nodes-langchain
- 🔧 **Node properties** - 99% coverage with detailed schemas
- ⚡ **Node operations** - 63.6% coverage of available actions
- 📄 **Documentation** - 90% coverage from official n8n docs (including AI nodes)
- 🤖 **AI tools** - 263 AI-capable nodes detected with full documentation


## ⚠️ Important Safety Warning

**NEVER edit your production workflows directly with AI!** Always:
- 🔄 **Make a copy** of your workflow before using AI tools
- 🧪 **Test in development** environment first
- 💾 **Export backups** of important workflows
- ⚡ **Validate changes** before deploying to production

AI results can be unpredictable. Protect your work!

## 🚀 Quick Start

Get n8n-MCP running in 5 minutes:

[![n8n-mcp Video Quickstart Guide](./thumbnail.png)](https://youtu.be/5CccjiLLyaY?si=Z62SBGlw9G34IQnQ&amp;t=343)

### Option 1: npx (Fastest - No Installation!) 🚀

**Prerequisites:** [Node.js](https://nodejs.org/) installed on your system

```bash
# Run directly with npx (no installation needed!)
npx n8n-mcp
```

Add to Claude Desktop config:

**Basic configuration (documentation tools only):**
```json
{
  &quot;mcpServers&quot;: {
    &quot;n8n-mcp&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;n8n-mcp&quot;],
      &quot;env&quot;: {
        &quot;MCP_MODE&quot;: &quot;stdio&quot;,
        &quot;LOG_LEVEL&quot;: &quot;error&quot;,
        &quot;DISABLE_CONSOLE_OUTPUT&quot;: &quot;true&quot;
      }
    }
  }
}
```

**Full configuration (with n8n management tools):**
```json
{
  &quot;mcpServers&quot;: {
    &quot;n8n-mcp&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;n8n-mcp&quot;],
      &quot;env&quot;: {
        &quot;MCP_MODE&quot;: &quot;stdio&quot;,
        &quot;LOG_LEVEL&quot;: &quot;error&quot;,
        &quot;DISABLE_CONSOLE_OUTPUT&quot;: &quot;true&quot;,
        &quot;N8N_API_URL&quot;: &quot;https://your-n8n-instance.com&quot;,
        &quot;N8N_API_KEY&quot;: &quot;your-api-key&quot;
      }
    }
  }
}
```

&gt; **Note**: npx will download and run the latest version automatically. The package includes a pre-built database with all n8n node information.

**Configuration file locations:**
- **macOS**: `~/Library/Application Support/Claude/claude_desktop_config.json`
- **Windows**: `%APPDATA%\Claude\claude_desktop_config.json`
- **Linux**: `~/.config/Claude/claude_desktop_config.json`

**Restart Claude Desktop after updating configuration** - That&#039;s it! 🎉

### Option 2: Docker (Easy &amp; Isolated) 🐳

**Prerequisites:** Docker installed on your system

&lt;details&gt;
&lt;summary&gt;&lt;strong&gt;📦 Install Docker&lt;/strong&gt; (click to expand)&lt;/summary&gt;

**macOS:**
```bash
# Using Homebrew
brew install --cask docker

# Or download from https://www.docker.com/products/docker-desktop/
```

**Linux (Ubuntu/Debian):**
```bash
# Update package index
sudo apt-get update

# Install Docker
sudo apt-get install docker.io

# Start Docker service
sudo systemctl start docker
sudo systemctl enable docker

# Add your user to docker group (optional, to run without sudo)
sudo usermod -aG docker $USER
# Log out and back in for this to take effect
```

**Windows:**
```bash
# Option 1: Using winget (Windows Package Manager)
winget install Docker.DockerDesktop

# Option 2: Using Chocolatey
choco install docker-desktop

# Option 3: Download installer from https://www.docker.com/products/docker-desktop/
```

**Verify installation:**
```bash
docker --version
```
&lt;/details&gt;

```bash
# Pull the Docker image (~280MB, no n8n dependencies!)
docker pull ghcr.io/czlonkowski/n8n-mcp:latest
```

&gt; **⚡ Ultra-optimized:** Our Docker image is 82% smaller than typical n8n images because it contains NO n8n dependencies - just the runtime MCP server with a pre-built database!

Add to Claude Desktop config:

**Basic configuration (documentation tools only):**
```json
{
  &quot;mcpServers&quot;: {
    &quot;n8n-mcp&quot;: {
      &quot;command&quot;: &quot;docker&quot;,
      &quot;args&quot;: [
        &quot;run&quot;,
        &quot;-i&quot;,
        &quot;--rm&quot;,
        &quot;--init&quot;,
        &quot;-e&quot;, &quot;MCP_MODE=stdio&quot;,
        &quot;-e&quot;, &quot;LOG_LEVEL=error&quot;,
        &quot;-e&quot;, &quot;DISABLE_CONSOLE_OUTPUT=true&quot;,
        &quot;ghcr.io/czlonkowski/n8n-mcp:latest&quot;
      ]
    }
  }
}
```

**Full configuration (with n8n management tools):**
```json
{
  &quot;mcpServers&quot;: {
    &quot;n8n-mcp&quot;: {
      &quot;command&quot;: &quot;docker&quot;,
      &quot;args&quot;: [
        &quot;run&quot;,
        &quot;-i&quot;,
        &quot;--rm&quot;,
        &quot;--init&quot;,
        &quot;-e&quot;, &quot;MCP_MODE=stdio&quot;,
        &quot;-e&quot;, &quot;LOG_LEVEL=error&quot;,
        &quot;-e&quot;, &quot;DISABLE_CONSOLE_OUTPUT=true&quot;,
        &quot;-e&quot;, &quot;N8N_API_URL=https://your-n8n-instance.com&quot;,
        &quot;-e&quot;, &quot;N8N_API_KEY=your-api-key&quot;,
        &quot;ghcr.io/czlonkowski/n8n-mcp:latest&quot;
      ]
    }
  }
}
```

&gt;💡 Tip: If you’re running n8n locally on the same machine (e.g., via Docker), use http://host.docker.internal:5678 as the N8N_API_URL.

&gt; **Note**: The n8n API credentials are optional. Without them, you&#039;ll have access to all documentation and validation tools. With them, you&#039;ll additionally get workflow management capabilities (create, update, execute workflows).

**Important:** The `-i` flag is required for MCP stdio communication.

&gt; 🔧 If you encounter any issues with Docker, check our [Docker Troubleshooting Guide](./docs/DOCKER_TROUBLESHOOTING.md).

**Configuration file locations:**
- **macOS**: `~/Library/Application Support/Claude/claude_desktop_config.json`
- **Windows**: `%APPDATA%\Claude\claude_desktop_config.json`
- **Linux**: `~/.config/Claude/claude_desktop_config.json`

**Restart Claude Desktop after updating configuration** - That&#039;s it! 🎉

## 💖 Support This Project

&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/sponsors/czlonkowski&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/Sponsor-❤️-db61a2?style=for-the-badge&amp;logo=github-sponsors&quot; alt=&quot;Sponsor n8n-mcp&quot; /&gt;
  &lt;/a&gt;
&lt;/div&gt;

**n8n-mcp** started as a personal tool but now helps tens of thousands of developers automate their workflows efficiently. Maintaining and developing this project competes with my paid work.

Your sponsorship helps me:
- 🚀 Dedicate focused time to new features
- 🐛 Respond quickly to issues
- 📚 Keep documentation up-to-date
- 🔄 Ensure compatibility with latest n8n releases

Every sponsorship directly translates to hours invested in making n8n-mcp better for everyone. **[Become a sponsor →](https://github.com/sponsors/czlonkowski)**

---

### Option 3: Local Installation (For Development)

**Prerequisites:** [Node.js](https://nodejs.org/) installed on your system

```bash
# 1. Clone and setup
git clone https://github.com/czlonkowski/n8n-mcp.git
cd n8n-mcp
npm install
npm run build
npm run rebuild

# 2. Test it works
npm start
```

Add to Claude Desktop config:

**Basic configuration (documentation tools only):**
```json
{
  &quot;mcpServers&quot;: {
    &quot;n8n-mcp&quot;: {
      &quot;command&quot;: &quot;node&quot;,
      &quot;args&quot;: [&quot;/absolute/path/to/n8n-mcp/dist/mcp/index.js&quot;],
      &quot;env&quot;: {
        &quot;MCP_MODE&quot;: &quot;stdio&quot;,
        &quot;LOG_LEVEL&quot;: &quot;error&quot;,
        &quot;DISABLE_CONSOLE_OUTPUT&quot;: &quot;true&quot;
      }
    }
  }
}
```

**Full configuration (with n8n management tools):**
```json
{
  &quot;mcpServers&quot;: {
    &quot;n8n-mcp&quot;: {
      &quot;command&quot;: &quot;node&quot;,
      &quot;args&quot;: [&quot;/absolute/path/to/n8n-mcp/dist/mcp/index.js&quot;],
      &quot;env&quot;: {
        &quot;MCP_MODE&quot;: &quot;stdio&quot;,
        &quot;LOG_LEVEL&quot;: &quot;error&quot;,
        &quot;DISABLE_CONSOLE_OUTPUT&quot;: &quot;true&quot;,
        &quot;N8N_API_URL&quot;: &quot;https://your-n8n-instance.com&quot;,
        &quot;N8N_API_KEY&quot;: &quot;your-api-key&quot;
      }
    }
  }
}
```

&gt; **Note**: The n8n API credentials can be configured either in a `.env` file (create from `.env.example`) or directly in the Claude config as shown above.

&gt; 💡 Tip: If you’re running n8n locally on the same machine (e.g., via Docker), use http://host.docker.internal:5678 as the N8N_API_URL.

### Option 4: Railway Cloud Deployment (One-Click Deploy) ☁️

**Prerequisites:** Railway account (free tier available)

Deploy n8n-MCP to Railway&#039;s cloud platform with zero configuration:

[![Deploy on Railway](https://railway.com/button.svg)](https://railway.com/deploy/n8n-mcp?referralCode=n8n-mcp)

**Benefits:**
- ☁️ **Instant cloud hosting** - No server setup required
- 🔒 **Secure by default** - HTTPS included, auth token warnings
- 🌐 **Global access** - Connect from any Claude Desktop
- ⚡ **Auto-scaling** - Railway handles the infrastructure
- 📊 **Built-in monitoring** - Logs and metrics included

**Quick Setup:**
1. Click the &quot;Deploy on Railway&quot; button above
2. Sign in to Railway (or create a free account)
3. Configure your deployment (project name, region)
4. Click &quot;Deploy&quot; and wait ~2-3 minutes
5. Copy your deployment URL and auth token
6. Add to Claude Desktop config using the HTTPS URL

&gt; 📚 **For detailed setup instructions, troubleshooting, and configuration examples, see our [Railway Deployment Guide](./docs/RAILWAY_DEPLOYMENT.md)**

**Configuration file locations:**
- **macOS**: `~/Library/Application Support/Claude/claude_desktop_config.json`
- **Windows**: `%APPDATA%\Claude\claude_desktop_config.json`
- **Linux**: `~/.config/Claude/claude_desktop_config.json`

**Restart Claude Desktop after updating configuration** - That&#039;s it! 🎉

## 🔧 n8n Integration

Want to use n8n-MCP with your n8n instance? Check out our comprehensive [n8n Deployment Guide](./docs/N8N_DEPLOYMENT.md) for:
- Local testing with the MCP Client Tool node
- Production deployment with Docker Compose
- Cloud deployment on Hetzner, AWS, and other providers
- Troubleshooting and security best practices

## 💻 Connect your IDE

n8n-MCP works with multiple AI-powered IDEs and tools. Choose your preferred development environment:

### [Claude Code](./docs/CLAUDE_CODE_SETUP.md)
Quick setup for Claude Code CLI - just type &quot;add this mcp server&quot; and paste the config.

### [Visual Studio Code](./docs/VS_CODE_PROJECT_SETUP.md)
Full setup guide for VS Code with GitHub Copilot integration and MCP support.

### [Cursor](./docs/CURSOR_SETUP.md)
Step-by-step tutorial for connecting n8n-MCP to Cursor IDE with custom rules.

### [Windsurf](./docs/WINDSURF_SETUP.md)
Complete guide for integrating n8n-MCP with Windsurf using project rules.

## 🤖 Claude Project Setup

For the best results when using n8n-MCP with Claude Projects, use these enhanced system instructions:

```markdown
You are an expert in n8n automation software using n8n-MCP tools. Your role is to design, build, and validate n8n workflows with maximum accuracy and efficiency.

## Core Workflow Process

1. **ALWAYS start new conversation with**: `tools_documentation()` to understand best practices and available tools.

2. **Template Discovery Phase** 
   - `search_templates_by_metadata({complexity: &quot;simple&quot;})` - Find skill-appropriate templates
   - `get_templates_for_task(&#039;webhook_processing&#039;)` - Get curated templates by task
   - `search_templates(&#039;slack notification&#039;)` - Text search for specific needs
   - `list_node_templates([&#039;n8n-nodes-base.slack&#039;])` - Find templates using specific nodes
   
   **Template filtering strategies**:
   - **For beginners**: `complexity: &quot;simple&quot;` and `maxSetupMinutes: 30`
   - **By role**: `targetAudience: &quot;marketers&quot;` or `&quot;developers&quot;` or `&quot;analysts&quot;`
   - **By time**: `maxSetupMinutes: 15` for quick wins
   - **By service**: `requiredService: &quot;openai&quot;` to find compatible templates

3. **Discovery Phase** - Find the right nodes (if no suitable template):
   - Think deeply about user request and the logic you are going to build to fulfill it. Ask follow-up questions to clarify the user&#039;s intent, if something is unclear. Then, proceed with the rest of your instructions.
   - `search_nodes({query: &#039;keyword&#039;})` - Search by functionality
   - `list_nodes({category: &#039;trigger&#039;})` - Browse by category
   - `list_ai_tools()` - See AI-capable nodes (remember: ANY node can be an AI tool!)

4. **Configuration Phase** - Get node details efficiently:
   - `get_node_essentials(nodeType)` - Start here! Only 10-20 essential properties
   - `search_node_properties(nodeType, &#039;auth&#039;)` - Find specific properties
   - `get_node_for_task(&#039;send_email&#039;)` - Get pre-configured templates
   - `get_node_documentation(nodeType)` - Human-readable docs when needed
   - It is good common practice to show a visual representation of the workflow architecture to the user and asking for opinion, before moving forward. 

5. **Pre-Validation Phase** - Validate BEFORE building:
   - `validate_node_minimal(nodeType, config)` - Quick required fields check
   - `validate_node_operation(nodeType, config, profile)` - Full operation-aware validation
   - Fix any validation errors before proceeding

6. **Building Phase** - Create or customize the workflow:
   - If using template: `get_template(templateId, {mode: &quot;full&quot;})`
   - **MANDATORY ATTRIBUTION**: When using a template, ALWAYS inform the user:
     - &quot;This workflow is based on a template by **[author.name]** (@[author.username])&quot;
     - &quot;View the original template at: [url]&quot;
     - Example: &quot;This workflow is based on a template by **David Ashby** (@cfomodz). View the original at: https://n8n.io/workflows/2414&quot;
   - Customize template or build from validated configurations
   - Connect nodes with proper structure
   - Add error handling where appropriate
   - Use expressions like $json, $node[&quot;NodeName&quot;].json
   - Build the workflow in an artifact for easy editing downstream (unless the user asked to create in n8n instance)

7. **Workflow Validation Phase** - Validate complete workflow:
   - `validate_workflow(workflow)` - Complete validation including connections
   - `validate_workflow_connections(workflow)` - Check structure and AI tool connections
   - `validate_workflow_expressions(workflow)` - Validate all n8n expressions
   - Fix any issues found before deployment

8. **Deployment Phase** (if n8n API configured):
   - `n8n_create_workflow(workflow)` - Deploy validated workflow
   - `n8n_validate_workflow({id: &#039;workflow-id&#039;})` - Post-deployment validation
   - `n8n_update_partial_workflow()` - Make incremental updates using diffs
   - `n8n_trigger_webhook_workflow()` - Test webhook workflows

## Key Insights

- **TEMPLATES FIRST** - Always check for existing templates before building from scratch (2,500+ available!)
- **ATTRIBUTION REQUIRED** - Always credit template authors with name, username, and link to n8n.io
- **SMART FILTERING** - Use metadata filters to find templates matching user skill level and time constraints
- **USE CODE NODE ONLY WHEN IT IS NECESSARY** - always prefer to use standard nodes over code node. Use code node only when you are sure you need it.
- **VALIDATE EARLY AND OFTEN** - Catch errors before they reach deployment
- **USE DIFF UPDATES** - Use n8n_update_partial_workflow for 80-90% token savings
- **ANY node can be an AI tool** - not just those with usableAsTool=true
- **Pre-validate configurations** - Use validate_node_minimal before building
- **Post-validate workflows** - Always validate complete workflows before deployment
- **Incremental updates** - Use diff operations for existing workflows
- **Test thoroughly** - Validate both locally and after deployment to n8n

## Validation Strategy

### Before Building:
1. validate_node_minimal() - Check required fields
2. validate_node_operation() - Full configuration validation
3. Fix all errors before proceeding

### After Building:
1. validate_workflow() - Complete workflow validation
2. validate_workflow_connections() - Structure validation
3. validate_workflow_expressions() - Expression syntax check

### After Deployment:
1. n8n_validate_workflow({id}) - Validate deployed workflow
2. n8n_list_executions() - Monitor execution status
3. n8n_update_partial_workflow() - Fix issues using diffs

## Response Structure

1. **Discovery**: Show available nodes and options
2. **Pre-Validation**: Validate node configurations first
3. **Configuration**: Show only validated, working configs
4. **Building**: Construct workflow with validated components
5. **Workflow Validation**: Full workflow validation results
6. **Deployment**: Deploy only after all validations pass
7. **Post-Validation**: Verify deployment succeeded

## Example Workflow

### Smart Template-First Approach

#### 1. Find existing templates
// Find simple Slack templates for marketers
const templates = search_templates_by_metadata({
  requiredService: &#039;slack&#039;,
  complexity: &#039;simple&#039;,
  targetAudience: &#039;marketers&#039;,
  maxSetupMinutes: 30
})

// Or search by text
search_templates(&#039;slack notification&#039;)

// Or get curated templates
get_templates_for_task(&#039;slack_integration&#039;)

#### 2. Use and customize template
const workflow = get_template(templates.items[0].id, {mode: &#039;full&#039;})
validate_workflow(workflow)

### Building from Scratch (if no suitable template)

#### 1. Discovery &amp; Configuration
search_nodes({query: &#039;slack&#039;})
get_node_essentials(&#039;n8n-nodes-base.slack&#039;)

#### 2. Pre-Validation
validate_node_minimal(&#039;n8n-nodes-base.slack&#039;, {resource:&#039;message&#039;, operation:&#039;send&#039;})
validate_node_operation(&#039;n8n-nodes-base.slack&#039;, fullConfig, &#039;runtime&#039;)

#### 3. Build Workflow
// Create workflow JSON with validated configs

#### 4. Workflow Validation
validate_workflow(workflowJson)
validate_workflow_connections(workflowJson)
validate_workflow_expressions(workflowJson)

#### 5. Deploy (if configured)
n8n_create_workflow(validatedWorkflow)
n8n_validate_workflow({id: createdWorkflowId})

#### 6. Update Using Diffs
n8n_update_partial_workflow({
  workflowId: id,
  operations: [
    {type: &#039;updateNode&#039;, nodeId: &#039;slack1&#039;, changes: {position: [100, 200]}}
  ]
})

## Important Rules

- ALWAYS check for existing templates before building from scratch
- LEVERAGE metadata filters to find skill-appropriate templates
- **ALWAYS ATTRIBUTE TEMPLATES**: When using any template, you MUST share the author&#039;s name, username, and link to the original template on n8n.io
- VALIDATE templates before deployment (they may need updates)
- USE diff operations for updates (80-90% token savings)
- STATE validation results clearly
- FIX all errors before proceeding

## Template Discovery Tips

- **97.5% of templates have metadata** - Use smart filtering!
- **Filter combinations work best** - Combine complexity + setup time + service
- **Templates save 70-90% development time** - Always check first
- **Metadata is AI-generated** - Occasionally imprecise but highly useful
- **Use `includeMetadata: false` for fast browsing** - Add metadata only when needed
```

Save these instructions in your Claude Project for optimal n8n workflow assistance with intelligent template discovery.

## 🚨 Important: Sharing Guidelines

This project is MIT licensed and free for everyone to use. However:

- **✅ DO**: Share this repository freely with proper attribution
- **✅ DO**: Include a direct link to https://github.com/czlonkowski/n8n-mcp in your fi

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[LukeGus/Termix]]></title>
            <link>https://github.com/LukeGus/Termix</link>
            <guid>https://github.com/LukeGus/Termix</guid>
            <pubDate>Tue, 16 Sep 2025 00:05:05 GMT</pubDate>
            <description><![CDATA[Termix is a web-based server management platform with SSH terminal, tunneling, and file editing capabilities.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/LukeGus/Termix">LukeGus/Termix</a></h1>
            <p>Termix is a web-based server management platform with SSH terminal, tunneling, and file editing capabilities.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 3,946</p>
            <p>Forks: 145</p>
            <p>Stars today: 120 stars today</p>
            <h2>README</h2><pre># Repo Stats

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;https://flagcdn.com/us.svg&quot; alt=&quot;English&quot; width=&quot;24&quot; height=&quot;16&quot;&gt; English | 
  &lt;a href=&quot;README-CN.md&quot;&gt;&lt;img src=&quot;https://flagcdn.com/cn.svg&quot; alt=&quot;中文&quot; width=&quot;24&quot; height=&quot;16&quot;&gt; 中文&lt;/a&gt;
&lt;/p&gt;

![GitHub Repo stars](https://img.shields.io/github/stars/LukeGus/Termix?style=flat&amp;label=Stars)
![GitHub forks](https://img.shields.io/github/forks/LukeGus/Termix?style=flat&amp;label=Forks)
![GitHub Release](https://img.shields.io/github/v/release/LukeGus/Termix?style=flat&amp;label=Release)
&lt;a href=&quot;https://discord.gg/jVQGdvHDrf&quot;&gt;&lt;img alt=&quot;Discord&quot; src=&quot;https://img.shields.io/discord/1347374268253470720&quot;&gt;&lt;/a&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;./repo-images/RepoOfTheDay.png&quot; alt=&quot;Repo of the Day Achievement&quot; style=&quot;width: 300px; height: auto;&quot;&gt;
  &lt;br&gt;
  &lt;small style=&quot;color: #666;&quot;&gt;Achieved on September 1st, 2025&lt;/small&gt;
&lt;/p&gt;

#### Top Technologies

[![React Badge](https://img.shields.io/badge/-React-61DBFB?style=flat-square&amp;labelColor=black&amp;logo=react&amp;logoColor=61DBFB)](#)
[![TypeScript Badge](https://img.shields.io/badge/-TypeScript-3178C6?style=flat-square&amp;labelColor=black&amp;logo=typescript&amp;logoColor=3178C6)](#)
[![Node.js Badge](https://img.shields.io/badge/-Node.js-3C873A?style=flat-square&amp;labelColor=black&amp;logo=node.js&amp;logoColor=3C873A)](#)
[![Vite Badge](https://img.shields.io/badge/-Vite-646CFF?style=flat-square&amp;labelColor=black&amp;logo=vite&amp;logoColor=646CFF)](#)
[![Tailwind CSS Badge](https://img.shields.io/badge/-TailwindCSS-38B2AC?style=flat-square&amp;labelColor=black&amp;logo=tailwindcss&amp;logoColor=38B2AC)](#)
[![Docker Badge](https://img.shields.io/badge/-Docker-2496ED?style=flat-square&amp;labelColor=black&amp;logo=docker&amp;logoColor=2496ED)](#)
[![SQLite Badge](https://img.shields.io/badge/-SQLite-003B57?style=flat-square&amp;labelColor=black&amp;logo=sqlite&amp;logoColor=003B57)](#)
[![Radix UI Badge](https://img.shields.io/badge/-Radix%20UI-161618?style=flat-square&amp;labelColor=black&amp;logo=radixui&amp;logoColor=161618)](#)

&lt;br /&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/LukeGus/Termix&quot;&gt;
    &lt;img alt=&quot;Termix Banner&quot; src=./repo-images/HeaderImage.png style=&quot;width: auto; height: auto;&quot;&gt;  &lt;/a&gt;
&lt;/p&gt;

If you would like, you can support the project here!\
[![GitHub Sponsor](https://img.shields.io/badge/Sponsor-LukeGus-181717?style=for-the-badge&amp;logo=github&amp;logoColor=white)](https://github.com/sponsors/LukeGus)

# Overview

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/LukeGus/Termix&quot;&gt;
    &lt;img alt=&quot;Termix Banner&quot; src=./public/icon.svg style=&quot;width: 250px; height: 250px;&quot;&gt;  &lt;/a&gt;
&lt;/p&gt;

Termix is an open-source, forever-free, self-hosted all-in-one server management platform. It provides a web-based
solution for managing your servers and infrastructure through a single, intuitive interface. Termix offers SSH terminal
access, SSH tunneling capabilities, and remote file editing, with many more tools to come.

# Features

- **SSH Terminal Access** - Full-featured terminal with split-screen support (up to 4 panels) and tab system
- **SSH Tunnel Management** - Create and manage SSH tunnels with automatic reconnection and health monitoring
- **Remote File Editor** - Edit files directly on remote servers with syntax highlighting, file management features (
  uploading, removing, renaming, deleting files)
- **SSH Host Manager** - Save, organize, and manage your SSH connections with tags and folders
- **Server Stats** - View CPU, memory, and HDD usage on any SSH server
- **User Authentication** - Secure user management with admin controls and OIDC and 2FA (TOTP) support
- **Modern UI** - Clean desktop/mobile friendly (in progress) interface built with React, Tailwind CSS, and Shadcn
- **Languages** - Built-in support for English and Chinese
- **Improved Platform Support** - Now includes an installable Electron app (in progress) for desktop, with a dedicated
  mobile app also planned.

# Planned Features

See [Projects](https://github.com/users/LukeGus/projects/3). If you are looking to contribute,
see [Contributing](https://github.com/LukeGus/Termix/blob/main/CONTRIBUTING.md),

# Installation

Visit the Termix [Docs](https://docs.termix.site/install) for more information on how to install Termix. Otherwise, view
a sample docker-compose file here:

```yaml
services:
  termix:
    image: ghcr.io/lukegus/termix:latest
    container_name: termix
    restart: unless-stopped
    ports:
      - &quot;8080:8080&quot;
    volumes:
      - termix-data:/app/data
    environment:
      PORT: &quot;8080&quot;

volumes:
  termix-data:
    driver: local
```

Pre-built binaries are now available for download, including a Windows installer/portable app and a Linux portable app (
built with Electron). See [Docs](https://docs.termix.site/install#pre-built-binaries) for details. A native iOS/Android app
is planned.

# Support

If you need help with Termix, you can join the [Discord](https://discord.gg/jVQGdvHDrf) server and visit the support
channel. You can also open an issue or open a pull request on the [GitHub](https://github.com/LukeGus/Termix/issues)
repo.

# Show-off

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;./repo-images/Image 1.png&quot; width=&quot;400&quot; alt=&quot;Termix Demo 1&quot;/&gt;
  &lt;img src=&quot;./repo-images/Image 2.png&quot; width=&quot;400&quot; alt=&quot;Termix Demo 2&quot;/&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;./repo-images/Image 3.png&quot; width=&quot;250&quot; alt=&quot;Termix Demo 3&quot;/&gt;
  &lt;img src=&quot;./repo-images/Image 4.png&quot; width=&quot;250&quot; alt=&quot;Termix Demo 4&quot;/&gt;
  &lt;img src=&quot;./repo-images/Image 5.png&quot; width=&quot;250&quot; alt=&quot;Termix Demo 5&quot;/&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;video src=&quot;https://github.com/user-attachments/assets/f9caa061-10dc-4173-ae7d-c6d42f05cf56&quot; width=&quot;800&quot; controls&gt;
    Your browser does not support the video tag.
  &lt;/video&gt;
&lt;/p&gt;

# License

Distributed under the Apache License Version 2.0. See LICENSE for more information.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[ixartz/Next-js-Boilerplate]]></title>
            <link>https://github.com/ixartz/Next-js-Boilerplate</link>
            <guid>https://github.com/ixartz/Next-js-Boilerplate</guid>
            <pubDate>Tue, 16 Sep 2025 00:05:04 GMT</pubDate>
            <description><![CDATA[🚀🎉📚 Boilerplate and Starter for Next.js 15 with App Router and Page Router support, Tailwind CSS 4 and TypeScript ⚡️ Made with developer experience first: Next.js + TypeScript + ESLint + Prettier + Drizzle ORM + Husky + Lint-Staged + Vitest + Testing Library + Playwright + Storybook + Commitlint + VSCode + Sentry + PostCSS + Tailwind CSS ✨]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/ixartz/Next-js-Boilerplate">ixartz/Next-js-Boilerplate</a></h1>
            <p>🚀🎉📚 Boilerplate and Starter for Next.js 15 with App Router and Page Router support, Tailwind CSS 4 and TypeScript ⚡️ Made with developer experience first: Next.js + TypeScript + ESLint + Prettier + Drizzle ORM + Husky + Lint-Staged + Vitest + Testing Library + Playwright + Storybook + Commitlint + VSCode + Sentry + PostCSS + Tailwind CSS ✨</p>
            <p>Language: TypeScript</p>
            <p>Stars: 11,963</p>
            <p>Forks: 2,214</p>
            <p>Stars today: 13 stars today</p>
            <h2>README</h2><pre># Boilerplate and Starter for Next.js 15+, Tailwind CSS 4, and TypeScript.

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://demo.nextjs-boilerplate.com&quot;&gt;
    &lt;img
      src=&quot;public/assets/images/nextjs-starter-banner.png?raw=true&quot;
      alt=&quot;Next js starter banner&quot;
      style=&quot;max-width: 100%; height: auto;&quot;
    /&gt;
  &lt;/a&gt;
&lt;/p&gt;

🚀 Boilerplate and Starter for Next.js with App Router, Tailwind CSS, and TypeScript ⚡️ Prioritizing developer experience first: Next.js, TypeScript, ESLint, Prettier, Lefthook (replacing Husky), Lint-Staged, Vitest (replacing Jest), Testing Library, Playwright, Commitlint, VSCode, Tailwind CSS, Authentication with [Clerk](https://clerk.com?utm_source=github&amp;utm_medium=sponsorship&amp;utm_campaign=nextjs-boilerplate), Database with DrizzleORM (PostgreSQL, SQLite, and MySQL), Local database with PGlite and production with [Prisma Postgres](https://www.prisma.io/?via=nextjs-boilerplate), Error Monitoring with [Sentry](https://sentry.io/for/nextjs/?utm_source=github&amp;utm_medium=paid-community&amp;utm_campaign=general-fy25q1-nextjs&amp;utm_content=github-banner-nextjsboilerplate-logo), Logging with LogTape (replacing Pino.js) and Log Management, Monitoring as Code, Storybook, Multi-language (i18n), AI-powered code reviews with [CodeRabbit](https://www.coderabbit.ai?utm_source=next_js_starter&amp;utm_medium=github&amp;utm_campaign=next_js_starter_oss_2025), Secure with [Arcjet](https://launch.arcjet.com/Q6eLbRE) (Bot detection, Rate limiting, Attack protection, etc.), terminal with [Warp](https://go.warp.dev/nextjs-bp) and more.

Clone this project and use it to create your own Next.js project. You can check out the live demo at [Next.js Boilerplate](https://demo.nextjs-boilerplate.com), which includes a working authentication system.

🌟 **Free One-Click Deployment:** Deploy the complete Next.js Boilerplate with a PostgreSQL database instantly. No configuration required - start with a free plan - everything is pre-configured for you:

[![Deploy on Railway](https://railway.com/button.svg)](https://railway.com/deploy/nextjs-boilerplate?referralCode=zA3Z43&amp;utm_medium=integration&amp;utm_source=template&amp;utm_campaign=generic) &lt;sub&gt;— starts free&lt;/sub&gt;

## Sponsors

&lt;table width=&quot;100%&quot;&gt;
  &lt;tr height=&quot;187px&quot;&gt;
    &lt;td align=&quot;center&quot; width=&quot;33%&quot;&gt;
      &lt;a href=&quot;https://clerk.com?utm_source=github&amp;utm_medium=sponsorship&amp;utm_campaign=nextjs-boilerplate&quot;&gt;
        &lt;picture&gt;
          &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://github.com/ixartz/SaaS-Boilerplate/assets/1328388/6fb61971-3bf1-4580-98a0-10bd3f1040a2&quot;&gt;
          &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://github.com/ixartz/SaaS-Boilerplate/assets/1328388/f80a8bb5-66da-4772-ad36-5fabc5b02c60&quot;&gt;
          &lt;img alt=&quot;Clerk – Authentication &amp; User Management for Next.js&quot; src=&quot;https://github.com/ixartz/SaaS-Boilerplate/assets/1328388/f80a8bb5-66da-4772-ad36-5fabc5b02c60&quot;&gt;
        &lt;/picture&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td align=&quot;center&quot; width=&quot;33%&quot;&gt;
      &lt;a href=&quot;https://www.coderabbit.ai?utm_source=next_js_starter&amp;utm_medium=github&amp;utm_campaign=next_js_starter_oss_2025&quot;&gt;
        &lt;picture&gt;
          &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;public/assets/images/coderabbit-logo-dark.svg?raw=true&quot;&gt;
          &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;public/assets/images/coderabbit-logo-light.svg?raw=true&quot;&gt;
          &lt;img alt=&quot;CodeRabbit&quot; src=&quot;public/assets/images/coderabbit-logo-light.svg?raw=true&quot;&gt;
        &lt;/picture&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td align=&quot;center&quot; width=&quot;33%&quot;&gt;
      &lt;a href=&quot;https://sentry.io/for/nextjs/?utm_source=github&amp;utm_medium=paid-community&amp;utm_campaign=general-fy25q1-nextjs&amp;utm_content=github-banner-nextjsboilerplate-logo&quot;&gt;
        &lt;picture&gt;
          &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;public/assets/images/sentry-white.png?raw=true&quot;&gt;
          &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;public/assets/images/sentry-dark.png?raw=true&quot;&gt;
          &lt;img alt=&quot;Sentry&quot; src=&quot;public/assets/images/sentry-dark.png?raw=true&quot;&gt;
        &lt;/picture&gt;
      &lt;/a&gt;
      &lt;a href=&quot;https://about.codecov.io/codecov-free-trial/?utm_source=github&amp;utm_medium=paid-community&amp;utm_campaign=general-fy25q1-nextjs&amp;utm_content=github-banner-nextjsboilerplate-logo&quot;&gt;
        &lt;picture&gt;
          &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;public/assets/images/codecov-white.svg?raw=true&quot;&gt;
          &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;public/assets/images/codecov-dark.svg?raw=true&quot;&gt;
          &lt;img alt=&quot;Codecov&quot; src=&quot;public/assets/images/codecov-dark.svg?raw=true&quot;&gt;
        &lt;/picture&gt;
      &lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr height=&quot;187px&quot;&gt;
    &lt;td align=&quot;center&quot; width=&quot;33%&quot;&gt;
      &lt;a href=&quot;https://launch.arcjet.com/Q6eLbRE&quot;&gt;
        &lt;picture&gt;
          &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;public/assets/images/arcjet-dark.svg?raw=true&quot;&gt;
          &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;public/assets/images/arcjet-light.svg?raw=true&quot;&gt;
          &lt;img alt=&quot;Arcjet&quot; src=&quot;public/assets/images/arcjet-light.svg?raw=true&quot;&gt;
        &lt;/picture&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td align=&quot;center&quot; width=&quot;33%&quot;&gt;
      &lt;a href=&quot;https://sevalla.com/&quot;&gt;
        &lt;picture&gt;
          &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;public/assets/images/sevalla-dark.png&quot;&gt;
          &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;public/assets/images/sevalla-light.png&quot;&gt;
          &lt;img alt=&quot;Sevalla&quot; src=&quot;public/assets/images/sevalla-light.png&quot;&gt;
        &lt;/picture&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td align=&quot;center&quot; width=&quot;33%&quot;&gt;
      &lt;a href=&quot;https://l.crowdin.com/next-js&quot;&gt;
        &lt;picture&gt;
          &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;public/assets/images/crowdin-white.png?raw=true&quot;&gt;
          &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;public/assets/images/crowdin-dark.png?raw=true&quot;&gt;
          &lt;img alt=&quot;Crowdin&quot; src=&quot;public/assets/images/crowdin-dark.png?raw=true&quot;&gt;
        &lt;/picture&gt;
      &lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr height=&quot;187px&quot;&gt;
    &lt;td align=&quot;center&quot; width=&quot;33%&quot;&gt;
      &lt;a href=&quot;https://betterstack.com/?utm_source=github&amp;utm_medium=sponsorship&amp;utm_campaign=next-js-boilerplate&quot;&gt;
        &lt;picture&gt;
          &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;public/assets/images/better-stack-white.png?raw=true&quot;&gt;
          &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;public/assets/images/better-stack-dark.png?raw=true&quot;&gt;
          &lt;img alt=&quot;Better Stack&quot; src=&quot;public/assets/images/better-stack-dark.png?raw=true&quot;&gt;
        &lt;/picture&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td align=&quot;center&quot; width=&quot;33%&quot;&gt;
      &lt;a href=&quot;https://posthog.com/?utm_source=github&amp;utm_medium=sponsorship&amp;utm_campaign=next-js-boilerplate&quot;&gt;
        &lt;picture&gt;
          &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://posthog.com/brand/posthog-logo-white.svg&quot;&gt;
          &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://posthog.com/brand/posthog-logo.svg&quot;&gt;
          &lt;img alt=&quot;PostHog&quot; src=&quot;https://posthog.com/brand/posthog-logo.svg&quot;&gt;
        &lt;/picture&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td align=&quot;center&quot; width=&quot;33%&quot;&gt;
      &lt;a href=&quot;https://www.nutrient.io/guides/web/nextjs/?utm_source=nextjs-boilerplate&amp;utm_medium=referral&quot;&gt;
        &lt;picture&gt;
          &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;public/assets/images/nutrient-dark.png?raw=true&quot;&gt;
          &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;public/assets/images/nutrient-light.png?raw=true&quot;&gt;
          &lt;img alt=&quot;Nutrient&quot; src=&quot;public/assets/images/nutrient-light.png?raw=true&quot;&gt;
        &lt;/picture&gt;
      &lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr height=&quot;187px&quot;&gt;
    &lt;td align=&quot;center&quot; width=&quot;33%&quot;&gt;
      &lt;a href=&quot;https://www.checklyhq.com/?utm_source=github&amp;utm_medium=sponsorship&amp;utm_campaign=next-js-boilerplate&quot;&gt;
        &lt;picture&gt;
          &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;public/assets/images/checkly-logo-dark.png?raw=true&quot;&gt;
          &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;public/assets/images/checkly-logo-light.png?raw=true&quot;&gt;
          &lt;img alt=&quot;Checkly&quot; src=&quot;public/assets/images/checkly-logo-light.png?raw=true&quot;&gt;
        &lt;/picture&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td align=&quot;center&quot; style=width=&quot;33%&quot;&gt;
      &lt;a href=&quot;https://nextjs-boilerplate.com/pro-saas-starter-kit&quot;&gt;
        &lt;img src=&quot;public/assets/images/nextjs-boilerplate-saas.png?raw=true&quot; alt=&quot;Next.js SaaS Boilerplate with React&quot; /&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td align=&quot;center&quot; width=&quot;33%&quot;&gt;
      &lt;a href=&quot;mailto:contact@creativedesignsguru.com&quot;&gt;
        Add your logo here
      &lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

### Demo

**Live demo: [Next.js Boilerplate](https://demo.nextjs-boilerplate.com)**

| Sign Up | Sign In |
| --- | --- |
| [![Next.js Boilerplate SaaS Sign Up](public/assets/images/nextjs-boilerplate-sign-in.png)](https://demo.nextjs-boilerplate.com/sign-up) | [![Next.js Boilerplate SaaS Sign In](public/assets/images/nextjs-boilerplate-sign-in.png)](https://demo.nextjs-boilerplate.com/sign-in) |

### Features

Developer experience first, extremely flexible code structure and only keep what you need:

- ⚡ [Next.js](https://nextjs.org) with App Router support
- 🔥 Type checking [TypeScript](https://www.typescriptlang.org)
- 💎 Integrate with [Tailwind CSS](https://tailwindcss.com)
- ✅ Strict Mode for TypeScript and React 19
- 🔒 Authentication with [Clerk](https://clerk.com?utm_source=github&amp;utm_medium=sponsorship&amp;utm_campaign=nextjs-boilerplate): Sign up, Sign in, Sign out, Forgot password, Reset password, and more.
- 👤 Passwordless Authentication with Magic Links, Multi-Factor Auth (MFA), Social Auth (Google, Facebook, Twitter, GitHub, Apple, and more), Passwordless login with Passkeys, User Impersonation
- 📦 Type-safe ORM with DrizzleORM, compatible with PostgreSQL, SQLite, and MySQL
- 💽 Offline and local development database with PGlite
- ☁️ Remote and production database with [Prisma Postgres](https://www.prisma.io/?via=nextjs-boilerplate)
- 🌐 Multi-language (i18n) with next-intl and [Crowdin](https://l.crowdin.com/next-js)
- ♻️ Type-safe environment variables with T3 Env
- ⌨️ Form handling with React Hook Form
- 🔴 Validation library with Zod
- 📏 Linter with [ESLint](https://eslint.org) (default Next.js, Next.js Core Web Vitals, Tailwind CSS and Antfu configuration)
- 💖 Code Formatter with Prettier
- 🦊 Husky for Git Hooks (replaced by Lefthook)
- 🚫 Lint-staged for running linters on Git staged files
- 🚓 Lint git commit with Commitlint
- 📓 Write standard compliant commit messages with Commitizen
- 🔍 Unused files and dependencies detection with Knip
- 🌍 I18n validation and missing translation detection with i18n-check
- 🦺 Unit Testing with Vitest and Browser mode (replacing React Testing Library)
- 🧪 Integration and E2E Testing with Playwright
- 👷 Run tests on pull request with GitHub Actions
- 🎉 Storybook for UI development
- 🐰 AI-powered code reviews with [CodeRabbit](https://www.coderabbit.ai?utm_source=next_js_starter&amp;utm_medium=github&amp;utm_campaign=next_js_starter_oss_2025)
- 🚨 Error Monitoring with [Sentry](https://sentry.io/for/nextjs/?utm_source=github&amp;utm_medium=paid-community&amp;utm_campaign=general-fy25q1-nextjs&amp;utm_content=github-banner-nextjsboilerplate-logo)
- 🔍 Local development error monitoring with Sentry Spotlight
- ☂️ Code coverage with [Codecov](https://about.codecov.io/codecov-free-trial/?utm_source=github&amp;utm_medium=paid-community&amp;utm_campaign=general-fy25q1-nextjs&amp;utm_content=github-banner-nextjsboilerplate-logo)
- 📝 Logging with LogTape and Log Management with [Better Stack](https://betterstack.com/?utm_source=github&amp;utm_medium=sponsorship&amp;utm_campaign=next-js-boilerplate)
- 🖥️ Monitoring as Code with [Checkly](https://www.checklyhq.com/?utm_source=github&amp;utm_medium=sponsorship&amp;utm_campaign=next-js-boilerplate)
- 🔐 Security and bot protection ([Arcjet](https://launch.arcjet.com/Q6eLbRE))
- 📊 Analytics with PostHog
- 🎁 Automatic changelog generation with Semantic Release
- 🔍 Visual regression testing
- 💡 Absolute Imports using `@` prefix
- 🗂 VSCode configuration: Debug, Settings, Tasks and Extensions
- 🤖 SEO metadata, JSON-LD and Open Graph tags
- 🗺️ Sitemap.xml and robots.txt
- 👷 Automatic dependency updates with Dependabot
- ⌘ Database exploration with Drizzle Studio and CLI migration tool with Drizzle Kit
- ⚙️ Bundler Analyzer
- 🌈 Include a FREE minimalist theme
- 💯 Maximize lighthouse score

Built-in feature from Next.js:

- ☕ Minify HTML &amp; CSS
- 💨 Live reload
- ✅ Cache busting

Optional features (easy to add):

- 🔑 Multi-tenancy, Role-based access control (RBAC)
- 🔐 OAuth for Single Sign-On (SSO), Enterprise SSO, SAML, OpenID Connect (OIDC), EASIE
- 🔗 Web 3 (Base, MetaMask, Coinbase Wallet, OKX Wallet)

### Philosophy

- Nothing is hidden from you, allowing you to make any necessary adjustments to suit your requirements and preferences.
- Dependencies are regularly updated on a monthly basis
- Start for free without upfront costs
- Easy to customize
- Minimal code
- Unstyled template
- SEO-friendly
- 🚀 Production-ready

### Requirements

- Node.js 22+ and npm

### Getting started

Run the following command on your local environment:

```shell
git clone --depth=1 https://github.com/ixartz/Next-js-Boilerplate.git my-project-name
cd my-project-name
npm install
```

For your information, all dependencies are updated every month.

Then, you can run the project locally in development mode with live reload by executing:

```shell
npm run dev
```

[![Run the command in Warp](public/assets/images/warp-banner.png)](https://go.warp.dev/nextjs-bp)

Open http://localhost:3000 with your favorite browser to see your project. For your information, the project is already pre-configured with a local database using PGlite. No extra setup is required to run the project locally.

### One-click deployment

The Next.js Boilerplate includes everything you need: authentication system, database configuration, internationalization (i18n), monitoring, logging and more. Simply click the button below to get your full-stack application running in minutes for free:

[![Deploy on Railway](https://railway.com/button.svg)](https://railway.com/deploy/nextjs-boilerplate?referralCode=zA3Z43&amp;utm_medium=integration&amp;utm_source=template&amp;utm_campaign=generic) &lt;sub&gt;— starts free&lt;/sub&gt;

### Set up authentication

To get started, you will need to create a Clerk account at [Clerk.com](https://clerk.com?utm_source=github&amp;utm_medium=sponsorship&amp;utm_campaign=nextjs-boilerplate) and create a new application in the Clerk Dashboard. Once you have done that, copy the `NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY` and `CLERK_SECRET_KEY` values and add them to the `.env.local` file (not tracked by Git):

```shell
NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=your_clerk_pub_key
CLERK_SECRET_KEY=your_clerk_secret_key
```

Now you have a fully functional authentication system with Next.js, including features such as sign up, sign in, sign out, forgot password, reset password, update profile, update password, update email, delete account, and more.

### Set up remote database

The project uses DrizzleORM, a type-safe ORM that is compatible with PostgreSQL, SQLite, and MySQL databases. By default, the project is configured to seamlessly work with PostgreSQL, and you have the flexibility to choose any PostgreSQL database provider of your choice.

To set up a remote and production database, you need to create a PostgreSQL database and obtain the connection string. One recommended option is to use [Prisma PostgreSQL](https://www.prisma.io/?via=nextjs-boilerplate), which provides a free PostgreSQL database. This database is compatible and has been tested with Next.js Boilerplate.

After creating your Prisma account, you can get the connection string in the `Connect to your database` section and select the `Any client` tab. Then, you can generate the connection string by clicking the `Generate database credentials` button. Finally, you can copy the connection string and add the `DATABASE_URL` variable to the `.env.local` file.

### Translation (i18n) setup

For translation, the project uses `next-intl` combined with [Crowdin](https://l.crowdin.com/next-js). As a developer, you only need to take care of the English (or another default language) version. Translations for other languages are automatically generated and handled by Crowdin. You can use Crowdin to collaborate with your translation team or translate the messages yourself with the help of machine translation.

To set up translation (i18n), create an account at [Crowdin.com](https://l.crowdin.com/next-js) and create a new project. In the newly created project, you will be able to find the project ID. You will also need to create a new Personal Access Token by going to Account Settings &gt; API. Then, in your GitHub Actions, you need to define the following environment variables: `CROWDIN_PROJECT_ID` and `CROWDIN_PERSONAL_TOKEN`.

After defining the environment variables in your GitHub Actions, your localization files will be synchronized with Crowdin every time you push a new commit to the `main` branch.

### Project structure

```shell
.
├── README.md                       # README file
├── .github                         # GitHub folder
│   ├── actions                     # Reusable actions
│   └── workflows                   # GitHub Actions workflows
├── .storybook                      # Storybook folder
├── .vscode                         # VSCode configuration
├── migrations                      # Database migrations
├── public                          # Public assets folder
├── src
│   ├── app                         # Next JS App (App Router)
│   ├── components                  # React components
│   ├── libs                        # 3rd party libraries configuration
│   ├── locales                     # Locales folder (i18n messages)
│   ├── models                      # Database models
│   ├── styles                      # Styles folder
│   ├── templates                   # Templates folder
│   ├── types                       # Type definitions
│   ├── utils                       # Utilities folder
│   └── validations                 # Validation schemas
├── tests
│   ├── e2e                         # E2E tests, also includes Monitoring as Code
│   └── integration                 # Integration tests
├── next.config.ts                  # Next JS configuration
└── tsconfig.json                   # TypeScript configuration
```

### Customization

You can easily configure Next js Boilerplate by searching the entire project for `FIXME:` to make quick customizations. Here are some of the most important files to customize:

- `public/apple-touch-icon.png`, `public/favicon.ico`, `public/favicon-16x16.png` and `public/favicon-32x32.png`: your website favicon
- `src/utils/AppConfig.ts`: configuration file
- `src/templates/BaseTemplate.tsx`: default theme
- `next.config.ts`: Next.js configuration
- `.env`: default environment variables

You have full access to the source code for further customization. The provided code is just an example to help you start your project. The sky&#039;s the limit 🚀.

### Change database schema

To modify the database schema in the project, you can update the schema file located at `./src/models/Schema.ts`. This file defines the structure of your database tables using the Drizzle ORM library.

After making changes to the schema, generate a migration by running the following command:

```shell
npm run db:generate
```

[![Run the command in Warp](public/assets/images/warp-banner.png)](https://go.warp.dev/nextjs-bp)

This will create a migration file that reflects your schema changes.

Migrations are automatically applied during Next.js initialization through `instrumentation.ts`. Simply restart your Next.js server to apply the database changes.

Alternatively, if your database is running, you can apply migrations manually using:

```shell
npm run db:migrate
```

There is no need to restart the Next.js server for the changes to take effect.

### Commit Message Format

The project follows the [Conventiona

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[OI-wiki/OI-wiki]]></title>
            <link>https://github.com/OI-wiki/OI-wiki</link>
            <guid>https://github.com/OI-wiki/OI-wiki</guid>
            <pubDate>Tue, 16 Sep 2025 00:05:03 GMT</pubDate>
            <description><![CDATA[🌟 Wiki of OI / ICPC for everyone. （某大型游戏线上攻略，内含炫酷算术魔法）]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/OI-wiki/OI-wiki">OI-wiki/OI-wiki</a></h1>
            <p>🌟 Wiki of OI / ICPC for everyone. （某大型游戏线上攻略，内含炫酷算术魔法）</p>
            <p>Language: TypeScript</p>
            <p>Stars: 24,190</p>
            <p>Forks: 4,425</p>
            <p>Stars today: 12 stars today</p>
            <h2>README</h2><pre>[![Word Art](docs/images/wordArt.webp)](https://oi-wiki.org/)

# 欢迎来到 **OI Wiki**！

[![Gitpod Ready-to-Code](https://img.shields.io/badge/Gitpod-Ready--to--Code-brightgreen?logo=gitpod&amp;style=flat-square)](https://gitpod.io/#https://github.com/OI-wiki/OI-wiki)  [![GitHub Actions](https://img.shields.io/github/actions/workflow/status/OI-wiki/OI-wiki/build.yml?style=flat-square&amp;branch=master)](https://github.com/OI-wiki/OI-wiki/actions/workflows/build.yml)  [![Uptime Robot Status](https://img.shields.io/uptimerobot/status/m781254113-3e3bac467c64fc99eafd383e.svg?style=flat-square)](https://status.oi-wiki.org/) [![Telegram](https://img.shields.io/badge/Telegram-OI%20Wiki-%232CA5E0?style=flat-square&amp;logo=telegram)](https://t.me/OI_wiki)  [![QQ](https://img.shields.io/badge/QQ%20group-OI%20Wiki-blue?style=flat-square&amp;logo=tencent-qq)](https://jq.qq.com/?_wv=1027&amp;k=5EfkM6K)  [![GitHub watchers](https://img.shields.io/github/watchers/OI-Wiki/OI-Wiki.svg?style=social&amp;label=Watch)](https://github.com/OI-wiki/OI-wiki)  [![GitHub stars](https://img.shields.io/github/stars/OI-Wiki/OI-Wiki.svg?style=social&amp;label=Stars)](https://github.com/OI-wiki/OI-wiki)

* * *

## 内容

编程竞赛发展多年，难度越来越高，内容越来越复杂，而网上资料大多零散，初学者往往并不知道如何系统地学习相关知识，需要花费大量时间摸索。

为了方便热爱编程竞赛的小伙伴更好地入门，2018 年 7 月份，**OI Wiki** 迁移至 GitHub。随着 **OI Wiki** 的内容不断完善，越来越多的小伙伴参与其中。

**OI Wiki** 致力于成为一个免费开放且持续更新的知识整合站点，大家可以在这里获取关于 **编程竞赛 (competitive programming)** 有趣又实用的知识，我们为大家准备了竞赛中的基础知识、常见题型、解题思路以及常用工具等内容，帮助大家更快速深入地学习编程竞赛。

目前，**OI Wiki** 的内容还有很多不完善的地方，知识点覆盖不够全面，存在一些低质量页面需要修改。**OI Wiki** 团队以及参与贡献的小伙伴们正在积极完善这些内容。

关于上述待完善内容，请参见 **OI Wiki** 的 [Issues](https://github.com/OI-wiki/OI-wiki/issues) 以及 [迭代计划](https://github.com/OI-wiki/OI-wiki/labels/Iteration%20Plan%20%2F%20%E8%BF%AD%E4%BB%A3%E8%AE%A1%E5%88%92)。

与此同时，**OI Wiki** 源于社区，提倡 **知识自由**，在未来也绝不会商业化，将始终保持独立自由的性质。

* * *

## 部署

本项目目前采用 [MkDocs](https://github.com/mkdocs/mkdocs) 部署在 [oi-wiki.org](https://oi-wiki.org)。

我们在 [status.oi-wiki.org](https://status.oi-wiki.org) 维护了一份镜像站列表，它们的内容和 [oi-wiki.org](https://oi-wiki.org) 都是相同的。

当然，也可以在本地部署。（**需要安装 Python3 和 uv**）

**如果遇到问题，可以查阅 [F.A.Q.](https://oi-wiki.org/intro/faq/) 来了解更多信息。**

```bash
git clone https://github.com/OI-wiki/OI-wiki.git --depth=1

cd OI-wiki

# 安装 uv (如果尚未安装)
pip install uv

# 安装依赖
uv sync --index-url https://pypi.tuna.tsinghua.edu.cn/simple/

# 使用我们的自定义主题（Windows 下请使用 Git Bash 执行）
# 安装主题时将连接网络下载资源，可通过以下配置项控制下载链接
# .gitmodules:
# - url
# scripts/pre-build/install-theme-vendor.sh:
# - MATHJAX_URL
# - MATERIAL_ICONS_URL
./scripts/pre-build/install-theme.sh

# 两种方法（选其一即可）：
# 1. 运行一个本地服务器，访问 http://127.0.0.1:8000 可以查看效果
uv run mkdocs serve -v

# 2. 在 site 文件夹下得到静态页面
uv run mkdocs build -v

# 获取 mkdocs 的命令行工具的说明（解释了命令和参数的含义）
uv run mkdocs --help
```

我们现在在服务器端渲染 MathJax，如果希望实现类似效果，可以参考 [build.yml](https://github.com/OI-wiki/OI-wiki/blob/master/.github/workflows/build.yml)。（需要安装 Node.js）

### 镜像

```bash
# Gitee 码云 上的镜像仓库和 GitHub 仓库的内容相同
git clone https://gitee.com/OI-wiki/OI-wiki.git
```

### 离线版

可以使用 `gh-pages` 分支的内容

```bash
git clone https://gitee.com/OI-wiki/OI-wiki.git -b gh-pages
```

本地启动一个 http 服务器可能会更方便一些。

```bash
# 如果是 python3
python3 -m http.server
# 如果是 python2
python2 -m SimpleHTTPServer
# 有些环境下找不到名叫 python3/python2 的可执行文件，不妨运行 python 试试
```

* * *

## 如何参与完善 OI Wiki

我们非常欢迎你为 **OI Wiki** 编写内容，将自己的所学所得与大家分享。

具体的贡献方式在 [如何参与](https://oi-wiki.org/intro/htc/)。

* * *

## 版权声明

&lt;a rel=&quot;license&quot; href=&quot;https://creativecommons.org/licenses/by-sa/4.0/&quot;&gt;&lt;img alt=&quot;知识共享许可协议&quot; style=&quot;border-width:0&quot; src=&quot;https://i.creativecommons.org/l/by-sa/4.0/88x31.png&quot; /&gt;&lt;/a&gt;&lt;br /&gt;除特别注明外，项目中除了代码部分均采用&lt;a rel=&quot;license&quot; href=&quot;https://creativecommons.org/licenses/by-sa/4.0/deed.zh&quot;&gt;(Creative Commons BY-SA 4.0) 知识共享署名 - 相同方式共享 4.0 国际许可协议&lt;/a&gt;及附加的 [The Star And Thank Author License](https://github.com/zTrix/sata-license) 进行许可。

换言之，使用过程中您可以自由地共享、演绎，但是必须署名、以相同方式共享、分享时没有附加限制，

而且应该为 GitHub 仓库点赞（Star）。

而如果你想要引用这个 GitHub 仓库，可以使用如下的 bibtex：

    @misc{oiwiki,
      author = {OI Wiki Team},
      title = {OI Wiki},
      year = {2016},
      publisher = {GitHub},
      journal = {GitHub Repository},
      howpublished = {\url{https://github.com/OI-wiki/OI-wiki}},
    }

* * *

## 鸣谢

本项目受 [CTF Wiki](https://ctf-wiki.org/) 的启发，在编写过程中参考了诸多资料，在此一并致谢。

非常感谢一起完善 **OI Wiki** 的 [小伙伴们](https://github.com/OI-wiki/OI-wiki/graphs/contributors) 和为 **OI Wiki** 捐赠的 [朋友们](https://oi-wiki.org/intro/thanks/)！

&lt;a href=&quot;https://github.com/OI-wiki/OI-wiki/graphs/contributors&quot;&gt;&lt;img src=&quot;https://opencollective.com/oi-wiki/contributors.svg?width=890&amp;button=false&quot; /&gt;&lt;/a&gt;

特别感谢 [24OI](https://github.com/24OI) 的朋友们的大力支持！

&lt;!-- &lt;img src=&#039;https://i.loli.net/2018/12/07/5c0a6e4c31b30.png&#039; alt=&#039;QVQNetWork&#039; width=233&gt;
鸣谢 QVQNetwork 赞助的服务器。 --&gt;

感谢 北大算协 和 Hulu 的支持！

![](https://assets.pcmag.com/media/images/560767-hulu.png?width=333&amp;height=245)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[vuejs/vitepress]]></title>
            <link>https://github.com/vuejs/vitepress</link>
            <guid>https://github.com/vuejs/vitepress</guid>
            <pubDate>Tue, 16 Sep 2025 00:05:02 GMT</pubDate>
            <description><![CDATA[Vite & Vue powered static site generator.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/vuejs/vitepress">vuejs/vitepress</a></h1>
            <p>Vite & Vue powered static site generator.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 15,894</p>
            <p>Forks: 2,480</p>
            <p>Stars today: 40 stars today</p>
            <h2>README</h2><pre># VitePress 📝💨

[![test](https://github.com/vuejs/vitepress/actions/workflows/test.yml/badge.svg?branch=main)](https://github.com/vuejs/vitepress/actions/workflows/test.yml)
[![npm](https://img.shields.io/npm/v/vitepress/next)](https://www.npmjs.com/package/vitepress/v/next)
[![nightly releases](https://img.shields.io/badge/nightly-releases-orange)](https://nightly.akryum.dev/vuejs/vitepress)
[![chat](https://img.shields.io/badge/chat-discord-blue?logo=discord)](https://chat.vuejs.org)

---

VitePress is a Vue-powered static site generator and a spiritual successor to [VuePress](https://vuepress.vuejs.org), built on top of [Vite](https://github.com/vitejs/vite).

## Documentation

To check out docs, visit [vitepress.dev](https://vitepress.dev).

## Changelog

Detailed changes for each release are documented in the [CHANGELOG](https://github.com/vuejs/vitepress/blob/main/CHANGELOG.md).

## Contribution

Please make sure to read the [Contributing Guide](https://github.com/vuejs/vitepress/blob/main/.github/contributing.md) before making a pull request.

## License

[MIT](https://github.com/vuejs/vitepress/blob/main/LICENSE)

Copyright (c) 2019-present, Yuxi (Evan) You
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[mattermost/mattermost]]></title>
            <link>https://github.com/mattermost/mattermost</link>
            <guid>https://github.com/mattermost/mattermost</guid>
            <pubDate>Tue, 16 Sep 2025 00:05:01 GMT</pubDate>
            <description><![CDATA[Mattermost is an open source platform for secure collaboration across the entire software development lifecycle..]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/mattermost/mattermost">mattermost/mattermost</a></h1>
            <p>Mattermost is an open source platform for secure collaboration across the entire software development lifecycle..</p>
            <p>Language: TypeScript</p>
            <p>Stars: 33,659</p>
            <p>Forks: 7,980</p>
            <p>Stars today: 30 stars today</p>
            <h2>README</h2><pre># [![Mattermost logo](https://user-images.githubusercontent.com/7205829/137170381-fe86eef0-bccc-4fdd-8e92-b258884ebdd7.png)](https://mattermost.com)

[Mattermost](https://mattermost.com) is an open core, self-hosted collaboration platform that offers chat, workflow automation, voice calling, screen sharing, and AI integration. This repo is the primary source for core development on the Mattermost platform; it&#039;s written in Go and React, runs as a single Linux binary, and relies on PostgreSQL. A new compiled version is released under an MIT license every month on the 16th.

[Deploy Mattermost on-premises](https://mattermost.com/deploy/?utm_source=github-mattermost-server-readme), or [try it for free in the cloud](https://mattermost.com/sign-up/?utm_source=github-mattermost-server-readme).

&lt;img width=&quot;1006&quot; alt=&quot;mattermost user interface&quot; src=&quot;https://user-images.githubusercontent.com/7205829/136107976-7a894c9e-290a-490d-8501-e5fdbfc3785a.png&quot;&gt;

Learn more about the following use cases with Mattermost:

- [DevSecOps](https://mattermost.com/solutions/use-cases/devops/?utm_source=github-mattermost-server-readme)
- [Incident Resolution](https://mattermost.com/solutions/use-cases/incident-resolution/?utm_source=github-mattermost-server-readme)
- [IT Service Desk](https://mattermost.com/solutions/use-cases/it-service-desk/?utm_source=github-mattermost-server-readme)

Other useful resources:

- [Download and Install Mattermost](https://docs.mattermost.com/guides/deployment.html) - Install, setup, and configure your own Mattermost instance.
- [Product documentation](https://docs.mattermost.com/) - Learn how to run a Mattermost instance and take advantage of all the features.
- [Developer documentation](https://developers.mattermost.com/) - Contribute code to Mattermost or build an integration via APIs, Webhooks, slash commands, Apps, and plugins.

Table of contents
=================

- [Install Mattermost](#install-mattermost)
- [Native mobile and desktop apps](#native-mobile-and-desktop-apps)
- [Get security bulletins](#get-security-bulletins)
- [Get involved](#get-involved)
- [Learn more](#learn-more)
- [License](#license)
- [Get the latest news](#get-the-latest-news)
- [Contributing](#contributing)

## Install Mattermost

- [Download and Install Mattermost Self-Hosted](https://docs.mattermost.com/guides/deployment.html) - Deploy a Mattermost Self-hosted instance in minutes via Docker, Ubuntu, or tar.
- [Get started in the cloud](https://mattermost.com/sign-up/?utm_source=github-mattermost-server-readme) to try Mattermost today.
- [Developer machine setup](https://developers.mattermost.com/contribute/server/developer-setup) - Follow this guide if you want to write code for Mattermost.


Other install guides:

- [Deploy Mattermost on Docker](https://docs.mattermost.com/install/install-docker.html)
- [Mattermost Omnibus](https://docs.mattermost.com/install/installing-mattermost-omnibus.html)
- [Install Mattermost from Tar](https://docs.mattermost.com/install/install-tar.html)
- [Ubuntu 20.04 LTS](https://docs.mattermost.com/install/installing-ubuntu-2004-LTS.html)
- [Kubernetes](https://docs.mattermost.com/install/install-kubernetes.html)
- [Helm](https://docs.mattermost.com/install/install-kubernetes.html#installing-the-operators-via-helm)
- [Debian Buster](https://docs.mattermost.com/install/install-debian.html)
- [RHEL 8](https://docs.mattermost.com/install/install-rhel-8.html)
- [More server install guides](https://docs.mattermost.com/guides/deployment.html)

## Native mobile and desktop apps

In addition to the web interface, you can also download Mattermost clients for [Android](https://mattermost.com/pl/android-app/), [iOS](https://mattermost.com/pl/ios-app/), [Windows PC](https://docs.mattermost.com/install/desktop-app-install.html#windows-10-windows-8-1), [macOS](https://docs.mattermost.com/install/desktop-app-install.html#macos-10-9), and [Linux](https://docs.mattermost.com/install/desktop-app-install.html#linux).

[&lt;img src=&quot;https://user-images.githubusercontent.com/30978331/272826427-6200c98f-7319-42c3-86d4-0b33ae99e01a.png&quot; alt=&quot;Get Mattermost on Google Play&quot; height=&quot;50px&quot;/&gt;](https://mattermost.com/pl/android-app/)  [&lt;img src=&quot;https://developer.apple.com/assets/elements/badges/download-on-the-app-store.svg&quot; alt=&quot;Get Mattermost on the App Store&quot; height=&quot;50px&quot;/&gt;](https://itunes.apple.com/us/app/mattermost/id1257222717?mt=8)  [![Get Mattermost on Windows PC](https://user-images.githubusercontent.com/33878967/33095357-39cab8d2-ceb8-11e7-89a6-67dccc571ca3.png)](https://docs.mattermost.com/install/desktop.html#windows-10-windows-8-1-windows-7)  [![Get Mattermost on Mac OSX](https://user-images.githubusercontent.com/33878967/33095355-39a36f2a-ceb8-11e7-9b33-73d4f6d5d6c1.png)](https://docs.mattermost.com/install/desktop.html#macos-10-9)  [![Get Mattermost on Linux](https://user-images.githubusercontent.com/33878967/33095354-3990e256-ceb8-11e7-965d-b00a16e578de.png)](https://docs.mattermost.com/install/desktop.html#linux)

## Get security bulletins

Receive notifications of critical security updates. The sophistication of online attackers is perpetually increasing. If you&#039;re deploying Mattermost it&#039;s highly recommended you subscribe to the Mattermost Security Bulletin mailing list for updates on critical security releases.

[Subscribe here](https://mattermost.com/security-updates/#sign-up)

## Get involved

- [Contribute to Mattermost](https://handbook.mattermost.com/contributors/contributors/ways-to-contribute)
- [Find &quot;Help Wanted&quot; projects](https://github.com/mattermost/mattermost-server/issues?page=1&amp;q=is%3Aissue+is%3Aopen+%22Help+Wanted%22&amp;utf8=%E2%9C%93)
- [Join Developer Discussion on a Mattermost server for contributors](https://community.mattermost.com/signup_user_complete/?id=f1924a8db44ff3bb41c96424cdc20676)
- [Get Help With Mattermost](https://docs.mattermost.com/guides/get-help.html)

## Learn more

- [API options - webhooks, slash commands, drivers, and web service](https://api.mattermost.com/)
- [See who&#039;s using Mattermost](https://mattermost.com/customers/)
- [Browse over 700 Mattermost integrations](https://mattermost.com/marketplace/)

## License

See the [LICENSE file](LICENSE.txt) for license rights and limitations.

## Get the latest news

- **X** - Follow [Mattermost on X, formerly Twitter](https://twitter.com/mattermost).
- **Blog** - Get the latest updates from the [Mattermost blog](https://mattermost.com/blog/).
- **Facebook** - Follow [Mattermost on Facebook](https://www.facebook.com/MattermostHQ).
- **LinkedIn** - Follow [Mattermost on LinkedIn](https://www.linkedin.com/company/mattermost/).
- **Email** - Subscribe to our [newsletter](https://mattermost.us11.list-manage.com/subscribe?u=6cdba22349ae374e188e7ab8e&amp;id=2add1c8034) (1 or 2 per month).
- **Mattermost** - Join the ~contributors channel on [the Mattermost Community Server](https://community.mattermost.com).
- **IRC** - Join the #matterbridge channel on [Freenode](https://freenode.net/) (thanks to [matterircd](https://github.com/42wim/matterircd)).
- **YouTube** -  Subscribe to [Mattermost](https://www.youtube.com/@MattermostHQ).

## Contributing

[![Small Image](https://img.shields.io/badge/Contribute%20with-Gitpod-908a85?logo=gitpod)](https://gitpod.io/#https://github.com/mattermost/mattermost)

Please see [CONTRIBUTING.md](./CONTRIBUTING.md).
[Join the Mattermost Contributors server](https://community.mattermost.com/signup_user_complete/?id=codoy5s743rq5mk18i7u5ksz7e) to join community discussions about contributions, development, and more.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[yangshun/tech-interview-handbook]]></title>
            <link>https://github.com/yangshun/tech-interview-handbook</link>
            <guid>https://github.com/yangshun/tech-interview-handbook</guid>
            <pubDate>Tue, 16 Sep 2025 00:05:00 GMT</pubDate>
            <description><![CDATA[💯 Curated coding interview preparation materials for busy software engineers]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/yangshun/tech-interview-handbook">yangshun/tech-interview-handbook</a></h1>
            <p>💯 Curated coding interview preparation materials for busy software engineers</p>
            <p>Language: TypeScript</p>
            <p>Stars: 129,690</p>
            <p>Forks: 15,770</p>
            <p>Stars today: 22 stars today</p>
            <h2>README</h2><pre>&lt;h1 align=&quot;center&quot;&gt;Tech Interview Handbook&lt;/h1&gt;

&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.techinterviewhandbook.org/&quot;&gt;
    &lt;img src=&quot;assets/logo.svg&quot; alt=&quot;Tech Interview Handbook&quot; width=&quot;400&quot; /&gt;
  &lt;/a&gt;
  &lt;br /&gt;
  &lt;h3&gt;
    &lt;a href=&quot;https://www.techinterviewhandbook.org/&quot;&gt;Read on the website&lt;/a&gt;
  &lt;/h3&gt;
  &lt;p&gt;
    Join/follow us on &lt;a href=&quot;https://discord.com/invite/usMqNaPczq&quot; target=&quot;_blank&quot;&gt;Discord&lt;/a&gt; | &lt;a href=&quot;https://twitter.com/techinterviewhb&quot; target=&quot;_blank&quot;&gt;𝕏 (Twitter)&lt;/a&gt; | &lt;a href=&quot;https://t.me/techinterviewhandbook&quot; target=&quot;_blank&quot;&gt;Telegram&lt;/a&gt; |  &lt;a href=&quot;https://facebook.com/techinterviewhandbook&quot; target=&quot;_blank&quot;&gt;Facebook&lt;/a&gt;
  &lt;/p&gt;
&lt;/div&gt;

---

&lt;a href=&quot;https://www.techinterviewhandbook.org/software-engineering-interview-guide/&quot; target=&quot;_blank&quot;&gt;
  &lt;img src=&quot;assets/start-reading-button.jpg&quot; alt=&quot;Start Reading Tech Interview Handbook&quot; /&gt;
&lt;/a&gt;

## What is this?

Not everyone has the time to do a few hundred LeetCode questions. Here are _free and curated_ technical interview preparation materials for busy engineers, brought to you by me, the author of [Blind 75](https://www.teamblind.com/post/New-Year-Gift---Curated-List-of-Top-75-LeetCode-Questions-to-Save-Your-Time-OaM1orEU). Over 1,000,000 people have benefitted from this handbook!

Besides the usual algorithm questions, other **awesome** stuff includes:

- [Best practice questions](https://www.techinterviewhandbook.org/coding-interview-study-plan/) for coding interviews
- [Grind 75](https://www.techinterviewhandbook.org/grind75/) - the next evolution of Blind 75, bigger and better
- [How to prepare](https://www.techinterviewhandbook.org/coding-interview-prep/) for coding interviews
- [Coding interview best practices](https://www.techinterviewhandbook.org/coding-interview-cheatsheet/) - Straight-to-the-point Do&#039;s and Don&#039;ts
- [Algorithm cheatsheets and tips](https://www.techinterviewhandbook.org/algorithms/study-cheatsheet/) categorized by topic
- [Step-by-step Software Engineer resume guide](https://www.techinterviewhandbook.org/resume/) to prepare a FAANG-ready resume
- [Behavioral questions](https://www.techinterviewhandbook.org/behavioral-interview-questions/) asked by the top tech companies
- [Front end interview preparation](https://www.frontendinterviewhandbook.com)

Help from you in contributing content would be very much appreciated!

## Why would you read this?

This repository has **practical** content that covers all phases of a technical interview, from applying for a job to passing the interviews to offer negotiation. Technically competent candidates might still find the non-technical content helpful.

The information in this repository is condensed. Ultimately, the key to succeeding in technical interviews is consistent practice and I don&#039;t want to bore you with too many words. I tell you the minimum you need to know on how to go about navigating the interview process, you go and practice and land your dream job.

## Who is this for?

Anybody who wants to land a job at a tech company but is new to technical interviews, seasoned engineers who have not been on the other side of the interviewing table in a while and want to get back into the game, or anyone who wants to be better at technical interviewing.

---

&lt;div align=&quot;center&quot;&gt;
  &lt;h3&gt;💡 Stop grinding mindlessly! Study coding question patterns efficiently with
    &lt;a href=&quot;https://www.designgurus.io/course/grokking-the-coding-interview?aff=kJSIoU&quot;&gt;Grokking the Coding Interview&lt;/a&gt; by Design Gurus 💡
  &lt;/h3&gt;
&lt;/div&gt;

---

## How is this repository different?

There are many awesome books like &quot;Cracking the Coding Interview&quot; and interview-related repositories out there on GitHub, what makes this repository different? The difference is that many existing interview repositories contain mainly links to external resources whereas this repository contains top-quality curated content directly for your consumption.

Also, existing resources focus mainly on algorithm questions and lack coverage for more domain-specific and non-technical questions. This handbook aims to cover content beyond the typical algorithmic coding questions. 😎

## Looking for interview courses?

### [AlgoMonster](https://shareasale.com/r.cfm?b=1873647&amp;u=3114753&amp;m=114505&amp;urllink=&amp;afftrack=)

AlgoMonster aims to help you ace the technical interview **in the shortest time possible**. By Google engineers, AlgoMonster uses a data-driven approach to teach you the most useful key question patterns and has contents to help you quickly revise basic data structures and algorithms. Best of all, AlgoMonster is not subscription-based - pay a one-time fee and get **lifetime access**. [**Join today for a 70% discount →**](https://shareasale.com/r.cfm?b=1873647&amp;u=3114753&amp;m=114505&amp;urllink=&amp;afftrack=)

### [Grokking the Coding Interview: Patterns for Coding Questions](https://www.designgurus.io/course/grokking-the-coding-interview?aff=kJSIoU)

This course by Design Gurus expands upon the questions on the recommended practice questions but approaches the practicing from a questions pattern perspective, which is an approach I also agree with for learning and have personally used to get better at coding interviews. The course allows you to practice selected questions in Java, Python, C++, JavaScript and also provides sample solutions in those languages. **Learn and understand patterns, not memorize answers!** [**Get lifetime access today →**](https://www.designgurus.io/course/grokking-the-coding-interview?aff=kJSIoU)

## Looking for Front End content?

Front-end-related content has been moved to a separate website - [Front End Interview Handbook](https://frontendinterviewhandbook.com).

## Looking for System Design content?

We&#039;re still working on System Design content. In the meanwhile, check out [ByteByteGo&#039;s System Design Interview course](https://bytebytego.com?fpr=techinterviewhandbook) or Design Gurus&#039; [Grokking the System Design Interview course](https://www.designgurus.io/course/grokking-the-system-design-interview?aff=kJSIoU), which in our opinion are among the most useful resources for getting started on system design interviews preparation.

## Contents

A [Docusaurus](https://github.com/facebook/docusaurus) website has been created to provide a better reading experience. Check out the website [here](https://www.techinterviewhandbook.org)!

---

&lt;div align=&quot;center&quot;&gt;
  &lt;h3&gt;💡 Stop the grind and study with a plan! Developed by Google engineers, &lt;a href=&quot;https://shareasale.com/r.cfm?b=1873647&amp;u=3114753&amp;m=114505&amp;urllink=&amp;afftrack=&quot;&gt;AlgoMonster&lt;/a&gt; is the fastest way to get a software engineering job. &lt;a href=&quot;https://shareasale.com/r.cfm?b=1873647&amp;u=3114753&amp;m=114505&amp;urllink=&amp;afftrack=&quot;&gt;Join today for a 70% discount!&lt;/a&gt; 💡&lt;/h3&gt;
&lt;/div&gt;

---

## Related

If you are interested in how data structures are implemented, check out [Lago](https://github.com/yangshun/lago), a Data Structures and Algorithms library for JavaScript. It is pretty much still WIP but I intend to make it into a library that can be used in production and also a reference resource for revising Data Structures and Algorithms.

## Contributing

There are no formal contributing guidelines at the moment as things are still in flux and we might find a better approach to structure content as we go along. You are welcome to contribute whatever you think will be helpful to fellow engineers. If you would like to contribute content for different domains, feel free to create an issue or submit a pull request and we can discuss further.

### Contributors

This project exists thanks to all the people who contributed. [[Contribute](CONTRIBUTING.md)]. &lt;a href=&quot;https://github.com/yangshun/tech-interview-handbook/graphs/contributors&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/contributors.svg?width=890&amp;button=false&quot;&gt;&lt;/a&gt;

### Backers

Thank you to all our backers! 🙏 [[Become a backer](https://opencollective.com/tech-interview-handbook#backer)]

&lt;a href=&quot;https://opencollective.com/tech-interview-handbook#backers&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/backers.svg?width=890&quot;&gt;&lt;/a&gt;

&lt;a href=&quot;https://www.buymeacoffee.com/yangshun&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png&quot; alt=&quot;Buy Me A Coffee&quot; style=&quot;height: auto !important; width: auto !important;&quot;&gt;&lt;/a&gt;

### Sponsors

Support this project by becoming a sponsor. Your logo/profile picture will show up here with a link to your website. [[Become a sponsor](https://opencollective.com/tech-interview-handbook#sponsor)]

&lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/0/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/0/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/1/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/1/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/2/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/2/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/3/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/3/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/4/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/4/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/5/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/5/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/6/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/6/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/7/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/7/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/8/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/8/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/9/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/9/avatar.svg&quot;&gt;&lt;/a&gt;

## Disclaimer

I am providing code in the repository to you under an open source license. Because this is my personal repository, the license you receive to my code is from me and not my employer (Meta).
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[shadcn-ui/ui]]></title>
            <link>https://github.com/shadcn-ui/ui</link>
            <guid>https://github.com/shadcn-ui/ui</guid>
            <pubDate>Tue, 16 Sep 2025 00:04:59 GMT</pubDate>
            <description><![CDATA[A set of beautifully-designed, accessible components and a code distribution platform. Works with your favorite frameworks. Open Source. Open Code.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/shadcn-ui/ui">shadcn-ui/ui</a></h1>
            <p>A set of beautifully-designed, accessible components and a code distribution platform. Works with your favorite frameworks. Open Source. Open Code.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 94,857</p>
            <p>Forks: 6,711</p>
            <p>Stars today: 59 stars today</p>
            <h2>README</h2><pre># shadcn/ui

Accessible and customizable components that you can copy and paste into your apps. Free. Open Source. **Use this to build your own component library**.

![hero](apps/www/public/og.jpg)

## Documentation

Visit http://ui.shadcn.com/docs to view the documentation.

## Contributing

Please read the [contributing guide](/CONTRIBUTING.md).

## License

Licensed under the [MIT license](https://github.com/shadcn/ui/blob/main/LICENSE.md).
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[sindresorhus/type-fest]]></title>
            <link>https://github.com/sindresorhus/type-fest</link>
            <guid>https://github.com/sindresorhus/type-fest</guid>
            <pubDate>Tue, 16 Sep 2025 00:04:58 GMT</pubDate>
            <description><![CDATA[A collection of essential TypeScript types]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/sindresorhus/type-fest">sindresorhus/type-fest</a></h1>
            <p>A collection of essential TypeScript types</p>
            <p>Language: TypeScript</p>
            <p>Stars: 16,083</p>
            <p>Forks: 629</p>
            <p>Stars today: 15 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
    </channel>
</rss>