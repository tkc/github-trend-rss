<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for typescript - TypeScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for typescript.</description>
        <lastBuildDate>Wed, 06 Aug 2025 00:05:13 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[dyad-sh/dyad]]></title>
            <link>https://github.com/dyad-sh/dyad</link>
            <guid>https://github.com/dyad-sh/dyad</guid>
            <pubDate>Wed, 06 Aug 2025 00:05:13 GMT</pubDate>
            <description><![CDATA[Free, local, open-source AI app builder ‚ú® v0 / lovable / Bolt alternative üåü Star if you like it!]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/dyad-sh/dyad">dyad-sh/dyad</a></h1>
            <p>Free, local, open-source AI app builder ‚ú® v0 / lovable / Bolt alternative üåü Star if you like it!</p>
            <p>Language: TypeScript</p>
            <p>Stars: 9,019</p>
            <p>Forks: 891</p>
            <p>Stars today: 2,004 stars today</p>
            <h2>README</h2><pre># dyad

Dyad is a local, open-source AI app builder. It&#039;s fast, private, and fully under your control ‚Äî like Lovable, v0, or Bolt, but running right on your machine.

[![Image](https://github.com/user-attachments/assets/f6c83dfc-6ffd-4d32-93dd-4b9c46d17790)](http://dyad.sh/)

More info at: [http://dyad.sh/](http://dyad.sh/)

## üöÄ Features

- ‚ö°Ô∏è **Local**: Fast, private and no lock-in.
- üõ† **Bring your own keys**: Use your own AI API keys ‚Äî no vendor lock-in.
- üñ•Ô∏è **Cross-platform**: Easy to run on Mac or Windows.

## üì¶ Download

No sign-up required. Just download and go.

### [üëâ Download for your platform](https://www.dyad.sh/#download)

**Dyad** is open-source (Apache 2.0 licensed).

If you&#039;re interested in contributing to dyad, please read our [contributing](./CONTRIBUTING.md) doc.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[simstudioai/sim]]></title>
            <link>https://github.com/simstudioai/sim</link>
            <guid>https://github.com/simstudioai/sim</guid>
            <pubDate>Wed, 06 Aug 2025 00:05:12 GMT</pubDate>
            <description><![CDATA[Sim is an open-source AI agent workflow builder. Sim Studio's interface is a lightweight, intuitive way to quickly build and deploy LLMs that connect with your favorite tools.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/simstudioai/sim">simstudioai/sim</a></h1>
            <p>Sim is an open-source AI agent workflow builder. Sim Studio's interface is a lightweight, intuitive way to quickly build and deploy LLMs that connect with your favorite tools.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 6,563</p>
            <p>Forks: 889</p>
            <p>Stars today: 120 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;apps/sim/public/static/sim.png&quot; alt=&quot;Sim Logo&quot; width=&quot;500&quot;/&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.apache.org/licenses/LICENSE-2.0&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/License-Apache%202.0-blue.svg&quot; alt=&quot;License: Apache-2.0&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://discord.gg/Hr4UWYEcTT&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Discord-Join%20Server-7289DA?logo=discord&amp;logoColor=white&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://x.com/simdotai&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/simstudioai?style=social&quot; alt=&quot;Twitter&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://github.com/simstudioai/sim/pulls&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg&quot; alt=&quot;PRs welcome&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://docs.sim.ai&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Docs-visit%20documentation-blue.svg&quot; alt=&quot;Documentation&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;strong&gt;Sim&lt;/strong&gt; is a lightweight, user-friendly platform for building AI agent workflows.
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;apps/sim/public/static/demo.gif&quot; alt=&quot;Sim Demo&quot; width=&quot;800&quot;/&gt;
&lt;/p&gt;

## Getting Started

1. Use our [cloud-hosted version](https://sim.ai)
2. Self-host using one of the methods below

## Self-Hosting Options

### Option 1: NPM Package (Simplest)

The easiest way to run Sim locally is using our [NPM package](https://www.npmjs.com/package/simstudio?activeTab=readme):

```bash
npx simstudio
```

After running these commands, open [http://localhost:3000/](http://localhost:3000/) in your browser.

#### Options

- `-p, --port &lt;port&gt;`: Specify the port to run Sim on (default: 3000)
- `--no-pull`: Skip pulling the latest Docker images

#### Requirements

- Docker must be installed and running on your machine

### Option 2: Docker Compose

```bash
# Clone the repository
git clone https://github.com/simstudioai/sim.git

# Navigate to the project directory
cd sim

# Start Sim
docker compose -f docker-compose.prod.yml up -d
```

Access the application at [http://localhost:3000/](http://localhost:3000/)

#### Using Local Models

To use local models with Sim:

1. Pull models using our helper script:

```bash
./apps/sim/scripts/ollama_docker.sh pull &lt;model_name&gt;
```

2. Start Sim with local model support:

```bash
# With NVIDIA GPU support
docker compose --profile local-gpu -f docker-compose.ollama.yml up -d

# Without GPU (CPU only)
docker compose --profile local-cpu -f docker-compose.ollama.yml up -d

# If hosting on a server, update the environment variables in the docker-compose.prod.yml file to include the server&#039;s public IP then start again (OLLAMA_URL to i.e. http://1.1.1.1:11434)
docker compose -f docker-compose.prod.yml up -d
```

### Option 3: Dev Containers

1. Open VS Code with the [Remote - Containers extension](https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-containers)
2. Open the project and click &quot;Reopen in Container&quot; when prompted
3. Run `bun run dev:full` in the terminal or use the `sim-start` alias
   - This starts both the main application and the realtime socket server

### Option 4: Manual Setup

**Requirements:**
- [Bun](https://bun.sh/) runtime
- PostgreSQL 12+ with [pgvector extension](https://github.com/pgvector/pgvector) (required for AI embeddings)

**Note:** Sim uses vector embeddings for AI features like knowledge bases and semantic search, which requires the `pgvector` PostgreSQL extension.

1. Clone and install dependencies:

```bash
git clone https://github.com/simstudioai/sim.git
cd sim
bun install
```

2. Set up PostgreSQL with pgvector:

You need PostgreSQL with the `vector` extension for embedding support. Choose one option:

**Option A: Using Docker (Recommended)**
```bash
# Start PostgreSQL with pgvector extension
docker run --name simstudio-db \
  -e POSTGRES_PASSWORD=your_password \
  -e POSTGRES_DB=simstudio \
  -p 5432:5432 -d \
  pgvector/pgvector:pg17
```

**Option B: Manual Installation**
- Install PostgreSQL 12+ and the pgvector extension
- See [pgvector installation guide](https://github.com/pgvector/pgvector#installation)

3. Set up environment:

```bash
cd apps/sim
cp .env.example .env  # Configure with required variables (DATABASE_URL, BETTER_AUTH_SECRET, BETTER_AUTH_URL)
```

Update your `.env` file with the database URL:
```bash
DATABASE_URL=&quot;postgresql://postgres:your_password@localhost:5432/simstudio&quot;
```

4. Set up the database:

```bash
bunx drizzle-kit migrate 
```

5. Start the development servers:

**Recommended approach - run both servers together (from project root):**

```bash
bun run dev:full
```

This starts both the main Next.js application and the realtime socket server required for full functionality.

**Alternative - run servers separately:**

Next.js app (from project root):
```bash
bun run dev
```

Realtime socket server (from `apps/sim` directory in a separate terminal):
```bash
cd apps/sim
bun run dev:sockets
```

## Tech Stack

- **Framework**: [Next.js](https://nextjs.org/) (App Router)
- **Runtime**: [Bun](https://bun.sh/)
- **Database**: PostgreSQL with [Drizzle ORM](https://orm.drizzle.team)
- **Authentication**: [Better Auth](https://better-auth.com)
- **UI**: [Shadcn](https://ui.shadcn.com/), [Tailwind CSS](https://tailwindcss.com)
- **State Management**: [Zustand](https://zustand-demo.pmnd.rs/)
- **Flow Editor**: [ReactFlow](https://reactflow.dev/)
- **Docs**: [Fumadocs](https://fumadocs.vercel.app/)
- **Monorepo**: [Turborepo](https://turborepo.org/)
- **Realtime**: [Socket.io](https://socket.io/)
- **Background Jobs**: [Trigger.dev](https://trigger.dev/)

## Contributing

We welcome contributions! Please see our [Contributing Guide](.github/CONTRIBUTING.md) for details.

## License

This project is licensed under the Apache License 2.0 - see the [LICENSE](LICENSE) file for details.

&lt;p align=&quot;center&quot;&gt;Made with ‚ù§Ô∏è by the Sim Team&lt;/p&gt;</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[actualbudget/actual]]></title>
            <link>https://github.com/actualbudget/actual</link>
            <guid>https://github.com/actualbudget/actual</guid>
            <pubDate>Wed, 06 Aug 2025 00:05:11 GMT</pubDate>
            <description><![CDATA[A local-first personal finance app]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/actualbudget/actual">actualbudget/actual</a></h1>
            <p>A local-first personal finance app</p>
            <p>Language: TypeScript</p>
            <p>Stars: 21,114</p>
            <p>Forks: 1,699</p>
            <p>Stars today: 364 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;/demo.png&quot; alt=&quot;Actualbudget&quot; /&gt;
&lt;/p&gt;

## Getting Started

Actual is a local-first personal finance tool. It is 100% free and open-source, written in NodeJS, it has a synchronization element so that all your changes can move between devices without any heavy lifting.

If you are interested in contributing, or want to know how development works, see our [contributing](https://actualbudget.org/docs/contributing/) document we would love to have you.

Want to say thanks? Click the ‚≠ê at the top of the page.

## Key Links

- Actual [discord](https://discord.gg/pRYNYr4W5A) community.
- Actual [Community Documentation](https://actualbudget.org/docs)
- [Frequently asked questions](https://actualbudget.org/docs/faq)

## Installation

There are four ways to deploy Actual:

1. One-click deployment [via PikaPods](https://www.pikapods.com/pods?run=actual) (~1.40 $/month) - recommended for non-technical users
1. Managed hosting [via Fly.io](https://actualbudget.org/docs/install/fly) (~1.50 $/month)
1. Self-hosted by using [a Docker image](https://actualbudget.org/docs/install/docker)
1. Local-only apps - [downloadable Windows, Mac and Linux apps](https://actualbudget.org/download/) you can run on your device

Learn more in the [installation instructions docs](https://actualbudget.org/docs/install/).

## Ready to Start Budgeting?

Read about [Envelope budgeting](https://actualbudget.org/docs/getting-started/envelope-budgeting) to know more about the idea behind Actual Budget.

### Are you new to budgeting or want to start fresh?

Check out the community&#039;s [Starting Fresh](https://actualbudget.org/docs/getting-started/starting-fresh) guide so you can quickly get up and running!

### Are you migrating from other budgeting apps?

Check out the community&#039;s [Migration](https://actualbudget.org/docs/migration/) guide to start jumping on the Actual Budget train!

## Documentation

We have a wide range of documentation on how to use Actual, this is all available in our [Community Documentation](https://actualbudget.org/docs), this includes topics on Budgeting, Account Management, Tips &amp; Tricks and some documentation for developers.

## Contributing

Actual is a community driven product. Learn more about [contributing to Actual](https://actualbudget.org/docs/contributing/).

### Code structure

The Actual app is split up into a few packages:

- loot-core - The core application that runs on any platform
- desktop-client - The desktop UI
- desktop-electron - The desktop app

More information on the project structure is available in our [community documentation](https://actualbudget.org/docs/contributing/project-details).

### Feature Requests

Current feature requests can be seen [here](https://github.com/actualbudget/actual/issues?q=is%3Aissue+label%3A%22needs+votes%22+sort%3Areactions-%2B1-desc).
Vote for your favorite requests by reacting :+1: to the top comment of the request.

To add new feature requests, open a new Issue of the &quot;Feature Request&quot; type.

### Translation

Make Actual Budget accessible to more people by helping with the [Internationalization](https://actualbudget.org/docs/contributing/i18n/) of Actual. We are using a crowd sourcing tool to manage the translations, see our [Weblate Project](https://hosted.weblate.org/projects/actualbudget/). Weblate proudly supports open-source software projects through their [Libre plan](https://weblate.org/en/hosting/#libre).

&lt;a href=&quot;https://hosted.weblate.org/engage/actualbudget/&quot;&gt;
&lt;img src=&quot;https://hosted.weblate.org/widget/actualbudget/actual/287x66-grey.png&quot; alt=&quot;Translation status&quot; /&gt;
&lt;/a&gt;

## Repo Activity

![Alt](https://repobeats.axiom.co/api/embed/e20537dd8b74956f86736726ccfbc6f0565bec22.svg &#039;Repobeats analytics image&#039;)

## Sponsors

Thanks to our wonderful sponsors who make Actual Budget possible!

&lt;a href=&quot;https://www.netlify.com&quot;&gt; &lt;img src=&quot;https://www.netlify.com/v3/img/components/netlify-color-accent.svg&quot; alt=&quot;Deploys by Netlify&quot; /&gt; &lt;/a&gt;
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[wg-easy/wg-easy]]></title>
            <link>https://github.com/wg-easy/wg-easy</link>
            <guid>https://github.com/wg-easy/wg-easy</guid>
            <pubDate>Wed, 06 Aug 2025 00:05:10 GMT</pubDate>
            <description><![CDATA[The easiest way to run WireGuard VPN + Web-based Admin UI.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/wg-easy/wg-easy">wg-easy/wg-easy</a></h1>
            <p>The easiest way to run WireGuard VPN + Web-based Admin UI.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 21,795</p>
            <p>Forks: 2,038</p>
            <p>Stars today: 388 stars today</p>
            <h2>README</h2><pre># WireGuard Easy

[![Build &amp; Publish latest Image](https://github.com/wg-easy/wg-easy/actions/workflows/deploy.yml/badge.svg?branch=production)](https://github.com/wg-easy/wg-easy/actions/workflows/deploy.yml)
[![Lint](https://github.com/wg-easy/wg-easy/actions/workflows/lint.yml/badge.svg?branch=master)](https://github.com/wg-easy/wg-easy/actions/workflows/lint.yml)
[![GitHub Stars](https://img.shields.io/github/stars/wg-easy/wg-easy)](https://github.com/wg-easy/wg-easy/stargazers)
[![License](https://img.shields.io/github/license/wg-easy/wg-easy)](LICENSE)
[![GitHub Release](https://img.shields.io/github/v/release/wg-easy/wg-easy)](https://github.com/wg-easy/wg-easy/releases/latest)
[![Image Pulls](https://img.shields.io/badge/image_pulls-12M+-blue)](https://github.com/wg-easy/wg-easy/pkgs/container/wg-easy)

You have found the easiest way to install &amp; manage WireGuard on any Linux host!

&lt;!-- TOOD: update screenshot --&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;./assets/screenshot.png&quot; width=&quot;802&quot; alt=&quot;wg-easy Screenshot&quot; /&gt;
&lt;/p&gt;

## Features

- All-in-one: WireGuard + Web UI.
- Easy installation, simple to use.
- List, create, edit, delete, enable &amp; disable clients.
- Show a client&#039;s QR code.
- Download a client&#039;s configuration file.
- Statistics for which clients are connected.
- Tx/Rx charts for each connected client.
- Gravatar support.
- Automatic Light / Dark Mode
- Multilanguage Support
- One Time Links
- Client Expiration
- Prometheus metrics support
- IPv6 support
- CIDR support
- 2FA support

&gt; [!NOTE]
&gt; To better manage documentation for this project, it has its own site here: [https://wg-easy.github.io/wg-easy/latest](https://wg-easy.github.io/wg-easy/latest)

- [Getting Started](https://wg-easy.github.io/wg-easy/latest/getting-started/)
- [Basic Installation](https://wg-easy.github.io/wg-easy/latest/examples/tutorials/basic-installation/)
- [Caddy](https://wg-easy.github.io/wg-easy/latest/examples/tutorials/caddy/)
- [Traefik](https://wg-easy.github.io/wg-easy/latest/examples/tutorials/traefik/)
- [Podman](https://wg-easy.github.io/wg-easy/latest/examples/tutorials/podman-nft/)
- [AdGuard Home](https://wg-easy.github.io/wg-easy/latest/examples/tutorials/adguard/)

&gt; [!NOTE]
&gt; If you want to migrate from the old version to the new version, you can find the migration guide here: [Migration Guide](https://wg-easy.github.io/wg-easy/latest/advanced/migrate/)

## Installation

This is a quick start guide to get you up and running with WireGuard Easy.

For a more detailed installation guide, please refer to the [Getting Started](https://wg-easy.github.io/wg-easy/latest/getting-started/) page.

### 1. Install Docker

If you haven&#039;t installed Docker yet, install it by running as root:

```shell
curl -sSL https://get.docker.com | sh
exit
```

And log in again.

### 2. Run WireGuard Easy

The easiest way to run WireGuard Easy is with Docker Compose.

Just follow [these steps](https://wg-easy.github.io/wg-easy/latest/examples/tutorials/basic-installation/) in the detailed documentation.

You can also install WireGuard Easy with the [docker run command](https://wg-easy.github.io/wg-easy/latest/examples/tutorials/docker-run/) or via [podman](https://wg-easy.github.io/wg-easy/latest/examples/tutorials/podman-nft/).

Now [setup a reverse proxy](https://wg-easy.github.io/wg-easy/latest/examples/tutorials/basic-installation/#setup-reverse-proxy) to be able to access the Web UI securely from the internet. This step is optional, just make sure to follow the guide [here](https://wg-easy.github.io/wg-easy/latest/examples/tutorials/reverse-proxyless/) if you decide not to do it.

## Donate

Are you enjoying this project? Consider donating.

Founder: [Buy Emile a beer!](https://github.com/sponsors/WeeJeWel) üçª

Maintainer: [Buy kaaax0815 a coffee!](https://github.com/sponsors/kaaax0815) ‚òï

## Development

### Prerequisites

- Docker
- Node LTS &amp; corepack enabled
- Visual Studio Code

### Dev Server

This starts the development server with docker

```shell
pnpm dev
```

### Update Auto Imports

If you add something that should be auto-importable and VSCode complains, run:

```shell
cd src
pnpm install
cd ..
```

### Test Cli

This starts the cli with docker

```shell
pnpm cli:dev
```

## License

This project is licensed under the AGPL-3.0-only License - see the [LICENSE](LICENSE) file for details

This project is not affiliated, associated, authorized, endorsed by, or in any way officially connected with Jason A. Donenfeld, ZX2C4 or Edge Security

&quot;WireGuard&quot; and the &quot;WireGuard&quot; logo are registered trademarks of Jason A. Donenfeld
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[thewh1teagle/vibe]]></title>
            <link>https://github.com/thewh1teagle/vibe</link>
            <guid>https://github.com/thewh1teagle/vibe</guid>
            <pubDate>Wed, 06 Aug 2025 00:05:09 GMT</pubDate>
            <description><![CDATA[Transcribe on your own!]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/thewh1teagle/vibe">thewh1teagle/vibe</a></h1>
            <p>Transcribe on your own!</p>
            <p>Language: TypeScript</p>
            <p>Stars: 3,365</p>
            <p>Forks: 197</p>
            <p>Stars today: 50 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;a target=&quot;blank&quot; href=&quot;https://github.com/thewh1teagle/vibe&quot;&gt;
    &lt;img
        width=&quot;96px&quot;
        alt=&quot;Vibe logo&quot;
        src=&quot;./design/logo.png&quot;
    /&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;h1 align=&quot;center&quot;&gt;Vibe - Transcribe on your own!&lt;/h1&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;strong&gt;‚å®Ô∏è Transcribe audio / video offline using OpenAI Whisper&lt;/strong&gt;
  &lt;br/&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a target=&quot;_blank&quot; href=&quot;https://thewh1teagle.github.io/vibe/&quot;&gt;
    üîó Download Vibe
  &lt;/a&gt;
    &amp;nbsp; | &amp;nbsp; Give it a Star ‚≠ê | &amp;nbsp;
    &lt;a target=&quot;_blank&quot; href=&quot;https://thewh1teagle.github.io/vibe/?action=support-vibe&quot;&gt;Support the project ü§ù&lt;/a&gt;
&lt;/p&gt;

&lt;hr /&gt;

## Screenshots

&lt;p align=&quot;center&quot;&gt;
	&lt;a target=&quot;_blank&quot; href=&quot;https://thewh1teagle.github.io/vibe/&quot;&gt;
    	&lt;img width=600 src=&quot;https://github.com/thewh1teagle/vibe/assets/61390950/22779ac6-9e49-4c21-b528-29647f039da2&quot;&gt;
	&lt;/a&gt;
&lt;/p&gt;

# Features üåü

-   üåç Transcribe almost every language
-   üîí Ultimate privacy: fully offline transcription, no data ever leaves your device
-   üé® User friendly design
-   üéôÔ∏è Transcribe audio / video
-   üé∂ Option to transcribe audio from popular websites (YouTube, Vimeo, Facebook, Twitter and more!)
-   üìÇ Batch transcribe multiple files!
-   üìù Support `SRT`, `VTT`, `TXT`, `HTML`, `PDF`, `JSON`, `DOCX` formats
-   üëÄ Realtime preview
-   ‚ú® Summarize transcripts: Get quick, multilingual summaries using the Claude API
-   üß† Ollama support: Do local AI analysis and batch summaries with Ollama
-   üåê Translate to English from any language
-   üñ®Ô∏è Print transcript directly to any printer
-   üîÑ Automatic updates
-   üíª Optimized for `GPU` (`macOS`, `Windows`, `Linux`)
-   üéÆ Optimized for `Nvidia` / `AMD` / `Intel` GPUs! (`Vulkan`/`CoreML`)
-   üîß Total Freedom: Customize Models Easily via Settings
-   ‚öôÔ∏è Model arguments for advanced users
-   ‚è≥ Transcribe system audio
-   üé§ Transcribe from microphone
-   üñ•Ô∏è CLI support: Use Vibe directly from the command line interface! (see `--help`)
-   üë• Speaker diarization
-   üì± ~iOS &amp; Android support~ (coming soon)
-   üì• Integrate custom models from your own site: Use `vibe://download/?url=&lt;model url&gt;`
-   üìπ Choose caption length optimized for videos / reels
-   ‚ö° HTTP API with Swagger docs! (use `--server` and open `http://&lt;host&gt;:3022/docs` for docs)

# Supported platforms üñ•Ô∏è

`MacOS`
`Windows`
`Linux`

# Contribute ü§ù

PRs are welcomed!
In addition, you&#039;re welcome to add translations.

We would like to express our sincere gratitude to all the contributors.

&lt;a href=&quot;https://github.com/thewh1teagle/vibe/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=thewh1teagle/vibe&quot; /&gt;
&lt;/a&gt;

# Community

[![Discord](https://img.shields.io/badge/chat-discord-7289da.svg)](https://discord.gg/EcxWSstQN8)

# Roadmap üõ£Ô∏è

You can see the roadmap in [Vibe-Roadmap](https://github.com/users/thewh1teagle/projects/5/views/1)

# Add translation üåê

1. Copy `en` from `desktop/src-tauri/locales` folder to new directory eg `pt-BR` (use [bcp47 language code](https://gist.github.com/thewh1teagle/c8877e5c4c5e2780754ddd065ae2592e))
2. Change every value in the files there, to the new language and keep the keys as is
3. create PR / issue in Github

In addition you can add translation to [Vibe website](https://thewh1teagle.github.io/vibe/) by creating new files in the `landing/static/locales`.

# Docs üìÑ

see [Vibe Docs](https://github.com/thewh1teagle/vibe/tree/main/docs)

# I want to know more!

Medium [post](https://medium.com/@thewh1teagle/creating-vibe-multilingual-audio-transcription-872ab6d9dbb0)

# Issue report

You can open [new issue](https://github.com/thewh1teagle/vibe/issues/new?assignees=octocat&amp;labels=bug&amp;projects=&amp;template=bug_report.yaml&amp;title=[Short+title]) and it&#039;s recommend to check [debug.md](docs/debug.md) first.

# Privacy Policy üîí

Your privacy is important to us. Please review our [Privacy Policy](http://thewh1teagle.github.io/vibe/?action=open-privacy-policy) to understand how we handle your data.

# Credits

Thanks for [tauri.app](https://tauri.app/) for making the best apps framework I ever seen

Thanks for [wang-bin/avbuild](https://github.com/wang-bin/avbuild) for pre built `ffmpeg`

Thanks for [github.com/whisper.cpp](https://github.com/ggerganov/whisper.cpp) for outstanding interface for the AI model.

Thanks for [openai.com](https://openai.com/) for their amazing [Whisper model](https://openai.com/research/whisper)

Thanks for [github.com](https://github.com/) for their support in open source projects, providing infastructure completely free.

And for all the amazing open source frameworks and libraries which this project uses...
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[dataelement/bisheng]]></title>
            <link>https://github.com/dataelement/bisheng</link>
            <guid>https://github.com/dataelement/bisheng</guid>
            <pubDate>Wed, 06 Aug 2025 00:05:08 GMT</pubDate>
            <description><![CDATA[BISHENG is an open LLM devops platform for next generation Enterprise AI applications. Powerful and comprehensive features include: GenAI workflow, RAG, Agent, Unified model management, Evaluation, SFT, Dataset Management, Enterprise-level System Management, Observability and more.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/dataelement/bisheng">dataelement/bisheng</a></h1>
            <p>BISHENG is an open LLM devops platform for next generation Enterprise AI applications. Powerful and comprehensive features include: GenAI workflow, RAG, Agent, Unified model management, Evaluation, SFT, Dataset Management, Enterprise-level System Management, Observability and more.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 9,301</p>
            <p>Forks: 1,517</p>
            <p>Stars today: 15 stars today</p>
            <h2>README</h2><pre>**Proudly made by ChineseÔºåMay we, like the creators of Deepseek and Black Myth: Wukong, bring more wonder and greatness to the world.**

&gt; Ê∫êËá™‰∏≠ÂõΩÂå†ÂøÉÔºåÂ∏åÊúõÊàë‰ª¨ËÉΩÂÉè [Deepseek]„ÄÅ[ÈªëÁ•ûËØùÔºöÊÇüÁ©∫] Âõ¢Èòü‰∏ÄÊ†∑ÔºåÁªô‰∏ñÁïåÂ∏¶Êù•Êõ¥Â§öÁæéÂ•Ω„ÄÇ

&lt;img src=&quot;https://dataelem.com/bs/face.png&quot; alt=&quot;Bisheng banner&quot;&gt;

&lt;p align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://dataelem.feishu.cn/wiki/ZxW6wZyAJicX4WkG0NqcWsbynde&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/docs-Wiki-brightgreen&quot;&gt;&lt;/a&gt;
    &lt;img src=&quot;https://img.shields.io/github/license/dataelement/bisheng&quot; alt=&quot;license&quot;/&gt;
    &lt;a href=&quot;&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/last-commit/dataelement/bisheng&quot;&gt;&lt;/a&gt;
    &lt;a href=&quot;https://star-history.com/#dataelement/bisheng&amp;Timeline&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/dataelement/bisheng?color=yellow&quot;&gt;&lt;/a&gt; 
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;./README_CN.md&quot;&gt;ÁÆÄ‰Ωì‰∏≠Êñá&lt;/a&gt; |
  &lt;a href=&quot;./README.md&quot;&gt;English&lt;/a&gt; |
  &lt;a href=&quot;./README_JPN.md&quot;&gt;Êó•Êú¨Ë™û&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://trendshift.io/repositories/717&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://trendshift.io/api/badge/repositories/717&quot; alt=&quot;dataelement%2Fbisheng | Trendshift&quot; style=&quot;width: 250px; height: 55px;&quot; width=&quot;250&quot; height=&quot;55&quot;/&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;div class=&quot;column&quot; align=&quot;middle&quot;&gt;
  &lt;!-- &lt;a href=&quot;https://bisheng.slack.com/join/shared_invite/&quot;&gt; --&gt;
    &lt;!-- &lt;img src=&quot;https://img.shields.io/badge/Join-Slack-orange&quot; alt=&quot;join-slack&quot;/&gt; --&gt;
  &lt;/a&gt;
  &lt;!-- &lt;img src=&quot;https://img.shields.io/github/license/bisheng-io/bisheng&quot; alt=&quot;license&quot;/&gt; --&gt;
  &lt;!-- &lt;img src=&quot;https://img.shields.io/docker/pulls/bisheng-io/bisheng&quot; alt=&quot;docker-pull-count&quot; /&gt; --&gt;
&lt;/div&gt;


BISHENG is an open LLM application devops platform, focusing on enterprise scenarios. It has been used by a large number of industry leading organizations and Fortune 500 companies.

&quot;Bi Sheng&quot; was the inventor of movable type printing, which played a vital role in promoting the transmission of human knowledge. We hope that BISHENG can also provide strong support for the widespread implementation of intelligent applications. Everyone is welcome to participate.


## Features 
1. Unique [BISHENG Workflow](https://dataelem.feishu.cn/wiki/R7HZwH5ZGiJUDrkHZXicA9pInif)
   - üß© **Independent and comprehensive application orchestration framework**: Enables the execution of various tasks within a single framework (while similar products rely on bot invocation or separate chatflow and workflow modules for different tasks).
   - üîÑ **Human in the loop**: Allows users to intervene and provide feedback during the execution of workflows (including multi-turn conversations), whereas similar products can only execute workflows from start to finish without intervention.
   - üí• **Powerful**: Supports loops, parallelism, batch processing, conditional logic, and free combination of all logic components. It also handles complex scenarios such as multi-type input/output, report generation, content review, and more.
   - üñêÔ∏è **User-friendly and intuitive**: Operations like loops, parallelism, and batch processing, which require specialized components in similar products, can be easily visualized in BISHENG as a &quot;flowchart&quot; (drawing a loop forms a loop, aligning elements creates parallelism, and selecting multiple items enables batch processing).
   &lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;https://dataelem.com/bs/bisheng_workflow.png&quot; alt=&quot;sence0&quot;&gt;&lt;/p&gt;

2. &lt;b&gt;Designed for Enterprise Applications&lt;/b&gt;: Document review, fixed-layout report generation, multi-agent collaboration, policy update comparison, support ticket assistance, customer service assistance, meeting minutes generation, resume screening, call record analysis, unstructured data governance, knowledge mining, data analysis, and more. 

‚Äã	The platform supports the construction of &lt;b&gt;highly complex enterprise application scenarios&lt;/b&gt; and offers &lt;b&gt;deep optimization&lt;/b&gt; 	with hundreds of components and thousands of parameters.
&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;https://dataelem.com/bs/chat.png&quot; alt=&quot;sence1&quot;&gt;&lt;/p&gt;

3. &lt;b&gt;Enterprise-grade&lt;/b&gt; features are the fundamental guarantee for application implementation: security review, RBAC, user group management, traffic control by group, SSO/LDAP, vulnerability scanning and patching, high availability deployment solutions, monitoring, statistics, and more.
&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;https://dataelem.com/bs/pro.png&quot; alt=&quot;sence2&quot;&gt;&lt;/p&gt;

4. &lt;b&gt;High-Precision Document Parsing&lt;/b&gt;: Our high-precision document parsing model is trained on a vast amount of high-quality data accumulated over past 5 years. It includes high-precision printed text, handwritten text, and rare character recognition models, table recognition models, layout analysis models, and seal models., table recognition models, layout analysis models, and seal models. You can deploy it privately for free.
&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;https://dataelem.com/bs/ocr.png&quot; alt=&quot;sence3&quot;&gt;&lt;/p&gt;

5. A community for sharing best practices across various enterprise scenarios: An open repository of application cases and best practices.
## Quick start 

Please ensure the following conditions are met before installing BISHENG:
- CPU &gt;= 4 Virtual Cores
- RAM &gt;= 16 GB
- Docker 19.03.9+
- Docker Compose 1.25.1+
&gt; Recommended hardware condition: 18 virtual cores, 48G. In addition to installing BISHENG, we will also install the following third-party components by default: ES, Milvus, and Onlyoffice.

Download BISHENG
```bash
git clone https://github.com/dataelement/bisheng.git
# Enter the installation directory
cd bisheng/docker

# If the system does not have the git command, you can download the BISHENG code as a zip file.
wget https://github.com/dataelement/bisheng/archive/refs/heads/main.zip
# Unzip and enter the installation directory
unzip main.zip &amp;&amp; cd bisheng-main/docker
```
Start BISHENG
```bash
docker compose -f docker-compose.yml -p bisheng up -d
```
After the startup is complete, access http://IP:3001 in the browser. The login page will appear, proceed with user registration. 

By default, the first registered user will become the system admin. 

For more installation and deployment issues, refer to:Ôºö[Self-hosting](https://dataelem.feishu.cn/wiki/BSCcwKd4Yiot3IkOEC8cxGW7nPc)

## Acknowledgement 
This repo benefits from [langchain](https://github.com/langchain-ai/langchain) [langflow](https://github.com/logspace-ai/langflow) [unstructured](https://github.com/Unstructured-IO/unstructured) and [LLaMA-Factory](https://github.com/hiyouga/LLaMA-Factory) . Thanks for their wonderful works.

&lt;b&gt;Thank you to our contributorsÔºö&lt;/b&gt;

&lt;a href=&quot;https://github.com/dataelement/bisheng/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=dataelement/bisheng&quot; /&gt;
&lt;/a&gt;



## Community &amp; contact 
Welcome to join our discussion group

&lt;img src=&quot;https://www.dataelem.com/nstatic/qrcode.png&quot; alt=&quot;Wechat QR Code&quot;&gt;


&lt;!--
## Star History

[![Star History Chart](https://api.star-history.com/svg?repos=dataelement/bisheng&amp;type=Date)](https://star-history.com/#dataelement/bisheng&amp;Date)
--&gt;
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[MotiaDev/motia]]></title>
            <link>https://github.com/MotiaDev/motia</link>
            <guid>https://github.com/MotiaDev/motia</guid>
            <pubDate>Wed, 06 Aug 2025 00:05:07 GMT</pubDate>
            <description><![CDATA[Modern Backend Framework that unifies APIs, background jobs, workflows, and AI agents into a single cohesive system with built-in observability and state management.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/MotiaDev/motia">MotiaDev/motia</a></h1>
            <p>Modern Backend Framework that unifies APIs, background jobs, workflows, and AI agents into a single cohesive system with built-in observability and state management.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 5,372</p>
            <p>Forks: 412</p>
            <p>Stars today: 298 stars today</p>
            <h2>README</h2><pre>&lt;a href=&quot;https://motia.dev&quot;&gt;
  &lt;img src=&quot;packages/docs/public/github-readme-banner.png&quot; alt=&quot;Motia Banner&quot; width=&quot;100%&quot;&gt;
&lt;/a&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://trendshift.io/repositories/14032&quot;&gt;
    &lt;img src=&quot;https://trendshift.io/api/badge/repositories/14032&quot; alt=&quot;Motia&quot; style=&quot;width: 250px; height: 55px;&quot; width=&quot;250&quot; height=&quot;55&quot;/&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;strong&gt;üî• A Modern Unified Backend Framework for APIs, background jobs, workflows, and Agents üî•&lt;/strong&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.npmjs.com/package/motia&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/npm/v/motia?style=flat&amp;logo=npm&amp;logoColor=white&amp;color=CB3837&amp;labelColor=000000&quot; alt=&quot;npm version&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/MotiaDev/motia/blob/main/LICENSE&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/license-MIT-green?style=flat&amp;logo=opensourceinitiative&amp;logoColor=white&amp;labelColor=000000&quot; alt=&quot;license&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/MotiaDev/motia&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/stars/MotiaDev/motia?style=flat&amp;logo=github&amp;logoColor=white&amp;color=yellow&amp;labelColor=000000&quot; alt=&quot;GitHub stars&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://twitter.com/motiadev&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/Follow-@motiadev-1DA1F2?style=flat&amp;logo=twitter&amp;logoColor=white&amp;labelColor=000000&quot; alt=&quot;Twitter Follow&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://discord.gg/motia&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/discord/1322278831184281721?style=flat&amp;logo=discord&amp;logoColor=white&amp;color=5865F2&amp;label=Discord&amp;labelColor=000000&quot; alt=&quot;Discord&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.motia.dev/manifesto&quot;&gt;üí° Motia Manifesto&lt;/a&gt; ‚Ä¢
  &lt;a href=&quot;https://www.motia.dev/docs/getting-started/quick-start&quot;&gt;üöÄ Quick Start&lt;/a&gt; ‚Ä¢
  &lt;a href=&quot;https://www.motia.dev/docs/concepts/steps/defining-steps&quot;&gt;üìã Defining Steps&lt;/a&gt; ‚Ä¢
  &lt;a href=&quot;https://motia.dev/docs&quot;&gt;üìö Docs&lt;/a&gt;
&lt;/p&gt;

---

## üéØ What is Motia?

Motia is a **modern backend framework** that unifies APIs, background jobs, workflows, and AI agents into a single cohesive system. Eliminate runtime complexity and build unified backends where **JavaScript, TypeScript, Python, etc**, work together in event-driven workflows, with built-in state management, observability, and one-click deployments.

Motia brings cohesion to the fragmented backend world with our core primitive: the **Step**.

[![Motia combines APIs, background queues, and AI agents into one system](assets/Motia_Github_Repository_GIF.gif)](https://motia.dev)

## üöÄ Quickstart

Get Motia project up and running in **under 60 seconds**:

### 1. Bootstrap a New Motia Project

```bash
npx motia@latest create -i   # runs the interactive terminal
```

Follow the prompts to pick a template, project name, and language.

### 2. Start the Workbench

Inside your new project folder, launch the dev server:

```bash
npx motia dev # ‚ûú http://localhost:3000
```

This spins up the Motia Workbench ‚Äì a local UI for building, testing &amp; observing your backend in real-time.

![motia-terminal](assets/motia-terminal.gif)

### 3. Hit Your First Endpoint

Open a new terminal tab and run:

```bash
curl http://localhost:3000/default
```

You should see the JSON response:

```json
{ &quot;message&quot;: &quot;Hello World from Motia!&quot; }
```

### 4. Explore the Workbench UI

![new-workbench](assets/new-workbench.png)
The Workbench is your command centre:

- **üåä Flows** ‚Äì Visualise how your Steps connect.
- **üîå Endpoints** ‚Äì Test APIs with one click and stream results live.
- **üëÅÔ∏è Traces** ‚Äì Inspect end-to-end traces of every execution.
- **üìä Logs** ‚Äì View structured logs grouped by trace.
- **üè™ State** ‚Äì Inspect the key-value store across Steps.

---

üéâ **That&#039;s it!** You now have a fully-featured Motia project with:

- ‚úÖ `/default` API endpoint
- ‚úÖ Visual debugger &amp; flow inspector
- ‚úÖ Built-in observability
- ‚úÖ Hot-reload for instant feedback

---

### üß± The Step Philosophy

- **üéØ Your Logic, Your Step**: A Step holds your business logic. It can be a simple function, a call to a database, or a complex AI agent. This is where your application&#039;s real work gets done.
- **üåç Any Language, One Workflow**: Write Steps in TypeScript, Python, and other languages to come. all in the same project. Use Python for your AI agents and TypeScript for your API, and Motia makes them work together effortlessly.
- **‚ö° Full Power, No Boilerplate**: Inside a Step&#039;s `handler`, you have the full power of the Node.js or Python ecosystem. Install any package, call any API, connect to any database. No restrictions, just your code.
- **üëÅÔ∏è Zero-Config Observability**: Get full end-to-end tracing and logging for every Step execution, automatically. No setup required. See exactly what happened, when, and why.
- **üåä Simple &amp; Powerful Workflows**: Connect Steps together by emitting and subscribing to events. Build complex, multi-stage processes with simple, declarative code.
- **üè™ Unified State**: Share data between Steps effortlessly. Motia provides built-in state management that is automatically traced, giving you a complete picture of your data&#039;s lifecycle through a workflow.

---

## üöß The Problem

Backend teams juggle **fragmented runtimes** across APIs, background queues, and AI agents. This creates deployment complexity, debugging gaps, and cognitive overhead from context-switching between frameworks.

**This fragmentation demands a unified system.**

---

## ‚úÖ The Unified System

Motia unifies your entire backend into a **unified state**. APIs, background jobs, and AI agents become interconnected Steps with shared state and integrated observability.

| **Before**                  | **After (Motia)**                       |
| --------------------------- | --------------------------------------- |
| Multiple deployment targets | **Single unified deployment**           |
| Fragmented observability    | **End-to-end tracing**                  |
| Language dependent          | **JavaScript, TypeScript, Python, etc** |
| Context-switching overhead  | **Single intuitive model**              |
| Complex error handling      | **Automatic retries &amp; fault tolerance** |

---

## üîß Supported Step Types

| Type        | Trigger               | Use Case                              |
| ----------- | --------------------- | ------------------------------------- |
| **`api`**   | HTTP Request          | Expose REST endpoints                 |
| **`event`** | Emitted Topics        | React to internal or external events  |
| **`cron`**  | Scheduled Time (cron) | Automate recurring jobs               |
| **`noop`**  | None                  | Placeholder for manual/external tasks |

---

### ü§î How it Works

Motia&#039;s architecture is built around a single, powerful primitive: the **Step**. A Step is not just a trigger; it&#039;s a powerful container for your business logic. You can write anything from a simple database query to a complex AI agent interaction inside a single step. Instead of managing separate services for APIs, background workers, and scheduled tasks, you simply define how your steps are triggered.

- **Need a public API?** Create an `api` step. This defines a route and handler for HTTP requests. You can build a complete REST or GraphQL API just with these steps.
- **Need a background job or queue?** Have your `api` step `emit` an event. An `event` step subscribed to that event&#039;s topic will pick up the job and process it asynchronously. This is how you handle anything that shouldn&#039;t block the main request thread, from sending emails to complex data processing.
- **Need to run a task on a schedule?** Use a `cron` step. It will trigger automatically based on the schedule you define.

This model means you no longer need to glue together separate frameworks and tools. A single Motia application can replace a stack that might otherwise include **Nest.js** (for APIs), **Temporal** (for workflows), and **Celery/BullMQ** (for background jobs). It&#039;s all just steps and events.

## ‚ö° Core Concepts

The **Step** is Motia&#039;s core primitive. The following concepts are deeply integrated with Steps to help you build powerful, complex, and scalable backends:

### üîë Steps &amp; Step Types

Understand the three ways Steps are triggered:

- **HTTP (`api`)** ‚Äì Build REST/GraphQL endpoints with zero boilerplate.
- **Events (`event`)** ‚Äì React to internal or external events emitted by other steps.
- **Cron (`cron`)** ‚Äì Schedule recurring jobs with a familiar cron syntax.

### üì£ Emit &amp; Subscribe (Event-Driven Workflows)

Steps talk to each other by **emitting** and **subscribing** to topics. This decouples producers from consumers and lets you compose complex workflows with simple, declarative code.

### üè™ State Management

All steps share a unified key-value state store. Every `get`, `set`, and `delete` is automatically traced so you always know when and where your data changed.

### üìä Structured Logging

Motia provides structured, JSON logs correlated with trace IDs and step names. Search and filter your logs without regex hassle.

### üì° Streams: Real-time Messaging

Push live updates from long-running or asynchronous workflows to clients without polling. Perfect for dashboards, progress indicators, and interactive AI agents.

### üëÅÔ∏è End-to-End Observability with Traces

Every execution generates a full trace, capturing step timelines, state operations, emits, stream calls, and logs. Visualise everything in the Workbench&#039;s Traces UI and debug faster.

---

## üóÇ Examples

| [Finance Agent](https://github.com/MotiaDev/motia-examples/tree/main/examples/finance-agent) | [GitHub Agent](https://github.com/MotiaDev/motia-examples/tree/main/examples/github-integration-workflow) | [Gmail Manager](https://github.com/MotiaDev/motia-examples/tree/main/examples/gmail-workflow) |
| -------------------------------------------------------------------------------------------- | --------------------------------------------------------------------------------------------------------- | --------------------------------------------------------------------------------------------- |
| ![Finance](assets/examples/finance-agent.png)                          | ![GitHub](assets/examples/github-pr-management.png)                                      | ![Gmail](assets/examples/gmail-flow.png)                                |

| [Trello Automation](https://github.com/MotiaDev/motia-examples/tree/main/examples/trello-flow) | [RAG Agent](https://github.com/MotiaDev/motia-examples/tree/main/examples/rag_example) | [AI Image Gen](https://github.com/MotiaDev/motia-examples/tree/main/examples/vision-example) |
| ---------------------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------- |
| ![Trello](assets/examples/trello-manager.png)                               | ![RAG](assets/examples/parse-embed-rag.png)                     | ![AI Image](assets/examples/generate-image.png)                          |

---

## üåê Language Support

Write steps in your preferred language:

| Language       | Status         | Example           |
| -------------- | -------------- | ----------------- |
| **JavaScript** | ‚úÖ Stable      | `handler.step.js` |
| **TypeScript** | ‚úÖ Stable      | `handler.step.ts` |
| **Python**     | ‚úÖ Stable      | `handler.step.py` |
| **Ruby**       | üöß Beta        | `handler.step.rb` |
| **Go**         | üîÑ Coming Soon | `handler.step.go` |
| **Rust**       | üîÑ Coming Soon | `handler.step.rs` |

---

### üí¨ **Get Help**

- **üìã Questions**: Use our [Discord community](https://discord.gg/motia)
- **üêõ Bug Reports**: [GitHub Issues](https://github.com/MotiaDev/motia/issues)
- **üìñ Documentation**: [Official Docs](https://motia.dev/docs)
- **üé• Blog**: [Motia Blog](https://blog.motia.dev)

### ü§ù **Contributing**

We welcome contributions! Whether it&#039;s:

- üêõ Bug fixes and improvements
- ‚ú® New features and step types
- üìö Documentation and examples
- üåç Language support additions
- üé® Workbench UI enhancements

Check out our [Contributing Guide](https://github.com/MotiaDev/motia/blob/main/CONTRIBUTING.md) to get started.

---

&lt;div align=&quot;center&quot;&gt;

**üåü Ready to unify your backend?**

[üöÄ **Get Started Now**](https://motia.dev) ‚Ä¢ [üìñ **Read the Docs**](https://motia.dev/docs) ‚Ä¢ [üí¨ **Join Discord**](https://discord.com/invite/nJFfsH5d6v)

&lt;/div&gt;

---

&lt;div align=&quot;center&quot;&gt;

[![Star History Chart](https://api.star-history.com/svg?repos=motiadev/motia&amp;type=Date)](https://www.star-history.com/#motiadev/motia&amp;Date)

&lt;sub&gt;Built with ‚ù§Ô∏è by the Motia team ‚Ä¢ **Star us if you find [Motia](https://github.com/orgs/MotiaDev/motia) useful!** ‚≠ê&lt;/sub&gt;

&lt;/div&gt;

### üöß Roadmap

We have a public roadmap for Motia, you can view it [here](https://github.com/orgs/MotiaDev/projects/2/views/4).

Feel free to add comments to the issues, or create a new issue if you have a feature request.

| Feature                               | Status  | Link                                                 | Description                            |
| ------------------------------------- | ------- | ---------------------------------------------------- | -------------------------------------- |
| Python Types                          | Planned | [#485](https://github.com/MotiaDev/motia/issues/485) | Add support for Python types           |
| Streams: RBAC                         | Planned | [#495](https://github.com/MotiaDev/motia/issues/495) | Add support for RBAC                   |
| Streams: Workbench UI                 | Planned | [#497](https://github.com/MotiaDev/motia/issues/497) | Add support for Workbench UI           |
| Queue Strategies                      | Planned | [#476](https://github.com/MotiaDev/motia/issues/476) | Add support for Queue Strategies       |
| Reactive Steps                        | Planned | [#477](https://github.com/MotiaDev/motia/issues/477) | Add support for Reactive Steps         |
| Allow cloud configuration             | Planned | [#478](https://github.com/MotiaDev/motia/issues/478) | Add support for cloud configuration    |
| BYOC: Bring your own Cloud: AWS       | Planned | [#479](https://github.com/MotiaDev/motia/issues/479) | Add support for AWS                    |
| Point in time triggers                | Planned | [#480](https://github.com/MotiaDev/motia/issues/480) | Add support for Point in time triggers |
| Workbench plugins                     | Planned | [#481](https://github.com/MotiaDev/motia/issues/481) | Add support for Workbench plugins      |
| Rewrite our Core in either Go or Rust | Planned | [#482](https://github.com/MotiaDev/motia/issues/482) | Rewrite our Core in either Go or Rust  |
| Decrease deployment time              | Planned | [#483](https://github.com/MotiaDev/motia/issues/483) | Decrease deployment time               |
| Built-in database support             | Planned | [#484](https://github.com/MotiaDev/motia/issues/484) | Add support for built-in database      |
| BYOC: Google Cloud Platform           | Planned | [#486](https://github.com/MotiaDev/motia/issues/486) | Add support for Google Cloud Platform  |
| BYOC: Microsoft Azure                 | Planned | [#487](https://github.com/MotiaDev/motia/issues/487) | Add support for Microsoft Azure        |
| BYOC: Vercel                          | Planned | [#488](https://github.com/MotiaDev/motia/issues/488) | Add support for Vercel                 |
| BYOC: Cloudflare                      | Planned | [#489](https://github.com/MotiaDev/motia/issues/489) | Add support for Cloudflare             |
| New languages: Go                     | Planned | [#490](https://github.com/MotiaDev/motia/issues/490) | Add support for Go                     |
| New languages: Rust                   | Planned | [#491](https://github.com/MotiaDev/motia/issues/491) | Add support for Rust                   |
| New languages: Java                   | Planned | [#492](https://github.com/MotiaDev/motia/issues/492) | Add support for Java                   |
| New languages: Ruby                   | Planned | [#493](https://github.com/MotiaDev/motia/issues/493) | Add support for Ruby                   |
| New languages: C#                     | Planned | [#494](https://github.com/MotiaDev/motia/issues/494) | Add support for C#                     |
| BYOC: Kubernetes                      | Planned | [#496](https://github.com/MotiaDev/motia/issues/496) | Add support for Kubernetes             |</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[flydelabs/flyde]]></title>
            <link>https://github.com/flydelabs/flyde</link>
            <guid>https://github.com/flydelabs/flyde</guid>
            <pubDate>Wed, 06 Aug 2025 00:05:06 GMT</pubDate>
            <description><![CDATA[Open-source Visual programming for backend logic that integrates with existing codebases. Flyde bridges the gap between technical and non-technical team members. Product managers, designers, and backend developers can collaborate on the same visual flows.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/flydelabs/flyde">flydelabs/flyde</a></h1>
            <p>Open-source Visual programming for backend logic that integrates with existing codebases. Flyde bridges the gap between technical and non-technical team members. Product managers, designers, and backend developers can collaborate on the same visual flows.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 3,252</p>
            <p>Forks: 140</p>
            <p>Stars today: 27 stars today</p>
            <h2>README</h2><pre>&lt;h1 align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://www.flyde.dev/#gh-light-mode-only&quot; style=&quot;color: black&quot;&gt;
    &lt;img src=&quot;https://github.com/user-attachments/assets/c4a2e1e0-b142-403d-9965-1f131f73896f&quot; height=&quot;40&quot;/&gt;
    &lt;/a&gt;
    &lt;a href=&quot;https://www.flyde.dev/#gh-dark-mode-only&quot; style=&quot;color: black&quot;&gt;
    &lt;img src=&quot;https://github.com/user-attachments/assets/79183bb4-7938-495d-88c8-496b96400665&quot; height=&quot;40&quot;/&gt;
    &lt;/a&gt;
&lt;/h1&gt;

&lt;p align=&quot;center&quot;&gt;
    &lt;i&gt;Visual AI Flows. In Your Codebase.&lt;/i&gt; Open-source, runs in &lt;strong&gt;VS Code&lt;/strong&gt;.&lt;br/&gt;Integrates with existing &lt;strong&gt;TypeScript&lt;/strong&gt; code.
&lt;/p&gt;

&lt;h4 align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/npm/l/@flyde/runtime&quot; alt=&quot;license&quot; style=&quot;height: 20px;&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/flydelabs/flyde/blob/main/core/src/spec.ts&quot;&gt;
    &lt;img src=&quot;core/coverage-badge.svg&quot; alt=&quot;coverage&quot;/&gt;
  &lt;/a&gt;

  &lt;a href=&quot;https://www.flyde.dev&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/Website-007ec6?style=flat&amp;logo=world&amp;logoColor=white&quot;/&gt;
  &lt;/a&gt;

  &lt;a href=&quot;https://www.flyde.dev/playground&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/Playground-007ec6?style=flat&amp;logo=world&amp;logoColor=white&quot;/&gt;
  &lt;/a&gt;
  &lt;br&gt;
  &lt;a href=&quot;https://flyde.dev/discord&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/discord-7289da.svg?style=flat-square&amp;logo=discord&quot; alt=&quot;discord&quot; style=&quot;height: 20px;&quot;&gt;
  &lt;/a&gt;

&lt;a href=&quot;https://twitter.com/FlydeLabs&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/twitter/follow/FlydeLabs?style=social&quot;/&gt;
  &lt;/a&gt;

&lt;/h4&gt;

&lt;div align=&quot;center&quot;&gt;
    &lt;img src=&quot;https://github.com/user-attachments/assets/97a5ce55-da02-4d76-bf4d-d0b1800f8c56&quot;/&gt;
&lt;/div&gt;

&lt;h5 align=&quot;center&quot;&gt;
  
&lt;strong&gt;VSCode Extension ‚úîÔ∏è&lt;/strong&gt; ¬∑ &lt;strong&gt;Runtime Library ‚úîÔ∏è&lt;/strong&gt; ¬∑ &lt;strong&gt;Integrates with Existing Code ‚úîÔ∏è&lt;/strong&gt;
&lt;br/&gt;
&lt;strong&gt;Rich Standard Library ‚úîÔ∏è&lt;/strong&gt; ¬∑ &lt;strong&gt;Visual Debugger ‚úîÔ∏è&lt;/strong&gt; ¬∑ &lt;strong&gt;TypeScript Support ‚úîÔ∏è&lt;/strong&gt;
&lt;/h5&gt;

## Quick Start

### Playground
Visit [https://www.flyde.dev/playground](https://www.flyde.dev/playground) to try out Flyde in your browser.

### CLI
`npx create-flyde-app`

### Manual
See [https://flyde.dev/quick-start](https://flyde.dev/quick-start) for more information.

## Why Flyde?

### üîß In-Codebase Integration
Runs directly in your codebase with access to runtime code and existing backend frameworks. Unlike standalone tools, Flyde is integrated as a library into your existing tools and CI/CD pipelines.

### ü§ñ Visual Backend AI Workflows  
Prototype, integrate, evaluate and iterate on AI-heavy backend logic visually. Build backend AI agents, prompt chains, and agentic workflows with a visual interface while maintaining full code control.

### ü§ù Lower Collaboration Barrier
A visual extension of TypeScript that bridges the gap between developers and non-developers. Enable your entire team to contribute to backend AI workflow development.

## Introduction

`Flyde` is a holistic solution for prototyping, integrating, evaluating and iterating on AI-heavy backend logic. It&#039;s a visual extension of TypeScript that runs in-codebase, providing the missing link between developers and non-developers working on backend AI workflows. 

Flyde allows you to create visual flows for backend services like AI agents, prompt chains, API orchestration, and agentic workflows - directly integrated with your existing codebase. It includes a [VSCode extension](https://marketplace.visualstudio.com/items?itemName=flyde.flyde-vscode) and seamlessly integrates with existing TypeScript/JavaScript code.

## Quick Start

`npx create-flyde-app`  
More info at [https://flyde.dev/quick-start](https://flyde.dev/quick-start)

## Who is Flyde for?

- **Product Teams &amp; Developers:** Flyde bridges the gap between technical and non-technical team members. Product managers, designers, and backend developers can collaborate on the same visual flows, making complex backend logic transparent and enabling everyone to contribute meaningfully to the development process.

- **Developers Building AI-Powered Backends:** If you&#039;re dealing with complex prompt chains, AI agents, or multi-step backend AI workflows, Flyde provides a more manageable way to build, debug, and maintain these systems while keeping everything in your codebase.

- **Teams Seeking Visual Clarity:** Whether you&#039;re prototyping new backend features, managing complex business logic, API orchestration, or simply looking for a better way to document and understand your backend application flow, Flyde&#039;s visual approach helps you see the big picture while maintaining the power of code.

## Contributing

Flyde is an open-source project. We are committed to a fully transparent development process and highly appreciate any contributions. Whether you are helping us fix bugs, proposing new features, improving our documentation, or spreading the word - we would love to have you as a part of the Flyde community. Please refer to our [contribution guidelines](./CONTRIBUTING.md) and [code of conduct](./CODE_OF_CONDUCT.md).

- Bug Report: If you see an error message or encounter an issue while using Flyde, please create a [bug report](https://github.com/flydelabs/flyde/issues/new?assignees=&amp;labels=type%3A+bug&amp;template=bug.yaml&amp;title=%F0%9F%90%9B+Bug+Report%3A+).

- Feature Request: If you have an idea or if there is a capability that is missing, please submit a [feature request](https://github.com/flydelabs/flyde/issues/new?assignees=&amp;labels=type%3A+feature+request&amp;template=feature.yml).

- Documentation Request: If you&#039;re reading the Flyde docs and feel like you&#039;re missing something, please submit a [documentation request](https://github.com/flydelabs/flyde/issues/new).

Not sure where to start? Join our [discord](https://www.flyde.dev/discord) and we will help you get started!

&lt;a href=&quot;https://flyde.dev/discord&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/discord-7289da.svg?style=flat-square&amp;logo=discord&quot; alt=&quot;discord&quot; style=&quot;height: 20px;&quot;&gt;
  &lt;/a&gt;

## Learn more

Check out the official website at [https://flyde.dev](https://flyde.dev) for more information.

## Telemetry

Flyde VS Code extension collects anonymous usage data to help improve the product. This includes events like extension activation, flow creation, and error reporting. No personal information or code content is collected. You can disable telemetry in VS Code settings (`flyde.telemetry.enabled`) or by setting the environment variable `FLYDE_TELEMETRY_DISABLED=true`.

## License

Everything needed to run a Flyde file is _MIT-licensed_. That includes:

- `@flyde/core`
- `@flyde/loader`
- `@flyde/nodes`

The UI library and other nodes of the toolkit are GNU AGPLv3 licensed.

In other words, using Flyde flows in your software is permitted without any limitation. However, if you use Flyde&#039;s visual editor in your own work, it must be open-sourced as well. More about [GNU APGLv3](https://choosealicense.com/licenses/agpl-3.0/) here
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[plait-board/drawnix]]></title>
            <link>https://github.com/plait-board/drawnix</link>
            <guid>https://github.com/plait-board/drawnix</guid>
            <pubDate>Wed, 06 Aug 2025 00:05:05 GMT</pubDate>
            <description><![CDATA[ÂºÄÊ∫êÁôΩÊùøÂ∑•ÂÖ∑ÔºàSaaSÔºâÔºå‰∏Ä‰ΩìÂåñÁôΩÊùøÔºåÂåÖÂê´ÊÄùÁª¥ÂØºÂõæ„ÄÅÊµÅÁ®ãÂõæ„ÄÅËá™Áî±ÁîªÁ≠â„ÄÇAll in one open-source whiteboard tool with mind, flowchart, freehand and etc.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/plait-board/drawnix">plait-board/drawnix</a></h1>
            <p>ÂºÄÊ∫êÁôΩÊùøÂ∑•ÂÖ∑ÔºàSaaSÔºâÔºå‰∏Ä‰ΩìÂåñÁôΩÊùøÔºåÂåÖÂê´ÊÄùÁª¥ÂØºÂõæ„ÄÅÊµÅÁ®ãÂõæ„ÄÅËá™Áî±ÁîªÁ≠â„ÄÇAll in one open-source whiteboard tool with mind, flowchart, freehand and etc.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 3,589</p>
            <p>Forks: 305</p>
            <p>Stars today: 156 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;picture style=&quot;width: 320px&quot;&gt;
    &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://github.com/plait-board/drawnix/blob/develop/apps/web/public/logo/logo_drawnix_h.svg?raw=true&quot; /&gt;
    &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://github.com/plait-board/drawnix/blob/develop/apps/web/public/logo/logo_drawnix_h_dark.svg?raw=true&quot; /&gt;
    &lt;img src=&quot;https://github.com/plait-board/drawnix/blob/develop/apps/web/public/logo/logo_drawnix_h.svg?raw=true&quot; width=&quot;360&quot; alt=&quot;Drawnix logo and name&quot; /&gt;
  &lt;/picture&gt;
&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;
  &lt;h2&gt;
    ÂºÄÊ∫êÁôΩÊùøÂ∑•ÂÖ∑ÔºàSaaSÔºâÔºå‰∏Ä‰ΩìÂåñÁôΩÊùøÔºåÂåÖÂê´ÊÄùÁª¥ÂØºÂõæ„ÄÅÊµÅÁ®ãÂõæ„ÄÅËá™Áî±ÁîªÁ≠â
  &lt;br /&gt;
  &lt;/h2&gt;
&lt;/div&gt;

&lt;div align=&quot;center&quot;&gt;
  &lt;figure&gt;
    &lt;a target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;
      &lt;img src=&quot;https://github.com/plait-board/drawnix/blob/develop/apps/web/public/product_showcase/case-2.png&quot; alt=&quot;Product showcase&quot; width=&quot;80%&quot; /&gt;
    &lt;/a&gt;
    &lt;figcaption&gt;
      &lt;p align=&quot;center&quot;&gt;
        All in one ÁôΩÊùøÔºåÊÄùÁª¥ÂØºÂõæ„ÄÅÊµÅÁ®ãÂõæ„ÄÅËá™Áî±ÁîªÁ≠â
      &lt;/p&gt;
    &lt;/figcaption&gt;
  &lt;/figure&gt;
&lt;/div&gt;

[*English README*](https://github.com/plait-board/drawnix/blob/develop/README_en.md)

## ÁâπÊÄß

- üíØ¬†ÂÖçË¥π + ÂºÄÊ∫ê
- ‚öíÔ∏è¬†ÊÄùÁª¥ÂØºÂõæ„ÄÅÊµÅÁ®ãÂõæ
- üñå ÁîªÁ¨î
- üòÄ ÊèíÂÖ•ÂõæÁâá
- üöÄ Âü∫‰∫éÊèí‰ª∂Êú∫Âà∂
- üñºÔ∏è üìÉ ÂØºÂá∫‰∏∫ PNG, JSON(`.drawnix`)
- üíæ Ëá™Âä®‰øùÂ≠òÔºàÊµèËßàÂô®ÁºìÂ≠òÔºâ
- ‚ö° ÁºñËæëÁâπÊÄßÔºöÊí§ÈîÄ„ÄÅÈáçÂÅö„ÄÅÂ§çÂà∂„ÄÅÁ≤òË¥¥Á≠â
- üåå Êó†ÈôêÁîªÂ∏ÉÔºöÁº©Êîæ„ÄÅÊªöÂä®
- üé® ‰∏ªÈ¢òÊ®°Âºè
- üì± ÁßªÂä®ËÆæÂ§áÈÄÇÈÖç
- üìà ÊîØÊåÅ mermaid ËØ≠Ê≥ïËΩ¨ÊµÅÁ®ãÂõæ
- ‚ú® ÊîØÊåÅ markdown ÊñáÊú¨ËΩ¨ÊÄùÁª¥ÂØºÂõæÔºàÊñ∞ÊîØÊåÅ üî•üî•üî•Ôºâ


## ÂÖ≥‰∫éÂêçÁß∞

***Drawnix***  ÔºåÊ∫ê‰∫éÁªòÁîª(  ***Draw***  )‰∏éÂá§Âá∞(  ***Phoenix***  )ÁöÑÁÅµÊÑü‰∫§Áªá„ÄÇ

Âá§Âá∞Ë±°ÂæÅÁùÄÁîüÁîü‰∏çÊÅØÁöÑÂàõÈÄ†ÂäõÔºåËÄå *Draw* ‰ª£Ë°®ÁùÄ‰∫∫Á±ªÊúÄÂéüÂßãÁöÑË°®ËææÊñπÂºè„ÄÇÂú®ËøôÈáåÔºåÊØè‰∏ÄÊ¨°Âàõ‰ΩúÈÉΩÊòØ‰∏ÄÊ¨°Ëâ∫ÊúØÁöÑÊ∂ÖÊßÉÔºåÊØè‰∏ÄÁ¨îÁªòÁîªÈÉΩÊòØÁÅµÊÑüÁöÑÈáçÁîü„ÄÇ

ÂàõÊÑèÂ¶ÇÂêåÂá§Âá∞ÔºåÊµ¥ÁÅ´ÊñπËÉΩÈáçÁîüÔºåËÄå  ***Drawnix***  Ë¶ÅÂÅöÊäÄÊúØ‰∏éÂàõÊÑè‰πãÁÅ´ÁöÑÂÆàÊä§ËÄÖ„ÄÇ

*Draw Beyond, Rise Above.*


## ‰∏é Plait ÁîªÂõæÊ°ÜÊû∂

*Drawnix* ÁöÑÂÆö‰ΩçÊòØ‰∏Ä‰∏™ÂºÄÁÆ±Âç≥Áî®„ÄÅÂºÄÊ∫ê„ÄÅÂÖçË¥πÁöÑÂ∑•ÂÖ∑‰∫ßÂìÅÔºåÂÆÉÁöÑÂ∫ïÂ±ÇÊòØ *Plait* Ê°ÜÊû∂Ôºå*Plait* ÊòØÊàëÂè∏ÂºÄÊ∫êÁöÑ‰∏ÄÊ¨æÁîªÂõæÊ°ÜÊû∂Ôºå‰ª£Ë°®ÁùÄÂÖ¨Âè∏Âú®Áü•ËØÜÂ∫ì‰∫ßÂìÅ‰∏äÁöÑÈáçË¶ÅÊäÄÊúØÊ≤âÊ∑Ä„ÄÇ


Drawnix ÊòØÊèí‰ª∂Êû∂ÊûÑÔºå‰∏éÂâçÈù¢ËØ¥Âà∞ÂºÄÊ∫êÂ∑•ÂÖ∑ÊØîÊäÄÊúØÊû∂ÊûÑÊõ¥Â§çÊùÇ‰∏Ä‰∫õÔºå‰ΩÜÊòØÊèí‰ª∂Êû∂ÊûÑ‰πüÊúâ‰ºòÂäøÔºåÊØîÂ¶ÇËÉΩÂ§üÊîØÊåÅÂ§öÁßç UI Ê°ÜÊû∂Ôºà*Angular„ÄÅReact*ÔºâÔºåËÉΩÂ§üÈõÜÊàê‰∏çÂêåÂØåÊñáÊú¨Ê°ÜÊû∂ÔºàÂΩìÂâç‰ªÖÊîØÊåÅ *Slate* Ê°ÜÊû∂ÔºâÔºåÂú®ÂºÄÂèë‰∏äÂèØ‰ª•ÂæàÂ•ΩÁöÑÂÆûÁé∞‰∏öÂä°ÁöÑÂàÜÂ±ÇÔºåÂºÄÂèëÂêÑÁßçÁªÜÁ≤íÂ∫¶ÁöÑÂèØÂ§çÁî®Êèí‰ª∂ÔºåÂèØ‰ª•Êâ©Â±ïÊõ¥Â§öÁöÑÁîªÊùøÁöÑÂ∫îÁî®Âú∫ÊôØ„ÄÇ


## ‰ªìÂÇ®ÁªìÊûÑ

```
drawnix/
‚îú‚îÄ‚îÄ apps/
‚îÇ   ‚îú‚îÄ‚îÄ web                   # drawnix.com
‚îÇ   ‚îÇ    ‚îî‚îÄ‚îÄ index.html       # HTML
‚îú‚îÄ‚îÄ dist/                     # ÊûÑÂª∫‰∫ßÁâ©
‚îú‚îÄ‚îÄ packages/
‚îÇ   ‚îî‚îÄ‚îÄ drawnix/              # ÁôΩÊùøÂ∫îÁî®
‚îÇ   ‚îî‚îÄ‚îÄ react-board/          # ÁôΩÊùø React ËßÜÂõæÂ±Ç
‚îÇ   ‚îî‚îÄ‚îÄ react-text/           # ÊñáÊú¨Ê∏≤ÊüìÊ®°Âùó
‚îú‚îÄ‚îÄ package.json
‚îú‚îÄ‚îÄ ...
‚îî‚îÄ‚îÄ README.md
‚îî‚îÄ‚îÄ README_en.md

```

## Â∫îÁî®

[*https://drawnix.com*](https://drawnix.com) ÊòØ *drawnix* ÁöÑÊúÄÂ∞èÂåñÂ∫îÁî®„ÄÇ

ËøëÊúü‰ºöÈ´òÈ¢ëËø≠‰ª£ drawnix.comÔºåÁõ¥Âà∞ÂèëÂ∏É *DawnÔºàÁ†¥ÊôìÔºâ* ÁâàÊú¨„ÄÇ


## ÂºÄÂèë

```
npm install

npm run start
```

## Docker

```
docker pull pubuzhixing/drawnix:latest
```

## ‰æùËµñ

- [plait](https://github.com/worktile/plait) - ÁîªÂõæÊ°ÜÊû∂
- [slate](https://github.com/ianstormtaylor/slate)  - ÂØåÊñáÊú¨ÁºñËæëÂô®Ê°ÜÊû∂
- [floating-ui](https://github.com/floating-ui/floating-ui)  - ‰∏Ä‰∏™Ë∂ÖÁ∫ßÂ•ΩÁî®ÁöÑÂàõÂª∫ÂºπÂá∫Â±ÇÂü∫Á°ÄÂ∫ì



## Ë¥°ÁåÆ

Ê¨¢Ëøé‰ªª‰ΩïÂΩ¢ÂºèÁöÑË¥°ÁåÆÔºö

- Êèê Bug

- Ë¥°ÁåÆ‰ª£Á†Å

## ÊîØÊåÅ

*Ê¨¢ËøéÂ§ßÂÆ∂ star ‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è ÊîØÊåÅ„ÄÇ*


## License

[MIT License](https://github.com/plait-board/drawnix/blob/master/LICENSE)  </pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[laurent22/joplin]]></title>
            <link>https://github.com/laurent22/joplin</link>
            <guid>https://github.com/laurent22/joplin</guid>
            <pubDate>Wed, 06 Aug 2025 00:05:04 GMT</pubDate>
            <description><![CDATA[Joplin - the privacy-focused note taking app with sync capabilities for Windows, macOS, Linux, Android and iOS.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/laurent22/joplin">laurent22/joplin</a></h1>
            <p>Joplin - the privacy-focused note taking app with sync capabilities for Windows, macOS, Linux, Android and iOS.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 50,656</p>
            <p>Forks: 5,425</p>
            <p>Stars today: 53 stars today</p>
            <h2>README</h2><pre>[![Donate](https://joplinapp.org/images/badges/Donate-PayPal-green.svg)](https://www.paypal.com/cgi-bin/webscr?cmd=_donations&amp;business=E8JMYD2LQ8MMA&amp;lc=GB&amp;item_name=Joplin+Development&amp;currency_code=EUR&amp;bn=PP%2dDonationsBF%3abtn_donateCC_LG%2egif%3aNonHosted) [![Sponsor on GitHub](https://joplinapp.org/images/badges/GitHub-Badge.svg)](https://github.com/sponsors/laurent22/) [![Become a patron](https://joplinapp.org/images/badges/Patreon-Badge.svg)](https://www.patreon.com/joplin)

* * *

&lt;img width=&quot;64&quot; src=&quot;https://raw.githubusercontent.com/laurent22/joplin/master/Assets/LinuxIcons/256x256.png&quot; align=&quot;left&quot; /&gt; **Joplin** is a free, open source note taking and to-do application, which can handle a large number of notes organised into notebooks. The notes are searchable, can be copied, tagged and modified either from the applications directly or from your own text editor. The notes are in [Markdown format](#markdown).

Notes exported from Evernote via .enex files [can be imported](#importing) into Joplin, including the formatted content (which is converted to Markdown), resources (images, attachments, etc.) and complete metadata (geolocation, updated time, created time, etc.). Plain Markdown files can also be imported.

The notes can be [synchronised](#synchronisation) with various cloud services including [Nextcloud](https://nextcloud.com/), Dropbox, OneDrive, WebDAV or the file system (for example with a network directory). When synchronising the notes, notebooks, tags and other metadata are saved to plain text files which can be easily inspected, backed up and moved around.

The application is available for Windows, Linux, macOS, Android and iOS (the terminal app also works on FreeBSD). A [Web Clipper](https://github.com/laurent22/joplin/blob/master/readme/clipper.md), to save web pages and screenshots from your browser, is also available for [Firefox](https://addons.mozilla.org/firefox/addon/joplin-web-clipper/) and [Chrome](https://chrome.google.com/webstore/detail/joplin-web-clipper/alofnhikmmkdbbbgpnglcpdollgjjfek?hl=en-GB).

&lt;div class=&quot;top-screenshot&quot;&gt;&lt;img src=&quot;https://joplinapp.org/images/AllClients.jpg&quot; style=&quot;max-width: 100%; max-height: 35em;&quot;&gt;&lt;/div&gt;

# Installation

Three types of applications are available: for the **desktop** (Windows, macOS and Linux), for **mobile** (Android and iOS) and for **terminal** (Windows, macOS, Linux and FreeBSD). All applications have similar user interfaces and can synchronise with each other.

## Desktop applications

Operating System | Download | Alternative
-----------------|--------|-------------------
Windows (32 and 64-bit)         | &lt;a href=&#039;https://github.com/laurent22/joplin/releases/download/v1.0.241/Joplin-Setup-1.0.241.exe&#039;&gt;&lt;img alt=&#039;Get it on Windows&#039; width=&quot;134px&quot; src=&#039;https://joplinapp.org/images/BadgeWindows.png&#039;/&gt;&lt;/a&gt; | Or get the &lt;a href=&#039;https://github.com/laurent22/joplin/releases/download/v1.0.241/JoplinPortable.exe&#039;&gt;Portable version&lt;/a&gt;&lt;br&gt;&lt;br&gt;The [portable application](https://en.wikipedia.org/wiki/Portable_application) allows installing the software on a portable device such as a USB key. Simply copy the file JoplinPortable.exe in any directory on that USB key ; the application will then create a directory called &quot;JoplinProfile&quot; next to the executable file.
macOS          | &lt;a href=&#039;https://github.com/laurent22/joplin/releases/download/v1.0.241/Joplin-1.0.241.dmg&#039;&gt;&lt;img alt=&#039;Get it on macOS&#039; width=&quot;134px&quot; src=&#039;https://joplinapp.org/images/BadgeMacOS.png&#039;/&gt;&lt;/a&gt; | You can also use Homebrew (unsupported): `brew cask install joplin`
Linux          | &lt;a href=&#039;https://github.com/laurent22/joplin/releases/download/v1.0.241/Joplin-1.0.241.AppImage&#039;&gt;&lt;img alt=&#039;Get it on Linux&#039; width=&quot;134px&quot; src=&#039;https://joplinapp.org/images/BadgeLinux.png&#039;/&gt;&lt;/a&gt; | An Arch Linux package (unsupported) [is also available](#terminal-application).&lt;br&gt;&lt;br&gt;If it works with your distribution (it has been tested on Ubuntu, Fedora, and Mint; the desktop environments supported are GNOME, KDE, Xfce, MATE, LXQT, LXDE, Unity, Cinnamon, Deepin and Pantheon), the recommended way is to use this script as it will handle the desktop icon too:&lt;br&gt;&lt;br&gt; `wget -O - https://raw.githubusercontent.com/laurent22/joplin/master/Joplin_install_and_update.sh \| bash`

## Mobile applications

Operating System | Download | Alt. Download
-----------------|:--------:|----------------
Android          | &lt;a href=&#039;https://play.google.com/store/apps/details?id=net.cozic.joplin&amp;utm_source=GitHub&amp;utm_campaign=README&amp;pcampaignid=MKT-Other-global-all-co-prtnr-py-PartBadge-Mar2515-1&#039;&gt;&lt;img alt=&#039;Get it on Google Play&#039; height=&quot;40px&quot; src=&#039;https://joplinapp.org/images/BadgeAndroid.png&#039;/&gt;&lt;/a&gt; | or &lt;a href=&quot;https://f-droid.org/packages/net.cozic.joplin&quot;&gt;Get it on F-Droid&lt;/a&gt;&lt;br/&gt; or directly download the APK file: [64-bit](https://github.com/laurent22/joplin-android/releases/download/android-v1.0.340/joplin-v1.0.340.apk) [32-bit](https://github.com/laurent22/joplin-android/releases/download/android-v1.0.340/joplin-v1.0.340-32bit.apk)
iOS              | &lt;a href=&#039;https://itunes.apple.com/us/app/joplin/id1315599797&#039;&gt;&lt;img alt=&#039;Get it on the App Store&#039; height=&quot;40px&quot; src=&#039;https://joplinapp.org/images/BadgeIOS.png&#039;/&gt;&lt;/a&gt; | -

## Terminal application

Operating system | Method
-----------------|----------------
macOS, Linux, or Windows (via [WSL](https://msdn.microsoft.com/en-us/commandline/wsl/faq?f=255&amp;MSPPError=-2147217396)) | **Important:** First, [install Node 10+](https://nodejs.org/en/download/package-manager/).&lt;br/&gt;&lt;br/&gt;`NPM_CONFIG_PREFIX=~/.joplin-bin npm install -g joplin`&lt;br/&gt;`sudo ln -s ~/.joplin-bin/bin/joplin /usr/bin/joplin`&lt;br&gt;&lt;br&gt;By default, the application binary will be installed under `~/.joplin-bin`. You may change this directory if needed. Alternatively, if your npm permissions are setup as described [here](https://docs.npmjs.com/getting-started/fixing-npm-permissions#option-2-change-npms-default-directory-to-another-directory) (Option 2) then simply running `npm -g install joplin` would work.

To start it, type `joplin`.

For usage information, please refer to the full [Joplin Terminal Application Documentation](https://joplinapp.org/terminal/).

### Unsupported methods

There are other ways to install the terminal application. However, they are not supported and problems must be reported to the upstream projects.

Operating system | Method
-----------------|----------------
macOS            | `brew install joplin`
Arch Linux       | An Arch Linux package is available [here](https://aur.archlinux.org/packages/joplin/). To install it, use an AUR wrapper such as yay: `yay -S joplin`. Both the CLI tool (type `joplin`) and desktop app (type `joplin-desktop`) are packaged. You can also install a compiled version with the [chaotic-aur](https://wiki.archlinux.org/index.php/Unofficial_user_repositories#chaotic-aur) repository. For support, please go to the [GitHub repo](https://github.com/masterkorp/joplin-pkgbuild).

## Web Clipper

The Web Clipper is a browser extension that allows you to save web pages and screenshots from your browser. For more information on how to install and use it, see the [Web Clipper Help Page](https://github.com/laurent22/joplin/blob/master/readme/clipper.md).

# Sponsors

&lt;a href=&quot;https://seirei.ne.jp&quot;&gt;&lt;img title=&quot;Serei Network&quot; width=&quot;256&quot; src=&quot;https://joplinapp.org/images/sponsors/SeireiNetwork.png&quot;/&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://usrigging.com/&quot;&gt;&lt;img title=&quot;U.S. Ringing Supply&quot; width=&quot;256&quot; src=&quot;https://joplinapp.org/images/sponsors/RingingSupply.svg&quot;/&gt;&lt;/a&gt;

* * *

|     |     |     |
| :---: | :---: | :---: |
| &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/6979755?s=96&amp;v=4&quot;/&gt;&lt;/br&gt;[Devon Zuegel](https://github.com/devonzuegel) | &lt;img width=&quot;50&quot; src=&quot;https://avatars2.githubusercontent.com/u/24908652?s=96&amp;v=4&quot;/&gt;&lt;/br&gt;[Â∞èË•ø„ÄÄÂ≠ùÂÆó](https://github.com/konishi-t) | &lt;img width=&quot;50&quot; src=&quot;https://avatars2.githubusercontent.com/u/215668?s=96&amp;v=4&quot;/&gt;&lt;/br&gt;[Alexander van der Berg](https://github.com/avanderberg)
| &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/1168659?s=96&amp;v=4&quot;/&gt;&lt;/br&gt;[Nicholas Head](https://github.com/nicholashead) | &lt;img width=&quot;50&quot; src=&quot;https://avatars2.githubusercontent.com/u/1439535?s=96&amp;v=4&quot;/&gt;&lt;/br&gt;[Frank Bloise](https://github.com/fbloise) | &lt;img width=&quot;50&quot; src=&quot;https://avatars2.githubusercontent.com/u/15859362?s=96&amp;v=4&quot;/&gt;&lt;/br&gt;[Thomas Broussard](https://github.com/thomasbroussard)
| &lt;img width=&quot;50&quot; src=&quot;https://avatars2.githubusercontent.com/u/1307332?s=96&amp;v=4&quot;/&gt;&lt;/br&gt;[Brandon Johnson](https://github.com/dbrandonjohnson) |   |

&lt;!-- TOC --&gt;
# Table of contents

- Applications

	- [Desktop application](https://github.com/laurent22/joplin/blob/master/readme/desktop.md)
	- [Mobile applications](https://github.com/laurent22/joplin/blob/master/readme/mobile.md)
	- [Terminal application](https://github.com/laurent22/joplin/blob/master/readme/terminal.md)
	- [Web Clipper](https://github.com/laurent22/joplin/blob/master/readme/clipper.md)

- Support

	- [Joplin Forum](https://discourse.joplinapp.org)
	- [Markdown Guide](https://github.com/laurent22/joplin/blob/master/readme/markdown.md)
	- [How to enable end-to-end encryption](https://github.com/laurent22/joplin/blob/master/readme/e2ee.md)
	- [What is a conflict?](https://github.com/laurent22/joplin/blob/master/readme/conflict.md)
	- [How to enable debug mode](https://github.com/laurent22/joplin/blob/master/readme/debugging.md)
	- [API documentation](https://github.com/laurent22/joplin/blob/master/readme/api.md)
	- [FAQ](https://github.com/laurent22/joplin/blob/master/readme/faq.md)

- Development

	- [End-to-end encryption spec](https://github.com/laurent22/joplin/blob/master/readme/spec.md)
	- [Note History spec](https://github.com/laurent22/joplin/blob/master/readme/spec/history.md)
	- [Sync Lock spec](https://github.com/laurent22/joplin/blob/master/readme/spec/sync_lock.md)

- Google Summer of Code 2020

	- [Google Summer of Code 2020](https://github.com/laurent22/joplin/blob/master/readme/gsoc2020/index.md)
	- [Project Ideas](https://github.com/laurent22/joplin/blob/master/readme/gsoc2020/ideas.md)

- About

	- [Changelog (Desktop App)](https://github.com/laurent22/joplin/blob/master/readme/changelog.md)
	- [Changelog (CLI App)](https://github.com/laurent22/joplin/blob/master/readme/changelog_cli.md)
	- [Stats](https://github.com/laurent22/joplin/blob/master/readme/stats.md)
	- [Donate](https://github.com/laurent22/joplin/blob/master/readme/donate.md)
&lt;!-- TOC --&gt;

# Features

- Desktop, mobile and terminal applications.
- [Web Clipper](https://github.com/laurent22/joplin/blob/master/readme/clipper.md) for Firefox and Chrome.
- End To End Encryption (E2EE)
- Note history (revisions)
- Synchronisation with various services, including Nextcloud, Dropbox, WebDAV and OneDrive.
- Import Enex files (Evernote export format) and Markdown files.
- Export JEX files (Joplin Export format) and raw files.
- Support notes, to-dos, tags and notebooks.
- Goto Anything feature.
- Sort notes by multiple criteria - title, updated time, etc.
- Support for alarms (notifications) in mobile and desktop applications.
- Offline first, so the entire data is always available on the device even without an internet connection.
- Markdown notes, which are rendered with images and formatting in the desktop and mobile applications. Support for extra features such as math notation and checkboxes.
- File attachment support - images are displayed, and other files are linked and can be opened in the relevant application.
- Search functionality.
- Geo-location support.
- Supports multiple languages
- External editor support - open notes in your favorite external editor with one click in Joplin.

# Importing

## Importing from Evernote

Joplin was designed as a replacement for Evernote and so can import complete Evernote notebooks, as well as notes, tags, resources (attached files) and note metadata (such as author, geo-location, etc.) via ENEX files. In terms of data, the only two things that might slightly differ are:

- Recognition data - Evernote images, in particular scanned (or photographed) documents have [recognition data](https://en.wikipedia.org/wiki/Optical_character_recognition) associated with them. It is the text that Evernote has been able to recognise in the document. This data is not preserved when the note are imported into Joplin. However, should it become supported in the search tool or other parts of Joplin, it should be possible to regenerate this recognition data since the actual image would still be available.

- Colour, font sizes and faces - Evernote text is stored as HTML and this is converted to Markdown during the import process. For notes that are mostly plain text or with basic formatting (bold, italic, bullet points, links, etc.) this is a lossless conversion, and the note, once rendered back to HTML should be very similar. Tables are also imported and converted to Markdown tables. For very complex notes, some formatting data might be lost - in particular colours, font sizes and font faces will not be imported. The text itself however is always imported in full regardless of formatting.

To import Evernote data, first export your Evernote notebooks to ENEX files as described [here](https://help.evernote.com/hc/en-us/articles/209005557-How-to-back-up-export-and-restore-import-notes-and-notebooks). Then follow these steps:

In the **desktop application**, open File &gt; Import &gt; ENEX and select your file. The notes will be imported into a new separate notebook. If needed they can then be moved to a different notebook, or the notebook can be renamed, etc.

In the **terminal application**, in [command-line mode](https://github.com/laurent22/joplin/blob/master/readme/terminal.md#command-line-mode), type `import /path/to/file.enex`. This will import the notes into a new notebook named after the filename.

## Importing from Markdown files

Joplin can import notes from plain Markdown file. You can either import a complete directory of Markdown files or individual files.

In the **desktop application**, open File &gt; Import &gt; MD and select your Markdown file or directory.

In the **terminal application**, in [command-line mode](https://github.com/laurent22/joplin/blob/master/readme/terminal.md#command-line-mode), type `import --format md /path/to/file.md` or `import --format md /path/to/directory/`.

## Importing from other applications

In general the way to import notes from any application into Joplin is to convert the notes to ENEX files (Evernote format) and to import these ENEX files into Joplin using the method above. Most note-taking applications support ENEX files so it should be relatively straightforward. For help about specific applications, see below:

* Standard Notes: Please see [this tutorial](https://programadorwebvalencia.com/migrate-notes-from-standard-notes-to-joplin/)
* Tomboy Notes: Export the notes to ENEX files [as described here](https://askubuntu.com/questions/243691/how-can-i-export-my-tomboy-notes-into-evernote/608551) for example, and import these ENEX files into Joplin.
* OneNote: First [import the notes from OneNote into Evernote](https://discussion.evernote.com/topic/107736-is-there-a-way-to-import-from-onenote-into-evernote-on-the-mac/). Then export the ENEX file from Evernote and import it into Joplin.
* NixNote: Synchronise with Evernote, then export the ENEX files and import them into Joplin. More info [in this thread](https://discourse.joplinapp.org/t/import-from-nixnote/183/3).

# Exporting

Joplin can export to the JEX format (Joplin Export file), which is a tar file that can contain multiple notes, notebooks, etc. This is a lossless format in that all the notes, but also metadata such as geo-location, updated time, tags, etc. are preserved. This format is convenient for backup purposes and can be re-imported into Joplin. A &quot;raw&quot; format is also available. This is the same as the JEX format except that the data is saved to a directory and each item represented by a single file.

# Synchronisation

One of the goals of Joplin was to avoid being tied to any particular company or service, whether it is Evernote, Google or Microsoft. As such the synchronisation is designed without any hard dependency to any particular service. Most of the synchronisation process is done at an abstract level and access to external services, such as Nextcloud or Dropbox, is done via lightweight drivers. It is easy to support new services by creating simple drivers that provide a filesystem-like interface, i.e. the ability to read, write, delete and list items. It is also simple to switch from one service to another or to even sync to multiple services at once. Each note, notebook, tags, as well as the relation between items is transmitted as plain text files during synchronisation, which means the data can also be moved to a different application, can be easily backed up, inspected, etc.

Currently, synchronisation is possible with Nextcloud, Dropbox, OneDrive or the local filesystem. To enable synchronisation please follow the instructions below. After that, the application will synchronise in the background whenever it is running, or you can click on &quot;Synchronise&quot; to start a synchronisation manually.

## Nextcloud synchronisation

&lt;img src=&quot;https://joplinapp.org/images/nextcloud-logo-background.png&quot; width=&quot;100&quot; align=&quot;left&quot;&gt; &lt;a href=&quot;https://nextcloud.com/&quot;&gt;Nextcloud&lt;/a&gt; is a self-hosted, private cloud solution. It can store documents, images and videos but also calendars, passwords and countless other things and can sync them to your laptop or phone. As you can host your own Nextcloud server, you own both the data on your device and infrastructure used for synchronisation. As such it is a good fit for Joplin. The platform is also well supported and with a strong community, so it is likely to be around for a while - since it&#039;s open source anyway, it is not a service that can be closed, it can exist on a server for as long as one chooses.

In the **desktop application** or **mobile application**, go to the config screen and select Nextcloud as the synchronisation target. Then input the WebDAV URL (to get it, click on Settings in the bottom left corner of the page, in Nextcloud), this is normally `https://example.com/nextcloud/remote.php/webdav/Joplin` (**make sure to create the &quot;Joplin&quot; directory in Nextcloud**), and set the username and password. If it does not work, please [see this explanation](https://github.com/laurent22/joplin/issues/61#issuecomment-373282608) for more details.

In the **terminal application**, you will need to set the `sync.target` config variable and all the `sync.5.path`, `sync.5.username` and `sync.5.password` config variables to, respectively the Nextcloud WebDAV URL, your username and your password. This can be done from the command line mode using:

	:config sync.5.path https://example.com/nextcloud/remote.php/webdav/Joplin
	:config sync.5.username YOUR_USERNAME
	:config sync.5.password YOUR_PASSWORD
	:config sync.target 5

If synchronisation does not work, please consult the logs in the app profile directory - it is often due to a misconfigured URL or password. The log should indicate what the exact issue is.

## Dropbox synchronisation

When syncing with Dropbox, Joplin creates a sub-directory in Dropbox, in `/Apps/Joplin` and read/write the notes and notebooks from it. The application does not have access to anything outside this directory.

In the **desktop application** or **mobile application**, select &quot;Dropbox&quot; as the synchronisation target in the config screen (it is selected by default). Then, to initiate the synchronisation process, click on the &quot;Synchronise&quot; button in the sidebar and follow the instructions.

In the **terminal application**, to initiate the synchronisation process, type `:sync`. You will be asked to follow a link to authorise the application. It is possible to also synchronise outside of the user interface by typing `j

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[aws/aws-toolkit-vscode]]></title>
            <link>https://github.com/aws/aws-toolkit-vscode</link>
            <guid>https://github.com/aws/aws-toolkit-vscode</guid>
            <pubDate>Wed, 06 Aug 2025 00:05:03 GMT</pubDate>
            <description><![CDATA[Amazon Q, CodeCatalyst, Local Lambda debug, SAM/CFN syntax, ECS Terminal, AWS resources]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/aws/aws-toolkit-vscode">aws/aws-toolkit-vscode</a></h1>
            <p>Amazon Q, CodeCatalyst, Local Lambda debug, SAM/CFN syntax, ECS Terminal, AWS resources</p>
            <p>Language: TypeScript</p>
            <p>Stars: 1,788</p>
            <p>Forks: 677</p>
            <p>Stars today: 5 stars today</p>
            <h2>README</h2><pre># AWS Extensions for Visual Studio Code

[![Coverage](https://img.shields.io/codecov/c/github/aws/aws-toolkit-vscode/master.svg)](https://codecov.io/gh/aws/aws-toolkit-vscode/branch/master)

This project is open source. We encourage issues, feature requests, code reviews, pull requests or
any positive contribution. See [CONTRIBUTING.md](CONTRIBUTING.md) to get started.

### Amazon Q

[![Marketplace Version](https://img.shields.io/vscode-marketplace/v/AmazonWebServices.amazon-q-vscode.svg) ![Marketplace Downloads](https://img.shields.io/vscode-marketplace/d/AmazonWebServices.amazon-q-vscode.svg)](https://marketplace.visualstudio.com/items?itemName=AmazonWebServices.amazon-q-vscode)

Amazon Q for VS Code is a [VS Code extension](https://marketplace.visualstudio.com/items?itemName=AmazonWebServices.amazon-q-vscode) for connecting your IDE to [Amazon Q](https://aws.amazon.com/q/developer/) and leveraging generative AI to accelerate your software development.

-   Code faster with inline code suggestions as you type
-   Chat with [Amazon Q](https://aws.amazon.com/q/developer/) to generate code, explain code, and get answers to questions about software development
-   Analyze and fix security vulnerabilities in your project
-   Upgrade your Java applications

[Project Directory](https://github.com/aws/aws-toolkit-vscode/tree/master/packages/amazonq)

### AWS Toolkit

[![Marketplace Version](https://img.shields.io/vscode-marketplace/v/AmazonWebServices.aws-toolkit-vscode.svg) ![Marketplace Downloads](https://img.shields.io/vscode-marketplace/d/AmazonWebServices.aws-toolkit-vscode.svg)](https://marketplace.visualstudio.com/items?itemName=AmazonWebServices.aws-toolkit-vscode)

AWS Toolkit is a [VS Code extension](https://marketplace.visualstudio.com/itemdetails?itemName=AmazonWebServices.aws-toolkit-vscode) for connecting your IDE to your AWS resources:

-   Connect with [IAM credentials](https://docs.aws.amazon.com/sdkref/latest/guide/access-users.html),
    [IAM Identity Center (SSO)](https://docs.aws.amazon.com/singlesignon/latest/userguide/what-is.html),
    or [AWS Builder ID](https://docs.aws.amazon.com/signin/latest/userguide/differences-aws_builder_id.html)
-   Connect VSCode to your EC2 instances
-   Connect to your [CodeCatalyst](https://codecatalyst.aws/) Dev Environments
-   Debug your Lambda functions using [SAM CLI](https://github.com/aws/aws-sam-cli)
-   Check and autocomplete code in SAM/CFN (CloudFormation) `template.yaml` files
-   `Open Terminal` on your EC2 instances or ECS tasks
-   `Search Log Group` on your CloudWatch logs
-   Browse your AWS resources

[Project Directory](https://github.com/aws/aws-toolkit-vscode/tree/master/packages/toolkit)

## Documentation

-   Quick Start Guides for...
    -   [Amazon Q](https://marketplace.visualstudio.com/itemdetails?itemName=AmazonWebServices.amazon-q-vscode)
    -   [AWS Toolkit](https://marketplace.visualstudio.com/itemdetails?itemName=AmazonWebServices.aws-toolkit-vscode)
-   [FAQ / Troubleshooting](./docs/faq-credentials.md)
-   [User Guide](https://docs.aws.amazon.com/console/toolkit-for-vscode/welcome)
-   General info about [AWS SDKs and Tools](https://docs.aws.amazon.com/sdkref/latest/guide/overview.html)

## Feedback

We want your feedback!

-   Upvote üëç [feature requests](https://github.com/aws/aws-toolkit-vscode/issues?q=is%3Aissue+is%3Aopen+label%3Afeature-request+sort%3Areactions-%2B1-desc)
-   [Ask a question](https://github.com/aws/aws-toolkit-vscode/issues/new?labels=guidance&amp;template=guidance_request.md)
-   [Request a new feature](https://github.com/aws/aws-toolkit-vscode/issues/new?labels=feature-request&amp;template=feature_request.md)
-   [File an issue](https://github.com/aws/aws-toolkit-vscode/issues/new?labels=bug&amp;template=bug_report.md)
-   Or [send a pull request](CONTRIBUTING.md)!

## License

This project and the subprojects within **(AWS Toolkit for Visual Studio Code, Amazon Q for Visual Studio Code)** is distributed under the [Apache License, Version 2.0](https://www.apache.org/licenses/LICENSE-2.0).
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[Prat011/free-cluely]]></title>
            <link>https://github.com/Prat011/free-cluely</link>
            <guid>https://github.com/Prat011/free-cluely</guid>
            <pubDate>Wed, 06 Aug 2025 00:05:02 GMT</pubDate>
            <description><![CDATA[Open Source version of Cluely]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/Prat011/free-cluely">Prat011/free-cluely</a></h1>
            <p>Open Source version of Cluely</p>
            <p>Language: TypeScript</p>
            <p>Stars: 582</p>
            <p>Forks: 194</p>
            <p>Stars today: 25 stars today</p>
            <h2>README</h2><pre># Free Cluely

A desktop application to help you cheat on everything. 

## üöÄ Quick Start Guide

### Prerequisites
- Make sure you have Node.js installed on your computer
- Git installed on your computer
- A Gemini API key (get it from [Google AI Studio](https://makersuite.google.com/app/apikey))

### Installation Steps

1. Clone the repository:
```bash
git clone [repository-url]
cd free-cluely
```

2. Install dependencies:
```bash
npm install
```

3. Set up environment variables:
   - Create a file named `.env` in the root folder
   - Add your Gemini API key:
   ```
   GEMINI_API_KEY=your_api_key_here
   ```
   - Save the file

### Running the App

#### Method 1: Development Mode (Recommended for first run)
1. Open a terminal and run:
```bash
npm run dev -- --port 5180
```

2. Open another terminal in the same folder and run:
```bash
NODE_ENV=development npm run electron:dev
```

#### Method 2: Production Mode
```bash
npm run build
```
The built app will be in the `release` folder.

### ‚ö†Ô∏è Important Notes

1. **Closing the App**: 
   - Press `Cmd + Q` (Mac) or `Ctrl + Q` (Windows/Linux) to quit
   - Or use Activity Monitor/Task Manager to close `Interview Coder`
   - The X button currently doesn&#039;t work (known issue)

2. **If the app doesn&#039;t start**:
   - Make sure no other app is using port 5180
   - Try killing existing processes:
     ```bash
     # Find processes using port 5180
     lsof -i :5180
     # Kill them (replace [PID] with the process ID)
     kill [PID]
     ```

3. **Keyboard Shortcuts**:
   - `Cmd/Ctrl + B`: Toggle window visibility
   - `Cmd/Ctrl + H`: Take screenshot
   - &#039;Cmd/Enter&#039;: Get solution
   - `Cmd/Ctrl + Arrow Keys`: Move window

### Troubleshooting

If you see errors:
1. Delete the `node_modules` folder
2. Delete `package-lock.json`
3. Run `npm install` again
4. Try running the app again using Method 1

## Contribution

I&#039;m unable to maintain this repo actively because I do not have the time for it. Please do not create issues, if you have any PRs feel free to create them and i&#039;ll review and merge it.

If you are looking to integrate this for your company, i can work with you to create custom solution. Reach out on [twitter](https://x.com/prathitjoshi_)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[apache/superset]]></title>
            <link>https://github.com/apache/superset</link>
            <guid>https://github.com/apache/superset</guid>
            <pubDate>Wed, 06 Aug 2025 00:05:01 GMT</pubDate>
            <description><![CDATA[Apache Superset is a Data Visualization and Data Exploration Platform]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/apache/superset">apache/superset</a></h1>
            <p>Apache Superset is a Data Visualization and Data Exploration Platform</p>
            <p>Language: TypeScript</p>
            <p>Stars: 67,412</p>
            <p>Forks: 15,453</p>
            <p>Stars today: 19 stars today</p>
            <h2>README</h2><pre>&lt;!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
&quot;License&quot;); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
&quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
--&gt;

# Superset

[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://opensource.org/license/apache-2-0)
[![Latest Release on Github](https://img.shields.io/github/v/release/apache/superset?sort=semver)](https://github.com/apache/superset/releases/latest)
[![Build Status](https://github.com/apache/superset/actions/workflows/superset-python-unittest.yml/badge.svg)](https://github.com/apache/superset/actions)
[![PyPI version](https://badge.fury.io/py/apache_superset.svg)](https://badge.fury.io/py/apache_superset)
[![Coverage Status](https://codecov.io/github/apache/superset/coverage.svg?branch=master)](https://codecov.io/github/apache/superset)
[![PyPI](https://img.shields.io/pypi/pyversions/apache_superset.svg?maxAge=2592000)](https://pypi.python.org/pypi/apache_superset)
[![Get on Slack](https://img.shields.io/badge/slack-join-orange.svg)](http://bit.ly/join-superset-slack)
[![Documentation](https://img.shields.io/badge/docs-apache.org-blue.svg)](https://superset.apache.org)

&lt;picture width=&quot;500&quot;&gt;
  &lt;source
    width=&quot;600&quot;
    media=&quot;(prefers-color-scheme: dark)&quot;
    src=&quot;https://superset.apache.org/img/superset-logo-horiz-dark.svg&quot;
    alt=&quot;Superset logo (dark)&quot;
  /&gt;
  &lt;img
    width=&quot;600&quot;
    src=&quot;https://superset.apache.org/img/superset-logo-horiz-apache.svg&quot;
    alt=&quot;Superset logo (light)&quot;
  /&gt;
&lt;/picture&gt;

A modern, enterprise-ready business intelligence web application.

[**Why Superset?**](#why-superset) |
[**Supported Databases**](#supported-databases) |
[**Installation and Configuration**](#installation-and-configuration) |
[**Release Notes**](https://github.com/apache/superset/blob/master/RELEASING/README.md#release-notes-for-recent-releases) |
[**Get Involved**](#get-involved) |
[**Contributor Guide**](#contributor-guide) |
[**Resources**](#resources) |
[**Organizations Using Superset**](https://github.com/apache/superset/blob/master/RESOURCES/INTHEWILD.md)

## Why Superset?

Superset is a modern data exploration and data visualization platform. Superset can replace or augment proprietary business intelligence tools for many teams. Superset integrates well with a variety of data sources.

Superset provides:

- A **no-code interface** for building charts quickly
- A powerful, web-based **SQL Editor** for advanced querying
- A **lightweight semantic layer** for quickly defining custom dimensions and metrics
- Out of the box support for **nearly any SQL** database or data engine
- A wide array of **beautiful visualizations** to showcase your data, ranging from simple bar charts to geospatial visualizations
- Lightweight, configurable **caching layer** to help ease database load
- Highly extensible **security roles and authentication** options
- An **API** for programmatic customization
- A **cloud-native architecture** designed from the ground up for scale

## Screenshots &amp; Gifs

**Video Overview**

&lt;!-- File hosted here https://github.com/apache/superset-site/raw/lfs/superset-video-4k.mp4 --&gt;

[superset-video-1080p.webm](https://github.com/user-attachments/assets/b37388f7-a971-409c-96a7-90c4e31322e6)

&lt;br/&gt;

**Large Gallery of Visualizations**

&lt;kbd&gt;&lt;img title=&quot;Gallery&quot; src=&quot;https://superset.apache.org/img/screenshots/gallery.jpg&quot;/&gt;&lt;/kbd&gt;&lt;br/&gt;

**Craft Beautiful, Dynamic Dashboards**

&lt;kbd&gt;&lt;img title=&quot;View Dashboards&quot; src=&quot;https://superset.apache.org/img/screenshots/slack_dash.jpg&quot;/&gt;&lt;/kbd&gt;&lt;br/&gt;

**No-Code Chart Builder**

&lt;kbd&gt;&lt;img title=&quot;Slice &amp; dice your data&quot; src=&quot;https://superset.apache.org/img/screenshots/explore.jpg&quot;/&gt;&lt;/kbd&gt;&lt;br/&gt;

**Powerful SQL Editor**

&lt;kbd&gt;&lt;img title=&quot;SQL Lab&quot; src=&quot;https://superset.apache.org/img/screenshots/sql_lab.jpg&quot;/&gt;&lt;/kbd&gt;&lt;br/&gt;

## Supported Databases

Superset can query data from any SQL-speaking datastore or data engine (Presto, Trino, Athena, [and more](https://superset.apache.org/docs/configuration/databases)) that has a Python DB-API driver and a SQLAlchemy dialect.

Here are some of the major database solutions that are supported:

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/redshift.png&quot; alt=&quot;redshift&quot; border=&quot;0&quot; width=&quot;200&quot;/&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/google-biquery.png&quot; alt=&quot;google-bigquery&quot; border=&quot;0&quot; width=&quot;200&quot;/&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/snowflake.png&quot; alt=&quot;snowflake&quot; border=&quot;0&quot; width=&quot;200&quot;/&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/trino.png&quot; alt=&quot;trino&quot; border=&quot;0&quot; width=&quot;150&quot; /&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/presto.png&quot; alt=&quot;presto&quot; border=&quot;0&quot; width=&quot;200&quot;/&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/databricks.png&quot; alt=&quot;databricks&quot; border=&quot;0&quot; width=&quot;160&quot; /&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/druid.png&quot; alt=&quot;druid&quot; border=&quot;0&quot; width=&quot;200&quot; /&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/firebolt.png&quot; alt=&quot;firebolt&quot; border=&quot;0&quot; width=&quot;200&quot; /&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/timescale.png&quot; alt=&quot;timescale&quot; border=&quot;0&quot; width=&quot;200&quot; /&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/postgresql.png&quot; alt=&quot;postgresql&quot; border=&quot;0&quot; width=&quot;200&quot; /&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/mysql.png&quot; alt=&quot;mysql&quot; border=&quot;0&quot; width=&quot;200&quot; /&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/mssql-server.png&quot; alt=&quot;mssql-server&quot; border=&quot;0&quot; width=&quot;200&quot; /&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/ibm-db2.svg&quot; alt=&quot;db2&quot; border=&quot;0&quot; width=&quot;220&quot; /&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/sqlite.png&quot; alt=&quot;sqlite&quot; border=&quot;0&quot; width=&quot;200&quot; /&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/sybase.png&quot; alt=&quot;sybase&quot; border=&quot;0&quot; width=&quot;200&quot; /&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/mariadb.png&quot; alt=&quot;mariadb&quot; border=&quot;0&quot; width=&quot;200&quot; /&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/vertica.png&quot; alt=&quot;vertica&quot; border=&quot;0&quot; width=&quot;200&quot; /&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/oracle.png&quot; alt=&quot;oracle&quot; border=&quot;0&quot; width=&quot;200&quot; /&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/firebird.png&quot; alt=&quot;firebird&quot; border=&quot;0&quot; width=&quot;200&quot; /&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/greenplum.png&quot; alt=&quot;greenplum&quot; border=&quot;0&quot; width=&quot;200&quot;  /&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/clickhouse.png&quot; alt=&quot;clickhouse&quot; border=&quot;0&quot; width=&quot;200&quot; /&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/exasol.png&quot; alt=&quot;exasol&quot; border=&quot;0&quot; width=&quot;160&quot; /&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/monet-db.png&quot; alt=&quot;monet-db&quot; border=&quot;0&quot; width=&quot;200&quot;  /&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/apache-kylin.png&quot; alt=&quot;apache-kylin&quot; border=&quot;0&quot; width=&quot;80&quot;/&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/hologres.png&quot; alt=&quot;hologres&quot; border=&quot;0&quot; width=&quot;80&quot;/&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/netezza.png&quot; alt=&quot;netezza&quot; border=&quot;0&quot; width=&quot;80&quot;/&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/pinot.png&quot; alt=&quot;pinot&quot; border=&quot;0&quot; width=&quot;200&quot; /&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/teradata.png&quot; alt=&quot;teradata&quot; border=&quot;0&quot; width=&quot;200&quot; /&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/yugabyte.png&quot; alt=&quot;yugabyte&quot; border=&quot;0&quot; width=&quot;200&quot; /&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/databend.png&quot; alt=&quot;databend&quot; border=&quot;0&quot; width=&quot;200&quot; /&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/starrocks.png&quot; alt=&quot;starrocks&quot; border=&quot;0&quot; width=&quot;200&quot; /&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/doris.png&quot; alt=&quot;doris&quot; border=&quot;0&quot; width=&quot;200&quot; /&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/oceanbase.svg&quot; alt=&quot;oceanbase&quot; border=&quot;0&quot; width=&quot;220&quot; /&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/sap-hana.png&quot; alt=&quot;sap-hana&quot; border=&quot;0&quot; width=&quot;220&quot; /&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/denodo.png&quot; alt=&quot;denodo&quot; border=&quot;0&quot; width=&quot;200&quot; /&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/ydb.svg&quot; alt=&quot;ydb&quot; border=&quot;0&quot; width=&quot;200&quot; /&gt;
  &lt;img src=&quot;https://superset.apache.org/img/databases/tdengine.png&quot; alt=&quot;TDengine&quot; border=&quot;0&quot; width=&quot;200&quot; /&gt;
&lt;/p&gt;

**A more comprehensive list of supported databases** along with the configuration instructions can be found [here](https://superset.apache.org/docs/configuration/databases).

Want to add support for your datastore or data engine? Read more [here](https://superset.apache.org/docs/frequently-asked-questions#does-superset-work-with-insert-database-engine-here) about the technical requirements.

## Installation and Configuration

Try out Superset&#039;s [quickstart](https://superset.apache.org/docs/quickstart/) guide or learn about [the options for production deployments](https://superset.apache.org/docs/installation/architecture/).

## Get Involved

- Ask and answer questions on [StackOverflow](https://stackoverflow.com/questions/tagged/apache-superset) using the **apache-superset** tag
- [Join our community&#039;s Slack](http://bit.ly/join-superset-slack)
  and please read our [Slack Community Guidelines](https://github.com/apache/superset/blob/master/CODE_OF_CONDUCT.md#slack-community-guidelines)
- [Join our dev@superset.apache.org Mailing list](https://lists.apache.org/list.html?dev@superset.apache.org). To join, simply send an email to [dev-subscribe@superset.apache.org](mailto:dev-subscribe@superset.apache.org)
- If you want to help troubleshoot GitHub Issues involving the numerous database drivers that Superset supports, please consider adding your name and the databases you have access to on the [Superset Database Familiarity Rolodex](https://docs.google.com/spreadsheets/d/1U1qxiLvOX0kBTUGME1AHHi6Ywel6ECF8xk_Qy-V9R8c/edit#gid=0)
- Join Superset&#039;s Town Hall and [Operational Model](https://preset.io/blog/the-superset-operational-model-wants-you/) recurring meetings. Meeting info is available on the [Superset Community Calendar](https://superset.apache.org/community)

## Contributor Guide

Interested in contributing? Check out our
[CONTRIBUTING.md](https://github.com/apache/superset/blob/master/CONTRIBUTING.md)
to find resources around contributing along with a detailed guide on
how to set up a development environment.

## Resources

- [Superset &quot;In the Wild&quot;](https://github.com/apache/superset/blob/master/RESOURCES/INTHEWILD.md) - open a PR to add your org to the list!
- [Feature Flags](https://github.com/apache/superset/blob/master/RESOURCES/FEATURE_FLAGS.md) - the status of Superset&#039;s Feature Flags.
- [Standard Roles](https://github.com/apache/superset/blob/master/RESOURCES/STANDARD_ROLES.md) - How RBAC permissions map to roles.
- [Superset Wiki](https://github.com/apache/superset/wiki) - Tons of additional community resources: best practices, community content and other information.
- [Superset SIPs](https://github.com/orgs/apache/projects/170) - The status of Superset&#039;s SIPs (Superset Improvement Proposals) for both consensus and implementation status.

Understanding the Superset Points of View

- [The Case for Dataset-Centric Visualization](https://preset.io/blog/dataset-centric-visualization/)
- [Understanding the Superset Semantic Layer](https://preset.io/blog/understanding-superset-semantic-layer/)

- Getting Started with Superset
  - [Superset in 2 Minutes using Docker Compose](https://superset.apache.org/docs/installation/docker-compose#installing-superset-locally-using-docker-compose)
  - [Installing Database Drivers](https://superset.apache.org/docs/configuration/databases#installing-database-drivers)
  - [Building New Database Connectors](https://preset.io/blog/building-database-connector/)
  - [Create Your First Dashboard](https://superset.apache.org/docs/using-superset/creating-your-first-dashboard/)
  - [Comprehensive Tutorial for Contributing Code to Apache Superset
    ](https://preset.io/blog/tutorial-contributing-code-to-apache-superset/)
- [Resources to master Superset by Preset](https://preset.io/resources/)

- Deploying Superset

  - [Official Docker image](https://hub.docker.com/r/apache/superset)
  - [Helm Chart](https://github.com/apache/superset/tree/master/helm/superset)

- Recordings of Past [Superset Community Events](https://preset.io/events)

  - [Mixed Time Series Charts](https://preset.io/events/mixed-time-series-visualization-in-superset-workshop/)
  - [How the Bing Team Customized Superset for the Internal Self-Serve Data &amp; Analytics Platform](https://preset.io/events/how-the-bing-team-heavily-customized-superset-for-their-internal-data/)
  - [Live Demo: Visualizing MongoDB and Pinot Data using Trino](https://preset.io/events/2021-04-13-visualizing-mongodb-and-pinot-data-using-trino/)
  - [Introduction to the Superset API](https://preset.io/events/introduction-to-the-superset-api/)
  - [Building a Database Connector for Superset](https://preset.io/events/2021-02-16-building-a-database-connector-for-superset/)

- Visualizations

  - [Creating Viz Plugins](https://superset.apache.org/docs/contributing/creating-viz-plugins/)
  - [Managing and Deploying Custom Viz Plugins](https://medium.com/nmc-techblog/apache-superset-manage-custom-viz-plugins-in-production-9fde1a708e55)
  - [Why Apache Superset is Betting on Apache ECharts](https://preset.io/blog/2021-4-1-why-echarts/)

- [Superset API](https://superset.apache.org/docs/rest-api)

## Repo Activity

&lt;a href=&quot;https://next.ossinsight.io/widgets/official/compose-last-28-days-stats?repo_id=39464018&quot; target=&quot;_blank&quot; align=&quot;center&quot;&gt;
  &lt;picture&gt;
    &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://next.ossinsight.io/widgets/official/compose-last-28-days-stats/thumbnail.png?repo_id=39464018&amp;image_size=auto&amp;color_scheme=dark&quot; width=&quot;655&quot; height=&quot;auto&quot; /&gt;
    &lt;img alt=&quot;Performance Stats of apache/superset - Last 28 days&quot; src=&quot;https://next.ossinsight.io/widgets/official/compose-last-28-days-stats/thumbnail.png?repo_id=39464018&amp;image_size=auto&amp;color_scheme=light&quot; width=&quot;655&quot; height=&quot;auto&quot; /&gt;
  &lt;/picture&gt;
&lt;/a&gt;

&lt;!-- Made with [OSS Insight](https://ossinsight.io/) --&gt;

&lt;!-- telemetry/analytics pixel: --&gt;
&lt;img referrerpolicy=&quot;no-referrer-when-downgrade&quot; src=&quot;https://static.scarf.sh/a.png?x-pxid=bc1c90cd-bc04-4e11-8c7b-289fb2839492&quot; /&gt;
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[Effect-TS/effect]]></title>
            <link>https://github.com/Effect-TS/effect</link>
            <guid>https://github.com/Effect-TS/effect</guid>
            <pubDate>Wed, 06 Aug 2025 00:05:00 GMT</pubDate>
            <description><![CDATA[Build production-ready applications in TypeScript]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/Effect-TS/effect">Effect-TS/effect</a></h1>
            <p>Build production-ready applications in TypeScript</p>
            <p>Language: TypeScript</p>
            <p>Stars: 10,832</p>
            <p>Forks: 376</p>
            <p>Stars today: 25 stars today</p>
            <h2>README</h2><pre>![npm version](https://img.shields.io/npm/v/effect)

# Effect Monorepo

&gt; An ecosystem of tools to build robust applications in TypeScript

## Introduction

Welcome to Effect, a powerful TypeScript framework that provides a fully-fledged functional effect system with a rich standard library.

Effect consists of several packages that work together to help build robust TypeScript applications. The core package, `effect`, serves as the foundation of the framework, offering primitives for managing side effects, ensuring type safety, and supporting concurrency.

## Monorepo Structure

The Effect monorepo is organized into multiple packages, each extending the core functionality. Below is an overview of the packages included:

| Package                           | Description                                                                                 |                                                                                                    |
| --------------------------------- | ------------------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------------- |
| `effect`                          | Core package                                                                                | [README](https://github.com/Effect-TS/effect/blob/main/packages/effect/README.md)                  |
| `@effect/ai`                      | AI utilities                                                                                | [README](https://github.com/Effect-TS/effect/blob/main/packages/ai/ai/README.md)                   |
| `@effect/ai-openai`               | OpenAI utilities                                                                            | [README](https://github.com/Effect-TS/effect/blob/main/packages/ai/openai/README.md)               |
| `@effect/ai-anthropic`            | Anthropic utilities                                                                         | [README](https://github.com/Effect-TS/effect/blob/main/packages/ai/anthropic/README.md)            |
| `@effect/ai-amazon-bedrock`       | Effect modules for working with Amazon Bedrock AI apis                                      | [README](https://github.com/Effect-TS/effect/blob/main/packages/ai/amazon-bedrock/README.md)       |
| `@effect/ai-google`               | Effect modules for working with Google AI apis                                              | [README](https://github.com/Effect-TS/effect/blob/main/packages/ai/google/README.md)               |
| `@effect/cli`                     | CLI utilities                                                                               | [README](https://github.com/Effect-TS/effect/blob/main/packages/cli/README.md)                     |
| `@effect/cluster`                 | Distributed computing tools                                                                 | [README](https://github.com/Effect-TS/effect/blob/main/packages/cluster/README.md)                 |
| `@effect/experimental`            | Experimental features and APIs                                                              | [README](https://github.com/Effect-TS/effect/blob/main/packages/experimental/README.md)            |
| `@effect/opentelemetry`           | [OpenTelemetry](https://opentelemetry.io/) integration                                      | [README](https://github.com/Effect-TS/effect/blob/main/packages/opentelemetry/README.md)           |
| `@effect/platform`                | Cross-platform runtime utilities                                                            | [README](https://github.com/Effect-TS/effect/blob/main/packages/platform/README.md)                |
| `@effect/platform-browser`        | Platform utilities for the browser                                                          | [README](https://github.com/Effect-TS/effect/blob/main/packages/platform-browser/README.md)        |
| `@effect/platform-bun`            | Platform utilities for [Bun](https://bun.sh/)                                               | [README](https://github.com/Effect-TS/effect/blob/main/packages/platform-bun/README.md)            |
| `@effect/platform-node`           | Platform utilities for [Node.js](https://nodejs.org)                                        | [README](https://github.com/Effect-TS/effect/blob/main/packages/platform-node/README.md)           |
| `@effect/platform-node-shared`    | Shared utilities for [Node.js](https://nodejs.org)                                          | [README](https://github.com/Effect-TS/effect/blob/main/packages/platform-node-shared/README.md)    |
| `@effect/printer`                 | General-purpose printing utilities                                                          | [README](https://github.com/Effect-TS/effect/blob/main/packages/printer/README.md)                 |
| `@effect/printer-ansi`            | ANSI-compatible printing utilities                                                          | [README](https://github.com/Effect-TS/effect/blob/main/packages/printer-ansi/README.md)            |
| `@effect/rpc`                     | Remote procedure call (RPC) utilities                                                       | [README](https://github.com/Effect-TS/effect/blob/main/packages/rpc/README.md)                     |
| `@effect/sql`                     | SQL database utilities                                                                      | [README](https://github.com/Effect-TS/effect/blob/main/packages/sql/README.md)                     |
| `@effect/sql-clickhouse`          | An `@effect/sql` implementation for [ClickHouse](https://clickhouse.com/).                  | [README](https://github.com/Effect-TS/effect/blob/main/packages/sql-clickhouse/README.md)          |
| `@effect/sql-d1`                  | An `@effect/sql` implementation for [Cloudflare D1](https://developers.cloudflare.com/d1/). | [README](https://github.com/Effect-TS/effect/blob/main/packages/sql-d1/README.md)                  |
| `@effect/sql-drizzle`             | An `@effect/sql` implementation for [Drizzle](https://orm.drizzle.team/).                   | [README](https://github.com/Effect-TS/effect/blob/main/packages/sql-drizzle/README.md)             |
| `@effect/sql-kysely`              | An `@effect/sql` implementation for [Kysely](https://kysely.dev/).                          | [README](https://github.com/Effect-TS/effect/blob/main/packages/sql-kysely/README.md)              |
| `@effect/sql-libsql`              | An `@effect/sql` implementation using the `@libsql/client` library.                         | [README](https://github.com/Effect-TS/effect/blob/main/packages/sql-libsql/README.md)              |
| `@effect/sql-mssql`               | An `@effect/sql` implementation using the mssql `tedious` library.                          | [README](https://github.com/Effect-TS/effect/blob/main/packages/sql-mssql/README.md)               |
| `@effect/sql-mysql2`              | An `@effect/sql` implementation using the `mysql2` library.                                 | [README](https://github.com/Effect-TS/effect/blob/main/packages/sql-mysql2/README.md)              |
| `@effect/sql-pg`                  | An `@effect/sql` implementation using the `postgres.js` library.                            | [README](https://github.com/Effect-TS/effect/blob/main/packages/sql-pg/README.md)                  |
| `@effect/sql-sqlite-bun`          | An `@effect/sql` implementation using the `bun:sqlite` library.                             | [README](https://github.com/Effect-TS/effect/blob/main/packages/sql-sqlite-bun/README.md)          |
| `@effect/sql-sqlite-do`           | An `@effect/sql` implementation for Cloudflare Durable Objects sqlite storage.              | [README](https://github.com/Effect-TS/effect/blob/main/packages/sql-sqlite-do/README.md)           |
| `@effect/sql-sqlite-node`         | An `@effect/sql` implementation using the `better-sqlite3` library.                         | [README](https://github.com/Effect-TS/effect/blob/main/packages/sql-sqlite-node/README.md)         |
| `@effect/sql-sqlite-react-native` | An `@effect/sql` implementation using the `react-native-quick-sqlite` library.              | [README](https://github.com/Effect-TS/effect/blob/main/packages/sql-sqlite-react-native/README.md) |
| `@effect/sql-sqlite-wasm`         | An `@effect/sql` implementation using the `@sqlite.org/sqlite-wasm` library.                | [README](https://github.com/Effect-TS/effect/blob/main/packages/sql-sqlite-wasm/README.md)         |
| `@effect/typeclass`               | Functional programming type classes                                                         | [README](https://github.com/Effect-TS/effect/blob/main/packages/typeclass/README.md)               |
| `@effect/vitest`                  | Testing utilities for [Vitest](https://vitest.dev/)                                         | [README](https://github.com/Effect-TS/effect/blob/main/packages/vitest/README.md)                  |
| `@effect/workflow`                | Durable workflows for Effect                                                                | [README](https://github.com/Effect-TS/effect/blob/main/packages/workflow/README.md)                |

# Documentation

## Website

For detailed information and usage examples, visit the [Effect website](https://www.effect.website/).

## API Reference

For a complete API reference of the core package `effect`, see the [Effect API documentation](https://effect-ts.github.io/effect/).

## Introduction to Effect

Get started with Effect by watching our introductory video on YouTube. This video provides an overview of Effect and its key features:

[![Introduction to Effect](https://img.youtube.com/vi/ViSiXfBKElQ/maxresdefault.jpg)](https://youtu.be/ViSiXfBKElQ)

# Connect with Our Community

Join the Effect community on Discord to connect with other developers, ask questions, and share insights: [Join Effect&#039;s Discord Community](https://discord.gg/hdt7t7jpvn).

# Contributing via Pull Requests

We welcome contributions via pull requests! Here are some guidelines to help you get started:

## Setting Up Your Environment

Begin by forking the repository and clone it to your local machine.

Navigate into the cloned repository and create a new branch for your changes:

```bash
git checkout -b my-branch
```

Ensure all required dependencies are installed by running:

```bash
pnpm install  # Requires pnpm version 10.4.0
```

## Making Changes

### Implement Your Changes

Make the changes you propose to the codebase. If your changes impact functionality, please **add corresponding tests** to validate your updates.

### Validate Your Changes

Run the following commands to ensure your changes do not introduce any issues:

- `pnpm codegen` (optional): Re-generate the package entrypoints in case you have changed the structure of a package or introduced a new module.
- `pnpm check`: Confirm that the code compiles without errors.
- `pnpm test`: Execute all unit tests to ensure your changes haven&#039;t broken existing functionality.
- `pnpm circular`: Check for any circular dependencies in imports.
- `pnpm lint`: Ensure the code adheres to our coding standards.
  - If you encounter style issues, use `pnpm lint-fix` to automatically correct some of these.
- `pnpm test-types`: Run type-level tests. Tests are written using [tstyche](https://tstyche.org/).
- `pnpm docgen`: Ensure the documentation generates correctly and reflects any changes made.

### Document Your Changes

#### JSDoc Comments

When adding a new feature, it&#039;s important to document your code using JSDoc comments. This helps other developers understand the purpose and usage of your changes. Include at least the following in your JSDoc comments:

- **A Short Description**: Summarize the purpose and functionality of the feature.
- **Example**: Provide a usage example under the `@example` tag to demonstrate how to use the feature.
- **Since Version**: Use the `@since` tag to indicate the version in which the feature was introduced. If you&#039;re unsure about the version, please consult with a project maintainer.
- **Category (Optional)**: You can categorize the feature with the `@category` tag to help organize the documentation. If you&#039;re unsure about what category to assign, ask a project maintainer.

**Note**: A HTML utility file, [`code2jsdoc-example.html`](/scripts/jsdocs/code2jsdoc-example.html), has been added to assist with creating JSDoc `@example` comments. This web-based interface includes two text areas:

1. An input textarea for pasting example code.
2. An output textarea that dynamically generates formatted JSDoc `@example` comments.

This utility helps ensure consistent formatting and streamlines the process of documenting examples. See the following example of its usage:

Example Input:

```ts
import { Effect } from &quot;effect&quot;

console.log(Effect.runSyncExit(Effect.succeed(1)))
/*
Output:
{
  _id: &quot;Exit&quot;,
  _tag: &quot;Success&quot;,
  value: 1
}
*/
```

Output:

````
*
* @example
* ```ts
* import { Effect } from &quot;effect&quot;
*
* console.log(Effect.runSyncExit(Effect.succeed(1)))
* // Output:
* // {
* //   _id: &quot;Exit&quot;,
* //   _tag: &quot;Success&quot;,
* //   value: 1
* // }
* ```
*
````

By using this utility, you can save time and maintain consistency in your JSDoc comments, especially for complex examples.

#### Changeset Documentation

Before committing your changes, document them with a changeset. This process helps in tracking modifications and effectively communicating them to the project team and users:

```bash
pnpm changeset
```

During the changeset creation process, you will be prompted to select the appropriate level for your changes:

- **patch**: Opt for this if you are making small fixes or minor changes that do not affect the library&#039;s overall functionality.
- **minor**: Choose this for new features that enhance functionality but do not disrupt existing features.
- **major**: Select this for any changes that result in backward-incompatible modifications to the library.

## Finalizing Your Contribution

### Commit Your Changes

Once you have documented your changes with a changeset, it‚Äôs time to commit them to the repository. Use a clear and descriptive commit message, which could be the same message you used in your changeset:

```bash
git commit -am &#039;Add some feature&#039;
```

#### Linking to Issues

If your commit addresses an open issue, reference the issue number directly in your commit message. This helps to link your contribution clearly to specific tasks or bug reports. Additionally, if your commit resolves the issue, you can indicate this by adding a phrase like `&quot;, closes #&lt;issue-number&gt;&quot;`. For example:

```bash
git commit -am &#039;Add some feature, closes #123&#039;
```

This practice not only helps in tracking the progress of issues but also automatically closes the issue when the commit is merged, streamlining project management.

### Push to Your Fork

Push the changes up to your GitHub fork:

```bash
git push origin my-branch
```

### Create a Pull Request

Open a pull request against the appropriate branch on the original repository:

- `main` branch: For minor patches or bug fixes.
- `next-minor` branch: For new features that are non-breaking.
- `next-major` branch: For changes that introduce breaking modifications.

Please be patient! We will do our best to review your pull request as soon as possible.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[MODSetter/SurfSense]]></title>
            <link>https://github.com/MODSetter/SurfSense</link>
            <guid>https://github.com/MODSetter/SurfSense</guid>
            <pubDate>Wed, 06 Aug 2025 00:04:59 GMT</pubDate>
            <description><![CDATA[Open Source Alternative to NotebookLM / Perplexity, connected to external sources such as Search Engines, Slack, Linear, Jira, ClickUp, Confluence, Notion, YouTube, GitHub, Discord and more. Join our discord: https://discord.gg/ejRNvftDp9]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/MODSetter/SurfSense">MODSetter/SurfSense</a></h1>
            <p>Open Source Alternative to NotebookLM / Perplexity, connected to external sources such as Search Engines, Slack, Linear, Jira, ClickUp, Confluence, Notion, YouTube, GitHub, Discord and more. Join our discord: https://discord.gg/ejRNvftDp9</p>
            <p>Language: TypeScript</p>
            <p>Stars: 6,276</p>
            <p>Forks: 481</p>
            <p>Stars today: 20 stars today</p>
            <h2>README</h2><pre>
![new_header](https://github.com/user-attachments/assets/e236b764-0ddc-42ff-a1f1-8fbb3d2e0e65)


&lt;div align=&quot;center&quot;&gt;
&lt;a href=&quot;https://discord.gg/ejRNvftDp9&quot;&gt;
&lt;img src=&quot;https://img.shields.io/discord/1359368468260192417&quot; alt=&quot;Discord&quot;&gt;
&lt;/a&gt;
&lt;/div&gt;


# SurfSense
While tools like NotebookLM and Perplexity are impressive and highly effective for conducting research on any topic/query, SurfSense elevates this capability by integrating with your personal knowledge base. It is a highly customizable AI research agent, connected to external sources such as Search Engines (Tavily, LinkUp), Slack, Linear, Jira, ClickUp, Confluence, Notion, YouTube, GitHub, Discord and more to come.

&lt;div align=&quot;center&quot;&gt;
&lt;a href=&quot;https://trendshift.io/repositories/13606&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://trendshift.io/api/badge/repositories/13606&quot; alt=&quot;MODSetter%2FSurfSense | Trendshift&quot; style=&quot;width: 250px; height: 55px;&quot; width=&quot;250&quot; height=&quot;55&quot;/&gt;&lt;/a&gt;
&lt;/div&gt;


# Video 


https://github.com/user-attachments/assets/d9221908-e0de-4b2f-ac3a-691cf4b202da


## Podcast Sample

https://github.com/user-attachments/assets/a0a16566-6967-4374-ac51-9b3e07fbecd7




## Key Features

### üí° **Idea**: 
Have your own highly customizable private NotebookLM and Perplexity integrated with external sources.
### üìÅ **Multiple File Format Uploading Support**
Save content from your own personal files *(Documents, images, videos and supports **50+ file extensions**)* to your own personal knowledge base .
### üîç **Powerful Search**
Quickly research or find anything in your saved content .
### üí¨ **Chat with your Saved Content**
 Interact in Natural Language and get cited answers.
### üìÑ **Cited Answers**
Get Cited answers just like Perplexity.
### üîî **Privacy &amp; Local LLM Support**
Works Flawlessly with Ollama local LLMs.
### üè† **Self Hostable**
Open source and easy to deploy locally.
### üéôÔ∏è Podcasts 
- Blazingly fast podcast generation agent. (Creates a 3-minute podcast in under 20 seconds.)
- Convert your chat conversations into engaging audio content
- Support for multiple TTS providers (OpenAI, Azure, Google Vertex AI)

### üìä **Advanced RAG Techniques**
- Supports 100+ LLM&#039;s
- Supports 6000+ Embedding Models.
- Supports all major Rerankers (Pinecode, Cohere, Flashrank etc)
- Uses Hierarchical Indices (2 tiered RAG setup).
- Utilizes Hybrid Search (Semantic + Full Text Search combined with Reciprocal Rank Fusion).
- RAG as a Service API Backend.

### ‚ÑπÔ∏è **External Sources**
- Search Engines (Tavily, LinkUp)
- Slack
- Linear
- Jira
- ClickUp
- Confluence
- Notion
- Youtube Videos
- GitHub
- Discord
- and more to come.....

## üìÑ **Supported File Extensions**

&gt; **Note**: File format support depends on your ETL service configuration. LlamaCloud supports 50+ formats, Unstructured supports 34+ core formats, and Docling (core formats, local processing, privacy-focused, no API key).

### Documents &amp; Text
**LlamaCloud**: `.pdf`, `.doc`, `.docx`, `.docm`, `.dot`, `.dotm`, `.rtf`, `.txt`, `.xml`, `.epub`, `.odt`, `.wpd`, `.pages`, `.key`, `.numbers`, `.602`, `.abw`, `.cgm`, `.cwk`, `.hwp`, `.lwp`, `.mw`, `.mcw`, `.pbd`, `.sda`, `.sdd`, `.sdp`, `.sdw`, `.sgl`, `.sti`, `.sxi`, `.sxw`, `.stw`, `.sxg`, `.uof`, `.uop`, `.uot`, `.vor`, `.wps`, `.zabw`

**Unstructured**: `.doc`, `.docx`, `.odt`, `.rtf`, `.pdf`, `.xml`, `.txt`, `.md`, `.markdown`, `.rst`, `.html`, `.org`, `.epub`

**Docling**: `.pdf`, `.docx`, `.html`, `.htm`, `.xhtml`, `.adoc`, `.asciidoc`

### Presentations
**LlamaCloud**: `.ppt`, `.pptx`, `.pptm`, `.pot`, `.potm`, `.potx`, `.odp`, `.key`

**Unstructured**: `.ppt`, `.pptx`

**Docling**: `.pptx`

### Spreadsheets &amp; Data
**LlamaCloud**: `.xlsx`, `.xls`, `.xlsm`, `.xlsb`, `.xlw`, `.csv`, `.tsv`, `.ods`, `.fods`, `.numbers`, `.dbf`, `.123`, `.dif`, `.sylk`, `.slk`, `.prn`, `.et`, `.uos1`, `.uos2`, `.wk1`, `.wk2`, `.wk3`, `.wk4`, `.wks`, `.wq1`, `.wq2`, `.wb1`, `.wb2`, `.wb3`, `.qpw`, `.xlr`, `.eth`

**Unstructured**: `.xls`, `.xlsx`, `.csv`, `.tsv`

**Docling**: `.xlsx`, `.csv`

### Images
**LlamaCloud**: `.jpg`, `.jpeg`, `.png`, `.gif`, `.bmp`, `.svg`, `.tiff`, `.webp`, `.html`, `.htm`, `.web`

**Unstructured**: `.jpg`, `.jpeg`, `.png`, `.bmp`, `.tiff`, `.heic`

**Docling**: `.jpg`, `.jpeg`, `.png`, `.bmp`, `.tiff`, `.tif`, `.webp`

### Audio &amp; Video *(Always Supported)*
`.mp3`, `.mpga`, `.m4a`, `.wav`, `.mp4`, `.mpeg`, `.webm`

### Email &amp; Communication
**Unstructured**: `.eml`, `.msg`, `.p7s`

### üîñ Cross Browser Extension
- The SurfSense extension can be used to save any webpage you like.
- Its main usecase is to save any webpages protected beyond authentication.


## FEATURE REQUESTS AND FUTURE


**SurfSense is actively being developed.** While it&#039;s not yet production-ready, you can help us speed up the process.

Join the [SurfSense Discord](https://discord.gg/ejRNvftDp9) and help shape the future of SurfSense!

## üöÄ Roadmap

Stay up to date with our development progress and upcoming features!  
Check out our public roadmap and contribute your ideas or feedback:

**View the Roadmap:** [SurfSense Roadmap on GitHub Projects](https://github.com/users/MODSetter/projects/2)

## How to get started?

### Installation Options

SurfSense provides two installation methods:

1. **[Docker Installation](https://www.surfsense.net/docs/docker-installation)** - The easiest way to get SurfSense up and running with all dependencies containerized.
   - Includes pgAdmin for database management through a web UI
   - Supports environment variable customization via `.env` file
   - Flexible deployment options (full stack or core services only)
   - No need to manually edit configuration files between environments
   - See [Docker Setup Guide](DOCKER_SETUP.md) for detailed instructions
   - For deployment scenarios and options, see [Deployment Guide](DEPLOYMENT_GUIDE.md)

2. **[Manual Installation (Recommended)](https://www.surfsense.net/docs/manual-installation)** - For users who prefer more control over their setup or need to customize their deployment.

Both installation guides include detailed OS-specific instructions for Windows, macOS, and Linux.

Before installation, make sure to complete the [prerequisite setup steps](https://www.surfsense.net/docs/) including:
- PGVector setup
- **File Processing ETL Service** (choose one):
  - Unstructured.io API key (supports 34+ formats)
  - LlamaIndex API key (enhanced parsing, supports 50+ formats)
  - Docling (local processing, no API key required, supports PDF, Office docs, images, HTML, CSV)
- Other required API keys

## Screenshots

**Research Agent** 

![updated_researcher](https://github.com/user-attachments/assets/e22c5d86-f511-4c72-8c50-feba0c1561b4)

**Search Spaces** 

![search_spaces](https://github.com/user-attachments/assets/e254c38c-f937-44b6-9e9d-770db583d099)

**Manage Documents** 
![documents](https://github.com/user-attachments/assets/7001e306-eb06-4009-89c6-8fadfdc3fc4d)

**Podcast Agent** 
![podcasts](https://github.com/user-attachments/assets/6cb82ffd-9e14-4172-bc79-67faf34c4c1c)


**Agent Chat** 

![git_chat](https://github.com/user-attachments/assets/bb352d52-1c6d-4020-926b-722d0b98b491)

**Browser Extension**

![ext1](https://github.com/user-attachments/assets/1f042b7a-6349-422b-94fb-d40d0df16c40)

![ext2](https://github.com/user-attachments/assets/a9b9f1aa-2677-404d-b0a0-c1b2dddf24a7)


## Tech Stack


 ### **BackEnd** 

-  **FastAPI**: Modern, fast web framework for building APIs with Python
  
-  **PostgreSQL with pgvector**: Database with vector search capabilities for similarity searches

-  **SQLAlchemy**: SQL toolkit and ORM (Object-Relational Mapping) for database interactions

-  **Alembic**: A database migrations tool for SQLAlchemy.

-  **FastAPI Users**: Authentication and user management with JWT and OAuth support

-  **LangGraph**: Framework for developing AI-agents.
  
-  **LangChain**: Framework for developing AI-powered applications.

-  **LLM Integration**: Integration with LLM models through LiteLLM

-  **Rerankers**: Advanced result ranking for improved search relevance

-  **Hybrid Search**: Combines vector similarity and full-text search for optimal results using Reciprocal Rank Fusion (RRF)

-  **Vector Embeddings**: Document and text embeddings for semantic search

-  **pgvector**: PostgreSQL extension for efficient vector similarity operations

-  **Chonkie**: Advanced document chunking and embedding library
 - Uses `AutoEmbeddings` for flexible embedding model selection
 -  `LateChunker` for optimized document chunking based on embedding model&#039;s max sequence length


  
---
 ### **FrontEnd**

-  **Next.js 15.2.3**: React framework featuring App Router, server components, automatic code-splitting, and optimized rendering.

-  **React 19.0.0**: JavaScript library for building user interfaces.

-  **TypeScript**: Static type-checking for JavaScript, enhancing code quality and developer experience.
- **Vercel AI SDK Kit UI Stream Protocol**: To create scalable chat UI.

-  **Tailwind CSS 4.x**: Utility-first CSS framework for building custom UI designs.

-  **Shadcn**: Headless components library.

-  **Lucide React**: Icon set implemented as React components.

-  **Framer Motion**: Animation library for React.

-  **Sonner**: Toast notification library.

-  **Geist**: Font family from Vercel.

-  **React Hook Form**: Form state management and validation.

-  **Zod**: TypeScript-first schema validation with static type inference.

-  **@hookform/resolvers**: Resolvers for using validation libraries with React Hook Form.

-  **@tanstack/react-table**: Headless UI for building powerful tables &amp; datagrids.


 ### **DevOps**

-  **Docker**: Container platform for consistent deployment across environments
  
-  **Docker Compose**: Tool for defining and running multi-container Docker applications

-  **pgAdmin**: Web-based PostgreSQL administration tool included in Docker setup


### **Extension** 
 Manifest v3 on Plasmo

## Future Work
- Add More Connectors.
- Patch minor bugs.
- Document Chat **[REIMPLEMENT]**
- Document Podcasts



## Contribute 

Contributions are very welcome! A contribution can be as small as a ‚≠ê or even finding and creating issues.
Fine-tuning the Backend is always desired.

For detailed contribution guidelines, please see our [CONTRIBUTING.md](CONTRIBUTING.md) file.

## Star History

&lt;a href=&quot;https://www.star-history.com/#MODSetter/SurfSense&amp;Date&quot;&gt;
 &lt;picture&gt;
   &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://api.star-history.com/svg?repos=MODSetter/SurfSense&amp;type=Date&amp;theme=dark&quot; /&gt;
   &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://api.star-history.com/svg?repos=MODSetter/SurfSense&amp;type=Date&quot; /&gt;
   &lt;img alt=&quot;Star History Chart&quot; src=&quot;https://api.star-history.com/svg?repos=MODSetter/SurfSense&amp;type=Date&quot; /&gt;
 &lt;/picture&gt;
&lt;/a&gt;

</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
    </channel>
</rss>