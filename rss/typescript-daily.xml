<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for typescript - TypeScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for typescript.</description>
        <lastBuildDate>Wed, 09 Jul 2025 00:05:10 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[humanlayer/12-factor-agents]]></title>
            <link>https://github.com/humanlayer/12-factor-agents</link>
            <guid>https://github.com/humanlayer/12-factor-agents</guid>
            <pubDate>Wed, 09 Jul 2025 00:05:10 GMT</pubDate>
            <description><![CDATA[What are the principles we can use to build LLM-powered software that is actually good enough to put in the hands of production customers?]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/humanlayer/12-factor-agents">humanlayer/12-factor-agents</a></h1>
            <p>What are the principles we can use to build LLM-powered software that is actually good enough to put in the hands of production customers?</p>
            <p>Language: TypeScript</p>
            <p>Stars: 7,378</p>
            <p>Forks: 474</p>
            <p>Stars today: 707 stars today</p>
            <h2>README</h2><pre># 12-Factor Agents - Principles for building reliable LLM applications

&lt;div align=&quot;center&quot;&gt;
&lt;a href=&quot;https://www.apache.org/licenses/LICENSE-2.0&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/badge/Code-Apache%202.0-blue.svg&quot; alt=&quot;Code License: Apache 2.0&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://creativecommons.org/licenses/by-sa/4.0/&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/badge/Content-CC%20BY--SA%204.0-lightgrey.svg&quot; alt=&quot;Content License: CC BY-SA 4.0&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://discord.gg/WffDJYazzy&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/chat-discord-5865F2&quot; alt=&quot;Discord Server&quot;&gt;&lt;/a&gt;    
&lt;a href=&quot;https://www.youtube.com/watch?v=yxJDyQ8v6P0&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/youtube-deep_dive-crimson&quot; alt=&quot;YouTube
Deep Dive&quot;&gt;&lt;/a&gt;
    
&lt;/div&gt;

*In the spirit of [12 Factor Apps](https://12factor.net/)*.  *The source for this project is public at https://github.com/humanlayer/12-factor-agents, and I welcome your feedback and contributions. Let&#039;s figure this out together!*


&lt;img referrerpolicy=&quot;no-referrer-when-downgrade&quot; src=&quot;https://static.scarf.sh/a.png?x-pxid=2acad99a-c2d9-48df-86f5-9ca8061b7bf9&quot; /&gt;

&lt;a href=&quot;#visual-nav&quot;&gt;&lt;img width=&quot;907&quot; alt=&quot;Screenshot 2025-04-03 at 2 49 07 PM&quot; src=&quot;https://github.com/user-attachments/assets/23286ad8-7bef-4902-b371-88ff6a22e998&quot; /&gt;&lt;/a&gt;


Hi, I&#039;m Dex. I&#039;ve been [hacking](https://youtu.be/8bIHcttkOTE) on [AI agents](https://theouterloop.substack.com) for [a while](https://humanlayer.dev). 


**I&#039;ve tried every agent framework out there**, from the plug-and-play crew/langchains to the &quot;minimalist&quot; smolagents of the world to the &quot;production grade&quot; langraph, griptape, etc. 

**I&#039;ve talked to a lot of really strong founders**, in and out of YC, who are all building really impressive things with AI. Most of them are rolling the stack themselves. I don&#039;t see a lot of frameworks in production customer-facing agents.

**I&#039;ve been surprised to find** that most of the products out there billing themselves as &quot;AI Agents&quot; are not all that agentic. A lot of them are mostly deterministic code, with LLM steps sprinkled in at just the right points to make the experience truly magical.

Agents, at least the good ones, don&#039;t follow the [&quot;here&#039;s your prompt, here&#039;s a bag of tools, loop until you hit the goal&quot;](https://www.anthropic.com/engineering/building-effective-agents#agents) pattern. Rather, they are comprised of mostly just software. 

So, I set out to answer:

&gt; ### **What are the principles we can use to build LLM-powered software that is actually good enough to put in the hands of production customers?**

Welcome to 12-factor agents. As every Chicago mayor since Daley has consistently plastered all over the city&#039;s major airports, we&#039;re glad you&#039;re here.

*Special thanks to [@iantbutler01](https://github.com/iantbutler01), [@tnm](https://github.com/tnm), [@hellovai](https://www.github.com/hellovai), [@stantonk](https://www.github.com/stantonk), [@balanceiskey](https://www.github.com/balanceiskey), [@AdjectiveAllison](https://www.github.com/AdjectiveAllison), [@pfbyjy](https://www.github.com/pfbyjy), [@a-churchill](https://www.github.com/a-churchill), and the SF MLOps community for early feedback on this guide.*

## The Short Version: The 12 Factors

Even if LLMs [continue to get exponentially more powerful](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-10-small-focused-agents.md#what-if-llms-get-smarter), there will be core engineering techniques that make LLM-powered software more reliable, more scalable, and easier to maintain.

- [How We Got Here: A Brief History of Software](https://github.com/humanlayer/12-factor-agents/blob/main/content/brief-history-of-software.md)
- [Factor 1: Natural Language to Tool Calls](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-01-natural-language-to-tool-calls.md)
- [Factor 2: Own your prompts](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-02-own-your-prompts.md)
- [Factor 3: Own your context window](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-03-own-your-context-window.md)
- [Factor 4: Tools are just structured outputs](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-04-tools-are-structured-outputs.md)
- [Factor 5: Unify execution state and business state](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-05-unify-execution-state.md)
- [Factor 6: Launch/Pause/Resume with simple APIs](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-06-launch-pause-resume.md)
- [Factor 7: Contact humans with tool calls](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-07-contact-humans-with-tools.md)
- [Factor 8: Own your control flow](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-08-own-your-control-flow.md)
- [Factor 9: Compact Errors into Context Window](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-09-compact-errors.md)
- [Factor 10: Small, Focused Agents](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-10-small-focused-agents.md)
- [Factor 11: Trigger from anywhere, meet users where they are](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-11-trigger-from-anywhere.md)
- [Factor 12: Make your agent a stateless reducer](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-12-stateless-reducer.md)

### Visual Nav

|    |    |    |
|----|----|-----|
|[![factor 1](https://github.com/humanlayer/12-factor-agents/blob/main/img/110-natural-language-tool-calls.png)](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-01-natural-language-to-tool-calls.md) | [![factor 2](https://github.com/humanlayer/12-factor-agents/blob/main/img/120-own-your-prompts.png)](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-02-own-your-prompts.md) | [![factor 3](https://github.com/humanlayer/12-factor-agents/blob/main/img/130-own-your-context-building.png)](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-03-own-your-context-window.md) |
|[![factor 4](https://github.com/humanlayer/12-factor-agents/blob/main/img/140-tools-are-just-structured-outputs.png)](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-04-tools-are-structured-outputs.md) | [![factor 5](https://github.com/humanlayer/12-factor-agents/blob/main/img/150-unify-state.png)](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-05-unify-execution-state.md) | [![factor 6](https://github.com/humanlayer/12-factor-agents/blob/main/img/160-pause-resume-with-simple-apis.png)](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-06-launch-pause-resume.md) |
| [![factor 7](https://github.com/humanlayer/12-factor-agents/blob/main/img/170-contact-humans-with-tools.png)](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-07-contact-humans-with-tools.md) | [![factor 8](https://github.com/humanlayer/12-factor-agents/blob/main/img/180-control-flow.png)](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-08-own-your-control-flow.md) | [![factor 9](https://github.com/humanlayer/12-factor-agents/blob/main/img/190-factor-9-errors-static.png)](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-09-compact-errors.md) |
| [![factor 10](https://github.com/humanlayer/12-factor-agents/blob/main/img/1a0-small-focused-agents.png)](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-10-small-focused-agents.md) | [![factor 11](https://github.com/humanlayer/12-factor-agents/blob/main/img/1b0-trigger-from-anywhere.png)](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-11-trigger-from-anywhere.md) | [![factor 12](https://github.com/humanlayer/12-factor-agents/blob/main/img/1c0-stateless-reducer.png)](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-12-stateless-reducer.md) |

## How we got here

For a deeper dive on my agent journey and what led us here, check out [A Brief History of Software](https://github.com/humanlayer/12-factor-agents/blob/main/content/brief-history-of-software.md) - a quick summary here:

### The promise of agents

We&#039;re gonna talk a lot about Directed Graphs (DGs) and their Acyclic friends, DAGs. I&#039;ll start by pointing out that...well...software is a directed graph. There&#039;s a reason we used to represent programs as flow charts.

![010-software-dag](https://github.com/humanlayer/12-factor-agents/blob/main/img/010-software-dag.png)

### From code to DAGs

Around 20 years ago, we started to see DAG orchestrators become popular. We&#039;re talking classics like [Airflow](https://airflow.apache.org/), [Prefect](https://www.prefect.io/), some predecessors, and some newer ones like ([dagster](https://dagster.io/), [inggest](https://www.inngest.com/), [windmill](https://www.windmill.dev/)). These followed the same graph pattern, with the added benefit of observability, modularity, retries, administration, etc.

![015-dag-orchestrators](https://github.com/humanlayer/12-factor-agents/blob/main/img/015-dag-orchestrators.png)

### The promise of agents

I&#039;m not the first [person to say this](https://youtu.be/Dc99-zTMyMg?si=bcT0hIwWij2mR-40&amp;t=73), but my biggest takeaway when I started learning about agents, was that you get to throw the DAG away. Instead of software engineers coding each step and edge case, you can give the agent a goal and a set of transitions:

![025-agent-dag](https://github.com/humanlayer/12-factor-agents/blob/main/img/025-agent-dag.png)

And let the LLM make decisions in real time to figure out the path

![026-agent-dag-lines](https://github.com/humanlayer/12-factor-agents/blob/main/img/026-agent-dag-lines.png)

The promise here is that you write less software, you just give the LLM the &quot;edges&quot; of the graph and let it figure out the nodes. You can recover from errors, you can write less code, and you may find that LLMs find novel solutions to problems.


### Agents as loops

As we&#039;ll see later, it turns out this doesn&#039;t quite work.

Let&#039;s dive one step deeper - with agents you&#039;ve got this loop consisting of 3 steps:

1. LLM determines the next step in the workflow, outputting structured json (&quot;tool calling&quot;)
2. Deterministic code executes the tool call
3. The result is appended to the context window 
4. Repeat until the next step is determined to be &quot;done&quot;

```python
initial_event = {&quot;message&quot;: &quot;...&quot;}
context = [initial_event]
while True:
  next_step = await llm.determine_next_step(context)
  context.append(next_step)

  if (next_step.intent === &quot;done&quot;):
    return next_step.final_answer

  result = await execute_step(next_step)
  context.append(result)
```

Our initial context is just the starting event (maybe a user message, maybe a cron fired, maybe a webhook, etc), and we ask the llm to choose the next step (tool) or to determine that we&#039;re done.

Here&#039;s a multi-step example:

[![027-agent-loop-animation](https://github.com/humanlayer/12-factor-agents/blob/main/img/027-agent-loop-animation.gif)](https://github.com/user-attachments/assets/3beb0966-fdb1-4c12-a47f-ed4e8240f8fd)

&lt;details&gt;
&lt;summary&gt;&lt;a href=&quot;https://github.com/humanlayer/12-factor-agents/blob/main/img/027-agent-loop-animation.gif&quot;&gt;GIF Version&lt;/a&gt;&lt;/summary&gt;

![027-agent-loop-animation](https://github.com/humanlayer/12-factor-agents/blob/main/img/027-agent-loop-animation.gif)]

&lt;/details&gt;

## Why 12-factor agents?

At the end of the day, this approach just doesn&#039;t work as well as we want it to.

In building HumanLayer, I&#039;ve talked to at least 100 SaaS builders (mostly technical founders) looking to make their existing product more agentic. The journey usually goes something like:

1. Decide you want to build an agent
2. Product design, UX mapping, what problems to solve
3. Want to move fast, so grab $FRAMEWORK and *get to building*
4. Get to 70-80% quality bar 
5. Realize that 80% isn&#039;t good enough for most customer-facing features
6. Realize that getting past 80% requires reverse-engineering the framework, prompts, flow, etc.
7. Start over from scratch

&lt;details&gt;
&lt;summary&gt;Random Disclaimers&lt;/summary&gt;

**DISCLAIMER**: I&#039;m not sure the exact right place to say this, but here seems as good as any: **this in BY NO MEANS meant to be a dig on either the many frameworks out there, or the pretty dang smart people who work on them**. They enable incredible things and have accelerated the AI ecosystem. 

I hope that one outcome of this post is that agent framework builders can learn from the journeys of myself and others, and make frameworks even better. 

Especially for builders who want to move fast but need deep control.

**DISCLAIMER 2**: I&#039;m not going to talk about MCP. I&#039;m sure you can see where it fits in.

**DISCLAIMER 3**: I&#039;m using mostly typescript, for [reasons](https://www.linkedin.com/posts/dexterihorthy_llms-typescript-aiagents-activity-7290858296679313408-Lh9e?utm_source=share&amp;utm_medium=member_desktop&amp;rcm=ACoAAA4oHTkByAiD-wZjnGsMBUL_JT6nyyhOh30) but all this stuff works in python or any other language you prefer. 


Anyways back to the thing...

&lt;/details&gt;

### Design Patterns for great LLM applications

After digging through hundreds of AI libriaries and working with dozens of founders, my instinct is this:

1. There are some core things that make agents great
2. Going all in on a framework and building what is essentially a greenfield rewrite may be counter-productive
3. There are some core principles that make agents great, and you will get most/all of them if you pull in a framework
4. BUT, the fastest way I&#039;ve seen for builders to get high-quality AI software in the hands of customers is to take small, modular concepts from agent building, and incorporate them into their existing product
5. These modular concepts from agents can be defined and applied by most skilled software engineers, even if they don&#039;t have an AI background

&gt; #### The fastest way I&#039;ve seen for builders to get good AI software in the hands of customers is to take small, modular concepts from agent building, and incorporate them into their existing product


## The 12 Factors (again)


- [How We Got Here: A Brief History of Software](https://github.com/humanlayer/12-factor-agents/blob/main/content/brief-history-of-software.md)
- [Factor 1: Natural Language to Tool Calls](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-01-natural-language-to-tool-calls.md)
- [Factor 2: Own your prompts](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-02-own-your-prompts.md)
- [Factor 3: Own your context window](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-03-own-your-context-window.md)
- [Factor 4: Tools are just structured outputs](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-04-tools-are-structured-outputs.md)
- [Factor 5: Unify execution state and business state](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-05-unify-execution-state.md)
- [Factor 6: Launch/Pause/Resume with simple APIs](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-06-launch-pause-resume.md)
- [Factor 7: Contact humans with tool calls](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-07-contact-humans-with-tools.md)
- [Factor 8: Own your control flow](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-08-own-your-control-flow.md)
- [Factor 9: Compact Errors into Context Window](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-09-compact-errors.md)
- [Factor 10: Small, Focused Agents](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-10-small-focused-agents.md)
- [Factor 11: Trigger from anywhere, meet users where they are](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-11-trigger-from-anywhere.md)
- [Factor 12: Make your agent a stateless reducer](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-12-stateless-reducer.md)

## Honorable Mentions / other advice

- [Factor 13: Pre-fetch all the context you might need](https://github.com/humanlayer/12-factor-agents/blob/main/content/appendix-13-pre-fetch.md)

## Related Resources

- Contribute to this guide [here](https://github.com/humanlayer/12-factor-agents)
- [I talked about a lot of this on an episode of the Tool Use podcast](https://youtu.be/8bIHcttkOTE) in March 2025
- I write about some of this stuff at [The Outer Loop](https://theouterloop.substack.com)
- I do [webinars about Maximizing LLM Performance](https://github.com/hellovai/ai-that-works/tree/main) with [@hellovai](https://github.com/hellovai)
- We build OSS agents with this methodology under [got-agents/agents](https://github.com/got-agents/agents)
- We ignored all our own advice and built a [framework for running distributed agents in kubernetes](https://github.com/humanlayer/kubechain)
- Other links from this guide:
  - [12 Factor Apps](https://12factor.net)
  - [Building Effective Agents (Anthropic)](https://www.anthropic.com/engineering/building-effective-agents#agents)
  - [Prompts are Functions](https://thedataexchange.media/baml-revolution-in-ai-engineering/ )
  - [Library patterns: Why frameworks are evil](https://tomasp.net/blog/2015/library-frameworks/)
  - [The Wrong Abstraction](https://sandimetz.com/blog/2016/1/20/the-wrong-abstraction)
  - [Mailcrew Agent](https://github.com/dexhorthy/mailcrew)
  - [Mailcrew Demo Video](https://www.youtube.com/watch?v=f_cKnoPC_Oo)
  - [Chainlit Demo](https://x.com/chainlit_io/status/1858613325921480922)
  - [TypeScript for LLMs](https://www.linkedin.com/posts/dexterihorthy_llms-typescript-aiagents-activity-7290858296679313408-Lh9e)
  - [Schema Aligned Parsing](https://www.boundaryml.com/blog/schema-aligned-parsing)
  - [Function Calling vs Structured Outputs vs JSON Mode](https://www.vellum.ai/blog/when-should-i-use-function-calling-structured-outputs-or-json-mode)
  - [BAML on GitHub](https://github.com/boundaryml/baml)
  - [OpenAI JSON vs Function Calling](https://docs.llamaindex.ai/en/stable/examples/llm/openai_json_vs_function_calling/)
  - [Outer Loop Agents](https://theouterloop.substack.com/p/openais-realtime-api-is-a-step-towards)
  - [Airflow](https://airflow.apache.org/)
  - [Prefect](https://www.prefect.io/)
  - [Dagster](https://dagster.io/)
  - [Inngest](https://www.inngest.com/)
  - [Windmill](https://www.windmill.dev/)
  - [The AI Agent Index (MIT)](https://aiagentindex.mit.edu/)
  - [NotebookLM on Finding Model Capability Boundaries](https://open.substack.com/pub/swyx/p/notebooklm?selection=08e1187c-cfee-4c63-93c9-71216640a5f8)

## Contributors

Thanks to everyone who has contributed to 12-factor agents!

[&lt;img src=&quot;https://avatars.githubusercontent.com/u/3730605?v=4&amp;s=80&quot; width=&quot;80px&quot; alt=&quot;dexhorthy&quot; /&gt;](https://github.com/dexhorthy) [&lt;img src=&quot;https://avatars.githubusercontent.com/u/50557586?v=4&amp;s=80&quot; width=&quot;80px&quot; alt=&quot;Sypherd&quot; /&gt;](https://github.com/Sypherd) [&lt;img src=&quot;https://avatars.githubusercontent.com/u/66259401?v=4&amp;s=80&quot; width=&quot;80px&quot; alt=&quot;tofaramususa&quot; /&gt;](https://github.com/tofaramususa) [&lt;img src=&quot;https://avatars.githubusercontent.com/u/18105223?v=4&amp;s=80&quot; width=&quot;80px&quot; alt=&quot;a-churchill&quot; /&gt;](https://github.com/a-churchill) [&lt;img src=&quot;https://avatars.githubusercontent.com/u/4084885?v=4&amp;s=80&quot; width=&quot;80px&quot; alt=&quot;Elijas&quot; /&gt;](https://github.com/Elijas) [&lt;img src=&quot;https://avatars.githubusercontent.com/u/39267118?v=4&amp;s=80&quot; width=&quot;80px&quot; alt=&quot;hugolmn&quot; /&gt;](https://github.com/hugolmn) [&lt;img src=&quot;https://avatars.githubusercontent.com/u/1882972?v=4&amp;s=80&quot; width=&quot;80px&quot; alt=&quot;jeremypeters&quot; /&gt;](https://github.com/jeremypeters)

[&lt;img src=&quot;https://avatars.githubusercontent.com/u/380402?v=4&amp;s=80&quot; width=&quot;80px&quot; alt=&quot;kndl&quot; /&gt;](https://github.com/kndl) [&lt;img src=&quot;https://avatars.githubusercontent.com/u/16674643?v=4&amp;s=80&quot; width=&quot;80px&quot; alt=&quot;maci

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[th-ch/youtube-music]]></title>
            <link>https://github.com/th-ch/youtube-music</link>
            <guid>https://github.com/th-ch/youtube-music</guid>
            <pubDate>Wed, 09 Jul 2025 00:05:09 GMT</pubDate>
            <description><![CDATA[YouTube Music Desktop App bundled with custom plugins]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/th-ch/youtube-music">th-ch/youtube-music</a></h1>
            <p>YouTube Music Desktop App bundled with custom plugins</p>
            <p>Language: TypeScript</p>
            <p>Stars: 25,350</p>
            <p>Forks: 1,371</p>
            <p>Stars today: 667 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;

# YouTube Music

[![GitHub release](https://img.shields.io/github/release/th-ch/youtube-music.svg?style=for-the-badge&amp;logo=youtube-music)](https://github.com/th-ch/youtube-music/releases/)
[![GitHub license](https://img.shields.io/github/license/th-ch/youtube-music.svg?style=for-the-badge)](https://github.com/th-ch/youtube-music/blob/master/license)
[![eslint code style](https://img.shields.io/badge/code_style-eslint-5ed9c7.svg?style=for-the-badge)](https://github.com/th-ch/youtube-music/blob/master/eslint.config.mjs)
[![Build status](https://img.shields.io/github/actions/workflow/status/th-ch/youtube-music/build.yml?branch=master&amp;style=for-the-badge&amp;logo=youtube-music)](https://GitHub.com/th-ch/youtube-music/releases/)
[![GitHub All Releases](https://img.shields.io/github/downloads/th-ch/youtube-music/total?style=for-the-badge&amp;logo=youtube-music)](https://GitHub.com/th-ch/youtube-music/releases/)
[![AUR](https://img.shields.io/aur/version/youtube-music-bin?color=blueviolet&amp;style=for-the-badge&amp;logo=youtube-music)](https://aur.archlinux.org/packages/youtube-music-bin)
[![Known Vulnerabilities](https://snyk.io/test/github/th-ch/youtube-music/badge.svg)](https://snyk.io/test/github/th-ch/youtube-music)

&lt;/div&gt;

![Screenshot](web/screenshot.png &quot;Screenshot&quot;)


&lt;div align=&quot;center&quot;&gt;
	&lt;a href=&quot;https://github.com/th-ch/youtube-music/releases/latest&quot;&gt;
		&lt;img src=&quot;web/youtube-music.svg&quot; width=&quot;400&quot; height=&quot;100&quot; alt=&quot;YouTube Music SVG&quot;&gt;
	&lt;/a&gt;
&lt;/div&gt;

Read this in other languages: [한국어](./docs/readme/README-ko.md), [Française](./docs/readme/README-fr.md), [Íslenska](./docs/readme/README-is.md), [Español](./docs/readme/README-es.md), [Pусский](./docs/readme/README-ru.md), [Українська](./docs/readme/README-uk.md), [Magyar](./docs/readme/README-hu.md), [Português](./docs/readme/README-pt.md), [日本語](./docs/readme/README-ja.md)

**Electron wrapper around YouTube Music featuring:**

- Native look &amp; feel, aims at keeping the original interface
- Framework for custom plugins: change YouTube Music to your needs (style, content, features), enable/disable plugins in
  one click

## Demo Image

|                          Player Screen (album color theme &amp; ambient light)                                |
|:---------------------------------------------------------------------------------------------------------:|
|![Screenshot1](https://github.com/th-ch/youtube-music/assets/16558115/53efdf73-b8fa-4d7b-a235-b96b91ea77fc)|

## Content

- [Features](#features)
- [Available plugins](#available-plugins)
- [Translation](#translation)
- [Download](#download)
  - [Arch Linux](#arch-linux)
  - [MacOS](#macos)
  - [Windows](#windows)
    - [How to install without a network connection? (in Windows)](#how-to-install-without-a-network-connection-in-windows)
- [Themes](#themes)
- [Dev](#dev)
- [Build your own plugins](#build-your-own-plugins)
  - [Creating a plugin](#creating-a-plugin)
  - [Common use cases](#common-use-cases)
- [Build](#build)
- [Production Preview](#production-preview)
- [Tests](#tests)
- [License](#license)
- [FAQ](#faq)

## Features:

- **Auto confirm when paused** (Always Enabled): disable
  the [&quot;Continue Watching?&quot;](https://user-images.githubusercontent.com/61631665/129977894-01c60740-7ec6-4bf0-9a2c-25da24491b0e.png)
  popup that pause music after a certain time

 - And more ...

## Available plugins:

- **Ad Blocker**: Block all ads and tracking out of the box

- **Album Actions**: Adds Undislike, Dislike, Like, and Unlike buttons to apply this to all songs in a playlist or album

- **Album Color Theme**: Applies a dynamic theme and visual effects based on the album color palette

- **Ambient Mode**: Applies a lighting effect by casting gentle colors from the video, into your screen’s background

- **Audio Compressor**: Apply compression to audio (lowers the volume of the loudest parts of the signal and raises the
  volume of the softest parts)

- **Blur Navigation Bar**: makes navigation bar transparent and blurry

- **Bypass Age Restrictions**: bypass YouTube&#039;s age verification

- **Captions Selector**: Enable captions

- **Compact Sidebar**: Always set the sidebar in compact mode

- **Crossfade**: Crossfade between songs

- **Disable Autoplay**: Makes every song start in &quot;paused&quot; mode

- **[Discord](https://discord.com/) Rich Presence**: Show your friends what you listen to
  with [Rich Presence](https://user-images.githubusercontent.com/28219076/104362104-a7a0b980-5513-11eb-9744-bb89eabe0016.png)

- **Downloader**: downloads
  MP3 [directly from the interface](https://user-images.githubusercontent.com/61631665/129977677-83a7d067-c192-45e1-98ae-b5a4927393be.png) [(youtube-dl)](https://github.com/ytdl-org/youtube-dl)

- **Equalizer**: add filters to boost or cut specific range of frequencies (e.g. bass booster)

- **Exponential Volume**: Makes the volume
  slider [exponential](https://greasyfork.org/en/scripts/397686-youtube-music-fix-volume-ratio/) so it&#039;s easier to
  select lower volumes

- **In-App Menu**: [gives bars a fancy, dark look](https://user-images.githubusercontent.com/78568641/112215894-923dbf00-8c29-11eb-95c3-3ce15db27eca.png)

  &gt; (see [this post](https://github.com/th-ch/youtube-music/issues/410#issuecomment-952060709) if you have problem
  accessing the menu after enabling this plugin and hide-menu option)

- **Scrobbler**: Adds scrobbling support for [Last.fm](https://www.last.fm/) and [ListenBrainz](https://listenbrainz.org/)

- **Lumia Stream**: Adds [Lumia Stream](https://lumiastream.com/) support

- **Lyrics Genius**: Adds lyrics support for most songs

- **Music Together**: Share a playlist with others. When the host plays a song, everyone else will hear the same song

- **Navigation**: Next/Back navigation arrows directly integrated in the interface, like in your favorite browser

- **No Google Login**: Remove Google login buttons and links from the interface

- **Notifications**: Display a notification when a song starts
  playing ([interactive notifications](https://user-images.githubusercontent.com/78568641/114102651-63ce0e00-98d0-11eb-9dfe-c5a02bb54f9c.png)
  are available on windows)

- **Picture-in-picture**: allows to switch the app to picture-in-picture mode

- **Playback Speed**: Listen fast, listen
  slow! [Adds a slider that controls song speed](https://user-images.githubusercontent.com/61631665/129976003-e55db5ba-bf42-448c-a059-26a009775e68.png)

- **Precise Volume**: Control the volume precisely using mousewheel/hotkeys, with a custom hud and customizable volume
  steps

- **Shortcuts (&amp; MPRIS)**: Allows setting global hotkeys for playback (play/pause/next/previous) +
  disable [media osd](https://user-images.githubusercontent.com/84923831/128601225-afa38c1f-dea8-4209-9f72-0f84c1dd8b54.png)
  by overriding media keys + enable Ctrl/CMD + F to search + enable linux mpris support for
  mediakeys + [custom hotkeys](https://github.com/Araxeus/youtube-music/blob/1e591d6a3df98449bcda6e63baab249b28026148/providers/song-controls.js#L13-L50)
  for [advanced users](https://github.com/th-ch/youtube-music/issues/106#issuecomment-952156902)

- **Skip Disliked Song**: Skips disliked songs

- **Skip Silences**: Automatically skip silenced sections

- [**SponsorBlock**](https://github.com/ajayyy/SponsorBlock): Automatically Skips non-music parts like intro/outro or
  parts of music videos where the song isn&#039;t playing

- **Synced Lyrics**: Provides synced lyrics to songs, using providers like [LRClib](https://lrclib.net).

- **Taskbar Media Control**: Control playback from
  your [Windows taskbar](https://user-images.githubusercontent.com/78568641/111916130-24a35e80-8a82-11eb-80c8-5021c1aa27f4.png)

- **TouchBar**: Custom TouchBar layout for macOS

- **Tuna OBS**: Integration with [OBS](https://obsproject.com/)&#039;s
  plugin [Tuna](https://obsproject.com/forum/resources/tuna.843/)

- **Video Quality Changer**: Allows changing the video quality with
  a [button](https://user-images.githubusercontent.com/78568641/138574366-70324a5e-2d64-4f6a-acdd-dc2a2b9cecc5.png) on
  the video overlay

- **Video Toggle**: Adds
  a [button](https://user-images.githubusercontent.com/28893833/173663950-63e6610e-a532-49b7-9afa-54cb57ddfc15.png) to
  switch between Video/Song mode. can also optionally remove the whole video tab

- **Visualizer**: Different music visualizers


## Translation

You can help with translation on [Hosted Weblate](https://hosted.weblate.org/projects/youtube-music/).

&lt;a href=&quot;https://hosted.weblate.org/engage/youtube-music/&quot;&gt;
  &lt;img src=&quot;https://hosted.weblate.org/widget/youtube-music/i18n/multi-auto.svg&quot; alt=&quot;translation status&quot; /&gt;
  &lt;img src=&quot;https://hosted.weblate.org/widget/youtube-music/i18n/287x66-black.png&quot; alt=&quot;translation status 2&quot; /&gt;
&lt;/a&gt;

## Download

You can check out the [latest release](https://github.com/th-ch/youtube-music/releases/latest) to quickly find the
latest version.

### Arch Linux

Install the [`youtube-music-bin`](https://aur.archlinux.org/packages/youtube-music-bin) package from the AUR. For AUR installation instructions, take a look at
this [wiki page](https://wiki.archlinux.org/index.php/Arch_User_Repository#Installing_packages).

### macOS

You can install the app using Homebrew (see the [cask definition](https://github.com/th-ch/homebrew-youtube-music)):

```bash
brew install th-ch/youtube-music/youtube-music
```

If you install the app manually and get an error &quot;is damaged and can’t be opened.&quot; when launching the app, run the following in the Terminal:

```bash
/usr/bin/xattr -cr /Applications/YouTube\ Music.app
```

### Windows

You can use the [Scoop package manager](https://scoop.sh) to install the `youtube-music` package from
the [`extras` bucket](https://github.com/ScoopInstaller/Extras).

```bash
scoop bucket add extras
scoop install extras/youtube-music
```

Alternately you can use [Winget](https://learn.microsoft.com/en-us/windows/package-manager/winget/), Windows 11s
official CLI package manager to install the `th-ch.YouTubeMusic` package.

*Note: Microsoft Defender SmartScreen might block the installation since it is from an &quot;unknown publisher&quot;. This is also
true for the manual installation when trying to run the executable(.exe) after a manual download here on github (same
file).*

```bash
winget install th-ch.YouTubeMusic
```

#### How to install without a network connection? (in Windows)

- Download the `*.nsis.7z` file for _your device architecture_ in [release page](https://github.com/th-ch/youtube-music/releases/latest).
  - `x64` for 64-bit Windows
  - `ia32` for 32-bit Windows
  - `arm64` for ARM64 Windows
- Download installer in release page. (`*-Setup.exe`)
- Place them in the **same directory**.
- Run the installer.

## Themes

You can load CSS files to change the look of the application (Options &gt; Visual Tweaks &gt; Themes).

Some predefined themes are available in https://github.com/kerichdev/themes-for-ytmdesktop-player.

## Dev

```bash
git clone https://github.com/th-ch/youtube-music
cd youtube-music
pnpm install --frozen-lockfile
pnpm dev
```

## Build your own plugins

Using plugins, you can:

- manipulate the app - the `BrowserWindow` from electron is passed to the plugin handler
- change the front by manipulating the HTML/CSS

### Creating a plugin

Create a folder in `src/plugins/YOUR-PLUGIN-NAME`:

- `index.ts`: the main file of the plugin
```typescript
import style from &#039;./style.css?inline&#039;; // import style as inline

import { createPlugin } from &#039;@/utils&#039;;

export default createPlugin({
  name: &#039;Plugin Label&#039;,
  restartNeeded: true, // if value is true, ytmusic show restart dialog
  config: {
    enabled: false,
  }, // your custom config
  stylesheets: [style], // your custom style,
  menu: async ({ getConfig, setConfig }) =&gt; {
    // All *Config methods are wrapped Promise&lt;T&gt;
    const config = await getConfig();
    return [
      {
        label: &#039;menu&#039;,
        submenu: [1, 2, 3].map((value) =&gt; ({
          label: `value ${value}`,
          type: &#039;radio&#039;,
          checked: config.value === value,
          click() {
            setConfig({ value });
          },
        })),
      },
    ];
  },
  backend: {
    start({ window, ipc }) {
      window.maximize();

      // you can communicate with renderer plugin
      ipc.handle(&#039;some-event&#039;, () =&gt; {
        return &#039;hello&#039;;
      });
    },
    // it fired when config changed
    onConfigChange(newConfig) { /* ... */ },
    // it fired when plugin disabled
    stop(context) { /* ... */ },
  },
  renderer: {
    async start(context) {
      console.log(await context.ipc.invoke(&#039;some-event&#039;));
    },
    // Only renderer available hook
    onPlayerApiReady(api: YoutubePlayer, context: RendererContext) {
      // set plugin config easily
      context.setConfig({ myConfig: api.getVolume() });
    },
    onConfigChange(newConfig) { /* ... */ },
    stop(_context) { /* ... */ },
  },
  preload: {
    async start({ getConfig }) {
      const config = await getConfig();
    },
    onConfigChange(newConfig) {},
    stop(_context) {},
  },
});
```

### Common use cases

- injecting custom CSS: create a `style.css` file in the same folder then:

```typescript
// index.ts
import style from &#039;./style.css?inline&#039;; // import style as inline

import { createPlugin } from &#039;@/utils&#039;;

export default createPlugin({
  name: &#039;Plugin Label&#039;,
  restartNeeded: true, // if value is true, ytmusic will show a restart dialog
  config: {
    enabled: false,
  }, // your custom config
  stylesheets: [style], // your custom style
  renderer() {} // define renderer hook
});
```

- If you want to change the HTML:

```typescript
import { createPlugin } from &#039;@/utils&#039;;

export default createPlugin({
  name: &#039;Plugin Label&#039;,
  restartNeeded: true, // if value is true, ytmusic will show the restart dialog
  config: {
    enabled: false,
  }, // your custom config
  renderer() {
    // Remove the login button
    document.querySelector(&quot;.sign-in-link.ytmusic-nav-bar&quot;).remove();
  } // define renderer hook
});
```

- communicating between the front and back: can be done using the ipcMain module from electron. See `index.ts` file and
  example in `sponsorblock` plugin.

## Build

1. Clone the repo
2. Follow [this guide](https://pnpm.io/installation) to install `pnpm`
3. Run `pnpm install --frozen-lockfile` to install dependencies
4. Run `pnpm build:OS`

- `pnpm dist:win` - Windows
- `pnpm dist:linux` - Linux (amd64)
- `pnpm dist:linux:deb-arm64` - Linux (arm64 for Debian)
- `pnpm dist:linux:rpm-arm64` - Linux (arm64 for Fedora)
- `pnpm dist:mac` - macOS (amd64)
- `pnpm dist:mac:arm64` - macOS (arm64)

Builds the app for macOS, Linux, and Windows,
using [electron-builder](https://github.com/electron-userland/electron-builder).

## Production Preview

```bash
pnpm start
```

## Tests

```bash
pnpm test
```

Uses [Playwright](https://playwright.dev/) to test the app.

## License

MIT © [th-ch](https://github.com/th-ch/youtube-music)

## FAQ

### Why apps menu isn&#039;t showing up?

If `Hide Menu` option is on - you can show the menu with the &lt;kbd&gt;alt&lt;/kbd&gt; key (or &lt;kbd&gt;\`&lt;/kbd&gt; [backtick] if using
the in-app-menu plugin)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[nrwl/nx]]></title>
            <link>https://github.com/nrwl/nx</link>
            <guid>https://github.com/nrwl/nx</guid>
            <pubDate>Wed, 09 Jul 2025 00:05:08 GMT</pubDate>
            <description><![CDATA[An AI-first build platform that connects everything from your editor to CI. Helping you deliver fast, without breaking things.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/nrwl/nx">nrwl/nx</a></h1>
            <p>An AI-first build platform that connects everything from your editor to CI. Helping you deliver fast, without breaking things.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 26,273</p>
            <p>Forks: 2,550</p>
            <p>Stars today: 14 stars today</p>
            <h2>README</h2><pre>&lt;p style=&quot;text-align: center;&quot;&gt;
  &lt;picture&gt;
    &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://raw.githubusercontent.com/nrwl/nx/master/images/nx-dark.svg&quot;&gt;
    &lt;img alt=&quot;Nx - Smart Repos · Fast Builds&quot; src=&quot;https://raw.githubusercontent.com/nrwl/nx/master/images/nx-light.svg&quot; width=&quot;100%&quot;&gt;
  &lt;/picture&gt;
&lt;/p&gt;

&lt;div style=&quot;text-align: center;&quot;&gt;

[![CircleCI](https://circleci.com/gh/nrwl/nx.svg?style=svg)](https://circleci.com/gh/nrwl/nx)
[![License](https://img.shields.io/npm/l/nx.svg?style=flat-square)]()
[![NPM Version](https://badge.fury.io/js/nx.svg)](https://www.npmjs.com/package/nx)
[![Semantic Release](https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg?style=flat-square)]()
[![Commitizen friendly](https://img.shields.io/badge/commitizen-friendly-brightgreen.svg)](http://commitizen.github.io/cz-cli/)
[![Join the chat at https://gitter.im/nrwl-nx/community](https://badges.gitter.im/nrwl-nx/community.svg)](https://gitter.im/nrwl-nx/community?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge)
[![Join the Official Nx Discord Server](https://img.shields.io/discord/1143497901675401286?label=discord)](https://go.nx.dev/community)

&lt;/div&gt;

&lt;hr&gt;

# Smart Repos · Fast Builds

An AI-first build platform that connects everything from your editor to CI. Helping you deliver fast, without breaking things.

Create a new Nx workspace with

```shell
npx create-nx-workspace
```

...or run

```
npx nx init
```

to add Nx to your existing workspace to get faster task scheduling, caching and more. More [in the docs](https://nx.dev/getting-started/intro).

## Learn about CI with Nx Cloud

[Nx Cloud](https://nx.dev/nx-cloud) connects directly to your existing CI setup, helping you scale your monorepos on CI by leveraging [remote caching](https://nx.dev/ci/features/remote-cache?utm_source=nxrepo&amp;utm_medium=readme&amp;utm_campaign=nxrepo), [task distribution across multiple machines](https://nx.dev/ci/features/distribute-task-execution?utm_source=nxrepo&amp;utm_medium=readme&amp;utm_campaign=nxrepo), [automated e2e test splitting](https://nx.dev/ci/features/split-e2e-tasks?utm_source=nxrepo&amp;utm_medium=readme&amp;utm_campaign=nxrepo) and [automated task flakiness detection](https://nx.dev/ci/features/flaky-tasks?utm_source=nxrepo&amp;utm_medium=readme&amp;utm_campaign=nxrepo)

Connect your existing Nx workspace with

```
npx nx connect
```

Learn more in the [Nx CI docs &amp;raquo;](https://nx.dev/ci/intro?utm_source=nxrepo&amp;utm_medium=readme&amp;utm_campaign=nxrepo)

## Useful links

- [Our docs](https://nx.dev/docs)
- [Our blog](https://nx.dev/blog)
- [Our community discord, live stream,...](https://nx.dev/community)
- [Our YouTube channel](https://www.youtube.com/@NxDevtools)
- [Our Twitter/X](https://x.com/nxdevtools)

&lt;p style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;https://www.youtube.com/@nxdevtools/videos&quot; target=&quot;_blank&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;./images/nx-courses-and-videos.svg&quot; 
width=&quot;100%&quot; alt=&quot;Nx - Smart Repos · Fast Builds&quot;&gt;&lt;/a&gt;&lt;/p&gt;

## Want to help?

If you want to file a bug or submit a PR, read up on
our [guidelines for contributing](https://github.com/nrwl/nx/blob/master/CONTRIBUTING.md) and watch this video that will
help you get started.

&lt;a href=&quot;https://www.youtube.com/watch?v=8LCA_4qxc08&quot; target=&quot;_blank&quot; rel=&quot;noreferrer&quot;&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/nrwl/nx/master/images/how-to-contribute.png&quot; width=&quot;600&quot; alt=&quot;Nx - How to contribute video&quot;&gt;&lt;/p&gt;
&lt;/a&gt;

## Core Team

| Victor Savkin                                                          | Jason Jean                                                            | Benjamin Cabanes                                                            | Jack Hsu                                                          |
| ---------------------------------------------------------------------- | --------------------------------------------------------------------- | --------------------------------------------------------------------------- | ----------------------------------------------------------------- |
| ![Victor Savkin](https://avatars1.githubusercontent.com/u/35996?s=160) | ![Jason Jean](https://avatars2.githubusercontent.com/u/8104246?s=160) | ![Benjamin Cabanes](https://avatars2.githubusercontent.com/u/3447705?s=160) | ![Jack Hsu](https://avatars0.githubusercontent.com/u/53559?s=160) |
| [vsavkin](https://github.com/vsavkin)                                  | [FrozenPandaz](https://github.com/FrozenPandaz)                       | [bcabanes](https://github.com/bcabanes)                                     | [jaysoo](https://github.com/jaysoo)                               |

| James Henry                                                              | Jon Cammisuli                                                            | Isaac Mann                                                           | Juri Strumpflohner                                                           |
| ------------------------------------------------------------------------ | ------------------------------------------------------------------------ | -------------------------------------------------------------------- | ---------------------------------------------------------------------------- |
| ![James Henry](https://avatars.githubusercontent.com/u/900523?s=160&amp;v=4) | ![Jon Cammisuli](https://avatars2.githubusercontent.com/u/4332460?s=160) | ![Isaac Mann](https://avatars1.githubusercontent.com/u/861504?s=160) | ![Juri Strumpflohner](https://avatars1.githubusercontent.com/u/542458?s=160) |
| [JamesHenry](https://github.com/JamesHenry)                              | [cammisuli](https://github.com/cammisuli)                                | [isaacplmann](https://github.com/isaacplmann)                        | [juristr](https://github.com/juristr)                                        |

| Philip Fulcher                                                            | Caleb Ukle                                                            | Katerina Skroumpelou                                                            | Colum Ferry                                                            |
| ------------------------------------------------------------------------- | --------------------------------------------------------------------- | ------------------------------------------------------------------------------- | ---------------------------------------------------------------------- |
| ![Philip Fulcher](https://avatars1.githubusercontent.com/u/1536471?s=160) | ![Caleb Ukle](https://avatars.githubusercontent.com/u/23272162?s=160) | ![Katerina Skroumpelou](https://avatars0.githubusercontent.com/u/6603745?s=160) | ![Colum Ferry](https://avatars.githubusercontent.com/u/12140467?s=160) |
| [philipjfulcher](https://github.com/philipjfulcher)                       | [barbados-clemens](https://github.com/barbados-clemens)               | [mandarini](https://github.com/mandarini)                                       | [Coly010](https://github.com/Coly010)                                  |

| Emily Xiong                                                            | Miroslav Jonaš                                                          | Leosvel Pérez Espinosa                                                            | Zachary DeRose                                                           |
| ---------------------------------------------------------------------- | ----------------------------------------------------------------------- | --------------------------------------------------------------------------------- | ------------------------------------------------------------------------ |
| ![Emily Xiong](https://avatars.githubusercontent.com/u/16211801?s=160) | ![Miroslav Jonaš](https://avatars.githubusercontent.com/u/881612?s=160) | ![Leosvel Pérez Espinosa](https://avatars.githubusercontent.com/u/12051310?s=160) | ![Zachary DeRose](https://avatars.githubusercontent.com/u/3788405?s=160) |
| [xiongemi](https://github.com/xiongemi)                                | [meeroslav](https://github.com/meeroslav)                               | [leosvelperez](https://github.com/leosvelperez)                                   | [ZackDeRose](https://github.com/ZackDeRose)                              |

| Craigory Coppola                                                           | Chau Tran                                                            | Nicholas Cunningham                                                          | Max Kless                                                            |
| -------------------------------------------------------------------------- | -------------------------------------------------------------------- | ---------------------------------------------------------------------------- | -------------------------------------------------------------------- |
| ![Craigory Coppola](https://avatars.githubusercontent.com/u/6933928?s=160) | ![Chau Tran](https://avatars.githubusercontent.com/u/25516557?s=160) | ![Nicholas Cunningham](https://avatars.githubusercontent.com/u/338948?s=160) | ![Max Kless](https://avatars.githubusercontent.com/u/34165455?s=160) |
| [AgentEnder](https://github.com/AgentEnder)                                | [nartc](https://github.com/nartc)                                    | [ndcunningham](https://github.com/ndcunningham)                              | [MaxKless](https://github.com/MaxKless)                              |
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[iib0011/omni-tools]]></title>
            <link>https://github.com/iib0011/omni-tools</link>
            <guid>https://github.com/iib0011/omni-tools</guid>
            <pubDate>Wed, 09 Jul 2025 00:05:07 GMT</pubDate>
            <description><![CDATA[Self-hosted collection of powerful web-based tools for everyday tasks. No ads, no tracking, just fast, accessible utilities right from your browser!]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/iib0011/omni-tools">iib0011/omni-tools</a></h1>
            <p>Self-hosted collection of powerful web-based tools for everyday tasks. No ads, no tracking, just fast, accessible utilities right from your browser!</p>
            <p>Language: TypeScript</p>
            <p>Stars: 4,887</p>
            <p>Forks: 237</p>
            <p>Stars today: 110 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
        &lt;img src=&quot;src/assets/logo.png&quot; width=&quot;300&quot; /&gt;
        &lt;br /&gt;&lt;br /&gt;
&lt;a href=&quot;https://trendshift.io/repositories/13055&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://trendshift.io/api/badge/repositories/13055&quot; alt=&quot;iib0011%2Fomni-tools | Trendshift&quot; style=&quot;width: 200px;&quot; width=&quot;200&quot;/&gt;&lt;/a&gt;
   &lt;br /&gt;&lt;br /&gt;
&lt;a href=&quot;https://github.com/iib0011/omni-tools/releases&quot;&gt;
          &lt;img src=&quot;https://img.shields.io/badge/version-0.4.0-blue?style=for-the-badge&quot; /&gt;
        &lt;/a&gt;
        &lt;a href=&quot;https://hub.docker.com/r/iib0011/omni-tools&quot;&gt;
          &lt;img src=&quot;https://img.shields.io/docker/pulls/iib0011/omni-tools?style=for-the-badge&amp;logo=docker&quot; /&gt;
        &lt;/a&gt;
        &lt;a href=&quot;https://github.com/iib0011&quot;&gt;
          &lt;img src=&quot;https://img.shields.io/github/stars/iib0011/omni-tools?style=for-the-badge&amp;logo=github&quot; /&gt;
        &lt;/a&gt;
        &lt;a href=&quot;https://github.com/iib0011/omni-tools/blob/main/LICENSE&quot;&gt;
          &lt;img src=&quot;https://img.shields.io/github/license/iib0011/omni-tools?style=for-the-badge&quot; /&gt;
        &lt;/a&gt;
        &lt;a href=&quot;https://discord.gg/SDbbn3hT4b&quot;&gt;
          &lt;img src=&quot;https://img.shields.io/discord/1342971141823664179?label=Discord&amp;style=for-the-badge&quot; /&gt;
        &lt;/a&gt;
        &lt;br /&gt;&lt;br /&gt;
&lt;/div&gt;

Welcome to OmniTools, a self-hosted web app offering a variety of online tools to simplify everyday tasks.
Whether you are coding, manipulating images/videos, PDFs or crunching numbers, OmniTools has you covered. Please don&#039;t
forget to
star the repo to support us.
Here is the [demo](https://omnitools.app) website.

All files are processed entirely on the client side: nothing ever leaves your device.
Plus, the Docker image is super lightweight at just 28MB, making it fast to deploy and easy to self-host.

![img.png](img.png)

## Table of Contents

- [Features](#features)
- [Self-host](#self-hostrun)
- [Contribute](#contribute)
- [License](#license)
- [Contact](#contact)

## Features

We strive to offer a variety of tools, including:

## **Image/Video/Binary Tools**

- Image Resizer
- Image Converter
- Video Trimmer
- Video Reverser
- And more...

## **String/List Tools**

- Case Converters
- List Shuffler
- Text Formatters
- And more...

## **Date and Time Tools**

- Date Calculators
- Time Zone Converters
- And more...

## **Math Tools**

- Generate Prime Numbers
- Generate Perfect Numbers
- And more...

## **Miscellaneous Tools**

- JSON Tools
- PDF Tools
- CSV Tools
- And more...

Stay tuned as we continue to expand and improve our collection!

## Self-host/Run

### Docker

```bash
docker run -d --name omni-tools --restart unless-stopped -p 8080:80 iib0011/omni-tools:latest
```

### Docker Compose

```yaml
services:
  omni-tools:
    image: iib0011/omni-tools:latest
    container_name: omni-tools
    restart: unless-stopped
    ports:
      - &quot;8080:80&quot;

```

## Contribute

This is a React Project with Typescript Material UI. We use icons from [Iconify](https://icon-sets.iconify.design)

### Project setup

```bash
git clone https://github.com/iib0011/omni-tools.git
cd omni-tools
npm i
npm run dev
```

### Create a new tool

```bash
npm run script:create:tool my-tool-name folder1 # npm run script:create:tool split pdf
```

For tools located under multiple nested directories, use:

```bash
npm run script:create:tool my-tool-name folder1/folder2 # npm run script:create:tool compress image/png
```

Use `folder1\folder2` on Windows.

### Run tests

```bash
npm run test
```

- For e2e tests

```bash
npm run test:e2e
```

&lt;img src=&quot;https://api.star-history.com/svg?repos=iib0011/omni-tools&amp;type=Date&quot;/&gt;

## 🤝 Looking to contribute?

We welcome contributions! You can help by:

- ✅ Reporting bugs
- ✅ Suggesting new features in Github issues or [here](https://tally.so/r/nrkkx2)
- ✅ Improving documentation
- ✅ Submitting pull requests

You can also join our [Discord server](https://discord.gg/SDbbn3hT4b)

### Contributors

&lt;a href=&quot;https://github.com/iib0011/omni-tools/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=iib0011/omni-tools&quot; /&gt;
&lt;/a&gt;

## Contact

For any questions or suggestions, feel free to open an issue or contact me at:
[ibracool99@gmail.com](mailto:ibracool99@gmail.com)

## License

This project is licensed under the MIT License. See the [LICENSE](LICENSE) file for details.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[simstudioai/sim]]></title>
            <link>https://github.com/simstudioai/sim</link>
            <guid>https://github.com/simstudioai/sim</guid>
            <pubDate>Wed, 09 Jul 2025 00:05:06 GMT</pubDate>
            <description><![CDATA[Sim Studio is an open-source AI agent workflow builder. Sim Studio's interface is a lightweight, intuitive way to quickly build and deploy LLMs that connect with your favorite tools.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/simstudioai/sim">simstudioai/sim</a></h1>
            <p>Sim Studio is an open-source AI agent workflow builder. Sim Studio's interface is a lightweight, intuitive way to quickly build and deploy LLMs that connect with your favorite tools.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 4,588</p>
            <p>Forks: 689</p>
            <p>Stars today: 115 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;apps/sim/public/static/sim.png&quot; alt=&quot;Sim Studio Logo&quot; width=&quot;500&quot;/&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.apache.org/licenses/LICENSE-2.0&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/License-Apache%202.0-blue.svg&quot; alt=&quot;License: Apache-2.0&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://discord.gg/Hr4UWYEcTT&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Discord-Join%20Server-7289DA?logo=discord&amp;logoColor=white&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://x.com/simstudioai&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/simstudioai?style=social&quot; alt=&quot;Twitter&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://github.com/simstudioai/sim/pulls&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg&quot; alt=&quot;PRs welcome&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://docs.simstudio.ai&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Docs-visit%20documentation-blue.svg&quot; alt=&quot;Documentation&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;strong&gt;Sim Studio&lt;/strong&gt; is a lightweight, user-friendly platform for building AI agent workflows.
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;apps/sim/public/static/demo.gif&quot; alt=&quot;Sim Studio Demo&quot; width=&quot;800&quot;/&gt;
&lt;/p&gt;

## Getting Started

1. Use our [cloud-hosted version](https://simstudio.ai)
2. Self-host using one of the methods below

## Self-Hosting Options

### Option 1: NPM Package (Simplest)

The easiest way to run Sim Studio locally is using our [NPM package](https://www.npmjs.com/package/simstudio?activeTab=readme):

```bash
npx simstudio
```

After running these commands, open [http://localhost:3000/](http://localhost:3000/) in your browser.

#### Options

- `-p, --port &lt;port&gt;`: Specify the port to run Sim Studio on (default: 3000)
- `--no-pull`: Skip pulling the latest Docker images

#### Requirements

- Docker must be installed and running on your machine

### Option 2: Docker Compose

```bash
# Clone the repository
git clone https://github.com/simstudioai/sim.git

# Navigate to the project directory
cd sim

# Start Sim Studio
docker compose -f docker-compose.prod.yml up -d
```

Access the application at [http://localhost:3000/](http://localhost:3000/)

#### Using Local Models

To use local models with Sim Studio:

1. Pull models using our helper script:

```bash
./apps/sim/scripts/ollama_docker.sh pull &lt;model_name&gt;
```

2. Start Sim Studio with local model support:

```bash
# With NVIDIA GPU support
docker compose --profile local-gpu -f docker-compose.ollama.yml up -d

# Without GPU (CPU only)
docker compose --profile local-cpu -f docker-compose.ollama.yml up -d

# If hosting on a server, update the environment variables in the docker-compose.prod.yml file to include the server&#039;s public IP then start again (OLLAMA_URL to i.e. http://1.1.1.1:11434)
docker compose -f docker-compose.prod.yml up -d
```

### Option 3: Dev Containers

1. Open VS Code with the [Remote - Containers extension](https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-containers)
2. Open the project and click &quot;Reopen in Container&quot; when prompted
3. Run `bun run dev:full` in the terminal or use the `sim-start` alias

### Option 4: Manual Setup

1. Clone and install dependencies:

```bash
git clone https://github.com/simstudioai/sim.git
cd sim
bun install
```

2. Set up environment:

```bash
cd apps/sim
cp .env.example .env  # Configure with required variables (DATABASE_URL, BETTER_AUTH_SECRET, BETTER_AUTH_URL)
```

3. Set up the database:

```bash
bunx drizzle-kit push
```

4. Start the development servers:

Next.js app:

```bash
bun run dev
```

Start the realtime server:

```bash
bun run dev:sockets
```

Run both together (recommended):

```bash
bun run dev:full
```

## Tech Stack

- **Framework**: [Next.js](https://nextjs.org/) (App Router)
- **Runtime**: [Bun](https://bun.sh/)
- **Database**: PostgreSQL with [Drizzle ORM](https://orm.drizzle.team)
- **Authentication**: [Better Auth](https://better-auth.com)
- **UI**: [Shadcn](https://ui.shadcn.com/), [Tailwind CSS](https://tailwindcss.com)
- **State Management**: [Zustand](https://zustand-demo.pmnd.rs/)
- **Flow Editor**: [ReactFlow](https://reactflow.dev/)
- **Docs**: [Fumadocs](https://fumadocs.vercel.app/)
- **Monorepo**: [Turborepo](https://turborepo.org/)
- **Realtime**: [Socket.io](https://socket.io/)

## Contributing

We welcome contributions! Please see our [Contributing Guide](.github/CONTRIBUTING.md) for details.

## License

This project is licensed under the Apache License 2.0 - see the [LICENSE](LICENSE) file for details.

&lt;p align=&quot;center&quot;&gt;Made with ❤️ by the Sim Studio Team&lt;/p&gt;</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[webstudio-is/webstudio]]></title>
            <link>https://github.com/webstudio-is/webstudio</link>
            <guid>https://github.com/webstudio-is/webstudio</guid>
            <pubDate>Wed, 09 Jul 2025 00:05:05 GMT</pubDate>
            <description><![CDATA[Open source website builder and Webflow alternative. Webstudio is an advanced visual builder that connects to any headless CMS, supports all CSS properties, and can be hosted anywhere, including with us.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/webstudio-is/webstudio">webstudio-is/webstudio</a></h1>
            <p>Open source website builder and Webflow alternative. Webstudio is an advanced visual builder that connects to any headless CMS, supports all CSS properties, and can be hosted anywhere, including with us.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 7,229</p>
            <p>Forks: 1,131</p>
            <p>Stars today: 97 stars today</p>
            <h2>README</h2><pre>&lt;img width=&quot;1512&quot; alt=&quot;builder-screenshot&quot; src=&quot;https://github.com/webstudio-is/.github/blob/main/assets/builder-screenshot.png?raw=true&quot;&gt;
&lt;br /&gt;&lt;br /&gt;

&lt;section align=&quot;center&quot;&gt;
  Webstudio is an Open Source Visual Development Platform for developers, designers, and cross-functional teams. You own the data, components, and infrastructure. You can use the hosted version or roll out your own.
&lt;/section&gt;
&lt;br /&gt;&lt;br /&gt;

## Learning Resources

- [Blog](https://webstudio.is/blog)
- [Documentation](https://docs.webstudio.is/)
- [Brand and Product Design](https://docs.webstudio.is/contributing/contributing-for-designers)
- [Contributing Guide for Devs](https://docs.webstudio.is/contributing/contributing-for-developers)
- [Github Discussions](https://github.com/webstudio-is/webstudio-community/discussions)
- [Wishlist](https://github.com/webstudio-is/webstudio-community/discussions/categories/wishlist)
- [Builder Issues Tracker](https://github.com/webstudio-is/webstudio/issues)
- [Roadmap](https://github.com/orgs/webstudio-is/projects/11)

## Social Media

- [Twitter](https://twitter.com/getwebstudio)
- [Youtube](https://www.youtube.com/@getwebstudio)
- [Discord](https://wstd.us/community)

## Thanks

&lt;a href=&quot;https://www.lost-pixel.com/&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/29632358/168112844-77e76a0d-b96f-4bc8-b753-cd39f4afd428.png&quot; width=&quot;50&quot; height=&quot;50&quot; alt=&quot;Lost Pixel&quot; /&gt;&lt;/a&gt;

Thanks to [Lost Pixel](https://www.lost-pixel.com/) for providing the visual testing platform that helps us review UI changes and catch visual regressions.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[yangshun/tech-interview-handbook]]></title>
            <link>https://github.com/yangshun/tech-interview-handbook</link>
            <guid>https://github.com/yangshun/tech-interview-handbook</guid>
            <pubDate>Wed, 09 Jul 2025 00:05:04 GMT</pubDate>
            <description><![CDATA[💯 Curated coding interview preparation materials for busy software engineers]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/yangshun/tech-interview-handbook">yangshun/tech-interview-handbook</a></h1>
            <p>💯 Curated coding interview preparation materials for busy software engineers</p>
            <p>Language: TypeScript</p>
            <p>Stars: 127,465</p>
            <p>Forks: 15,534</p>
            <p>Stars today: 88 stars today</p>
            <h2>README</h2><pre>&lt;h1 align=&quot;center&quot;&gt;Tech Interview Handbook&lt;/h1&gt;

&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.techinterviewhandbook.org/&quot;&gt;
    &lt;img src=&quot;assets/logo.svg&quot; alt=&quot;Tech Interview Handbook&quot; width=&quot;400&quot; /&gt;
  &lt;/a&gt;
  &lt;br /&gt;
  &lt;h3&gt;
    &lt;a href=&quot;https://www.techinterviewhandbook.org/&quot;&gt;Read on the website&lt;/a&gt;
  &lt;/h3&gt;
  &lt;p&gt;
    Join/follow us on &lt;a href=&quot;https://discord.gg/usMqNaPczq&quot; target=&quot;_blank&quot;&gt;Discord&lt;/a&gt; | &lt;a href=&quot;https://twitter.com/techinterviewhb&quot; target=&quot;_blank&quot;&gt;𝕏 (Twitter)&lt;/a&gt; | &lt;a href=&quot;https://t.me/techinterviewhandbook&quot; target=&quot;_blank&quot;&gt;Telegram&lt;/a&gt; |  &lt;a href=&quot;https://facebook.com/techinterviewhandbook&quot; target=&quot;_blank&quot;&gt;Facebook&lt;/a&gt;
  &lt;/p&gt;
&lt;/div&gt;

---

&lt;a href=&quot;https://www.techinterviewhandbook.org/software-engineering-interview-guide/&quot; target=&quot;_blank&quot;&gt;
  &lt;img src=&quot;assets/start-reading-button.jpg&quot; alt=&quot;Start Reading Tech Interview Handbook&quot; /&gt;
&lt;/a&gt;

## What is this?

Not everyone has the time to do a few hundred LeetCode questions. Here are _free and curated_ technical interview preparation materials for busy engineers, brought to you by me, the author of [Blind 75](https://www.teamblind.com/post/New-Year-Gift---Curated-List-of-Top-75-LeetCode-Questions-to-Save-Your-Time-OaM1orEU). Over 1,000,000 people have benefitted from this handbook!

Besides the usual algorithm questions, other **awesome** stuff includes:

- [Best practice questions](https://www.techinterviewhandbook.org/coding-interview-study-plan/) for coding interviews
- [Grind 75](https://www.techinterviewhandbook.org/grind75) - the next evolution of Blind 75, bigger and better
- [How to prepare](https://www.techinterviewhandbook.org/coding-interview-prep/) for coding interviews
- [Coding interview best practices](https://www.techinterviewhandbook.org/coding-interview-cheatsheet/) - Straight-to-the-point Do&#039;s and Don&#039;ts
- [Algorithm cheatsheets and tips](https://www.techinterviewhandbook.org/algorithms/study-cheatsheet/) categorized by topic
- [Step-by-step Software Engineer resume guide](https://www.techinterviewhandbook.org/resume/) to prepare a FAANG-ready resume
- [Behavioral questions](https://www.techinterviewhandbook.org/behavioral-interview-questions/) asked by the top tech companies
- [Front end interview preparation](https://www.frontendinterviewhandbook.com)

Help from you in contributing content would be very much appreciated!

## Why would you read this?

This repository has **practical** content that covers all phases of a technical interview, from applying for a job to passing the interviews to offer negotiation. Technically competent candidates might still find the non-technical content helpful.

The information in this repository is condensed. Ultimately, the key to succeeding in technical interviews is consistent practice and I don&#039;t want to bore you with too many words. I tell you the minimum you need to know on how to go about navigating the interview process, you go and practice and land your dream job.

## Who is this for?

Anybody who wants to land a job at a tech company but is new to technical interviews, seasoned engineers who have not been on the other side of the interviewing table in a while and want to get back into the game, or anyone who wants to be better at technical interviewing.

---

&lt;div align=&quot;center&quot;&gt;
  &lt;h3&gt;💡 Stop grinding mindlessly! Study coding question patterns efficiently with
    &lt;a href=&quot;https://designgurus.org/link/kJSIoU?url=https%3A%2F%2Fdesigngurus.org%2Fcourse%3Fcourseid%3Dgrokking-the-coding-interview&quot;&gt;Grokking the Coding Interview&lt;/a&gt; by Design Gurus 💡
  &lt;/h3&gt;
&lt;/div&gt;

---

## How is this repository different?

There are many awesome books like &quot;Cracking the Coding Interview&quot; and interview-related repositories out there on GitHub, what makes this repository different? The difference is that many existing interview repositories contain mainly links to external resources whereas this repository contains top-quality curated content directly for your consumption.

Also, existing resources focus mainly on algorithm questions and lack coverage for more domain-specific and non-technical questions. This handbook aims to cover content beyond the typical algorithmic coding questions. 😎

## Looking for interview courses?

### [AlgoMonster](https://shareasale.com/r.cfm?b=1873647&amp;u=3114753&amp;m=114505&amp;urllink=&amp;afftrack=)

AlgoMonster aims to help you ace the technical interview **in the shortest time possible**. By Google engineers, AlgoMonster uses a data-driven approach to teach you the most useful key question patterns and has contents to help you quickly revise basic data structures and algorithms. Best of all, AlgoMonster is not subscription-based - pay a one-time fee and get **lifetime access**. [**Join today for a 70% discount →**](https://shareasale.com/r.cfm?b=1873647&amp;u=3114753&amp;m=114505&amp;urllink=&amp;afftrack=)

### [Grokking the Coding Interview: Patterns for Coding Questions](https://designgurus.org/link/kJSIoU?url=https%3A%2F%2Fdesigngurus.org%2Fcourse%3Fcourseid%3Dgrokking-the-coding-interview)

This course by Design Gurus expands upon the questions on the recommended practice questions but approaches the practicing from a questions pattern perspective, which is an approach I also agree with for learning and have personally used to get better at coding interviews. The course allows you to practice selected questions in Java, Python, C++, JavaScript and also provides sample solutions in those languages. **Learn and understand patterns, not memorize answers!** [**Get lifetime access today →**](https://designgurus.org/link/kJSIoU?url=https%3A%2F%2Fdesigngurus.org%2Fcourse%3Fcourseid%3Dgrokking-the-coding-interview)

## Looking for Front End content?

Front-end-related content has been moved to a separate website - [Front End Interview Handbook](https://frontendinterviewhandbook.com).

## Looking for System Design content?

We&#039;re still working on System Design content. In the meanwhile, check out [ByteByteGo&#039;s System Design Interview course](https://bytebytego.com?fpr=techinterviewhandbook) or Design Gurus&#039; [Grokking the System Design Interview course](https://designgurus.org/link/kJSIoU?url=https%3A%2F%2Fdesigngurus.org%2Fcourse%3Fcourseid%3Dgrokking-the-system-design-interview), which in our opinion are among the most useful resources for getting started on system design interviews preparation.

## Contents

A [Docusaurus](https://github.com/facebook/docusaurus) website has been created to provide a better reading experience. Check out the website [here](https://www.techinterviewhandbook.org)!

---

&lt;div align=&quot;center&quot;&gt;
  &lt;h3&gt;💡 Stop the grind and study with a plan! Developed by Google engineers, &lt;a href=&quot;https://shareasale.com/r.cfm?b=1873647&amp;u=3114753&amp;m=114505&amp;urllink=&amp;afftrack=&quot;&gt;AlgoMonster&lt;/a&gt; is the fastest way to get a software engineering job. &lt;a href=&quot;https://shareasale.com/r.cfm?b=1873647&amp;u=3114753&amp;m=114505&amp;urllink=&amp;afftrack=&quot;&gt;Join today for a 70% discount!&lt;/a&gt; 💡&lt;/h3&gt;
&lt;/div&gt;

---

## Related

If you are interested in how data structures are implemented, check out [Lago](https://github.com/yangshun/lago), a Data Structures and Algorithms library for JavaScript. It is pretty much still WIP but I intend to make it into a library that can be used in production and also a reference resource for revising Data Structures and Algorithms.

## Contributing

There are no formal contributing guidelines at the moment as things are still in flux and we might find a better approach to structure content as we go along. You are welcome to contribute whatever you think will be helpful to fellow engineers. If you would like to contribute content for different domains, feel free to create an issue or submit a pull request and we can discuss further.

### Contributors

This project exists thanks to all the people who contributed. [[Contribute](CONTRIBUTING.md)]. &lt;a href=&quot;https://github.com/yangshun/tech-interview-handbook/graphs/contributors&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/contributors.svg?width=890&amp;button=false&quot;&gt;&lt;/a&gt;

### Backers

Thank you to all our backers! 🙏 [[Become a backer](https://opencollective.com/tech-interview-handbook#backer)]

&lt;a href=&quot;https://opencollective.com/tech-interview-handbook#backers&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/backers.svg?width=890&quot;&gt;&lt;/a&gt;

&lt;a href=&quot;https://www.buymeacoffee.com/yangshun&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png&quot; alt=&quot;Buy Me A Coffee&quot; style=&quot;height: auto !important; width: auto !important;&quot;&gt;&lt;/a&gt;

### Sponsors

Support this project by becoming a sponsor. Your logo/profile picture will show up here with a link to your website. [[Become a sponsor](https://opencollective.com/tech-interview-handbook#sponsor)]

&lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/0/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/0/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/1/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/1/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/2/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/2/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/3/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/3/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/4/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/4/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/5/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/5/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/6/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/6/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/7/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/7/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/8/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/8/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/9/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/9/avatar.svg&quot;&gt;&lt;/a&gt;

## Disclaimer

I am providing code in the repository to you under an open source license. Because this is my personal repository, the license you receive to my code is from me and not my employer (Meta).
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[docmost/docmost]]></title>
            <link>https://github.com/docmost/docmost</link>
            <guid>https://github.com/docmost/docmost</guid>
            <pubDate>Wed, 09 Jul 2025 00:05:03 GMT</pubDate>
            <description><![CDATA[Docmost is an open-source collaborative wiki and documentation software. It is an open-source alternative to Confluence and Notion.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/docmost/docmost">docmost/docmost</a></h1>
            <p>Docmost is an open-source collaborative wiki and documentation software. It is an open-source alternative to Confluence and Notion.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 16,140</p>
            <p>Forks: 826</p>
            <p>Stars today: 27 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
    &lt;h1&gt;&lt;b&gt;Docmost&lt;/b&gt;&lt;/h1&gt;
    &lt;p&gt;
        Open-source collaborative wiki and documentation software.
        &lt;br /&gt;
        &lt;a href=&quot;https://docmost.com&quot;&gt;&lt;strong&gt;Website&lt;/strong&gt;&lt;/a&gt; | 
        &lt;a href=&quot;https://docmost.com/docs&quot;&gt;&lt;strong&gt;Documentation&lt;/strong&gt;&lt;/a&gt; |
        &lt;a href=&quot;https://twitter.com/DocmostHQ&quot;&gt;&lt;strong&gt;Twitter / X&lt;/strong&gt;&lt;/a&gt;
    &lt;/p&gt;
&lt;/div&gt;
&lt;br /&gt;

## Getting started

To get started with Docmost, please refer to our [documentation](https://docmost.com/docs) or try our [cloud version](https://docmost.com/pricing) .

## Features

- Real-time collaboration
- Diagrams (Draw.io, Excalidraw and Mermaid)
- Spaces
- Permissions management
- Groups
- Comments
- Page history
- Search
- File attachments
- Embeds (Airtable, Loom, Miro and more)
- Translations (10+ languages)

### Screenshots

&lt;p align=&quot;center&quot;&gt;
&lt;img alt=&quot;home&quot; src=&quot;https://docmost.com/screenshots/home.png&quot; width=&quot;70%&quot;&gt;
&lt;img alt=&quot;editor&quot; src=&quot;https://docmost.com/screenshots/editor.png&quot; width=&quot;70%&quot;&gt;
&lt;/p&gt;

### License
Docmost core is licensed under the open-source AGPL 3.0 license.  
Enterprise features are available under an enterprise license (Enterprise Edition).  

All files in the following directories are licensed under the Docmost Enterprise license defined in `packages/ee/License`.
  - apps/server/src/ee
  - apps/client/src/ee
  - packages/ee

### Contributing

See the [development documentation](https://docmost.com/docs/self-hosting/development)

## Thanks
Special thanks to;

&lt;img width=&quot;100&quot; alt=&quot;Crowdin&quot; src=&quot;https://github.com/user-attachments/assets/a6c3d352-e41b-448d-b6cd-3fbca3109f07&quot; /&gt;

[Crowdin](https://crowdin.com/) for providing access to their localization platform.


&lt;img width=&quot;48&quot; alt=&quot;Algolia-mark-square-white&quot; src=&quot;https://github.com/user-attachments/assets/6ccad04a-9589-4965-b6a1-d5cb1f4f9e94&quot; /&gt;

[Algolia](https://www.algolia.com/) for providing full-text search to the docs.

</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[kamranahmedse/developer-roadmap]]></title>
            <link>https://github.com/kamranahmedse/developer-roadmap</link>
            <guid>https://github.com/kamranahmedse/developer-roadmap</guid>
            <pubDate>Wed, 09 Jul 2025 00:05:02 GMT</pubDate>
            <description><![CDATA[Interactive roadmaps, guides and other educational content to help developers grow in their careers.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/kamranahmedse/developer-roadmap">kamranahmedse/developer-roadmap</a></h1>
            <p>Interactive roadmaps, guides and other educational content to help developers grow in their careers.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 330,718</p>
            <p>Forks: 42,309</p>
            <p>Stars today: 181 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[gothinkster/realworld]]></title>
            <link>https://github.com/gothinkster/realworld</link>
            <guid>https://github.com/gothinkster/realworld</guid>
            <pubDate>Wed, 09 Jul 2025 00:05:01 GMT</pubDate>
            <description><![CDATA["The mother of all demo apps" — Exemplary fullstack Medium.com clone powered by React, Angular, Node, Django, and many more]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/gothinkster/realworld">gothinkster/realworld</a></h1>
            <p>"The mother of all demo apps" — Exemplary fullstack Medium.com clone powered by React, Angular, Node, Django, and many more</p>
            <p>Language: TypeScript</p>
            <p>Stars: 81,890</p>
            <p>Forks: 7,461</p>
            <p>Stars today: 41 stars today</p>
            <h2>README</h2><pre>![RealWorld Example Applications](media/realworld-dual-mode.png)

&lt;p align=&quot;center&quot; style=&quot;margin-top: 30px;&quot;&gt;&lt;img src=&quot;media/stacks_hr.gif&quot;&gt;&lt;/p&gt;

### See how [_the exact same_ Medium.com clone](https://demo.realworld.build) is built using different [frontends](https://codebase.show/projects/realworld?category=frontend) and [backends](https://codebase.show/projects/realworld?category=backend)

You can combine any frontend with any backend, because **they all adhere to the same API spec**

While most &quot;todo&quot; demos provide an excellent cursory glance at a framework&#039;s capabilities, they typically don&#039;t convey the knowledge &amp; perspective required to actually build _real_ applications with it.

**RealWorld** solves this by allowing you to choose any frontend (React, Angular, &amp; more) and any backend (Node, Django, &amp; more).

_Read the [full blog post announcing RealWorld on Medium.](https://medium.com/@ericsimons/introducing-realworld-6016654d36b5)_

Join us on [GitHub Discussions!](https://github.com/gothinkster/realworld/discussions) 🎉

# Implementations

Over 100 implementations have been created using various languages, libraries, and frameworks.

Explore them on [**CodebaseShow**](https://codebase.show/projects/realworld).

# Create a new implementation

[**Create a new implementation &gt;&gt;&gt;**](https://docs.realworld.build/implementation-creation/introduction)

Or you can [view upcoming implementations (WIPs)](https://github.com/gothinkster/realworld/discussions/categories/wip-implementations).

# Learn more

- [Documentation introduction](https://docs.realworld.build/introduction/)
- Every tutorial is built against the same [API spec](api/) to ensure modularity of every frontend &amp; backend
- Every frontend utilizes the same handcrafted [Bootstrap 4 theme](https://github.com/gothinkster/conduit-bootstrap-template) for identical UI/UX
- There is a hosted version of the backend API available for public usage at [api.realworld.build](https://api.realworld.build) (with strong account isolation), no API keys are required
- There is an angular frontend plugged to this backend available at [demo.realworld.build](https://demo.realworld.build)
- Interested in creating a new RealWorld stack? View our [starter guide &amp; spec](https://docs.realworld.build/implementation-creation/introduction)

# Active Maintainers

- **[c4ffein](https://github.com/c4ffein) - Maintainer** - currently maintains the [demo website](https://demo.realworld.build)
- **[Manuel Vila](https://github.com/mvila) - Maintainer** - creator of the [Layr framework](https://layrjs.com) and the [CodebaseShow website](https://codebase.show/)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[anthropics/anthropic-quickstarts]]></title>
            <link>https://github.com/anthropics/anthropic-quickstarts</link>
            <guid>https://github.com/anthropics/anthropic-quickstarts</guid>
            <pubDate>Wed, 09 Jul 2025 00:05:00 GMT</pubDate>
            <description><![CDATA[A collection of projects designed to help developers quickly get started with building deployable applications using the Anthropic API]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/anthropics/anthropic-quickstarts">anthropics/anthropic-quickstarts</a></h1>
            <p>A collection of projects designed to help developers quickly get started with building deployable applications using the Anthropic API</p>
            <p>Language: TypeScript</p>
            <p>Stars: 9,336</p>
            <p>Forks: 1,652</p>
            <p>Stars today: 19 stars today</p>
            <h2>README</h2><pre># Anthropic Quickstarts

Anthropic Quickstarts is a collection of projects designed to help developers quickly get started with building  applications using the Anthropic API. Each quickstart provides a foundation that you can easily build upon and customize for your specific needs.

## Getting Started

To use these quickstarts, you&#039;ll need an Anthropic API key. If you don&#039;t have one yet, you can sign up for free at [console.anthropic.com](https://console.anthropic.com).

## Available Quickstarts

### Customer Support Agent

A customer support agent powered by Claude. This project demonstrates how to leverage Claude&#039;s natural language understanding and generation capabilities to create an AI-assisted customer support system with access to a knowledge base.

[Go to Customer Support Agent Quickstart](./customer-support-agent)

### Financial Data Analyst

A financial data analyst powered by Claude. This project demonstrates how to leverage Claude&#039;s capabilities with interactive data visualization to analyze financial data via chat.

[Go to Financial Data Analyst Quickstart](./financial-data-analyst)

### Computer Use Demo

An environment and tools that Claude can use to control a desktop computer. This project demonstrates how to leverage the computer use capabilities of the new Claude 3.5 Sonnet model.

[Go to Computer Use Demo Quickstart](./computer-use-demo)

## General Usage

Each quickstart project comes with its own README and setup instructions. Generally, you&#039;ll follow these steps:

1. Clone this repository
2. Navigate to the specific quickstart directory
3. Install the required dependencies
4. Set up your Anthropic API key as an environment variable
5. Run the quickstart application

## Explore Further

To deepen your understanding of working with Claude and the Anthropic API, check out these resources:

- [Anthropic API Documentation](https://docs.anthropic.com)
- [Anthropic Cookbook](https://github.com/anthropics/anthropic-cookbook) - A collection of code snippets and guides for common tasks
- [Anthropic API Fundamentals Course](https://github.com/anthropics/courses/tree/master/anthropic_api_fundamentals)

## Contributing

We welcome contributions to the Anthropic Quickstarts repository! If you have ideas for new quickstart projects or improvements to existing ones, please open an issue or submit a pull request.

## Community and Support

- Join our [Anthropic Discord community](https://www.anthropic.com/discord) for discussions and support
- Check out the [Anthropic support documentation](https://support.anthropic.com) for additional help

## License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[aceberg/WatchYourLAN]]></title>
            <link>https://github.com/aceberg/WatchYourLAN</link>
            <guid>https://github.com/aceberg/WatchYourLAN</guid>
            <pubDate>Wed, 09 Jul 2025 00:04:59 GMT</pubDate>
            <description><![CDATA[Lightweight network IP scanner. Can be used to notify about new hosts and monitor host online/offline history]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/aceberg/WatchYourLAN">aceberg/WatchYourLAN</a></h1>
            <p>Lightweight network IP scanner. Can be used to notify about new hosts and monitor host online/offline history</p>
            <p>Language: TypeScript</p>
            <p>Stars: 6,098</p>
            <p>Forks: 210</p>
            <p>Stars today: 19 stars today</p>
            <h2>README</h2><pre>&lt;h1&gt;&lt;a href=&quot;https://github.com/aceberg/WatchYourLAN&quot;&gt;
    &lt;img src=&quot;https://raw.githubusercontent.com/aceberg/WatchYourLAN/main/assets/logo.png&quot; width=&quot;20&quot; /&gt;
&lt;/a&gt;WatchYourLAN&lt;/h1&gt;
&lt;br/&gt;

[![Docker](https://github.com/aceberg/WatchYourLAN/actions/workflows/main-docker-all.yml/badge.svg)](https://github.com/aceberg/WatchYourLAN/actions/workflows/main-docker-all.yml)
[![Go Report Card](https://goreportcard.com/badge/github.com/aceberg/WatchYourLAN)](https://goreportcard.com/report/github.com/aceberg/WatchYourLAN)
[![Docker Image Size (latest semver)](https://img.shields.io/docker/image-size/aceberg/watchyourlan)](https://hub.docker.com/r/aceberg/watchyourlan)
[![GitHub Discussions](https://img.shields.io/github/discussions/aceberg/WatchYourLAN)](https://github.com/aceberg/WatchYourLAN/discussions)



Lightweight network IP scanner with web GUI. Features:
- Send notification when new host is found
- Monitor hosts online/offline history
- Keep a list of all hosts in the network
- Send data to `InfluxDB2` or `Prometheus` to make a `Grafana` dashboard 

&gt; [!IMPORTANT]   
&gt; Please, consider making a [donation](https://github.com/aceberg#donate). Even $10 will make a difference to me.

![Screenshot_1](https://raw.githubusercontent.com/aceberg/WatchYourLAN/main/assets/Screenshot_1.png)  

## More screenshots

&lt;details&gt;
  &lt;summary&gt;Expand&lt;/summary&gt;

![Screenshot_5](https://raw.githubusercontent.com/aceberg/WatchYourLAN/main/assets/Screenshot_5.png)   
![Screenshot_2](https://raw.githubusercontent.com/aceberg/WatchYourLAN/main/assets/Screenshot_2.png)   
![Screenshot_3](https://raw.githubusercontent.com/aceberg/WatchYourLAN/main/assets/Screenshot_3.png)   
![Screenshot_4](https://raw.githubusercontent.com/aceberg/WatchYourLAN/main/assets/Screenshot_4.png) 
&lt;/details&gt; 

## Quick start

&lt;details&gt;
  &lt;summary&gt;Expand&lt;/summary&gt;

Replace `$YOURTIMEZONE` with correct time zone and `$YOURIFACE` with network interface you want to scan. Network mode must be `host`. Set `$DOCKERDATAPATH` for container to save data:

```sh
docker run --name wyl \
	-e &quot;IFACES=$YOURIFACE&quot; \
	-e &quot;TZ=$YOURTIMEZONE&quot; \
	--network=&quot;host&quot; \
	-v $DOCKERDATAPATH/wyl:/data/WatchYourLAN \
    aceberg/watchyourlan
```
Web GUI should be at http://localhost:8840

&lt;/details&gt; 

## Auth

&lt;details&gt;
  &lt;summary&gt;Expand&lt;/summary&gt;

**WatchYourLAN** does not have built-in auth option. But you can use it with SSO tools like Authelia, or my simple auth app [ForAuth](https://github.com/aceberg/ForAuth).   
Here is an example [docker-compose-auth.yml](https://github.com/aceberg/WatchYourLAN/blob/main/docker-compose-auth.yml).

&gt; :warning:  **WARNING!**   
&gt; Please, don&#039;t forget that WYL needs `host` network mode to work. So, WYL port will be exposed in this setup. You need to limit access to it with firewall or other measures.   

&lt;/details&gt; 

## Install on Linux

&lt;details&gt;
  &lt;summary&gt;Expand&lt;/summary&gt;

All binary packages can be found in [latest](https://github.com/aceberg/WatchYourLAN/releases/latest) release. There are `.deb`, `.rpm`, `.apk` (Alpine Linux) and `.tar.gz` files.   

Supported architectures: `amd64`, `i386`, `arm_v5`, `arm_v6`, `arm_v7`, `arm64`.   
Dependencies: `arp-scan`, `tzdata`.

For `amd64` there is a `deb` repo [available](https://github.com/aceberg/ppa)

&lt;/details&gt; 

## Config
&lt;details&gt;
  &lt;summary&gt;Expand&lt;/summary&gt;

Configuration can be done through config file, GUI or environment variables. Variable names is `config_v2.yaml` file are the same, but in lowcase.

### Basic config
| Variable  | Description | Default |
| --------  | ----------- | ------- |
| TZ | Set your timezone for correct time | |
| HOST | Listen address | 0.0.0.0 |
| PORT   | Port for web GUI | 8840 |
| THEME | Any theme name from https://bootswatch.com in lowcase or [additional](https://github.com/aceberg/aceberg-bootswatch-fork) | sand |
| COLOR | Background color: light or dark | dark |
| NODEPATH | Path to local node modules |  |
| SHOUTRRR_URL | WatchYourLAN uses [Shoutrrr](https://github.com/containrrr/shoutrrr) to send notifications. It is already integrated, just needs a correct URL. Examples for Discord, Email, Gotify, Matrix, Ntfy, Pushover, Slack, Telegram, Generic Webhook and etc are [here](https://containrrr.dev/shoutrrr/v0.8/services/gotify/) | |

### Scan settings
| Variable  | Description | Default |
| --------  | ----------- | ------- |
| IFACES | Interfaces to scan. Could be one or more, separated by space. See [docs/VLAN_ARP_SCAN.md](https://github.com/aceberg/WatchYourLAN/blob/main/docs/VLAN_ARP_SCAN.md). | |
| TIMEOUT | Time between scans (seconds) | 120 |
| ARP_ARGS | Arguments for `arp-scan`. Enable `debug` log level to see resulting command. (Example: `-r 1`). See [docs/VLAN_ARP_SCAN.md](https://github.com/aceberg/WatchYourLAN/blob/main/docs/VLAN_ARP_SCAN.md). | |
| ARP_STRS ARP_STRS_JOINED | See [docs/VLAN_ARP_SCAN.md](https://github.com/aceberg/WatchYourLAN/blob/main/docs/VLAN_ARP_SCAN.md). | |
| LOG_LEVEL | Log level: `debug`, `info`, `warn` or `error` | info |
| TRIM_HIST | Remove history after (hours) | 48 |
| HIST_IN_DB | Store History in DB - if `false`, the History will be stored only in memory and will be lost on app restart. Though, it will keep the app DB smaller (InfluxDB or Prometheus is recommended for long-term History storage) | false |
| USE_DB | Either `sqlite` or `postgres` | sqlite |
| PG_CONNECT | Address to connect to PostgreSQL. (Example: `postgres://username:password@192.168.0.1:5432/dbname?sslmode=disable`). Full list of URL parameters [here](https://pkg.go.dev/github.com/lib/pq#hdr-Connection_String_Parameters) | |

### InfluxDB2 config
This config matches Grafana&#039;s config for InfluxDB data source

| Variable  | Description | Default | Example |
| --------  | ----------- | ------- | ------- |
| INFLUX_ENABLE | Enable export to InfluxDB2 | false | true |
| INFLUX_SKIP_TLS | Skip TLS Verify | false | true |
| INFLUX_ADDR | Address:port of InfluxDB2 server | | https://192.168.2.3:8086/ |
| INFLUX_BUCKET | InfluxDB2 bucket | | test |
| INFLUX_ORG | InfluxDB2 org | | home |
| INFLUX_TOKEN | Secret token, generated by InfluxDB2 | | |

### Prometheus config
This config configures the Prometheus data source

| Variable  | Description | Default | Example |
| --------  | ----------- | ------- | ------- |
| PROMETHEUS_ENABLE | Enable the Prometheus `/metrics` endpoint | false | true |

&lt;/details&gt; 

## Config file

&lt;details&gt;
  &lt;summary&gt;Expand&lt;/summary&gt;

Config file name is `config_v2.yaml`. Example:

```yaml
arp_args: &quot;&quot;
color: dark
hist_in_db: false
host: 0.0.0.0
ifaces: enp4s0
influx_addr: &quot;&quot;
influx_bucket: &quot;&quot;
influx_enable: false
influx_org: &quot;&quot;
influx_skip_tls: false
influx_token: &quot;&quot;
log_level: info
nodepath: &quot;&quot;
pg_connect: &quot;&quot;
port: &quot;8840&quot;
prometheus_enable: false
shoutrrr_url: &quot;gotify://192.168.0.1:8083/AwQqpAae.rrl5Ob/?title=Unknown host detected&amp;DisableTLS=yes&quot;
theme: sand
timeout: 60
trim_hist: 48
use_db: sqlite
```

&lt;/details&gt; 

## Options

&lt;details&gt;
  &lt;summary&gt;Expand&lt;/summary&gt;

| Key  | Description | Default | 
| --------  | ----------- | ------- | 
| -d | Path to config dir | /data/WatchYourLAN | 
| -n | Path to node modules (see below) | |

&lt;/details&gt; 

## Local network only
&lt;details&gt;
  &lt;summary&gt;Expand&lt;/summary&gt;

By default, this app pulls themes, icons and fonts from the internet. But, in some cases, it may be useful to have an independent from global network setup. I created a separate [image](https://github.com/aceberg/my-dockerfiles/tree/main/node-bootstrap) with all necessary modules and fonts.
Run with Docker:
```sh
docker run --name node-bootstrap          \
    -p 8850:8850                          \
    aceberg/node-bootstrap
```
```sh
docker run --name wyl \
	-e &quot;IFACES=$YOURIFACE&quot; \
	-e &quot;TZ=$YOURTIMEZONE&quot; \
	--network=&quot;host&quot; \
	-v $DOCKERDATAPATH/wyl:/data/WatchYourLAN \
    aceberg/watchyourlan -n &quot;http://$YOUR_IP:8850&quot;
```
Or use [docker-compose](docker-compose.yml)

&lt;/details&gt; 

## API &amp; Integrations

&lt;details&gt;
  &lt;summary&gt;Expand&lt;/summary&gt;

### API
Moved to [docs/API.md](https://github.com/aceberg/WatchYourLAN/blob/main/docs/API.md)

### Integrations
- [ArchLinux (AUR)](https://aur.archlinux.org/packages/watch-your-lan) by `gilcu3`
- [Python API client](https://github.com/drwahl/py-watchyourlanclient) by [drwahl](https://github.com/drwahl)
- [Umbrel](https://apps.umbrel.com/app/watch-your-lan) by [Jasper](https://github.com/ceramicwhite)
- [YunoHost](https://apps.yunohost.org/app/watchyourlan)
&lt;/details&gt; 

## Thanks
&lt;details&gt;
  &lt;summary&gt;Expand&lt;/summary&gt;

- All go packages listed in [dependencies](https://github.com/aceberg/WatchYourLAN/network/dependencies)
- Favicon and logo: [Access point icons created by Freepik - Flaticon](https://www.flaticon.com/free-icons/access-point)
- [Bootstrap](https://getbootstrap.com/)
- Themes: [Free themes for Bootstrap](https://bootswatch.com)

&lt;/details&gt; 
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[nerding-io/n8n-nodes-mcp]]></title>
            <link>https://github.com/nerding-io/n8n-nodes-mcp</link>
            <guid>https://github.com/nerding-io/n8n-nodes-mcp</guid>
            <pubDate>Wed, 09 Jul 2025 00:04:58 GMT</pubDate>
            <description><![CDATA[n8n custom node for MCP]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/nerding-io/n8n-nodes-mcp">nerding-io/n8n-nodes-mcp</a></h1>
            <p>n8n custom node for MCP</p>
            <p>Language: TypeScript</p>
            <p>Stars: 2,189</p>
            <p>Forks: 386</p>
            <p>Stars today: 36 stars today</p>
            <h2>README</h2><pre>[![Verified on MseeP](https://mseep.ai/badge.svg)](https://mseep.ai/app/bd76f121-1c8f-4f5d-9c65-1eac5d81b6af)

# n8n-nodes-mcp-client

&gt; **Important Note:**
&gt; The Server-Sent Events (SSE) transport is deprecated and replaced by the new HTTP Streamable transport. SSE remains available for legacy compatibility, but HTTP Streamable is now the recommended method for all new implementations.

This is an n8n community node that lets you interact with Model Context Protocol (MCP) servers in your n8n workflows.

MCP is a protocol that enables AI models to interact with external tools and data sources in a standardized way. This node allows you to connect to MCP servers, access resources, execute tools, and use prompts.

[n8n](https://n8n.io/) is a [fair-code licensed](https://docs.n8n.io/reference/license/) workflow automation platform.

[Installation](#installation)
[Credentials](#credentials)
[Environment Variables](#environment-variables)
[Operations](#operations)
[Using as a Tool](#using-as-a-tool)
[Compatibility](#compatibility)
[Resources](#resources)

## Getting Started

Official Quickstart Video:

[![MCP Client Node Quickstart](/assets/mcp-n8n.png)](https://youtu.be/1t8DQL-jUJk)



### Community Videos

Shoutout to all the creators of the following n8n community videos that are great resources for learning how to use this node:

- [Is MCP the Future of N8N AI Agents? (Fully Tested!)](https://youtu.be/sb5hCcFYPIE)
- [Connect N8N AI Agents to EVERYTHING using MCP?](https://youtu.be/tTDRgkD-120)
- [Build an AI Agent That Can Use Any Tool (MCP in n8n Tutorial)](https://www.youtube.com/watch?v=SVZe2rdhYmA)
- [The NEW N8N MCP is an Absolute Game-Changer (Brave Search MCP)](https://youtu.be/RxXS_FpJyGM)
- [MCP &amp; n8n Automation: The Ultimate Guide for MCP AI Agents (2025)](https://www.youtube.com/watch?v=mbQsnrxHPwE)
- [REVOLUÇÃO na criação de AGENTES no N8N com o MCP Server!!!](https://www.youtube.com/watch?v=zgH85dJcs5c) (Portuguese)

If you have a great video that you&#039;d like to share, please let me know and I&#039;ll add it to the list!

#### Interested a deeper dive into MCP?

Check out my YouTube Series [MCP Explained](https://www.youtube.com/playlist?list=PLjOCx_PNfJ4S_oOSqrMi6t9_x1GllvQZO) for more information about the Model Context Protocol.

### Security Assessment
[![MseeP.ai Security Assessment Badge](https://mseep.net/pr/nerding-io-n8n-nodes-mcp-badge.png)](https://mseep.ai/app/nerding-io-n8n-nodes-mcp)


## Installation

Follow the [installation guide](https://docs.n8n.io/integrations/community-nodes/installation/) in the n8n community nodes documentation.

Also pay attention to Environment Variables for [using tools in AI Agents](#using-as-a-tool). It&#039;s mandatory to set the `N8N_COMMUNITY_PACKAGES_ALLOW_TOOL_USAGE` environment variable to `true` if you want to use the MCP Client node as a tool in AI Agents.

## Credentials

The MCP Client node supports three types of credentials to connect to an MCP server:

### Command-line Based Transport (STDIO)

![MCP Client STDIO Credentials](./assets/credentials.png)

- **Command**: The command to start the MCP server
- **Arguments**: Optional arguments to pass to the server command
- **Environment Variables**: Variables to pass to the server in NAME=VALUE format

### HTTP Streamable Transport (Recommended)

- **HTTP Streamable URL**: The HTTP endpoint that supports streaming responses (e.g., http://localhost:3001/stream)
- **Additional Headers**: Optional headers to send with requests (format: name:value, one per line)

HTTP Streamable is the recommended and modern method for all new integrations, providing better efficiency and flexibility compared to SSE.

#### Example: Using a Local MCP Server with HTTP Streamable

This example shows how to connect to a locally running MCP server using HTTP Streamable:

1. Start a local MCP server that supports HTTP Streamable:
   ```bash
   npx @modelcontextprotocol/server-example-streamable
   ```

2. Configure MCP Client credentials:
   - In the node settings, select **Connection Type**: `HTTP Streamable`
   - Create new credentials of type **MCP Client (HTTP Streamable) API**
   - Set **HTTP Streamable URL**: `http://localhost:3001/stream`
   - Add any required headers for authentication

3. Create a workflow using the MCP Client node:
   - Add an MCP Client node
   - Set the Connection Type to `HTTP Streamable`
   - Select your HTTP Streamable credentials
   - Execute the workflow to see the results

### Server-Sent Events (SSE) Transport (Deprecated, still available for legacy use)

- **SSE URL**: The URL of the SSE endpoint (default: http://localhost:3001/sse)
- **Messages Post Endpoint**: Optional custom endpoint for posting messages if different from the SSE URL
- **Additional Headers**: Optional headers to send with requests (format: name:value, one per line)

&gt; **Deprecated:** SSE is deprecated and will not receive further updates, but remains available for legacy compatibility. For new projects, use HTTP Streamable.

#### Example: Using a Local MCP Server with SSE (legacy)

This example shows how to connect to a locally running MCP server using Server-Sent Events (SSE):

1. Start a local MCP server that supports SSE:
   ```bash
   npx @modelcontextprotocol/server-example-sse
   ```

2. Configure MCP Client credentials:
   - In the node settings, select **Connection Type**: `Server-Sent Events (SSE)`
   - Create new credentials of type **MCP Client (SSE) API**
   - Set **SSE URL**: `http://localhost:3001/sse`
   - Add any required headers for authentication

3. Create a workflow using the MCP Client node:
   - Add an MCP Client node
   - Set the Connection Type to `Server-Sent Events (SSE)`
   - Select your SSE credentials
   - Execute the workflow to see the results

&gt; **Note:** For new projects, HTTP Streamable is strongly recommended.

## Environment Variables

The MCP Client node supports passing environment variables to MCP servers using the command-line based transport in two ways:

### 1. Using the Credentials UI

You can add environment variables directly in the credentials configuration:

![Environment Variables in Credentials](./assets/credentials-envs.png)

This method is useful for individual setups and testing. The values are stored securely as credentials in n8n.

### 2. Using Docker Environment Variables

For Docker deployments, you can pass environment variables directly to your MCP servers by prefixing them with `MCP_`:

```yaml
version: &#039;3&#039;

services:
  n8n:
    image: n8nio/n8n
    environment:
      - MCP_BRAVE_API_KEY=your-api-key-here
      - MCP_OPENAI_API_KEY=your-openai-key-here
      - MCP_CUSTOM_SETTING=some-value
    # other configuration...
```

These environment variables will be automatically passed to your MCP servers when they are executed.

### Example: Using Brave Search MCP Server

This example shows how to set up and use the Brave Search MCP server:

1. Install the Brave Search MCP server:
   ```bash
   npm install -g @modelcontextprotocol/server-brave-search
   ```

2. Configure MCP Client credentials:
   - **Command**: `npx`
   - **Arguments**: `-y @modelcontextprotocol/server-brave-search`
   - **Environment Variables**: `BRAVE_API_KEY=your-api-key` Add a variables (space comma or newline separated)

3. Create a workflow that uses the MCP Client node:
   - Add an MCP Client node
   - Select the &quot;List Tools&quot; operation to see available search tools
   - Add another MCP Client node
   - Select the &quot;Execute Tool&quot; operation
   - Choose the &quot;brave_search&quot; tool
   - Set Parameters to: `{&quot;query&quot;: &quot;latest AI news&quot;}`

![Brave Search Example](./assets/brave-search-example.png)

The node will execute the search and return the results in the output.

### Example: Multi-Server Setup with AI Agent

This example demonstrates how to set up multiple MCP servers in a production environment and use them with an AI agent:

1. Configure your docker-compose.yml file:

```yaml
version: &#039;3&#039;

services:
  n8n:
    image: n8nio/n8n
    environment:
      # MCP server environment variables
      - MCP_BRAVE_API_KEY=your-brave-api-key
      - MCP_OPENAI_API_KEY=your-openai-key
      - MCP_SERPER_API_KEY=your-serper-key
      - MCP_WEATHER_API_KEY=your-weather-api-key

      # Enable community nodes as tools
      - N8N_COMMUNITY_PACKAGES_ALLOW_TOOL_USAGE=true
    ports:
      - &quot;5678:5678&quot;
    volumes:
      - ~/.n8n:/home/node/.n8n
```

2. Create multiple MCP Client credentials in n8n:

   **Brave Search Credentials**:
   - Command: `npx`
   - Arguments: `-y @modelcontextprotocol/server-brave-search`

   **OpenAI Tools Credentials**:
   - Command: `npx`
   - Arguments: `-y @modelcontextprotocol/server-openai`

   **Web Search Credentials**:
   - Command: `npx`
   - Arguments: `-y @modelcontextprotocol/server-serper`

   **Weather API Credentials**:
   - Command: `npx`
   - Arguments: `-y @modelcontextprotocol/server-weather`

3. Create an AI Agent workflow:
   - Add an AI Agent node
   - Enable MCP Client as a tool
   - Configure different MCP Client nodes with different credentials
   - Create a prompt that uses multiple data sources

![Multi-Server Setup](./assets/multi-server-example.png)

Example AI Agent prompt:
```
I need you to help me plan a trip. First, search for popular destinations in {destination_country}.
Then, check the current weather in the top 3 cities.
Finally, find some recent news about travel restrictions for these places.
```

With this setup, the AI agent can use multiple MCP tools across different servers, all using environment variables configured in your Docker deployment.

## Operations

The MCP Client node supports the following operations:

![MCP Client Operations](./assets/operations.png)

- **Execute Tool** - Execute a specific tool with parameters
- **Get Prompt** - Get a specific prompt template
- **List Prompts** - Get a list of available prompts
- **List Resources** - Get a list of available resources from the MCP server
- **List Tools** - Get a list of available tools
- **Read Resource** - Read a specific resource by URI

### Example: List Tools Operation

![List Tools Example](./assets/list-tools.png)

The List Tools operation returns all available tools from the MCP server, including their names, descriptions, and parameter schemas.

### Example: Execute Tool Operation

![Execute Tool Example](./assets/execute-tool.png)

The Execute Tool operation allows you to execute a specific tool with parameters. Make sure to select the tool you want to execute from the dropdown menu.

## Using as a Tool

This node can be used as a tool in n8n AI Agents. To enable community nodes as tools, you need to set the `N8N_COMMUNITY_PACKAGES_ALLOW_TOOL_USAGE` environment variable to `true`.

### Setting the Environment Variable

**If you&#039;re using a bash/zsh shell:**
```bash
export N8N_COMMUNITY_PACKAGES_ALLOW_TOOL_USAGE=true
n8n start
```

**If you&#039;re using Docker:**
Add to your docker-compose.yml file:
```yaml
environment:
  - N8N_COMMUNITY_PACKAGES_ALLOW_TOOL_USAGE=true
```

**If you&#039;re using the desktop app:**
Create a `.env` file in the n8n directory:
```
N8N_COMMUNITY_PACKAGES_ALLOW_TOOL_USAGE=true
```

**If you want to set it permanently on Mac/Linux:**
Add to your `~/.zshrc` or `~/.bash_profile`:
```bash
export N8N_COMMUNITY_PACKAGES_ALLOW_TOOL_USAGE=true
```

Example of an AI Agent workflow results:

![AI Agent Example](./assets/execute-tool-result.png)

After setting this environment variable and restarting n8n, your MCP Client node will be available as a tool in AI Agent nodes.

## Compatibility

- Requires n8n version 1.0.0 or later
- Compatible with MCP Protocol version 1.0.0 or later
- Supports both STDIO and SSE transports for connecting to MCP servers
- SSE transport requires a server that implements the MCP Server-Sent Events specification

## Resources

* [n8n community nodes documentation](https://docs.n8n.io/integrations/community-nodes/)
* [Model Context Protocol Documentation](https://modelcontextprotocol.io/docs/)
* [MCP TypeScript SDK](https://github.com/modelcontextprotocol/typescript-sdk)
* [MCP Transports Overview](https://modelcontextprotocol.io/docs/concepts/transports)
* [Using SSE in MCP](https://github.com/modelcontextprotocol/typescript-sdk/blob/main/src/client/sse.ts)


</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[raydium-io/raydium-sdk-V2]]></title>
            <link>https://github.com/raydium-io/raydium-sdk-V2</link>
            <guid>https://github.com/raydium-io/raydium-sdk-V2</guid>
            <pubDate>Wed, 09 Jul 2025 00:04:57 GMT</pubDate>
            <description><![CDATA[Open-source Typescript SDK for Raydium]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/raydium-io/raydium-sdk-V2">raydium-io/raydium-sdk-V2</a></h1>
            <p>Open-source Typescript SDK for Raydium</p>
            <p>Language: TypeScript</p>
            <p>Stars: 287</p>
            <p>Forks: 145</p>
            <p>Stars today: 0 stars today</p>
            <h2>README</h2><pre># Raydium SDK

[npm-image]: https://img.shields.io/npm/v/@raydium-io/raydium-sdk-v2.svg?style=flat
[npm-url]: https://www.npmjs.com/package/@raydium-io/raydium-sdk-v2

[![npm][npm-image]][npm-url]

An SDK for building applications on top of Raydium.

## Usage Guide

### Installation

```
$ yarn add @raydium-io/raydium-sdk-v2
```

## SDK method Demo

[SDK V2 Demo Repo](https://github.com/raydium-io/raydium-sdk-V2-demo)

## SDK local test

```
$ yarn dev {directory}

e.g. yarn dev test/init.ts
```

## Features

### Initialization

```javascript
import { Raydium } from &quot;@raydium-io/raydium-sdk&quot;;
const raydium = await Raydium.load({
  connection,
  owner, // key pair or publicKey, if you run a node process, provide keyPair
  signAllTransactions, // optional - provide sign functions provided by @solana/wallet-adapter-react
  tokenAccounts, // optional, if dapp handle it by self can provide to sdk
  tokenAccountRowInfos, // optional, if dapp handle it by self can provide to sdk
  disableLoadToken: false, // default is false, if you don&#039;t need token info, set to true
});
```

#### how to transform token account data

```javascript
import { parseTokenAccountResp } from &quot;@raydium-io/raydium-sdk&quot;;

const solAccountResp = await connection.getAccountInfo(owner.publicKey);
const tokenAccountResp = await connection.getTokenAccountsByOwner(owner.publicKey, { programId: TOKEN_PROGRAM_ID });
const token2022Req = await connection.getTokenAccountsByOwner(owner.publicKey, { programId: TOKEN_2022_PROGRAM_ID });
const tokenAccountData = parseTokenAccountResp({
  owner: owner.publicKey,
  solAccountResp,
  tokenAccountResp: {
    context: tokenAccountResp.context,
    value: [...tokenAccountResp.value, ...token2022Req.value],
  },
});
```

#### data after initialization

```
# token
raydium.token.tokenList
raydium.token.tokenMap
raydium.token.mintGroup


# token account
raydium.account.tokenAccounts
raydium.account.tokenAccountRawInfos
```

#### Api methods (https://github.com/raydium-io/raydium-sdk-V2/blob/master/src/api/api.ts)

- fetch raydium default mint list (mainnet only)

```javascript
const data = await raydium.api.getTokenList();
```

- fetch mints recognizable by raydium

```javascript
const data = await raydium.api.getTokenInfo([
  &quot;So11111111111111111111111111111111111111112&quot;,
  &quot;4k3Dyjzvzp8eMZWUXbBCjEvwSkkk59S5iCNLY3QrkX6R&quot;,
]);
```

- fetch pool list (mainnet only)
  available fetch params defined here: https://github.com/raydium-io/raydium-sdk-V2/blob/master/src/api/type.ts#L249

```javascript
const data = await raydium.api.getPoolList({});
```

- fetch poolInfo by id (mainnet only)

```javascript
// ids: join pool ids by comma(,)
const data = await raydium.api.fetchPoolById({
  ids: &quot;AVs9TA4nWDzfPJE9gGVNJMVhcQy3V9PGazuz33BfG2RA,8sLbNZoA1cfnvMJLPfp98ZLAnFSYCFApfJKMbiXNLwxj&quot;,
});
```

- fetch pool list by mints (mainnet only)

```javascript
const data = await raydium.api.fetchPoolByMints({
  mint1: &quot;So11111111111111111111111111111111111111112&quot;,
  mint2: &quot;4k3Dyjzvzp8eMZWUXbBCjEvwSkkk59S5iCNLY3QrkX6R&quot;, // optional,
  // extra params: https://github.com/raydium-io/raydium-sdk-V2/blob/master/src/api/type.ts#L249
});
```

- fetch farmInfo by id (mainnet only)

```javascript
// ids: join farm ids by comma(,)
const data = await raydium.api.fetchFarmInfoById({
  ids: &quot;4EwbZo8BZXP5313z5A2H11MRBP15M5n6YxfmkjXESKAW,HUDr9BDaAGqi37xbQHzxCyXvfMCKPTPNF8g9c9bPu1Fu&quot;,
});
```
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[transformerlab/transformerlab-app]]></title>
            <link>https://github.com/transformerlab/transformerlab-app</link>
            <guid>https://github.com/transformerlab/transformerlab-app</guid>
            <pubDate>Wed, 09 Jul 2025 00:04:56 GMT</pubDate>
            <description><![CDATA[Open Source Application for Advanced LLM + Diffusion Engineering: interact, train, fine-tune, and evaluate large language models on your own computer.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/transformerlab/transformerlab-app">transformerlab/transformerlab-app</a></h1>
            <p>Open Source Application for Advanced LLM + Diffusion Engineering: interact, train, fine-tune, and evaluate large language models on your own computer.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 3,538</p>
            <p>Forks: 305</p>
            <p>Stars today: 15 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://transformerlab.ai&quot;&gt;&lt;picture&gt;
    &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://raw.githubusercontent.com/transformerlab/transformerlab-app/refs/heads/main/assets/Transformer-Lab_Logo_Reverse.svg&quot;&gt;
    &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://raw.githubusercontent.com/transformerlab/transformerlab-app/refs/heads/main/assets/Transformer-Lab_Logo.svg&quot;&gt;
    &lt;img alt=&quot;transformer lab logo&quot; src=&quot;https://raw.githubusercontent.com/transformerlab/transformerlab-app/refs/heads/main/assets/Transformer-Lab_Logo.svg&quot; style=&quot;max-width: 650px&quot;&gt;
  &lt;/picture&gt;&lt;/a&gt;

  &lt;p align=&quot;center&quot;&gt;
    100% Open Source Toolkit for Large Language Models: Train, Tune, Chat on your own Machine
    &lt;br /&gt;
    &lt;a href=&quot;https://transformerlab.ai/docs/download/&quot;&gt;&lt;strong&gt;Download&lt;/strong&gt;&lt;/a&gt;
    ·
    &lt;a href=&quot;https://transformerlab.ai/docs/intro&quot;&gt;&lt;strong&gt;Explore the docs »&lt;/strong&gt;&lt;/a&gt;
    &lt;br /&gt;
    &lt;br /&gt;
    &lt;a href=&quot;https://youtu.be/tY5TAvKviLo&quot;&gt;View Demo&lt;/a&gt;
    ·
    &lt;a href=&quot;https://github.com/transformerlab/transformerlab-app/issues&quot;&gt;Report Bugs&lt;/a&gt;
    ·
    &lt;a href=&quot;https://github.com/transformerlab/transformerlab-app/issues/new&quot;&gt;Suggest Features&lt;/a&gt;
    ·
    &lt;a href=&quot;https://discord.gg/transformerlab&quot;&gt;Join Discord&lt;/a&gt;
    ·
    &lt;a href=&quot;https://twitter.com/transformerlab&quot;&gt;Follow on Twitter&lt;/a&gt;
  &lt;/p&gt;
  &lt;p align=&quot;center&quot;&gt;
   Note: Transformer Lab is actively being developed. Please join our Discord or follow us on Twitter for updates. Questions, feedback and contributions are highly valued!&lt;/p&gt;
&lt;/div&gt;

&lt;!-- ABOUT THE PROJECT --&gt;

## Download Now

[![Download Icon]][Download URL]

## About The Project

![Product Screen Shot](assets/transformerlab-demo-jan2025.gif)

Transformer Lab is an app that allows anyone to experiment with Large Language Models.

## Backed by Mozilla

Transformer Lab is proud to be supported by Mozilla through the &lt;a href=&quot;https://future.mozilla.org/builders/&quot;&gt;Mozilla Builders Program&lt;/a&gt;

&lt;a href=&quot;https://future.mozilla.org/builders/&quot;&gt;
    &lt;img src=&quot;https://transformerlab.ai/img/mozilla-builders-2024.png&quot; alt=&quot;Mozilla Builders Logo&quot; width=300&gt;
&lt;/a&gt;

## Features

Transformer Lab allows you to:

- 💕 **One-click Download Hundreds of Popular Models**:
  - DeepSeek, Llama3, Qwen, Phi4, Gemma, Mistral, Mixtral, Command-R, and dozens more
- ⬇ **Download any LLM from Huggingface**
- 🎶 **Finetune / Train Across Different Hardware**
  - Finetune using MLX on Apple Silicon
  - Finetune using Huggingface on GPU
- ⚖️ **RLHF and Preference Optimization**
  - DPO
  - ORPO
  - SIMPO
  - Reward Modeling
- 💻 **Work with LLMs Across Operating Systems**:
  - Windows App
  - MacOS App
  - Linux
- 💬 **Chat with Models**
  - Chat
  - Completions
  - Preset (Templated) Prompts
  - Chat History
  - Tweak generation parameters
  - Batched Inference
  - Tool Use / Function Calling (in alpha)
- 🚂 **Use Different Inference Engines**
  - MLX on Apple Silicon
  - Huggingface Transformers
  - vLLM
  - Llama CPP
- 🧑‍🎓 **Evaluate models**
- 📖 **RAG (Retreival Augmented Generation)**
  - Drag and Drop File UI
  - Works on Apple MLX, Transformers, and other engines
- 📓 **Build Datasets for Training**
  - Pull from hundreds of common datasets available on HuggingFace
  - Provide your own dataset using drag and drop
- 🔢 **Calculate Embeddings**
- 💁 **Full REST API**
- 🌩 **Run in the Cloud**
  - You can run the user interface on your desktop/laptop while the engine runs on a remote or cloud machine
  - Or you can run everything locally on a single machine
- 🔀 **Convert Models Across Platforms**
  - Convert from/to Huggingface, MLX, GGUF
- 🔌 **Plugin Support**
  - Easily pull from a library of existing plugins
  - Write your own plugins to extend functionality
- 🧑‍💻 **Embedded Monaco Code Editor**
  - Edit plugins and view what&#039;s happening behind the scenes
- 📝 **Prompt Editing**
  - Easily edit System Messages or Prompt Templates
- 📜 **Inference Logs**
  - While doing inference or RAG, view a log of the raw queries sent to the LLM

And you can do the above, all through a simple cross-platform GUI.

&lt;!-- GETTING STARTED --&gt;

## Getting Started

&lt;a href=&quot;https://transformerlab.ai/docs/download&quot;&gt;Click here&lt;/a&gt; to download Transformer Lab.

&lt;a href=&quot;https://transformerlab.ai/docs/intro&quot;&gt;Read this page&lt;/a&gt; to learn how to install and use.

### Built With

- [![Electron][Electron]][Electron-url]
- [![React][React.js]][React-url]
- [![HuggingFace][HuggingFace]][HuggingFace-url]

## Developers

### Building from Scratch

To build the app yourself, pull this repo, and follow the steps below:

(Please note that the current build doesn&#039;t work on Node v23 but it works on v22)

```bash
npm install
```

```bash
npm start
```

## Packaging for Production

To package apps for the local platform:

```bash
npm run package
```

&lt;!-- LICENSE --&gt;

## License

Distributed under the AGPL V3 License. See `LICENSE.txt` for more information.

## Reference

If you found Transformer Lab useful in your research or applications, please cite using the following BibTeX:

```
@software{transformerlab,
  author = {Asaria, Ali},
  title = {Transformer Lab: Experiment with Large Language Models},
  month = December,
  year = 2023,
  url = {https://github.com/transformerlab/transformerlab-app}
}
```

&lt;!-- CONTACT --&gt;

## Contact

- [@aliasaria](https://twitter.com/aliasaria) - Ali Asasria
- [@dadmobile](https://github.com/dadmobile) - Tony Salomone

&lt;!-- MARKDOWN LINKS &amp; IMAGES --&gt;

[product-screenshot]: https://transformerlab.ai/assets/images/screenshot01-53ecb8c52338db3c9246cf2ebbbdc40d.png
[React.js]: https://img.shields.io/badge/React-20232A?style=for-the-badge&amp;logo=react&amp;logoColor=61DAFB
[React-url]: https://reactjs.org/
[Electron]: https://img.shields.io/badge/Electron-20232A?style=for-the-badge&amp;logo=electron&amp;logoColor=61DAFB
[Electron-url]: https://www.electronjs.org/
[HuggingFace]: https://img.shields.io/badge/🤗_HuggingFace-20232A?style=for-the-badge
[HuggingFace-url]: https://huggingface.co/
[Download Icon]: https://img.shields.io/badge/Download-EF2D5E?style=for-the-badge&amp;logoColor=white&amp;logo=DocuSign
[Download URL]: https://transformerlab.ai/docs/download
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[RSSNext/Folo]]></title>
            <link>https://github.com/RSSNext/Folo</link>
            <guid>https://github.com/RSSNext/Folo</guid>
            <pubDate>Wed, 09 Jul 2025 00:04:55 GMT</pubDate>
            <description><![CDATA[🧡 Follow everything in one place]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/RSSNext/Folo">RSSNext/Folo</a></h1>
            <p>🧡 Follow everything in one place</p>
            <p>Language: TypeScript</p>
            <p>Stars: 27,962</p>
            <p>Forks: 1,235</p>
            <p>Stars today: 185 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/RSSNext/Folo&quot;&gt;
    &lt;img src=&quot;https://github.com/RSSNext/follow/assets/41265413/c6c02ad5-cddc-46f5-8420-a47afe1c82fe&quot; alt=&quot;Logo&quot; width=&quot;80&quot; height=&quot;80&quot;&gt;
  &lt;/a&gt;

  &lt;h3&gt;Folo&lt;/h3&gt;
  &lt;p&gt;
    &lt;img src=&quot;https://github.com/user-attachments/assets/cbe924f2-d8b0-48b0-814e-7c06ccb1911c&quot; height=&quot;60&quot; /&gt;
    &amp;nbsp;&amp;nbsp;&amp;nbsp;
    &lt;img src=&quot;https://github.com/user-attachments/assets/6997a236-3df3-49d5-98a4-514f6d1a02c4&quot; height=&quot;60&quot; /&gt;
    &lt;br /&gt;
    &lt;br /&gt;
    &lt;a href=&quot;https://github.com/RSSNext/Folo/stargazers&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/RSSNext/Follow?color=ffcb47&amp;labelColor=black&amp;style=flat-square&amp;logo=github&amp;label=Stars&quot; /&gt;&lt;/a&gt;
    &lt;a href=&quot;https://github.com/RSSNext/Folo/graphs/contributors&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/contributors/RSSNext/Folo?style=flat-square&amp;logo=github&amp;label=Contributors&amp;labelColor=black&quot; /&gt;&lt;/a&gt;
    &lt;a href=&quot;https://status.follow.is/&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://status.follow.is/api/badge/18/uptime?color=%2344CC10&amp;labelColor=black&amp;style=flat-square&quot;/&gt;&lt;/a&gt;
    &lt;a href=&quot;https://github.com/RSSNext/Folo/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/RSSNext/Folo/total?color=369eff&amp;labelColor=black&amp;logo=github&amp;style=flat-square&amp;label=Downloads&quot; /&gt;&lt;/a&gt;
    &lt;a href=&quot;https://x.com/intent/follow?screen_name=follow_app_&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Follow-blue?color=1d9bf0&amp;logo=x&amp;labelColor=black&amp;style=flat-square&quot; /&gt;&lt;/a&gt;
    &lt;a href=&quot;https://discord.gg/followapp&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fdiscord.com%2Fapi%2Finvites%2Ffollowapp%3Fwith_counts%3Dtrue&amp;query=approximate_member_count&amp;color=5865F2&amp;label=Discord&amp;labelColor=black&amp;logo=discord&amp;logoColor=white&amp;style=flat-square&quot;/&gt;&lt;/a&gt;
    &lt;br /&gt;
    &lt;a href=&quot;https://github.com/RSSNext/Folo/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/package-json/v/RSSNext/Folo?filename=%2Fapps%2Fmobile%2Fpackage.json&amp;style=flat-square&amp;logo=data%3Aimage%2Fsvg%2Bxml%3Bbase64%2CPHN2ZyB3aWR0aD0iNTUiIGhlaWdodD0iNTUiIHZpZXdCb3g9IjAgMCA1NSA1NSIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KPHBhdGggZD0iTTQxLjc5NDQgMTBIMTguNjc4NkMxNS44ODMzIDEwIDEzLjYxNzIgMTIuMTk2NSAxMy42MTcyIDE0LjkwNTlDMTMuNjE3MiAxNy42MTU0IDE1Ljg4MzMgMTkuODExOSAxOC42Nzg2IDE5LjgxMTlINDEuNzk0NEM0NC41ODk5IDE5LjgxMTkgNDYuODU1OSAxNy42MTU0IDQ2Ljg1NTkgMTQuOTA1OUM0Ni44NTU5IDEyLjE5NjUgNDQuNTg5OSAxMCA0MS43OTQ0IDEwWiIgZmlsbD0id2hpdGUiLz4KPHBhdGggZD0iTTI5LjQ2ODMgMjIuNzU1OUgxNC4wNjE1QzExLjI2NjEgMjIuNzU1OSA5IDI0Ljk1MjMgOSAyNy42NjE4QzkgMzAuMzcxMyAxMS4yNjYxIDMyLjU2NzcgMTQuMDYxNSAzMi41Njc3SDI5LjQ2ODNDMzIuMjYzNyAzMi41Njc3IDM0LjUyOTggMzAuMzcxMyAzNC41Mjk4IDI3LjY2MThDMzQuNTI5OCAyNC45NTIzIDMyLjI2MzcgMjIuNzU1OSAyOS40NjgzIDIyLjc1NTlaIiBmaWxsPSJ3aGl0ZSIvPgo8cGF0aCBkPSJNMzAuOTU4OSA0MC40MjcyQzMwLjk1ODkgMzcuNzE3OSAyOC42OTI4IDM1LjUyMTUgMjUuODk3NCAzNS41MjE1QzIzLjEwMjEgMzUuNTIxNSAyMC44MzU5IDM3LjcxNzkgMjAuODM1OSA0MC40MjcyQzIwLjgzNTkgNDMuMTM3MSAyMy4xMDIxIDQ1LjMzMzIgMjUuODk3NCA0NS4zMzMyQzI4LjY5MjggNDUuMzMzMiAzMC45NTg5IDQzLjEzNzEgMzAuOTU4OSA0MC40MjcyWiIgZmlsbD0id2hpdGUiLz4KPC9zdmc%2BCg%3D%3D&amp;label=Mobile&amp;labelColor=black&amp;color=FF5E01&quot; /&gt;&lt;/a&gt;
    &lt;a href=&quot;https://apps.apple.com/us/app/folo-follow-everything/id6739802604&quot;&gt;&lt;img src=&quot;https://img.shields.io/itunes/v/6739802604?style=flat-square&amp;logo=apple&amp;label=App%20Store&amp;color=FF5C00&amp;labelColor=black&quot; /&gt;&lt;/a&gt;
    &lt;a href=&quot;https://play.google.com/store/apps/details?id=is.follow&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/package-json/v/RSSNext/Folo?filename=%2Fapps%2Fmobile%2Fpackage.json&amp;style=flat-square&amp;logo=google-play&amp;label=Google%20Play&amp;labelColor=black&amp;color=FF5E01&quot;/&gt;&lt;/a&gt;
    &lt;a href=&quot;https://github.com/RSSNext/Folo/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/package-json/v/RSSNext/Folo?filename=%2Fapps%2Fdesktop%2Fpackage.json&amp;style=flat-square&amp;logo=data%3Aimage%2Fsvg%2Bxml%3Bbase64%2CPHN2ZyB3aWR0aD0iNTUiIGhlaWdodD0iNTUiIHZpZXdCb3g9IjAgMCA1NSA1NSIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KPHBhdGggZD0iTTQxLjc5NDQgMTBIMTguNjc4NkMxNS44ODMzIDEwIDEzLjYxNzIgMTIuMTk2NSAxMy42MTcyIDE0LjkwNTlDMTMuNjE3MiAxNy42MTU0IDE1Ljg4MzMgMTkuODExOSAxOC42Nzg2IDE5LjgxMTlINDEuNzk0NEM0NC41ODk5IDE5LjgxMTkgNDYuODU1OSAxNy42MTU0IDQ2Ljg1NTkgMTQuOTA1OUM0Ni44NTU5IDEyLjE5NjUgNDQuNTg5OSAxMCA0MS43OTQ0IDEwWiIgZmlsbD0id2hpdGUiLz4KPHBhdGggZD0iTTI5LjQ2ODMgMjIuNzU1OUgxNC4wNjE1QzExLjI2NjEgMjIuNzU1OSA5IDI0Ljk1MjMgOSAyNy42NjE4QzkgMzAuMzcxMyAxMS4yNjYxIDMyLjU2NzcgMTQuMDYxNSAzMi41Njc3SDI5LjQ2ODNDMzIuMjYzNyAzMi41Njc3IDM0LjUyOTggMzAuMzcxMyAzNC41Mjk4IDI3LjY2MThDMzQuNTI5OCAyNC45NTIzIDMyLjI2MzcgMjIuNzU1OSAyOS40NjgzIDIyLjc1NTlaIiBmaWxsPSJ3aGl0ZSIvPgo8cGF0aCBkPSJNMzAuOTU4OSA0MC40MjcyQzMwLjk1ODkgMzcuNzE3OSAyOC42OTI4IDM1LjUyMTUgMjUuODk3NCAzNS41MjE1QzIzLjEwMjEgMzUuNTIxNSAyMC44MzU5IDM3LjcxNzkgMjAuODM1OSA0MC40MjcyQzIwLjgzNTkgNDMuMTM3MSAyMy4xMDIxIDQ1LjMzMzIgMjUuODk3NCA0NS4zMzMyQzI4LjY5MjggNDUuMzMzMiAzMC45NTg5IDQzLjEzNzEgMzAuOTU4OSA0MC40MjcyWiIgZmlsbD0id2hpdGUiLz4KPC9zdmc%2BCg%3D%3D&amp;label=Desktop&amp;labelColor=black&amp;color=FF5E01&quot; /&gt;&lt;/a&gt;
    &lt;a href=&quot;https://apps.apple.com/us/app/folo-follow-everything/id6739802604&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Ffolo-mac-app-store-version.rss3.workers.dev%2F&amp;query=version&amp;prefix=v&amp;style=flat-square&amp;logo=apple&amp;label=Mac%20App%20Store&amp;labelColor=black&amp;color=FF5E01&amp;cacheSeconds=3600&quot; /&gt;&lt;/a&gt;
    &lt;a href=&quot;https://apps.microsoft.com/detail/9nvfzpv0v0ht?mode=direct&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Ffolo-microsoft-store-version.rss3.workers.dev%2F&amp;query=version&amp;style=flat-square&amp;logo=data%3Aimage%2Fsvg%2Bxml%3Bbase64%2CPHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyNCIgaGVpZ2h0PSIyNCIgdmlld0JveD0iMCAwIDI0IDI0IiBmaWxsPSJub25lIj48cGF0aCBmaWxsPSIjZmZmIiBkPSJNMyAzaDguNTN2OC41M0gzek0xMi40NjkgM2g4LjUzdjguNTNoLTguNTN6TTMgMTIuNDdoOC41M1YyMUgzek0xMi40NjkgMTIuNDdoOC41M1YyMWgtOC41M3oiLz48L3N2Zz4%3D&amp;logoColor=white&amp;label=Microsoft%20Store&amp;labelColor=black&amp;color=FF5E01&amp;cacheSeconds=3600&amp;prefix=v&quot; /&gt;&lt;/a&gt;
    &lt;br /&gt;
    &lt;br /&gt;
    &lt;!-- &lt;a href=&quot;https://github.com/RSSNext/Folo&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/59b957fb-59ed-4ef0-994e-f6a402a6fe2b&quot; alt=&quot;GitHub Trending&quot; height=&quot;55&quot;/&gt;&lt;/a&gt;
    &lt;br /&gt;
    &lt;br /&gt; --&gt;
    &lt;a href=&quot;https://apps.apple.com/us/app/folo-follow-everything/id6739802604&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/83168d47-b9b1-4f28-abec-4e37075c7f1b&quot; alt=&quot;App Store&quot; width=&quot;52%&quot;/&gt;&lt;/a&gt;
    &lt;a href=&quot;https://apps.apple.com/us/app/folo-follow-everything/id6739802604&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/7b4f27f1-c345-400f-a307-9c61c43263ac&quot; alt=&quot;GitHub Trending&quot; width=&quot;46%&quot;/&gt;&lt;/a&gt;
    &lt;br /&gt;
    &lt;br /&gt;
  &lt;/p&gt;
&lt;/div&gt;

As they say, your thoughts are what you read—and we’ve been consuming noisy feeds for too long! Folo organizes content into one timeline, keeping you updated on what matters, noise-free. Share lists, explore collections, and enjoy distraction-free browsing.

## 👋🏻 Getting Started &amp; Join Our Community

Whether for users or professional developers, Folo will be your open information playground. Please be aware that Folo is currently under active development, and feedback is welcome for any [issue](https://github.com/RSSNext/Folo/issues) encountered.

Feel free to try it using the following methods:

| Operating System | Source                                                                                                                                                                                                                                                                                                                                                                                                                                |
| :--------------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |
| Any              | &lt;a href=&quot;https://app.follow.is&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/51ef7800-b683-4493-83e8-eb4752366997&quot; alt=&quot;Browser&quot; height=&quot;55&quot;/&gt;&lt;/a&gt;                                                                                                                                                                                                                                                            |
| iOS              | &lt;a href=&quot;https://apps.apple.com/us/app/folo-follow-everything/id6739802604&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/a94d8698-2a11-4f43-9b0a-b756b17b61f7&quot; alt=&quot;App Store&quot; height=&quot;55&quot;/&gt;&lt;/a&gt;                                                                                                                                                                                                              |
| Android          | &lt;a href=&quot;https://play.google.com/store/apps/details?id=is.follow&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/0d178e0b-3ace-4f75-bbde-ab3c0a416ce8&quot; alt=&quot;Google Play&quot; height=&quot;55&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/RSSNext/Folo/releases/latest&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/cf61e197-d756-4606-a8ad-fb591f79fdfc&quot; alt=&quot;App Store&quot; height=&quot;55&quot;/&gt;&lt;/a&gt;               |
| macOS            | &lt;a href=&quot;https://apps.apple.com/us/app/folo-follow-everything/id6739802604&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/0d47f902-7fa3-494e-ad28-9ab11af5e6d4&quot; alt=&quot;Microsoft Store&quot; height=&quot;55&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/RSSNext/Folo/releases/latest&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/cf61e197-d756-4606-a8ad-fb591f79fdfc&quot; alt=&quot;App Store&quot; height=&quot;55&quot;/&gt;&lt;/a&gt; |
| Windows          | &lt;a href=&quot;https://apps.microsoft.com/detail/9nvfzpv0v0ht?mode=direct&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/b3112bab-9dd0-4893-9488-890dcb368f70&quot; alt=&quot;Microsoft Store&quot; height=&quot;55&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/RSSNext/Folo/releases/latest&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/cf61e197-d756-4606-a8ad-fb591f79fdfc&quot; alt=&quot;App Store&quot; height=&quot;55&quot;/&gt;&lt;/a&gt;        |
| Linux            | &lt;a href=&quot;https://github.com/RSSNext/Folo/releases/latest&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/cf61e197-d756-4606-a8ad-fb591f79fdfc&quot; alt=&quot;App Store&quot; height=&quot;55&quot;/&gt;&lt;/a&gt;                                                                                                                                                                                                                                |

You can also install using the following methods maintained by our community:

- If you are using Arch Linux, you can install package [folo-appimage](https://aur.archlinux.org/packages/folo-appimage) that maintained by [timochan](https://github.com/ttimochan) and [grtsinry43](https://github.com/grtsinry43).
- If you are using Nix, you can install package [follow](https://github.com/NixOS/nixpkgs/blob/master/pkgs/by-name/fo/follow/package.nix) that maintained by [iosmanthus](https://github.com/iosmanthus).
- If you are using macOS with [Homebrew](https://brew.sh), you can install cask [folo](https://formulae.brew.sh/cask/folo) that maintained by [realSunyz](https://github.com/realSunyz).
- If you are using Windows with [Scoop](https://scoop.sh), you can install manifest [folo](https://github.com/cscnk52/cetacea/blob/master/bucket/folo.json) that maintained by [cscnk52](https://github.com/cscnk52).

| [![Discord](https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fdiscord.com%2Fapi%2Finvites%2Ffollowapp%3Fwith_counts%3Dtrue&amp;query=approximate_member_count&amp;color=5865F2&amp;label=Discord&amp;labelColor=black&amp;logo=discord&amp;logoColor=white&amp;style=flat-square)](https://discord.gg/followapp) | Join our Discord server to connect with developers, request features, and receive support. |
| :--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | :----------------------------------------------------------------------------------------- |
| [![](https://img.shields.io/badge/any_text-Follow-blue?color=2CA5E0&amp;label=_&amp;logo=x&amp;labelColor=black&amp;style=flat-square)](https://x.com/intent/follow?screen_name=follow_app_)                                                                                                                   | Follow us on X/Twitter for product updates and to join in on reward activities.            |

&gt; \[!IMPORTANT]
&gt;
&gt; **Star Us**, You will receive all release notifications from GitHub without any delay \~

![Image](https://github.com/user-attachments/assets/a08f9437-b24c-4388-8f01-2826e09eeaf2)

&lt;a href=&quot;https://next.ossinsight.io/widgets/official/compose-last-28-days-stats?repo_id=783512367&quot; target=&quot;_blank&quot; style=&quot;display: block&quot; align=&quot;center&quot;&gt;
  &lt;picture&gt;
    &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://next.ossinsight.io/widgets/official/compose-last-28-days-stats/thumbnail.png?repo_id=783512367&amp;image_size=auto&amp;color_scheme=dark&quot; width=&quot;655&quot; height=&quot;auto&quot;&gt;
    &lt;img alt=&quot;Performance Stats of RSSNext/Folo - Last 28 days&quot; src=&quot;https://next.ossinsight.io/widgets/official/compose-last-28-days-stats/thumbnail.png?repo_id=783512367&amp;image_size=auto&amp;color_scheme=light&quot; width=&quot;655&quot; height=&quot;auto&quot;&gt;
  &lt;/picture&gt;
&lt;/a&gt;

## ✨ Features

### Customized Information Hub

Subscribe to a vast range of feeds and curated lists. Curate your favorites and keep track of what matters most to you.

![](https://github.com/user-attachments/assets/11dc7d21-f5d8-4e41-9269-24fc352aa02b)

### AI At Your Fingertips

A smarter and more efficient browsing with AI-powered features like translation, summary, and more.

![](https://github.com/user-attachments/assets/37cf4f2f-4c5e-4775-86e8-2fa1a1b2ecf5)

### Dynamic Content Support

Because we know content is more than just text. From articles to videos, images to audio — Folo gets it all covered.

![](https://github.com/user-attachments/assets/d1379fd6-8767-476e-b0dc-d61753715e26)

### $POWER An Ownership Economy

Tip creators across instantly with $POWER, support content you love, and unlock value in your own work. Your content, your power.

![](https://github.com/user-attachments/assets/23bbcd63-45ca-40c8-83ef-96bd1100b701)

### More Than Just An App

This isn’t just another app. Folo is a community — introducing a new era of openness and community-driven experience.

![](https://github.com/user-attachments/assets/62004a04-eaea-4f5d-bfbf-4e68b6b90286)

## 🤝 Contributing

You are welcome to join the open source community to build together, please check our [Contributing Guide](./CONTRIBUTING.md) for more details.

## 🔏 Code signing policy

Folo for Windows uses free code signing provided by [SignPath.io](https://about.signpath.io/), certificate by [SignPath Foundation](https://signpath.org/).

Folo for macOS and iOS are signed and notarized by [Apple Developer Program](https://developer.apple.com/programs/).

All released files are verified with [GitHub artifact attestations](https://github.com/RSSNext/Folo/attestations) to ensure their provenance and integrity.

## 📝 License

Folo is licensed under the GNU General Public License version 3 with the addition of the following special exception:

All content in the `icons/mgc` directory is copyrighted by https://mgc.mingcute.com/ and cannot be redistributed.

All content in the `lottie` directory is distributed under the [Lottie Simple License](https://lottiefiles.com/page/license).
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[dataelement/bisheng]]></title>
            <link>https://github.com/dataelement/bisheng</link>
            <guid>https://github.com/dataelement/bisheng</guid>
            <pubDate>Wed, 09 Jul 2025 00:04:54 GMT</pubDate>
            <description><![CDATA[BISHENG is an open LLM devops platform for next generation Enterprise AI applications. Powerful and comprehensive features include: GenAI workflow, RAG, Agent, Unified model management, Evaluation, SFT, Dataset Management, Enterprise-level System Management, Observability and more.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/dataelement/bisheng">dataelement/bisheng</a></h1>
            <p>BISHENG is an open LLM devops platform for next generation Enterprise AI applications. Powerful and comprehensive features include: GenAI workflow, RAG, Agent, Unified model management, Evaluation, SFT, Dataset Management, Enterprise-level System Management, Observability and more.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 9,060</p>
            <p>Forks: 1,483</p>
            <p>Stars today: 15 stars today</p>
            <h2>README</h2><pre>**Proudly made by Chinese，May we, like the creators of Deepseek and Black Myth: Wukong, bring more wonder and greatness to the world.**

&gt; 源自中国匠心，希望我们能像 [Deepseek]、[黑神话：悟空] 团队一样，给世界带来更多美好。

&lt;img src=&quot;https://dataelem.com/bs/face.png&quot; alt=&quot;Bisheng banner&quot;&gt;

&lt;p align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://dataelem.feishu.cn/wiki/ZxW6wZyAJicX4WkG0NqcWsbynde&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/docs-Wiki-brightgreen&quot;&gt;&lt;/a&gt;
    &lt;img src=&quot;https://img.shields.io/github/license/dataelement/bisheng&quot; alt=&quot;license&quot;/&gt;
    &lt;a href=&quot;&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/last-commit/dataelement/bisheng&quot;&gt;&lt;/a&gt;
    &lt;a href=&quot;https://star-history.com/#dataelement/bisheng&amp;Timeline&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/dataelement/bisheng?color=yellow&quot;&gt;&lt;/a&gt; 
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;./README_CN.md&quot;&gt;简体中文&lt;/a&gt; |
  &lt;a href=&quot;./README.md&quot;&gt;English&lt;/a&gt; |
  &lt;a href=&quot;./README_JPN.md&quot;&gt;日本語&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://trendshift.io/repositories/717&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://trendshift.io/api/badge/repositories/717&quot; alt=&quot;dataelement%2Fbisheng | Trendshift&quot; style=&quot;width: 250px; height: 55px;&quot; width=&quot;250&quot; height=&quot;55&quot;/&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;div class=&quot;column&quot; align=&quot;middle&quot;&gt;
  &lt;!-- &lt;a href=&quot;https://bisheng.slack.com/join/shared_invite/&quot;&gt; --&gt;
    &lt;!-- &lt;img src=&quot;https://img.shields.io/badge/Join-Slack-orange&quot; alt=&quot;join-slack&quot;/&gt; --&gt;
  &lt;/a&gt;
  &lt;!-- &lt;img src=&quot;https://img.shields.io/github/license/bisheng-io/bisheng&quot; alt=&quot;license&quot;/&gt; --&gt;
  &lt;!-- &lt;img src=&quot;https://img.shields.io/docker/pulls/bisheng-io/bisheng&quot; alt=&quot;docker-pull-count&quot; /&gt; --&gt;
&lt;/div&gt;


BISHENG is an open LLM application devops platform, focusing on enterprise scenarios. It has been used by a large number of industry leading organizations and Fortune 500 companies.

&quot;Bi Sheng&quot; was the inventor of movable type printing, which played a vital role in promoting the transmission of human knowledge. We hope that BISHENG can also provide strong support for the widespread implementation of intelligent applications. Everyone is welcome to participate.


## Features 
1. Unique [BISHENG Workflow](https://dataelem.feishu.cn/wiki/R7HZwH5ZGiJUDrkHZXicA9pInif)
   - 🧩 **Independent and comprehensive application orchestration framework**: Enables the execution of various tasks within a single framework (while similar products rely on bot invocation or separate chatflow and workflow modules for different tasks).
   - 🔄 **Human in the loop**: Allows users to intervene and provide feedback during the execution of workflows (including multi-turn conversations), whereas similar products can only execute workflows from start to finish without intervention.
   - 💥 **Powerful**: Supports loops, parallelism, batch processing, conditional logic, and free combination of all logic components. It also handles complex scenarios such as multi-type input/output, report generation, content review, and more.
   - 🖐️ **User-friendly and intuitive**: Operations like loops, parallelism, and batch processing, which require specialized components in similar products, can be easily visualized in BISHENG as a &quot;flowchart&quot; (drawing a loop forms a loop, aligning elements creates parallelism, and selecting multiple items enables batch processing).
   &lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;https://dataelem.com/bs/bisheng_workflow.png&quot; alt=&quot;sence0&quot;&gt;&lt;/p&gt;

2. &lt;b&gt;Designed for Enterprise Applications&lt;/b&gt;: Document review, fixed-layout report generation, multi-agent collaboration, policy update comparison, support ticket assistance, customer service assistance, meeting minutes generation, resume screening, call record analysis, unstructured data governance, knowledge mining, data analysis, and more. 

​	The platform supports the construction of &lt;b&gt;highly complex enterprise application scenarios&lt;/b&gt; and offers &lt;b&gt;deep optimization&lt;/b&gt; 	with hundreds of components and thousands of parameters.
&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;https://dataelem.com/bs/chat.png&quot; alt=&quot;sence1&quot;&gt;&lt;/p&gt;

3. &lt;b&gt;Enterprise-grade&lt;/b&gt; features are the fundamental guarantee for application implementation: security review, RBAC, user group management, traffic control by group, SSO/LDAP, vulnerability scanning and patching, high availability deployment solutions, monitoring, statistics, and more.
&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;https://dataelem.com/bs/pro.png&quot; alt=&quot;sence2&quot;&gt;&lt;/p&gt;

4. &lt;b&gt;High-Precision Document Parsing&lt;/b&gt;: Our high-precision document parsing model is trained on a vast amount of high-quality data accumulated over past 5 years. It includes high-precision printed text, handwritten text, and rare character recognition models, table recognition models, layout analysis models, and seal models., table recognition models, layout analysis models, and seal models. You can deploy it privately for free.
&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;https://dataelem.com/bs/ocr.png&quot; alt=&quot;sence3&quot;&gt;&lt;/p&gt;

5. A community for sharing best practices across various enterprise scenarios: An open repository of application cases and best practices.
## Quick start 

Please ensure the following conditions are met before installing BISHENG:
- CPU &gt;= 4 Virtual Cores
- RAM &gt;= 16 GB
- Docker 19.03.9+
- Docker Compose 1.25.1+
&gt; Recommended hardware condition: 18 virtual cores, 48G. In addition to installing BISHENG, we will also install the following third-party components by default: ES, Milvus, and Onlyoffice.

Download BISHENG
```bash
git clone https://github.com/dataelement/bisheng.git
# Enter the installation directory
cd bisheng/docker

# If the system does not have the git command, you can download the BISHENG code as a zip file.
wget https://github.com/dataelement/bisheng/archive/refs/heads/main.zip
# Unzip and enter the installation directory
unzip main.zip &amp;&amp; cd bisheng-main/docker
```
Start BISHENG
```bash
docker compose -f docker-compose.yml -p bisheng up -d
```
After the startup is complete, access http://IP:3001 in the browser. The login page will appear, proceed with user registration. 

By default, the first registered user will become the system admin. 

For more installation and deployment issues, refer to:：[Self-hosting](https://dataelem.feishu.cn/wiki/BSCcwKd4Yiot3IkOEC8cxGW7nPc)

## Acknowledgement 
This repo benefits from [langchain](https://github.com/langchain-ai/langchain) [langflow](https://github.com/logspace-ai/langflow) [unstructured](https://github.com/Unstructured-IO/unstructured) and [LLaMA-Factory](https://github.com/hiyouga/LLaMA-Factory) . Thanks for their wonderful works.

&lt;b&gt;Thank you to our contributors：&lt;/b&gt;

&lt;a href=&quot;https://github.com/dataelement/bisheng/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=dataelement/bisheng&quot; /&gt;
&lt;/a&gt;



## Community &amp; contact 
Welcome to join our discussion group

&lt;img src=&quot;https://www.dataelem.com/nstatic/qrcode.png&quot; alt=&quot;Wechat QR Code&quot;&gt;


&lt;!--
## Star History

[![Star History Chart](https://api.star-history.com/svg?repos=dataelement/bisheng&amp;type=Date)](https://star-history.com/#dataelement/bisheng&amp;Date)
--&gt;
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[elizaOS/eliza]]></title>
            <link>https://github.com/elizaOS/eliza</link>
            <guid>https://github.com/elizaOS/eliza</guid>
            <pubDate>Wed, 09 Jul 2025 00:04:53 GMT</pubDate>
            <description><![CDATA[Autonomous agents for everyone]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/elizaOS/eliza">elizaOS/eliza</a></h1>
            <p>Autonomous agents for everyone</p>
            <p>Language: TypeScript</p>
            <p>Stars: 16,299</p>
            <p>Forks: 5,265</p>
            <p>Stars today: 67 stars today</p>
            <h2>README</h2><pre># Eliza

A framework for multi-agent development and deployment

## ✨ Features

- 🛠️ Full-featured Discord, Telegram, and Farcaster connectors (and many more!)
- 🔗 Support for every model (Llama, Grok, OpenAI, Anthropic, Gemini, etc.)
- 🎨 Modern and professional UI with a redesigned dashboard for managing agents and groups.
- 💬 Robust real-time communication with enhanced channel and message handling.
- 👥 Multi-agent and group support with intuitive management.
- 📚 Easily ingest and interact with your documents.
- 💾 Retrievable memory and document store.
- 🚀 Highly extensible - create your own actions and clients.
- 📦 Just works!

## 🎯 Use Cases

- 🤖 Chatbots
- 🕵️ Autonomous Agents
- 📈 Business Process Handling
- 🎮 Video Game NPCs
- 🧠 Trading

## 🚀 Quick Start

### Prerequisites

- [Node.js](https://nodejs.org/) (v23 or higher recommended)
- [bun](https://bun.sh/docs/installation)

&gt; **Note for Windows Users:** [WSL 2](https://learn.microsoft.com/en-us/windows/wsl/install-manual) is required.

### Use the CLI (Recommended)

The ElizaOS CLI provides the fastest and most reliable way to create, configure, and run agents. It handles all the complex setup automatically.

#### 1. Install the CLI

```bash
# Install the ElizaOS CLI globally
bun install -g @elizaos/cli

# Verify installation
elizaos --version

# Get help with available commands
elizaos --help
```

#### 2. Create Your First Project

```bash
# Create a new project with interactive setup
elizaos create my-agent

# Or create with specific options (skips prompts)
elizaos create my-agent --yes --type project
```

**Recommended Options for Beginners:**

- **Database**: `pglite` (lightweight, no setup required)
- **Model Provider**: `openai` (most reliable and well-tested)
- **Project Type**: `project` (full ElizaOS application with runtime and agents)

#### 3. Configure Your Agent

```bash
cd my-agent

# Edit your agent&#039;s character file
elizaos env edit-local

# Or manually edit the .env file with your preferred editor
nano .env
```

**Essential Environment Variables:**

```bash
# Required: Your model API key
OPENAI_API_KEY=your_api_key_here

# Optional: Logging level (info, debug, error)
LOG_LEVEL=info

# Optional: Discord bot token (if using Discord)
DISCORD_APPLICATION_ID=your_discord_app_id
DISCORD_API_TOKEN=your_discord_bot_token
```

#### 4. Start Your Agent

```bash
# Build and start your agent
elizaos start

# Or start with debug logging for development
LOG_LEVEL=debug elizaos start
```

After starting, your agent will be available at:

- **Web Interface**: http://localhost:3000
- **API Endpoint**: http://localhost:3000/api

#### 5. Development Workflow

```bash
# Make changes to your agent code
# Then rebuild and restart
bun run build
elizaos start

# Run tests to verify your changes
elizaos test
```

#### Advanced CLI Commands

```bash
# Create specific components
elizaos create my-plugin --type plugin    # Create a new plugin
elizaos create my-agent --type agent      # Create a new agent character
elizaos create my-tee --type tee          # Create a TEE project

# Environment management
elizaos env list            # Show all environment variables
elizaos env reset           # Reset to default .env.example

# Testing options
elizaos test --name &quot;my-test&quot;    # Run specific tests
elizaos test e2e                 # Run end-to-end tests only
elizaos test component           # Run component tests only

# Agent management
elizaos agent list                      # List all available agents
elizaos agent start --name &quot;Agent&quot;     # Start a specific agent by name
elizaos agent stop --name &quot;Agent&quot;      # Stop a running agent
elizaos agent get --name &quot;Agent&quot;       # Get agent details
elizaos agent set --name &quot;Agent&quot; --file config.json  # Update agent configuration
```

#### Debugging and Logging

ElizaOS uses comprehensive logging to help you understand what your agent is doing:

```bash
# Different log levels
LOG_LEVEL=error elizaos start    # Only errors
LOG_LEVEL=info elizaos start     # General information (default)
LOG_LEVEL=debug elizaos start    # Detailed debugging info
LOG_LEVEL=verbose elizaos start  # Everything (very detailed)

# Advanced debugging (combine with LOG_LEVEL=debug)
ELIZA_DEBUG=true elizaos start          # Enable ElizaOS debug output
NODE_ENV=development elizaos start      # Development mode with extra logging
```

**Pro Tips:**

- Use `elizaos --help` to see all available commands and global options
- Use `elizaos &lt;command&gt; --help` for detailed help on any specific command
- Use `LOG_LEVEL=debug` during development to see detailed execution flow
- Check the web interface at http://localhost:3000 for real-time agent status
- Use `elizaos test` frequently to catch issues early
- Keep your `.env` file secure and never commit it to version control

#### Available Commands Reference

**All CLI Commands:**

```bash
elizaos create     # Create new projects, plugins, agents, or TEE projects
elizaos start      # Start the agent server with character profiles
elizaos agent      # Manage agents (list, start, stop, get, set)
elizaos test       # Run tests (component, e2e, or all)
elizaos env        # Manage environment variables and configuration
elizaos dev        # Start in development mode with auto-rebuild
elizaos update     # Update CLI and project dependencies
# To stop agents, use Ctrl+C in the terminal where elizaos start is running
elizaos publish    # Publish plugins to registry
elizaos plugins    # Manage and discover plugins
elizaos monorepo   # Monorepo development utilities
elizaos tee        # Trusted Execution Environment commands

# Get help for any specific command
elizaos &lt;command&gt; --help    # e.g., elizaos create --help, elizaos agent --help
```

### Manually Start Eliza (Only recommended if you know what you are doing)

#### Prerequisites

- **Node.js** (v18+ recommended)
- **bun** (for CLI and dependencies)
- **git** (for project/plugin tests)

#### Checkout the latest release

```bash
# Clone the repository
git clone https://github.com/elizaos/eliza.git

# This project iterates fast, so we recommend checking out the latest release
git checkout $(git describe --tags --abbrev=0)
# If the above doesn&#039;t checkout the latest release, this should work:
# git checkout $(git describe --tags `git rev-list --tags --max-count=1`)
```

#### Edit the .env file

Copy .env.example to .env and fill in the appropriate values.

```
cp .env.example .env
```

Note: .env is optional. If you&#039;re planning to run multiple distinct agents, you can pass secrets through the character JSON

#### Start Eliza

Important! We now use Bun. If you are using npm, you will need to install Bun:
https://bun.sh/docs/installation

```bash
bun install
bun run build
bun start
```

### Interact via Browser

Once Eliza is running, access the modern web interface at http://localhost:3000. It has been professionally redesigned and features:

- A welcoming dashboard with a gradient hero section and clear calls-to-action for creating agents and groups.
- Visually enhanced cards for managing agents and groups, including status indicators and member counts.
- Real-time chat capabilities with your agents.
- Character configuration options.
- Plugin management.
- Comprehensive memory and conversation history.
- Responsive design for an optimal experience on various screen sizes.

## Citation

We now have a [paper](https://arxiv.org/pdf/2501.06781) you can cite for the Eliza OS:

```bibtex
@article{walters2025eliza,
  title={Eliza: A Web3 friendly AI Agent Operating System},
  author={Walters, Shaw and Gao, Sam and Nerd, Shakker and Da, Feng and Williams, Warren and Meng, Ting-Chien and Han, Hunter and He, Frank and Zhang, Allen and Wu, Ming and others},
  journal={arXiv preprint arXiv:2501.06781},
  year={2025}
}
```

## Contributors

&lt;a href=&quot;https://github.com/elizaos/eliza/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=elizaos/eliza&quot; alt=&quot;Eliza project contributors&quot; /&gt;
&lt;/a&gt;

## Star History

[![Star History Chart](https://api.star-history.com/svg?repos=elizaos/eliza&amp;type=Date)](https://star-history.com/#elizaos/eliza&amp;Date)

## Git Hooks

This project uses git hooks to ensure code quality:

- **pre-commit**: Automatically formats staged files using Prettier before committing

To run the pre-commit hook manually:

```bash
bun run pre-commit
```

## 📂 Repository Structure

Eliza is organized as a monorepo using Bun, Lerna, and Turbo for efficient package management and build orchestration. Here&#039;s a detailed overview of the project structure:

- **`/` (Root)**:

  - `.github/`: GitHub Actions workflows for CI/CD pipelines and issue templates
  - `.husky/`: Git hooks configuration, including pre-commit formatting
  - `.devcontainer/`: Development container configurations for consistent environments
  - `packages/`: Core packages and modules (detailed below)
  - `scripts/`: Build, development, and utility scripts
  - `data/`: Application and user data storage
  - `AGENTS.md`: Comprehensive agent documentation and specifications
  - `CHANGELOG.md`: Detailed version history and changes
  - `Dockerfile`, `docker-compose.yaml`: Container configurations for deployment
  - `lerna.json`, `package.json`, `turbo.json`: Monorepo configuration and workspace definitions

- **`/packages/`**: Core components of the Eliza framework:
  - `core/`: The foundational package (@elizaos/core) implementing:
    - LangChain integration for AI model interactions
    - PDF processing capabilities
    - Logging and error handling infrastructure
  - `app/`: Tauri-based cross-platform application (@elizaos/app)
    - React-based UI implementation
    - Tauri plugins for system integration
    - Desktop and mobile builds support
  - `autodoc/`: Documentation automation tool (@elizaos/autodoc)
    - LangChain-powered documentation generation
    - TypeScript parsing and analysis
    - GitHub integration via Octokit
  - `cli/`: Command-line interface for Eliza management
  - `client/`: Client libraries for web interfaces
  - `create-eliza/`: Project scaffolding tool
  - `docs/`: Official documentation source files
  - `plugin-bootstrap/`: **Essential communication core** (@elizaos/plugin-bootstrap)
    - **Required for basic agent functionality** - handles all message processing
    - Provides critical event handlers (MESSAGE_RECEIVED, VOICE_MESSAGE_RECEIVED, etc.)
    - Implements fundamental agent actions (reply, follow/unfollow, mute/unmute)
    - Contains core evaluators and providers for agent cognition
    - Manages message processing pipeline and response generation
    - **Mandatory unless building custom event handling system**
  - `plugin-sql/`: Database integration (@elizaos/plugin-sql)
    - PostgreSQL integration with PGLite support
    - Drizzle ORM for type-safe queries
    - Migration management tools
    - Integration testing support
  - `plugin-starter/`: Template for creating new plugins
  - `project-starter/`, `project-tee-starter/`: Project templates

This architecture enables modular development, clear separation of concerns, and scalable feature implementation across the Eliza ecosystem.

## Tauri Application CI/CD and Signing

The Eliza application, built with Tauri and located in `packages/app`, is configured for cross-platform continuous integration and deployment. This setup automates the building and releasing of the application for various operating systems.

### Overview

The Tauri application is designed to be built for:

- Desktop: Linux, macOS, and Windows.
- Mobile: Android and iOS.

### CI/CD Workflows

Two main GitHub Actions workflows handle the CI/CD process for the Tauri application:

- **`tauri-ci.yml`**:

  - Triggered on pushes to `main` and `develop` branches.
  - Performs debug builds of the desktop application (Linux, macOS, Windows) to ensure code integrity and catch build issues early.

- **`tauri-release.yml`**:
  - Triggered when new tags (e.g., `v*`) are pushed or when a new release is created/published on GitHub.
  - Builds release-ready versions of the application for all supported desktop platforms (Linux AppImage &amp; .deb, macOS .dmg, Windows .exe NSIS installer).
  - Builds release versions for mobile platforms (Android .apk, iOS .ipa).
  - Uploads all generated binaries and installers as artifacts to the corresponding GitHub Release.

### Mobile Application Backend

The mobile versions of the Eliza Tauri application (Android and iOS) are configured to connect to an external backend service hosted at `https://api.eliza.how`. This connection is essential for certain functionalities of the mobile app.

The Content Security Policy (CSP) in `packages/app/src-tauri/tauri.conf.json` has been updated to allow `connect-src` directives to this specific domain, ensuring that the mobile app can securely communicate with its backend.

### Application Signing (Important for Releases)

For the `tauri-release.yml` workflow to produce _signed_ and deployable mobile applications suitable for app stores or distribution, specific secrets must be configured in the GitHub repository settings (`Settings &gt; Secrets and variables &gt; Actions`).

**Android Signing Secrets:**

- `ANDROID_KEYSTORE_BASE64`: Base64 encoded content of your Java Keystore file (`.jks` or `.keystore`).
- `ANDROID_KEYSTORE_ALIAS`: The alias of your key within the keystore.
- `ANDROID_KEYSTORE_PRIVATE_KEY_PASSWORD`: The password for the private key associated with the alias.
- `ANDROID_KEYSTORE_PASSWORD`: The password for the keystore file itself.

&gt; **Note**: The CI workflow currently includes a step to generate a dummy, unsigned keystore for Android if these secrets are not provided. This allows the release build to complete and produce an unsigned APK, but this APK cannot be published to app stores. For official releases, providing the actual signing credentials via these secrets is crucial.

**iOS Signing Secrets:**

- `APPLE_DEVELOPMENT_CERTIFICATE_P12_BASE64`: Base64 encoded content of your Apple Distribution Certificate (`.p12` file).
- `APPLE_CERTIFICATE_PASSWORD`: The password used to encrypt the `.p12` certificate file.
- `APPLE_PROVISIONING_PROFILE_BASE64`: Base64 encoded content of your Distribution Provisioning Profile (`.mobileprovision` file).
- `APPLE_DEVELOPMENT_TEAM`: Your Apple Developer Team ID (e.g., `A1B2C3D4E5`).

&gt; **Note**: The CI workflow currently includes placeholder steps for setting up the Apple development environment and signing for iOS. These steps will require the above secrets to be populated. If these secrets are not provided and the signing steps are made active (by uncommenting them in the workflow), the iOS build will likely fail.

### Artifacts

Upon successful completion of the `tauri-release.yml` workflow (triggered by a new tag/release), all compiled application installers and mobile packages will be available as downloadable artifacts on the GitHub Releases page for that specific tag. This includes:

- Linux: `.AppImage` and `.deb` files.
- macOS: `.dmg` file.
- Windows: `.exe` NSIS installer.
- Android: `.apk` file.
- iOS: `.ipa` file.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
    </channel>
</rss>