<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for typescript - TypeScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for typescript.</description>
        <lastBuildDate>Sun, 06 Jul 2025 00:05:40 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[MotiaDev/motia]]></title>
            <link>https://github.com/MotiaDev/motia</link>
            <guid>https://github.com/MotiaDev/motia</guid>
            <pubDate>Sun, 06 Jul 2025 00:05:40 GMT</pubDate>
            <description><![CDATA[Unified Backend Framework for APIs, Events, and AI Agents]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/MotiaDev/motia">MotiaDev/motia</a></h1>
            <p>Unified Backend Framework for APIs, Events, and AI Agents</p>
            <p>Language: TypeScript</p>
            <p>Stars: 3,529</p>
            <p>Forks: 289</p>
            <p>Stars today: 179 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;!-- shows in LIGHT mode only --&gt;
  &lt;img src=&quot;assets/motia-logo-dark.png#gh-light-mode-only&quot;  width=&quot;400&quot; alt=&quot;Motia logo&quot; /&gt;
  &lt;!-- shows in DARK mode only --&gt;
  &lt;img src=&quot;assets/motia-logo-light.png#gh-dark-mode-only&quot; width=&quot;400&quot; alt=&quot;Motia logo (dark)&quot; /&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;strong&gt;üî• A Modern Unified Backend Framework for APIs, Events and Agents üî•&lt;/strong&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.npmjs.com/package/motia&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/npm/v/motia?style=flat&amp;logo=npm&amp;logoColor=white&amp;color=CB3837&amp;labelColor=000000&quot; alt=&quot;npm version&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/MotiaDev/motia/blob/main/LICENSE&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/license-MIT-green?style=flat&amp;logo=opensourceinitiative&amp;logoColor=white&amp;labelColor=000000&quot; alt=&quot;license&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/MotiaDev/motia&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/stars/MotiaDev/motia?style=flat&amp;logo=github&amp;logoColor=white&amp;color=yellow&amp;labelColor=000000&quot; alt=&quot;GitHub stars&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://twitter.com/motiadev&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/Follow-@motiadev-1DA1F2?style=flat&amp;logo=twitter&amp;logoColor=white&amp;labelColor=000000&quot; alt=&quot;Twitter Follow&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://discord.gg/EnfDRFYW&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/discord/1322278831184281721?style=flat&amp;logo=discord&amp;logoColor=white&amp;color=5865F2&amp;label=Discord&amp;labelColor=000000&quot; alt=&quot;Discord&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;


&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.motia.dev/manifesto&quot;&gt;üí° Motia Manifesto&lt;/a&gt; ‚Ä¢
  &lt;a href=&quot;https://www.motia.dev/docs/getting-started/quick-start&quot;&gt;üöÄ Quick Start&lt;/a&gt; ‚Ä¢
  &lt;a href=&quot;https://www.motia.dev/docs/concepts/steps/defining-steps&quot;&gt;üìã Defining Steps&lt;/a&gt; ‚Ä¢
  &lt;a href=&quot;https://motia.dev/docs&quot;&gt;üìö Docs&lt;/a&gt;
&lt;/p&gt;

---

## üéØ What is Motia?

Motia is a **modern backend framework** that unifies APIs, background jobs, events, and AI agents into a single cohesive system. Eliminate runtime complexity and build unified backends where **JavaScript, TypeScript, Python, etc**, work together in event-driven workflows, with built-in state management, observability, and one-click deployments.

Motia brings cohesion to the fragmented backend world with our core primitive: the **Step**.

![Motia combines APIs, background queues, and AI agents into one system](/assets/motia-architecture-with-bg.png)

### üß± The Step Philosophy

- **üéØ Your Logic, Your Step**: A Step holds your business logic. It can be a simple function, a call to a database, or a complex AI agent. This is where your application&#039;s real work gets done.
- **üåç Any Language, One Workflow**: Write Steps in TypeScript, Python, and other languages to come. all in the same project. Use Python for your AI agents and TypeScript for your API, and Motia makes them work together effortlessly.
- **‚ö° Full Power, No Boilerplate**: Inside a Step&#039;s `handler`, you have the full power of the Node.js or Python ecosystem. Install any package, call any API, connect to any database. No restrictions, just your code.
- **üëÅÔ∏è Zero-Config Observability**: Get full end-to-end tracing and logging for every Step execution, automatically. No setup required. See exactly what happened, when, and why.
- **üåä Simple &amp; Powerful Workflows**: Connect Steps together by emitting and subscribing to events. Build complex, multi-stage processes with simple, declarative code.
- **üè™ Unified State**: Share data between Steps effortlessly. Motia provides built-in state management that is automatically traced, giving you a complete picture of your data&#039;s lifecycle through a workflow.

---

## üöß The Problem

Backend teams juggle **fragmented runtimes** across APIs, background queues, and AI agents. This creates deployment complexity, debugging gaps, and cognitive overhead from context-switching between frameworks.

**This fragmentation demands a unified system.**

---

## ‚úÖ The Unified System

Motia unifies your entire backend into a **unified state**. APIs, background jobs, and AI agents become interconnected Steps with shared state and integrated observability.

| **Before**                  | **After (Motia)**                       |
| --------------------------- | --------------------------------------- |
| Multiple deployment targets | **Single unified deployment**           |
| Fragmented observability    | **End-to-end tracing**                  |
| Language dependent          | **JavaScript, TypeScript, Python, etc** |
| Context-switching overhead  | **Single intuitive model**              |
| Complex error handling      | **Automatic retries &amp; fault tolerance** |

---

## üîß Supported Step Types

| Type        | Trigger               | Use Case                              |
| ----------- | --------------------- | ------------------------------------- |
| **`api`**   | HTTP Request          | Expose REST endpoints                 |
| **`event`** | Emitted Topics        | React to internal or external events  |
| **`cron`**  | Scheduled Time (cron) | Automate recurring jobs               |
| **`noop`**  | None                  | Placeholder for manual/external tasks |

---

### ü§î How it Works

Motia&#039;s architecture is built around a single, powerful primitive: the **Step**. A Step is not just a trigger; it&#039;s a powerful container for your business logic. You can write anything from a simple database query to a complex AI agent interaction inside a single step. Instead of managing separate services for APIs, background workers, and scheduled tasks, you simply define how your steps are triggered.

-   **Need a public API?** Create an `api` step. This defines a route and handler for HTTP requests. You can build a complete REST or GraphQL API just with these steps.
-   **Need a background job or queue?** Have your `api` step `emit` an event. An `event` step subscribed to that event&#039;s topic will pick up the job and process it asynchronously. This is how you handle anything that shouldn&#039;t block the main request thread, from sending emails to complex data processing.
-   **Need to run a task on a schedule?** Use a `cron` step. It will trigger automatically based on the schedule you define.

This model means you no longer need to glue together separate frameworks and tools. A single Motia application can replace a stack that might otherwise include **Nest.js** (for APIs), **Temporal** (for workflows), and **Celery/BullMQ** (for background jobs). It&#039;s all just steps and events.

## ‚ö° Core Concepts

The **Step** is Motia&#039;s core primitive. The following concepts are deeply integrated with Steps to help you build powerful, complex, and scalable backends:

### üîë Steps &amp; Step Types
Understand the three ways Steps are triggered:
- **HTTP (`api`)** ‚Äì Build REST/GraphQL endpoints with zero boilerplate.
- **Events (`event`)** ‚Äì React to internal or external events emitted by other steps.
- **Cron (`cron`)** ‚Äì Schedule recurring jobs with a familiar cron syntax.

### üì£ Emit &amp; Subscribe (Event-Driven Workflows)
Steps talk to each other by **emitting** and **subscribing** to topics. This decouples producers from consumers and lets you compose complex workflows with simple, declarative code.

### üè™ State Management
All steps share a unified key-value state store. Every `get`, `set`, and `delete` is automatically traced so you always know when and where your data changed.

### üìä Structured Logging
Motia provides structured, JSON logs correlated with trace IDs and step names. Search and filter your logs without regex hassle.

### üì° Streams: Real-time Messaging
Push live updates from long-running or asynchronous workflows to clients without polling. Perfect for dashboards, progress indicators, and interactive AI agents.

### üëÅÔ∏è End-to-End Observability with Traces
Every execution generates a full trace, capturing step timelines, state operations, emits, stream calls, and logs. Visualise everything in the Workbench&#039;s Traces UI and debug faster.

---

## üöÄ Quickstart

Get Motia project up and running in **under 60 seconds**:
### **Prerequisites**

- **Node.js 18+** (we recommend the latest LTS)
- **npm** ‚â• 8 (or **pnpm** / **yarn** ‚Äì your choice)

---

### 1. Bootstrap a New Motia Project

```bash
npx motia@latest create -i   # runs the interactive terminal
```
Follow the prompts to pick a template, project name, and language.

### 2. Start the Workbench

Inside your new project folder, launch the dev server:

```bash
npx motia dev
# ‚ûú http://localhost:3000
```
This spins up the Motia Workbench ‚Äì a local UI for building, testing &amp; observing your backend in real-time.

![motia-terminal](assets/motia-terminal.gif)

### 3. Hit Your First Endpoint

Open a new terminal tab and run:

```bash
curl http://localhost:3000/default
```
You should see the JSON response:

```json
{&quot;message&quot;:&quot;Hello World from Motia!&quot;}
```

### 4. Explore the Workbench UI

The Workbench is your command centre:

- **üåä Flows** ‚Äì Visualise how your Steps connect.
- **üîå Endpoints** ‚Äì Test APIs with one click and stream results live.
- **üëÅÔ∏è Traces** ‚Äì Inspect end-to-end traces of every execution.
- **üìä Logs** ‚Äì View structured logs grouped by trace.
- **üè™ State** ‚Äì Inspect the key-value store across Steps.

---

üéâ **That&#039;s it!** You now have a fully-featured Motia project with:

- ‚úÖ `/default` API endpoint
- ‚úÖ Visual debugger &amp; flow inspector
- ‚úÖ Built-in observability
- ‚úÖ Hot-reload for instant feedback

---

## üóÇ Examples

| [Finance Agent](https://github.com/MotiaDev/motia-examples/tree/main/examples/finance-agent) | [GitHub Agent](https://github.com/MotiaDev/motia-examples/tree/main/examples/github-integration-workflow) | [Gmail Manager](https://github.com/MotiaDev/motia-examples/tree/main/examples/gmail-workflow) |
| -------------------------------------------------------------------------------------------- | --------------------------------------------------------------------------------------------------------- | --------------------------------------------------------------------------------------------- |
| ![Finance](assets/examples/finance-agent.png)&lt;br&gt;Financial insights                          | ![GitHub](assets/examples/github-pr-management.png)&lt;br&gt;PR automation                                      | ![Gmail](assets/examples/gmail-flow.png)&lt;br&gt;Email automation                                  |

| [Trello Automation](https://github.com/MotiaDev/motia-examples/tree/main/examples/trello-flow) | [RAG Agent](https://github.com/MotiaDev/motia-examples/tree/main/examples/rag_example) | [AI Image Gen](https://github.com/MotiaDev/motia-examples/tree/main/examples/vision-example) |
| ---------------------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------- |
| ![Trello](assets/examples/trello-manager.png)&lt;br&gt;Task automation                               | ![RAG](assets/examples/parse-embed-rag.png)&lt;br&gt;Knowledge retrieval                     | ![AI Image](assets/examples/generate-image.png)&lt;br&gt;Generate images                           |

---

## üåê Language Support

Write steps in your preferred language:

| Language       | Status        | Example           |
| -------------- | ------------- | ----------------- |
| **JavaScript** | ‚úÖ Stable      | `handler.step.js` |
| **TypeScript** | ‚úÖ Stable      | `handler.step.ts` |
| **Python**     | ‚úÖ Stable      | `handler.step.py` |
| **Ruby**       | üöß Beta        | `handler.step.rb` |
| **Go**         | üîÑ Coming Soon | `handler.step.go` |
| **Rust**       | üîÑ Coming Soon | `handler.step.rs` |

---
### üí¨ **Get Help**
- **üìã Questions**: Use our [Discord community](https://discord.gg/7rXsekMK)
- **üêõ Bug Reports**: [GitHub Issues](https://github.com/MotiaDev/motia/issues)
- **üìñ Documentation**: [Official Docs](https://motia.dev/docs)
- **üé• Blog**: [Motia Blog](https://dev.to/motiadev)

### ü§ù **Contributing**

#### üöÄ Roadmap

We&#039;re building Motia in the open, and we&#039;d love for you to be a part of the journey.

Check out our public roadmap to see what&#039;s planned, what&#039;s in progress, and what&#039;s recently shipped:

üëâ [View our public Roadmap](https://github.com/orgs/MotiaDev/projects/2/views/2)

We welcome contributions! Whether it&#039;s:
- üêõ Bug fixes and improvements
- ‚ú® New features and step types
- üìö Documentation and examples
- üåç Language support additions
- üé® Workbench UI enhancements

Check out our [Contributing Guide](https://github.com/MotiaDev/motia/blob/main/CONTRIBUTING.md) to get started.

---

&lt;div align=&quot;center&quot;&gt;

**üåü Ready to unify your backend?**

[üöÄ **Get Started Now**](https://motia.dev) ‚Ä¢ [üìñ **Read the Docs**](https://motia.dev/docs) ‚Ä¢ [üí¨ **Join Discord**](https://discord.gg/7rXsekMK)

&lt;/div&gt;

---
&lt;div align=&quot;center&quot;&gt;
## Star History

[![Star History Chart](https://api.star-history.com/svg?repos=motiadev/motia&amp;type=Date)](https://www.star-history.com/#motiadev/motia&amp;Date)

&lt;sub&gt;Built with ‚ù§Ô∏è by the Motia team ‚Ä¢ **Star us if you find Motia useful!** ‚≠ê&lt;/sub&gt;

&lt;/div&gt;
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[directus/directus]]></title>
            <link>https://github.com/directus/directus</link>
            <guid>https://github.com/directus/directus</guid>
            <pubDate>Sun, 06 Jul 2025 00:05:39 GMT</pubDate>
            <description><![CDATA[The flexible backend for all your projects üê∞ Turn your DB into a headless CMS, admin panels, or apps with a custom UI, instant APIs, auth & more.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/directus/directus">directus/directus</a></h1>
            <p>The flexible backend for all your projects üê∞ Turn your DB into a headless CMS, admin panels, or apps with a custom UI, instant APIs, auth & more.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 31,289</p>
            <p>Forks: 4,275</p>
            <p>Stars today: 48 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[humanlayer/12-factor-agents]]></title>
            <link>https://github.com/humanlayer/12-factor-agents</link>
            <guid>https://github.com/humanlayer/12-factor-agents</guid>
            <pubDate>Sun, 06 Jul 2025 00:05:38 GMT</pubDate>
            <description><![CDATA[What are the principles we can use to build LLM-powered software that is actually good enough to put in the hands of production customers?]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/humanlayer/12-factor-agents">humanlayer/12-factor-agents</a></h1>
            <p>What are the principles we can use to build LLM-powered software that is actually good enough to put in the hands of production customers?</p>
            <p>Language: TypeScript</p>
            <p>Stars: 5,873</p>
            <p>Forks: 383</p>
            <p>Stars today: 286 stars today</p>
            <h2>README</h2><pre># 12-Factor Agents - Principles for building reliable LLM applications

&lt;div align=&quot;center&quot;&gt;
&lt;a href=&quot;https://www.apache.org/licenses/LICENSE-2.0&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/badge/Code-Apache%202.0-blue.svg&quot; alt=&quot;Code License: Apache 2.0&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://creativecommons.org/licenses/by-sa/4.0/&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/badge/Content-CC%20BY--SA%204.0-lightgrey.svg&quot; alt=&quot;Content License: CC BY-SA 4.0&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://discord.gg/WffDJYazzy&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/chat-discord-5865F2&quot; alt=&quot;Discord Server&quot;&gt;&lt;/a&gt;    
&lt;a href=&quot;https://www.youtube.com/watch?v=yxJDyQ8v6P0&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/youtube-deep_dive-crimson&quot; alt=&quot;YouTube
Deep Dive&quot;&gt;&lt;/a&gt;
    
&lt;/div&gt;

*In the spirit of [12 Factor Apps](https://12factor.net/)*.  *The source for this project is public at https://github.com/humanlayer/12-factor-agents, and I welcome your feedback and contributions. Let&#039;s figure this out together!*


&lt;img referrerpolicy=&quot;no-referrer-when-downgrade&quot; src=&quot;https://static.scarf.sh/a.png?x-pxid=2acad99a-c2d9-48df-86f5-9ca8061b7bf9&quot; /&gt;

&lt;a href=&quot;#visual-nav&quot;&gt;&lt;img width=&quot;907&quot; alt=&quot;Screenshot 2025-04-03 at 2 49 07‚ÄØPM&quot; src=&quot;https://github.com/user-attachments/assets/23286ad8-7bef-4902-b371-88ff6a22e998&quot; /&gt;&lt;/a&gt;


Hi, I&#039;m Dex. I&#039;ve been [hacking](https://youtu.be/8bIHcttkOTE) on [AI agents](https://theouterloop.substack.com) for [a while](https://humanlayer.dev). 


**I&#039;ve tried every agent framework out there**, from the plug-and-play crew/langchains to the &quot;minimalist&quot; smolagents of the world to the &quot;production grade&quot; langraph, griptape, etc. 

**I&#039;ve talked to a lot of really strong founders**, in and out of YC, who are all building really impressive things with AI. Most of them are rolling the stack themselves. I don&#039;t see a lot of frameworks in production customer-facing agents.

**I&#039;ve been surprised to find** that most of the products out there billing themselves as &quot;AI Agents&quot; are not all that agentic. A lot of them are mostly deterministic code, with LLM steps sprinkled in at just the right points to make the experience truly magical.

Agents, at least the good ones, don&#039;t follow the [&quot;here&#039;s your prompt, here&#039;s a bag of tools, loop until you hit the goal&quot;](https://www.anthropic.com/engineering/building-effective-agents#agents) pattern. Rather, they are comprised of mostly just software. 

So, I set out to answer:

&gt; ### **What are the principles we can use to build LLM-powered software that is actually good enough to put in the hands of production customers?**

Welcome to 12-factor agents. As every Chicago mayor since Daley has consistently plastered all over the city&#039;s major airports, we&#039;re glad you&#039;re here.

*Special thanks to [@iantbutler01](https://github.com/iantbutler01), [@tnm](https://github.com/tnm), [@hellovai](https://www.github.com/hellovai), [@stantonk](https://www.github.com/stantonk), [@balanceiskey](https://www.github.com/balanceiskey), [@AdjectiveAllison](https://www.github.com/AdjectiveAllison), [@pfbyjy](https://www.github.com/pfbyjy), [@a-churchill](https://www.github.com/a-churchill), and the SF MLOps community for early feedback on this guide.*

## The Short Version: The 12 Factors

Even if LLMs [continue to get exponentially more powerful](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-10-small-focused-agents.md#what-if-llms-get-smarter), there will be core engineering techniques that make LLM-powered software more reliable, more scalable, and easier to maintain.

- [How We Got Here: A Brief History of Software](https://github.com/humanlayer/12-factor-agents/blob/main/content/brief-history-of-software.md)
- [Factor 1: Natural Language to Tool Calls](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-01-natural-language-to-tool-calls.md)
- [Factor 2: Own your prompts](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-02-own-your-prompts.md)
- [Factor 3: Own your context window](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-03-own-your-context-window.md)
- [Factor 4: Tools are just structured outputs](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-04-tools-are-structured-outputs.md)
- [Factor 5: Unify execution state and business state](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-05-unify-execution-state.md)
- [Factor 6: Launch/Pause/Resume with simple APIs](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-06-launch-pause-resume.md)
- [Factor 7: Contact humans with tool calls](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-07-contact-humans-with-tools.md)
- [Factor 8: Own your control flow](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-08-own-your-control-flow.md)
- [Factor 9: Compact Errors into Context Window](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-09-compact-errors.md)
- [Factor 10: Small, Focused Agents](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-10-small-focused-agents.md)
- [Factor 11: Trigger from anywhere, meet users where they are](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-11-trigger-from-anywhere.md)
- [Factor 12: Make your agent a stateless reducer](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-12-stateless-reducer.md)

### Visual Nav

|    |    |    |
|----|----|-----|
|[![factor 1](https://github.com/humanlayer/12-factor-agents/blob/main/img/110-natural-language-tool-calls.png)](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-01-natural-language-to-tool-calls.md) | [![factor 2](https://github.com/humanlayer/12-factor-agents/blob/main/img/120-own-your-prompts.png)](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-02-own-your-prompts.md) | [![factor 3](https://github.com/humanlayer/12-factor-agents/blob/main/img/130-own-your-context-building.png)](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-03-own-your-context-window.md) |
|[![factor 4](https://github.com/humanlayer/12-factor-agents/blob/main/img/140-tools-are-just-structured-outputs.png)](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-04-tools-are-structured-outputs.md) | [![factor 5](https://github.com/humanlayer/12-factor-agents/blob/main/img/150-unify-state.png)](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-05-unify-execution-state.md) | [![factor 6](https://github.com/humanlayer/12-factor-agents/blob/main/img/160-pause-resume-with-simple-apis.png)](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-06-launch-pause-resume.md) |
| [![factor 7](https://github.com/humanlayer/12-factor-agents/blob/main/img/170-contact-humans-with-tools.png)](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-07-contact-humans-with-tools.md) | [![factor 8](https://github.com/humanlayer/12-factor-agents/blob/main/img/180-control-flow.png)](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-08-own-your-control-flow.md) | [![factor 9](https://github.com/humanlayer/12-factor-agents/blob/main/img/190-factor-9-errors-static.png)](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-09-compact-errors.md) |
| [![factor 10](https://github.com/humanlayer/12-factor-agents/blob/main/img/1a0-small-focused-agents.png)](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-10-small-focused-agents.md) | [![factor 11](https://github.com/humanlayer/12-factor-agents/blob/main/img/1b0-trigger-from-anywhere.png)](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-11-trigger-from-anywhere.md) | [![factor 12](https://github.com/humanlayer/12-factor-agents/blob/main/img/1c0-stateless-reducer.png)](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-12-stateless-reducer.md) |

## How we got here

For a deeper dive on my agent journey and what led us here, check out [A Brief History of Software](https://github.com/humanlayer/12-factor-agents/blob/main/content/brief-history-of-software.md) - a quick summary here:

### The promise of agents

We&#039;re gonna talk a lot about Directed Graphs (DGs) and their Acyclic friends, DAGs. I&#039;ll start by pointing out that...well...software is a directed graph. There&#039;s a reason we used to represent programs as flow charts.

![010-software-dag](https://github.com/humanlayer/12-factor-agents/blob/main/img/010-software-dag.png)

### From code to DAGs

Around 20 years ago, we started to see DAG orchestrators become popular. We&#039;re talking classics like [Airflow](https://airflow.apache.org/), [Prefect](https://www.prefect.io/), some predecessors, and some newer ones like ([dagster](https://dagster.io/), [inggest](https://www.inngest.com/), [windmill](https://www.windmill.dev/)). These followed the same graph pattern, with the added benefit of observability, modularity, retries, administration, etc.

![015-dag-orchestrators](https://github.com/humanlayer/12-factor-agents/blob/main/img/015-dag-orchestrators.png)

### The promise of agents

I&#039;m not the first [person to say this](https://youtu.be/Dc99-zTMyMg?si=bcT0hIwWij2mR-40&amp;t=73), but my biggest takeaway when I started learning about agents, was that you get to throw the DAG away. Instead of software engineers coding each step and edge case, you can give the agent a goal and a set of transitions:

![025-agent-dag](https://github.com/humanlayer/12-factor-agents/blob/main/img/025-agent-dag.png)

And let the LLM make decisions in real time to figure out the path

![026-agent-dag-lines](https://github.com/humanlayer/12-factor-agents/blob/main/img/026-agent-dag-lines.png)

The promise here is that you write less software, you just give the LLM the &quot;edges&quot; of the graph and let it figure out the nodes. You can recover from errors, you can write less code, and you may find that LLMs find novel solutions to problems.


### Agents as loops

As we&#039;ll see later, it turns out this doesn&#039;t quite work.

Let&#039;s dive one step deeper - with agents you&#039;ve got this loop consisting of 3 steps:

1. LLM determines the next step in the workflow, outputting structured json (&quot;tool calling&quot;)
2. Deterministic code executes the tool call
3. The result is appended to the context window 
4. Repeat until the next step is determined to be &quot;done&quot;

```python
initial_event = {&quot;message&quot;: &quot;...&quot;}
context = [initial_event]
while True:
  next_step = await llm.determine_next_step(context)
  context.append(next_step)

  if (next_step.intent === &quot;done&quot;):
    return next_step.final_answer

  result = await execute_step(next_step)
  context.append(result)
```

Our initial context is just the starting event (maybe a user message, maybe a cron fired, maybe a webhook, etc), and we ask the llm to choose the next step (tool) or to determine that we&#039;re done.

Here&#039;s a multi-step example:

[![027-agent-loop-animation](https://github.com/humanlayer/12-factor-agents/blob/main/img/027-agent-loop-animation.gif)](https://github.com/user-attachments/assets/3beb0966-fdb1-4c12-a47f-ed4e8240f8fd)

&lt;details&gt;
&lt;summary&gt;&lt;a href=&quot;https://github.com/humanlayer/12-factor-agents/blob/main/img/027-agent-loop-animation.gif&quot;&gt;GIF Version&lt;/a&gt;&lt;/summary&gt;

![027-agent-loop-animation](https://github.com/humanlayer/12-factor-agents/blob/main/img/027-agent-loop-animation.gif)]

&lt;/details&gt;

## Why 12-factor agents?

At the end of the day, this approach just doesn&#039;t work as well as we want it to.

In building HumanLayer, I&#039;ve talked to at least 100 SaaS builders (mostly technical founders) looking to make their existing product more agentic. The journey usually goes something like:

1. Decide you want to build an agent
2. Product design, UX mapping, what problems to solve
3. Want to move fast, so grab $FRAMEWORK and *get to building*
4. Get to 70-80% quality bar 
5. Realize that 80% isn&#039;t good enough for most customer-facing features
6. Realize that getting past 80% requires reverse-engineering the framework, prompts, flow, etc.
7. Start over from scratch

&lt;details&gt;
&lt;summary&gt;Random Disclaimers&lt;/summary&gt;

**DISCLAIMER**: I&#039;m not sure the exact right place to say this, but here seems as good as any: **this in BY NO MEANS meant to be a dig on either the many frameworks out there, or the pretty dang smart people who work on them**. They enable incredible things and have accelerated the AI ecosystem. 

I hope that one outcome of this post is that agent framework builders can learn from the journeys of myself and others, and make frameworks even better. 

Especially for builders who want to move fast but need deep control.

**DISCLAIMER 2**: I&#039;m not going to talk about MCP. I&#039;m sure you can see where it fits in.

**DISCLAIMER 3**: I&#039;m using mostly typescript, for [reasons](https://www.linkedin.com/posts/dexterihorthy_llms-typescript-aiagents-activity-7290858296679313408-Lh9e?utm_source=share&amp;utm_medium=member_desktop&amp;rcm=ACoAAA4oHTkByAiD-wZjnGsMBUL_JT6nyyhOh30) but all this stuff works in python or any other language you prefer. 


Anyways back to the thing...

&lt;/details&gt;

### Design Patterns for great LLM applications

After digging through hundreds of AI libriaries and working with dozens of founders, my instinct is this:

1. There are some core things that make agents great
2. Going all in on a framework and building what is essentially a greenfield rewrite may be counter-productive
3. There are some core principles that make agents great, and you will get most/all of them if you pull in a framework
4. BUT, the fastest way I&#039;ve seen for builders to get high-quality AI software in the hands of customers is to take small, modular concepts from agent building, and incorporate them into their existing product
5. These modular concepts from agents can be defined and applied by most skilled software engineers, even if they don&#039;t have an AI background

&gt; #### The fastest way I&#039;ve seen for builders to get good AI software in the hands of customers is to take small, modular concepts from agent building, and incorporate them into their existing product


## The 12 Factors (again)


- [How We Got Here: A Brief History of Software](https://github.com/humanlayer/12-factor-agents/blob/main/content/brief-history-of-software.md)
- [Factor 1: Natural Language to Tool Calls](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-01-natural-language-to-tool-calls.md)
- [Factor 2: Own your prompts](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-02-own-your-prompts.md)
- [Factor 3: Own your context window](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-03-own-your-context-window.md)
- [Factor 4: Tools are just structured outputs](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-04-tools-are-structured-outputs.md)
- [Factor 5: Unify execution state and business state](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-05-unify-execution-state.md)
- [Factor 6: Launch/Pause/Resume with simple APIs](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-06-launch-pause-resume.md)
- [Factor 7: Contact humans with tool calls](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-07-contact-humans-with-tools.md)
- [Factor 8: Own your control flow](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-08-own-your-control-flow.md)
- [Factor 9: Compact Errors into Context Window](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-09-compact-errors.md)
- [Factor 10: Small, Focused Agents](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-10-small-focused-agents.md)
- [Factor 11: Trigger from anywhere, meet users where they are](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-11-trigger-from-anywhere.md)
- [Factor 12: Make your agent a stateless reducer](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-12-stateless-reducer.md)

## Honorable Mentions / other advice

- [Factor 13: Pre-fetch all the context you might need](https://github.com/humanlayer/12-factor-agents/blob/main/content/appendix-13-pre-fetch.md)

## Related Resources

- Contribute to this guide [here](https://github.com/humanlayer/12-factor-agents)
- [I talked about a lot of this on an episode of the Tool Use podcast](https://youtu.be/8bIHcttkOTE) in March 2025
- I write about some of this stuff at [The Outer Loop](https://theouterloop.substack.com)
- I do [webinars about Maximizing LLM Performance](https://github.com/hellovai/ai-that-works/tree/main) with [@hellovai](https://github.com/hellovai)
- We build OSS agents with this methodology under [got-agents/agents](https://github.com/got-agents/agents)
- We ignored all our own advice and built a [framework for running distributed agents in kubernetes](https://github.com/humanlayer/kubechain)
- Other links from this guide:
  - [12 Factor Apps](https://12factor.net)
  - [Building Effective Agents (Anthropic)](https://www.anthropic.com/engineering/building-effective-agents#agents)
  - [Prompts are Functions](https://thedataexchange.media/baml-revolution-in-ai-engineering/ )
  - [Library patterns: Why frameworks are evil](https://tomasp.net/blog/2015/library-frameworks/)
  - [The Wrong Abstraction](https://sandimetz.com/blog/2016/1/20/the-wrong-abstraction)
  - [Mailcrew Agent](https://github.com/dexhorthy/mailcrew)
  - [Mailcrew Demo Video](https://www.youtube.com/watch?v=f_cKnoPC_Oo)
  - [Chainlit Demo](https://x.com/chainlit_io/status/1858613325921480922)
  - [TypeScript for LLMs](https://www.linkedin.com/posts/dexterihorthy_llms-typescript-aiagents-activity-7290858296679313408-Lh9e)
  - [Schema Aligned Parsing](https://www.boundaryml.com/blog/schema-aligned-parsing)
  - [Function Calling vs Structured Outputs vs JSON Mode](https://www.vellum.ai/blog/when-should-i-use-function-calling-structured-outputs-or-json-mode)
  - [BAML on GitHub](https://github.com/boundaryml/baml)
  - [OpenAI JSON vs Function Calling](https://docs.llamaindex.ai/en/stable/examples/llm/openai_json_vs_function_calling/)
  - [Outer Loop Agents](https://theouterloop.substack.com/p/openais-realtime-api-is-a-step-towards)
  - [Airflow](https://airflow.apache.org/)
  - [Prefect](https://www.prefect.io/)
  - [Dagster](https://dagster.io/)
  - [Inngest](https://www.inngest.com/)
  - [Windmill](https://www.windmill.dev/)
  - [The AI Agent Index (MIT)](https://aiagentindex.mit.edu/)
  - [NotebookLM on Finding Model Capability Boundaries](https://open.substack.com/pub/swyx/p/notebooklm?selection=08e1187c-cfee-4c63-93c9-71216640a5f8)

## Contributors

Thanks to everyone who has contributed to 12-factor agents!

[&lt;img src=&quot;https://avatars.githubusercontent.com/u/3730605?v=4&amp;s=80&quot; width=&quot;80px&quot; alt=&quot;dexhorthy&quot; /&gt;](https://github.com/dexhorthy) [&lt;img src=&quot;https://avatars.githubusercontent.com/u/50557586?v=4&amp;s=80&quot; width=&quot;80px&quot; alt=&quot;Sypherd&quot; /&gt;](https://github.com/Sypherd) [&lt;img src=&quot;https://avatars.githubusercontent.com/u/66259401?v=4&amp;s=80&quot; width=&quot;80px&quot; alt=&quot;tofaramususa&quot; /&gt;](https://github.com/tofaramususa) [&lt;img src=&quot;https://avatars.githubusercontent.com/u/18105223?v=4&amp;s=80&quot; width=&quot;80px&quot; alt=&quot;a-churchill&quot; /&gt;](https://github.com/a-churchill) [&lt;img src=&quot;https://avatars.githubusercontent.com/u/4084885?v=4&amp;s=80&quot; width=&quot;80px&quot; alt=&quot;Elijas&quot; /&gt;](https://github.com/Elijas) [&lt;img src=&quot;https://avatars.githubusercontent.com/u/39267118?v=4&amp;s=80&quot; width=&quot;80px&quot; alt=&quot;hugolmn&quot; /&gt;](https://github.com/hugolmn) [&lt;img src=&quot;https://avatars.githubusercontent.com/u/1882972?v=4&amp;s=80&quot; width=&quot;80px&quot; alt=&quot;jeremypeters&quot; /&gt;](https://github.com/jeremypeters)

[&lt;img src=&quot;https://avatars.githubusercontent.com/u/380402?v=4&amp;s=80&quot; width=&quot;80px&quot; alt=&quot;kndl&quot; /&gt;](https://github.com/kndl) [&lt;img src=&quot;https://avatars.githubusercontent.com/u/16674643?v=4&amp;s=80&quot; width=&quot;80px&quot; alt=&quot;maci

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[btjawa/BiliTools]]></title>
            <link>https://github.com/btjawa/BiliTools</link>
            <guid>https://github.com/btjawa/BiliTools</guid>
            <pubDate>Sun, 06 Jul 2025 00:05:37 GMT</pubDate>
            <description><![CDATA[A cross-platform bilibili toolbox. Ë∑®Âπ≥Âè∞ÂìîÂì©ÂìîÂì©Â∑•ÂÖ∑ÁÆ±ÔºåÊîØÊåÅ‰∏ãËΩΩËßÜÈ¢ë„ÄÅÁï™ÂâßÁ≠âÁ≠âÂêÑÁ±ªËµÑÊ∫ê]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/btjawa/BiliTools">btjawa/BiliTools</a></h1>
            <p>A cross-platform bilibili toolbox. Ë∑®Âπ≥Âè∞ÂìîÂì©ÂìîÂì©Â∑•ÂÖ∑ÁÆ±ÔºåÊîØÊåÅ‰∏ãËΩΩËßÜÈ¢ë„ÄÅÁï™ÂâßÁ≠âÁ≠âÂêÑÁ±ªËµÑÊ∫ê</p>
            <p>Language: TypeScript</p>
            <p>Stars: 2,011</p>
            <p>Forks: 117</p>
            <p>Stars today: 88 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
    &lt;img src=&quot;./assets/logo.svg&quot; width=500 /&gt;
&lt;/p&gt;

&lt;h1 align=&quot;center&quot;&gt;BiliTools - ÂìîÂì©ÂìîÂì©Â∑•ÂÖ∑ÁÆ±&lt;/h1&gt;
&lt;p align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://github.com/btjawa/BiliTools/stargazers&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/github/stars/btjawa/BiliTools&quot; /&gt;
    &lt;/a&gt;
    &lt;a href=&quot;https://github.com/btjawa/BiliTools/forks&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/github/forks/btjawa/BiliTools&quot; /&gt;
    &lt;/a&gt;
    &lt;img src=&quot;https://img.shields.io/github/last-commit/btjawa/BiliTools&quot; /&gt;
    &lt;a href=&quot;https://github.com/btjawa/BiliTools/blob/master/LICENSE&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/github/license/btjawa/BiliTools&quot; /&gt;
    &lt;/a&gt;
    &lt;a href=&quot;https://github.com/btjawa/BiliTools/releases/latest&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/github/v/release/btjawa/BiliTools&quot; /&gt;
    &lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://trendshift.io/repositories/13286&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https://trendshift.io/api/badge/repositories/13286&quot; alt=&quot;btjawa%2FBiliTools | Trendshift&quot; style=&quot;width: 250px; height: 55px;&quot; width=&quot;250&quot; height=&quot;55&quot;/&gt;
    &lt;/a&gt;
&lt;/p&gt;


&lt;br&gt;

üí° Âü∫‰∫é [Tauri v2](https://github.com/tauri-apps/tauri) ÊûÑÂª∫ÔºåÊîØÊåÅ‰∏ãËΩΩËß£ÊûêÂìîÂì©ÂìîÂì©ÂêÑÁ±ªËµÑÊ∫êÔºåÂ∞Ü‰ºöÈôÜÁª≠ÊîØÊåÅ [Êõ¥Â§öÂäüËÉΩ](https://github.com/users/btjawa/projects/4)

üìñ ÊñáÊ°£ / ÂÖ∂‰ªñ‰ø°ÊÅØÔºö[https://www.btjawa.top/bilitools](https://www.btjawa.top/bilitools) 

&gt; [!IMPORTANT] 
&gt; Êú¨È°πÁõÆÁöÑÊâÄÊúâ [Â£∞Êòé](#Â£∞Êòé)Ôºå‰ªÖÈÄÇÁî®‰∫éÂèëÂ∏ÉÂú® [Release](https://github.com/btjawa/BiliTools/releases/latest) È°µÁöÑÁâàÊú¨&lt;br&gt;
&gt; Êú¨È°πÁõÆÊ∂âÂèäË¥¶Âè∑Áõ∏ÂÖ≥ÂäüËÉΩÔºåÂõ†‰ΩøÁî® **‰ªª‰ΩïÁ¨¨‰∏âÊñπÁâàÊú¨** ÊâÄÈÄ†ÊàêÁöÑ‰ªª‰ΩïÂêéÊûúÔºå**Êú¨È°πÁõÆÊ¶Ç‰∏çË¥üË¥£**&lt;br&gt;
&gt; **Â§ß‰ºöÂëò / ‰ªòË¥π** ‰ªÖÊîØÊåÅÂ∑≤ÂºÄÈÄöÂØπÂ∫îÊúçÂä°ÁöÑË¥¶Âè∑ÔºåÊôÆÈÄöË¥¶Âè∑Êó†Ê≥ïËß£ÊûêÊ≠§Á±ªÂÜÖÂÆπ

## üíæ ÂÆâË£ÖÊåáÂçó

Ë¶ÅÊ±Ç Windows ÁâàÊú¨ &gt;= **8.1**ÔºåmacOS ÁâàÊú¨ &gt;= **11.0**

ÂØπ‰∫é‰Ωé‰∫é‰∏äËø∞ÁâàÊú¨ÁöÑÁ≥ªÁªüÁéØÂ¢ÉÔºå‰∏ç‰ºöÊèê‰æõ‰ªª‰ΩïÊîØÊåÅ

Windows ‰∏ãËΩΩ `BiliTools_xxx_x64-setup.exe` ËøõË°åÂÆâË£ÖÔºåËã•Âç°Âú®ÂÆâË£Ö `WebView2`ÔºåÂèØÂâçÂæÄ [Microsoft](https://developer.microsoft.com/en-us/microsoft-edge/webview2) ÊâãÂä®ÂÆâË£Ö

macOS ‰∏ãËΩΩ `BiliTools_xxx_universal.dmg` ËøõË°åÂÆâË£ÖÔºå**‰∏ÄËà¨**‰∏çÂª∫ËÆÆÂçïÁã¨‰∏ãËΩΩÂØπÂ∫îÊû∂ÊûÑÁöÑÈïúÂÉèÔºåÂèÇËÄÉ [#26](https://github.com/btjawa/BiliTools/issues/26#issuecomment-2785410137)

## üöÄ ÂèÇ‰∏éË¥°ÁåÆ / Contributing

Êú¨È°πÁõÆÂΩìÂâçÁî± [Êàë](https://github.com/btjawa) ‰∏Ä‰∫∫Áª¥Êä§Ôºö
- **ÊàëÊú¨‰∫∫ÊòØÂàù‰∏≠ÁîüÔºåÊó∂Èó¥Âπ∂‰∏çÂ§ö**
- ‰∏™‰∫∫ËÉΩÂäõÊúâÈôêÔºåÊàë‰πüÊ∏ÖÊ•öÊúâÂæàÂ§öÊºèÊ¥ûÂ∞öÊú™‰øÆÂ§ç

Ê¨¢ËøéÂêÑ‰Ωç‰∏∫Êú¨È°πÁõÆÂÅöÂá∫Ë¥°ÁåÆÔºåËÆ©Êú¨È°πÁõÆÂèòÂæóÊõ¥Â•ΩÔºÅ*Ë¥°ÁåÆÊåáÂçóÊ≠£Âú®ÁºñÂÜô‰∏≠*

Â¶ÇÊûú‰Ω†ÊòØ‰ΩøÁî®ËÄÖÔºö
- ‰ªÖÂú® [Issues](https://github.com/btjawa/BiliTools/issues) Êèê‰∫§ÈóÆÈ¢òÔºå‰æø‰∫é Issue tracking
- ÊåâÁÖßÊ®°ÊùøÂ°´ÂÜôÂ•Ω **ÊâÄÊúâÈúÄË¶ÅÁöÑ‰ø°ÊÅØ**ÔºåÊèê‰∫§Ë∂≥Â§üÁöÑÊó•ÂøóÊàñÈîôËØØÈ°µÈù¢Êà™Âõæ
- **Â∞äÈáç‰ªñ‰∫∫ÁöÑÂä≥Âä®ÊàêÊûú**

## üß™ ÂäüËÉΩ

### ËµÑÊ∫êËß£Êûê

| ÂäüËÉΩ    | Áä∂ÊÄÅ    | Â§áÊ≥®                      |
|---------|---------|---------------------------|
| ËßÜÈ¢ë    | ‚úÖ Â∑≤ÂÆåÊàê | &lt;ul&gt;&lt;li&gt;ÊîØÊåÅÂêàÈõÜ / ÂàÜP / ‰∫íÂä®„ÄÅÁï™Ââß / ËØæÁ®ã / ÁîµÂΩ±&lt;/li&gt;&lt;li&gt;ÊîØÊåÅ DASH„ÄÅMP4„ÄÅFLV&lt;/li&gt;&lt;li&gt;ÊîØÊåÅ 4K„ÄÅ8K„ÄÅHDR„ÄÅÊùúÊØîËßÜÁïå&lt;/li&gt;&lt;/ul&gt; |
| Èü≥È¢ë    | ‚úÖ Â∑≤ÂÆåÊàê | &lt;ul&gt;&lt;li&gt;ÊîØÊåÅ AVC„ÄÅHEVC„ÄÅAV1&lt;/li&gt;&lt;li&gt;ÊîØÊåÅ ÊùúÊØî„ÄÅHi-Res&lt;/li&gt;&lt;/ul&gt; |
| Èü≥‰πê    | ‚úÖ Â∑≤ÂÆåÊàê | &lt;ul&gt;&lt;li&gt;ÊîØÊåÅÊó†Êçü FLAC„ÄÅ320Kbps Èü≥‰πê / Ê≠åÂçï&lt;/li&gt;&lt;/ul&gt; |
| ÂéÜÂè≤ÂºπÂπï | ‚úÖ Â∑≤ÂÆåÊàê | &lt;ul&gt;&lt;li&gt;ASS Â≠óÂπïÊ†ºÂºè&lt;/li&gt;&lt;li&gt;ProtoBuf Ëß£ÊûêÊñπÂºè&lt;/li&gt;&lt;/ul&gt; |
| ÂÆûÊó∂ÂºπÂπï | ‚úÖ Â∑≤ÂÆåÊàê | &lt;ul&gt;&lt;li&gt;ASS Â≠óÂπïÊ†ºÂºè&lt;/li&gt;&lt;li&gt;XML„ÄÅProtoBuf Ëß£ÊûêÊñπÂºè&lt;/li&gt;&lt;/ul&gt; |
| Â∞ÅÈù¢    | ‚úÖ Â∑≤ÂÆåÊàê | ÊîØÊåÅÁï™Ââß / ÁîµÂΩ±Êµ∑Êä•Á≠âÁ≠â |
| Â≠óÂπï    | ‚úÖ Â∑≤ÂÆåÊàê | SRT Ê†ºÂºè |
| AIÊÄªÁªì  | ‚úÖ Â∑≤ÂÆåÊàê | MarkdownÊ†ºÂºèÔºå**Êù•Ëá™ÂìîÂì©ÂìîÂì© `AI Â∞èÂä©Êâã`**&lt;br&gt;*Áî±Shanghai-Bilibili index-20231207Â§ßÊ®°ÂûãÊèê‰æõÊäÄÊúØÊîØÊåÅ* |
| Êî∂ËóèÂ§π  | ‚úÖ Â∑≤ÂÆåÊàê | FID Âè∑Ëß£Êûê |
| ÂÖÉÊï∞ÊçÆ  | ‚úÖ Â∑≤ÂÆåÊàê | Â∞ÅÈù¢„ÄÅÊ†áÈ¢ò„ÄÅÁÆÄ‰ªã„ÄÅUP‰∏ª„ÄÅ‰∏ä‰º†Êó∂Èó¥„ÄÅTAGS |
| NFO    | ‚ö†Ô∏è ËøõË°å‰∏≠ | ‰ºòÂÖàÈÄÇÈÖç `Emby` |

### ÁôªÂΩï &amp; È™åËØÅÁõ∏ÂÖ≥

| ÂäüËÉΩ           | Áä∂ÊÄÅ       |
|----------------|------------|
| Êâ´Á†ÅÁôªÂΩï        | ‚úÖ Â∑≤ÂÆåÊàê |
| ÂØÜÁ†ÅÁôªÂΩï        | ‚úÖ Â∑≤ÂÆåÊàê |
| Áü≠‰ø°ÁôªÂΩï        | ‚úÖ Â∑≤ÂÆåÊàê |
| Ëá™Âä®Âà∑Êñ∞ÁôªÂΩïÁä∂ÊÄÅ | ‚úÖ Â∑≤ÂÆåÊàê |
| ÂèÇÊï∞Á≠æÂêç        | ‚úÖ Â∑≤ÂÆåÊàê |
| È£éÊéßÈ™åËØÅ        | ‚úÖ Â∑≤ÂÆåÊàê |
| ÊåáÁ∫πÈ™åËØÅ        | ‚úÖ Â∑≤ÂÆåÊàê |

## üåé ÂõΩÈôÖÂåñ / Internationalization

I work on translations primarily to improve my expression in these languages.

**Simplified Chinese (zh-CN)** is the primary language maintained, and acts as the source for other translations.

| Code           | Status      |
|----------------|-------------|
| zh-CN          | ‚úÖ Complete |
| zh-HK          | ‚úÖ Complete |
| ja-JP          | ‚úÖ Complete |
| en-US          | ‚úÖ Complete |

## üíª Êú¨Âú∞ÂºÄÂèë &amp; ÊûÑÂª∫

&gt; Rust &gt;= **1.70**&lt;br&gt;
&gt; Node.js &gt;= **20**

- ÂÖãÈöÜÈ°πÁõÆÂπ∂ÂÆâË£Ö‰æùËµñ
```bash
git clone https://github.com/btjawa/BiliTools.git
cd BiliTools
```

- ÂêØÂä®ÂºÄÂèëÊúçÂä°Âô®
```bash
npm run tauri dev
```

- ÊûÑÂª∫ÂèëË°åÁâà
```bash
npm run tauri build
```

## ‚ö° ËµûÂä©

È°πÁõÆÂ∑≤ËææÂà∞ 1k StarsÔºåÂ∏åÊúõÂ§ßÂÆ∂Â§öÂ§öÊîØÊåÅÔºÅ

ÁõÆÂâçÊ≠£Âú®ÂºÄÂèë `v1.3.8` ~ `v1.4.0`ÔºåÂ±äÊó∂‰ºöÊúâÂ§ßÈáèÊõ¥Êñ∞

Â¶ÇÊûú‰Ω†ÂñúÊ¨¢ÔºåÂπ∂ÊÉ≥Âä©ÂäõËøô‰∏™È°πÁõÆÔºåÂèØ‰ª•ËÄÉËôëËØ∑ÊàëÂñùÊùØÂíñÂï°~

- [Áà±ÂèëÁîµ](https://afdian.com/a/BTJ_Shiroi)
- *ÂæÆ‰ø°ÊîØ‰ªò (ÂáÜÂ§á‰∏≠)*

‰Ω†ÁöÑÊîØÊåÅÂ∞ÜÊòØÊàëÊåÅÁª≠Áª¥Êä§ÁöÑ‰∏ÄÂ§ßÂä®ÂäõÔºÅ

## üí´ È∏£Ë∞¢

Waiting for another contributor...

- [bilibili-API-collect](https://github.com/SocialSisterYi/bilibili-API-collect) ÈÉ®ÂàÜÊé•Âè£ËØ∑Ê±ÇËßÑËåÉÂèÇËÄÉ

- [aria2](https://github.com/aria2/aria2) Áî®‰∫éÂ§öÁ∫øÁ®ãÈ´òÊïà‰∏ãËΩΩÊï∞ÊçÆ

- [ffmpeg](https://git.ffmpeg.org/ffmpeg.git) Áî®‰∫éÊ∑∑ÊµÅ‰∏éÂÖ∂‰ªñÂ™í‰ΩìÂ§ÑÁêÜ

- [DanmakuFactory](https://github.com/hihkm/DanmakuFactory) Áî®‰∫éÂ∞Ü XML ËΩ¨Êç¢‰∏∫ ASS Â≠óÂπï

&lt;picture&gt;
&lt;source
    media=&quot;(prefers-color-scheme: dark)&quot;
    srcset=&quot;https://api.star-history.com/svg?repos=btjawa/BiliTools&amp;type=Date&amp;theme=dark&quot;
/&gt;
&lt;source
    media=&quot;(prefers-color-scheme: light)&quot;
    srcset=&quot;https://api.star-history.com/svg?repos=btjawa/BiliTools&amp;type=Date&quot;
/&gt;
&lt;img
    alt=&quot;Star History Chart&quot;
    src=&quot;https://api.star-history.com/svg?repos=btjawa/BiliTools&amp;type=Date&quot;
/&gt;
&lt;/picture&gt;

## Â£∞Êòé

Êú¨È°πÁõÆÈÅµÂæ™ [GPL-3.0-or-later](/LICENSE) ÂºÄÊ∫êËÆ∏ÂèØËØÅ„ÄÇ

- Êú¨È°πÁõÆÂÖçË¥πÂºÄÊ∫êÔºåÊó®Âú®Â≠¶‰π†ÊäÄÊúØ‰∏éÁ†îÁ©∂ÔºõËØ∑ÈÅµÂÆàÁõ∏ÂÖ≥Ê≥ïÂæãÊ≥ïËßÑÔºåÂàáÂãøÊª•Áî®Ôºå‰ΩúËÄÖ‰∏çÂØπÂõ†‰∏çÂΩì‰ΩøÁî®ËÄåÂØºËá¥ÁöÑ‰ªª‰ΩïÂêéÊûúË¥üË¥£„ÄÇ
- Êú¨È°πÁõÆÊâÄÊúâËØ∑Ê±ÇË∞ÉÁî®Âùá‰∏∫ **ËØ∑Ê±ÇÁî®Êà∑Â∑≤Ëé∑ËÆøÈóÆÊùÉÈôêÁöÑÂú®Á∫øËµÑÊ∫ê**Ôºå‰∏çÂåÖÂê´‰ªª‰ΩïÂΩ¢ÂºèÁöÑÁªïËøáÊ†°È™å„ÄÅÁ†¥Ëß£‰ªòËµÑÊ∫êÁ≠âÁ≠âË°å‰∏∫„ÄÇ
- Êú¨È°πÁõÆ‰∫ßÁîü‰∏éËé∑ÂèñÁöÑÊâÄÊúâÊï∞ÊçÆÂ∞Ü‰ΩøÁî® `SQLite` Ê†ºÂºèÊòéÊñáÂ≠òÂÇ®‰∫é‰ª•‰∏ãË∑ØÂæÑÔºö

&gt; Windows: `%AppData%\com.btjawa.bilitools\Storage`&lt;br&gt;
&gt; macOS: `$HOME/Library/Application Support/com.btjawa.bilitools/Storage`&lt;br&gt;
&gt; Linux: `$HOME/.local/share/com.btjawa.bilitools/Storage`

- Áî±‰∫éÊú¨È°πÁõÆÁöÑÁâπÊÆäÊÄßÔºå‰ΩøÁî®ËÄÖÂ∫îËá™Ë°åÊâøÊãÖË¥¶Âè∑Áõ∏ÂÖ≥È£éÈô©„ÄÇ
- Â¶ÇÊúâ‰æµÊùÉÔºåÂèØÈöèÊó∂ËÅîÁ≥ªÂ§ÑÁêÜ„ÄÇ</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[toeverything/AFFiNE]]></title>
            <link>https://github.com/toeverything/AFFiNE</link>
            <guid>https://github.com/toeverything/AFFiNE</guid>
            <pubDate>Sun, 06 Jul 2025 00:05:36 GMT</pubDate>
            <description><![CDATA[There can be more than Notion and Miro. AFFiNE(pronounced […ô‚Äòfain]) is a next-gen knowledge base that brings planning, sorting and creating all together. Privacy first, open-source, customizable and ready to use.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/toeverything/AFFiNE">toeverything/AFFiNE</a></h1>
            <p>There can be more than Notion and Miro. AFFiNE(pronounced […ô‚Äòfain]) is a next-gen knowledge base that brings planning, sorting and creating all together. Privacy first, open-source, customizable and ready to use.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 52,733</p>
            <p>Forks: 3,523</p>
            <p>Stars today: 228 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;

&lt;h1 style=&quot;border-bottom: none&quot;&gt;
    &lt;b&gt;&lt;a href=&quot;https://affine.pro&quot;&gt;AFFiNE.Pro&lt;/a&gt;&lt;/b&gt;&lt;br /&gt;
    Write, Draw and Plan All at Once
    &lt;br&gt;
&lt;/h1&gt;
&lt;a href=&quot;https://affine.pro/download&quot;&gt;
    &lt;img alt=&quot;affine logo&quot; src=&quot;https://cdn.affine.pro/Github_hero_image1.png&quot; style=&quot;width: 100%&quot;&gt;
&lt;/a&gt;
&lt;br/&gt;
&lt;p align=&quot;center&quot;&gt;
  A privacy-focused, local-first, open-source, and ready-to-use alternative for Notion &amp; Miro. &lt;br /&gt;
  One hyper-fused platform for wildly creative minds.
&lt;/p&gt;

&lt;br/&gt;

&lt;br/&gt;
&lt;a href=&quot;https://www.producthunt.com/posts/affine-3?utm_source=badge-featured&amp;utm_medium=badge&amp;utm_souce=badge-affine&amp;#0045;3&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=440671&amp;theme=light&quot; alt=&quot;AFFiNE - One&amp;#0032;app&amp;#0032;for&amp;#0032;all&amp;#0032;&amp;#0045;&amp;#0032;Where&amp;#0032;Notion&amp;#0032;meets&amp;#0032;Miro | Product Hunt&quot; style=&quot;width: 250px; height: 54px;&quot; width=&quot;250&quot; height=&quot;54&quot; /&gt;&lt;/a&gt;
&lt;br/&gt;
&lt;br/&gt;

&lt;div align=&quot;left&quot; valign=&quot;middle&quot;&gt;
&lt;a href=&quot;https://runblaze.dev&quot;&gt;
 &lt;picture&gt;
   &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://www.runblaze.dev/logo_dark.png&quot;&gt;
   &lt;img align=&quot;right&quot; src=&quot;https://www.runblaze.dev/logo_light.png&quot; height=&quot;102px&quot;/&gt;
 &lt;/picture&gt;
&lt;/a&gt;

&lt;br style=&quot;display: none;&quot;/&gt;

_Special thanks to [Blaze](https://runblaze.dev) for their support of this project. They provide high-performance Apple Silicon macOS and Linux (AMD64 &amp; ARM64) runners for GitHub Actions, greatly reducing our automated build times._

&lt;/div&gt;

&lt;br/&gt;
&lt;br/&gt;

&lt;div align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://affine.pro&quot;&gt;Home Page&lt;/a&gt; |
    &lt;a href=&quot;https://affine.pro/redirect/discord&quot;&gt;Discord&lt;/a&gt; |
    &lt;a href=&quot;https://app.affine.pro&quot;&gt;Live Demo&lt;/a&gt; |
    &lt;a href=&quot;https://affine.pro/blog/&quot;&gt;Blog&lt;/a&gt; |
    &lt;a href=&quot;https://docs.affine.pro/&quot;&gt;Documentation&lt;/a&gt;
&lt;/div&gt;
&lt;br/&gt;

[![Releases](https://img.shields.io/github/downloads/toeverything/AFFiNE/total)](https://github.com/toeverything/AFFiNE/releases/latest)
[![All Contributors][all-contributors-badge]](#contributors)
[![TypeScript-version-icon]](https://www.typescriptlang.org/)

&lt;/div&gt;

&lt;br /&gt;
&lt;div align=&quot;center&quot;&gt;
&lt;em&gt;Docs, canvas and tables are hyper-merged with AFFiNE - just like the word affine (…ôÀàf å…™n | a-fine).&lt;/em&gt;
&lt;/div&gt;
&lt;br /&gt;

&lt;div align=&quot;center&quot;&gt;
&lt;img src=&quot;https://github.com/toeverything/AFFiNE/assets/79301703/49a426bb-8d2b-4216-891a-fa5993642253&quot; style=&quot;width: 100%&quot;/&gt;
&lt;/div&gt;

## Getting started &amp; staying tuned with us.

Star us, and you will receive all release notifications from GitHub without any delay!

&lt;img src=&quot;https://user-images.githubusercontent.com/79301703/230891830-0110681e-8c7e-483b-b6d9-9e42b291b9ef.gif&quot; style=&quot;width: 100%&quot;/&gt;

## What is AFFiNE

[AFFiNE](https://affine.pro) is an open-source, all-in-one workspace and an operating system for all the building blocks that assemble your knowledge base and much more -- wiki, knowledge management, presentation and digital assets. It&#039;s a better alternative to Notion and Miro.

## Features

**A true canvas for blocks in any form. Docs and whiteboard are now fully merged.**

- Many editor apps claim to be a canvas for productivity, but AFFiNE is one of the very few which allows you to put any building block on an edgeless canvas -- rich text, sticky notes, any embedded web pages, multi-view databases, linked pages, shapes and even slides. We have it all.

**Multimodal AI partner ready to kick in any work**

- Write up professional work report? Turn an outline into expressive and presentable slides? Summary an article into a well-structured mindmap? Sorting your job plan and backlog for tasks? Or... draw and code prototype apps and web pages directly all with one prompt? With you, [AFFiNE AI](https://affine.pro/ai) pushes your creativity to the edge of your imagination,just like [Canvas AI](https://affine.pro/blog/best-canvas-ai) to generate mind map for brainstorming.

**Local-first &amp; Real-time collaborative**

- We love the idea of local-first that you always own your data on your disk, in spite of the cloud. Furthermore, AFFiNE supports real-time sync and collaborations on web and cross-platform clients.

**Self-host &amp; Shape your own AFFiNE**

- You have the freedom to manage, self-host, fork and build your own AFFiNE. Plugin community and third-party blocks are coming soon. More tractions on [Blocksuite](https://blocksuite.io). Check there to learn how to [self-host AFFiNE](https://docs.affine.pro/self-host-affine).

## Acknowledgement

‚ÄúWe shape our tools and thereafter our tools shape us‚Äù. A lot of pioneers have inspired us along the way, e.g.:

- Quip &amp; Notion with their great concept of ‚Äúeverything is a block‚Äù
- Trello with their Kanban
- Airtable &amp; Miro with their no-code programmable datasheets
- Miro &amp; Whimiscal with their edgeless visual whiteboard
- Remote &amp; Capacities with their object-based tag system

There is a large overlap of their atomic ‚Äúbuilding blocks‚Äù between these apps. They are not open source, nor do they have a plugin system like Vscode for contributors to customize. We want to have something that contains all the features we love and also goes one step even further.

Thanks for checking us out, we appreciate your interest and sincerely hope that AFFiNE resonates with you! üéµ Checking https://affine.pro/ for more details ions.

## Contributing

| Bug Reports                                                                                                                                         | Feature Requests                                                                                                                                               | Questions/Discussions                                                         | AFFiNE Community                                          |
| --------------------------------------------------------------------------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------- | --------------------------------------------------------- |
| [Create a bug report](https://github.com/toeverything/AFFiNE/issues/new?assignees=&amp;labels=bug%2Cproduct-review&amp;template=BUG-REPORT.yml&amp;title=TITLE) | [Submit a feature request](https://github.com/toeverything/AFFiNE/issues/new?assignees=&amp;labels=feat%2Cproduct-review&amp;template=FEATURE-REQUEST.yml&amp;title=TITLE) | [Check GitHub Discussion](https://github.com/toeverything/AFFiNE/discussions) | [Vist the AFFiNE Community](https://community.affine.pro) |
| Something isn&#039;t working as expected                                                                                                                 | An idea for a new feature, or improvements                                                                                                                     | Discuss and ask questions                                                     | A place to ask, learn and engage with others              |

Calling all developers, testers, tech writers and more! Contributions of all types are more than welcome, you can read more in [docs/types-of-contributions.md](docs/types-of-contributions.md). If you are interested in contributing code, read our [docs/CONTRIBUTING.md](docs/CONTRIBUTING.md) and feel free to check out our GitHub issues to get stuck in to show us what you‚Äôre made of.

**Before you start contributing, please make sure you have read and accepted our [Contributor License Agreement]. To indicate your agreement, simply edit this file and submit a pull request.**

For **bug reports**, **feature requests** and other **suggestions** you can also [create a new issue](https://github.com/toeverything/AFFiNE/issues/new/choose) and choose the most appropriate template for your feedback.

For **translation** and **language support** you can visit our [i18n General Space](https://community.affine.pro/c/i18n-general).

Looking for **other ways to contribute** and wondering where to start? Check out the [AFFiNE Ambassador program](https://community.affine.pro/c/start-here/affine-ambassador), we work closely with passionate community members and provide them with a wide range of support and resources.

If you have questions, you are welcome to contact us. One of the best places to get more info and learn more is in the [AFFiNE Community](https://community.affine.pro) where you can engage with other like-minded individuals.

## Templates

AFFiNE now provides pre-built [templates](https://affine.pro/templates) from our team. Following are the Top 10 most popular templates among AFFiNE users,if you want to contribute, you can contribute your own template so other people can use it too.

- [vision board template](https://affine.pro/templates/category-vision-board-template)
- [one pager template](https://affine.pro/templates/category-one-pager-template-free)
- [sample lesson plan math template](https://affine.pro/templates/sample-lesson-plan-math-template)
- [grr lesson plan template free](https://affine.pro/templates/grr-lesson-plan-template-free)
- [free editable lesson plan template for pre k](https://affine.pro/templates/free-editable-lesson-plan-template-for-pre-k)
- [high note collection planners](https://affine.pro/templates/high-note-collection-planners)
- [digital planner](https://affine.pro/templates/category-digital-planner)
- [ADHD Planner](https://affine.pro/templates/adhd-planner)
- [Reading Log](https://affine.pro/templates/reading-log)
- [Cornell Notes Template](https://affine.pro/templates/category-cornell-notes-template)

## Blog

Welcome to the AFFiNE blog section! Here, you‚Äôll find the latest insights, tips, and guides on how to maximize your experience with AFFiNE and AFFiNE AI, the leading Canvas AI tool for flexible note-taking and creative organization.

- [vision board template](https://affine.pro/blog/8-free-printable-vision-board-templates-examples-2023)
- [ai homework helper](https://affine.pro/blog/ai-homework-helper)
- [vision board maker](https://affine.pro/blog/vision-board-maker)
- [itinerary template](https://affine.pro/blog/free-customized-travel-itinerary-planner-templates)
- [one pager template](https://affine.pro/blog/top-12-one-pager-examples-how-to-create-your-own)
- [cornell notes template](https://affine.pro/blog/the-cornell-notes-template-and-system-learning-tips)
- [swot chart template](https://affine.pro/blog/top-10-free-editable-swot-analysis-template-examples)
- [apps like luna task](https://affine.pro/blog/apps-like-luna-task)
- [note taking ai from rough notes to mind map](https://affine.pro/blog/dynamic-AI-notes)
- [canvas ai](https://affine.pro/blog/best-canvas-ai)
- [one pager](https://affine.pro/blog/top-12-one-pager-examples-how-to-create-your-own)
- [SOP Template](https://affine.pro/blog/how-to-write-sop-step-by-step-guide-5-best-free-tools-templates)
- [Chore Chart](https://affine.pro/blog/10-best-free-chore-chart-templates-kids-adults)

## Ecosystem

| Name                                             |                            |                                                                                                                                         |
| ------------------------------------------------ | -------------------------- | --------------------------------------------------------------------------------------------------------------------------------------- |
| [@affine/component](packages/frontend/component) | AFFiNE Component Resources | ![](https://img.shields.io/codecov/c/github/toeverything/affine?style=flat-square)                                                      |
| [@toeverything/theme](packages/common/theme)     | AFFiNE theme               | [![](https://img.shields.io/npm/dm/@toeverything/theme?style=flat-square&amp;color=eee)](https://www.npmjs.com/package/@toeverything/theme) |

## Upstreams

We would also like to give thanks to open-source projects that make AFFiNE possible:

- [Blocksuite](https://github.com/toeverything/BlockSuite) - üí† BlockSuite is the open-source collaborative editor project behind AFFiNE.
- [OctoBase](https://github.com/toeverything/OctoBase) - üêô OctoBase is the open-source database behind AFFiNE, local-first, yet collaborative. A light-weight, scalable, data engine written in Rust.
- [yjs](https://github.com/yjs/yjs) - Fundamental support of CRDTs for our implementation on state management and data sync.
- [electron](https://github.com/electron/electron) - Build cross-platform desktop apps with JavaScript, HTML, and CSS.
- [React](https://github.com/facebook/react) - The library for web and native user interfaces.
- [napi-rs](https://github.com/napi-rs/napi-rs) - A framework for building compiled Node.js add-ons in Rust via Node-API.
- [Jotai](https://github.com/pmndrs/jotai) - Primitive and flexible state management for React.
- [async-call-rpc](https://github.com/Jack-Works/async-call-rpc) - A lightweight JSON RPC client &amp; server.
- [Vite](https://github.com/vitejs/vite) - Next generation frontend tooling.
- Other upstream [dependencies](https://github.com/toeverything/AFFiNE/network/dependencies).

Thanks a lot to the community for providing such powerful and simple libraries, so that we can focus more on the implementation of the product logic, and we hope that in the future our projects will also provide a more easy-to-use knowledge base for everyone.

## Contributors

We would like to express our gratitude to all the individuals who have already contributed to AFFiNE! If you have any AFFiNE-related project, documentation, tool or template, please feel free to contribute it by submitting a pull request to our curated list on GitHub: [awesome-affine](https://github.com/toeverything/awesome-affine).

&lt;a href=&quot;https://github.com/toeverything/affine/graphs/contributors&quot;&gt;
  &lt;img alt=&quot;contributors&quot; src=&quot;https://opencollective.com/affine/contributors.svg?width=890&amp;button=false&quot; /&gt;
&lt;/a&gt;

## Self-Host

Begin with Docker to deploy your own feature-rich, unrestricted version of AFFiNE. Our team is diligently updating to the latest version. For more information on how to self-host AFFiNE, please refer to our [documentation](https://docs.affine.pro/self-host-affine).

[![Run on ClawCloud](https://raw.githubusercontent.com/ClawCloud/Run-Template/refs/heads/main/Run-on-ClawCloud.svg)](https://template.run.claw.cloud/?openapp=system-fastdeploy%3FtemplateName%3Daffine)

## Hiring

Some amazing companies, including AFFiNE, are looking for developers! Are you interested in joining AFFiNE or its partners? Check out our [Discord channel](https://affine.pro/redirect/discord) for some of the latest jobs available.

## Feature Request

For feature requests, please see [community.affine.pro](https://community.affine.pro/c/feature-requests/).

## Building

### Codespaces

From the GitHub repo main page, click the green &quot;Code&quot; button and select &quot;Create codespace on master&quot;. This will open a new Codespace with the (supposedly auto-forked
AFFiNE repo cloned, built, and ready to go.

### Local

See [BUILDING.md] for instructions on how to build AFFiNE from source code.

## Contributing

We welcome contributions from everyone.
See [docs/contributing/tutorial.md](./docs/contributing/tutorial.md) for details.

## Thanks

&lt;a href=&quot;https://www.chromatic.com/&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/321738/84662277-e3db4f80-af1b-11ea-88f5-91d67a5e59f6.png&quot; width=&quot;153&quot; height=&quot;30&quot; alt=&quot;Chromatic&quot; /&gt;&lt;/a&gt;

Thanks to [Chromatic](https://www.chromatic.com/) for providing the visual testing platform that helps us review UI changes and catch visual regressions.

## License

### Editions

- AFFiNE Community Edition (CE) is the current available version, it&#039;s free for self-host under the MIT license.

- AFFiNE Enterprise Edition (EE) is yet to be published, it will have more advanced features and enterprise-oriented offerings, including but not exclusive to rebranding and SSO, advanced admin and audit, etc., you may refer to https://affine.pro/pricing for more information

See [LICENSE] for details.

[all-contributors-badge]: https://img.shields.io/github/contributors/toeverything/AFFiNE
[license]: ./LICENSE
[building.md]: ./docs/BUILDING.md
[update page]: https://affine.pro/blog?tag=Release%20Note
[jobs available]: ./docs/jobs.md
[latest packages]: https://github.com/toeverything/AFFiNE/pkgs/container/affine-self-hosted
[contributor license agreement]: https://github.com/toeverything/affine/edit/canary/.github/CLA.md
[stars-icon]: https://img.shields.io/github/stars/toeverything/AFFiNE.svg?style=flat&amp;logo=github&amp;colorB=red&amp;label=stars
[codecov]: https://codecov.io/gh/toeverything/affine/branch/canary/graphs/badge.svg?branch=canary
[node-version-icon]: https://img.shields.io/badge/node-%3E=18.16.1-success
[typescript-version-icon]: https://img.shields.io/github/package-json/dependency-version/toeverything/affine/dev/typescript
[react-version-icon]: https://img.shields.io/github/package-json/dependency-version/toeverything/AFFiNE/react?filename=packages%2Ffrontend%2Fcore%2Fpackage.json&amp;color=rgb(97%2C228%2C251)
[blocksuite-icon]: https://img.shields.io/github/package-json/dependency-version/toeverything/AFFiNE/@blocksuite/store?color=6880ff&amp;filename=packages%2Ffrontend%2Fcore%2Fpackage.json&amp;label=blocksuite
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[RSSNext/Folo]]></title>
            <link>https://github.com/RSSNext/Folo</link>
            <guid>https://github.com/RSSNext/Folo</guid>
            <pubDate>Sun, 06 Jul 2025 00:05:35 GMT</pubDate>
            <description><![CDATA[üß° Follow everything in one place]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/RSSNext/Folo">RSSNext/Folo</a></h1>
            <p>üß° Follow everything in one place</p>
            <p>Language: TypeScript</p>
            <p>Stars: 27,537</p>
            <p>Forks: 1,203</p>
            <p>Stars today: 118 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/RSSNext/Folo&quot;&gt;
    &lt;img src=&quot;https://github.com/RSSNext/follow/assets/41265413/c6c02ad5-cddc-46f5-8420-a47afe1c82fe&quot; alt=&quot;Logo&quot; width=&quot;80&quot; height=&quot;80&quot;&gt;
  &lt;/a&gt;

  &lt;h3&gt;Folo&lt;/h3&gt;
  &lt;p&gt;
    &lt;img src=&quot;https://github.com/user-attachments/assets/cbe924f2-d8b0-48b0-814e-7c06ccb1911c&quot; height=&quot;60&quot; /&gt;
    &amp;nbsp;&amp;nbsp;&amp;nbsp;
    &lt;img src=&quot;https://github.com/user-attachments/assets/6997a236-3df3-49d5-98a4-514f6d1a02c4&quot; height=&quot;60&quot; /&gt;
    &lt;br /&gt;
    &lt;br /&gt;
    &lt;a href=&quot;https://github.com/RSSNext/Folo/stargazers&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/RSSNext/Follow?color=ffcb47&amp;labelColor=black&amp;style=flat-square&amp;logo=github&amp;label=Stars&quot; /&gt;&lt;/a&gt;
    &lt;a href=&quot;https://github.com/RSSNext/Folo/graphs/contributors&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/contributors/RSSNext/Folo?style=flat-square&amp;logo=github&amp;label=Contributors&amp;labelColor=black&quot; /&gt;&lt;/a&gt;
    &lt;a href=&quot;https://status.follow.is/&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://status.follow.is/api/badge/18/uptime?color=%2344CC10&amp;labelColor=black&amp;style=flat-square&quot;/&gt;&lt;/a&gt;
    &lt;a href=&quot;https://github.com/RSSNext/Folo/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/RSSNext/Folo/total?color=369eff&amp;labelColor=black&amp;logo=github&amp;style=flat-square&amp;label=Downloads&quot; /&gt;&lt;/a&gt;
    &lt;a href=&quot;https://x.com/intent/follow?screen_name=follow_app_&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Follow-blue?color=1d9bf0&amp;logo=x&amp;labelColor=black&amp;style=flat-square&quot; /&gt;&lt;/a&gt;
    &lt;a href=&quot;https://discord.gg/followapp&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fdiscord.com%2Fapi%2Finvites%2Ffollowapp%3Fwith_counts%3Dtrue&amp;query=approximate_member_count&amp;color=5865F2&amp;label=Discord&amp;labelColor=black&amp;logo=discord&amp;logoColor=white&amp;style=flat-square&quot;/&gt;&lt;/a&gt;
    &lt;br /&gt;
    &lt;a href=&quot;https://github.com/RSSNext/Folo/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/package-json/v/RSSNext/Folo?filename=%2Fapps%2Fmobile%2Fpackage.json&amp;style=flat-square&amp;logo=data%3Aimage%2Fsvg%2Bxml%3Bbase64%2CPHN2ZyB3aWR0aD0iNTUiIGhlaWdodD0iNTUiIHZpZXdCb3g9IjAgMCA1NSA1NSIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KPHBhdGggZD0iTTQxLjc5NDQgMTBIMTguNjc4NkMxNS44ODMzIDEwIDEzLjYxNzIgMTIuMTk2NSAxMy42MTcyIDE0LjkwNTlDMTMuNjE3MiAxNy42MTU0IDE1Ljg4MzMgMTkuODExOSAxOC42Nzg2IDE5LjgxMTlINDEuNzk0NEM0NC41ODk5IDE5LjgxMTkgNDYuODU1OSAxNy42MTU0IDQ2Ljg1NTkgMTQuOTA1OUM0Ni44NTU5IDEyLjE5NjUgNDQuNTg5OSAxMCA0MS43OTQ0IDEwWiIgZmlsbD0id2hpdGUiLz4KPHBhdGggZD0iTTI5LjQ2ODMgMjIuNzU1OUgxNC4wNjE1QzExLjI2NjEgMjIuNzU1OSA5IDI0Ljk1MjMgOSAyNy42NjE4QzkgMzAuMzcxMyAxMS4yNjYxIDMyLjU2NzcgMTQuMDYxNSAzMi41Njc3SDI5LjQ2ODNDMzIuMjYzNyAzMi41Njc3IDM0LjUyOTggMzAuMzcxMyAzNC41Mjk4IDI3LjY2MThDMzQuNTI5OCAyNC45NTIzIDMyLjI2MzcgMjIuNzU1OSAyOS40NjgzIDIyLjc1NTlaIiBmaWxsPSJ3aGl0ZSIvPgo8cGF0aCBkPSJNMzAuOTU4OSA0MC40MjcyQzMwLjk1ODkgMzcuNzE3OSAyOC42OTI4IDM1LjUyMTUgMjUuODk3NCAzNS41MjE1QzIzLjEwMjEgMzUuNTIxNSAyMC44MzU5IDM3LjcxNzkgMjAuODM1OSA0MC40MjcyQzIwLjgzNTkgNDMuMTM3MSAyMy4xMDIxIDQ1LjMzMzIgMjUuODk3NCA0NS4zMzMyQzI4LjY5MjggNDUuMzMzMiAzMC45NTg5IDQzLjEzNzEgMzAuOTU4OSA0MC40MjcyWiIgZmlsbD0id2hpdGUiLz4KPC9zdmc%2BCg%3D%3D&amp;label=Mobile&amp;labelColor=black&amp;color=FF5E01&quot; /&gt;&lt;/a&gt;
    &lt;a href=&quot;https://apps.apple.com/us/app/folo-follow-everything/id6739802604&quot;&gt;&lt;img src=&quot;https://img.shields.io/itunes/v/6739802604?style=flat-square&amp;logo=apple&amp;label=App%20Store&amp;color=FF5C00&amp;labelColor=black&quot; /&gt;&lt;/a&gt;
    &lt;a href=&quot;https://play.google.com/store/apps/details?id=is.follow&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/package-json/v/RSSNext/Folo?filename=%2Fapps%2Fmobile%2Fpackage.json&amp;style=flat-square&amp;logo=google-play&amp;label=Google%20Play&amp;labelColor=black&amp;color=FF5E01&quot;/&gt;&lt;/a&gt;
    &lt;a href=&quot;https://github.com/RSSNext/Folo/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/package-json/v/RSSNext/Folo?filename=%2Fapps%2Fdesktop%2Fpackage.json&amp;style=flat-square&amp;logo=data%3Aimage%2Fsvg%2Bxml%3Bbase64%2CPHN2ZyB3aWR0aD0iNTUiIGhlaWdodD0iNTUiIHZpZXdCb3g9IjAgMCA1NSA1NSIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KPHBhdGggZD0iTTQxLjc5NDQgMTBIMTguNjc4NkMxNS44ODMzIDEwIDEzLjYxNzIgMTIuMTk2NSAxMy42MTcyIDE0LjkwNTlDMTMuNjE3MiAxNy42MTU0IDE1Ljg4MzMgMTkuODExOSAxOC42Nzg2IDE5LjgxMTlINDEuNzk0NEM0NC41ODk5IDE5LjgxMTkgNDYuODU1OSAxNy42MTU0IDQ2Ljg1NTkgMTQuOTA1OUM0Ni44NTU5IDEyLjE5NjUgNDQuNTg5OSAxMCA0MS43OTQ0IDEwWiIgZmlsbD0id2hpdGUiLz4KPHBhdGggZD0iTTI5LjQ2ODMgMjIuNzU1OUgxNC4wNjE1QzExLjI2NjEgMjIuNzU1OSA5IDI0Ljk1MjMgOSAyNy42NjE4QzkgMzAuMzcxMyAxMS4yNjYxIDMyLjU2NzcgMTQuMDYxNSAzMi41Njc3SDI5LjQ2ODNDMzIuMjYzNyAzMi41Njc3IDM0LjUyOTggMzAuMzcxMyAzNC41Mjk4IDI3LjY2MThDMzQuNTI5OCAyNC45NTIzIDMyLjI2MzcgMjIuNzU1OSAyOS40NjgzIDIyLjc1NTlaIiBmaWxsPSJ3aGl0ZSIvPgo8cGF0aCBkPSJNMzAuOTU4OSA0MC40MjcyQzMwLjk1ODkgMzcuNzE3OSAyOC42OTI4IDM1LjUyMTUgMjUuODk3NCAzNS41MjE1QzIzLjEwMjEgMzUuNTIxNSAyMC44MzU5IDM3LjcxNzkgMjAuODM1OSA0MC40MjcyQzIwLjgzNTkgNDMuMTM3MSAyMy4xMDIxIDQ1LjMzMzIgMjUuODk3NCA0NS4zMzMyQzI4LjY5MjggNDUuMzMzMiAzMC45NTg5IDQzLjEzNzEgMzAuOTU4OSA0MC40MjcyWiIgZmlsbD0id2hpdGUiLz4KPC9zdmc%2BCg%3D%3D&amp;label=Desktop&amp;labelColor=black&amp;color=FF5E01&quot; /&gt;&lt;/a&gt;
    &lt;a href=&quot;https://apps.apple.com/us/app/folo-follow-everything/id6739802604&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Ffolo-mac-app-store-version.rss3.workers.dev%2F&amp;query=version&amp;prefix=v&amp;style=flat-square&amp;logo=apple&amp;label=Mac%20App%20Store&amp;labelColor=black&amp;color=FF5E01&amp;cacheSeconds=3600&quot; /&gt;&lt;/a&gt;
    &lt;a href=&quot;https://apps.microsoft.com/detail/9nvfzpv0v0ht?mode=direct&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Ffolo-microsoft-store-version.rss3.workers.dev%2F&amp;query=version&amp;style=flat-square&amp;logo=data%3Aimage%2Fsvg%2Bxml%3Bbase64%2CPHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyNCIgaGVpZ2h0PSIyNCIgdmlld0JveD0iMCAwIDI0IDI0IiBmaWxsPSJub25lIj48cGF0aCBmaWxsPSIjZmZmIiBkPSJNMyAzaDguNTN2OC41M0gzek0xMi40NjkgM2g4LjUzdjguNTNoLTguNTN6TTMgMTIuNDdoOC41M1YyMUgzek0xMi40NjkgMTIuNDdoOC41M1YyMWgtOC41M3oiLz48L3N2Zz4%3D&amp;logoColor=white&amp;label=Microsoft%20Store&amp;labelColor=black&amp;color=FF5E01&amp;cacheSeconds=3600&amp;prefix=v&quot; /&gt;&lt;/a&gt;
    &lt;br /&gt;
    &lt;br /&gt;
    &lt;!-- &lt;a href=&quot;https://github.com/RSSNext/Folo&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/59b957fb-59ed-4ef0-994e-f6a402a6fe2b&quot; alt=&quot;GitHub Trending&quot; height=&quot;55&quot;/&gt;&lt;/a&gt;
    &lt;br /&gt;
    &lt;br /&gt; --&gt;
    &lt;a href=&quot;https://apps.apple.com/us/app/folo-follow-everything/id6739802604&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/83168d47-b9b1-4f28-abec-4e37075c7f1b&quot; alt=&quot;App Store&quot; width=&quot;52%&quot;/&gt;&lt;/a&gt;
    &lt;a href=&quot;https://apps.apple.com/us/app/folo-follow-everything/id6739802604&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/7b4f27f1-c345-400f-a307-9c61c43263ac&quot; alt=&quot;GitHub Trending&quot; width=&quot;46%&quot;/&gt;&lt;/a&gt;
    &lt;br /&gt;
    &lt;br /&gt;
  &lt;/p&gt;
&lt;/div&gt;

As they say, your thoughts are what you read‚Äîand we‚Äôve been consuming noisy feeds for too long! Folo organizes content into one timeline, keeping you updated on what matters, noise-free. Share lists, explore collections, and enjoy distraction-free browsing.

## üëãüèª Getting Started &amp; Join Our Community

Whether for users or professional developers, Folo will be your open information playground. Please be aware that Folo is currently under active development, and feedback is welcome for any [issue](https://github.com/RSSNext/Folo/issues) encountered.

Feel free to try it using the following methods:

| Operating System | Source                                                                                                                                                                                                                                                                                                                                                                                                                                |
| :--------------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |
| Any              | &lt;a href=&quot;https://app.follow.is&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/51ef7800-b683-4493-83e8-eb4752366997&quot; alt=&quot;Browser&quot; height=&quot;55&quot;/&gt;&lt;/a&gt;                                                                                                                                                                                                                                                            |
| iOS              | &lt;a href=&quot;https://apps.apple.com/us/app/folo-follow-everything/id6739802604&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/a94d8698-2a11-4f43-9b0a-b756b17b61f7&quot; alt=&quot;App Store&quot; height=&quot;55&quot;/&gt;&lt;/a&gt;                                                                                                                                                                                                              |
| Android          | &lt;a href=&quot;https://play.google.com/store/apps/details?id=is.follow&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/0d178e0b-3ace-4f75-bbde-ab3c0a416ce8&quot; alt=&quot;Google Play&quot; height=&quot;55&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/RSSNext/Folo/releases/latest&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/cf61e197-d756-4606-a8ad-fb591f79fdfc&quot; alt=&quot;App Store&quot; height=&quot;55&quot;/&gt;&lt;/a&gt;               |
| macOS            | &lt;a href=&quot;https://apps.apple.com/us/app/folo-follow-everything/id6739802604&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/0d47f902-7fa3-494e-ad28-9ab11af5e6d4&quot; alt=&quot;Microsoft Store&quot; height=&quot;55&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/RSSNext/Folo/releases/latest&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/cf61e197-d756-4606-a8ad-fb591f79fdfc&quot; alt=&quot;App Store&quot; height=&quot;55&quot;/&gt;&lt;/a&gt; |
| Windows          | &lt;a href=&quot;https://apps.microsoft.com/detail/9nvfzpv0v0ht?mode=direct&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/b3112bab-9dd0-4893-9488-890dcb368f70&quot; alt=&quot;Microsoft Store&quot; height=&quot;55&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/RSSNext/Folo/releases/latest&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/cf61e197-d756-4606-a8ad-fb591f79fdfc&quot; alt=&quot;App Store&quot; height=&quot;55&quot;/&gt;&lt;/a&gt;        |
| Linux            | &lt;a href=&quot;https://github.com/RSSNext/Folo/releases/latest&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/cf61e197-d756-4606-a8ad-fb591f79fdfc&quot; alt=&quot;App Store&quot; height=&quot;55&quot;/&gt;&lt;/a&gt;                                                                                                                                                                                                                                |

You can also install using the following methods maintained by our community:

- If you are using Arch Linux, you can install package [folo-appimage](https://aur.archlinux.org/packages/folo-appimage) that maintained by [timochan](https://github.com/ttimochan) and [grtsinry43](https://github.com/grtsinry43).
- If you are using Nix, you can install package [follow](https://github.com/NixOS/nixpkgs/blob/master/pkgs/by-name/fo/follow/package.nix) that maintained by [iosmanthus](https://github.com/iosmanthus).
- If you are using macOS with [Homebrew](https://brew.sh), you can install cask [folo](https://formulae.brew.sh/cask/folo) that maintained by [realSunyz](https://github.com/realSunyz).
- If you are using Windows with [Scoop](https://scoop.sh), you can install manifest [folo](https://github.com/cscnk52/cetacea/blob/master/bucket/folo.json) that maintained by [cscnk52](https://github.com/cscnk52).

| [![Discord](https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fdiscord.com%2Fapi%2Finvites%2Ffollowapp%3Fwith_counts%3Dtrue&amp;query=approximate_member_count&amp;color=5865F2&amp;label=Discord&amp;labelColor=black&amp;logo=discord&amp;logoColor=white&amp;style=flat-square)](https://discord.gg/followapp) | Join our Discord server to connect with developers, request features, and receive support. |
| :--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | :----------------------------------------------------------------------------------------- |
| [![](https://img.shields.io/badge/any_text-Follow-blue?color=2CA5E0&amp;label=_&amp;logo=x&amp;labelColor=black&amp;style=flat-square)](https://x.com/intent/follow?screen_name=follow_app_)                                                                                                                   | Follow us on X/Twitter for product updates and to join in on reward activities.            |

&gt; \[!IMPORTANT]
&gt;
&gt; **Star Us**, You will receive all release notifications from GitHub without any delay \~

![Image](https://github.com/user-attachments/assets/a08f9437-b24c-4388-8f01-2826e09eeaf2)

&lt;a href=&quot;https://next.ossinsight.io/widgets/official/compose-last-28-days-stats?repo_id=783512367&quot; target=&quot;_blank&quot; style=&quot;display: block&quot; align=&quot;center&quot;&gt;
  &lt;picture&gt;
    &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://next.ossinsight.io/widgets/official/compose-last-28-days-stats/thumbnail.png?repo_id=783512367&amp;image_size=auto&amp;color_scheme=dark&quot; width=&quot;655&quot; height=&quot;auto&quot;&gt;
    &lt;img alt=&quot;Performance Stats of RSSNext/Folo - Last 28 days&quot; src=&quot;https://next.ossinsight.io/widgets/official/compose-last-28-days-stats/thumbnail.png?repo_id=783512367&amp;image_size=auto&amp;color_scheme=light&quot; width=&quot;655&quot; height=&quot;auto&quot;&gt;
  &lt;/picture&gt;
&lt;/a&gt;

## ‚ú® Features

### Customized Information Hub

Subscribe to a vast range of feeds and curated lists. Curate your favorites and keep track of what matters most to you.

![](https://github.com/user-attachments/assets/11dc7d21-f5d8-4e41-9269-24fc352aa02b)

### AI At Your Fingertips

A smarter and more efficient browsing with AI-powered features like translation, summary, and more.

![](https://github.com/user-attachments/assets/37cf4f2f-4c5e-4775-86e8-2fa1a1b2ecf5)

### Dynamic Content Support

Because we know content is more than just text. From articles to videos, images to audio ‚Äî Folo gets it all covered.

![](https://github.com/user-attachments/assets/d1379fd6-8767-476e-b0dc-d61753715e26)

### $POWER An Ownership Economy

Tip creators across instantly with $POWER, support content you love, and unlock value in your own work. Your content, your power.

![](https://github.com/user-attachments/assets/23bbcd63-45ca-40c8-83ef-96bd1100b701)

### More Than Just An App

This isn‚Äôt just another app. Folo is a community ‚Äî introducing a new era of openness and community-driven experience.

![](https://github.com/user-attachments/assets/62004a04-eaea-4f5d-bfbf-4e68b6b90286)

## ü§ù Contributing

You are welcome to join the open source community to build together, please check our [Contributing Guide](./CONTRIBUTING.md) for more details.

## üîè Code signing policy

Folo for Windows uses free code signing provided by [SignPath.io](https://about.signpath.io/), certificate by [SignPath Foundation](https://signpath.org/).

Folo for macOS and iOS are signed and notarized by [Apple Developer Program](https://developer.apple.com/programs/).

All released files are verified with [GitHub artifact attestations](https://github.com/RSSNext/Folo/attestations) to ensure their provenance and integrity.

## üìù License

Folo is licensed under the GNU General Public License version 3 with the addition of the following special exception:

All content in the `icons/mgc` directory is copyrighted by https://mgc.mingcute.com/ and cannot be redistributed.

All content in the `lottie` directory is distributed under the [Lottie Simple License](https://lottiefiles.com/page/license).
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[iib0011/omni-tools]]></title>
            <link>https://github.com/iib0011/omni-tools</link>
            <guid>https://github.com/iib0011/omni-tools</guid>
            <pubDate>Sun, 06 Jul 2025 00:05:34 GMT</pubDate>
            <description><![CDATA[Self-hosted collection of powerful web-based tools for everyday tasks. No ads, no tracking, just fast, accessible utilities right from your browser!]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/iib0011/omni-tools">iib0011/omni-tools</a></h1>
            <p>Self-hosted collection of powerful web-based tools for everyday tasks. No ads, no tracking, just fast, accessible utilities right from your browser!</p>
            <p>Language: TypeScript</p>
            <p>Stars: 4,283</p>
            <p>Forks: 209</p>
            <p>Stars today: 163 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
        &lt;img src=&quot;src/assets/logo.png&quot; width=&quot;300&quot; /&gt;
        &lt;br /&gt;&lt;br /&gt;
&lt;a href=&quot;https://trendshift.io/repositories/13055&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://trendshift.io/api/badge/repositories/13055&quot; alt=&quot;iib0011%2Fomni-tools | Trendshift&quot; style=&quot;width: 200px;&quot; width=&quot;200&quot;/&gt;&lt;/a&gt;
   &lt;br /&gt;&lt;br /&gt;
&lt;a href=&quot;https://github.com/iib0011/omni-tools/releases&quot;&gt;
          &lt;img src=&quot;https://img.shields.io/badge/version-0.4.0-blue?style=for-the-badge&quot; /&gt;
        &lt;/a&gt;
        &lt;a href=&quot;https://hub.docker.com/r/iib0011/omni-tools&quot;&gt;
          &lt;img src=&quot;https://img.shields.io/docker/pulls/iib0011/omni-tools?style=for-the-badge&amp;logo=docker&quot; /&gt;
        &lt;/a&gt;
        &lt;a href=&quot;https://github.com/iib0011&quot;&gt;
          &lt;img src=&quot;https://img.shields.io/github/stars/iib0011/omni-tools?style=for-the-badge&amp;logo=github&quot; /&gt;
        &lt;/a&gt;
        &lt;a href=&quot;https://github.com/iib0011/omni-tools/blob/main/LICENSE&quot;&gt;
          &lt;img src=&quot;https://img.shields.io/github/license/iib0011/omni-tools?style=for-the-badge&quot; /&gt;
        &lt;/a&gt;
        &lt;a href=&quot;https://discord.gg/SDbbn3hT4b&quot;&gt;
          &lt;img src=&quot;https://img.shields.io/discord/1342971141823664179?label=Discord&amp;style=for-the-badge&quot; /&gt;
        &lt;/a&gt;
        &lt;br /&gt;&lt;br /&gt;
&lt;/div&gt;

Welcome to OmniTools, a self-hosted web app offering a variety of online tools to simplify everyday tasks.
Whether you are coding, manipulating images/videos, PDFs or crunching numbers, OmniTools has you covered. Please don&#039;t
forget to
star the repo to support us.
Here is the [demo](https://omnitools.app) website.

All files are processed entirely on the client side: nothing ever leaves your device.
Plus, the Docker image is super lightweight at just 28MB, making it fast to deploy and easy to self-host.

![img.png](img.png)

## Table of Contents

- [Features](#features)
- [Self-host](#self-hostrun)
- [Contribute](#contribute)
- [License](#license)
- [Contact](#contact)

## Features

We strive to offer a variety of tools, including:

## **Image/Video/Binary Tools**

- Image Resizer
- Image Converter
- Video Trimmer
- Video Reverser
- And more...

## **String/List Tools**

- Case Converters
- List Shuffler
- Text Formatters
- And more...

## **Date and Time Tools**

- Date Calculators
- Time Zone Converters
- And more...

## **Math Tools**

- Generate Prime Numbers
- Generate Perfect Numbers
- And more...

## **Miscellaneous Tools**

- JSON Tools
- PDF Tools
- CSV Tools
- And more...

Stay tuned as we continue to expand and improve our collection!

## Self-host/Run

### Docker

```bash
docker run -d --name omni-tools --restart unless-stopped -p 8080:80 iib0011/omni-tools:latest
```

### Docker Compose

```yaml
services:
  omni-tools:
    image: iib0011/omni-tools:latest
    container_name: omni-tools
    restart: unless-stopped
    ports:
      - &quot;8080:80&quot;

```

## Contribute

This is a React Project with Typescript Material UI. We use icons from [Iconify](https://icon-sets.iconify.design)

### Project setup

```bash
git clone https://github.com/iib0011/omni-tools.git
cd omni-tools
npm i
npm run dev
```

### Create a new tool

```bash
npm run script:create:tool my-tool-name folder1 # npm run script:create:tool split pdf
```

For tools located under multiple nested directories, use:

```bash
npm run script:create:tool my-tool-name folder1/folder2 # npm run script:create:tool compress image/png
```

Use `folder1\folder2` on Windows.

### Run tests

```bash
npm run test
```

- For e2e tests

```bash
npm run test:e2e
```

&lt;img src=&quot;https://api.star-history.com/svg?repos=iib0011/omni-tools&amp;type=Date&quot;/&gt;

## ü§ù Looking to contribute?

We welcome contributions! You can help by:

- ‚úÖ Reporting bugs
- ‚úÖ Suggesting new features in Github issues or [here](https://tally.so/r/nrkkx2)
- ‚úÖ Improving documentation
- ‚úÖ Submitting pull requests

You can also join our [Discord server](https://discord.gg/SDbbn3hT4b)

### Contributors

&lt;a href=&quot;https://github.com/iib0011/omni-tools/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=iib0011/omni-tools&quot; /&gt;
&lt;/a&gt;

## Contact

For any questions or suggestions, feel free to open an issue or contact me at:
[ibracool99@gmail.com](mailto:ibracool99@gmail.com)

## License

This project is licensed under the MIT License. See the [LICENSE](LICENSE) file for details.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[MetaMask/metamask-extension]]></title>
            <link>https://github.com/MetaMask/metamask-extension</link>
            <guid>https://github.com/MetaMask/metamask-extension</guid>
            <pubDate>Sun, 06 Jul 2025 00:05:33 GMT</pubDate>
            <description><![CDATA[üåê üîå The MetaMask browser extension enables browsing Ethereum blockchain enabled websites]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/MetaMask/metamask-extension">MetaMask/metamask-extension</a></h1>
            <p>üåê üîå The MetaMask browser extension enables browsing Ethereum blockchain enabled websites</p>
            <p>Language: TypeScript</p>
            <p>Stars: 12,641</p>
            <p>Forks: 5,225</p>
            <p>Stars today: 2 stars today</p>
            <h2>README</h2><pre># MetaMask Browser Extension

You can find the latest version of MetaMask on [our official website](https://metamask.io/). For help using MetaMask, visit our [User Support Site](https://support.metamask.io/).

For [general questions](https://community.metamask.io/c/learn/26), [feature requests](https://community.metamask.io/c/feature-requests-ideas/13), or [developer questions](https://community.metamask.io/c/developer-questions/11), visit our [Community Forum](https://community.metamask.io/).

MetaMask supports Firefox, Google Chrome, and Chromium-based browsers. We recommend using the latest available browser version.

For up to the minute news, follow us on [X](https://x.com/MetaMask).

To learn how to develop MetaMask-compatible applications, visit our [Developer Docs](https://docs.metamask.io/).

To learn how to contribute to the MetaMask codebase, visit our [Contributor Docs](https://github.com/MetaMask/contributor-docs).

To learn how to contribute to the MetaMask Extension project itself, visit our [Extension Docs](https://github.com/MetaMask/metamask-extension/tree/main/docs).

## GitHub Codespaces quickstart

As an alternative to building on your local machine, there is a new option to get a development environment up and running in less than 5 minutes by using GitHub Codespaces. Please note that there is a [Limited Free Monthly Quota](https://docs.github.com/en/billing/managing-billing-for-github-codespaces/about-billing-for-github-codespaces), and after that GitHub will start charging you.

_Note: You are billed for both time spent running, and for storage used_

[![Open in GitHub Codespaces](https://github.com/codespaces/badge.svg)](https://codespaces.new/MetaMask/metamask-extension?quickstart=1)

1. Start by clicking the button above
2. A new browser tab will open with a remote version of Visual Studio Code (this will take a few minutes to load)
3. A &quot;Simple Browser&quot; will open inside the browser with noVNC -- click Connect
   - Optional steps:
     - Click the button at the upper-right of the Simple Browser tab to open the noVNC window in its own tab
     - Open the noVNC sidebar on the left, click the gear icon, change the Scaling Mode to Remote Resizing
4. Wait about 20 extra seconds on the first launch, for the scripts to finish
5. Right-click on the noVNC desktop to launch Chrome or Firefox with MetaMask pre-installed
6. Change some code, then run `yarn start` to build in dev mode
7. After a minute or two, it will finish building, and you can see your changes in the noVNC desktop

### Tips to keep your Codespaces usage lower

- You are billed for both time spent running, and for storage used
- Codespaces pause after 30 minutes of inactivity, and auto-delete after 30 days of inactivity
- You can manage your Codespaces here: https://github.com/codespaces
  - You may want to manually pause them before the 30 minute timeout
  - If you have several idle Codespaces hanging around for several days, you can quickly run out of storage quota. You should delete the ones you do not plan to use anymore, and probably keep only 1 or 2 in the long-term. It&#039;s also possible to re-use old Codespaces and switch the branch, instead of creating new ones and deleting the old ones.

### Codespaces on a fork

If you are not a MetaMask Internal Developer, or are otherwise developing on a fork, the default Infura key will be on the Free Plan and have very limited requests per second. If you want to use your own Infura key, follow the `.metamaskrc` and `INFURA_PROJECT_ID` instructions in the section [Building on your local machine](#building-on-your-local-machine).

## Building on your local machine

- Install [Node.js](https://nodejs.org) version 20
  - If you are using [nvm](https://github.com/nvm-sh/nvm#installing-and-updating) (recommended) running `nvm use` will automatically choose the right node version for you.
- Enable Corepack by executing the command `corepack enable` within the metamask-extension project. Corepack is a utility included with Node.js by default. It manages Yarn on a per-project basis, using the version specified by the `packageManager` property in the project&#039;s package.json file. Please note that modern releases of [Yarn](https://yarnpkg.com/getting-started/install) are not intended to be installed globally or via npm.
- Duplicate `.metamaskrc.dist` within the root and rename it to `.metamaskrc` by running `cp .metamaskrc{.dist,}`.
  - Replace the `INFURA_PROJECT_ID` value with your own personal [Infura API Key](https://docs.infura.io/networks/ethereum/how-to/secure-a-project/project-id).
    - If you don&#039;t have an Infura account, you can create one for free on the [Infura website](https://app.infura.io/register).
  - If debugging MetaMetrics, you&#039;ll need to add a value for `SEGMENT_WRITE_KEY` [Segment write key](https://segment.com/docs/connections/find-writekey/), see [Developing on MetaMask - Segment](./development/README.md#segment).
  - If debugging unhandled exceptions, you&#039;ll need to add a value for `SENTRY_DSN` [Sentry Dsn](https://docs.sentry.io/product/sentry-basics/dsn-explainer/), see [Developing on MetaMask - Sentry](./development/README.md#sentry).
  - Optionally, replace the `PASSWORD` value with your development wallet password to avoid entering it each time you open the app.
  - If developing with remote feature flags, and you want to override the flags in the build process, you can add a `.manifest-overrides.json` file to the root of the project and set `MANIFEST_OVERRIDES=.manifest-overrides.json` in `.metamaskrc` to the path of the file.
    This file is used to add flags to `manifest.json` build files for the extension. You can also modify the `_flags.remoteFeatureFlags` in the built version of `manifest.json` in the `dist/browser` folder to tweak the flags after the build process (these changes will get overwritten when you build again).
    An example of this remote feature flag overwrite could be:

  ```json
  {
    &quot;_flags&quot;: {
      &quot;remoteFeatureFlags&quot;: { &quot;testBooleanFlag&quot;: false }
    }
  }
  ```

- Run `yarn install` to install the dependencies.
- Build the project to the `./dist/` folder with `yarn dist` (for Chromium-based browsers) or `yarn dist:mv2` (for Firefox)
  - Optionally, to create a development build you can instead run `yarn start` (for Chromium-based browsers) or `yarn start:mv2` (for Firefox)
  - Uncompressed builds can be found in `/dist`, compressed builds can be found in `/builds` once they&#039;re built.
  - See the [build system readme](./development/build/README.md) for build system usage information.

- Follow these instructions to verify that your local build runs correctly:
  - [How to add custom build to Chrome](./docs/add-to-chrome.md)
  - [How to add custom build to Firefox](./docs/add-to-firefox.md)

## Git Hooks

To get quick feedback from our shared code quality fitness functions before committing the code, you can install our git hooks with Husky.

`$ yarn githooks:install`

You can read more about them in our [testing documentation](./docs/testing.md#fitness-functions-measuring-progress-in-code-quality-and-preventing-regressions-using-custom-git-hooks).

If you are using VS Code and are unable to make commits from the source control sidebar due to a &quot;command not found&quot; error, try these steps from the [Husky docs](https://typicode.github.io/husky/troubleshooting.html#command-not-found).

## Contributing

### Development builds

To start a development build (e.g. with logging and file watching) run `yarn start`.

#### Development build with wallet state

You can start a development build with a preloaded wallet state, by adding `TEST_SRP=&#039;&lt;insert SRP here&gt;&#039;` and `PASSWORD=&#039;&lt;insert wallet password here&gt;&#039;` to the `.metamaskrc` file. Then you have the following options:

1. Start the wallet with the default fixture flags, by running `yarn start:with-state`.
2. Check the list of available fixture flags, by running `yarn start:with-state --help`.
3. Start the wallet with custom fixture flags, by running `yarn start:with-state --FIXTURE_NAME=VALUE` for example `yarn start:with-state --withAccounts=100`. You can pass as many flags as you want. The rest of the fixtures will take the default values.

#### Development build with Webpack

You can also start a development build using the `yarn webpack` command, or `yarn webpack --watch`. This uses an alternative build system that is much faster, but not yet production ready. See the [Webpack README](./development/webpack/README.md) for more information.

#### React and Redux DevTools

To start the [React DevTools](https://github.com/facebook/react-devtools), run `yarn devtools:react` with a development build installed in a browser. This will open in a separate window; no browser extension is required.

To start the [Redux DevTools Extension](https://github.com/reduxjs/redux-devtools/tree/main/extension):

- Install the package `remotedev-server` globally (e.g. `yarn global add remotedev-server`)
- Install the Redux Devtools extension.
- Open the Redux DevTools extension and check the &quot;Use custom (local) server&quot; checkbox in the Remote DevTools Settings, using the default server configuration (host `localhost`, port `8000`, secure connection checkbox unchecked).

Then run the command `yarn devtools:redux` with a development build installed in a browser. This will enable you to use the Redux DevTools extension to inspect MetaMask.

To create a development build and run both of these tools simultaneously, run `yarn start:dev`.

#### Test Dapp

[This test site](https://metamask.github.io/test-dapp/) can be used to execute different user flows.

### Running Unit Tests and Linting

Run unit tests and the linter with `yarn test`. To run just unit tests, run `yarn test:unit`.

You can run the linter by itself with `yarn lint`, and you can automatically fix some lint problems with `yarn lint:fix`. You can also run these two commands just on your local changes to save time with `yarn lint:changed` and `yarn lint:changed:fix` respectively.

For Jest debugging guide using Node.js, see [docs/tests/jest.md](docs/tests/jest.md).

### Running E2E Tests

Our e2e test suite can be run on either Firefox or Chrome. Here&#039;s how to get started with e2e testing:

#### Preparing a Test Build

Before running e2e tests, ensure you&#039;ve run `yarn install` to download dependencies. Next, you&#039;ll need a test build. You have 3 options:

1. Use `yarn download-builds --build-type test` to quickly download and unzip test builds for Chrome and Firefox into the `./dist/` folder. This method is fast and convenient for standard testing.
2. Create a custom test build: for testing against different build types, use `yarn build:test`. This command allows you to generate test builds for various types, including:
   - `yarn build:test` for main build
   - `yarn build:test:flask` for flask build
   - `yarn build:test:mv2` for mv2 build
3. Start a test build with live changes: `yarn start:test` is particularly useful for development. It starts a test build that automatically recompiles application code upon changes. This option is ideal for iterative testing and development. This command also allows you to generate test builds for various types, including:
   - `yarn start:test` for main build
   - `yarn start:test:flask` for flask build
   - `yarn start:test:mv2` for mv2 build

Note: The `yarn start:test` command (which initiates the testDev build type) has LavaMoat disabled for both the build system and the application, offering a streamlined testing experience during development. On the other hand, `yarn build:test` enables LavaMoat for enhanced security in both the build system and application, mirroring production environments more closely.

#### Running Tests

Once you have your test build ready, choose the browser for your e2e tests:

- For Firefox, run `yarn test:e2e:firefox`.
  - Note: If you are running Firefox as a snap package on Linux, ensure you enable the appropriate environment variable: `FIREFOX_SNAP=true yarn test:e2e:firefox`
- For Chrome, run `yarn test:e2e:chrome`.

These scripts support additional options for debugging. Use `--help`to see all available options.

#### Running a single e2e test

Single e2e tests can be run with `yarn test:e2e:single test/e2e/tests/TEST_NAME.spec.js` along with the options below.

```console
  --browser           Set the browser to be used; specify &#039;chrome&#039;, &#039;firefox&#039;, &#039;all&#039;
                      or leave unset to run on &#039;all&#039; by default.
                                                          [string] [default: &#039;all&#039;]
  --debug             Run tests in debug mode, logging each driver interaction
                                                         [boolean] [default: true]
  --retries           Set how many times the test should be retried upon failure.
                                                              [number] [default: 0]
  --leave-running     Leaves the browser running after a test fails, along with
                      anything else that the test used (ganache, the test dapp,
                      etc.)                              [boolean] [default: false]
  --update-snapshot   Update E2E test snapshots
                                             [alias: -u] [boolean] [default: false]
```

For example, to run the `account-details` tests using Chrome, with debug logging and with the browser set to remain open upon failure, you would use:
`yarn test:e2e:single test/e2e/tests/account-menu/account-details.spec.js --browser=chrome --leave-running`

#### Running e2e tests against specific feature flag

While developing new features, we often use feature flags. As we prepare to make these features generally available (GA), we remove the feature flags. Existing feature flags are listed in the `.metamaskrc.dist` file. To execute e2e tests with a particular feature flag enabled, it&#039;s necessary to first generate a test build with that feature flag activated. There are two ways to achieve this:

- To enable a feature flag in your local configuration, you should first ensure you have a `.metamaskrc` file copied from `.metamaskrc.dist`. Then, within your local `.metamaskrc` file, you can set the desired feature flag to true. Following this, a test build with the feature flag enabled can be created by executing `yarn build:test`.

- Alternatively, for enabling a feature flag directly during the test build creation, you can pass the parameter as true via the command line. For instance, activating the MULTICHAIN feature flag can be done by running `MULTICHAIN=1 yarn build:test` or `MULTICHAIN=1 yarn start:test` . This method allows for quick adjustments to feature flags without altering the `.metamaskrc` file.

Once you&#039;ve created a test build with the desired feature flag enabled, proceed to run your tests as usual. Your tests will now run against the version of the extension with the specific feature flag activated. For example:
`yarn test:e2e:single test/e2e/tests/account-menu/account-details.spec.js --browser=chrome`

This approach ensures that your e2e tests accurately reflect the user experience for the upcoming GA features.

#### Running specific builds types e2e test

Different build types have different e2e tests sets. In order to run them look in the `package.json` file. You will find:

```console
    &quot;test:e2e:chrome:snaps&quot;: &quot;SELENIUM_BROWSER=chrome node test/e2e/run-all.js --snaps&quot;,
    &quot;test:e2e:firefox&quot;: &quot;SELENIUM_BROWSER=firefox node test/e2e/run-all.js&quot;,
```

### Changing dependencies

Whenever you change dependencies (adding, removing, or updating, either in `package.json` or `yarn.lock`), there are various files that must be kept up-to-date.

- `yarn.lock`:
  - Run `yarn` again after your changes to ensure `yarn.lock` has been properly updated.
  - Run `yarn lint:lockfile:dedupe:fix` to remove duplicate dependencies from the lockfile.
- The `allow-scripts` configuration in `package.json`
  - Run `yarn allow-scripts auto` to update the `allow-scripts` configuration automatically. This config determines whether the package&#039;s install/postinstall scripts are allowed to run. Review each new package to determine whether the install script needs to run or not, testing if necessary.
  - Unfortunately, `yarn allow-scripts auto` will behave inconsistently on different platforms. macOS and Windows users may see extraneous changes relating to optional dependencies.
- The LavaMoat policy files
  - If you are a MetaMask team member and your PR is on a repository branch, you can use the bot command `@metamaskbot update-policies` to ask the MetaMask bot to automatically update the policies for you.
  - If your PR is from a fork, you can ask a MetaMask team member to help with updating the policy files.
  - Manual update instructions: The _tl;dr_ is to run `yarn lavamoat:auto` to update these files, but there can be devils in the details:
    - There are two sets of LavaMoat policy files:
      - The production LavaMoat policy files (`lavamoat/browserify/*/policy.json`), which are re-generated using `yarn lavamoat:webapp:auto`. Add `--help` for usage.
        - These should be regenerated whenever the production dependencies for the webapp change.
      - The build system LavaMoat policy file (`lavamoat/build-system/policy.json`), which is re-generated using `yarn lavamoat:build:auto`.
        - This should be regenerated whenever the dependencies used by the build system itself change.
    - Whenever you regenerate a policy file, review the changes to determine whether the access granted to each package seems appropriate.
    - Unfortunately, `yarn lavamoat:auto` will behave inconsistently on different platforms.
      macOS and Windows users may see extraneous changes relating to optional dependencies.
    - If you keep getting policy failures even after regenerating the policy files, try regenerating the policies after a clean install by doing:
      - `rm -rf node_modules/ &amp;&amp; yarn &amp;&amp; yarn lavamoat:auto`
    - Keep in mind that any kind of dynamic import or dynamic use of globals may elude LavaMoat&#039;s static analysis.
      Refer to the LavaMoat documentation or ask for help if you run into any issues.
- The Attributions file
  - If you are a MetaMask team member and your PR is on a repository branch, you can use the bot command `@metamaskbot update-attributions` to ask the MetaMask bot to automatically update the attributions file for you.
  - Manual update: run `yarn attributions:generate`.

## Architecture

- [Visual of the controller hierarchy and dependencies as of summer 2022.](https://gist.github.com/rekmarks/8dba6306695dcd44967cce4b6a94ae33)
- [Visual of the entire codebase.](https://mango-dune-07a8b7110.1.azurestaticapps.net/?repo=metamask%2Fmetamask-extension)

[![Architecture Diagram](./docs/architecture.png)][1]

## Other Docs

- [How to add a new translation to MetaMask](./docs/translating-guide.md)
- [Publishing Guide](./docs/publishing.md)
- [How to use the TREZOR emulator](./docs/trezor-emulator.md)
- [Developing on MetaMask](./development/README.md)
- [How to generate a visualization of this repository&#039;s development](./development/gource-viz.sh)
- [How to add new confirmations](./docs/confirmations.md)
- [Browser support guidelines](./docs/browser-support.md)

## Dapp Developer Resources

- [Extend MetaMask&#039;s features w/ MetaMask Snaps.](https://docs.metamask.io/snaps/)
- [Prompt your users to add and switch to a new network.](https://docs.metamask.io/wallet/how-to/add-network/)
- [Change the logo that appears when your dapp connects to MetaMask.](https://docs.metamask.io/wallet/how-to/display/icon/)

[1]: http://www.nomnoml.com/#view/%5B%3Cactor%3Euser%5D%0A%0A%5Bmetamask-ui%7C%0A%20%20%20%5Btools%7C%0A%20%20%20%20%20react%0A%20%20%20%20%20redux%0A%20%20%20%20%20thunk%0A%20%20%20%20%20ethUtils%0A%20%20%20%20%20jazzicon%0A%20%20%20%5D%0A%20%20%20%5Bcomponents%7C%0A%20%20%20%20%20app%0A%20%20%20%20%20account-detail%0A%20%20%20%20%20accounts%0A%20%20%20%20%20locked-screen%0A

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[coder/code-server]]></title>
            <link>https://github.com/coder/code-server</link>
            <guid>https://github.com/coder/code-server</guid>
            <pubDate>Sun, 06 Jul 2025 00:05:32 GMT</pubDate>
            <description><![CDATA[VS Code in the browser]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/coder/code-server">coder/code-server</a></h1>
            <p>VS Code in the browser</p>
            <p>Language: TypeScript</p>
            <p>Stars: 72,700</p>
            <p>Forks: 6,077</p>
            <p>Stars today: 39 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[pontusab/directories]]></title>
            <link>https://github.com/pontusab/directories</link>
            <guid>https://github.com/pontusab/directories</guid>
            <pubDate>Sun, 06 Jul 2025 00:05:31 GMT</pubDate>
            <description><![CDATA[The Cursor & Windsurf community, find rules and MCPs]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/pontusab/directories">pontusab/directories</a></h1>
            <p>The Cursor & Windsurf community, find rules and MCPs</p>
            <p>Language: TypeScript</p>
            <p>Stars: 3,469</p>
            <p>Forks: 558</p>
            <p>Stars today: 41 stars today</p>
            <h2>README</h2><pre>![hero](image.png)

# How to Contribute to Directories

### This guide will help you understand how to add new rules or prompts to the both Cursor and Windsurf Directories.

#### 1. Fork the Repo

#### 2. Adding a New Rule

If you want to submit a **new rule** that does not already exist in the Directories, follow these steps:

1. **Locate the Rule Index**:  

   Add your new rule in the `packages/data/rules/index.ts` file. For example:
   
   ```typescript
   import { cRules } from &quot;./rules/c&quot;;

2. **Create a Rule File**:
    
    Create a new file in the `packages/data/rules/` directory with the appropriate name. For example, if you&#039;re adding a rule for Next.js, name the file `nextjs.ts`.

3. **Define the Rule**:
   
    Add your prompts inside the newly created file. Refer to the existing rules for formatting guidance.  Make sure your prompts are accurate, clear, and helpful to developers.

    Your prompts should:
      - Be accurate and related to the rule.
      - Be clearly worded to help developers understand and use them easily.
      - Be actionable, providing steps or insights to solve common problems or optimize workflows.
      - Test your prompts: Before submitting, ensure that your prompts have been tested and work as expected in the relevant development environment. This ensures that other developers can rely your contributions :) .

#### 3. Adding New Prompts/Content to Existing Rules

If you want to add new prompts to an existing rule, follow these steps:

1. **Find the Existing Rule**:

    Navigate to the `packages/data/rules/` directory and open the relevant file for the rule you want to update. For example, if you&#039;re adding prompts for **Next.js**, open `nextjs.ts`.

2. **Add Your New Prompts**:

    Add your new prompts below the existing ones. Ensure that your additions are tested.

#### 4. Important Parameters in Rule Files

  When creating or updating rules, be sure to include the following parameters for consistency and clarity:

  1. **tags**: Add language-specific tags to categorize the rule.

      ```
      tags: [&quot;JavaScript&quot;, &quot;Next.js&quot;]

  2. **title**: Provide an appropriate title that describes the rule.

      ```
        title: &quot;Next.js Best Practices&quot;

  3. **slug**: Create a unique slug that reflects the purpose of the rule.

      ```
        slug: &quot;nextjs-best-practices&quot;

  4. **content**: Write the content of your prompt here. Make sure it is clear, actionable, and helpful to developers. Be concise, but provide enough detail to assist cursor ai in completing tasks effectively...

      ```
        content: `your amazing prompt`

  5. **author**: Include details about yourself as the contributor. This helps others recognize your contributions and allows them to reach out if needed.

  
     - **name**: Your full name or GitHub username.
     - **URL**: A link to your GitHub, Twitter, website, or any other profile you want to share. This is optional but recommended.
     - **avatar**: The URL path to an image or avatar that represents you. You can use a photo from a service like Gravatar or any image hosting service.

### 5. Create a PR


## Getting Started

First, run the development server:

```bash
npm install

npm run dev
# or
yarn dev
# or
pnpm dev
# or
bun dev
```

Open [http://localhost:3000](http://localhost:3000) with your browser to see the result.</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[Infisical/infisical]]></title>
            <link>https://github.com/Infisical/infisical</link>
            <guid>https://github.com/Infisical/infisical</guid>
            <pubDate>Sun, 06 Jul 2025 00:05:30 GMT</pubDate>
            <description><![CDATA[Infisical is the open-source platform for secrets management, PKI, and SSH access.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/Infisical/infisical">Infisical/infisical</a></h1>
            <p>Infisical is the open-source platform for secrets management, PKI, and SSH access.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 18,596</p>
            <p>Forks: 1,236</p>
            <p>Stars today: 215 stars today</p>
            <h2>README</h2><pre>&lt;h1 align=&quot;center&quot;&gt;
  &lt;img width=&quot;300&quot; src=&quot;/img/logoname-white.svg#gh-dark-mode-only&quot; alt=&quot;infisical&quot;&gt;
&lt;/h1&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;p align=&quot;center&quot;&gt;&lt;b&gt;The open-source secret management platform&lt;/b&gt;: Sync secrets/configs across your team/infrastructure and prevent secret leaks.&lt;/p&gt;
&lt;/p&gt;

&lt;h4 align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://infisical.com/slack&quot;&gt;Slack&lt;/a&gt; |
  &lt;a href=&quot;https://infisical.com/&quot;&gt;Infisical Cloud&lt;/a&gt; |
  &lt;a href=&quot;https://infisical.com/docs/self-hosting/overview&quot;&gt;Self-Hosting&lt;/a&gt; |
  &lt;a href=&quot;https://infisical.com/docs/documentation/getting-started/introduction&quot;&gt;Docs&lt;/a&gt; |
  &lt;a href=&quot;https://www.infisical.com&quot;&gt;Website&lt;/a&gt; |
  &lt;a href=&quot;https://infisical.com/careers&quot;&gt;Hiring (Remote/SF)&lt;/a&gt;
&lt;/h4&gt;

&lt;h4 align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/Infisical/infisical/blob/main/LICENSE&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/license-MIT-blue.svg&quot; alt=&quot;Infisical is released under the MIT license.&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/infisical/infisical/blob/main/CONTRIBUTING.md&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/PRs-Welcome-brightgreen&quot; alt=&quot;PRs welcome!&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/Infisical/infisical/issues&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/commit-activity/m/infisical/infisical&quot; alt=&quot;git commit activity&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://cloudsmith.io/~infisical/repos/&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/Downloads-6.95M-orange&quot; alt=&quot;Cloudsmith downloads&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://infisical.com/slack&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/chat-on%20Slack-blueviolet&quot; alt=&quot;Slack community channel&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://twitter.com/infisical&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/twitter/follow/infisical?label=Follow&quot; alt=&quot;Infisical Twitter&quot; /&gt;
  &lt;/a&gt;
&lt;/h4&gt;

&lt;img src=&quot;/img/infisical_github_repo2.png&quot; width=&quot;100%&quot; alt=&quot;Dashboard&quot; /&gt;

## Introduction

**[Infisical](https://infisical.com)** is the open source secret management platform that teams use to centralize their application configuration and secrets like API keys and database credentials as well as manage their internal PKI.

We&#039;re on a mission to make security tooling more accessible to everyone, not just security teams, and that means redesigning the entire developer experience from ground up.

## Features

### Secrets Management:

- **[Dashboard](https://infisical.com/docs/documentation/platform/project)**: Manage secrets across projects and environments (e.g. development, production, etc.) through a user-friendly interface.
- **[Native Integrations](https://infisical.com/docs/integrations/overview)**: Sync secrets to platforms like [GitHub](https://infisical.com/docs/integrations/cicd/githubactions), [Vercel](https://infisical.com/docs/integrations/cloud/vercel), [AWS](https://infisical.com/docs/integrations/cloud/aws-secret-manager), and use tools like [Terraform](https://infisical.com/docs/integrations/frameworks/terraform), [Ansible](https://infisical.com/docs/integrations/platforms/ansible), and more.
- **[Secret versioning](https://infisical.com/docs/documentation/platform/secret-versioning)** and **[Point-in-Time Recovery](https://infisical.com/docs/documentation/platform/pit-recovery)**: Keep track of every secret and project state; roll back when needed.
- **[Secret Rotation](https://infisical.com/docs/documentation/platform/secret-rotation/overview)**: Rotate secrets at regular intervals for services like [PostgreSQL](https://infisical.com/docs/documentation/platform/secret-rotation/postgres-credentials), [MySQL](https://infisical.com/docs/documentation/platform/secret-rotation/mysql), [AWS IAM](https://infisical.com/docs/documentation/platform/secret-rotation/aws-iam), and more.
- **[Dynamic Secrets](https://infisical.com/docs/documentation/platform/dynamic-secrets/overview)**: Generate ephemeral secrets on-demand for services like [PostgreSQL](https://infisical.com/docs/documentation/platform/dynamic-secrets/postgresql), [MySQL](https://infisical.com/docs/documentation/platform/dynamic-secrets/mysql), [RabbitMQ](https://infisical.com/docs/documentation/platform/dynamic-secrets/rabbit-mq), and more.
- **[Secret Scanning and Leak Prevention](https://infisical.com/docs/cli/scanning-overview)**: Prevent secrets from leaking to git.
- **[Infisical Kubernetes Operator](https://infisical.com/docs/documentation/getting-started/kubernetes)**: Deliver secrets to your Kubernetes workloads and automatically reload deployments.
- **[Infisical Agent](https://infisical.com/docs/infisical-agent/overview)**: Inject secrets into applications without modifying any code logic.

### Infisical (Internal) PKI:

- **[Private Certificate Authority](https://infisical.com/docs/documentation/platform/pki/private-ca)**: Create CA hierarchies, configure [certificate templates](https://infisical.com/docs/documentation/platform/pki/certificates#guide-to-issuing-certificates) for policy enforcement, and start issuing X.509 certificates.
- **[Certificate Management](https://infisical.com/docs/documentation/platform/pki/certificates)**: Manage the certificate lifecycle from [issuance](https://infisical.com/docs/documentation/platform/pki/certificates#guide-to-issuing-certificates) to [revocation](https://infisical.com/docs/documentation/platform/pki/certificates#guide-to-revoking-certificates) with support for CRL.
- **[Alerting](https://infisical.com/docs/documentation/platform/pki/alerting)**: Configure alerting for expiring CA and end-entity certificates.
- **[Infisical PKI Issuer for Kubernetes](https://infisical.com/docs/documentation/platform/pki/pki-issuer)**: Deliver TLS certificates to your Kubernetes workloads with automatic renewal.
- **[Enrollment over Secure Transport](https://infisical.com/docs/documentation/platform/pki/est)**: Enroll and manage certificates via EST protocol.

### Infisical Key Management System (KMS):

- **[Cryptographic Keys](https://infisical.com/docs/documentation/platform/kms)**: Centrally manage keys across projects through a user-friendly interface or via the API.
- **[Encrypt and Decrypt Data](https://infisical.com/docs/documentation/platform/kms#guide-to-encrypting-data)**: Use symmetric keys to encrypt and decrypt data.

### Infisical SSH

- **[Signed SSH Certificates](https://infisical.com/docs/documentation/platform/ssh)**: Issue ephemeral SSH credentials for secure, short-lived, and centralized access to infrastructure.

### General Platform:

- **Authentication Methods**: Authenticate machine identities with Infisical using a cloud-native or platform agnostic authentication method ([Kubernetes Auth](https://infisical.com/docs/documentation/platform/identities/kubernetes-auth), [GCP Auth](https://infisical.com/docs/documentation/platform/identities/gcp-auth), [Azure Auth](https://infisical.com/docs/documentation/platform/identities/azure-auth), [AWS Auth](https://infisical.com/docs/documentation/platform/identities/aws-auth), [OIDC Auth](https://infisical.com/docs/documentation/platform/identities/oidc-auth/general), [Universal Auth](https://infisical.com/docs/documentation/platform/identities/universal-auth)).
- **[Access Controls](https://infisical.com/docs/documentation/platform/access-controls/overview)**: Define advanced authorization controls for users and machine identities with [RBAC](https://infisical.com/docs/documentation/platform/access-controls/role-based-access-controls), [additional privileges](https://infisical.com/docs/documentation/platform/access-controls/additional-privileges), [temporary access](https://infisical.com/docs/documentation/platform/access-controls/temporary-access), [access requests](https://infisical.com/docs/documentation/platform/access-controls/access-requests), [approval workflows](https://infisical.com/docs/documentation/platform/pr-workflows), and more.
- **[Audit logs](https://infisical.com/docs/documentation/platform/audit-logs)**: Track every action taken on the platform.
- **[Self-hosting](https://infisical.com/docs/self-hosting/overview)**: Deploy Infisical on-prem or cloud with ease; keep data on your own infrastructure.
- **[Infisical SDK](https://infisical.com/docs/sdks/overview)**: Interact with Infisical via client SDKs ([Node](https://infisical.com/docs/sdks/languages/node), [Python](https://github.com/Infisical/python-sdk-official?tab=readme-ov-file#infisical-python-sdk), [Go](https://infisical.com/docs/sdks/languages/go), [Ruby](https://infisical.com/docs/sdks/languages/ruby), [Java](https://infisical.com/docs/sdks/languages/java), [.NET](https://infisical.com/docs/sdks/languages/csharp))
- **[Infisical CLI](https://infisical.com/docs/cli/overview)**: Interact with Infisical via CLI; useful for injecting secrets into local development and CI/CD pipelines.
- **[Infisical API](https://infisical.com/docs/api-reference/overview/introduction)**: Interact with Infisical via API.

## Getting started

Check out the [Quickstart Guides](https://infisical.com/docs/getting-started/introduction)

| Use Infisical Cloud                                                                                                                                     | Deploy Infisical on premise                                                          |
| ------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------ |
| The fastest and most reliable way to &lt;br&gt; get started with Infisical is signing up &lt;br&gt; for free to [Infisical Cloud](https://app.infisical.com/login). | &lt;br&gt; View all [deployment options](https://infisical.com/docs/self-hosting/overview) |

### Run Infisical locally

To set up and run Infisical locally, make sure you have Git and Docker installed on your system. Then run the command for your system:

Linux/macOS:

```console
git clone https://github.com/Infisical/infisical &amp;&amp; cd &quot;$(basename $_ .git)&quot; &amp;&amp; cp .env.example .env &amp;&amp; docker compose -f docker-compose.prod.yml up
```

Windows Command Prompt:

```console
git clone https://github.com/Infisical/infisical &amp;&amp; cd infisical &amp;&amp; copy .env.example .env &amp;&amp; docker compose -f docker-compose.prod.yml up
```

Create an account at `http://localhost:80`

### Scan and prevent secret leaks

On top managing secrets with Infisical, you can also [scan for over 140+ secret types]() in your files, directories and git repositories.

To scan your full git history, run:

```
infisical scan --verbose
```

Install pre commit hook to scan each commit before you push to your repository

```
infisical scan install --pre-commit-hook
```

Learn about Infisical&#039;s code scanning feature [here](https://infisical.com/docs/cli/scanning-overview)

## Open-source vs. paid

This repo available under the [MIT expat license](https://github.com/Infisical/infisical/blob/main/LICENSE), with the exception of the `ee` directory which will contain premium enterprise features requiring a Infisical license.

If you are interested in managed Infisical Cloud of self-hosted Enterprise Offering, take a look at [our website](https://infisical.com/) or [book a meeting with us](https://infisical.cal.com/vlad/infisical-demo).

## Security

Please do not file GitHub issues or post on our public forum for security vulnerabilities, as they are public!

Infisical takes security issues very seriously. If you have any concerns about Infisical or believe you have uncovered a vulnerability, please get in touch via the e-mail address security@infisical.com. In the message, try to provide a description of the issue and ideally a way of reproducing it. The security team will get back to you as soon as possible.

Note that this security address should be used only for undisclosed vulnerabilities. Please report any security problems to us before disclosing it publicly.

## Contributing

Whether it&#039;s big or small, we love contributions. Check out our guide to see how to [get started](https://infisical.com/docs/contributing/getting-started).

Not sure where to get started? You can:

- Join our &lt;a href=&quot;https://infisical.com/slack&quot;&gt;Slack&lt;/a&gt;, and ask us any questions there.

## Resources

- [Docs](https://infisical.com/docs/documentation/getting-started/introduction) for comprehensive documentation and guides
- [Slack](https://infisical.com/slack) for discussion with the community and Infisical team.
- [GitHub](https://github.com/Infisical/infisical) for code, issues, and pull requests
- [Twitter](https://twitter.com/infisical) for fast news
- [YouTube](https://www.youtube.com/@infisical_os) for videos on secret management
- [Blog](https://infisical.com/blog) for secret management insights, articles, tutorials, and updates
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[Zippland/worth-calculator]]></title>
            <link>https://github.com/Zippland/worth-calculator</link>
            <guid>https://github.com/Zippland/worth-calculator</guid>
            <pubDate>Sun, 06 Jul 2025 00:05:29 GMT</pubDate>
            <description><![CDATA[Calculating the actual value of your job beyond just salary]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/Zippland/worth-calculator">Zippland/worth-calculator</a></h1>
            <p>Calculating the actual value of your job beyond just salary</p>
            <p>Language: TypeScript</p>
            <p>Stars: 2,052</p>
            <p>Forks: 129</p>
            <p>Stars today: 41 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;

&lt;img src=&quot;title.png&quot; alt=&quot;Job Worth Calculator&quot; width=&quot;500&quot; /&gt;
&lt;br&gt;&lt;br&gt;

&lt;a href=&quot;https://trendshift.io/repositories/13145&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://trendshift.io/api/badge/repositories/13145&quot; alt=&quot;Zippland%2Fworth-calculator | Trendshift&quot; style=&quot;width: 250px; height: 55px;&quot; width=&quot;250&quot; height=&quot;55&quot;/&gt;&lt;/a&gt;

&lt;p&gt;
   &lt;img src=&quot;https://img.shields.io/badge/next.js-000000?style=for-the-badge&amp;logo=nextdotjs&amp;logoColor=white&quot; alt=&quot;Next.js&quot; /&gt;
   &lt;img src=&quot;https://img.shields.io/badge/React-20232A?style=for-the-badge&amp;logo=react&amp;logoColor=61DAFB&quot; alt=&quot;React&quot; /&gt;
   &lt;img src=&quot;https://img.shields.io/badge/Tailwind_CSS-38B2AC?style=for-the-badge&amp;logo=tailwind-css&amp;logoColor=white&quot; alt=&quot;Tailwind CSS&quot; /&gt;
   &lt;img src=&quot;https://img.shields.io/badge/TypeScript-007ACC?style=for-the-badge&amp;logo=typescript&amp;logoColor=white&quot; alt=&quot;TypeScript&quot; /&gt;
&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;

**[‚ö° Try it now ‚ö°](https://worthjob.zippland.com)**

&lt;/div&gt;

&lt;p&gt;
   &lt;a href=&quot;#english&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/English-blue?style=for-the-badge&quot; alt=&quot;English&quot; /&gt;&lt;/a&gt;
   &amp;nbsp;&amp;nbsp;
   &lt;a href=&quot;#‰∏≠Êñá&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/‰∏≠Êñá-red?style=for-the-badge&quot; alt=&quot;‰∏≠Êñá&quot; /&gt;&lt;/a&gt;
   &amp;nbsp;&amp;nbsp;
   &lt;a href=&quot;#japanese&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Êó•Êú¨Ë™û-green?style=for-the-badge&quot; alt=&quot;Êó•Êú¨Ë™û&quot; /&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
üî•(ËÆøÈóÆÈáèÊøÄÂ¢ûÔºåVercelÂÖçË¥πÈ¢ùÂ∫¶ËÄÅÊòØÁî®ÂÆåÔºåÂπøÂëä‰ΩçÊãõÁßü)üî•
&lt;/p&gt;
&lt;/div&gt;

---

&lt;div id=&quot;english&quot;&gt;

&lt;h2 align=&quot;center&quot;&gt;üìä Job Worth Calculator&lt;/h2&gt;

&lt;p align=&quot;center&quot;&gt;&lt;i&gt;Calculating the actual value of your job beyond just salary&lt;/i&gt;&lt;/p&gt;

### ‚ú® Features

- **üí∞ Comprehensive Evaluation**: Calculate job worth based on salary, work hours, commute time, environment, and more
- **üåè PPP Conversion**: International salary comparison with Purchasing Power Parity conversion across 190+ countries
- **üë©‚Äçüéì Personal Factors**: Customize calculations with personal education level, work experience, and more
- **üì± Detailed Report**: Generate a shareable, downloadable job analysis report
- **üåê Internationalization**: Available in both English and Chinese
- **üì± Mobile Friendly**: Responsive design works on all devices

### üñ•Ô∏è How to Use

1. Enter your annual salary
2. Select your country/region
3. Fill in work details (days per week, hours, commute time, etc.)
4. Specify environmental factors (city, work environment, team, etc.)
5. Input your education and experience
6. View your job worth score and detailed evaluation
7. Generate a shareable report

### üìä The Calculation

The job worth score is calculated using a comprehensive formula that accounts for:
- Standardized daily salary (adjusted for PPP)
- Work-life balance factors (hours, commute, WFH options)
- Environmental aspects (office location, team dynamics)
- Educational qualification premiums
- Experience-based expectations

### üë®‚Äçüíª Contributing

Contributions are welcome! Here&#039;s how you can help:

- [Open an issue](https://github.com/zippland/worth-calculator/issues/new) if you have suggestions or find a bug
- Fork the repository and submit a PR for new features or bug fixes
- Improve documentation or translations

Please make sure to test your changes before submitting a PR.

### üìù License

[MIT License](LICENSE)

&lt;/div&gt;

---

&lt;div id=&quot;‰∏≠Êñá&quot;&gt;

&lt;h2 align=&quot;center&quot;&gt;üìä Â∑•‰ΩúÊÄß‰ª∑ÊØîËÆ°ÁÆóÂô®&lt;/h2&gt;

&lt;p align=&quot;center&quot;&gt;&lt;i&gt;ÂÖ®Èù¢ËÄÉÈáèÔºåËÆ°ÁÆóËñ™ËµÑ‰πãÂ§ñÁöÑÂ∑•‰ΩúÁúüÂÆû‰ª∑ÂÄº&lt;/i&gt;&lt;/p&gt;

### ‚ú® ÁâπÁÇπ

- **üí∞ ÂÖ®Èù¢ËØÑ‰º∞**: Âü∫‰∫éËñ™ËµÑ„ÄÅÂ∑•‰ΩúÊó∂Èó¥„ÄÅÈÄöÂã§Êó∂Èó¥„ÄÅÂ∑•‰ΩúÁéØÂ¢ÉÁ≠âÂ§öÊñπÈù¢Âõ†Á¥†ËÆ°ÁÆóÂ∑•‰Ωú‰ª∑ÂÄº
- **üåè PPPËΩ¨Êç¢**: ÈÄöËøáË¥≠‰π∞ÂäõÂπ≥‰ª∑(PPP)ËΩ¨Êç¢ÊîØÊåÅ190Â§ö‰∏™ÂõΩÂÆ∂ÁöÑËñ™ËµÑÊØîËæÉ
- **üë©‚Äçüéì ‰∏™‰∫∫Âõ†Á¥†**: Ê†πÊçÆ‰∏™‰∫∫Â≠¶ÂéÜ„ÄÅÂ∑•‰ΩúÁªèÈ™åÁ≠âÂÆöÂà∂ËÆ°ÁÆó
- **üì± ËØ¶ÁªÜÊä•Âëä**: ÁîüÊàêÂèØÂàÜ‰∫´„ÄÅÂèØ‰∏ãËΩΩÁöÑÂ∑•‰ΩúÂàÜÊûêÊä•Âëä
- **üåê ÂõΩÈôÖÂåñ**: ÊîØÊåÅ‰∏≠Ëã±ÊñáÂèåËØ≠
- **üì± ÁßªÂä®ÂèãÂ•Ω**: ÂìçÂ∫îÂºèËÆæËÆ°ÔºåÈÄÇÁî®‰∫éÊâÄÊúâËÆæÂ§á

### üñ•Ô∏è ‰ΩøÁî®ÊñπÊ≥ï

1. ËæìÂÖ•Âπ¥Ëñ™
2. ÈÄâÊã©Â∑•‰ΩúÂõΩÂÆ∂/Âú∞Âå∫
3. Â°´ÂÜôÂ∑•‰ΩúÁªÜËäÇÔºàÊØèÂë®Â∑•‰ΩúÂ§©Êï∞„ÄÅÂ∑•‰ΩúÊó∂Èïø„ÄÅÈÄöÂã§Êó∂Èó¥Á≠âÔºâ
4. ÊåáÂÆöÁéØÂ¢ÉÂõ†Á¥†ÔºàÂüéÂ∏Ç„ÄÅÂ∑•‰ΩúÁéØÂ¢É„ÄÅÂõ¢ÈòüÁ≠âÔºâ
5. ËæìÂÖ•Â≠¶ÂéÜÂíåÂ∑•‰ΩúÁªèÈ™å
6. Êü•ÁúãÂ∑•‰ΩúÊÄß‰ª∑ÊØîÂàÜÊï∞ÂíåËØ¶ÁªÜËØÑ‰º∞
7. ÁîüÊàêÂèØÂàÜ‰∫´ÁöÑÊä•Âëä

### üìä ËÆ°ÁÆóÊñπÊ≥ï

Â∑•‰ΩúÊÄß‰ª∑ÊØîÂàÜÊï∞‰ΩøÁî®ÂÖ®Èù¢ÁöÑÂÖ¨ÂºèËÆ°ÁÆóÔºåËÄÉËôë‰∫ÜÔºö
- Ê†áÂáÜÂåñÊó•Ëñ™ÔºàÁªèPPPË∞ÉÊï¥Ôºâ
- Â∑•‰ΩúÁîüÊ¥ªÂπ≥Ë°°Âõ†Á¥†ÔºàÂ∑•‰ΩúÊó∂Èïø„ÄÅÈÄöÂã§„ÄÅËøúÁ®ãÂ∑•‰ΩúÈÄâÈ°πÔºâ
- ÁéØÂ¢ÉÂõ†Á¥†ÔºàÂäûÂÖ¨Âú∞ÁÇπ„ÄÅÂõ¢ÈòüÂÖ≥Á≥ªÔºâ
- Â≠¶ÂéÜÂä†Êàê
- Âü∫‰∫éÁªèÈ™åÁöÑÊúüÊúõÂÄºË∞ÉÊï¥

### üë®‚Äçüíª Ë¥°ÁåÆÊåáÂçó

Ê¨¢ËøéÂèÇ‰∏éË¥°ÁåÆÔºÅ‰ª•‰∏ãÊòØÊÇ®ÂèØ‰ª•Êèê‰æõÂ∏ÆÂä©ÁöÑÊñπÂºèÔºö

- Â¶ÇÊúâÂª∫ËÆÆÊàñÂèëÁé∞ÈîôËØØÔºåËØ∑[Êèê‰∫§ÈóÆÈ¢ò](https://github.com/zippland/worth-calculator/issues/new)
- ÂàÜÂèâ‰ªìÂ∫ìÂπ∂Êèê‰∫§PRÔºåÂ¢ûÂä†Êñ∞ÂäüËÉΩÊàñ‰øÆÂ§çbug
- ÊîπËøõÊñáÊ°£ÊàñÁøªËØë

ËØ∑Á°Æ‰øùÂú®Êèê‰∫§PRÂâçÊµãËØïÊÇ®ÁöÑÊõ¥Êîπ„ÄÇ

### üìù ËÆ∏ÂèØËØÅ

[MIT ËÆ∏ÂèØËØÅ](LICENSE)

&lt;/div&gt;

---

&lt;div id=&quot;japanese&quot;&gt;

&lt;h2 align=&quot;center&quot;&gt;üìä ‰ªï‰∫ã„ÅÆ‰æ°ÂÄ§Ë®àÁÆóÊ©ü&lt;/h2&gt;

&lt;p align=&quot;center&quot;&gt;&lt;i&gt;Áµ¶Êñô„Å†„Åë„Åß„Å™„Åè„ÄÅ‰ªï‰∫ã„ÅÆÊú¨ÂΩì„ÅÆ‰æ°ÂÄ§„ÇíË®àÁÆó„Åô„Çã&lt;/i&gt;&lt;/p&gt;

### ‚ú® ÁâπÂæ¥

- **üí∞ Á∑èÂêàÁöÑ„Å™Ë©ï‰æ°**: Áµ¶‰∏é„ÄÅÂä¥ÂÉçÊôÇÈñì„ÄÅÈÄöÂã§ÊôÇÈñì„ÄÅËÅ∑Â†¥Áí∞Â¢É„Å™„Å©Ë§áÊï∞„ÅÆË¶ÅÁ¥†„Å´Âü∫„Å•„ÅÑ„Å¶‰ªï‰∫ã„ÅÆ‰æ°ÂÄ§„ÇíË®àÁÆó
- **üåè PPPÂ§âÊèõ**: Ë≥ºË≤∑ÂäõÂπ≥‰æ°(PPP)„Å´„Çà„Çã190„Ç´ÂõΩ‰ª•‰∏ä„ÅÆÂõΩÈöõÁöÑ„Å™Áµ¶‰∏éÊØîËºÉ
- **üë©‚Äçüéì ÂÄã‰∫∫Ë¶ÅÁ¥†**: Â≠¶Ê≠¥„ÄÅËÅ∑ÂãôÁµåÈ®ì„Å™„Å©„Å´Âü∫„Å•„ÅÑ„Å¶„Ç´„Çπ„Çø„Éû„Ç§„Ç∫„Åï„Çå„ÅüË®àÁÆó
- **üì± Ë©≥Á¥∞„É¨„Éù„Éº„Éà**: ÂÖ±ÊúâÂèØËÉΩ„Åß„ÉÄ„Ç¶„É≥„É≠„Éº„ÉâÂèØËÉΩ„Å™‰ªï‰∫ãÂàÜÊûê„É¨„Éù„Éº„Éà„ÅÆÁîüÊàê
- **üåê Â§öË®ÄË™ûÂØæÂøú**: Ëã±Ë™û„ÄÅ‰∏≠ÂõΩË™û„ÄÅÊó•Êú¨Ë™û„ÅßÂà©Áî®ÂèØËÉΩ
- **üì± „É¢„Éê„Ç§„É´ÂØæÂøú**: „Åô„Åπ„Å¶„ÅÆ„Éá„Éê„Ç§„Çπ„ÅßÂãï‰Ωú„Åô„Çã„É¨„Çπ„Éù„É≥„Ç∑„Éñ„Éá„Ç∂„Ç§„É≥

### üñ•Ô∏è ‰ΩøÁî®ÊñπÊ≥ï

1. Âπ¥Âèé„ÇíÂÖ•Âäõ
2. ÂõΩ/Âú∞Âüü„ÇíÈÅ∏Êäû
3. Âã§ÂãôË©≥Á¥∞ÔºàÈÄ±„ÅÇ„Åü„Çä„ÅÆÂã§ÂãôÊó•Êï∞„ÄÅÂã§ÂãôÊôÇÈñì„ÄÅÈÄöÂã§ÊôÇÈñì„Å™„Å©Ôºâ„ÇíÂÖ•Âäõ
4. Áí∞Â¢ÉË¶ÅÁ¥†ÔºàÈÉΩÂ∏Ç„ÄÅËÅ∑Â†¥Áí∞Â¢É„ÄÅ„ÉÅ„Éº„É†„Å™„Å©Ôºâ„ÇíÊåáÂÆö
5. Â≠¶Ê≠¥„Å®ÁµåÈ®ì„ÇíÂÖ•Âäõ
6. ‰ªï‰∫ã„ÅÆ‰æ°ÂÄ§„Çπ„Ç≥„Ç¢„Å®Ë©≥Á¥∞Ë©ï‰æ°„ÇíÁ¢∫Ë™ç
7. ÂÖ±ÊúâÂèØËÉΩ„Å™„É¨„Éù„Éº„Éà„ÇíÁîüÊàê

### üìä Ë®àÁÆóÊñπÊ≥ï

‰ªï‰∫ã„ÅÆ‰æ°ÂÄ§„Çπ„Ç≥„Ç¢„ÅØ‰ª•‰∏ã„ÇíËÄÉÊÖÆ„Åó„ÅüÁ∑èÂêàÁöÑ„Å™Ë®àÁÆóÂºè„Çí‰ΩøÁî®„Åó„Å¶„ÅÑ„Åæ„ÅôÔºö
- Ê®ôÊ∫ñÂåñ„Åï„Çå„ÅüÊó•Áµ¶ÔºàPPP„ÅßË™øÊï¥Ê∏à„ÅøÔºâ
- „ÉØ„Éº„ÇØ„É©„Ç§„Éï„Éê„É©„É≥„ÇπË¶ÅÁ¥†ÔºàÂä¥ÂÉçÊôÇÈñì„ÄÅÈÄöÂã§„ÄÅ„É™„É¢„Éº„Éà„ÉØ„Éº„ÇØ„Ç™„Éó„Ç∑„Éß„É≥Ôºâ
- Áí∞Â¢ÉÁöÑÂÅ¥Èù¢Ôºà„Ç™„Éï„Ç£„Çπ„ÅÆÂ†¥ÊâÄ„ÄÅ„ÉÅ„Éº„É†„ÉÄ„Ç§„Éä„Éü„ÇØ„ÇπÔºâ
- ÊïôËÇ≤Ë≥áÊ†º„Å´„Çà„ÇãÂÑ™ÈÅá
- ÁµåÈ®ì„Å´Âü∫„Å•„ÅèÊúüÂæÖÂÄ§

### üë®‚Äçüíª Ë≤¢ÁåÆÊñπÊ≥ï

Ë≤¢ÁåÆ„ÅØÂ§ßÊ≠ìËøé„Åß„ÅôÔºÅ‰ª•‰∏ã„ÅÆÊñπÊ≥ï„Åß„ÅîÂçîÂäõ„ÅÑ„Åü„Å†„Åë„Åæ„ÅôÔºö

- ÊèêÊ°à„ÇÑ„Éê„Ç∞„ÇíÁô∫Ë¶ã„Åó„ÅüÂ†¥Âêà„ÅØ[ÂïèÈ°å„ÇíÂ†±Âëä](https://github.com/zippland/worth-calculator/issues/new)„Åó„Å¶„Åè„Å†„Åï„ÅÑ
- „É™„Éù„Ç∏„Éà„É™„Çí„Éï„Ç©„Éº„ÇØ„Åó„ÄÅÊñ∞Ê©üËÉΩ„ÇÑ„Éê„Ç∞‰øÆÊ≠£„ÅÆ„Åü„ÇÅ„ÅÆPR„ÇíÊèêÂá∫
- „Éâ„Ç≠„É•„É°„É≥„Éà„ÇÑÁøªË®≥„ÅÆÊîπÂñÑ

PR„ÇíÊèêÂá∫„Åô„ÇãÂâç„Å´Â§âÊõ¥„Çí„ÉÜ„Çπ„Éà„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ

### üìù „É©„Ç§„Çª„É≥„Çπ

[MIT„É©„Ç§„Çª„É≥„Çπ](LICENSE)

&lt;/div&gt;
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[outline/outline]]></title>
            <link>https://github.com/outline/outline</link>
            <guid>https://github.com/outline/outline</guid>
            <pubDate>Sun, 06 Jul 2025 00:05:28 GMT</pubDate>
            <description><![CDATA[The fastest knowledge base for growing teams. Beautiful, realtime collaborative, feature packed, and markdown compatible.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/outline/outline">outline/outline</a></h1>
            <p>The fastest knowledge base for growing teams. Beautiful, realtime collaborative, feature packed, and markdown compatible.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 32,748</p>
            <p>Forks: 2,672</p>
            <p>Stars today: 11 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;https://user-images.githubusercontent.com/31465/34380645-bd67f474-eb0b-11e7-8d03-0151c1730654.png&quot; height=&quot;29&quot; /&gt;
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;i&gt;A fast, collaborative, knowledge base for your team built using React and Node.js.&lt;br/&gt;Try out Outline using our hosted version at &lt;a href=&quot;https://www.getoutline.com&quot;&gt;www.getoutline.com&lt;/a&gt;.&lt;/i&gt;
  &lt;br/&gt;
  &lt;img width=&quot;1640&quot; alt=&quot;screenshot&quot; src=&quot;https://user-images.githubusercontent.com/380914/110356468-26374600-7fef-11eb-9f6a-f2cc2c8c6590.png&quot;&gt;
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://circleci.com/gh/outline/outline&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://circleci.com/gh/outline/outline.svg?style=shield&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;http://www.typescriptlang.org&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%3C%2F%3E-TypeScript-%230074c1.svg&quot; alt=&quot;TypeScript&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://github.com/prettier/prettier&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat&quot; alt=&quot;Prettier&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://github.com/styled-components/styled-components&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/style-%F0%9F%92%85%20styled--components-orange.svg&quot; alt=&quot;Styled Components&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://translate.getoutline.com/project/outline&quot; alt=&quot;Localized&quot;&gt;&lt;img src=&quot;https://badges.crowdin.net/outline/localized.svg&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

This is the source code that runs [**Outline**](https://www.getoutline.com) and all the associated services. If you want to use Outline then you don&#039;t need to run this code, we offer a hosted version of the app at [getoutline.com](https://www.getoutline.com). You can also find documentation on using Outline in [our guide](https://docs.getoutline.com/s/guide).

If you&#039;d like to run your own copy of Outline or contribute to development then this is the place for you.

# Installation

Please see the [documentation](https://docs.getoutline.com/s/hosting/) for running your own copy of Outline in a production configuration.

If you have questions or improvements for the docs please create a thread in [GitHub discussions](https://github.com/outline/outline/discussions).

# Development

There is a short guide for [setting up a development environment](https://docs.getoutline.com/s/hosting/doc/local-development-5hEhFRXow7) if you wish to contribute changes, fixes, and improvements to Outline.

## Contributing

Outline is built and maintained by a small team ‚Äì we&#039;d love your help to fix bugs and add features!

Before submitting a pull request _please_ discuss with the core team by creating or commenting in an issue on [GitHub](https://www.github.com/outline/outline/issues) ‚Äì we&#039;d also love to hear from you in the [discussions](https://www.github.com/outline/outline/discussions). This way we can ensure that an approach is agreed on before code is written. This will result in a much higher likelihood of your code being accepted.

If you‚Äôre looking for ways to get started, here&#039;s a list of ways to help us improve Outline:

- [Translation](docs/TRANSLATION.md) into other languages
- Issues with [`good first issue`](https://github.com/outline/outline/labels/good%20first%20issue) label
- Performance improvements, both on server and frontend
- Developer happiness and documentation
- Bugs and other issues listed on GitHub

## Architecture

If you&#039;re interested in contributing or learning more about the Outline codebase
please refer to the [architecture document](docs/ARCHITECTURE.md) first for a high level overview of how the application is put together.

## Debugging

In development Outline outputs simple logging to the console, prefixed by categories. In production it outputs JSON logs, these can be easily parsed by your preferred log ingestion pipeline.

HTTP logging is disabled by default, but can be enabled by setting the `DEBUG=http` environment variable.

## Tests

We aim to have sufficient test coverage for critical parts of the application and aren&#039;t aiming for 100% unit test coverage. All API endpoints and anything authentication related should be thoroughly tested.

To add new tests, write your tests with [Jest](https://facebook.github.io/jest/) and add a file with `.test.js` extension next to the tested code.

```shell
# To run all tests
make test

# To run backend tests in watch mode
make watch
```

Once the test database is created with `make test` you may individually run
frontend and backend tests directly.

```shell
# To run backend tests
yarn test:server

# To run a specific backend test
yarn test:server myTestFile

# To run frontend tests
yarn test:app
```

## Migrations

Sequelize is used to create and run migrations, for example:

```shell
yarn sequelize migration:generate --name my-migration
yarn sequelize db:migrate
```

Or to run migrations on test database:

```shell
yarn sequelize db:migrate --env test
```

# Activity

![Alt](https://repobeats.axiom.co/api/embed/ff2e4e6918afff1acf9deb72d1ba6b071d586178.svg &quot;Repobeats analytics image&quot;)

# License

Outline is [BSL 1.1 licensed](LICENSE).
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[mockoon/mockoon]]></title>
            <link>https://github.com/mockoon/mockoon</link>
            <guid>https://github.com/mockoon/mockoon</guid>
            <pubDate>Sun, 06 Jul 2025 00:05:27 GMT</pubDate>
            <description><![CDATA[Mockoon is the easiest and quickest way to run mock APIs locally. No remote deployment, no account required, open source.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/mockoon/mockoon">mockoon/mockoon</a></h1>
            <p>Mockoon is the easiest and quickest way to run mock APIs locally. No remote deployment, no account required, open source.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 7,444</p>
            <p>Forks: 420</p>
            <p>Stars today: 13 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://mockoon.com&quot; alt=&quot;mockoon logo&quot;&gt;
    &lt;img width=&quot;200&quot; height=&quot;200&quot; src=&quot;https://mockoon.com/images/logo-square-app.png&quot;&gt;
  &lt;/a&gt;
  &lt;br&gt;
  &lt;a href=&quot;https://mockoon.com/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Website-Go-green.svg?style=flat-square&amp;colorB=1997c6&quot;/&gt;&lt;/a&gt;
  &lt;a href=&quot;https://mockoon.com/newsletter/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Newsletter-Subscribe-green.svg?style=flat-square&quot;/&gt;&lt;/a&gt;
  &lt;br&gt;
  &lt;br&gt;
  &lt;h1&gt;Mockoon: awesome API mocking&lt;/h1&gt;
&lt;/div&gt;

Mockoon is the easiest and quickest way to design and run mock APIs. No remote deployment, no account required, free and open-source.

It combines a [desktop application](https://mockoon.com/download/) to design and run mock servers locally, and a [CLI](https://mockoon.com/cli/) to self-host your fake APIs. A [cloud](#subscribe-to-mockoon-cloud) is also available to collaborate with your team, keep your data in sync, and deploy your mock APIs.

API mocking helps you speed up development and third-party API integration by reducing dependency on external services and their limitations: rate limits, costs, availability, etc.
It also allows you to test your applications in a controlled environment with predictable responses, status codes, and latencies, and easily simulate edge cases and error scenarios.
Finally, you can onboard new team members faster by providing them with a consistent and reliable environment to test and develop their applications.

‚û°Ô∏è [Download](https://mockoon.com/download/)

&lt;div align=&quot;center&quot;&gt;
  &lt;img width=&quot;50%&quot; src=&quot;https://mockoon.com/images/hero-repo.png&quot;&gt;
&lt;/div&gt;

## Features

Mockoon offers many features:

- Unlimited number of mock local servers and routes
- CLI to run your mock in headless environments, CI, etc.
- Complete control on routes definition: HTTP methods and statuses, regex paths, file serving, custom headers, etc.
- OpenAPI compatibility
- Record/logs of all entering and forwarded requests
- JSON templating
- Proxy forwarding mode
- HTTPS support

You can check the [complete list](https://mockoon.com/features/) on the website.

## Download the desktop application

You can get Mockoon desktop&#039;s [latest release](https://github.com/mockoon/mockoon/releases/latest) directly from this repository or on the official [website](https://mockoon.com/download/). Mockoon desktop is also available through:

MacOS:

- [_Homebrew_](https://formulae.brew.sh/cask/mockoon): `brew install --cask mockoon`.

Windows:

- _winget_: `winget install mockoon`.
- [_Chocolatey_](https://community.chocolatey.org/packages/mockoon): `choco install mockoon`.
- [_Windows Store_](https://www.microsoft.com/en-us/p/mockoon/9pk8dmsn00jj)

Linux:

- [_Snap store_](https://snapcraft.io/mockoon): `snap install mockoon`.
- [_AUR_](https://aur.archlinux.org/packages/mockoon-bin): `yay -S mockoon-bin`.

## Install the CLI

Mockoon CLI is available as an [NPM package](https://www.npmjs.com/package/@mockoon/cli). Please check our [dedicated documentation](https://github.com/mockoon/mockoon/blob/main/packages/cli/README.md) to learn how to install and use it.

## Use in cloud functions and serverless environments

Mockoon&#039;s Serverless [NPM package](https://www.npmjs.com/package/@mockoon/serverless) provides an easy way to run Mockoon&#039;s mock APIs in cloud functions and serverless environments: AWS Lambda, GCP Functions, Firebase Functions, etc.

Please check our [dedicated documentation](https://github.com/mockoon/mockoon/blob/main/packages/serverless/README.md) to learn how to use it.

## Support us!

Mockoon is proudly **independent** and **open-source**, maintained without external funding. We rely on both **sponsorships** and **Mockoon Cloud subscriptions** to keep improving the project and building new features. A **big thank you** to the companies below for supporting our work and helping us grow (and all the [sponsors](https://github.com/mockoon/mockoon/blob/main/backers.md) who helped this project over time!):

### Platinum

&lt;div align=&quot;center&quot; style=&quot;margin-top:20px;margin-bottom:20px;&quot;&gt;
  &lt;a href=&quot;https://github.blog/2023-04-12-github-accelerator-our-first-cohort-and-whats-next/&quot;&gt;
      &lt;picture&gt;
      &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://mockoon.com/images/sponsors/light/github.png&quot;&gt;
      &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://mockoon.com/images/sponsors/github.png&quot;&gt;
      &lt;img src=&quot;https://mockoon.com/images/sponsors/light/github.png&quot; alt=&quot;GitHub logo&quot; /&gt;
      &lt;/picture&gt;
  &lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
  &lt;a href=&quot;https://localazy.com/register?ref=a9CiDC61gOac-azO&quot;&gt;
      &lt;picture&gt;
      &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://mockoon.com/images/sponsors/light/localazy.png&quot;&gt;
      &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://mockoon.com/images/sponsors/localazy.png&quot;&gt;
      &lt;img src=&quot;https://mockoon.com/images/sponsors/light/localazy.png&quot; alt=&quot;Localazy logo&quot; /&gt;
      &lt;/picture&gt;
  &lt;/a&gt;
&lt;/div&gt;

### Gold

&lt;div align=&quot;center&quot; style=&quot;margin-top:20px;margin-bottom:20px;&quot;&gt;
 
  &lt;a href=&quot;https://www.lambdatest.com/&quot;&gt;
      &lt;picture&gt;
      &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://mockoon.com/images/sponsors/light/lambdatest.png&quot;&gt;
      &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://mockoon.com/images/sponsors/lambdatest.png&quot;&gt;
      &lt;img src=&quot;https://mockoon.com/images/sponsors/light/lambdatest.png&quot; alt=&quot;Lambdatest logo&quot; /&gt;
      &lt;/picture&gt;
  &lt;/a&gt;
&lt;/div&gt;

### Silver

&lt;div align=&quot;center&quot; style=&quot;margin-top:20px;margin-bottom:20px;&quot;&gt;  
  &lt;a href=&quot;https://www.emqx.io/&quot;&gt;  
      &lt;img src=&quot;https://mockoon.com/images/sponsors/emqx.png&quot; alt=&quot;emqx logo&quot; /&gt;
  &lt;/a&gt;
&lt;/div&gt;

If you&#039;d like to **support Mockoon** as well, you can **become a sponsor** or **subscribe to Mockoon Cloud**, every contribution helps keep the project alive and evolving. Thank you!

&lt;div align=&quot;center&quot; style=&quot;margin-top:20px;margin-bottom:20px;&quot;&gt;
&lt;a href=&quot;https://github.com/sponsors/mockoon&quot;&gt;&lt;img src=&quot;https://mockoon.com/images/sponsor-btn.png?&quot; width=&quot;250&quot; alt=&quot;sponsor button&quot; /&gt;&lt;/a&gt;
&lt;/div&gt;

## Subscribe to Mockoon Cloud

With advanced features for solo developers and teams, Mockoon Cloud supercharges your API development:

- ‚òÅÔ∏è [cloud deployments](https://mockoon.com/docs/latest/mockoon-cloud/api-mock-cloud-deployments/)
- üîÑÔ∏è [data synchronization and real-time collaboration](https://mockoon.com/docs/latest/mockoon-cloud/data-synchronization-team-collaboration/)
- ü§ñ [AI powered API mocking](https://mockoon.com/ai-powered-api-mocking/)
- üìÉ Access to dozens of [ready-to-use JSON templates](https://mockoon.com/templates/).
- üí¨ Priority support and training.

Upgrade today and take your API development to the next level.

&lt;div align=&quot;center&quot; style=&quot;margin-top:20px;margin-bottom:20px;&quot;&gt;
&lt;a href=&quot;https://mockoon.com/cloud/&quot;&gt;&lt;img src=&quot;https://mockoon.com/images/cloud-btn.png?&quot; width=&quot;250&quot; alt=&quot;cloud button&quot; /&gt;&lt;/a&gt;
&lt;/div&gt;

## Mockoon&#039;s documentation

You will find Mockoon&#039;s [documentation](https://mockoon.com/docs/latest/about/) on the official website. It covers Mockoon&#039;s most complex features. Feel free to contribute or ask for new topics to be covered.

## Changelogs

You will find Mockoon applications [changelogs](https://mockoon.com/releases/) on the official website.

## Support/feedback

You can discuss all things related to Mockoon and ask for help on the [official community](https://github.com/mockoon/mockoon/discussions). It&#039;s also a good place to discuss bugs and feature requests before opening an issue on this repository.

## Contributing

If you are interested in contributing to Mockoon, please take a look at the [contributing guidelines](https://github.com/mockoon/mockoon/blob/main/CONTRIBUTING.md).

Please also take a look at our [Code of Conduct](https://github.com/mockoon/mockoon/blob/main/CODE_OF_CONDUCT.md).

## Roadmap

If you want to know what will be coming in the next release you can check the global [Roadmap](https://mockoon.com/public-roadmap/) or [subscribe to our newsletter](https://mockoon.com/newsletter/).
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[blakeblackshear/frigate]]></title>
            <link>https://github.com/blakeblackshear/frigate</link>
            <guid>https://github.com/blakeblackshear/frigate</guid>
            <pubDate>Sun, 06 Jul 2025 00:05:26 GMT</pubDate>
            <description><![CDATA[NVR with realtime local object detection for IP cameras]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/blakeblackshear/frigate">blakeblackshear/frigate</a></h1>
            <p>NVR with realtime local object detection for IP cameras</p>
            <p>Language: TypeScript</p>
            <p>Stars: 23,707</p>
            <p>Forks: 2,215</p>
            <p>Stars today: 27 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;img align=&quot;center&quot; alt=&quot;logo&quot; src=&quot;docs/static/img/frigate.png&quot;&gt;
&lt;/p&gt;

# Frigate - NVR With Realtime Object Detection for IP Cameras

A complete and local NVR designed for [Home Assistant](https://www.home-assistant.io) with AI object detection. Uses OpenCV and Tensorflow to perform realtime object detection locally for IP cameras.

Use of a [Google Coral Accelerator](https://coral.ai/products/) is optional, but highly recommended. The Coral will outperform even the best CPUs and can process 100+ FPS with very little overhead.

- Tight integration with Home Assistant via a [custom component](https://github.com/blakeblackshear/frigate-hass-integration)
- Designed to minimize resource use and maximize performance by only looking for objects when and where it is necessary
- Leverages multiprocessing heavily with an emphasis on realtime over processing every frame
- Uses a very low overhead motion detection to determine where to run object detection
- Object detection with TensorFlow runs in separate processes for maximum FPS
- Communicates over MQTT for easy integration into other systems
- Records video with retention settings based on detected objects
- 24/7 recording
- Re-streaming via RTSP to reduce the number of connections to your camera
- WebRTC &amp; MSE support for low-latency live view

## Documentation

View the documentation at https://docs.frigate.video

## Donations

If you would like to make a donation to support development, please use [Github Sponsors](https://github.com/sponsors/blakeblackshear).

## Screenshots

### Live dashboard
&lt;div&gt;
&lt;img width=&quot;800&quot; alt=&quot;Live dashboard&quot; src=&quot;https://github.com/blakeblackshear/frigate/assets/569905/5e713cb9-9db5-41dc-947a-6937c3bc376e&quot;&gt;
&lt;/div&gt;

### Streamlined review workflow
&lt;div&gt;
&lt;img width=&quot;800&quot; alt=&quot;Streamlined review workflow&quot; src=&quot;https://github.com/blakeblackshear/frigate/assets/569905/6fed96e8-3b18-40e5-9ddc-31e6f3c9f2ff&quot;&gt;
&lt;/div&gt;

### Multi-camera scrubbing
&lt;div&gt;
&lt;img width=&quot;800&quot; alt=&quot;Multi-camera scrubbing&quot; src=&quot;https://github.com/blakeblackshear/frigate/assets/569905/d6788a15-0eeb-4427-a8d4-80b93cae3d74&quot;&gt;
&lt;/div&gt;

### Built-in mask and zone editor
&lt;div&gt;
&lt;img width=&quot;800&quot; alt=&quot;Multi-camera scrubbing&quot; src=&quot;https://github.com/blakeblackshear/frigate/assets/569905/d7885fc3-bfe6-452f-b7d0-d957cb3e31f5&quot;&gt;
&lt;/div&gt;
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[logancyang/obsidian-copilot]]></title>
            <link>https://github.com/logancyang/obsidian-copilot</link>
            <guid>https://github.com/logancyang/obsidian-copilot</guid>
            <pubDate>Sun, 06 Jul 2025 00:05:25 GMT</pubDate>
            <description><![CDATA[THE Copilot in Obsidian]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/logancyang/obsidian-copilot">logancyang/obsidian-copilot</a></h1>
            <p>THE Copilot in Obsidian</p>
            <p>Language: TypeScript</p>
            <p>Stars: 4,905</p>
            <p>Forks: 399</p>
            <p>Stars today: 5 stars today</p>
            <h2>README</h2><pre>&lt;h1 align=&quot;center&quot;&gt;Copilot for Obsidian&lt;/h1&gt;

&lt;h2 align=&quot;center&quot;&gt;
The Ultimate AI Assistant for Your Second Brain
&lt;/h2&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/github/v/release/logancyang/obsidian-copilot?style=for-the-badge&amp;sort=semver&quot; alt=&quot;GitHub release (latest SemVer)&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/badge/dynamic/json?logo=obsidian&amp;color=%23483699&amp;label=downloads&amp;query=%24%5B%22copilot%22%5D.downloads&amp;url=https%3A%2F%2Fraw.githubusercontent.com%2Fobsidianmd%2Fobsidian-releases%2Fmaster%2Fcommunity-plugin-stats.json&amp;style=for-the-badge&quot; alt=&quot;Obsidian Downloads&quot;&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.obsidiancopilot.com/en/docs&quot;&gt;Documentation&lt;/a&gt; |
  &lt;a href=&quot;https://www.youtube.com/@loganhallucinates&quot;&gt;Youtube&lt;/a&gt; |
  &lt;a href=&quot;https://github.com/logancyang/obsidian-copilot/issues/new?template=bug_report.md&quot;&gt;Report Bug&lt;/a&gt; |
  &lt;a href=&quot;https://github.com/logancyang/obsidian-copilot/issues/new?template=feature_request.md&quot;&gt;Request Feature&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://example.com](https://obsidian.md/blog/2024-goty-winners/&quot;&gt;
    &lt;img src=&quot;./images/reward-banner.svg&quot; alt=&quot;Reward Banner&quot; width=&quot;400&quot;/&gt;
  &lt;/a&gt;
&lt;/p&gt;

Copilot for Obsidian is your best in‚Äëvault AI assistant, designed to listen, act at the speed of thought, and keep you creating in flow‚Äîall within Obsidian‚Äôs integrated, tab‚Äëfree workspace.

- **üîí Your data is 100% yours**: Local storage, no ads, and full control of your API keys.
- **üß† Elevate your second brain**: Tap any OpenAI-compatible or local model to uncover insights, spark connections, and create powerful content.
- **üåê Instant multimedia understanding**: Drop in webpages, YouTube videos, images, PDFs, or real-time web search for quick insights and summaries.
- **‚úçÔ∏è Create at the speed of thought**: Launch Prompt Palette or edit with AI in one click‚Äîyour ideas, amplified effortlessly.

&lt;p align=&quot;center&quot;&gt;
  &lt;em&gt;Your AI assistant in Obsidian‚Äîpowerful yet intuitive, keeping you in the creative flow.&lt;/em&gt;
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;./images/product-UI-screenshot.png&quot; alt=&quot;Product UI screenshot&quot; width=&quot;800&quot;/&gt;
&lt;/p&gt;

## Why People Love It ‚ù§Ô∏è

- *&quot;Copilot is the missing link that turns Obsidian into a true second brain. I use it to draft investment memos with text, code, and visuals‚Äîall in one place. It‚Äôs the first tool that truly unifies how I search, process, organize, and retrieve knowledge without ever leaving Obsidian. With AI-powered search, organization, and reasoning built into my notes, it unlocks insights I‚Äôd otherwise miss. My workflow is faster, deeper, and more connected than ever‚ÄîI can‚Äôt imagine working without it.&quot;*¬†- @jasonzhangb, Investor &amp; Research Analyst
- *&quot;Since discovering Copilot, my writing process has been completely transformed. Conversing with my own articles and thoughts is the most refreshing experience I‚Äôve had in decades.‚Äù*¬†- Mat QV, Writer
- *&quot;Copilot has transformed our family‚Äînot just as a productivity assistant, but as a therapist. I introduced it to my non‚Äëtechnical wife, Mania, who was stressed about our daughter‚Äôs upcoming exam; within an hour, she gained clarity on her mindset and next steps, finding calm and confidence.&quot;*¬†- @screenfluent, A Loving Husband

## **Get Started in 5 Minutes**

### FREE Product Features

**üîå¬†Install Copilot in Community Plugins in Obsidian**

**üîë¬†Set Up Your AI Model (API Key)**

- To start using Copilot AI features, you&#039;ll need access to an AI model of your choice.

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.youtube.com/watch?v=mzMbiamzOqM&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;./images/AI-Model-Setup.png&quot; alt=&quot;AI Model API Key&quot; width=&quot;700&quot; height=&quot;394&quot;&gt;
  &lt;/a&gt;&lt;br&gt;
  &lt;em&gt;Click the image to watch the video on YouTube&lt;/em&gt;
&lt;/p&gt;

**üìñ** **Chat Mode: Summarize Specific Notes**

- üß†¬†**Use When:** You want to reference specific notes or folders, generate content, or talk through ideas with Copilot like a knowledgeable thought partner.

- üí≠ **In `Chat` mode, ask Copilot:**
  &gt; _&quot;Summarize [[Meeting Notes ‚Äì March]] and create a follow-up task list based on notes in {projects}.&quot;_

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.youtube.com/watch?v=idit7nCqEs0&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;./images/Chat-Mode.png&quot; alt=&quot;Chat Mode&quot; width=&quot;700&quot; height=&quot;394&quot;&gt;
  &lt;/a&gt;&lt;br&gt;
  &lt;em&gt;Click the image to watch the video on YouTube&lt;/em&gt;
&lt;/p&gt;

**üìñ** **Vault QA Mode: Chat With Your Entire Vault**

- üß† **Use When:** You want to search your vault for patterns, ideas, or facts without knowing exactly where the information is stored.

- üí≠ **In `Vault QA` mode, ask Copilot:**

  &gt; _&quot;What insights can I gather about the benefits of journaling from all of my notes?&quot;_

- üí° **Tip:** Replace _the benefits of journaling_ with any topic mentioned in your notes to get more precise results.

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.youtube.com/watch?v=hBLMWE8WRFU&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;./images/Vault-Mode.png&quot; alt=&quot;Vault Mode&quot; width=&quot;700&quot; height=&quot;394&quot;&gt;
  &lt;/a&gt;&lt;br&gt;
  &lt;em&gt;Click the image to watch the video on YouTube&lt;/em&gt;
&lt;/p&gt;

**üìñ¬†Edit and Apply with One Click**

- üß† **Use When:** You want to quickly fix grammar, spelling or wording directly in your notes‚Äîwithout switching tabs or manually rewriting.

- üí≠ **Select the text** and **edit with one RIGHT click**

- üí° **Tip:** Set up and customize your right-click menu with common actions you use often, like _&quot;Summarize&quot;_, _&quot;Simplify Language&quot;_, or _&quot;Translate to Formal Tone&quot;_‚Äîso you can apply them effortlessly while you write.

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.youtube.com/watch?v=hSmRnmEVoec&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;./images/One-Click-Commands.png&quot; alt=&quot;One-Click Commands&quot; width=&quot;700&quot; height=&quot;394&quot;&gt;
  &lt;/a&gt;&lt;br&gt;
  &lt;em&gt;Click the image to watch the video on YouTube&lt;/em&gt;
&lt;/p&gt;

**üìñ Automate your workflow with the Copilot Prompt Palette**

- üß† **Use When:** You want to speed up repetitive tasks like summarizing, rewriting, or translating without typing full prompts every time.

- üí≠ Type / to use Prompt Palette

- üí° **Tip:** Create shortcuts for your most-used actions‚Äîlike _&quot;Translate to Spanish&quot;_ or _&quot;Draft a blog post outline&quot;_‚Äîand trigger them instantly with typing / !

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.youtube.com/watch?v=9YzY2OJ54wM&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;./images/Prompt-Palette.png&quot; alt=&quot;Prompt Palette&quot; width=&quot;700&quot; height=&quot;394&quot;&gt;
  &lt;/a&gt;&lt;br&gt;
  &lt;em&gt;Click the image to watch the video on YouTube&lt;/em&gt;
&lt;/p&gt;

**üìñ Stay in flow with the Relevant Notes**

- üß† **Use When:** You&#039;re working on a note and want to pull in context or insights from related notes‚Äîwithout breaking your focus.

- üí≠ Appears automatically when there&#039;s useful related content.

- üí° **Tip:** Use it to quickly reference past research, ideas, or decisions‚Äîno need to search or switch tabs.

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.youtube.com/watch?v=qapQD7jD3Uk&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;./images/Relevant-Notes.png&quot; alt=&quot;Relevant Notes&quot; width=&quot;700&quot; height=&quot;394&quot;&gt;
  &lt;/a&gt;&lt;br&gt;
  &lt;em&gt;Click the image to watch the video on YouTube&lt;/em&gt;
&lt;/p&gt;

### Level Up with Copilot Plus and Beyond

Copilot Plus brings powerful AI agentic capabilities, context-aware actions and seamless tool integration‚Äîbuilt to elevate your knowledge work in Obsidian.

üÜô¬†**Upgrade to Copilot Plus**

First, go to https://www.obsidiancopilot.com/en to subscribe to Copilot Plus. Then, set up Copilot Plus License Key in Obsidian.

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.youtube.com/watch?v=pPfWKZnNYhA&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;./images/Copilot-Plus-Setup.png&quot; alt=&quot;Copilot Plus Setup&quot; width=&quot;700&quot; height=&quot;394&quot;&gt;
  &lt;/a&gt;&lt;br&gt;
  &lt;em&gt;Click the image to watch the video on YouTube&lt;/em&gt;
&lt;/p&gt;

‚ùîCommunity is at the heart of everything we build. Join us on Discord for updates, priority support, and a voice in shaping the best AI products for your experience.

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;./images/discord-support.png&quot; alt=&quot;Discord support screenshot&quot; width=&quot;700&quot;/&gt;
&lt;/p&gt;

**üìñ¬†Get Precision Insights From a Specific Time Window**

- üß† **Use When:** You want to quickly review tasks, notes, or ideas from a specific time range without manually digging through files.

- üí≠ **In Chat mode, ask Copilot:**

  &gt; _&quot;Give me a recap of everything I captured last week.&quot;_

- üí° **Tip:** Try variations like _&quot;Summarize my highlights from August 11 through August 22&quot;_ for even more insights.

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.youtube.com/watch?v=sXP2sjvrqtI&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;./images/Time-Based-Queries.png&quot; alt=&quot;Time-Based Queries&quot; width=&quot;700&quot; height=&quot;394&quot;&gt;
  &lt;/a&gt;&lt;br&gt;
  &lt;em&gt;Click the image to watch the video on YouTube&lt;/em&gt;
&lt;/p&gt;

**üìñ One Prompt, Every Source‚ÄîInstant Summaries from PDFs, Videos, and Web**

- üß† **Use When:** You want to combine information from multiple formats‚Äîdocuments, videos, web pages, and images‚Äîinto one concise, actionable summary.

- üí≠ **In PLUS mode, ask Copilot:**

  &gt; &quot;Please write a short intro of Kiwi birds based on the following information I collected about this animal.

  &gt; @youtube Summarize [](https://www.youtube.com/watch?v=tZ2jm_UPc6c&amp;t=417s)[https://www.youtube.com/watch?v=tZ2jm_UPc6c&amp;t=417s](https://www.youtube.com/watch?v=ABTfc5wUT1U)
  &gt; in a short paragraph.

  &gt; @websearch where can I find Kiwi birds?

  &gt; Summarize https://www.doc.govt.nz/nature/native-animals/birds/birds-a-z/kiwi/ in 300 words.‚Äú

- üõ†Ô∏è **Add PDFs and Images as Context to Enrich Your Learning**

- üí° _Tip: For large PDFs, reference specific sections to focus the AI&#039;s attention._

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.youtube.com/watch?v=WXoOZmMSHVE&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;./images/One-Prompt-Every-Source.png&quot; alt=&quot;One Prompt, Every Source&quot; width=&quot;700&quot; height=&quot;394&quot;&gt;
  &lt;/a&gt;&lt;br&gt;
  &lt;em&gt;Click the image to watch the video on YouTube&lt;/em&gt;
&lt;/p&gt;


# **üí° Need Help?**

- Check the¬†[documentation](https://www.obsidiancopilot.com/en/docs)¬†for setup guides, how-tos, and advanced features.
- Watch¬†[Youtube](https://www.youtube.com/@loganhallucinates)¬†for walkthroughs.
- If you&#039;re experiencing a bug or have a feature idea, please follow the steps below to help us help you faster:
  - üêõ Bug Report Checklist
    - ‚òëÔ∏èUse the¬†[bug report template](https://github.com/logancyang/obsidian-copilot/issues/new?template=bug_report.md)¬†when reporting an issue
    - ‚òëÔ∏èEnable Debug Mode in Copilot Settings ‚Üí Advanced for more detailed logs
    - ‚òëÔ∏èOpen the dev console to collect error messages:
      - Mac: Cmd + Option + I
      - Windows: Ctrl + Shift + I
    - ‚òëÔ∏èTurn off all other plugins, keeping only Copilot enabled
    - ‚òëÔ∏èAttach relevant console logs to your report
    - ‚òëÔ∏èSubmit your bug report¬†[here](https://github.com/logancyang/obsidian-copilot/issues/new?template=bug_report.md)
  - üí° Feature Request Checklist
    - ‚òëÔ∏èUse the¬†[feature request template](https://github.com/logancyang/obsidian-copilot/issues/new?template=feature_request.md)¬†for requesting a new feature
    - ‚òëÔ∏èClearly describe the feature, why it matters, and how it would help
    - ‚òëÔ∏èSubmit your feature request¬†[here](https://github.com/logancyang/obsidian-copilot/issues/new?template=feature_request.md)

# **üôã‚Äç‚ôÇÔ∏è FAQ**

&lt;details&gt;
  &lt;summary&gt;&lt;strong&gt;Why isn‚Äôt Vault search finding my notes?&lt;/strong&gt;&lt;/summary&gt;

If you&#039;re using the Vault QA mode (or the tool &lt;code&gt;@vault&lt;/code&gt; in Plus), try the following:

- Ensure you have a working embedding model from your AI model&#039;s provider (e.g. OpenAI). Watch this video: [AI Model Setup (API Key)](https://www.youtube.com/watch?v=mzMbiamzOqM)
- Ensure your Copilot indexing is up-to-date. Watch this video: [Vault Mode](https://www.youtube.com/watch?v=hBLMWE8WRFU)
- If issues persist, run &lt;strong&gt;Force Re-Index&lt;/strong&gt; or use &lt;strong&gt;List Indexed Files&lt;/strong&gt; from the Command Palette to inspect what&#039;s included in the index.
- ‚ö†Ô∏è &lt;strong&gt;Don‚Äôt switch embedding models after indexing&lt;/strong&gt;‚Äîit can break the results.
&lt;/details&gt;

&lt;details&gt;
  &lt;summary&gt;&lt;strong&gt;Why is my AI model returning error code‚ÄØ429: ‚ÄòInsufficient Quota‚Äô?&lt;/strong&gt;&lt;/summary&gt;

Most likely this is happening because you haven‚Äôt configured billing with your chosen model provider‚Äîor you‚Äôve hit your monthly quota. For example, OpenAI typically caps individual accounts at $120/month. To resolve:

- ‚ñ∂Ô∏è Watch the ‚ÄúAI Model Setup‚Äù video: [AI Model Setup (API Key)](https://www.youtube.com/watch?v=mzMbiamzOqM)
- üîç Verify your billing settings in your OpenAI dashboard
- üí≥ Add a payment method if one isn‚Äôt already on file
- üìä Check your usage dashboard for any quota or limit warnings

If you‚Äôre using a different provider, please refer to their documentation and billing policies for the equivalent steps.

&lt;/details&gt;

&lt;details&gt;
  &lt;summary&gt;&lt;strong&gt;Why am I getting a token limit error?&lt;/strong&gt;&lt;/summary&gt;

Please refer to your model provider‚Äôs documentation for the context window size.

‚ö†Ô∏è If you set a large &lt;strong&gt;max token limit&lt;/strong&gt; in your Copilot settings, you may encounter this error.

- &lt;strong&gt;Max tokens&lt;/strong&gt; refers to &lt;em&gt;completion tokens&lt;/em&gt;, not input tokens.
- A higher output token limit means less room for input!

üß† Behind-the-scenes prompts for Copilot commands also consume tokens, so:

- Keep your message length short
- Set a reasonable max token value to avoid hitting the cap

üí° For QA with unlimited context, switch to the &lt;strong&gt;Vault QA&lt;/strong&gt; mode in the dropdown (Copilot v2.1.0+ required).

&lt;/details&gt;

# **üíé Choose the Copilot Plan That‚Äôs Right for You**

| **Feature**                                                        | **Free Plan ‚úÖ** | **Plus Plan üíé** | **Believer Plan üõ°Ô∏è** |
| ------------------------------------------------------------------ | ---------------- | ---------------- | -------------------- |
| No credit card or sign-up required                                 | ‚úÖ               | ‚ùå               | ‚ùå                   |
| All open-source features                                           | ‚úÖ               | ‚úÖ               | ‚úÖ                   |
| Bring your own API key                                             | ‚úÖ               | ‚úÖ               | ‚úÖ                   |
| Best-in-class AI chat in Obsidian                                  | ‚úÖ               | ‚úÖ               | ‚úÖ                   |
| Local data store for Vault QA                                      | ‚úÖ               | ‚úÖ               | ‚úÖ                   |
| Support                                                            | ‚úÖ Essential     | ‚úÖ Pro           | ‚úÖ Elite             |
| AI agent capabilities                                              | ‚ùå               | ‚úÖ               | ‚úÖ                   |
| Image and PDF support                                              | ‚ùå               | ‚úÖ               | ‚úÖ                   |
| Enhanced chat UI (context menu)                                    | ‚ùå               | ‚úÖ               | ‚úÖ                   |
| State-of-the-art embedding models included                         | ‚ùå               | ‚úÖ               | ‚úÖ                   |
| Exclusive @AI tools (e.g., web, YouTube)                           | ‚ùå               | ‚úÖ               | ‚úÖ                   |
| Exclusive chat model included in plan                              | ‚ùå               | ‚úÖ               | ‚úÖ                   |
| Access to exclusive Discord channel                                | ‚ùå               | ‚úÖ               | ‚úÖ                   |
| Lifetime access                                                    | ‚ùå               | ‚ùå               | ‚úÖ                   |
| Priority access to new features                                    | ‚ùå               | ‚ùå               | ‚úÖ                   |
| Prioritized feature requests                                       | ‚ùå               | ‚ùå               | ‚úÖ                   |
| Exclusive access to next-gen chat &amp; embedding models (coming soon) | ‚ùå               | ‚ùå               | ‚úÖ                   |

## **üôè Thank You**

If you share the vision of building the most powerful AI agent for our second brain, consider¬†[sponsoring this project](https://github.com/sponsors/logancyang)¬†or buying me a coffee. Help spread the word by sharing Copilot for Obsidian on Twitter/X, Reddit, or your favorite platform!

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;https://camo.githubusercontent.com/7b8f7343bfc6e3c65c7901846637b603fd812f1a5f768d8b0572558bde859eb9/68747470733a2f2f63646e2e6275796d6561636f666665652e636f6d2f627574746f6e732f76322f64656661756c742d79656c6c6f772e706e67&quot; alt=&quot;BuyMeACoffee&quot; width=&quot;200&quot;&gt;
&lt;/p&gt;

**Acknowledgments**

Special thanks to our top sponsors: @mikelaaron, @pedramamini, @Arlorean, @dashinja, @azagore, @MTGMAD, @gpythomas, @emaynard, @scmarinelli, @borthwick, @adamhill, @gluecode, @rusi, @timgrote, @JiaruiYu-Consilium, @ddocta, @AMOz1, @chchwy, @pborenstein, @GitTom, @kazukgw, @mjluser1, @joesfer, @rwaal, @turnoutnow-harpreet, @dreznicek, @xrise-informatik, @jeremygentles, @ZhengRui, @bfoujols, @jsmith0475, @pagiaddlemon, @sebbyyyywebbyyy, @royschwartz2, @vikram11, @amiable-dev, @khalidhalim, @DrJsPBs, @chishaku, @Andrea18500, @shayonpal, @rhm2k, @snorcup, @JohnBub, @obstinatelark, @jonashaefele, @vishnu2kmohan

## **Copilot Plus Disclosure**

Copilot Plus is a premium product of Brevilabs LLC and it is not affiliated with Obsidian. It offers a powerful agentic AI integration into Obsidian. Please check out our website¬†[obsidiancopilot.com](https://obsidiancopilot.com/)¬†for more details!

- An account and payment are required for full access.
- Copilot Plus requires network use to faciliate the AI agent.
- Copilot Plus does not access your files without your consent.
- Copilot Plus collect server-side telemetry to improve the product. Please see the privacy policy on the website for more details.
- The frontend code of Copilot plugin is fully open-source. However, the backend code facilitating the AI agents is close-sourced and proprietary.
- We offer a full refund if you are not satisfied with the product within 14 days of your purchase, no questions asked.

## **Authors**

Brevilabs Team | Email:¬†logan@brevilabs.com¬†| X/Twitter:¬†[@logancyang](https://twitter.com/logancyang)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
    </channel>
</rss>