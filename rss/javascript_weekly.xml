<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending This Week for javascript - JavaScript Weekly</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories this week for javascript.</description>
        <lastBuildDate>Fri, 14 Mar 2025 17:49:31 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[mendableai/firecrawl-mcp-server]]></title>
            <link>https://github.com/mendableai/firecrawl-mcp-server</link>
            <guid>https://github.com/mendableai/firecrawl-mcp-server</guid>
            <pubDate>Fri, 14 Mar 2025 17:49:31 GMT</pubDate>
            <description><![CDATA[Official Firecrawl MCP Server - Adds powerful web scraping to Cursor, Claude and any other LLM clients.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/mendableai/firecrawl-mcp-server">mendableai/firecrawl-mcp-server</a></h1>
            <p>Official Firecrawl MCP Server - Adds powerful web scraping to Cursor, Claude and any other LLM clients.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 930</p>
            <p>Forks: 78</p>
            <p>Stars today: 375 stars this week</p>
            <h2>README</h2><pre># Firecrawl MCP Server

A Model Context Protocol (MCP) server implementation that integrates with [Firecrawl](https://github.com/mendableai/firecrawl) for web scraping capabilities.

Big thanks to [@vrknetha](https://github.com/vrknetha), [@cawstudios](https://caw.tech) for the initial implementation!

## Features

- Scrape, crawl, search, extract, deep research and batch scrape support
- Web scraping with JS rendering
- URL discovery and crawling
- Web search with content extraction
- Automatic retries with exponential backoff
- - Efficient batch processing with built-in rate limiting
- Credit usage monitoring for cloud API
- Comprehensive logging system
- Support for cloud and self-hosted FireCrawl instances
- Mobile/Desktop viewport support
- Smart content filtering with tag inclusion/exclusion

## Installation

### Running with npx

```bash
env FIRECRAWL_API_KEY=fc-YOUR_API_KEY npx -y firecrawl-mcp
```

### Manual Installation

```bash
npm install -g firecrawl-mcp
```

### Running on Cursor

Configuring Cursor üñ•Ô∏è
Note: Requires Cursor version 0.45.6+

To configure FireCrawl MCP in Cursor:

1. Open Cursor Settings
2. Go to Features &gt; MCP Servers 
3. Click &quot;+ Add New MCP Server&quot;
4. Enter the following:
   - Name: &quot;firecrawl-mcp&quot; (or your preferred name)
   - Type: &quot;command&quot;
   - Command: `env FIRECRAWL_API_KEY=your-api-key npx -y firecrawl-mcp`

&gt; If you are using Windows and are running into issues, try `cmd /c &quot;set FIRECRAWL_API_KEY=your-api-key &amp;&amp; npx -y firecrawl-mcp&quot;`

Replace `your-api-key` with your FireCrawl API key.

After adding, refresh the MCP server list to see the new tools. The Composer Agent will automatically use FireCrawl MCP when appropriate, but you can explicitly request it by describing your web scraping needs. Access the Composer via Command+L (Mac), select &quot;Agent&quot; next to the submit button, and enter your query.

### Running on Windsurf

Add this to your `./codeium/windsurf/model_config.json`:

```json
{
  &quot;mcpServers&quot;: {
    &quot;mcp-server-firecrawl&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;firecrawl-mcp&quot;],
      &quot;env&quot;: {
        &quot;FIRECRAWL_API_KEY&quot;: &quot;YOUR_API_KEY_HERE&quot;
      }
    }
  }
}
```


### Installing via Smithery (Legacy)

To install FireCrawl for Claude Desktop automatically via [Smithery](https://smithery.ai/server/@mendableai/mcp-server-firecrawl):

```bash
npx -y @smithery/cli install @mendableai/mcp-server-firecrawl --client claude
```

## Configuration

### Environment Variables

#### Required for Cloud API

- `FIRECRAWL_API_KEY`: Your FireCrawl API key
  - Required when using cloud API (default)
  - Optional when using self-hosted instance with `FIRECRAWL_API_URL`
- `FIRECRAWL_API_URL` (Optional): Custom API endpoint for self-hosted instances
  - Example: `https://firecrawl.your-domain.com`
  - If not provided, the cloud API will be used (requires API key)

#### Optional Configuration

##### Retry Configuration

- `FIRECRAWL_RETRY_MAX_ATTEMPTS`: Maximum number of retry attempts (default: 3)
- `FIRECRAWL_RETRY_INITIAL_DELAY`: Initial delay in milliseconds before first retry (default: 1000)
- `FIRECRAWL_RETRY_MAX_DELAY`: Maximum delay in milliseconds between retries (default: 10000)
- `FIRECRAWL_RETRY_BACKOFF_FACTOR`: Exponential backoff multiplier (default: 2)

##### Credit Usage Monitoring

- `FIRECRAWL_CREDIT_WARNING_THRESHOLD`: Credit usage warning threshold (default: 1000)
- `FIRECRAWL_CREDIT_CRITICAL_THRESHOLD`: Credit usage critical threshold (default: 100)

### Configuration Examples

For cloud API usage with custom retry and credit monitoring:

```bash
# Required for cloud API
export FIRECRAWL_API_KEY=your-api-key

# Optional retry configuration
export FIRECRAWL_RETRY_MAX_ATTEMPTS=5        # Increase max retry attempts
export FIRECRAWL_RETRY_INITIAL_DELAY=2000    # Start with 2s delay
export FIRECRAWL_RETRY_MAX_DELAY=30000       # Maximum 30s delay
export FIRECRAWL_RETRY_BACKOFF_FACTOR=3      # More aggressive backoff

# Optional credit monitoring
export FIRECRAWL_CREDIT_WARNING_THRESHOLD=2000    # Warning at 2000 credits
export FIRECRAWL_CREDIT_CRITICAL_THRESHOLD=500    # Critical at 500 credits
```

For self-hosted instance:

```bash
# Required for self-hosted
export FIRECRAWL_API_URL=https://firecrawl.your-domain.com

# Optional authentication for self-hosted
export FIRECRAWL_API_KEY=your-api-key  # If your instance requires auth

# Custom retry configuration
export FIRECRAWL_RETRY_MAX_ATTEMPTS=10
export FIRECRAWL_RETRY_INITIAL_DELAY=500     # Start with faster retries
```

### Usage with Claude Desktop

Add this to your `claude_desktop_config.json`:

```json
{
  &quot;mcpServers&quot;: {
    &quot;mcp-server-firecrawl&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;firecrawl-mcp&quot;],
      &quot;env&quot;: {
        &quot;FIRECRAWL_API_KEY&quot;: &quot;YOUR_API_KEY_HERE&quot;,

        &quot;FIRECRAWL_RETRY_MAX_ATTEMPTS&quot;: &quot;5&quot;,
        &quot;FIRECRAWL_RETRY_INITIAL_DELAY&quot;: &quot;2000&quot;,
        &quot;FIRECRAWL_RETRY_MAX_DELAY&quot;: &quot;30000&quot;,
        &quot;FIRECRAWL_RETRY_BACKOFF_FACTOR&quot;: &quot;3&quot;,

        &quot;FIRECRAWL_CREDIT_WARNING_THRESHOLD&quot;: &quot;2000&quot;,
        &quot;FIRECRAWL_CREDIT_CRITICAL_THRESHOLD&quot;: &quot;500&quot;
      }
    }
  }
}
```

### System Configuration

The server includes several configurable parameters that can be set via environment variables. Here are the default values if not configured:

```typescript
const CONFIG = {
  retry: {
    maxAttempts: 3, // Number of retry attempts for rate-limited requests
    initialDelay: 1000, // Initial delay before first retry (in milliseconds)
    maxDelay: 10000, // Maximum delay between retries (in milliseconds)
    backoffFactor: 2, // Multiplier for exponential backoff
  },
  credit: {
    warningThreshold: 1000, // Warn when credit usage reaches this level
    criticalThreshold: 100, // Critical alert when credit usage reaches this level
  },
};
```

These configurations control:

1. **Retry Behavior**

   - Automatically retries failed requests due to rate limits
   - Uses exponential backoff to avoid overwhelming the API
   - Example: With default settings, retries will be attempted at:
     - 1st retry: 1 second delay
     - 2nd retry: 2 seconds delay
     - 3rd retry: 4 seconds delay (capped at maxDelay)

2. **Credit Usage Monitoring**
   - Tracks API credit consumption for cloud API usage
   - Provides warnings at specified thresholds
   - Helps prevent unexpected service interruption
   - Example: With default settings:
     - Warning at 1000 credits remaining
     - Critical alert at 100 credits remaining

### Rate Limiting and Batch Processing

The server utilizes FireCrawl&#039;s built-in rate limiting and batch processing capabilities:

- Automatic rate limit handling with exponential backoff
- Efficient parallel processing for batch operations
- Smart request queuing and throttling
- Automatic retries for transient errors

## Available Tools

### 1. Scrape Tool (`firecrawl_scrape`)

Scrape content from a single URL with advanced options.

```json
{
  &quot;name&quot;: &quot;firecrawl_scrape&quot;,
  &quot;arguments&quot;: {
    &quot;url&quot;: &quot;https://example.com&quot;,
    &quot;formats&quot;: [&quot;markdown&quot;],
    &quot;onlyMainContent&quot;: true,
    &quot;waitFor&quot;: 1000,
    &quot;timeout&quot;: 30000,
    &quot;mobile&quot;: false,
    &quot;includeTags&quot;: [&quot;article&quot;, &quot;main&quot;],
    &quot;excludeTags&quot;: [&quot;nav&quot;, &quot;footer&quot;],
    &quot;skipTlsVerification&quot;: false
  }
}
```

### 2. Batch Scrape Tool (`firecrawl_batch_scrape`)

Scrape multiple URLs efficiently with built-in rate limiting and parallel processing.

```json
{
  &quot;name&quot;: &quot;firecrawl_batch_scrape&quot;,
  &quot;arguments&quot;: {
    &quot;urls&quot;: [&quot;https://example1.com&quot;, &quot;https://example2.com&quot;],
    &quot;options&quot;: {
      &quot;formats&quot;: [&quot;markdown&quot;],
      &quot;onlyMainContent&quot;: true
    }
  }
}
```

Response includes operation ID for status checking:

```json
{
  &quot;content&quot;: [
    {
      &quot;type&quot;: &quot;text&quot;,
      &quot;text&quot;: &quot;Batch operation queued with ID: batch_1. Use firecrawl_check_batch_status to check progress.&quot;
    }
  ],
  &quot;isError&quot;: false
}
```

### 3. Check Batch Status (`firecrawl_check_batch_status`)

Check the status of a batch operation.

```json
{
  &quot;name&quot;: &quot;firecrawl_check_batch_status&quot;,
  &quot;arguments&quot;: {
    &quot;id&quot;: &quot;batch_1&quot;
  }
}
```

### 4. Search Tool (`firecrawl_search`)

Search the web and optionally extract content from search results.

```json
{
  &quot;name&quot;: &quot;firecrawl_search&quot;,
  &quot;arguments&quot;: {
    &quot;query&quot;: &quot;your search query&quot;,
    &quot;limit&quot;: 5,
    &quot;lang&quot;: &quot;en&quot;,
    &quot;country&quot;: &quot;us&quot;,
    &quot;scrapeOptions&quot;: {
      &quot;formats&quot;: [&quot;markdown&quot;],
      &quot;onlyMainContent&quot;: true
    }
  }
}
```

### 5. Crawl Tool (`firecrawl_crawl`)

Start an asynchronous crawl with advanced options.

```json
{
  &quot;name&quot;: &quot;firecrawl_crawl&quot;,
  &quot;arguments&quot;: {
    &quot;url&quot;: &quot;https://example.com&quot;,
    &quot;maxDepth&quot;: 2,
    &quot;limit&quot;: 100,
    &quot;allowExternalLinks&quot;: false,
    &quot;deduplicateSimilarURLs&quot;: true
  }
}
```

### 6. Extract Tool (`firecrawl_extract`)

Extract structured information from web pages using LLM capabilities. Supports both cloud AI and self-hosted LLM extraction.

```json
{
  &quot;name&quot;: &quot;firecrawl_extract&quot;,
  &quot;arguments&quot;: {
    &quot;urls&quot;: [&quot;https://example.com/page1&quot;, &quot;https://example.com/page2&quot;],
    &quot;prompt&quot;: &quot;Extract product information including name, price, and description&quot;,
    &quot;systemPrompt&quot;: &quot;You are a helpful assistant that extracts product information&quot;,
    &quot;schema&quot;: {
      &quot;type&quot;: &quot;object&quot;,
      &quot;properties&quot;: {
        &quot;name&quot;: { &quot;type&quot;: &quot;string&quot; },
        &quot;price&quot;: { &quot;type&quot;: &quot;number&quot; },
        &quot;description&quot;: { &quot;type&quot;: &quot;string&quot; }
      },
      &quot;required&quot;: [&quot;name&quot;, &quot;price&quot;]
    },
    &quot;allowExternalLinks&quot;: false,
    &quot;enableWebSearch&quot;: false,
    &quot;includeSubdomains&quot;: false
  }
}
```

Example response:

```json
{
  &quot;content&quot;: [
    {
      &quot;type&quot;: &quot;text&quot;,
      &quot;text&quot;: {
        &quot;name&quot;: &quot;Example Product&quot;,
        &quot;price&quot;: 99.99,
        &quot;description&quot;: &quot;This is an example product description&quot;
      }
    }
  ],
  &quot;isError&quot;: false
}
```

#### Extract Tool Options:

- `urls`: Array of URLs to extract information from
- `prompt`: Custom prompt for the LLM extraction
- `systemPrompt`: System prompt to guide the LLM
- `schema`: JSON schema for structured data extraction
- `allowExternalLinks`: Allow extraction from external links
- `enableWebSearch`: Enable web search for additional context
- `includeSubdomains`: Include subdomains in extraction

When using a self-hosted instance, the extraction will use your configured LLM. For cloud API, it uses FireCrawl&#039;s managed LLM service.

## Logging System

The server includes comprehensive logging:

- Operation status and progress
- Performance metrics
- Credit usage monitoring
- Rate limit tracking
- Error conditions

Example log messages:

```
[INFO] FireCrawl MCP Server initialized successfully
[INFO] Starting scrape for URL: https://example.com
[INFO] Batch operation queued with ID: batch_1
[WARNING] Credit usage has reached warning threshold
[ERROR] Rate limit exceeded, retrying in 2s...
```

## Error Handling

The server provides robust error handling:

- Automatic retries for transient errors
- Rate limit handling with backoff
- Detailed error messages
- Credit usage warnings
- Network resilience

Example error response:

```json
{
  &quot;content&quot;: [
    {
      &quot;type&quot;: &quot;text&quot;,
      &quot;text&quot;: &quot;Error: Rate limit exceeded. Retrying in 2 seconds...&quot;
    }
  ],
  &quot;isError&quot;: true
}
```

## Development

```bash
# Install dependencies
npm install

# Build
npm run build

# Run tests
npm test
```

### Contributing

1. Fork the repository
2. Create your feature branch
3. Run tests: `npm test`
4. Submit a pull request

## License

MIT License - see LICENSE file for details
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[gorhill/uBlock]]></title>
            <link>https://github.com/gorhill/uBlock</link>
            <guid>https://github.com/gorhill/uBlock</guid>
            <pubDate>Fri, 14 Mar 2025 17:49:30 GMT</pubDate>
            <description><![CDATA[uBlock Origin - An efficient blocker for Chromium and Firefox. Fast and lean.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/gorhill/uBlock">gorhill/uBlock</a></h1>
            <p>uBlock Origin - An efficient blocker for Chromium and Firefox. Fast and lean.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 51,524</p>
            <p>Forks: 3,380</p>
            <p>Stars today: 661 stars this week</p>
            <h2>README</h2><pre>[![Badge Commits]][Commit Rate]
[![Badge Issues]][Issues]
[![Badge Localization]][Crowdin]
[![Badge License]][License]
[![Badge NPM]][NPM]
[![Badge Mozilla]][Mozilla]
[![Badge Chrome]][Chrome]
[![Badge Edge]][Edge]

***

&lt;h1 align=&quot;center&quot;&gt;
&lt;sub&gt;
&lt;img src=&quot;https://github.com/gorhill/uBlock/blob/master/src/img/ublock.svg&quot; height=&quot;38&quot; width=&quot;38&quot;&gt;
&lt;/sub&gt;
uBlock Origin (uBO)
&lt;/h1&gt;
&lt;p align=&quot;center&quot;&gt;
&lt;sub&gt;&lt;a href=&quot;https://github.com/gorhill/uBlock/wiki/uBlock-Origin-is-completely-unrelated-to-the-web-site-ublock.org&quot;&gt;&lt;b&gt;BEWARE!&lt;/b&gt; uBO is (and has always been) COMPLETELY UNRELATED to the website &lt;code&gt;ublock.org&lt;/code&gt;&lt;/a&gt;.&lt;/sub&gt;
&lt;/p&gt;

***

&lt;p align=&quot;center&quot;&gt;
&lt;a href=&quot;https://addons.mozilla.org/addon/ublock-origin/&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/585534/107280546-7b9b2a00-6a26-11eb-8f9f-f95932f4bfec.png&quot; alt=&quot;Get uBlock Origin for Firefox&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://microsoftedge.microsoft.com/addons/detail/ublock-origin/odfafepnkmbhccpbejgmiehpchacaeak&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/585534/107280673-a5ece780-6a26-11eb-9cc7-9fa9f9f81180.png&quot; alt=&quot;Get uBlock Origin for Microsoft Edge&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://addons.opera.com/extensions/details/ublock/&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/585534/107280692-ac7b5f00-6a26-11eb-85c7-088926504452.png&quot; alt=&quot;Get uBlock Origin for Opera&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://addons.thunderbird.net/thunderbird/addon/ublock-origin/&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/124740436/235314672-73243149-3683-4407-a2d5-ad0f2b08bc17.png&quot; alt=&quot;Get uBlock Origin for Thunderbird&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

***

&lt;p align=&quot;center&quot;&gt;
&lt;a href=&quot;https://chromewebstore.google.com/detail/ublock-origin/cjpalhdlnbpafiamejdnhcphjbkeiagm&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/585534/107280622-91a8ea80-6a26-11eb-8d07-77c548b28665.png&quot; alt=&quot;Get uBlock Origin for Chromium&quot;&gt;&lt;/a&gt;&lt;br&gt;
&lt;sub&gt;&lt;a href=&quot;https://github.com/uBlockOrigin/uBlock-issues/wiki/About-Google-Chrome&#039;s-%22This-extension-may-soon-no-longer-be-supported%22&quot;&gt;&lt;b&gt;IMPORTANT&lt;/b&gt;: About Google Chrome&#039;s &quot;This extension may soon no longer be supported&quot;&lt;/a&gt;&lt;/sub&gt;
&lt;/p&gt;

***

uBlock Origin (uBO) is a CPU and memory-efficient [wide-spectrum content blocker][Blocking] for Chromium and Firefox. It blocks ads, trackers, coin miners, popups, annoying anti-blockers, malware sites, etc., by default using [EasyList][EasyList], [EasyPrivacy][EasyPrivacy], [Peter Lowe&#039;s Blocklist][Peter Lowe&#039;s Blocklist], [Online Malicious URL Blocklist][Malicious Blocklist], and uBO [filter lists][uBO Filters]. There are many other lists available to block even more. Hosts files are also supported. uBO uses the EasyList filter syntax and [extends][Extended Syntax] the syntax to work with custom rules and filters.

You may easily unselect any preselected filter lists if you think uBO blocks too much. For reference, Adblock Plus installs with only EasyList, ABP filters, and Acceptable Ads enabled by default.

It is important to note that using a blocker is **NOT** [theft]. Do not fall for this creepy idea. The _ultimate_ logical consequence of `blocking = theft` is the criminalization of the inalienable right to privacy.

Ads, &quot;unintrusive&quot; or not, are just the visible portion of the privacy-invading means entering your browser when you visit most sites. **uBO&#039;s primary goal is to help users neutralize these privacy-invading methods** in a way that welcomes those users who do not wish to use more technical means.

***

* [Documentation](#documentation)
* [Installation](#installation)
  * [Firefox](#firefox)
  * [Thunderbird](#thunderbird)
  * [Chromium](#chromium)
  * [All Programs](#all-programs)
  * [Enterprise Deployment](#enterprise-deployment)
* [Release History](#release-history)
* [Translations](#translations)
* [About](#about)

## Documentation

&lt;table&gt;
    &lt;thead&gt;
        &lt;tr&gt;
            &lt;th&gt;Basic Mode&lt;/th&gt;
            &lt;th&gt;Advanced Mode&lt;/th&gt;
        &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;td&gt;The &lt;a href=&quot;https://github.com/gorhill/uBlock/wiki/Quick-guide:-popup-user-interface&quot;&gt;simple popup user interface&lt;/a&gt; for an install-it-and-forget-it type of installation that is configured optimally by default.&lt;/td&gt;
            &lt;td&gt;The &lt;a href=&quot;https://github.com/gorhill/uBlock/wiki/Dynamic-filtering:-quick-guide&quot;&gt;advanced popup user interface&lt;/a&gt; includes a point-and-click firewall that is configurable on a per-site basis.&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td align=&quot;center&quot; valign=&quot;top&quot;&gt;&lt;a href=&quot;https://github.com/gorhill/uBlock/wiki/Quick-guide:-popup-user-interface&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/585534/232531044-c4ac4dd5-0b60-4c1e-aabb-914be04b846c.png&quot;/&gt;&lt;/a&gt;&lt;/td&gt;
            &lt;td align=&quot;center&quot; valign=&quot;top&quot;&gt;&lt;a href=&quot;https://github.com/gorhill/uBlock/wiki/Dynamic-filtering:-quick-guide&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/585534/232531439-a8f81cc3-6622-45c4-8b32-7348cecf6e98.png&quot;/&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;/tr&gt;
    &lt;/tbody&gt;
&lt;/table&gt;

Visit the [Wiki][Wiki] for documentation.

For support, questions, or help, visit [/r/uBlockOrigin][Reddit].

## Installation

[Required Permissions][Permissions]

#### Firefox

[Firefox Add-ons][Mozilla]

[Development Builds][Beta]

uBO [works best][Works Best] on Firefox and is available for desktop and Android versions.

#### Thunderbird

[Thunderbird Add-ons][Thunderbird]

In Thunderbird, uBlock Origin does not affect emails, just feeds.

#### Chromium

[Chrome Web Store][Chrome]

[Microsoft Edge Add-ons][Edge] (Published by: [Nicole Rolls][Nicole Rolls])

[Opera Add-ons][Opera]

[Development Builds][Chrome Dev]

uBO should be compatible with any Chromium-based browser.

#### All Programs

Do **NOT** use uBO with any other content blocker. uBO [performs][Performance] as well as or better than most popular blockers. Other blockers can prevent uBO&#039;s privacy or anti-blocker-defusing features from working correctly.

[Manual Installation][Manual Installation]

#### Enterprise Deployment

[Deploying uBO][Deployment]

## Release History

[Releases Page][Releases]

## Translations

Help translate uBO via [Crowdin][Crowdin].

## About

[Manifesto][Manifesto]

[Privacy Policy][Privacy Policy]

[GPLv3 License][License]

Free. Open-source. For users by users. No donations sought.

If you ever want to contribute something, think about the people working hard to maintain the filter lists you are using, which are available to use by all for free.


&lt;!-----------------------------------------------------------------------------&gt;

[Peter Lowe&#039;s Blocklist]: https://pgl.yoyo.org/adservers/
[Malicious Blocklist]: https://gitlab.com/malware-filter/urlhaus-filter#malicious-url-blocklist
[Performance]: https://www.debugbear.com/blog/chrome-extension-performance-2021#how-do-ad-blockers-and-privacy-tools-affect-browser-performance
[EasyPrivacy]: https://easylist.to/#easyprivacy
[Thunderbird]: https://addons.thunderbird.net/thunderbird/addon/ublock-origin/
[Chrome Dev]: https://chromewebstore.google.com/detail/ublock-origin-development/cgbcahbpdhpcegmbfconppldiemgcoii
[EasyList]: https://easylist.to/#easylist
[Mozilla]: https://addons.mozilla.org/addon/ublock-origin/
[Crowdin]: https://crowdin.com/project/ublock
[Chrome]: https://chromewebstore.google.com/detail/ublock-origin/cjpalhdlnbpafiamejdnhcphjbkeiagm
[Reddit]: https://www.reddit.com/r/uBlockOrigin/
[Theft]: https://x.com/LeaVerou/status/518154828166725632
[Opera]: https://addons.opera.com/extensions/details/ublock/
[Edge]: https://microsoftedge.microsoft.com/addons/detail/ublock-origin/odfafepnkmbhccpbejgmiehpchacaeak
[NPM]: https://www.npmjs.com/package/@gorhill/ubo-core

[Manifesto]: MANIFESTO.md
[License]: LICENSE.txt

[Nicole Rolls]: https://github.com/nicole-ashley

&lt;!---------------------------------[ Internal ]--------------------------------&gt;

[Manual Installation]: https://github.com/gorhill/uBlock/tree/master/dist#install
[Extended Syntax]: https://github.com/gorhill/uBlock/wiki/Static-filter-syntax#extended-syntax
[Privacy Policy]: https://github.com/gorhill/uBlock/wiki/Privacy-policy
[uBO Filters]: https://github.com/uBlockOrigin/uAssets/tree/master/filters
[Permissions]: https://github.com/gorhill/uBlock/wiki/Permissions
[Commit Rate]: https://github.com/gorhill/uBlock/commits/master
[Works Best]: https://github.com/gorhill/uBlock/wiki/uBlock-Origin-works-best-on-Firefox
[Deployment]: https://github.com/gorhill/uBlock/wiki/Deploying-uBlock-Origin
[Blocking]: https://github.com/gorhill/uBlock/wiki/Blocking-mode
[Releases]: https://github.com/gorhill/uBlock/releases
[Issues]: https://github.com/uBlockOrigin/uBlock-issues/issues
[Beta]: https://github.com/gorhill/uBlock/blob/master/dist/README.md#for-beta-version
[Wiki]: https://github.com/gorhill/uBlock/wiki

&lt;!----------------------------------[ Badges ]---------------------------------&gt;

[Badge Localization]: https://d322cqt584bo4o.cloudfront.net/ublock/localized.svg
[Badge Commits]: https://img.shields.io/github/commit-activity/m/gorhill/ublock?label=Commits
[Badge Mozilla]: https://img.shields.io/amo/rating/ublock-origin?label=Firefox
[Badge License]: https://img.shields.io/badge/License-GPLv3-blue.svg
[Badge Chrome]: https://img.shields.io/chrome-web-store/rating/cjpalhdlnbpafiamejdnhcphjbkeiagm?label=Chrome
[Badge Edge]: https://img.shields.io/badge/dynamic/json?label=Edge&amp;color=brightgreen&amp;query=%24.averageRating&amp;suffix=%2F%35&amp;url=https%3A%2F%2Fmicrosoftedge.microsoft.com%2Faddons%2Fgetproductdetailsbycrxid%2Fodfafepnkmbhccpbejgmiehpchacaeak
[Badge Issues]: https://img.shields.io/github/issues/uBlockOrigin/uBlock-issues
[Badge NPM]: https://img.shields.io/npm/v/@gorhill/ubo-core
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[browserbase/mcp-server-browserbase]]></title>
            <link>https://github.com/browserbase/mcp-server-browserbase</link>
            <guid>https://github.com/browserbase/mcp-server-browserbase</guid>
            <pubDate>Fri, 14 Mar 2025 17:49:29 GMT</pubDate>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/browserbase/mcp-server-browserbase">browserbase/mcp-server-browserbase</a></h1>
            <p></p>
            <p>Language: JavaScript</p>
            <p>Stars: 263</p>
            <p>Forks: 33</p>
            <p>Stars today: 67 stars this week</p>
            <h2>README</h2><pre># Browserbase MCP Server

![cover](assets/cover-mcp.png)

[The Model Context Protocol (MCP)](https://modelcontextprotocol.io/introduction) is an open protocol that enables seamless integration between LLM applications and external data sources and tools. Whether you‚Äôre building an AI-powered IDE, enhancing a chat interface, or creating custom AI workflows, MCP provides a standardized way to connect LLMs with the context they need.

This server provides cloud browser automation capabilities using [Browserbase](https://www.browserbase.com/), [Puppeteer](https://pptr.dev/), and [Stagehand](https://github.com/browserbase/stagehand) (Coming Soon). This server enables LLMs to interact with web pages, take screenshots, and execute JavaScript in a cloud browser environment.

To learn to get started with Browserbase, check out [Browserbase MCP](./browserbase/README.md) or [Stagehand MCP](./stagehand/README.md).

## Getting Started with available MCPs

üåê **Browserbase MCP** - Located in [`browserbase/`](./browserbase/)

| Feature            | Description                               |
| ------------------ | ----------------------------------------- |
| Browser Automation | Control and orchestrate cloud browsers    |
| Data Extraction    | Extract structured data from any webpage  |
| Console Monitoring | Track and analyze browser console logs    |
| Screenshots        | Capture full-page and element screenshots |
| JavaScript         | Execute custom JS in the browser context  |
| Web Interaction    | Navigate, click, and fill forms with ease |

ü§ò **Stagehand MCP** - Located in [`stagehand/`](./stagehand/)

| Feature             | Description                                                                                                                                                    |
| ------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| Atomic Instructions | Execute precise actions like `act(&quot;click the login button&quot;)` or `extract(&quot;find the red shoes&quot;)`                                                                |
| Model Flexibility   | Supports multiple models, including OpenAI&#039;s GPT-4 and Anthropic&#039;s Claude-3.7 Sonnet                                                                           |
| Modular Design      | Easily integrate new models with minimal changes                                                                                                               |
| Vision Support      | Use annotated screenshots for complex DOMs                                                                                                                     |
| Open Source         | Contribute to the project and join the [Slack community](https://join.slack.com/t/stagehand-dev/shared_invite/zt-2uvuobu50-~wVSx2Si75CPa3332hwVEw) for support |

### Alternative Installation Methods

[Smithery](https://smithery.ai/server/@browserbasehq/mcp-browserbase)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[clusterzx/paperless-ai]]></title>
            <link>https://github.com/clusterzx/paperless-ai</link>
            <guid>https://github.com/clusterzx/paperless-ai</guid>
            <pubDate>Fri, 14 Mar 2025 17:49:28 GMT</pubDate>
            <description><![CDATA[An automated document analyzer for Paperless-ngx using OpenAI API, Ollama, Deepseek-r1, Azure and all OpenAI API compatible Services to automatically analyze and tag your documents.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/clusterzx/paperless-ai">clusterzx/paperless-ai</a></h1>
            <p>An automated document analyzer for Paperless-ngx using OpenAI API, Ollama, Deepseek-r1, Azure and all OpenAI API compatible Services to automatically analyze and tag your documents.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 2,652</p>
            <p>Forks: 91</p>
            <p>Stars today: 239 stars this week</p>
            <h2>README</h2><pre>![GitHub commit activity](https://img.shields.io/github/commit-activity/t/clusterzx/paperless-ai) ![Docker Pulls](https://img.shields.io/docker/pulls/clusterzx/paperless-ai) ![GitHub User&#039;s stars](https://img.shields.io/github/stars/clusterzx) ![GitHub License](https://img.shields.io/github/license/clusterzx/paperless-ai?cacheSeconds=1)

# Paperless-AI

An automated document analyzer for Paperless-ngx using OpenAI API, Ollama and all OpenAI API compatible Services to automatically analyze and tag your documents. \
It features: Automode, Manual Mode, Ollama and OpenAI, a Chat function to query your documents with AI, a modern and intuitive Webinterface. \
\
**Following Services and OpenAI API compatible services have been successfully tested:**
- Ollama
- OpenAI
- DeepSeek.ai
- OpenRouter.ai
- Perplexity.ai
- Together.ai
- VLLM
- LiteLLM
- Fastchat
- Gemini (Google)
- ... and there are possibly many more

![PPAI_SHOWCASE3](https://github.com/user-attachments/assets/1fc9f470-6e45-43e0-a212-b8fa6225e8dd)


## Features

### Automated Document Management
- **Automatic Scanning**: Identifies and processes new documents within Paperless-ngx.
- **AI-Powered Analysis**: Leverages OpenAI API and Ollama (Mistral, Llama, Phi 3, Gemma 2) for precise document analysis.
- **Metadata Assignment**: Automatically assigns titles, tags, document_type and correspondent details.

### Advanced Customization Options
- **Predefined Processing Rules**: Specify which documents to process based on existing tags. *(Optional)* üÜï
- **Selective Tag Assignment**: Use only selected tags for processing. *(Disables the prompt dialog)* üÜï
- **Custom Tagging**: Assign a specific tag (of your choice) to AI-processed documents for easy identification. üÜï

### Manual Mode
- **AI-Assisted Analysis**: Manually analyze documents with AI support in a modern web interface. *(Accessible via the `/manual` endpoint)* üÜï

### Interactive Chat Functionality
- **Document Querying**: Ask questions about your documents and receive accurate, AI-generated answers. üÜï

## Installation

Visit the Wiki for installation:\
[Click here for Installation](https://github.com/clusterzx/paperless-ai/wiki/2.-Installation)
-------------------------------------------


## Docker Support

The application comes with full Docker support:

- Automatic container restart on failure
- Health monitoring
- Volume persistence for database
- Resource management
- Graceful shutdown handling

## Development

To run the application locally without Docker:

1. Install dependencies:
```bash
npm install
```

2. Start the development server:
```bash
npm run test
```

## Contributing

1. Fork the repository
2. Create your feature branch (`git checkout -b feature/AmazingFeature`)
3. Commit your changes (`git commit -m &#039;Add some AmazingFeature&#039;`)
4. Push to the branch (`git push origin feature/AmazingFeature`)
5. Open a Pull Request

## License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.

## Acknowledgments

- [Paperless-ngx](https://github.com/paperless-ngx/paperless-ngx) for the amazing document management system
- OpenAI API
- The Express.js and Node.js communities for their excellent tools

## Support

If you encounter any issues or have questions:

1. Check the [Issues](https://github.com/clusterzx/paperless-ai/issues) section
2. Create a new issue if yours isn&#039;t already listed
3. Provide detailed information about your setup and the problem

## Roadmap (DONE)

- [x] Support for custom AI models
- [x] Support for multiple language analysis
- [x] Advanced tag matching algorithms
- [x] Custom rules for document processing
- [x] Enhanced web interface with statistics

</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[jujumilk3/leaked-system-prompts]]></title>
            <link>https://github.com/jujumilk3/leaked-system-prompts</link>
            <guid>https://github.com/jujumilk3/leaked-system-prompts</guid>
            <pubDate>Fri, 14 Mar 2025 17:49:27 GMT</pubDate>
            <description><![CDATA[Collection of leaked system prompts]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/jujumilk3/leaked-system-prompts">jujumilk3/leaked-system-prompts</a></h1>
            <p>Collection of leaked system prompts</p>
            <p>Language: JavaScript</p>
            <p>Stars: 1,919</p>
            <p>Forks: 237</p>
            <p>Stars today: 125 stars this week</p>
            <h2>README</h2><pre># leaked-system-prompts

Collection of leaked prompts

1. [anthropic-claude_2.0_20240306.md](./anthropic-claude_2.0_20240306.md)
2. [anthropic-claude_2.1_20240306.md](./anthropic-claude_2.1_20240306.md)
3. [anthropic-claude-3-haiku_20240712.md](./anthropic-claude-3-haiku_20240712.md)
4. [anthropic-claude-3-opus_20240712.md](./anthropic-claude-3-opus_20240712.md)
5. [anthropic-claude-3-sonnet_20240306.md](./anthropic-claude-3-sonnet_20240306.md)
6. [anthropic-claude-3-sonnet_20240311.md](./anthropic-claude-3-sonnet_20240311.md)
7. [anthropic-claude-3.5-sonnet_20240712.md](./anthropic-claude-3.5-sonnet_20240712.md)
8. [anthropic-claude-3.5-sonnet_20240909.md](./anthropic-claude-3.5-sonnet_20240909.md)
9. [anthropic-claude-3.5-sonnet_20241022.md](./anthropic-claude-3.5-sonnet_20241022.md)
10. [anthropic-claude-3.5-sonnet_20241122.md](./anthropic-claude-3.5-sonnet_20241122.md)
11. [anthropic-claude-3.7-sonnet_20250224.md](./anthropic-claude-3.7-sonnet_20250224.md)
12. [anthropic-claude-api-tool-use_20250119.md](./anthropic-claude-api-tool-use_20250119.md)
13. [anthropic-claude-code_20250307.md](./anthropic-claude-code_20250307.md)
14. [anthropic-claude-opus_20240306.md](./anthropic-claude-opus_20240306.md)
15. [bolt.new_20241009.md](./bolt.new_20241009.md)
16. [brave-leo-ai_20240601.md](./brave-leo-ai_20240601.md)
17. [ChatGLM4_20240821.md](./ChatGLM4_20240821.md)
18. [claude-artifacts_20240620.md](./claude-artifacts_20240620.md)
19. [codeium-windsurf-cascade_20241206.md](./codeium-windsurf-cascade_20241206.md)
20. [codeium-windsurf-cascade-R1_20250201.md](./codeium-windsurf-cascade-R1_20250201.md)
21. [colab-ai_20240108.md](./colab-ai_20240108.md)
22. [colab-ai_20240511.md](./colab-ai_20240511.md)
23. [cursor-ide-agent-claude-sonnet-3.7_20250309.md](./cursor-ide-agent-claude-sonnet-3.7_20250309.md)
24. [cursor-ide-sonnet_20241224.md](./cursor-ide-sonnet_20241224.md)
25. [devv_20240427.md](./devv_20240427.md)
26. [discord-clyde_20230420.md](./discord-clyde_20230420.md)
27. [discord-clyde_20230519.md](./discord-clyde_20230519.md)
28. [discord-clyde_20230715.md](./discord-clyde_20230715.md)
29. [discord-clyde_20230716-1.md](./discord-clyde_20230716-1.md)
30. [discord-clyde_20230716-2.md](./discord-clyde_20230716-2.md)
31. [ESTsoft-alan_20230920.md](./ESTsoft-alan_20230920.md)
32. [gandalf_20230919.md](./gandalf_20230919.md)
33. [github-copilot-chat_20230513.md](./github-copilot-chat_20230513.md)
34. [github-copilot-chat_20240930.md](./github-copilot-chat_20240930.md)
35. [google-gemini-1.5_20240411.md](./google-gemini-1.5_20240411.md)
36. [manus_20250309.md](./manus_20250309.md)
37. [microsoft-bing-chat_20230209.md](./microsoft-bing-chat_20230209.md)
38. [microsoft-copilot_20240310.md](./microsoft-copilot_20240310.md)
39. [microsoft-copilot_20241219.md](./microsoft-copilot_20241219.md)
40. [moonshot-kimi-chat_20241106.md](./moonshot-kimi-chat_20241106.md)
41. [naver-cue_20230920.md](./naver-cue_20230920.md)
42. [notion-ai_20221228.md](./notion-ai_20221228.md)
43. [openai-assistants-api_20231106.md](./openai-assistants-api_20231106.md)
44. [openai-chatgpt_20221201.md](./openai-chatgpt_20221201.md)
45. [openai-chatgpt-ios_20230614.md](./openai-chatgpt-ios_20230614.md)
46. [openai-chatgpt4-android_20240207.md](./openai-chatgpt4-android_20240207.md)
47. [openai-chatgpt4o_20240520.md](./openai-chatgpt4o_20240520.md)
48. [openai-dall-e-3_20231007-1.md](./openai-dall-e-3_20231007-1.md)
49. [openai-dall-e-3_20231007-2.md](./openai-dall-e-3_20231007-2.md)
50. [openai-deep-research_20250204.md](./openai-deep-research_20250204.md)
51. [opera-aria_20230617.md](./opera-aria_20230617.md)
52. [perplexity.ai_20221208.md](./perplexity.ai_20221208.md)
53. [perplexity.ai_20240311.md](./perplexity.ai_20240311.md)
54. [perplexity.ai_20240513.md](./perplexity.ai_20240513.md)
55. [perplexity.ai_20240607.md](./perplexity.ai_20240607.md)
56. [perplexity.ai_gpt4_20240311.md](./perplexity.ai_gpt4_20240311.md)
57. [phind_20240427.md](./phind_20240427.md)
58. [remoteli-io_20230806.md](./remoteli-io_20230806.md)
59. [roblox-studio-assistant_20240320.md](./roblox-studio-assistant_20240320.md)
60. [snap-myai_20230430.md](./snap-myai_20230430.md)
61. [v0_20250306.md](./v0_20250306.md)
62. [wrtn_20230603.md](./wrtn_20230603.md)
63. [wrtn-gpt3.5_20240215.md](./wrtn-gpt3.5_20240215.md)
64. [wrtn-gpt4_20240215.md](./wrtn-gpt4_20240215.md)
65. [xAI-grok_20240307.md](./xAI-grok_20240307.md)
66. [xAI-grok_20241003.md](./xAI-grok_20241003.md)
67. [xAI-grok2_20241218.md](./xAI-grok2_20241218.md)
68. [xAI-grok2_20250111.md](./xAI-grok2_20250111.md)
69. [xAI-grok3_20250223.md](./xAI-grok3_20250223.md)</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[CesiumGS/cesium]]></title>
            <link>https://github.com/CesiumGS/cesium</link>
            <guid>https://github.com/CesiumGS/cesium</guid>
            <pubDate>Fri, 14 Mar 2025 17:49:26 GMT</pubDate>
            <description><![CDATA[An open-source JavaScript library for world-class 3D globes and maps üåé]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/CesiumGS/cesium">CesiumGS/cesium</a></h1>
            <p>An open-source JavaScript library for world-class 3D globes and maps üåé</p>
            <p>Language: JavaScript</p>
            <p>Stars: 13,414</p>
            <p>Forks: 3,568</p>
            <p>Stars today: 45 stars this week</p>
            <h2>README</h2><pre># CesiumJS

[![Build Status](https://github.com/CesiumGS/cesium/actions/workflows/dev.yml/badge.svg)](https://github.com/CesiumGS/cesium/actions/workflows/dev.yml)
[![npm](https://img.shields.io/npm/v/cesium)](https://www.npmjs.com/package/cesium)
[![Docs](https://img.shields.io/badge/docs-online-orange.svg)](https://cesium.com/learn/)

![Cesium](https://github.com/CesiumGS/cesium/wiki/logos/Cesium_Logo_Color.jpg)

CesiumJS is a JavaScript library for creating 3D globes and 2D maps in a web browser without a plugin. It uses WebGL for hardware-accelerated graphics, and is cross-platform, cross-browser, and tuned for dynamic-data visualization.

Built on open formats, CesiumJS is designed for robust interoperability and scaling for massive datasets.

---

[**Examples**](https://sandcastle.cesium.com/) :earth_asia: [**Docs**](https://cesium.com/learn/cesiumjs-learn/) :earth_americas: [**Website**](https://cesium.com/cesiumjs) :earth_africa: [**Forum**](https://community.cesium.com/) :earth_asia: [**User Stories**](https://cesium.com/user-stories/)

---

## :rocket: Get started

Visit the [Downloads page](https://cesium.com/downloads/) to download a pre-built copy of CesiumJS.

### npm &amp; yarn

If you‚Äôre building your application using a module bundler such as Webpack, Parcel, or Rollup, you can install CesiumJS via the [`cesium` npm package](https://www.npmjs.com/package/cesium):

```sh
npm install cesium --save
```

Then, import CesiumJS in your app code. Import individual modules to benefit from tree shaking optimizations through most build tools:

```js
import { Viewer } from &quot;cesium&quot;;
import &quot;cesium/Build/Cesium/Widgets/widgets.css&quot;;

const viewer = new Viewer(&quot;cesiumContainer&quot;);
```

In addition to the `cesium` package, CesiumJS is also [distributed as scoped npm packages for better dependency management](https://cesium.com/blog/2022/12/07/modular-structure-in-cesiumjs/):

- [`@cesium/engine`](./packages/engine/README.md) - CesiumJS&#039;s core, rendering, and data APIs
- [`@cesium/widgets`](./packages/widgets/README.md) - A widgets library for use with CesiumJS

### What next?

See our [Quickstart Guide](https://cesium.com/learn/cesiumjs-learn/cesiumjs-quickstart/) for more information on getting a CesiumJS app up and running.

Instructions for serving local data are in the CesiumJS
[Offline Guide](./Documentation/OfflineGuide/README.md).

Interested in contributing? See [CONTRIBUTING.md](CONTRIBUTING.md). :heart:

## :green_book: License

[Apache 2.0](http://www.apache.org/licenses/LICENSE-2.0.html). CesiumJS is free for both commercial and non-commercial use.

## :earth_americas: Where does the Global 3D Content come from?

The Cesium platform follows an [open-core business model](https://cesium.com/why-cesium/open-ecosystem/cesium-business-model/) with open source runtime engines such as CesiumJS and optional commercial subscription to Cesium ion.

CesiumJS can stream [3D content such as terrain, imagery, and 3D Tiles from the commercial Cesium ion platform](https://cesium.com/platform/cesium-ion/content/) alongside open standards from other offline or online services. We provide Cesium ion as the quickest option for all users to get up and running, but you are free to use any combination of content sources with CesiumJS that you please.

Bring your own data for tiling, hosting, and streaming from Cesium ion. [Using Cesium ion](https://cesium.com/ion/signup/) helps support CesiumJS development.

## :white_check_mark: Features

- Stream in 3D Tiles and other standard formats from Cesium ion or another source
- Visualize and analyze on a high-precision WGS84 globe
- Share with users on desktop or mobile

See more in the [CesiumJS Features Checklist](https://github.com/CesiumGS/cesium/wiki/CesiumJS-Features-Checklist).
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[axios/axios]]></title>
            <link>https://github.com/axios/axios</link>
            <guid>https://github.com/axios/axios</guid>
            <pubDate>Fri, 14 Mar 2025 17:49:25 GMT</pubDate>
            <description><![CDATA[Promise based HTTP client for the browser and node.js]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/axios/axios">axios/axios</a></h1>
            <p>Promise based HTTP client for the browser and node.js</p>
            <p>Language: JavaScript</p>
            <p>Stars: 106,516</p>
            <p>Forks: 11,032</p>
            <p>Stars today: 98 stars this week</p>
            <h2>README</h2><pre># axios

[![npm version](https://img.shields.io/npm/v/axios.svg?style=flat-square)](https://www.npmjs.org/package/axios)
[![CDNJS](https://img.shields.io/cdnjs/v/axios.svg?style=flat-square)](https://cdnjs.com/libraries/axios)
![Build status](https://github.com/axios/axios/actions/workflows/ci.yml/badge.svg)
[![Gitpod Ready-to-Code](https://img.shields.io/badge/Gitpod-Ready--to--Code-blue?logo=gitpod)](https://gitpod.io/#https://github.com/axios/axios) 
[![code coverage](https://img.shields.io/coveralls/mzabriskie/axios.svg?style=flat-square)](https://coveralls.io/r/mzabriskie/axios)
[![install size](https://packagephobia.now.sh/badge?p=axios)](https://packagephobia.now.sh/result?p=axios)
[![npm downloads](https://img.shields.io/npm/dm/axios.svg?style=flat-square)](https://npm-stat.com/charts.html?package=axios)
[![gitter chat](https://img.shields.io/gitter/room/mzabriskie/axios.svg?style=flat-square)](https://gitter.im/mzabriskie/axios)
[![code helpers](https://www.codetriage.com/axios/axios/badges/users.svg)](https://www.codetriage.com/axios/axios)
[![Known Vulnerabilities](https://snyk.io/test/npm/axios/badge.svg)](https://snyk.io/test/npm/axios)
![npm bundle size](https://img.shields.io/bundlephobia/minzip/axios)

Promise based HTTP client for the browser and node.js

&gt; New axios docs website: [click here](https://axios-http.com/)

## Table of Contents

  - [Features](#features)
  - [Browser Support](#browser-support)
  - [Installing](#installing)
  - [Example](#example)
  - [Axios API](#axios-api)
  - [Request method aliases](#request-method-aliases)
  - [Concurrency üëé](#concurrency-deprecated)
  - [Creating an instance](#creating-an-instance)
  - [Instance methods](#instance-methods)
  - [Request Config](#request-config)
  - [Response Schema](#response-schema)
  - [Config Defaults](#config-defaults)
    - [Global axios defaults](#global-axios-defaults)
    - [Custom instance defaults](#custom-instance-defaults)
    - [Config order of precedence](#config-order-of-precedence)
  - [Interceptors](#interceptors)
    - [Multiple Interceptors](#multiple-interceptors)
  - [Handling Errors](#handling-errors)
  - [Cancellation](#cancellation)
    - [AbortController](#abortcontroller)
    - [CancelToken üëé](#canceltoken-deprecated)
  - [Using application/x-www-form-urlencoded format](#using-applicationx-www-form-urlencoded-format)
    - [URLSearchParams](#urlsearchparams)
    - [Query string](#query-string-older-browsers)
    - [üÜï Automatic serialization](#-automatic-serialization-to-urlsearchparams)        
  - [Using multipart/form-data format](#using-multipartform-data-format)    
    - [FormData](#formdata)
    - [üÜï Automatic serialization](#-automatic-serialization-to-formdata) 
  - [Files Posting](#files-posting)
  - [HTML Form Posting](#html-form-posting-browser)
  - [Semver](#semver)
  - [Promises](#promises)
  - [TypeScript](#typescript)
  - [Resources](#resources)
  - [Credits](#credits)
  - [License](#license)

## Features

- Make [XMLHttpRequests](https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest) from the browser
- Make [http](https://nodejs.org/api/http.html) requests from node.js
- Supports the [Promise](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise) API
- Intercept request and response
- Transform request and response data
- Cancel requests
- Automatic transforms for JSON data
- üÜï Automatic data object serialization to `multipart/form-data` and `x-www-form-urlencoded` body encodings
- Client side support for protecting against [XSRF](https://en.wikipedia.org/wiki/Cross-site_request_forgery)

## Browser Support

![Chrome](https://raw.githubusercontent.com/alrra/browser-logos/main/src/chrome/chrome_48x48.png) | ![Firefox](https://raw.githubusercontent.com/alrra/browser-logos/main/src/firefox/firefox_48x48.png) | ![Safari](https://raw.githubusercontent.com/alrra/browser-logos/main/src/safari/safari_48x48.png) | ![Opera](https://raw.githubusercontent.com/alrra/browser-logos/main/src/opera/opera_48x48.png) | ![Edge](https://raw.githubusercontent.com/alrra/browser-logos/main/src/edge/edge_48x48.png) | ![IE](https://raw.githubusercontent.com/alrra/browser-logos/master/src/archive/internet-explorer_9-11/internet-explorer_9-11_48x48.png) |
--- | --- | --- | --- | --- | --- |
Latest ‚úî | Latest ‚úî | Latest ‚úî | Latest ‚úî | Latest ‚úî | 11 ‚úî |

[![Browser Matrix](https://saucelabs.com/open_sauce/build_matrix/axios.svg)](https://saucelabs.com/u/axios)

## Installing

Using npm:

```bash
$ npm install axios
```

Using bower:

```bash
$ bower install axios
```

Using yarn:

```bash
$ yarn add axios
```

Using pnpm:

```bash
$ pnpm add axios
```

Using jsDelivr CDN:

```html
&lt;script src=&quot;https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js&quot;&gt;&lt;/script&gt;
```

Using unpkg CDN:

```html
&lt;script src=&quot;https://unpkg.com/axios/dist/axios.min.js&quot;&gt;&lt;/script&gt;
```

## Example

### note: CommonJS usage
In order to gain the TypeScript typings (for intellisense / autocomplete) while using CommonJS imports with `require()` use the following approach:

```js
const axios = require(&#039;axios&#039;).default;

// axios.&lt;method&gt; will now provide autocomplete and parameter typings
```

Performing a `GET` request

```js
const axios = require(&#039;axios&#039;).default;

// Make a request for a user with a given ID
axios.get(&#039;/user?ID=12345&#039;)
  .then(function (response) {
    // handle success
    console.log(response);
  })
  .catch(function (error) {
    // handle error
    console.log(error);
  })
  .then(function () {
    // always executed
  });

// Optionally the request above could also be done as
axios.get(&#039;/user&#039;, {
    params: {
      ID: 12345
    }
  })
  .then(function (response) {
    console.log(response);
  })
  .catch(function (error) {
    console.log(error);
  })
  .then(function () {
    // always executed
  });  

// Want to use async/await? Add the `async` keyword to your outer function/method.
async function getUser() {
  try {
    const response = await axios.get(&#039;/user?ID=12345&#039;);
    console.log(response);
  } catch (error) {
    console.error(error);
  }
}
```

&gt; **NOTE:** `async/await` is part of ECMAScript 2017 and is not supported in Internet
&gt; Explorer and older browsers, so use with caution.

Performing a `POST` request

```js
axios.post(&#039;/user&#039;, {
    firstName: &#039;Fred&#039;,
    lastName: &#039;Flintstone&#039;
  })
  .then(function (response) {
    console.log(response);
  })
  .catch(function (error) {
    console.log(error);
  });
```

Performing multiple concurrent requests

```js
function getUserAccount() {
  return axios.get(&#039;/user/12345&#039;);
}

function getUserPermissions() {
  return axios.get(&#039;/user/12345/permissions&#039;);
}

Promise.all([getUserAccount(), getUserPermissions()])
  .then(function (results) {
    const acct = results[0];
    const perm = results[1];
  });
```

## axios API

Requests can be made by passing the relevant config to `axios`.

##### axios(config)

```js
// Send a POST request
axios({
  method: &#039;post&#039;,
  url: &#039;/user/12345&#039;,
  data: {
    firstName: &#039;Fred&#039;,
    lastName: &#039;Flintstone&#039;
  }
});
```

```js
// GET request for remote image in node.js
axios({
  method: &#039;get&#039;,
  url: &#039;https://bit.ly/2mTM3nY&#039;,
  responseType: &#039;stream&#039;
})
  .then(function (response) {
    response.data.pipe(fs.createWriteStream(&#039;ada_lovelace.jpg&#039;))
  });
```

##### axios(url[, config])

```js
// Send a GET request (default method)
axios(&#039;/user/12345&#039;);
```

### Request method aliases

For convenience, aliases have been provided for all common request methods.

##### axios.request(config)
##### axios.get(url[, config])
##### axios.delete(url[, config])
##### axios.head(url[, config])
##### axios.options(url[, config])
##### axios.post(url[, data[, config]])
##### axios.put(url[, data[, config]])
##### axios.patch(url[, data[, config]])

###### NOTE
When using the alias methods `url`, `method`, and `data` properties don&#039;t need to be specified in config.

### Concurrency (Deprecated)
Please use `Promise.all` to replace the below functions.

Helper functions for dealing with concurrent requests.

axios.all(iterable)
axios.spread(callback)

### Creating an instance

You can create a new instance of axios with a custom config.

##### axios.create([config])

```js
const instance = axios.create({
  baseURL: &#039;https://some-domain.com/api/&#039;,
  timeout: 1000,
  headers: {&#039;X-Custom-Header&#039;: &#039;foobar&#039;}
});
```

### Instance methods

The available instance methods are listed below. The specified config will be merged with the instance config.

##### axios#request(config)
##### axios#get(url[, config])
##### axios#delete(url[, config])
##### axios#head(url[, config])
##### axios#options(url[, config])
##### axios#post(url[, data[, config]])
##### axios#put(url[, data[, config]])
##### axios#patch(url[, data[, config]])
##### axios#getUri([config])

## Request Config

These are the available config options for making requests. Only the `url` is required. Requests will default to `GET` if `method` is not specified.

```js
{
  // `url` is the server URL that will be used for the request
  url: &#039;/user&#039;,

  // `method` is the request method to be used when making the request
  method: &#039;get&#039;, // default

  // `baseURL` will be prepended to `url` unless `url` is absolute.
  // It can be convenient to set `baseURL` for an instance of axios to pass relative URLs
  // to methods of that instance.
  baseURL: &#039;https://some-domain.com/api/&#039;,

  // `transformRequest` allows changes to the request data before it is sent to the server
  // This is only applicable for request methods &#039;PUT&#039;, &#039;POST&#039;, &#039;PATCH&#039; and &#039;DELETE&#039;
  // The last function in the array must return a string or an instance of Buffer, ArrayBuffer,
  // FormData or Stream
  // You may modify the headers object.
  transformRequest: [function (data, headers) {
    // Do whatever you want to transform the data

    return data;
  }],

  // `transformResponse` allows changes to the response data to be made before
  // it is passed to then/catch
  transformResponse: [function (data) {
    // Do whatever you want to transform the data

    return data;
  }],

  // `headers` are custom headers to be sent
  headers: {&#039;X-Requested-With&#039;: &#039;XMLHttpRequest&#039;},

  // `params` are the URL parameters to be sent with the request
  // Must be a plain object or a URLSearchParams object
  params: {
    ID: 12345
  },

  // `paramsSerializer` is an optional config in charge of serializing `params`
  paramsSerializer: {
    indexes: null // array indexes format (null - no brackets, false - empty brackets, true - brackets with indexes)
  },

  // `data` is the data to be sent as the request body
  // Only applicable for request methods &#039;PUT&#039;, &#039;POST&#039;, &#039;DELETE , and &#039;PATCH&#039;
  // When no `transformRequest` is set, must be of one of the following types:
  // - string, plain object, ArrayBuffer, ArrayBufferView, URLSearchParams
  // - Browser only: FormData, File, Blob
  // - Node only: Stream, Buffer
  data: {
    firstName: &#039;Fred&#039;
  },
  
  // syntax alternative to send data into the body
  // method post
  // only the value is sent, not the key
  data: &#039;Country=Brasil&amp;City=Belo Horizonte&#039;,

  // `timeout` specifies the number of milliseconds before the request times out.
  // If the request takes longer than `timeout`, the request will be aborted.
  timeout: 1000, // default is `0` (no timeout)

  // `withCredentials` indicates whether or not cross-site Access-Control requests
  // should be made using credentials
  withCredentials: false, // default

  // `adapter` allows custom handling of requests which makes testing easier.
  // Return a promise and supply a valid response (see lib/adapters/README.md).
  adapter: function (config) {
    /* ... */
  },

  // `auth` indicates that HTTP Basic auth should be used, and supplies credentials.
  // This will set an `Authorization` header, overwriting any existing
  // `Authorization` custom headers you have set using `headers`.
  // Please note that only HTTP Basic auth is configurable through this parameter.
  // For Bearer tokens and such, use `Authorization` custom headers instead.
  auth: {
    username: &#039;janedoe&#039;,
    password: &#039;s00pers3cret&#039;
  },

  // `responseType` indicates the type of data that the server will respond with
  // options are: &#039;arraybuffer&#039;, &#039;document&#039;, &#039;json&#039;, &#039;text&#039;, &#039;stream&#039;
  //   browser only: &#039;blob&#039;
  responseType: &#039;json&#039;, // default

  // `responseEncoding` indicates encoding to use for decoding responses (Node.js only)
  // Note: Ignored for `responseType` of &#039;stream&#039; or client-side requests
  responseEncoding: &#039;utf8&#039;, // default

  // `xsrfCookieName` is the name of the cookie to use as a value for xsrf token
  xsrfCookieName: &#039;XSRF-TOKEN&#039;, // default

  // `xsrfHeaderName` is the name of the http header that carries the xsrf token value
  xsrfHeaderName: &#039;X-XSRF-TOKEN&#039;, // default

  // `onUploadProgress` allows handling of progress events for uploads
  // browser only
  onUploadProgress: function (progressEvent) {
    // Do whatever you want with the native progress event
  },

  // `onDownloadProgress` allows handling of progress events for downloads
  // browser only
  onDownloadProgress: function (progressEvent) {
    // Do whatever you want with the native progress event
  },

  // `maxContentLength` defines the max size of the http response content in bytes allowed in node.js
  maxContentLength: 2000,

  // `maxBodyLength` (Node only option) defines the max size of the http request content in bytes allowed
  maxBodyLength: 2000,

  // `validateStatus` defines whether to resolve or reject the promise for a given
  // HTTP response status code. If `validateStatus` returns `true` (or is set to `null`
  // or `undefined`), the promise will be resolved; otherwise, the promise will be
  // rejected.
  validateStatus: function (status) {
    return status &gt;= 200 &amp;&amp; status &lt; 300; // default
  },

  // `maxRedirects` defines the maximum number of redirects to follow in node.js.
  // If set to 0, no redirects will be followed.
  maxRedirects: 21, // default

  // `beforeRedirect` defines a function that will be called before redirect.
  // Use this to adjust the request options upon redirecting,
  // to inspect the latest response headers,
  // or to cancel the request by throwing an error
  // If maxRedirects is set to 0, `beforeRedirect` is not used.
  beforeRedirect: (options, { headers }) =&gt; {
    if (options.hostname === &quot;example.com&quot;) {
      options.auth = &quot;user:password&quot;;
    }
  },

  // `socketPath` defines a UNIX Socket to be used in node.js.
  // e.g. &#039;/var/run/docker.sock&#039; to send requests to the docker daemon.
  // Only either `socketPath` or `proxy` can be specified.
  // If both are specified, `socketPath` is used.
  socketPath: null, // default

  // `httpAgent` and `httpsAgent` define a custom agent to be used when performing http
  // and https requests, respectively, in node.js. This allows options to be added like
  // `keepAlive` that are not enabled by default.
  httpAgent: new http.Agent({ keepAlive: true }),
  httpsAgent: new https.Agent({ keepAlive: true }),

  // `proxy` defines the hostname, port, and protocol of the proxy server.
  // You can also define your proxy using the conventional `http_proxy` and
  // `https_proxy` environment variables. If you are using environment variables
  // for your proxy configuration, you can also define a `no_proxy` environment
  // variable as a comma-separated list of domains that should not be proxied.
  // Use `false` to disable proxies, ignoring environment variables.
  // `auth` indicates that HTTP Basic auth should be used to connect to the proxy, and
  // supplies credentials.
  // This will set an `Proxy-Authorization` header, overwriting any existing
  // `Proxy-Authorization` custom headers you have set using `headers`.
  // If the proxy server uses HTTPS, then you must set the protocol to `https`. 
  proxy: {
    protocol: &#039;https&#039;,
    host: &#039;127.0.0.1&#039;,
    port: 9000,
    auth: {
      username: &#039;mikeymike&#039;,
      password: &#039;rapunz3l&#039;
    }
  },

  // `cancelToken` specifies a cancel token that can be used to cancel the request
  // (see Cancellation section below for details)
  cancelToken: new CancelToken(function (cancel) {
  }),

  // an alternative way to cancel Axios requests using AbortController
  signal: new AbortController().signal,

  // `decompress` indicates whether or not the response body should be decompressed 
  // automatically. If set to `true` will also remove the &#039;content-encoding&#039; header 
  // from the responses objects of all decompressed responses
  // - Node only (XHR cannot turn off decompression)
  decompress: true // default

  // `insecureHTTPParser` boolean.
  // Indicates where to use an insecure HTTP parser that accepts invalid HTTP headers.
  // This may allow interoperability with non-conformant HTTP implementations.
  // Using the insecure parser should be avoided.
  // see options https://nodejs.org/dist/latest-v12.x/docs/api/http.html#http_http_request_url_options_callback
  // see also https://nodejs.org/en/blog/vulnerability/february-2020-security-releases/#strict-http-header-parsing-none
  insecureHTTPParser: undefined // default

  // transitional options for backward compatibility that may be removed in the newer versions
  transitional: {
    // silent JSON parsing mode
    // `true`  - ignore JSON parsing errors and set response.data to null if parsing failed (old behaviour)
    // `false` - throw SyntaxError if JSON parsing failed (Note: responseType must be set to &#039;json&#039;)
    silentJSONParsing: true, // default value for the current Axios version

    // try to parse the response string as JSON even if `responseType` is not &#039;json&#039;
    forcedJSONParsing: true,
    
    // throw ETIMEDOUT error instead of generic ECONNABORTED on request timeouts
    clarifyTimeoutError: false,
  },

  env: {
    // The FormData class to be used to automatically serialize the payload into a FormData object
    FormData: window?.FormData || global?.FormData
  },

  formSerializer: {
      visitor: (value, key, path, helpers)=&gt; {}; // custom visitor funaction to serrialize form values
      dots: boolean; // use dots instead of brackets format
      metaTokens: boolean; // keep special endings like {} in parameter key 
      indexes: boolean; // array indexes format null - no brackets, false - empty brackets, true - brackets with indexes
  }
}
```

## Response Schema

The response for a request contains the following information.

```js
{
  // `data` is the response that was provided by the server
  data: {},

  // `status` is the HTTP status code from the server response
  status: 200,

  // `statusText` is the HTTP status message from the server response
  statusText: &#039;OK&#039;,

  // `headers` the HTTP headers that the server responded with
  // All header names are lowercase and can be accessed using the bracket notation.
  // Example: `response.headers[&#039;content-type&#039;]`
  headers: {},

  // `config` is the config that was provided to `axios` for the request
  config: {},

  // `request` is the request that generated this response
  // It is the last ClientRequest instance in node.js (in redirects)
  // and an XMLHttpRequest instance in the browser
  request: {}
}
```

When using `then`, you will receive the response as follows:

```js
axios.get(&#039;/user/12345&#039;)
  .then(function (response) {
    console.log(response.data);
    console.log(response.status);
    console.log(response.statusText);
    console.log(response.headers);
    console.log(response.config);
  });
```

When using `catch`, or passing a [rejection callback](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/then) as second parameter of `then`, the response will be available through the `error` object as explained in the [Handling Errors](#handling-errors) section.

## Config Defaults

You can specify config defaults that will be applied to every request.

### Global axios defaults

```js
axios.defaults.bas

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[mrdoob/three.js]]></title>
            <link>https://github.com/mrdoob/three.js</link>
            <guid>https://github.com/mrdoob/three.js</guid>
            <pubDate>Fri, 14 Mar 2025 17:49:24 GMT</pubDate>
            <description><![CDATA[JavaScript 3D Library.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/mrdoob/three.js">mrdoob/three.js</a></h1>
            <p>JavaScript 3D Library.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 104,955</p>
            <p>Forks: 35,603</p>
            <p>Stars today: 238 stars this week</p>
            <h2>README</h2><pre># three.js

[![NPM Package][npm]][npm-url]
[![Build Size][build-size]][build-size-url]
[![NPM Downloads][npm-downloads]][npmtrends-url]
[![DeepScan][deepscan]][deepscan-url]
[![Discord][discord]][discord-url]

#### JavaScript 3D library

The aim of the project is to create an easy-to-use, lightweight, cross-browser, general-purpose 3D library. The current builds only include WebGL and WebGPU renderers but SVG and CSS3D renderers are also available as addons.

[Examples](https://threejs.org/examples/) &amp;mdash;
[Docs](https://threejs.org/docs/) &amp;mdash;
[Manual](https://threejs.org/manual/) &amp;mdash;
[Wiki](https://github.com/mrdoob/three.js/wiki) &amp;mdash;
[Migrating](https://github.com/mrdoob/three.js/wiki/Migration-Guide) &amp;mdash;
[Questions](https://stackoverflow.com/questions/tagged/three.js) &amp;mdash;
[Forum](https://discourse.threejs.org/) &amp;mdash;
[Discord](https://discord.gg/56GBJwAnUS)

### Usage

This code creates a scene, a camera, and a geometric cube, and it adds the cube to the scene. It then creates a `WebGL` renderer for the scene and camera, and it adds that viewport to the `document.body` element. Finally, it animates the cube within the scene for the camera.

```javascript
import * as THREE from &#039;three&#039;;

const width = window.innerWidth, height = window.innerHeight;

// init

const camera = new THREE.PerspectiveCamera( 70, width / height, 0.01, 10 );
camera.position.z = 1;

const scene = new THREE.Scene();

const geometry = new THREE.BoxGeometry( 0.2, 0.2, 0.2 );
const material = new THREE.MeshNormalMaterial();

const mesh = new THREE.Mesh( geometry, material );
scene.add( mesh );

const renderer = new THREE.WebGLRenderer( { antialias: true } );
renderer.setSize( width, height );
renderer.setAnimationLoop( animate );
document.body.appendChild( renderer.domElement );

// animation

function animate( time ) {

	mesh.rotation.x = time / 2000;
	mesh.rotation.y = time / 1000;

	renderer.render( scene, camera );

}
```

If everything goes well, you should see [this](https://jsfiddle.net/v98k6oze/).

### Cloning this repository

Cloning the repo with all its history results in a ~2 GB download. If you don&#039;t need the whole history you can use the `depth` parameter to significantly reduce download size.

```sh
git clone --depth=1 https://github.com/mrdoob/three.js.git
```

### Change log

[Releases](https://github.com/mrdoob/three.js/releases)


[npm]: https://img.shields.io/npm/v/three
[npm-url]: https://www.npmjs.com/package/three
[build-size]: https://badgen.net/bundlephobia/minzip/three
[build-size-url]: https://bundlephobia.com/result?p=three
[npm-downloads]: https://img.shields.io/npm/dw/three
[npmtrends-url]: https://www.npmtrends.com/three
[deepscan]: https://deepscan.io/api/teams/16600/projects/19901/branches/525701/badge/grade.svg
[deepscan-url]: https://deepscan.io/dashboard#view=project&amp;tid=16600&amp;pid=19901&amp;bid=525701
[discord]: https://img.shields.io/discord/685241246557667386
[discord-url]: https://discord.gg/56GBJwAnUS

</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[facebook/react]]></title>
            <link>https://github.com/facebook/react</link>
            <guid>https://github.com/facebook/react</guid>
            <pubDate>Fri, 14 Mar 2025 17:49:23 GMT</pubDate>
            <description><![CDATA[The library for web and native user interfaces.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/facebook/react">facebook/react</a></h1>
            <p>The library for web and native user interfaces.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 233,248</p>
            <p>Forks: 47,906</p>
            <p>Stars today: 395 stars this week</p>
            <h2>README</h2><pre># [React](https://react.dev/) &amp;middot; [![GitHub license](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/facebook/react/blob/main/LICENSE) [![npm version](https://img.shields.io/npm/v/react.svg?style=flat)](https://www.npmjs.com/package/react) [![(Runtime) Build and Test](https://github.com/facebook/react/actions/workflows/runtime_build_and_test.yml/badge.svg)](https://github.com/facebook/react/actions/workflows/runtime_build_and_test.yml) [![(Compiler) TypeScript](https://github.com/facebook/react/actions/workflows/compiler_typescript.yml/badge.svg?branch=main)](https://github.com/facebook/react/actions/workflows/compiler_typescript.yml) [![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](https://legacy.reactjs.org/docs/how-to-contribute.html#your-first-pull-request)

React is a JavaScript library for building user interfaces.

* **Declarative:** React makes it painless to create interactive UIs. Design simple views for each state in your application, and React will efficiently update and render just the right components when your data changes. Declarative views make your code more predictable, simpler to understand, and easier to debug.
* **Component-Based:** Build encapsulated components that manage their own state, then compose them to make complex UIs. Since component logic is written in JavaScript instead of templates, you can easily pass rich data through your app and keep the state out of the DOM.
* **Learn Once, Write Anywhere:** We don&#039;t make assumptions about the rest of your technology stack, so you can develop new features in React without rewriting existing code. React can also render on the server using [Node](https://nodejs.org/en) and power mobile apps using [React Native](https://reactnative.dev/).

[Learn how to use React in your project](https://react.dev/learn).

## Installation

React has been designed for gradual adoption from the start, and **you can use as little or as much React as you need**:

* Use [Quick Start](https://react.dev/learn) to get a taste of React.
* [Add React to an Existing Project](https://react.dev/learn/add-react-to-an-existing-project) to use as little or as much React as you need.
* [Create a New React App](https://react.dev/learn/start-a-new-react-project) if you&#039;re looking for a powerful JavaScript toolchain.

## Documentation

You can find the React documentation [on the website](https://react.dev/).

Check out the [Getting Started](https://react.dev/learn) page for a quick overview.

The documentation is divided into several sections:

* [Quick Start](https://react.dev/learn)
* [Tutorial](https://react.dev/learn/tutorial-tic-tac-toe)
* [Thinking in React](https://react.dev/learn/thinking-in-react)
* [Installation](https://react.dev/learn/installation)
* [Describing the UI](https://react.dev/learn/describing-the-ui)
* [Adding Interactivity](https://react.dev/learn/adding-interactivity)
* [Managing State](https://react.dev/learn/managing-state)
* [Advanced Guides](https://react.dev/learn/escape-hatches)
* [API Reference](https://react.dev/reference/react)
* [Where to Get Support](https://react.dev/community)
* [Contributing Guide](https://legacy.reactjs.org/docs/how-to-contribute.html)

You can improve it by sending pull requests to [this repository](https://github.com/reactjs/react.dev).

## Examples

We have several examples [on the website](https://react.dev/). Here is the first one to get you started:

```jsx
import { createRoot } from &#039;react-dom/client&#039;;

function HelloMessage({ name }) {
  return &lt;div&gt;Hello {name}&lt;/div&gt;;
}

const root = createRoot(document.getElementById(&#039;container&#039;));
root.render(&lt;HelloMessage name=&quot;Taylor&quot; /&gt;);
```

This example will render &quot;Hello Taylor&quot; into a container on the page.

You&#039;ll notice that we used an HTML-like syntax; [we call it JSX](https://react.dev/learn#writing-markup-with-jsx). JSX is not required to use React, but it makes code more readable, and writing it feels like writing HTML.

## Contributing

The main purpose of this repository is to continue evolving React core, making it faster and easier to use. Development of React happens in the open on GitHub, and we are grateful to the community for contributing bugfixes and improvements. Read below to learn how you can take part in improving React.

### [Code of Conduct](https://code.fb.com/codeofconduct)

Facebook has adopted a Code of Conduct that we expect project participants to adhere to. Please read [the full text](https://code.fb.com/codeofconduct) so that you can understand what actions will and will not be tolerated.

### [Contributing Guide](https://legacy.reactjs.org/docs/how-to-contribute.html)

Read our [contributing guide](https://legacy.reactjs.org/docs/how-to-contribute.html) to learn about our development process, how to propose bugfixes and improvements, and how to build and test your changes to React.

### [Good First Issues](https://github.com/facebook/react/labels/good%20first%20issue)

To help you get your feet wet and get you familiar with our contribution process, we have a list of [good first issues](https://github.com/facebook/react/labels/good%20first%20issue) that contain bugs that have a relatively limited scope. This is a great place to get started.

### License

React is [MIT licensed](./LICENSE).
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[yokoffing/Betterfox]]></title>
            <link>https://github.com/yokoffing/Betterfox</link>
            <guid>https://github.com/yokoffing/Betterfox</guid>
            <pubDate>Fri, 14 Mar 2025 17:49:22 GMT</pubDate>
            <description><![CDATA[Firefox user.js for speed, privacy, and security. Your favorite browser, but better.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/yokoffing/Betterfox">yokoffing/Betterfox</a></h1>
            <p>Firefox user.js for speed, privacy, and security. Your favorite browser, but better.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 7,532</p>
            <p>Forks: 185</p>
            <p>Stars today: 143 stars this week</p>
            <h2>README</h2><pre>![GitHub Maintained](https://img.shields.io/badge/open%20source-yes-orange)
![GitHub Maintained](https://img.shields.io/badge/maintained-yes-yellow)
[![Visitors](https://hits.seeyoufarm.com/api/count/incr/badge.svg?url=https%3A%2F%2Fgithub.com%2Fyokoffing%2FBetter-Fox&amp;count_bg=%2379C83D&amp;title_bg=%23555555&amp;icon=&amp;icon_color=%23E7E7E7&amp;title=visitors&amp;edge_flat=false)](https://hits.seeyoufarm.com)

# Betterfox
[about:config](https://support.mozilla.org/en-US/kb/about-config-editor-firefox) tweaks to enhance [Mozilla Firefox](https://www.mozilla.org/en-US/firefox/new/). 

31% [faster](https://medium.com/@mihirgrand/comparing-popular-firefox-forks-6fa83fdfdaad#:~:text=31%25%20more%20than%20vanilla%20Firefox) than regular Firefox :rocket:

Now with support for ESR [128](https://github.com/yokoffing/Betterfox/tree/esr128) :new: 

## Required reading
0) Create a [backup profile](https://github.com/yokoffing/Betterfox/wiki/Backup).
1) Download the user.js file [here](https://raw.githubusercontent.com/yokoffing/Betterfox/main/user.js) (Right click &gt; `Save Link As‚Ä¶`).
2) Review [Common Overrides](https://github.com/yokoffing/Betterfox/wiki/Common-Overrides) and make any necessary changes.
   * See also [Optional Hardening](https://github.com/yokoffing/Betterfox/wiki/Optional-Hardening) for other recommendations.
3) Open Firefox. In the URL bar, type `about:profiles` and press **Enter**.
4) For the profile you want to use (or use default), click **Open Folder** in the **Root Directory** section.
5) Move the `user.js` file into the folder.

*After restarting Firefox:*
1) Get an **ad blocker** like [uBlock Origin](https://addons.mozilla.org/blog/ublock-origin-everything-you-need-to-know-about-the-ad-blocker/) with our [recommended filters](https://github.com/yokoffing/filterlists#guidelines).
2) Enable **DNS-level protection** with [NextDNS](https://nextdns.io/?from=xujj63g5). &lt;sup&gt;&lt;i&gt;Use the link and support this page!&lt;/i&gt;&lt;/sup&gt;
    * Check out our configuration [guide](https://github.com/yokoffing/NextDNS-Config) for the best experience.
    * See how to [quickly enable](https://support.mozilla.org/en-US/kb/dns-over-https) **secure DNS** in Firefox.

## Made for everyday browsing
**A secure, blazing fast browsing experience. Without breakage.**

Betterfox is an opinionated preference list inspired by the [law of diminishing returns](https://miro.medium.com/v2/resize:fit:1206/1*lcOcxriV_II_lZuXQYLoXg.jpeg) and the [minimum effective dose](https://medium.com/the-mission/less-is-more-the-minimum-effective-dose-e6d56625931e).

## Simple goals
1) **Minimalism:** get what isn&#039;t needed out of the way
2) **Efficiency:** unleash Firefox&#039;s ability to be fast and performant
3) **Privacy:** protect your data without causing site breakage

## Simple configs

`Fastfox`, `Securefox`, `Peskyfox`, and `Smoothfox` are guides to settings within Firefox.

The `user.js` ‚Äî a configuration file that controls Firefox settings ‚Äî is curated from these guides.

| List      | Description |
|:---------:|-------------|
| [Fastfox](https://github.com/yokoffing/Betterfox/blob/main/Fastfox.js)   | Increase Firefox&#039;s browsing speed. Give Chrome a run for its money!|
| [Securefox](https://github.com/yokoffing/Betterfox/blob/main/Securefox.js) | Protect user data without causing site breakage. |
| [Peskyfox](https://github.com/yokoffing/Betterfox/blob/main/Peskyfox.js)  | Provide a clean, distraction-free browsing experience. |
| [Smoothfox](https://github.com/yokoffing/Betterfox/blob/main/Smoothfox.js) | Get Edge-like smooth scrolling on your favorite browser ‚Äî or choose something more your style. |
| [user.js](https://github.com/yokoffing/Betterfox/blob/main/user.js) | All the essentials. None of the breakage. This is your `user.js`. |

## Recognition

### Browser Integration
&gt; [!IMPORTANT]
&gt; While the browsers listed below incorporate Betterfox to some extent, they often modify it in ways that reduce its effectiveness. For optimal results, apply the `user.js` file even when using Firefox forks.

* [Zen](https://github.com/zen-browser/desktop?tab=readme-ov-file) | [files](https://github.com/zen-browser/desktop/blob/main/src/browser/app/profile/better-fox.js) (July 2024)
* [Midori](https://github.com/goastian/midori-desktop/blob/ESR115/README.md) | [files](https://github.com/goastian/midori-desktop/blob/f3d8d96eb8e08f35a64e3c957bea4e839d7c7730/floorp/browser/components/userjsUtils.sys.mjs#L28-L33) (Dec 2023?)
* [Mercury](https://github.com/Alex313031/Mercury/releases/tag/v.115.3.0) | [files](https://github.com/Alex313031/Mercury/commit/eb9600f9fb8f48c8f5b5c6f3264fbcdb5caff7f5) (Sep 2023)
* [Waterfox](https://www.waterfox.net/en-US/docs/releases/G6.0/) | [files](https://github.com/WaterfoxCo/Waterfox/tree/current/waterfox/browser/app/profile) (Sep 2023)
* [Floorp](https://github.com/Floorp-Projects/Floorp#-betterfox) &lt;sup&gt;[1](https://github.com/Floorp-Projects/Floorp/issues/233#issuecomment-1543557167) [2](https://blog.ablaze.one/3135/2023-04-01/)&lt;/sup&gt; | [files](https://github.com/Floorp-Projects/Floorp/blob/ESR115/floorp/browser/components/preferences/userjs.inc.xhtml) (Apr 2023)
* [Pulse](https://github.com/pulse-browser/browser#%EF%B8%8F-credits) | [files](https://github.com/pulse-browser/browser/tree/alpha/src/browser/app/profile) (Dec 2021)
* [Ghostery Private Browser](https://github.com/ghostery/user-agent-desktop#community) &lt;sup&gt;[1](https://web.archive.org/web/20210509171835/https://www.ghostery.com/ghostery-dawn-update-more/) [2](https://web.archive.org/web/20210921114333/https://www.ghostery.com/ghostery-dawn-product-update/)&lt;/sup&gt; | [files](https://github.com/ghostery/user-agent-desktop/tree/main/brands/ghostery/branding/pref) (Feb 2021)

### YouTube
* [Ditch Chrome for One Of These BETTER BROWSERS!](https://youtu.be/ygkxFc8SZlc?si=m5NQe-b_oFXs5crb&amp;t=230) (Aug 2024)
* [The ULTIMATE Browser Tier List](https://youtu.be/j5r6jFE8gic?t=560) (Mar 2023)
* [I Hate Firefox. But I&#039;m Still Switching Back to It.](https://youtu.be/w0SJFED5xK0?t=220) (Nov 2022)
* [Espa√±ol] [Optimize and Accelerate Firefox](https://www.youtube.com/watch?v=3XtoONmq5_Q) (Nov 2022) 
* [How To Improve Firefox Performance](https://www.youtube.com/watch?v=N8IOJiOFVEk) (Dec 2021)

### Podcasts
* [Italian] [Digitalia.fm](https://digitalia.fm/684/) | 1:41:35‚Äì1:42:41 (July 2023)
* [GhoSTORIES with Franz &amp; Pete](https://anchor.fm/ghostories/episodes/S2E6-We-Talking-Ghostery-Dawn----Again-er0q02/a-a4o5vmh) | 17:05‚Äì18:40 (Feb 2021)

### Articles
* [Espa√±ol] [Firefox is an excellent browser, but this small modification makes it much faster and more private](https://www.genbeta.com/a-fondo/firefox-excelente-navegador-esta-pequena-modificacion-hace-mucho-rapido-privado-asi-funciona-betterfox) (Jan 2025)
* [Browsers for Daily Use](https://anhkhoakz.neocities.org/blog/browsers-for-daily-using/#firefox-but-hardened) (Jan 2024)
* [Avoiding Manifest V3 ‚Äì Escaping the Ad-Pocalypse](https://www.xbitlabs.com/avoiding-manifest-v3/) (Dec 2023)
* [German] [Pulse Browser Review: Firefox fork with Turbo tweaks and Opera sidebar](https://www.computerbild.de/artikel/cb-Tipps-Software-Pulse-Browser-Review-ein-Firefox-Fork-mit-Seitenleiste-wie-bei-Opera-35644139.html#:~:text=Noch%20mehr%20Speed%2DFeatures) (Apr 2023)
* [2023 Browser Showdown: Comparing Chrome, Brave, Firefox, Vivaldi, and Opera](https://www.appdate.lk/technology/2023-browser-showdown/) (Jan 2023)

### Guides
* [FMHY Browser Tools: Privacy Tweaks](https://www.reddit.com/r/FREEMEDIAHECKYEAH/wiki/storage/#wiki_privacy_based_browsers)
* [Firefox-UI-Fix](https://github.com/black7375/Firefox-UI-Fix/wiki/Tips#privacy)
* [Narsil/desktop_user.js](https://git.nixnet.services/Narsil/desktop_user.js#thanks)
* [pyllyukko/user.js](https://github.com/pyllyukko/user.js) [comparator](https://jm42.github.io/compare-user.js/)

### Reviews
* ‚ÄúI use this one ... The performance is absolutely amazing. There‚Äôs definitely a huge difference when it comes to loading sites.‚Äù - [DIRIKtv](https://youtu.be/N8IOJiOFVEk?t=16)
* &quot;BetterFox ... will provide good-enough privacy and help with performance.&quot; - [Qdoit12Super](https://old.reddit.com/r/browsers/comments/139h4my/suggestion_for_finding_3_good_privacy_focus/jj3n3qn/?context=2)
* &quot;...drastically changed the experience with Firefox for me. Improved speed, security, smoothness, and removed clutter.&quot; - [AppDate](https://www.appdate.lk/technology/2023-browser-showdown/#:~:text=Used%20the%20BetterFox%20user%20config%20settings%20with%20some%20overrides%20which%20drastically%20changed%20the%20experience)
* &quot;Firefox with uBlock Origin extension and tuned with Betterfox is faster than Safari.&quot;  - [cugeloid](https://elephas.app/blog/best-browsers-mac#what-is-the-best-browser-for-mac-according-to-redditandnbsp)
* &quot;I don&#039;t think I could use Firefox without Betterfox.&quot; - [Professional_Fun4616](https://old.reddit.com/r/nextdns/comments/15y815f/the_people_behind_betterfox_have_this_awesome/jxb7cir/?context=3)
* &quot;The best collection of tweaks available.&quot; - [AuRiMaS](https://old.reddit.com/r/MozillaFirefox/comments/15cc1vk/about_changes_in_aboutconfig/jtyx910/?context=3)
* &quot;FF is now much snappier!&quot; - [whotheff](https://old.reddit.com/r/firefox/comments/z5auzi/firefox_not_properly_usingrecognizing_gpu_poor/iy36hyz/)
* &quot;...the experience is so good now I don‚Äôt think I‚Äôll go back to any of the chromium based browsers.&quot; - [Mr_Compromise](https://old.reddit.com/r/pcmasterrace/comments/zwioe1/what_browser_will_you_be_using_in_2023_please/j1wmbxo/)

## Support

If you like the project, leave a :star: (top right) and become a [stargazer](https://github.com/yokoffing/Betterfox/stargazers)!

[![Stargazers repo roster for @yokoffing/Betterfox](https://reporoster.com/stars/dark/yokoffing/Betterfox)](https://github.com/yokoffing/Betterfox/stargazers)

&lt;a href=&#039;https://ko-fi.com/Q5Q5G8EPH&#039; target=&#039;_blank&#039;&gt;&lt;img height=&#039;36&#039; style=&#039;border:0px;height:36px;&#039; src=&#039;https://storage.ko-fi.com/cdn/kofi2.png?v=3&#039; border=&#039;0&#039; alt=&#039;Buy Me a Coffee at ko-fi.com&#039; /&gt;&lt;/a&gt;
&lt;noscript&gt;&lt;a href=&quot;https://liberapay.com/yokoffing/donate&quot;&gt;&lt;img alt=&quot;Donate using Liberapay&quot; src=&quot;https://liberapay.com/assets/widgets/donate.svg&quot;&gt;&lt;/a&gt;&lt;/noscript&gt;

## Credit
* Betterfox mirrors the ongoing work provided by [arkenfox](https://github.com/arkenfox/user.js). Additionally, this repository includes content reproduced or adapted from other sources. Credit for overlapping material goes to the original authors.
* Appreciation goes to the [Firefox](https://www.mozilla.org/en-US/firefox/new/) team and developers working on [Bugzilla](https://bugzilla.mozilla.org/home), fighting for the open web.
* Thanks to [Denperidge](https://github.com/Denperidge) for adding [`install.py`](https://github.com/yokoffing/Betterfox/blob/main/install.py) for advanced users in v.131.
* A special thanks to [Alex Kontos](https://github.com/MrAlex94) of [Waterfox](https://github.com/WaterfoxCo/Waterfox) for his collaboration in v.116.
* Many thanks to the 2021 [Ghostery](https://github.com/ghostery) team for testing Betterfox at scale in its early days.

&lt;div align=&#039;center&#039;&gt;
  &lt;a href=&#039;https://www.websitecounterfree.com&#039;&gt;&lt;img src=&#039;https://www.websitecounterfree.com/c.php?d=9&amp;id=19653&amp;s=1&#039; border=&#039;0&#039; alt=&#039;Free Website Counter&#039;&gt;&lt;/a&gt;&lt;br / &gt;
since 23 July 2022&lt;/div&gt;
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[evershopcommerce/evershop]]></title>
            <link>https://github.com/evershopcommerce/evershop</link>
            <guid>https://github.com/evershopcommerce/evershop</guid>
            <pubDate>Fri, 14 Mar 2025 17:49:21 GMT</pubDate>
            <description><![CDATA[üõçÔ∏è NodeJS E-commerce Platform]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/evershopcommerce/evershop">evershopcommerce/evershop</a></h1>
            <p>üõçÔ∏è NodeJS E-commerce Platform</p>
            <p>Language: JavaScript</p>
            <p>Stars: 4,819</p>
            <p>Forks: 1,341</p>
            <p>Stars today: 31 stars this week</p>
            <h2>README</h2><pre>&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
&lt;img width=&quot;60&quot; height=&quot;68&quot; alt=&quot;EverShop Logo&quot; src=&quot;https://raw.githubusercontent.com/evershopcommerce/evershop/dev/.github/images/logo-green.png&quot;/&gt;
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;h1 align=&quot;center&quot;&gt;EverShop&lt;/h1&gt;
&lt;/p&gt;
&lt;h4 align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://evershop.io/docs/development/getting-started/introduction&quot;&gt;Documentation&lt;/a&gt; |
    &lt;a href=&quot;https://demo.evershop.io/&quot;&gt;Demo&lt;/a&gt;
&lt;/h4&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;https://github.com/nodeonline/nodejscart/actions/workflows/build.yml/badge.svg&quot; alt=&quot;Github Action&quot;&gt;
  &lt;a href=&quot;https://twitter.com/evershopjs&quot;&gt;
    &lt;img alt=&quot;Twitter Follow&quot; src=&quot;https://img.shields.io/twitter/follow/evershopjs?style=social&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://discord.gg/GSzt7dt7RM&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/discord/757179260417867879?label=discord&quot; alt=&quot;Discord&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://opensource.org/licenses/GPL-3.0&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/License-GPLv3-blue.svg&quot; alt=&quot;License&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;img alt=&quot;EverShop&quot; width=&quot;950&quot; src=&quot;https://raw.githubusercontent.com/evershopcommerce/evershop/dev/.github/images/banner.png&quot;/&gt;
&lt;/p&gt;

## Introduction

EverShop is a GraphQL Based and React ecommerce platform with essential commerce features. Built with React, modular and fully customizable.

## Installation Using Docker


You can get started with EverShop in minutes by using the Docker image. The Docker image is a great way to get started with EverShop without having to worry about installing dependencies or configuring your environment.

```bash
curl -sSL https://raw.githubusercontent.com/evershopcommerce/evershop/main/docker-compose.yml &gt; docker-compose.yml
docker-compose up -d
```

For the full installation guide, please refer to our [Installation guide](https://evershop.io/docs/development/getting-started/installation-guide).

## Documentation

- [Installation guide](https://evershop.io/docs/development/getting-started/installation-guide).

- [Extension development](https://evershop.io/docs/development/module/create-your-first-extension).

- [Theme development](https://evershop.io/docs/development/theme/theme-overview).


## Demo

Explore our demo store.

&lt;p align=&quot;left&quot;&gt;
  &lt;a href=&quot;https://demo.evershop.io/admin&quot; target=&quot;_blank&quot;&gt;
    &lt;img alt=&quot;evershop-backend-demo&quot; height=&quot;35&quot; alt=&quot;EverShop Admin Demo&quot; src=&quot;https://raw.githubusercontent.com/evershopcommerce/evershop/dev/.github/images/evershop-demo-back.png&quot;/&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://demo.evershop.io/&quot; target=&quot;_blank&quot;&gt;
    &lt;img alt=&quot;evershop-store-demo&quot; height=&quot;35&quot; alt=&quot;EverShop Store Demo&quot; src=&quot;https://raw.githubusercontent.com/evershopcommerce/evershop/dev/.github/images/evershop-demo-front.png&quot;/&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;b&gt;Demo user:&lt;/b&gt;

Email: demo@evershop.io&lt;br/&gt;
Password: 123456

## Support

If you like my work, feel free to:

- ‚≠ê this repository. It helps.
- [![Tweet](https://img.shields.io/twitter/url/http/shields.io.svg?style=social)][tweet] about EverShop. Thank you!

[tweet]: https://twitter.com/intent/tweet?url=https%3A%2F%2Fgithub.com%2Fevershopcommerce%2Fevershop&amp;text=Awesome%20React%20Ecommerce%20Project&amp;hashtags=react,ecommerce,expressjs,graphql

### Sponsors

&lt;table style=&quot;text-align:center;&quot;&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;&lt;a href=&quot;https://www.bountyhub.dev/&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/evershopcommerce/evershop/dev/.github/images/sponsors/bountyhub.png&quot; width=&quot;85&quot; valign=&quot;middle&quot; /&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

## Contributing

EverShop is an open-source project. We are committed to a fully transparent development process and appreciate highly any contributions. Whether you are helping us fix bugs, proposing new features, improving our documentation or spreading the word - we would love to have you as part of the EverShop community.

### Ask a question about EverShop

You can ask questions, and participate in discussions about EverShop-related topics in the EverShop Discord channel.

&lt;a href=&quot;https://discord.gg/GSzt7dt7RM&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/evershopcommerce/evershop/dev/.github/images/discord_banner_github.svg&quot; /&gt;&lt;/a&gt;

### Create a bug report

If you see an error message or run into an issue, please [create bug report](https://github.com/evershopcommerce/evershop/issues/new). This effort is valued and it will help all EverShop users.


### Submit a feature request

If you have an idea, or you&#039;re missing a capability that would make development easier and more robust, please [Submit feature request](https://github.com/evershopcommerce/evershop/issues/new).

If a similar feature request already exists, don&#039;t forget to leave a &quot;+1&quot;.
If you add some more information such as your thoughts and vision about the feature, your comments will be embraced warmly :)


Please refer to our [Contribution Guidelines](./CONTRIBUTING.md) and [Code of Conduct](./CODE_OF_CONDUCT.md).

## License

[GPL-3.0 License](https://github.com/evershopcommerce/evershop/blob/main/LICENSE)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[leaningtech/webvm]]></title>
            <link>https://github.com/leaningtech/webvm</link>
            <guid>https://github.com/leaningtech/webvm</guid>
            <pubDate>Fri, 14 Mar 2025 17:49:20 GMT</pubDate>
            <description><![CDATA[Virtual Machine for the Web]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/leaningtech/webvm">leaningtech/webvm</a></h1>
            <p>Virtual Machine for the Web</p>
            <p>Language: JavaScript</p>
            <p>Stars: 12,292</p>
            <p>Forks: 2,052</p>
            <p>Stars today: 221 stars this week</p>
            <h2>README</h2><pre># WebVM

[![Discord server](https://img.shields.io/discord/988743885121548329?color=%235865F2&amp;logo=discord&amp;logoColor=%23fff)](https://discord.gg/yWRr2YnD9c)
[![Issues](https://img.shields.io/github/issues/leaningtech/webvm)](https://github.com/leaningtech/webvm/issues)

This repository hosts the source code for [https://webvm.io](https://webvm.io), a Linux virtual machine that runs in your browser.

Try out the new Alpine / Xorg / i3 graphical environment: [https://webvm.io/alpine.html](https://webvm.io/alpine.html)

&lt;img src=&quot;/assets/welcome_to_WebVM_alpine_2024.png&quot; width=&quot;90%&quot;&gt;

WebVM is a server-less virtual environment running fully client-side in HTML5/WebAssembly. It&#039;s designed to be Linux ABI-compatible. It runs an unmodified Debian distribution including many native development toolchains.

WebVM is powered by the CheerpX virtualization engine, and enables safe, sandboxed client-side execution of x86 binaries on any browser. CheerpX includes an x86-to-WebAssembly JIT compiler, a virtual block-based file system, and a Linux syscall emulator. 

# Enable networking

Modern browsers do not provide APIs to directly use TCP or UDP. WebVM provides networking support by integrating with Tailscale, a VPN network that supports WebSockets as a transport layer.

- Open the &quot;Networking&quot; panel from the side-bar
- Click &quot;Connect to Tailscale&quot; from the panel
- Log in to Tailscale (create an account if you don&#039;t have one)
- Click &quot;Connect&quot; when prompted by Tailscale
- If you are unfamiliar with Tailscale or would like additional information see [WebVM and Tailscale](/docs/Tailscale.md).

# Fork, deploy, customize

&lt;img src=&quot;/assets/fork_deploy_instructions.gif&quot; alt=&quot;deploy_instructions_gif&quot; width=&quot;90%&quot;&gt;

- Fork the repository.
- Enable Github pages in settings.
	- Click on `Settings`.
	- Go to the `Pages` section.
	- Select `Github Actions` as the source.
        - If you are using a custom domain, ensure `Enforce HTTPS` is enabled. 
- Run the workflow.
	- Click on `Actions`.
	- Accept the prompt. This is required only once to enable Actions for your fork.
	- Click on the workflow named `Deploy`.
	- Click `Run workflow` and then once more `Run workflow` in the menu.
- After a few seconds a new `Deploy` workflow will start, click on it to see details.
- After the workflow completes, which takes a few minutes, it will show the URL below the `deploy_to_github_pages` job.

&lt;img src=&quot;/assets/result.png&quot; width=&quot;70%&quot; &gt;

You can now customize `dockerfiles/debian_mini` to suit your needs, or make a new Dockerfile from scratch. Use the `Path to Dockerfile` workflow parameter to select it.

# Run WebVM locally with a custom Debian mini disk image

1. Clone the WebVM Repository

```sh
git clone https://github.com/leaningtech/webvm.git
cd webvm
```

2. Download the Debian mini Ext2 image

	Run the following command to download the Debian mini Ext2 image:

	```sh
	wget &quot;https://github.com/leaningtech/webvm/releases/download/ext2_image/debian_mini_20230519_5022088024.ext2&quot;
	```

	(*You can also build your own disk image by selecting the **&quot;Upload GitHub release&quot;** workflow option*)

3. Update the configuration file

	Edit `config_public_terminal.js` to reference your local disk image:

- Replace: 
	
	`&quot;wss://disks.webvm.io/debian_large_20230522_5044875331.ext2&quot;`
	
	With:
	
	`&quot;/disk-images/debian_mini_20230519_5022088024.ext2&quot;`

	(*Use an absolute or relative URL pointing to the disk image location.*)


- Replace `&quot;cloud&quot;` with the correct disk image type: `&quot;bytes&quot;`
	
4. Build WebVM

	Run the following commands to install dependencies and build WebVM:

	```sh
	npm install
	npm run build
	```

	The output will be placed in the `build` directory.

5. Configure Nginx

- Create a directory for the disk image:

	```sh
	mkdir disk-images
	mv debian_mini_20230519_5022088024.ext2 disk-images/
	```

- Modify your `nginx.conf` file to serve the disk image. Add the following location block:

	```nginx
	location /disk-images/ {
        root .;
        autoindex on;
	}
	```

6. Start Nginx

	Run the following command to start Nginx:

	```sh
	nginx -p . -c nginx.conf
	```

	*Nginx will automatically serve the build directory.*

7. Access WebVM

	Open a browser and visit: `http://127.0.0.1:8081`.

	Enjoy your local WebVM!

# Example customization: Python3 REPL

The `Deploy` workflow takes into account the `CMD` specified in the Dockerfile. To build a REPL you can simply apply this patch and deploy.

```diff
diff --git a/dockerfiles/debian_mini b/dockerfiles/debian_mini
index 2878332..1f3103a 100644
--- a/dockerfiles/debian_mini
+++ b/dockerfiles/debian_mini
@@ -15,4 +15,4 @@ WORKDIR /home/user/
 # We set env, as this gets extracted by Webvm. This is optional.
 ENV HOME=&quot;/home/user&quot; TERM=&quot;xterm&quot; USER=&quot;user&quot; SHELL=&quot;/bin/bash&quot; EDITOR=&quot;vim&quot; LANG=&quot;en_US.UTF-8&quot; LC_ALL=&quot;C&quot;
 RUN echo &#039;root:password&#039; | chpasswd
-CMD [ &quot;/bin/bash&quot; ]
+CMD [ &quot;/usr/bin/python3&quot; ]
```

# Bugs and Issues

Please use [Issues](https://github.com/leaningtech/webvm/issues) to report any bug.
Or come to say hello / share your feedback on [Discord](https://discord.gg/yTNZgySKGa).

# More links

- [WebVM: server-less x86 virtual machines in the browser](https://leaningtech.com/webvm-server-less-x86-virtual-machines-in-the-browser/)
- [WebVM: Linux Virtualization in WebAssembly with Full Networking via Tailscale](https://leaningtech.com/webvm-virtual-machine-with-networking-via-tailscale/)
- [Mini.WebVM: Your own Linux box from Dockerfile, virtualized in the browser via WebAssembly](https://leaningtech.com/mini-webvm-your-linux-box-from-dockerfile-via-wasm/)
- Reference GitHub Pages deployment: [Mini.WebVM](https://mini.webvm.io)
- [Crafting the Impossible: X86 Virtualization in the Browser with WebAssembly](https://www.youtube.com/watch?v=VqrbVycTXmw) Talk at JsNation 2022

# Thanks to... 
This project depends on:
- [CheerpX](https://cheerpx.io/), made by [Leaning Technologies](https://leaningtech.com/) for x86 virtualization and Linux emulation
- xterm.js, [https://xtermjs.org/](https://xtermjs.org/), for providing the Web-based terminal emulator
- [Tailscale](https://tailscale.com/), for the networking component
- [lwIP](https://savannah.nongnu.org/projects/lwip/), for the TCP/IP stack, compiled for the Web via [Cheerp](https://github.com/leaningtech/cheerp-meta/)

# Versioning

WebVM depends on the CheerpX x86-to-WebAssembly virtualization technology, which is included in the project via [NPM](https://www.npmjs.com/package/@leaningtech/cheerpx).

The NPM package is updated on every release.

Every build is immutable, if a specific version works well for you today, it will keep working forever.

# License

WebVM is released under the Apache License, Version 2.0.

You are welcome to use, modify, and redistribute the contents of this repository.

The public CheerpX deployment is provided **as-is** and is **free to use** for technological exploration, testing and use by individuals. Any other use by organizations, including non-profit, academia and the public sector, requires a license. Downloading a CheerpX build for the purpose of hosting it elsewhere is not permitted without a commercial license.

Read more about [CheerpX licensing](https://cheerpx.io/docs/licensing)

If you want to build a product on top of CheerpX/WebVM, please get in touch: sales@leaningtech.com
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[ToolJet/ToolJet]]></title>
            <link>https://github.com/ToolJet/ToolJet</link>
            <guid>https://github.com/ToolJet/ToolJet</guid>
            <pubDate>Fri, 14 Mar 2025 17:49:19 GMT</pubDate>
            <description><![CDATA[Low-code platform for building business applications. Connect to databases, cloud storages, GraphQL, API endpoints, Airtable, Google sheets, OpenAI, etc and build apps using drag and drop application builder. Built using JavaScript/TypeScript. üöÄ]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/ToolJet/ToolJet">ToolJet/ToolJet</a></h1>
            <p>Low-code platform for building business applications. Connect to databases, cloud storages, GraphQL, API endpoints, Airtable, Google sheets, OpenAI, etc and build apps using drag and drop application builder. Built using JavaScript/TypeScript. üöÄ</p>
            <p>Language: JavaScript</p>
            <p>Stars: 34,995</p>
            <p>Forks: 4,493</p>
            <p>Stars today: 114 stars this week</p>
            <h2>README</h2><pre>ToolJet is an **open-source low-code framework** to build and deploy internal tools with minimal engineering effort. ToolJet&#039;s drag-and-drop frontend builder allows you to create complex, responsive frontends within minutes. Additionally, you can integrate various data sources, including databases like PostgreSQL, MongoDB, and Elasticsearch; API endpoints with OpenAPI spec and OAuth2 support; SaaS tools such as Stripe, Slack, Google Sheets, Airtable, and Notion; as well as object storage services like S3, GCS, and Minio, to fetch and write data.

 :star: If you find ToolJet useful, please consider giving us a star on GitHub! Your support helps us continue to innovate and deliver exciting features.

![Docker Cloud Build Status](https://img.shields.io/docker/cloud/build/tooljet/tooljet-ce)
![Number of GitHub contributors](https://img.shields.io/github/contributors/tooljet/tooljet)
[![Number of GitHub issues that are open](https://img.shields.io/github/issues/ToolJet/ToolJet)](https://github.com/ToolJet/ToolJet/issues)
[![Number of GitHub stars](https://img.shields.io/github/stars/ToolJet/ToolJet)](https://github.com/ToolJet/ToolJet/stargazers)
![Number of GitHub closed issues](https://img.shields.io/github/issues-closed/tooljet/tooljet)
![Number of GitHub pull requests that are open](https://img.shields.io/github/issues-pr-raw/tooljet/tooljet)
![GitHub release; latest by date](https://img.shields.io/github/v/release/tooljet/tooljet)
![GitHub commit activity](https://img.shields.io/github/commit-activity/m/tooljet/tooljet)
[![GitHub license which is AGPL license](https://img.shields.io/github/license/ToolJet/ToolJet)](https://github.com/ToolJet/ToolJet)
[![Follow us on X, formerly Twitter](https://img.shields.io/twitter/follow/ToolJet?style=social)](https://twitter.com/ToolJet)

&lt;p align=&quot;center&quot;&gt;
    &lt;img src=&quot;https://user-images.githubusercontent.com/7828962/211444352-4d6d2e4a-13c9-4980-9e16-4aed4af9811b.png&quot; alt=&quot;Tooljet dashboard showing inventory and orders&quot;/&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
    &lt;img src=&quot;https://github.com/ToolJet/ToolJet/assets/25361949/0e711f3a-edb7-496b-8833-107de3826933&quot;/&gt;
&lt;/p&gt;

## All features

- **Visual App Builder:** 45+ built-in responsive components, including Tables, Charts, Lists, Forms, and Progress Bars.
- **ToolJet Database:** Built-in no-code database.
- **Multi-Page:** Build an application with multiple pages.
- **Multiplayer editing:** Allows simultaneous app building by multiple developers.
- **50+ data sources:** Integrate with external databases, cloud storage, and APIs.
- **Desktop &amp; mobile:** Customize layout widths to fit various screen sizes.
- **Self-host:** Supports Docker, Kubernetes, AWS EC2, Google Cloud Run, and more.
- **Collaborate:** Add comments anywhere on the canvas and tag your team members.
- **Extend with plugins:** Use our [command-line tool](https://www.npmjs.com/package/@tooljet/cli) to easily bootstrap new connectors.
- **Version control:** Manage multiple application versions with a structured release cycle.
- **Run JS &amp; Python code:** Execute custom JavaScript and Python snippets.
- **Granular access control:** Set permissions at both group and app levels.
- **Low-code:** Use JS code almost anywhere within the builder, such as setting text color based on status with 
`status === &#039;success&#039; ? &#039;green&#039; : &#039;red&#039;`.
- **No-code query editors:** Query Editors are available for all supported data sources.
- **Join and transform data:** Transform query results using JavaScript or Python code.
- **Secure:** All the credentials are securely encrypted using `aes-256-gcm`.
- **Data Privacy:** ToolJet serves solely as a proxy and does not store data.
- **SSO:** Supports multiple Single Sign-On providers.

&lt;hr&gt;

## Quickstart
The easiest way to get started with ToolJet is by creating a [ToolJet Cloud](https://tooljet.com) account. ToolJet Cloud offers a hosted solution of ToolJet. If you want to self-host ToolJet, kindly proceed to [deployment documentation](https://docs.tooljet.com/docs/setup/).

You can deploy ToolJet on DigitalOcean using one-click-deployment.

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://cloud.digitalocean.com/apps/new?repo=https://github.com/ToolJet/ToolJet/tree/main&quot;&gt;&lt;img src=&quot;https://www.deploytodo.com/do-btn-blue.svg&quot; alt=&quot;Deploy to DigitalOcean&quot; height=32&gt;&lt;/a&gt;
&lt;/p&gt;

### Try using Docker
Want to give ToolJet a quick spin on your local machine? You can run the following command from your terminal to have ToolJet up and running right away.


```bash
docker run \
  --name tooljet \
  --restart unless-stopped \
  -p 80:80 \
  --platform linux/amd64 \
  -v tooljet_data:/var/lib/postgresql/13/main \
  tooljet/try:EE-LTS-latest
```

*For users upgrading their ToolJet version, we recommend choosing the LTS version over the latest version. The LTS version ensures stability with production bug fixes, security patches, and performance enhancements.*

## Tutorials and examples

[Time Tracker Application](https://docs.tooljet.com/docs/#quickstart-guide)&lt;br&gt;
[Build your own CMS using low-code](https://blog.tooljet.com/build-cms-using-lowcode-and-mongodb/)&lt;br&gt;
[AWS S3 Browser](https://blog.tooljet.com/build-an-aws-s3-broswer-with-tooljet/)&lt;br&gt;

## Documentation
Documentation is available at https://docs.tooljet.com.

- [Getting Started](https://docs.tooljet.com)&lt;br&gt;
- [Data source Reference](https://docs.tooljet.com/docs/data-sources/airtable/)&lt;br&gt;
- [Component Reference](https://docs.tooljet.com/docs/widgets/button)

## Self-hosted
You can use ToolJet Cloud for a fully managed solution. If you want to self-host ToolJet, we have guides on deploying ToolJet on Kubernetes, AWS EC2, Docker, and more.

| Provider  | Documentation |
| :------------- | :------------- |
| Digital Ocean | [Link](https://docs.tooljet.com/docs/setup/digitalocean)  |
| Docker  | [Link](https://docs.tooljet.com/docs/setup/docker)   |
| AWS EC2 | [Link](https://docs.tooljet.com/docs/setup/ec2)  |
| AWS ECS | [Link](https://docs.tooljet.com/docs/setup/ecs)   |
| OpenShift | [Link](https://docs.tooljet.com/docs/setup/openshift)   |
| Helm | [Link](https://docs.tooljet.com/docs/setup/helm)   |
| AWS EKS (Kubernetes) | [Link](https://docs.tooljet.com/docs/setup/kubernetes)   |
| GCP GKE (Kubernetes) | [Link](https://docs.tooljet.com/docs/setup/kubernetes-gke)   |
| Azure AKS (Kubernetes) | [Link](https://docs.tooljet.com/docs/setup/kubernetes-aks)   |
| Azure Container | [Link](https://docs.tooljet.com/docs/setup/azure-container)   |
| Google Cloud Run  | [Link](https://docs.tooljet.com/docs/setup/google-cloud-run)   |
| Deploying ToolJet client  | [Link](https://docs.tooljet.com/docs/setup/client)   |
| Deploying ToolJet on a Subpath  | [Link](https://docs.tooljet.com/docs/setup/tooljet-subpath/)   |

## Marketplace 
ToolJet can now be found on both AWS and Azure Marketplaces, making it simpler than ever to access and deploy our app-building platform.

Find ToolJet on AWS Marketplace [here](https://aws.amazon.com/marketplace/pp/prodview-fxjto27jkpqfg?sr=0-1&amp;ref_=beagle&amp;applicationId=AWSMPContessa) and explore seamless integration on Azure Marketplace [here](https://azuremarketplace.microsoft.com/en-us/marketplace/apps/tooljetsolutioninc1679496832216.tooljet?tab=Overview).

## Community support
For general help using ToolJet, please refer to the official [documentation](https://docs.tooljet.com/docs/). For additional help, you can use one of these channels to ask a question:

- [Slack](https://tooljet.com/slack) - Discussions with the community and the team.
- [GitHub](https://github.com/ToolJet/ToolJet/issues) - For bug reports and feature requests.
- [ùïè (Twitter)](https://twitter.com/ToolJet) - Get the product updates quickly.

## Roadmap
Check out our [roadmap](https://github.com/orgs/ToolJet/projects/15) to stay updated on recently released features and learn about what&#039;s coming next.

## Branching model
We use the git-flow branching model. The base branch is `develop`. If you are looking for a stable version, please use the main branch or tags labeled as v1.x.x.

## Contributing
Kindly read our [Contributing Guide](CONTRIBUTING.md) to familiarize yourself with ToolJet&#039;s development process, how to suggest bug fixes and improvements, and the steps for building and testing your changes. &lt;br&gt;

## Contributors
&lt;a href=&quot;https://github.com/tooljet/tooljet/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=tooljet/tooljet&amp;max=400&amp;columns=20&quot; /&gt;
  &lt;img src=&quot;https://us-central1-tooljet-hub.cloudfunctions.net/github&quot; width=&quot;0&quot; height=&quot;0&quot; /&gt;
&lt;/a&gt;

## License
ToolJet ¬© 2023, ToolJet Solutions Inc - Released under the GNU Affero General Public License v3.0.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[tangly1024/NotionNext]]></title>
            <link>https://github.com/tangly1024/NotionNext</link>
            <guid>https://github.com/tangly1024/NotionNext</guid>
            <pubDate>Fri, 14 Mar 2025 17:49:18 GMT</pubDate>
            <description><![CDATA[‰ΩøÁî® NextJS + Notion API ÂÆûÁé∞ÁöÑÔºåÊîØÊåÅÂ§öÁßçÈÉ®ÁΩ≤ÊñπÊ°àÁöÑÈùôÊÄÅÂçöÂÆ¢ÔºåÊó†ÈúÄÊúçÂä°Âô®„ÄÅÈõ∂Èó®ÊßõÊê≠Âª∫ÁΩëÁ´ôÔºå‰∏∫NotionÂíåÊâÄÊúâÂàõ‰ΩúËÄÖËÆæËÆ°„ÄÇ (A static blog built with NextJS and Notion API, supporting multiple deployment options. No server required, zero threshold to set up a website. Designed for Notion and all creators.)]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/tangly1024/NotionNext">tangly1024/NotionNext</a></h1>
            <p>‰ΩøÁî® NextJS + Notion API ÂÆûÁé∞ÁöÑÔºåÊîØÊåÅÂ§öÁßçÈÉ®ÁΩ≤ÊñπÊ°àÁöÑÈùôÊÄÅÂçöÂÆ¢ÔºåÊó†ÈúÄÊúçÂä°Âô®„ÄÅÈõ∂Èó®ÊßõÊê≠Âª∫ÁΩëÁ´ôÔºå‰∏∫NotionÂíåÊâÄÊúâÂàõ‰ΩúËÄÖËÆæËÆ°„ÄÇ (A static blog built with NextJS and Notion API, supporting multiple deployment options. No server required, zero threshold to set up a website. Designed for Notion and all creators.)</p>
            <p>Language: JavaScript</p>
            <p>Stars: 8,840</p>
            <p>Forks: 11,935</p>
            <p>Stars today: 122 stars this week</p>
            <h2>README</h2><pre># Â∏ÆÂä©ÊïôÁ®ã

ËÆøÈóÆÂ∏ÆÂä©Ôºö[NotionNextÂ∏ÆÂä©ÊâãÂÜå](https://docs.tangly1024.com/)

&gt; Êú¨È°πÁõÆÊïôÁ®ã‰∏∫ÂÖçË¥π„ÄÅÂÖ¨ÂºÄËµÑÊ∫êÔºå‰ªÖÈôê‰∏™‰∫∫Â≠¶‰π†‰ΩøÁî®„ÄÇ‰∏•Á¶Å‰ªª‰Ωï‰∏™‰∫∫ÊàñÁªÑÁªáÂ∞ÜÊú¨ÊïôÁ®ãÁî®‰∫éÂïÜ‰∏öÁî®ÈÄîÔºåÂåÖÊã¨‰ΩÜ‰∏çÈôê‰∫éÁõ¥Êé•ÂîÆÂçñ„ÄÅÈó¥Êé•Êî∂Ë¥π„ÄÅÊàñÂÖ∂‰ªñÂèòÁõ∏ÁõàÂà©Ë°å‰∏∫„ÄÇËΩ¨ËΩΩ„ÄÅÂ§çÂà∂Êàñ‰ªãÁªçÊú¨ÊïôÁ®ãÂÜÖÂÆπÊó∂ÔºåÈ°ª‰øùÁïô‰ΩúËÄÖ‰ø°ÊÅØÂπ∂ÊòéÁ°ÆÊ≥®ÊòéÊù•Ê∫ê„ÄÇ
&gt; Êú¨È°πÁõÆ‰ªÖÊèê‰æõÁî±‰ΩúËÄÖÂõ¢ÈòüÊéàÊùÉÁöÑ‰ªòË¥πÂí®ËØ¢ÊúçÂä°ÔºåËØ∑Ê≥®ÊÑèËæ®Âà´ÔºåË∞®Èò≤ËØàÈ™óË°å‰∏∫„ÄÇ‰ªª‰ΩïÊú™ÁªèÊéàÊùÉÁöÑÊî∂Ë¥πÊúçÂä°ÂùáÂèØËÉΩÂ≠òÂú®Ê≥ïÂæãÈ£éÈô©„ÄÇ

NotionÊòØ‰∏Ä‰∏™ËÉΩËÆ©ÊïàÁéáÊö¥Ê∂®ÁöÑÁîü‰∫ßÂäõÂºïÊìéÔºåÂèØ‰ª•Â∏Æ‰Ω†‰π¶ÂÜôÊñáÊ°£„ÄÅÁÆ°ÁêÜÁ¨îËÆ∞ÔºåÊê≠Âª∫Áü•ËØÜÂ∫ìÔºåÁîöËá≥ÂèØ‰ª•‰∏∫‰Ω†ËßÑÂàíÈ°πÁõÆ„ÄÅÊó∂Èó¥ÁÆ°ÁêÜ„ÄÅÁªÑÁªáÂõ¢Èòü„ÄÅÊèêÈ´òÁîü‰∫ßÂäõ„ÄÅËøòÊúâÂΩìÂâçÊúÄÂº∫Â§ßÁöÑAIÊäÄÊúØÂä†ÊåÅ„ÄÇ

&gt; Â¶ÇÊûúÂ∏åÊúõËøõ‰∏ÄÊ≠•Êé¢Á¥¢NotionÁöÑÂäüËÉΩÔºåÊ¨¢ËøéË¥≠‰π∞„Ää[NotionÁ¨îËÆ∞‰ªéÂÖ•Èó®Âà∞Á≤æÈÄöËøõÈò∂ËØæÁ®ã](https://docs.tangly1024.com/article/notion-tutorial)„Äã

# NotionNext

&lt;p&gt;
  &lt;a aria-label=&quot;GitHub commit activity&quot; href=&quot;https://github.com/tangly1024/NotionNext/commits/main&quot; title=&quot;GitHub commit activity&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/commit-activity/m/tangly1024/NotionNext?style=for-the-badge&quot;/&gt;
  &lt;/a&gt;
  &lt;a aria-label=&quot;GitHub contributors&quot; href=&quot;https://github.com/tangly1024/NotionNext/graphs/contributors&quot; title=&quot;GitHub contributors&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/contributors/tangly1024/NotionNext?color=orange&amp;style=for-the-badge&quot;/&gt;
  &lt;/a&gt;
  &lt;a aria-label=&quot;Build status&quot; href=&quot;#&quot; title=&quot;Build status&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/deployments/tangly1024/NotionNext/Production?logo=Vercel&amp;style=for-the-badge&quot;/&gt;
  &lt;/a&gt;
  &lt;a aria-label=&quot;Powered by Vercel&quot; href=&quot;https://vercel.com?utm_source=Craigary&amp;utm_campaign=oss&quot; title=&quot;Powered by Vercel&quot;&gt;
    &lt;img src=&quot;https://www.datocms-assets.com/31049/1618983297-powered-by-vercel.svg&quot; height=&quot;28&quot;/&gt;
  &lt;/a&gt;
&lt;/p&gt;

‰∏≠ÊñáÊñáÊ°£ | [README in English](./README_EN.md)

&lt;hr/&gt;

‰∏Ä‰∏™‰ΩøÁî® NextJS + Notion API ÂÆûÁé∞ÁöÑÔºåÈÉ®ÁΩ≤Âú® Vercel ‰∏äÁöÑÈùôÊÄÅÂçöÂÆ¢Á≥ªÁªü„ÄÇ‰∏∫NotionÂíåÊâÄÊúâÂàõ‰ΩúËÄÖËÆæËÆ°„ÄÇ

ÊîØÊåÅÂ§öÁßçÈÉ®ÁΩ≤ÊñπÊ°à

## È¢ÑËßàÊïàÊûú

Âú®Á∫øÊºîÁ§∫Ôºö[https://preview.tangly1024.com/](https://preview.tangly1024.com/) ÔºåÁÇπÂáªÂ∑¶‰∏ãËßíÊåÇ‰ª∂ÂèØ‰ª•ÂàáÊç¢‰∏ªÈ¢òÔºåÊ≤°ÊâæÂà∞ÂñúÊ¨¢ÁöÑ‰∏ªÈ¢òÔºü[Ë¥°ÁåÆ](/CONTRIBUTING.md)‰∏Ä‰∏™Âêß~

| Next                                                                                                  | Medium                                                                                                      | Hexo                                                                                                  | Fukasawa                                                                                                          |
| ----------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------------------------------- |
| &lt;img src=&#039;./docs/theme-next.png&#039; width=&#039;300&#039;/&gt; [È¢ÑËßàNEXT](https://preview.tangly1024.com/?theme=next) | &lt;img src=&#039;./docs/theme-medium.png&#039; width=&#039;300&#039;/&gt; [È¢ÑËßàMEDIUM](https://preview.tangly1024.com/?theme=medium) | &lt;img src=&#039;./docs/theme-hexo.png&#039; width=&#039;300&#039;/&gt; [È¢ÑËßàHEXO](https://preview.tangly1024.com/?theme=hexo) | &lt;img src=&#039;./docs/theme-fukasawa.png&#039; width=&#039;300&#039;/&gt; [È¢ÑËßàFUKASAWA](https://preview.tangly1024.com/?theme=fukasawa) |

## Ëá¥Ë∞¢

ÊÑüË∞¢Craig HartÂèëËµ∑ÁöÑNobeliumÈ°πÁõÆ

&lt;table&gt;&lt;tr align=&quot;left&quot;&gt;
  &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/craigary&quot; title=&quot;Craig Hart&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/10571717&quot; width=&quot;64px;&quot;alt=&quot;Craig Hart&quot;/&gt;&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;https://github.com/craigary&quot; title=&quot;Craig Hart&quot;&gt;Craig Hart&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;

## Ë¥°ÁåÆËÄÖ

&lt;table&gt;
  &lt;tr align=&quot;left&quot;&gt;
  &lt;td align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/tangly1024&quot; style=&quot;display:inline-block;width:80px&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/15920488&quot; width=&quot;64px;&quot;alt=&quot;tangly1024&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;tangly1024&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;https://github.com/tangly1024/NotionNext/commits?author=tangly1024&quot; title=&quot;Owner&quot; &gt;üé´ üîß üêõ&lt;/a&gt;
  &lt;/td&gt; 
    
  &lt;td align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://github.com/uWayLu&quot;  style=&quot;display:inline-block;width:80px&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/21689326&quot; width=&quot;64px;&quot; alt=&quot;uWayLu&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;uWayLu&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;https://github.com/tangly1024/NotionNext/commits?author=uWayLu&quot; title=&quot;uWayLu&quot; &gt;üîß üêõ&lt;/a&gt;
  &lt;/td&gt;
    
  &lt;td align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://github.com/txs&quot; style=&quot;display:inline-block;width:80px&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/554329&quot; width=&quot;64px;&quot; alt=&quot;txs&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;txs&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;https://github.com/tangly1024/NotionNext/commits?author=txs&quot; title=&quot;txs&quot; &gt;üîß üêõ&lt;/a&gt;
  &lt;/td&gt;

  &lt;td align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://github.com/yuzhanglong&quot; style=&quot;display:inline-block;width:80px&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/56540811&quot; width=&quot;64px;&quot; alt=&quot;yuzhanglong&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;yuzhanglong&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;https://github.com/tangly1024/NotionNext/commits?author=yuzhanglong&quot; title=&quot;yuzhanglong&quot; &gt;üîß üêõ&lt;/a&gt;
  &lt;/td&gt; 
    
  &lt;td align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://github.com/Hscpro&quot; style=&quot;display:inline-block;width:80px&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/13926044&quot; width=&quot;64px;&quot; alt=&quot;Hscpro&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;Hscpro&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;https://github.com/tangly1024/NotionNext/commits?author=Hscpro&quot; title=&quot;Hscpro&quot; &gt;üîß üêõ&lt;/a&gt;
  &lt;/td&gt; 
    
  &lt;td align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://github.com/JensonMiao&quot; style=&quot;display:inline-block;width:80px&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/46488783&quot; width=&quot;64px;&quot; alt=&quot;JensonMiao&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;JensonMiao&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;https://github.com/tangly1024/NotionNext/commits?author=JensonMiao&quot; title=&quot;JensonMiao&quot; &gt;üîß üêõ&lt;/a&gt;
  &lt;/td&gt; 
  
  &lt;td align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://github.com/haixin1225&quot; style=&quot;display:inline-block;width:80px&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/28828438&quot; width=&quot;64px;&quot;  alt=&quot;haixin1225&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;haixin1225&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;https://github.com/tangly1024/NotionNext/commits?author=haixin1225&quot; title=&quot;haixin1225&quot; &gt;üîß üêõ&lt;/a&gt;
  &lt;/td&gt;

  &lt;td align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://github.com/mouyase&quot; style=&quot;display:inline-block;width:80px&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/7844572&quot; width=&quot;64px;&quot;  alt=&quot;mouyase&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;mouyase&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;https://github.com/tangly1024/NotionNext/commits?author=mouyase&quot; title=&quot;mouyase&quot; &gt;üîß üêõ&lt;/a&gt;
  &lt;/td&gt;
  
  &lt;td align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://github.com/qfdk&quot; style=&quot;display:inline-block;width:80px&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/2404478&quot; width=&quot;64px;&quot;  alt=&quot;qfdk&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;qfdk&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;https://github.com/tangly1024/NotionNext/commits?author=qfdk&quot; title=&quot;qfdk&quot; &gt;üîß üêõ&lt;/a&gt;
  &lt;/td&gt;
  
  &lt;td align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://github.com/ifyz&quot; style=&quot;display:inline-block;width:80px&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/118271360&quot; width=&quot;64px;&quot;  alt=&quot;ifyz&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;ifyz&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/tangly1024/NotionNext/commits?author=ifyz&quot; title=&quot;ifyz&quot; &gt;üîß üêõ&lt;/a&gt;
  &lt;/td&gt;

  &lt;td align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://github.com/liqun98&quot; style=&quot;display:inline-block;width:80px&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/71168966&quot; width=&quot;64px;&quot;  alt=&quot;Liqun Zhao&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;Liqun Zhao&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;https://github.com/tangly1024/NotionNext/commits?author=liqun98&quot; title=&quot;liqun98&quot; &gt;üîß üêõ&lt;/a&gt;
  &lt;/td&gt;

  &lt;td align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://github.com/Ylarod&quot; style=&quot;display:inline-block;width:80px&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/30978685&quot; width=&quot;64px;&quot;  alt=&quot;Ylarod&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;Ylarod&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;https://github.com/tangly1024/NotionNext/commits?author=Ylarod&quot; title=&quot;Ylarod&quot; &gt;üîß üêõ&lt;/a&gt;
  &lt;/td&gt;

  &lt;td align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://github.com/lifeafter619&quot; style=&quot;display:inline-block;width:80px&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/65111206&quot; width=&quot;64px;&quot;  alt=&quot;Etherrreal.&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;Etherrreal.&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;https://github.com/tangly1024/NotionNext/commits?author=lifeafter619&quot; title=&quot;Etherrreal.&quot; &gt;üîß üêõ&lt;/a&gt;
  &lt;/td&gt;
  
  &lt;td align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/ykxkykx&quot; style=&quot;display:inline-block;width:80px&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/17985993&quot; width=&quot;64px;&quot;  alt=&quot;Joshua Astray&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;Joshua Astray&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;https://github.com/tangly1024/NotionNext/commits?author=ykxkykx&quot; title=&quot;ykxkykx&quot; &gt;üîß üêõ&lt;/a&gt;
  &lt;/td&gt;

  &lt;td align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://github.com/Vixcity&quot; style=&quot;display:inline-block;width:80px&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/57704177&quot; width=&quot;64px;&quot;  alt=&quot;Vixcity&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;Vixcity&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;https://github.com/tangly1024/NotionNext/commits?author=Vixcity&quot; title=&quot;Vixcity&quot; &gt;üîß üêõ&lt;/a&gt;
  &lt;/td&gt;

  &lt;td align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://github.com/ipatpat&quot; style=&quot;display:inline-block;width:80px&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/39089551&quot; width=&quot;64px;&quot;  alt=&quot;ipatpat&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;ipatpat&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;https://github.com/tangly1024/NotionNext/commits?author=ipatpat&quot; title=&quot;ipatpat&quot; &gt;üîß üêõ&lt;/a&gt;
  &lt;/td&gt;

  &lt;td align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://github.com/xloong&quot; style=&quot;display:inline-block;width:80px&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/8479955&quot; width=&quot;64px;&quot;  alt=&quot;xloong&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;xloong&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;https://github.com/tangly1024/NotionNext/commits?author=xloong&quot; title=&quot;xloong&quot; &gt;üîß üêõ&lt;/a&gt;
  &lt;/td&gt;

  &lt;td align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://github.com/expoli&quot; style=&quot;display:inline-block;width:80px&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/31023767&quot; width=&quot;64px;&quot;  alt=&quot;expoli&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;expoli&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;https://github.com/tangly1024/NotionNext/commits?author=expoli&quot; title=&quot;expoli&quot; &gt;üîß üêõ&lt;/a&gt;
  &lt;/td&gt;

  &lt;td align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://github.com/SuperHuangXu&quot; style=&quot;display:inline-block;width:80px&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/14816052&quot; width=&quot;64px;&quot;  alt=&quot;SuperHuangXu&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;bUBBLE&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;https://github.com/tangly1024/NotionNext/commits?author=SuperHuangXu&quot; title=&quot;SuperHuangXu&quot; &gt;üîß üêõ&lt;/a&gt;
  &lt;/td&gt;

  &lt;td align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://github.com/Pylogmon&quot; style=&quot;display:inline-block;width:80px&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/59004461&quot; width=&quot;64px;&quot;  alt=&quot;Pylogmon&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;Ê¥æ‰∫Ü‰∏™Ëêå &lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;https://github.com/tangly1024/NotionNext/commits?author=Pylogmon&quot; title=&quot;Pylogmon&quot; &gt;üîß üêõ&lt;/a&gt;
  &lt;/td&gt;
  
  &lt;td align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://github.com/SkysCrystal&quot; style=&quot;display:inline-block;width:80px&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/49473463&quot; width=&quot;64px;&quot;  alt=&quot;SkysCrystal&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;Simon Shi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;https://github.com/tangly1024/NotionNext/commits?author=SkysCrystal&quot; title=&quot;SkysCrystal&quot; &gt;üîß üêõ&lt;/a&gt;
  &lt;/td&gt;
  
  &lt;td align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://github.com/siygle&quot; style=&quot;display:inline-block;width:80px&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/173408&quot; width=&quot;64px;&quot;  alt=&quot;S.Y. Lee&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;S.Y. Lee&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;https://github.com/tangly1024/NotionNext/commits?author=siygle&quot; title=&quot;siygle&quot; &gt;üîß üêõ&lt;/a&gt;
  &lt;/td&gt;

  &lt;td align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://github.com/fighting-bug&quot; style=&quot;display:inline-block;width:80px&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/56441589&quot; width=&quot;64px;&quot;  alt=&quot;fighting-buf&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;fighting-buf&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;https://github.com/tangly1024/NotionNext/commits?author=fighting-bug&quot; title=&quot;fighting-buf&quot; &gt;üîß üêõ&lt;/a&gt;
  &lt;/td&gt;

  &lt;td align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://github.com/cliouo&quot; style=&quot;display:inline-block;width:80px&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/71540889&quot; width=&quot;64px;&quot;  alt=&quot;cliouo&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;cliouo&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;https://github.com/tangly1024/NotionNext/commits?author=cliouo&quot; title=&quot;cliouo&quot; &gt;üîß üêõ&lt;/a&gt;
  &lt;/td&gt;
  
  &lt;td align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://github.com/sudeakq&quot; style=&quot;display:inline-block;width:80px&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/102792219&quot; width=&quot;64px;&quot;  alt=&quot;Sude Akg√ºn&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;Sude Akg√ºn&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;https://github.com/tangly1024/NotionNext/commits?author=sudeakq&quot; title=&quot;sudeakq&quot; &gt;üîß üêõ&lt;/a&gt;
  &lt;/td&gt;

  &lt;td align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://github.com/fgprodigal&quot; style=&quot;display:inline-block;width:80px&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/769910&quot; width=&quot;64px;&quot;  alt=&quot;Ray&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;Ray&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;https://github.com/tangly1024/NotionNext/commits?author=fgprodigal&quot; title=&quot;Ray&quot; &gt;üîß üêõ&lt;/a&gt;
  &lt;/td&gt;

  &lt;td align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://github.com/hongzzz&quot; style=&quot;display:inline-block;width:80px&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/25585061&quot; width=&quot;64px;&quot;  alt=&quot;Hongzzz&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;Hongzzz&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;https://github.com/tangly1024/NotionNext/commits?author=hongzzz&quot; title=&quot;hongzzz&quot; &gt;üîß üêõ&lt;/a&gt;
  &lt;/td&gt;

  &lt;td align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://github.com/RedhairHambagu&quot; style=&quot;display:inline-block;width:80px&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/129669334&quot; width=&quot;64px;&quot;  alt=&quot;RedhairHambagu&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;RedhairHambagu&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;https://github.com/tangly1024/NotionNext/commits?author=RedhairHambagu&quot; title=&quot;RedhairHambagu&quot; &gt;üîß üêõ&lt;/a&gt;
  &lt;/td&gt;

  &lt;td align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://github.com/Allengl&quot; style=&quot;display:inline-block;width:80px&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/58612763&quot; width=&quot;64px;&quot;  alt=&quot;Allen&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;Allen&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;https://github.com/tangly1024/NotionNext/commits?author=Allengl&quot; title=&quot;Allengl&quot; &gt;üîß üêõ&lt;/a&gt;
  &lt;/td&gt;

  &lt;td align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://github.com/zdf1230&quot; style=&quot;display:inline-block;width:80px&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/5999425&quot; width=&quot;64px;&quot;  alt=&quot;zdf1230&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;zdf&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;https://github.com/tangly1024/NotionNext/commits?author=zdf1230&quot; title=&quot;zdf1230&quot; &gt;üîß üêõ&lt;/a&gt;
  &lt;/td&gt;

  &lt;td align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://github.com/emengweb&quot; style=&quot;display:inline-block;width:80px&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/31469739&quot; width=&quot;64px;&quot;  alt=&quot;emengweb&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;emengweb&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;https://github.com/tangly1024/NotionNext/commits?author=emengweb&quot; title=&quot;emengweb&quot; &gt;üîß üêõ&lt;/a&gt;
  &lt;/td&gt;

  &lt;td align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://github.com/kitety&quot; style=&quot;display:inline-block;width:80px&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/22906933&quot; width=&quot;64px;&quot;  alt=&quot;kitety&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;kitety&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;https://github.com/tangly1024/NotionNext/commits?author=kitety&quot; title=&quot;kitety&quot; &gt;üîß üêõ&lt;/a&gt;
  &lt;/td&gt;

 &lt;td align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://github.com/jxpeng98&quot; style=&quot;display:inline-block;width:80px&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/83734772&quot; width=&quot;64px;&quot;  alt=&quot; Jiaxin Peng&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt; Jiaxin Peng&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;https://github.com/tangly1024/NotionNext/commits?author=jxpeng98&quot; title=&quot;jxpeng98&quot; &gt;üîß üêõ&lt;/a&gt;
  &lt;/td&gt;

&lt;/tr&gt;
&lt;/table&gt;

## ÂºïÁî®ÊäÄÊúØ

- **Ê°ÜÊû∂**: [Next.js](https://nextjs.org)
- **Ê†∑Âºè**: [Tailwind CSS](https://www.tailwindcss.cn/)
- **Ê∏≤Êüì**: [React-notion-x](https://github.com/NotionX/react-notion-x)
- **ËØÑËÆ∫**: [Twikoo](https://github.com/imaegoo/twikoo), [Giscus](https://giscus.app/zh-CN), [Gitalk](https://gitalk.github.io), [Cusdis](https://cusdis.com), [Utterances](https://utteranc.es)
- **ÂõæÊ†á**: [Fontawesome](https://fontawesome.com/v6/icons/)

## üîó ÂèãÊÉÖÈìæÊé•

- [Elog](https://github.com/LetTTGACO/elog) Markdown ÊâπÈáèÂØºÂá∫Â∑•ÂÖ∑„ÄÅÂºÄÊîæÂºèË∑®Âπ≥Âè∞ÂçöÂÆ¢Ëß£ÂÜ≥ÊñπÊ°àÔºåÈöèÊÑèÁªÑÂêàÂÜô‰ΩúÂπ≥Âè∞(ËØ≠ÈõÄ/Notion/FlowUs/È£û‰π¶)ÂíåÂçöÂÆ¢Âπ≥Âè∞(Hexo/Vitepress/Halo/Confluence/WordPressÁ≠â)

## License

The MIT License.

## Star History

[![Star History Chart](https://api.star-history.com/svg?repos=tangly1024/NotionNext&amp;type=Date)](https://star-history.com/#tangly1024/NotionNext&amp;Date)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[vercel/next.js]]></title>
            <link>https://github.com/vercel/next.js</link>
            <guid>https://github.com/vercel/next.js</guid>
            <pubDate>Fri, 14 Mar 2025 17:49:17 GMT</pubDate>
            <description><![CDATA[The React Framework]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/vercel/next.js">vercel/next.js</a></h1>
            <p>The React Framework</p>
            <p>Language: JavaScript</p>
            <p>Stars: 130,183</p>
            <p>Forks: 27,890</p>
            <p>Stars today: 276 stars this week</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[jgraph/drawio-desktop]]></title>
            <link>https://github.com/jgraph/drawio-desktop</link>
            <guid>https://github.com/jgraph/drawio-desktop</guid>
            <pubDate>Fri, 14 Mar 2025 17:49:16 GMT</pubDate>
            <description><![CDATA[Official electron build of draw.io]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/jgraph/drawio-desktop">jgraph/drawio-desktop</a></h1>
            <p>Official electron build of draw.io</p>
            <p>Language: JavaScript</p>
            <p>Stars: 53,160</p>
            <p>Forks: 5,178</p>
            <p>Stars today: 266 stars this week</p>
            <h2>README</h2><pre>About
----- 

**drawio-desktop** is a diagramming desktop app based on [Electron](https://electronjs.org/) that wraps the [core draw.io editor](https://github.com/jgraph/drawio).

Download built binaries from the [releases section](https://github.com/jgraph/drawio-desktop/releases).

**Can I use this app for free?** Yes, under the apache 2.0 license. If you don&#039;t change the code and accept it is provided &quot;as-is&quot;, you can use it for any purpose.

Security
--------

draw.io Desktop is designed to be completely isolated from the Internet, apart from the update process. This checks github.com at startup for a newer version and downloads it from an AWS S3 bucket owned by Github. All JavaScript files are self-contained, the Content Security Policy forbids running remotely loaded JavaScript.

No diagram data is ever sent externally, nor do we send any analytics about app usage externally. This means certain functionality for which we do not have a JavaScript implementation do not work in the Desktop build, namely .vsd and Gliffy import.

Security and isolating the app are the primarily objectives of draw.io desktop. If you ask for anything that involves external connections enabled in the app by default, the answer will be no.

Support
-------

Support is provided on a reasonable business constraints basis, but without anything contractually binding. All support is provided via this repo. There is no private ticketing support for non-paying users.

Purchasing draw.io for Confluence or Jira does not entitle you to commercial support for draw.io desktop, unless you have a paid advanced (premium) edition of draw.io for Confluence Cloud.

Developing
----------

**draw.io** is a git submodule of **drawio-desktop**. To get both you need to clone recursively:

`git clone --recursive https://github.com/jgraph/drawio-desktop.git`

To run this:
1. `npm install` (in the root directory of this repo)
2. export DRAWIO_ENV=dev if you want to develop/debug in dev mode.
3. `npm start` _in the root directory of this repo_ runs the app. For debugging, use `npm start --enable-logging`.

Note: If a symlink is used to refer to drawio repo (instead of the submodule), then symlink the `node_modules` directory inside `drawio/src/main/webapp` also.

To release:
1. Update the draw.io sub-module and push the change. Add version tag before pushing to origin.
2. Wait for the builds to complete (https://travis-ci.org/jgraph/drawio-desktop and https://ci.appveyor.com/project/davidjgraph/drawio-desktop)
3. Go to https://github.com/jgraph/drawio-desktop/releases, edit the preview release.
4. Download the windows exe and windows portable, sign them using `signtool sign /a /tr http://rfc3161timestamp.globalsign.com/advanced /td SHA256 c:/path/to/your/file.exe`
5. Re-upload signed file as `draw.io-windows-installer-x.y.z.exe` and `draw.io-windows-no-installer-x.y.z.exe`
6. Add release notes
7. Publish release

*Note*: In Windows release, when using both x64 and is32 as arch, the result is one big file with both archs. This is why we split them.

Local Storage and Session Storage is stored in the AppData folder:

- macOS: `~/Library/Application Support/draw.io`
- Windows: `C:\Users\&lt;USER-NAME&gt;\AppData\Roaming\draw.io\`

Not open-contribution
---------------------

draw.io is closed to contributions (unless a maintainer permits it, which is extremely rare).

The level of complexity of this project means that even simple changes 
can break a _lot_ of other moving parts. The amount of testing required 
is far more than it first seems. If we were to receive a PR, we&#039;d have 
to basically throw it away and write it how we want it to be implemented.

We are grateful for community involvement, bug reports, &amp; feature requests. We do
not wish to come off as anything but welcoming, however, we&#039;ve
made the decision to keep this project closed to contributions for 
the long term viability of the project.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[pollinations/pollinations]]></title>
            <link>https://github.com/pollinations/pollinations</link>
            <guid>https://github.com/pollinations/pollinations</guid>
            <pubDate>Fri, 14 Mar 2025 17:49:15 GMT</pubDate>
            <description><![CDATA[Free Open-Source Image and Text Generation]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/pollinations/pollinations">pollinations/pollinations</a></h1>
            <p>Free Open-Source Image and Text Generation</p>
            <p>Language: JavaScript</p>
            <p>Stars: 1,174</p>
            <p>Forks: 126</p>
            <p>Stars today: 161 stars this week</p>
            <h2>README</h2><pre># [Pollinations.AI](https://pollinations.ai)

*Your Engine for Personalized Synthetic Media*

## üÜï Latest News

- **üí≤ Support Us** - You can now support us with our new **Tip Us** button. Optionally connect your Discord account to **Ko-Fi** to get premium Discord roles!
- **üéµ Audio Generation** - New text-to-speech and speech-to-text capabilities are now available! Try the `openai-audio` model - see our [API documentation](APIDOCS.md#audio-generation-api) for details.
- **[Pollinations.DIY](https://pollinations.diy)** - Our newest product! A browser-based development environment for building AI-powered applications with Pollinations services.
- **New Models** - Gemini 2.0 Flash and Gemini 2.0 Flash Thinking models are now available on [text.pollinations.ai/models](https://text.pollinations.ai/models)!

## üÜï NEWS: AI Code Assistant

We&#039;re excited to announce MentatBot, the autonomous AI coding assistant that implements new features directly from GitHub issues! Simply [create an issue](https://github.com/pollinations/pollinations/issues/new) describing what you&#039;d like to see, and MentatBot will analyze and implement it. Learn more about [MentatBot](https://mentat.ai/).

[![Pollinations.AI Logo](https://pollinations.ai/p/Pollinations.AI_logo_that_looks_cool_on_black_background?width=3000&amp;height=1000&amp;nologo=true&amp;seed=-1)](https://pollinations.ai/p/Pollinations.AI_logo_that_looks_cool_on_black_background?width=3000&amp;height=1000&amp;nologo=true&amp;seed=-1)

## üåü Introduction

[Pollinations.AI](https://pollinations.ai) is an open-source gen AI startup based in Berlin, providing the most easy-to-use, free text and image generation API available. No signups or API keys required. We prioritize your privacy with zero data storage and completely anonymous usage.

## üöÄ Key Features

- üîì **100% Open Source**
- üÜì **_Free to use_**
- üîí **Simplicity and privacy:** No logins, no keys, no data stored
- üñºÔ∏è **Embed like any normal image or text**
- üéµ **Audio generation:** Text-to-speech and speech-to-text capabilities
- üåç Over **50,000 active users** and &gt; **_20 million images generated per month_**
- ü§ù Used by various **open-source LLMs**, **bots**, and **communities**
- üé£ **_Easy-to-use React hooks_** ([React Hooks Examples](https://react-hooks.pollinations.ai/))
- ü§ñ **Autonomous Development:** Features implemented by our MentatBot coding assistant through GitHub issues

&lt;a href=&quot;https://star-history.com/#pollinations/pollinations&amp;Date&quot;&gt;
 &lt;picture&gt;
   &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://api.star-history.com/svg?repos=pollinations/pollinations&amp;type=Date&amp;theme=dark&quot; width=&quot;600&quot; /&gt;
   &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://api.star-history.com/svg?repos=pollinations/pollinations&amp;type=Date&quot; width=&quot;600&quot; /&gt;
   &lt;img alt=&quot;Star History Chart&quot; src=&quot;https://api.star-history.com/svg?repos=pollinations/pollinations&amp;type=Date&quot; width=&quot;600&quot; /&gt;
 &lt;/picture&gt;
&lt;/a&gt;

## üöÄ Getting Started

### Image Generation

1. Visit [https://pollinations.ai](https://pollinations.ai)
2. Type your description in the text box
3. Click &quot;Generate&quot; and watch the magic happen!

### Text Generation

1. Visit [https://text.pollinations.ai](https://text.pollinations.ai)
2. Start chatting with the AI

### Audio Generation

1. Use the `openai-audio` model with our API
2. Generate speech from text or transcribe audio to text

For more advanced usage, check out our [API documentation](APIDOCS.md).

## üñ•Ô∏è How to Use

### Web Interface

Our web interface is user-friendly and doesn&#039;t require any technical knowledge. Simply visit [https://pollinations.ai](https://pollinations.ai) and start creating!

### API

Use our API directly in your browser or applications:

    https://pollinations.ai/p/conceptual_isometric_world_of_pollinations_ai_surreal_hyperrealistic_digital_garden

Replace the description with your own, and you&#039;ll get a unique image based on your words!

## üé® Examples

### Image Generation

Here&#039;s an example of a generated image:

[![Conceptual Isometric World](https://pollinations.ai/p/3d_wireframe_blueprint_for_the_prompt_conceptual%20isometric%20world%20of%20pollinations%20ai%20surreal%20hyperrealistic%20digital%20garden?width=2000&amp;height=500&amp;nologo=true&amp;seed=-1)](https://pollinations.ai/p/3d_wireframe_blueprint_for_the_prompt_conceptual%20isometric%20world%20of%20pollinations%20ai%20surreal%20hyperrealistic%20digital%20garden?width=2000&amp;height=500&amp;nologo=true&amp;seed=-1)

Python code to download the generated image:

    import requests

    def download_image(prompt):
        url = f&quot;https://pollinations.ai/p/{prompt}&quot;
        response = requests.get(url)
        with open(&#039;generated_image.jpg&#039;, &#039;wb&#039;) as file:
            file.write(response.content)
        print(&#039;Image downloaded!&#039;)

    download_image(&quot;conceptual_isometric_world_of_pollinations_ai_surreal_hyperrealistic_digital_garden&quot;)

### Text Generation

To generate text, use this URL:

    https://text.pollinations.ai/What%20is%20artificial%20intelligence?

### Audio Generation

To generate audio from text, use this URL:

    https://text.pollinations.ai/Welcome%20to%20Pollinations?model=openai-audio&amp;voice=nova

## üõ†Ô∏è Integration

### React Hooks

We offer React hooks for easy integration. Example usage:

    import React from &#039;react&#039;;
    import { usePollinationsImage, usePollinationsText } from &#039;@pollinations/react&#039;;
    import ReactMarkdown from &#039;react-markdown&#039;;

    const AIGeneratedContent = () =&gt; {
      const imageUrl = usePollinationsImage(&quot;Beautiful landscape of Paris with Eiffel Tower&quot;, { width: 800, height: 600, seed: 42 });
      const markdown = usePollinationsText(&quot;Write a brief travel guide for Paris, including top attractions and local cuisine in markdown&quot;, { seed: 42 });

      return (
        &lt;div&gt;
          &lt;h2&gt;AI-Generated Travel Guide&lt;/h2&gt;
          &lt;img src={imageUrl} alt=&quot;AI Generated&quot; /&gt;
          {markdown ? (
            &lt;ReactMarkdown&gt;{markdown}&lt;/ReactMarkdown&gt;
          ) : (
            &lt;p&gt;Loading markdown content...&lt;/p&gt;
          )}
        &lt;/div&gt;
      );
    };

    export default AIGeneratedContent;

Check out our [Pollinations React Hooks](./pollinations-react/README.md) for more details.

## Architecture
```mermaid
graph LR
    Q[Bots - Discord, Telegram, WhatsApp] --&gt; L1
    
    N[30+ Mobile and Web Apps] --&gt; L1
    N --&gt; L2
    
    A[pollinations.ai Web Frontend] --&gt; L1
    A --&gt; L2
    
    R[AI Agents - Qwen, Sillytavern, ...] --&gt; L1
    
    L1[Image CDN] --&gt; B
    L2[Text CDN] --&gt; C
    
    B[image.pollinations.ai - AWS EC2 CPU] --&gt; F[Azure OpenAI - Prompt Enhancing]
    B --&gt; S[LlamaGuard - Safety Checker]
    B --&gt; M[llmplayground.net - Custom FLUX models]
    F --&gt; E[Translation Service - 1 GPU VM]
    E --&gt; D[FLUX image generation model - 2-6 GPU VMs on AWS]
    
    C[text.pollinations.ai - AWS EC2 CPU] --&gt; P[karma.yt - Realtime News]
    C --&gt; SC[Scaleway API]
    C --&gt; DS[Deepseek API]
    C --&gt; G[Azure-hosted Serverless LLMs]
    C --&gt; CF[Cloudflare AI]
    SC --&gt; MI[Mistral Models]
    SC --&gt; QW[Qwen Models]
    SC --&gt; LL[Llama Models]
    DS --&gt; DM[Deepseek Models]
    G --&gt; H[OpenAI]
    G --&gt; K[Claude]
    CF --&gt; CFM[Llama &amp; Deepseek Models]
```

## Projects Using Pollinations.AI

Pollinations.AI is used in various projects, including:

### LLM Integrations

| Project | Description | Creator | Links |
|---------|-------------|---------|-------|
| üÜï AI Chat Assistant | A comprehensive AI Chat Assistant designed to provide users with an interactive chat interface that supports both text and image generation. Features multiple AI models (GPT-4o, Claude, Qwen-Coder, Llama, Mistral, etc.), image generation from text prompts, image-to-image processing, and a responsive UI with desktop and mobile support | @_dr_misterio_ | [Website](https://seed-ashy.vercel.app/) |
| üÜï AI Unlimited Customizable Feature Module üá®üá≥ | This project provides a free API interface supporting various text and image generation models, including OpenAI&#039;s GPT-4, Gemini 2.0, etc. Users can access these models without an API key to perform text generation, image generation, translation, text polishing, and more | [S_S](https://linux.do/u/s_s/summary) | [Website](https://getquicker.net/Sharedaction?code=9ac738ed-a4b2-4ded-933c-08dd5f710a8b&amp;fromMyShare=true) |
| üÜï PrivatePollenAI | A privacy-focused chat assistant app that securely stores data locally, integrates with PollinationAI for text and image generation, features a minimalistic UI, and allows users to choose models and write their own system instructions | [tenacious_humming_bird](https://discordapp.com/users/tenacious_humming_bird) | [Website](https://mmojocoder.github.io/PrivatePollenAI/chat.html), [GitHub](https://github.com/MMojoCoder/PrivatePollenAI) |
| üÜï Zelos AI image generator | It uses Pollinations for both prompt enhancing and image generation, it was a easy to make project due to pollinations services being easy to use | [Roblox Profile](https://www.roblox.com/users/4361935306/profile) | [Website](https://websim.ai/@ISWEARIAMNOTADDICTEDTOPILLOW/ai-image-prompt-generator) |
| üÜï MiReXa AI | A state-of-the-art chatbot integrating multiple LLMs with advanced features including audio generation, image generation, mathematical proficiency, and real-time web search | withthatway | [Website](https://mirexa.vercel.app) |
| Pollinations Chat | Pollinations&#039; integrated AI for text and images, totally free and unlimited | @adrianoprogramer | [Website](https://websim.ai/@AdrianoDev1/pollinations-ai-assistant/4), [Instagram](https://www.instagram.com/adrianop_761?igsh=MmxwNnRsajVnZmMy) |
| LobeChat | An open-source, modern-design ChatGPT/LLMs UI/Framework with speech-synthesis, multi-modal, and extensible plugin system | - | [Website](https://lobehub.com/plugins/pollinations-drawing), [GitHub](https://github.com/lobehub/lobe-chat) |
| Qwen-Agent | A framework for developing agentic LLM applications | - | [GitHub](https://github.com/QwenLM/Qwen-Agent) |
| SillyTavern | An LLM frontend for power users. Pollinations permits it to generate images | - | [Docs](https://docs.sillytavern.app/extensions/stable-diffusion/), [GitHub](https://github.com/SillyTavern/SillyTavern) |
| FlowGPT | Generate images on-demand with ChatGPT | - | [Website](https://flowgpt.com/p/instant-image-generation-with-chatgpt-and-pollinationsai) |
| gpt4free | The official gpt4free repository - various collection of powerful language models | xtekky | [GitHub](https://github.com/xtekky/gpt4free) |
| Unity AI Lab | A specialized uncensored LLM model built on Mistral Large, focused on unrestricted conversations | - | [Website](https://blog.unityailab.com/unity.html) |
| DynaSpark AI | A versatile AI assistant with advanced image and text generation capabilities | Th3-C0der | [Website](https://dynaspark.onrender.com), [GitHub](https://github.com/Th3-C0der) |


### Creative &amp; Interactive Applications

| App | Description | Creator | Links |
|-----|-------------|---------|-------|
| üÜï PromptPix (Android) | An AI-powered image generation platform for Android designed to create stunning visuals from text prompts. Features dynamic image generation as users scroll, save to gallery, favorites, and a user-friendly interface | @taylorsnupe | [Expo](https://expo.dev/accounts/aminmusah/projects/image-generator/builds/ed32c5d0-83c0-416b-889f-e36b997dd706), [GitHub](https://github.com/AminMusah/ai-image-generator) |
| üÜï AIÂÑøÁ´•ÊïÖ‰∫ã üá®üá≥ | Âü∫‰∫éÊ≠§È°πÁõÆ ÊûÑÂª∫ÊúâË∂£ÁöÑÂ≠©Â≠êÊïÖ‰∫ã‰π¶Â∫îÁî®ÊºîÁ§∫ (Based on this project, build an interesting children&#039;s storybook application demo) | MZ | [Website](https://kidss.netlify.app/) |
| üÜï Herramientas IA | Tools designed with Pollinations.AI and the DescartesJS editor, including tools from other Pollinations.AI community members | @juanrivera126 | [Website](https://proyectodescartes.org/descartescms/herramientas-ia) |
| üÜï AvatarStudio | A system for creating custom characters that uses the Pollinations API for totally free and unlimited image generation | @nic-wq | [Website](https://astudio-dcae4.web.app) |
| üÜï Musify - AI Enhanced Music Streaming | Musify is your AI-powered music buddy, making your jam sessions smarter and more fun. It is powered by pollinations api, it offers a slick and intuitive music experience with features like AI Music Assistant, Voice Commands, AI Playlist Creator, and Responsive Design. | @Sugamdeol | [Website](https://musify-sd.vercel.app/) |
| üÜï image1gen | Website to easily create images via pollinations.ai API | @oopshnik | [Website](https://image1gen.streamlit.app/), [GitHub](https://github.com/oopshnik/image1gen), [HuggingFace](https://huggingface.co/spaces/oopshnik/image_gen) |
| üÜï AI Image Generator | A web-based AI image generator powered by Pollinations.ai, featuring multi-model support, customizable parameters, and real-time preview | @hrisjeui | [Website](https://fvai.infinityfreeapp.com/my-apps/pollicb09.html), [GitHub](https://github.com/hrisjeui/Multi-text-image-model-pollinations) |
| üÜï üéµ PolliSonic Generator | An AI-driven tool that transforms text prompts using MidiJourney into MIDI-based melodies through browser oscillators | @brain.diver | [Website](https://interzone.art.br/pollisonic_generator/), [GitHub](https://github.com/rafabez/pollisonic_generator) |
| üÜï Abyss Ascending | A web-based generative interactive fiction (text adventure) set in a sci-fi underwater world | @brain.diver | [Website](https://interzone.art.br/abyss_ascending/), [GitHub](https://github.com/rafabez/abyss_ascending) |
| üÜï üéÆ Deep Saga | A text based RPG with AI-generated scene images | @jr_7_77 | [Play Store](https://play.google.com/store/apps/details?id=com.cestrian.deepsaga.android&amp;pcampaignid=pollinations) |
| [AI] Character RP (Roblox) | A popular Roblox game for AI character roleplay | @renewed | [Roblox](https://www.roblox.com/games/108463136689847/) |
| MIDIjourney | An AI-powered plugin for Ableton Live that turns text descriptions into music | KORUS Labs | [GitHub](https://github.com/korus-labs/MIDIjourney) |
| TurboReel | An open-source video generation system using AI | @pedroriosa | [Website](https://turboreelgpt.tech/), [GitHub](https://github.com/TurboReel/TurboReel_studio) |
| Rangrez AI | A web platform for inspiring, creating, and customizing designs | @saadaryf | [Website](https://rangrezai.com) |
| Infinite Tales | A Choose Your Own Adventure RPG, dynamically narrated by AI | JayJayBinks | [Website](https://infinite-tales-rpg.vercel.app/), [GitHub](https://github.com/JayJayBinks/infinite-tales-rpg) |
| StorySight | An app to help children with learning disabilities | - | [GitHub](https://github.com/abiral-manandhar/storySight) |
| StoryWeaver | Crafts personalized picture books for children | Multiple Authors | [Devpost](https://devpost.com/software/storyweaver-013xdw) |
| Sirius Cybernetics Elevator Challenge | A Hitchhiker&#039;s Guide to the Galaxy themed LLM-based elevator game | @thomash_pollinations | [Demo](https://sirius-cybernetics.pollinations.ai/), [GitHub](https://github.com/voodoohop/sirius-cybernetics-elevator-challenge) |
| POLLIPAPER | A dynamic wallpaper app that uses Pollinations AI | @intolerant0ne | [GitHub](https://github.com/Tolerable/POLLIPAPER) |
| AI PPT Maker | Create AI-powered presentations using Pollinations&#039; API | @k_ush | [Website](https://sites.google.com/view/kushai) |
| UR Imagine &amp; Chat AI | A free and limitless image generator with companion AI chat/roleplay system | withthatway | [Website](https://perchance.org/ur-imagine-ai) |
| Pollinations Gallery | A clean and simple gallery showcasing community&#039;s AI-generated images | @deng-xian-sheng | [Website](https://deng-xian-sheng.github.io/pollinations-img-page/) |
| AI-Bloom | A minimal creative showcase of AI-powered content generation | @diepdo1810 | [Website](https://ai-bloom.vercel.app/) |

### Tools &amp; Interfaces

| App | Description | Creator | Links |
|-----|-------------|---------|-------|
| üÜï Pollinations.ai Model Comparison | An interactive tool designed to compare outputs from various large language models with customizable timeout settings and real-time testing capabilities. | @dseeker | [Website](https://endemicmedia.github.io/FLARE/llm-comparison-tool/), [GitHub](https://github.com/EndemicMedia) |
| üÜï Anime AI Generation | Create professional-quality anime characters with powerful AI technology. No artistic skills required. | @shreyas281898 | [Website](https://www.animeaigeneration.com/) |
| üÜï Pollinations.DIY | A browser-based coding environment based on bolt.diy, featuring integrated Pollinations AI services, visual code editing, and project management tools | @thomash_pollinations | [Website](https://pollinations.diy), [GitHub](https://github.com/pollinations/pollinations.diy) |
| üÜï Pal Chat | An iOS app that integrates with all LLMs including Pollinations AI models in one unified simple interface | @pallavmac | [App Store](https://apps.apple.com/us/app/pal-chat-ai-chat-client/id6447545085?platform=iphone) |
| Pollinator Android App | An open-source Android app for text-to-image generation | @gaurav_87680 | [GitHub](https://github.com/g-aggarwal/Pollinator) |
| Own-AI | An AI text-to-image generator | Sujal Goswami | [Website](https://own-ai.pages.dev/), [GitHub](https://github.com/sujal-goswami/Own-AI) |
| JustBuildThings | A collection of AI tools for image generation, character chat, and writing | rasit | [Website](https://justbuildthings.com) |
| Elixpo | A web interface for easy image generation with theme selection | Ayushman Bhattacharya | [Website](https://circuit-overtime.github.io/Elixpo_ai_pollinations), [GitHub](https://github.com/Circuit-Overtime/elixpo_ai_chapter) |
| Image Gen - Uncensored Edition | A powerful image generation assistant on HuggingChat | @DeFactOfficial | [HuggingChat](https://huggingface.co/chat/assistant/66fccce0c0fafc94ab557ef2) |
| Free AI Chatbot &amp; Image Generator | A mobile app for unlimited AI chat and image generation | @andreas_11 | [Website](https://freeaichat.app) |
| JCode Website Builder | A website generator using Pollinations text API | @rtxpower | [Website](https://jcode-ai-website-bulder.netlify.app/) |
| Server Status Dashboards | Real-time monitoring dashboards for Pollinations text and image servers | @tolerantone | [Text Status](https://www.ai-ministries.com/serverstatus.html), [Image Status](https://www.ai-ministries.com/imagestatus.html) |
| Websim | A web simulation tool that integrates Pollinations.ai | @thomash | [Website](https://websim.ai/c/bXsmNE96e3op5rtUS) |

### Social Bots

| Bot | Description | Creator | Links |
|-----|-------------|---------|-------|
| üÜï Gacha | A versatile AI chat-bot and image generator powered by Pollinations.AI, featuring web search, image generation with model selection, and character-aware image generation through !webgen command | @_dr_misterio_ | [Website](https://shapes.inc/gacha-gachu/public), [Install](https://shapes.inc/gacha-gachu/install) |
| üÜï One Word | A Telegram bot for a word-matching game where players try to write the same word simultaneously, featuring image generation from game words using Pollinations.AI | @Dimaq21 | [Telegram](https://t.me/OdnoSlovoBot) |
| üÜï Titan-GPT | Free Telegram bot providing access to neural networks including image and text generation powered by Pollinations.AI | @titangpt_support | [Telegram](https://t.me/titangpt_channel) |
| Discord Bot | A Discord bot for generating images based on user prompts | @Zngzy | [Discord](https://discord.gg/D9xGg8mq3D), [GitHub](https://github.com/Zingzy/pollinations.ai-bot) |
| Telegram Bot | A Telegram bot for generating images based on user prompts | Wong Wei Hao | [Telegram](http://t.me/pollinationsbot) |
| WhatsApp Group | A WhatsApp group for image generation | @dg_karma | [Join Group](https://chat.whatsapp.com/KI37JqT5aYdL9WBYMyyjDV) |
| OpenHive | A Discord server bridging Discord and AI, featuring Beebot | @creativegpt | [Discord](https://discord.gg/Zv3SXTF5xy) |
| Anyai | A Discord bot and community for AI

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[WebGoat/WebGoat]]></title>
            <link>https://github.com/WebGoat/WebGoat</link>
            <guid>https://github.com/WebGoat/WebGoat</guid>
            <pubDate>Fri, 14 Mar 2025 17:49:14 GMT</pubDate>
            <description><![CDATA[WebGoat is a deliberately insecure application]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/WebGoat/WebGoat">WebGoat/WebGoat</a></h1>
            <p>WebGoat is a deliberately insecure application</p>
            <p>Language: JavaScript</p>
            <p>Stars: 7,342</p>
            <p>Forks: 6,117</p>
            <p>Stars today: 44 stars this week</p>
            <h2>README</h2><pre># WebGoat: A deliberately insecure Web Application

[![Build](https://github.com/WebGoat/WebGoat/actions/workflows/build.yml/badge.svg?branch=develop)](https://github.com/WebGoat/WebGoat/actions/workflows/build.yml)
[![java-jdk](https://img.shields.io/badge/java%20jdk-23-green.svg)](https://jdk.java.net/)
[![OWASP Labs](https://img.shields.io/badge/OWASP-Lab%20project-f7b73c.svg)](https://owasp.org/projects/)
[![GitHub release](https://img.shields.io/github/release/WebGoat/WebGoat.svg)](https://github.com/WebGoat/WebGoat/releases/latest)
[![Gitter](https://badges.gitter.im/OWASPWebGoat/community.svg)](https://gitter.im/OWASPWebGoat/community?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge)
[![Discussions](https://img.shields.io/github/discussions/WebGoat/WebGoat)](https://github.com/WebGoat/WebGoat/discussions)
[![Conventional Commits](https://img.shields.io/badge/Conventional%20Commits-1.0.0-%23FE5196?logo=conventionalcommits&amp;logoColor=white)](https://conventionalcommits.org)

# Introduction

WebGoat is a deliberately insecure web application maintained by [OWASP](http://www.owasp.org/) designed to teach web
application security lessons.

This program is a demonstration of common server-side application flaws. The
exercises are intended to be used by people to learn about application security and
penetration testing techniques.

**WARNING 1:** *While running this program your machine will be extremely
vulnerable to attack. You should disconnect from the Internet while using
this program.*  WebGoat&#039;s default configuration binds to localhost to minimize
the exposure.

**WARNING 2:** *This program is for educational purposes only. If you attempt
these techniques without authorization, you are very likely to get caught. If
you are caught engaging in unauthorized hacking, most companies will fire you.
Claiming that you were doing security research will not work as that is the
first thing that all hackers claim.*

![WebGoat](docs/images/webgoat.png)

# Installation instructions:

For more details check [the Contribution guide](/CONTRIBUTING.md)

## 1. Run using Docker

Already have a browser and ZAP and/or Burp installed on your machine in this case you can run the WebGoat image directly using Docker.

Every release is also published on [DockerHub](https://hub.docker.com/r/webgoat/webgoat).

```shell
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
```

For some lessons you need the container run in the same timezone. For this you can set the TZ environment variable.
E.g.

```shell
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 -e TZ=America/Boise webgoat/webgoat
```

If you want to use OWASP ZAP or another proxy, you can no longer use 127.0.0.1 or localhost. but
you can use custom host entries. For example:

```shell
127.0.0.1 www.webgoat.local www.webwolf.local
```

Then you can run the container with:

```shell
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 -e WEBGOAT_HOST=www.webgoat.local -e WEBWOLF_HOST=www.webwolf.local -e TZ=America/Boise webgoat/webgoat
```

Then visit http://www.webgoat.local:8080/WebGoat/ and http://www.webwolf.local:9090/WebWolf/

## 2. Run using Docker with complete Linux Desktop

Instead of installing tools locally we have a complete Docker image based on running a desktop in your browser. This way you only have to run a Docker image which will give you the best user experience.

```shell
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
```

## 3. Standalone

Download the latest WebGoat release from [https://github.com/WebGoat/WebGoat/releases](https://github.com/WebGoat/WebGoat/releases)

```shell
export TZ=Europe/Amsterdam # or your timezone
java -Dfile.encoding=UTF-8 -jar webgoat-2023.8.jar
```

Click the link in the log to start WebGoat.

### 3.1 Running on a different port

If for some reason you want to run WebGoat on a different port, you can do so by adding the following parameter:

```shell
java -jar webgoat-2023.8.jar --webgoat.port=8001 --webwolf.port=8002
```

For a full overview of all the parameters you can use, please check the [WebGoat properties file](webgoat-container/src/main/resources/application-{webgoat, webwolf}.properties).

## 4. Run from the sources

### Prerequisites:

* Java 17 or 21
* Your favorite IDE
* Git, or Git support in your IDE

Open a command shell/window:

```Shell
git clone git@github.com:WebGoat/WebGoat.git
```

Now let&#039;s start by compiling the project.

```Shell
cd WebGoat
git checkout &lt;&lt;branch_name&gt;&gt;
# On Linux/Mac:
./mvnw clean install

# On Windows:
./mvnw.cmd clean install

# Using docker or podman, you can than build the container locally
docker build -f Dockerfile . -t webgoat/webgoat
```

Now we are ready to run the project. WebGoat is using Spring Boot.

```Shell
# On Linux/Mac:
./mvnw spring-boot:run
# On Windows:
./mvnw.cmd spring-boot:run

```

... you should be running WebGoat on http://localhost:8080/WebGoat momentarily.

Note: The above link will redirect you to login page if you are not logged in. LogIn/Create account to proceed.

To change the IP address add the following variable to the `WebGoat/webgoat-container/src/main/resources/application.properties` file:

```
server.address=x.x.x.x
```

## 4. Run with custom menu

For specialist only. There is a way to set up WebGoat with a personalized menu. You can leave out some menu categories or individual lessons by setting certain environment variables.

For instance running as a jar on a Linux/macOS it will look like this:

```Shell
export TZ=Europe/Amsterdam # or your timezone
export EXCLUDE_CATEGORIES=&quot;CLIENT_SIDE,GENERAL,CHALLENGE&quot;
export EXCLUDE_LESSONS=&quot;SqlInjectionAdvanced,SqlInjectionMitigations&quot;
java -jar target/webgoat-2023.8-SNAPSHOT.jar
```

Or in a docker run it would (once this version is pushed into docker hub) look like this:

```Shell
docker run -d -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 -e EXCLUDE_CATEGORIES=&quot;CLIENT_SIDE,GENERAL,CHALLENGE&quot; -e EXCLUDE_LESSONS=&quot;SqlInjectionAdvanced,SqlInjectionMitigations&quot; webgoat/webgoat
```

</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[xszyou/Fay]]></title>
            <link>https://github.com/xszyou/Fay</link>
            <guid>https://github.com/xszyou/Fay</guid>
            <pubDate>Fri, 14 Mar 2025 17:49:13 GMT</pubDate>
            <description><![CDATA[fayÊòØ‰∏Ä‰∏™Â∏ÆÂä©Êï∞Â≠ó‰∫∫Ôºà2.5d„ÄÅ3d„ÄÅÁßªÂä®„ÄÅpc„ÄÅÁΩëÈ°µÔºâÊàñÂ§ßËØ≠Ë®ÄÊ®°ÂûãÔºàopenaiÂÖºÂÆπ„ÄÅdeepseekÔºâËøûÈÄö‰∏öÂä°Á≥ªÁªüÁöÑagentÊ°ÜÊû∂„ÄÇ]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/xszyou/Fay">xszyou/Fay</a></h1>
            <p>fayÊòØ‰∏Ä‰∏™Â∏ÆÂä©Êï∞Â≠ó‰∫∫Ôºà2.5d„ÄÅ3d„ÄÅÁßªÂä®„ÄÅpc„ÄÅÁΩëÈ°µÔºâÊàñÂ§ßËØ≠Ë®ÄÊ®°ÂûãÔºàopenaiÂÖºÂÆπ„ÄÅdeepseekÔºâËøûÈÄö‰∏öÂä°Á≥ªÁªüÁöÑagentÊ°ÜÊû∂„ÄÇ</p>
            <p>Language: JavaScript</p>
            <p>Stars: 10,391</p>
            <p>Forks: 1,942</p>
            <p>Stars today: 134 stars this week</p>
            <h2>README</h2><pre>
&lt;div align=&quot;center&quot;&gt;
    &lt;br&gt;
    &lt;img src=&quot;readme/icon.png&quot; alt=&quot;Fay&quot;&gt;
    &lt;h1&gt;FAY&lt;/h1&gt;
	&lt;h3&gt;FayÊï∞Â≠ó‰∫∫Ê°ÜÊû∂&lt;/h3&gt;
&lt;/div&gt;

ÔºÅÔºÅÈáçË¶ÅÈÄöÁü•ÔºöÊàë‰ª¨Â∑≤ÁªèÊääFayÁöÑ‰∏â‰∏™ÁâàÊú¨ÂêàÂπ∂Êàê1‰∏™ÔºåÂπ∂Ëá¥ÂäõÊèê‰æõÊõ¥Á®≥ÂÆöÊõ¥ÂÖ®Èù¢ÁöÑÂäüËÉΩ„ÄÇ

Êàë‰ª¨Ëá¥Âäõ‰∫éÊÄùËÄÉÈù¢ÂêëÁªàÁ´ØÁöÑÊï∞Â≠ó‰∫∫ËêΩÂú∞Â∫îÁî®ÔºåÂπ∂ÈÄöËøáÂÆåÊï¥‰ª£Á†ÅÊääÊÄùËÄÉÁªìÊûúÂëàÁé∞ÁªôÂ§ßÂÆ∂„ÄÇFayÊï∞Â≠ó‰∫∫Ê°ÜÊû∂ÔºåÂêë‰∏äÈÄÇÈÖçÂêÑÁßçÊï∞Â≠ó‰∫∫Ê®°ÂûãÊäÄÊúØÔºåÂêë‰∏ãÊé•ÂÖ•ÂêÑÂºèÂ§ßËØ≠Ë®ÄÊ®°ÂûãÔºåÂπ∂‰∏î‰æø‰∫éÊõ¥Êç¢ËØ∏Â¶ÇTTS„ÄÅASRÁ≠âÊ®°ÂûãÔºå‰∏∫ÂçïÁâáÊú∫„ÄÅapp„ÄÅÁΩëÁ´ôÊèê‰æõÂÖ®Èù¢ÁöÑÊï∞Â≠ó‰∫∫Â∫îÁî®Êé•Âè£„ÄÇ      
Êõ¥Êñ∞Êó•ÂøóÔºöhttps://qqk9ntwbcit.feishu.cn/wiki/UlbZwfAXgiKSquk52AkcibhHngg
ÊñáÊ°£Ôºöhttps://qqk9ntwbcit.feishu.cn/wiki/JzMJw7AghiO8eHktMwlcxznenIg


## **ÂäüËÉΩÁâπÁÇπ**



- ÂÆåÂÖ®ÂºÄÊ∫êÔºåÂïÜÁî®ÂÖçË¥£
- ÊîØÊåÅÂÖ®Á¶ªÁ∫ø‰ΩøÁî®
- ÂÖ®Êó∂ÊµÅÂºèÁöÑÊîØÊåÅ
- Ëá™Áî±ÂåπÈÖçÊï∞Â≠ó‰∫∫Ê®°Âûã„ÄÅÂ§ßËØ≠Ë®ÄÊ®°Âûã„ÄÅASR„ÄÅTTSÊ®°Âûã
- ÊîØÊåÅÊï∞Â≠ó‰∫∫Ëá™Âä®Êí≠Êä•Ê®°ÂºèÔºàËôöÊãüÊïôÂ∏à„ÄÅËôöÊãü‰∏ªÊí≠„ÄÅÊñ∞ÈóªÊí≠Êä•Ôºâ
- ÊîØÊåÅ‰ªªÊÑèÁªàÁ´Ø‰ΩøÁî®ÔºöÂçïÁâáÊú∫„ÄÅapp„ÄÅÁΩëÁ´ô„ÄÅÂ§ßÂ±è„ÄÅÊàêÁÜüÁ≥ªÁªüÊé•ÂÖ•Á≠â
- ÊîØÊåÅÂ§öÁî®Êà∑Â§öË∑ØÂπ∂Âèë
- Êèê‰æõÊñáÂ≠óÊ≤üÈÄöÊé•Âè£„ÄÅÂ£∞Èü≥Ê≤üÈÄöÊé•Âè£„ÄÅÊï∞Â≠ó‰∫∫Ê®°ÂûãÊé•Âè£„ÄÅÁÆ°ÁêÜÊéßÂà∂Êé•Âè£„ÄÅËá™Âä®Êí≠Êä•Êé•Âè£„ÄÅÊÑèÂõæÊé•Âè£
- ÊîØÊåÅËØ≠Èü≥Êåá‰ª§ÁÅµÊ¥ªÈÖçÁΩÆÊâßË°å
- ÊîØÊåÅËá™ÂÆö‰πâÁü•ËØÜÂ∫ì„ÄÅËá™ÂÆö‰πâÈóÆÁ≠îÂØπ„ÄÅËá™ÂÆö‰πâ‰∫∫ËÆæ‰ø°ÊÅØ
- ÊîØÊåÅÂî§ÈÜíÂèäÊâìÊñ≠ÂØπËØù
- ÊîØÊåÅÊúçÂä°Âô®ÂèäÂçïÊú∫Ê®°Âºè
- ÊîØÊåÅÊú∫Âô®‰∫∫Ë°®ÊÉÖËæìÂá∫
- ÊîØÊåÅreact agentËá™‰∏ªÂÜ≥Á≠ñÊâßË°å„ÄÅ‰∏ªÂä®ÂØπËØù
- ÊîØÊåÅÂêéÂè∞ÈùôÈªòÂêØÂä®
- ÊîØÊåÅdeepseek

###               

## **FayÊï∞Â≠ó‰∫∫Ê°ÜÊû∂**

![](readme/chat.png)

![](readme/controller.png)






## **Ê∫êÁ†ÅÂêØÂä®**


### **ÁéØÂ¢É** 
- Python 3.9„ÄÅ3.10„ÄÅ3.11„ÄÅ3.12
- Windows„ÄÅmacos„ÄÅlinux

### **ÂÆâË£Ö‰æùËµñ**

```shell
pip install -r requirements.txt
```

### **ÈÖçÁΩÆ**
+ ‰æùÁÖßËØ¥Êòé‰øÆÊîπ `./system.conf` Êñá‰ª∂

### **ÂêØÂä®**
ÂêØÂä®FayÊéßÂà∂Âô®
```shell
python main.py
```



## **Êàñdocker ÂêØÂä®**

1. ‰∏ãËΩΩÂä©ÁêÜÁâà
https://github.com/xszyou/Fay
2.  ‰øÆÊîπ `./system.conf` Êñá‰ª∂
3. Âà†Èô§requirements.txt‰∏ãpyqt5~=5.15.6

build Ôºà‰øÆÊîπÈÖçÁΩÆÊñá‰ª∂ÂêéÔºåÈúÄË¶ÅÈáçÊñ∞buildÔºâ
```shell
docker build  -t fay ./fay-assistant-edition
```
run
```shell
docker run -it --rm -p 5000:5000 -p 10001:10001 -p 10002:10002 -p 10003:10003 fay
```


## **È´òÁ∫ßÁé©Ê≥ï**

![](readme/interface.png)



### ***‰ΩøÁî®Êï∞Â≠ó‰∫∫ÔºàÈùûÂøÖÈ°ªÔºâ***

ue: https://github.com/xszyou/fay-ue5

unityÔºöhttps://qqk9ntwbcit.feishu.cn/wiki/Se9xw04hUiss00kb2Lmci1BVnM9

metahuman-streamÔºà2dÔºâÔºöhttps://qqk9ntwbcit.feishu.cn/wiki/Ik1kwO9X5iilnGkFwRhcnmtvn3e

duixÔºàandroid)Ôºöhttps://qqk9ntwbcit.feishu.cn/wiki/Ik1kwO9X5iilnGkFwRhcnmtvn3e()

aibote(windows cpuÂÖãÈöÜ‰∫∫)Ôºö[‚Ä¨‚Äç‚Ä¨‚Äç‚Å†Ôªø‚Äç‚Äç‚Äç‚ÄåÔªøÔªøhttps://qqk9ntwbcit.feishu.cn/wiki/ULaywzVRti0HXWkhCzacoSPAnIg



### ***ÈõÜÊàêÂà∞Ëá™ÂÆ∂‰∫ßÂìÅÔºàÈùûÂøÖÈ°ªÔºâ***
Êé•Âè£Ôºöhttps://qqk9ntwbcit.feishu.cn/wiki/Mcw3wbA3RiNZzwkexz6cnKCsnhh



### **ËÅîÁ≥ª**

**‰∫§ÊµÅÁæ§ÂèäËµÑÊñôÊïôÁ®ã**ÂÖ≥Ê≥®ÂÖ¨‰ºóÂè∑ **fayÊï∞Â≠ó‰∫∫**Ôºà**ËØ∑ÂÖàstarÊú¨‰ªìÂ∫ì**Ôºâ

![](readme/gzh.jpg)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
    </channel>
</rss>